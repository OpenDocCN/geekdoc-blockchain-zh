- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022D. P. BauerGetting Started with Ethereum [https://doi.org/10.1007/978-1-4842-8045-4_5](https://doi.org/10.1007/978-1-4842-8045-4_5)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家许可 APress Media，LLC，Springer Nature 的一部分 2022 D. P. Bauer Ethereum 入门
    [https://doi.org/10.1007/978-1-4842-8045-4_5](https://doi.org/10.1007/978-1-4842-8045-4_5)
- en: 5. ERC-721 Nonfungible Tokens
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ERC-721 不可替代令牌
- en: Davi Pedro Bauer^([1](#Aff2)  )(1)Campo Bom, Rio Grande do Sul, Brazil
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Davi Pedro Bauer^([1](#Aff2)) (1) 巴西南部，格兰杜州，坎波博姆
- en: A nonfungible token (NFT) is a digital asset that represents physical objects
    such as art, music, in-game items, and videos. In this chapter, I’ll show you
    how to create an NFT ERC-721 and deploy it to the Ethereum testnet network, as
    well as how to add it to your MetaMask mobile wallet.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不可替代令牌（NFT）是代表艺术品、音乐、游戏物品和视频等实物的数字资产。在本章中，我将向您展示如何创建 NFT ERC-721 并将其部署到以太坊测试网络，以及如何将其添加到您的
    MetaMask 移动钱包中。
- en: 'At the end of this chapter, you will be able to do the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将能够执行以下操作：
- en: Create a new NFT project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的 NFT 项目
- en: Configure the network to deploy on Ganache
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置网络以部署到 Ganache
- en: Configure the private key
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置私钥
- en: Create the badge image
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建徽章图像
- en: Add the badge to the local IPFS
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将徽章添加到本地 IPFS
- en: Pin the badge to a remote IPFS
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将徽章固定到远程 IPFS
- en: Create the badge metadata
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建徽章元数据
- en: Deploy the smart contract
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署智能合约
- en: Award the badge to your wallet
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将徽章授予您的钱包
- en: Check the badge on Etherscan
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Etherscan 上检查徽章
- en: Add the badge to your mobile wallet
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将徽章添加到您的移动钱包
- en: Create Your Art NFT Using Ganache and OpenZeppelin
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Ganache 和 OpenZeppelin 创建您的艺术 NFT
- en: Let’s configure your first NFT using the OpenZeppelin library and create the
    metadata that will store the token information and then deploy it to a test network.
    Finally, you will view the token in your wallet.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 OpenZeppelin 库配置您的第一个 NFT，并创建将存储令牌信息的元数据，然后将其部署到测试网络。最后，您将在您的钱包中查看令牌。
- en: Creating the Project
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建项目
- en: Create a new project using Truffle.$ truffle initInstall the OpenZeppelin contracts.$
    npm install @openzeppelin/contractsCreate a new Solidity smart contract.$ touch
    contracts/UniqueAsset.sol
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Truffle 创建一个新项目。$ truffle init 安装 OpenZeppelin 合约。$ npm install @openzeppelin/contracts
    创建一个新的 Solidity 智能合约。$ touch contracts/UniqueAsset.sol
- en: Open the UniqueAsset.sol file and import the ERC721URIStorage.sol extension
    and Counters.sol utility. Create a new class extending ERC721URIStorage. Declare
    the counters variable and declare the constructor passing the coin name and the
    code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 UniqueAsset.sol 文件并导入 ERC721URIStorage.sol 扩展和 Counters.sol 实用程序。创建一个扩展 ERC721URIStorage
    的新类。声明计数器变量并声明传递币名称和代码的构造函数。
- en: Create a new method named awardItem. Inside the new method, increment the token
    ID. Get the new token number using _tokenIds.current().
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 awardItem 的新方法。在新方法内部，增加令牌 ID。使用 _tokenIds.current() 获取新的令牌编号。
- en: 'Mint a new item using the method _mint. Finally, set the token URI passing
    the metadata using the method _setTokenURI.// SPDX-License-Identifier: MITpragma
    solidity ^0.8.0;import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";import
    "@openzeppelin/contracts/utils/Counters.sol";contract UniqueAsset is ERC721URIStorage
    {    using Counters for Counters.Counter;    Counters.Counter private _tokenIds;    constructor()
    ERC721("UniqueAsset", "UNA") {}    function awardItem(address recipient, string
    memory metadata)    public    returns (uint256)    {        _tokenIds.increment();        uint256
    newItemId = _tokenIds.current();        _mint(recipient, newItemId);        _setTokenURI(newItemId,
    metadata);        return newItemId;    }}Create a new migration file using the
    touch command. This command creates a new file in the migrations folder.$ touch
    migrations/2_deploy_contracts.solInside the 2_deploy_contracts.js file, export
    the smart contract in the migration file.const UniqueAsset = artifacts.require("UniqueAsset");module.exports
    = function (deployer) {    deployer.deploy(UniqueAsset);}'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '使用方法 _mint 铸造新物品。最后，通过使用方法 _setTokenURI 传递元数据来设置令牌 URI。// SPDX-License-Identifier:
    MITpragma solidity ^0.8.0;import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";import
    "@openzeppelin/contracts/utils/Counters.sol";contract UniqueAsset is ERC721URIStorage
    {    using Counters for Counters.Counter;    Counters.Counter private _tokenIds;    constructor()
    ERC721("UniqueAsset", "UNA") {}    function awardItem(address recipient, string
    memory metadata)    public    returns (uint256)    {        _tokenIds.increment();        uint256
    newItemId = _tokenIds.current();        _mint(recipient, newItemId);        _setTokenURI(newItemId,
    metadata);        return newItemId;    }}使用 touch 命令创建一个新的迁移文件。该命令在迁移文件夹中创建一个新文件。$
    touch migrations/2_deploy_contracts.sol在 2_deploy_contracts.js 文件中，导出迁移文件中的智能合约。const
    UniqueAsset = artifacts.require("UniqueAsset");module.exports = function (deployer)
    {    deployer.deploy(UniqueAsset);}'
- en: Configuring the Wallet to Sign Transactions
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置钱包以签署交易
- en: Install the file system fs package.$ npm install fsInstall the wallet provider
    hdwallet package.$ npm install @truffle/hdwallet-provider@1.2.3Open the truffle-config.js
    file and uncomment the HDWalletProvider code section.const HDWalletProvider =
    require('@truffle/hdwallet-provider');const infuraKey = '<your_infura_key>';const
    fs = require('fs');const mnemonic = fs.readFileSync(".secret").toString().trim();
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 安装文件系统 fs 包。$ npm install fs安装钱包提供程序 hdwallet 包。$ npm install @truffle/hdwallet-provider@1.2.3打开
    truffle-config.js 文件并取消注释 HDWalletProvider 代码部分。const HDWalletProvider = require('@truffle/hdwallet-provider');const
    infuraKey = '<your_infura_key>';const fs = require('fs');const mnemonic = fs.readFileSync(".secret").toString().trim();
- en: Paste your Infura project ID as a value for the variable infuraKey.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的 Infura 项目 ID 粘贴为变量 infuraKey 的值。
- en: Configuring the Network
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置网络
- en: 'Inside the truffle-config.js file, uncomment the ropsten network section and
    make the following changes:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 truffle-config.js 文件中取消注释 ropsten 网络部分，并进行以下更改：
- en: Change ropsten to rinkeby.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 ropsten 更改为 rinkeby。
- en: Change the Ropsten Infura URL to rinkeby.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Ropsten Infura URL 更改为 rinkeby。
- en: Change YOU-PROJECT-ID to ${infuraKey}.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 YOU-PROJECT-ID 更改为 ${infuraKey}。
- en: Change network_id to 42.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 network_id 更改为 42。
- en: 'rinkeby: {    provider: () => new HDWalletProvider(mnemonic, `https://rinkeby.infura.io/v3/${infuraKey}`),    network_id:
    42,    gas: 5500000,    confirmations: 2,    timeoutBlocks: 200,    skipDryRun:
    true},'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 'rinkeby: {    provider: () => new HDWalletProvider(mnemonic, `https://rinkeby.infura.io/v3/${infuraKey}`),    network_id:
    42,    gas: 5500000,    confirmations: 2,    timeoutBlocks: 200,    skipDryRun:
    true},'
- en: Configuring the Solidity Compiler
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Solidity 编译器
- en: 'Also, inside the truffle-config.js file, uncomment the compilers section and
    change the version to 0.8.0*.*compilers: {    solc: {        version: "0.8.0",        docker:
    true,        settings: {            optimizer: {                enabled: false,                runs:
    200            },            evmVersion: "byzantium"        }    }},'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '还要在 truffle-config.js 文件内部取消注释编译器部分，并将版本更改为 0.8.0*.*编译器: {    solc: {        version:
    "0.8.0",        docker: true,        settings: {            optimizer: {                enabled:
    false,                runs: 200            },            evmVersion: "byzantium"        }    }},'
- en: Configuring the Private Key
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置私钥
- en: Go to your browser and open your MetaMask wallet connected to the Infura network.
    Click “*your account*” and then click “settings.” Finally, click “security & privacy”
    (Figure [5-1](#Fig1)).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器并打开连接到 Infura 网络的 MetaMask 钱包。点击“*您的账户*”，然后点击“设置”。最后，点击“安全性与隐私”（见图 [5-1](#Fig1)）。
- en: You have the option to view your seed phrase, but be aware that this information
    is sensitive, and if someone has access to it, they will be able to restore your
    wallet and make use of your funds.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig1_HTML.jpg)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择查看您的种子短语，但请注意，此信息是敏感的，如果有人可以访问它，他们将能够恢复您的钱包并使用您的资金！[](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig1_HTML.jpg)
- en: A screenshot of the Security and Privacy window in the Ropsten test network.
    A phrase on the screen reads reveal seed phrase. A button with the cursor on it
    is at the bottom, which also reads reveal seed phrase.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ropsten 测试网络的安全性与隐私窗口的截图。屏幕上有一个短语写着“显示种子短语”。屏幕底部有一个带有光标的按钮，上面也写着“显示种子短语”。
- en: Figure 5-1
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-1
- en: 'MetaMask: revealing the seed phrase'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：显示种子短语
- en: Click Reveal Seed Phrase and enter your wallet password to continue. Copy the
    private key.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“显示种子短语”并输入您的钱包密码以继续。复制私钥。
- en: Go back to Visual Studio Code and create a new file named .secret. Paste the
    private secret recovery phrase on this file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到 Visual Studio Code 并创建一个名为 .secret 的新文件。将私人秘密恢复短语粘贴到此文件中。
- en: Creating the Badge Image
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建徽章图像
- en: Create the badge folder.$ mkdir badgeNow, go to the badge root folder.$ cd badgeDownload
    the image that you will use as a badge from the Internet. You can also copy and
    paste an existing image into this folder. The curl command is used for transferring
    data via URL syntax.$ curl https://planouhost.z15.web.core.windows.net/badge.png
    > badge-image.png
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建徽章文件夹。$ mkdir 徽章现在，转到徽章根目录。$ cd 徽章从互联网上下载您要用作徽章的图像。您还可以将现有图像复制并粘贴到此文件夹中。curl
    命令用于通过 URL 语法传输数据。$ curl https://planouhost.z15.web.core.windows.net/badge.png
    > 徽章图像.png
- en: Adding the Badge to Your Local IPFS
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将徽章添加到您的本地 IPFS
- en: Initialize your local IPFS node. This command will start an IPFS local server
    on 127.0.0.1:5001.$ ipfs daemonAdd your badge image to IPFS.$ ipfs add badge-image.pngRunning
    this command, you will receive a hash. This hash is your image address in IPFS.
    Make sure that you see the output shown in Figure [5-2](#Fig2).![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig2_HTML.jpg)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化您的本地 IPFS 节点。此命令将在 127.0.0.1:5001 上启动一个 IPFS 本地服务器。$ ipfs daemon将您的徽章图像添加到
    IPFS。$ ipfs add badge-image.png运行此命令，您将收到一个哈希。此哈希是您在 IPFS 中的图像地址。确保您看到与图 [5-2](#Fig2)
    中显示的输出相同。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig2_HTML.jpg)
- en: 'A screenshot of the I P F S output after adding a file. It reads: dollar, i
    p f s add badge-image dot p n g. Further details of the file are presented in
    the next few lines, with the file size and a progress bar.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 添加文件后的 IPFS 输出的截图。它显示：dollar, i p f s add badge-image dot p n g。接下来的几行呈现了文件的更多细节，包括文件大小和进度条。
- en: Figure 5-2
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-2
- en: IPFS output after adding a file
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 添加文件后的 IPFS 输出
- en: Pinning the Badge to a Remote IPFS Node
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 固定徽章到远程 IPFS 节点
- en: 'Pin your badge using Pinata as a remote IPFS service.ipfs pin remote add --service=pinata
    --name=badge-image.png QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4You will
    get a response indicating the file was pinned successfully.CID: QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4Name:
    badge-image.pngStatus: pinned'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '使用 Pinata 作为远程 IPFS 服务固定您的徽章。ipfs pin remote add --service=pinata --name=badge-image.png
    QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4您将收到一个指示文件成功固定的响应。CID: QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4Name:
    badge-image.pngStatus: pinned'
- en: Creating the Badge Metadata
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建徽章元数据
- en: 'Create the badge metadata JSON file.touch badge-metadata.jsonOpen the file
    badge-metadata.json and set the badge name, description, and image address. For
    the last one, you can use an IPFS gateway for the image to be displayed on any
    wallet that supports this badge type; otherwise, you will depend on the destination
    wallet support displaying images from IPFS hashes directly.{    "name": "My badge",    "description":
    "My badge description",    "image": "https://ipfs.io/ipfs/QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4"}Add
    your badge metadata to IPFS.$ ipfs add badge-metadata.jsonPin your badge metadata
    using a remote IPFS service.$ ipfs pin remote add --service=pinata --name=badge-metadata.json
    QmRzcwAtLWbeYqyaZUyf6uBzwwAT41QQyxhTHmMZWBfUTa'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '创建徽章元数据 JSON 文件。创建 badge-metadata.json 文件。打开文件 badge-metadata.json，并设置徽章名称、描述和图像地址。对于最后一个，您可以使用
    IPFS 网关来显示图像，以便在支持此徽章类型的任何钱包上显示图像；否则，您将依赖于目标钱包支持直接从 IPFS 哈希显示图像。{    "name": "我的徽章",    "description":
    "我的徽章描述",    "image": "https://ipfs.io/ipfs/QmZPxKJWqJTdudyaZUyf6uBzwwAT41QQyxhTHmMZWB9yx4"}将您的徽章元数据添加到
    IPFS。$ ipfs add badge-metadata.json使用远程 IPFS 服务固定您的徽章元数据。$ ipfs pin remote add
    --service=pinata --name=badge-metadata.json QmRzcwAtLWbeYqyaZUyf6uBzwwAT41QQyxhTHmMZWBfUTa'
- en: Compiling the Smart Contract
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编译智能合约
- en: Compile the contract using Truffle.$ truffle compile
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Truffle 编译合约。$ truffle compile
- en: Migrating the Smart Contract
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移智能合约
- en: Migrate the contract to the Rinkeby network using Truffle.$ truffle migrate
    --network rinkeby
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Truffle 将合约迁移到 Rinkeby 网络。$ truffle migrate --network rinkeby
- en: Instantiate the Smart Contract
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实例化智能合约
- en: Instantiate the contract using the Truffle console.$ truffle console --network
    rinkebyGet the instance of the deployed contract.truffle(rinkeby) let instance
    = await UniqueAsset.deployed()
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Truffle 控制台实例化合约。$ truffle console --network rinkeby获取部署的合约实例。truffle（rinkeby）让实例
    = await UniqueAsset.deployed()
- en: Awarding a Badge to a Wallet
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 给钱包颁发徽章
- en: Call the method awardItem and pass the Ethereum address as a first parameter
    and the IPFS address for the badge metadata. Make sure that the IPFS address corresponds
    to your badge metadata.truffle(rinkeby) let result = await instance.awardItem("0x62761466bB3A3Da83B408B5F5fE00ac7b2a5A996","https://ipfs.io/ipfs/QmRzcwAtLWBeYqUx3ba1BkYKubSDLNTHCuiUB7WAmdfUTa")
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 awardItem 方法，并将以太坊地址作为第一个参数传递，并将徽章元数据的 IPFS 地址作为第二个参数。确保 IPFS 地址对应您的徽章元数据。truffle（rinkeby）让结果
    = await instance.awardItem("0x62761466bB3A3Da83B408B5F5fE00ac7b2a5A996","https://ipfs.io/ipfs/QmRzcwAtLWBeYqUx3ba1BkYKubSDLNTHCuiUB7WAmdfUTa")
- en: Checking a Badge on Etherscan
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Etherscan 上检查徽章
- en: Once your contract is deployed, you will be able to see the public address of
    your contract. Find in the terminal the contract address created and copy it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的合约部署完成，您将能够看到您的合约的公共地址。在终端中找到创建的合约地址并复制它。
- en: Go to [https://rinkeby.etherscan.io](https://rinkeby.etherscan.io) and paste
    the contract address in the search bar (Figure [5-3](#Fig3)). You can use the
    Rinkeby Testnet Explorer tool to view the details of the created smart contract.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig3_HTML.jpg)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 [https://rinkeby.etherscan.io](https://rinkeby.etherscan.io)，并将合约地址粘贴到搜索栏中（图[5-3](#Fig3)）。您可以使用
    Rinkeby Testnet Explorer 工具查看创建的智能合约的详细信息。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig3_HTML.jpg)
- en: A screenshot of Rinkeby Testnet Explorer. On the top, the heading is Rinkeby
    Testnet Explorer. Below the heading is a drop-down option labeled all filters
    and an input bar with a random alphanumeric address.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Rinkeby Testnet Explorer 的屏幕截图。顶部是 Rinkeby Testnet Explorer 的标题。在标题下方是一个标有所有过滤器的下拉选项，以及带有随机字母数字地址的输入栏。
- en: Figure 5-3
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图5-3
- en: 'Rinkeby Testnet Explorer: searching for a smart contract'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Rinkeby Testnet Explorer：搜索智能合约
- en: Click the search icon. Now you can see that the contract was deployed successfully
    (Figure [5-4](#Fig4)). On this details page, you can view data such as transactions.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig4_HTML.jpg)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 点击搜索图标。现在您可以看到合约已成功部署（图[5-4](#Fig4)）。在此详细信息页面上，您可以查看诸如交易之类的数据。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig4_HTML.jpg)
- en: A screenshot of a page titled contract. The top left and top right are labeled
    contract overview and more info, respectively. At the bottom, there are 3 options
    labeled transactions, contract, and events out of which the first tab transaction
    is selected.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为 contract 的页面的截图。左上角和右上角分别标有合同概述和更多信息。底部有 3 个选项，标有交易、合同和事件，其中第一个选项卡交易被选中。
- en: Figure 5-4
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图5-4
- en: 'Rinkeby Testnet Explorer: viewing smart contract transactions'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Rinkeby Testnet Explorer：查看智能合约交易
- en: You can also realize that the last transaction made was for awarding a new item.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以意识到最后一笔交易是为授予新项目而进行的。
- en: Adding the NFT Token to Your Wallet
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将 NFT 代币添加到您的钱包。
- en: Open your MetaMask wallet on your mobile phone and click Collectibles (Figure
    [5-5](#Fig5)). Notice that the collectibles are available only on a mobile version.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig5_HTML.jpg)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的手机上打开 MetaMask 钱包并点击“收藏品”（图 [5-5](#Fig5)）。请注意，收藏品仅在移动版本上可用！[](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig5_HTML.jpg)
- en: A screenshot of the Metamask wallet. On the top is the heading wallet, Rinkeby
    Test Network. Below the heading are account 2, dollars 8548.21009, 0 x 6276 ellipsis
    A 996\. Receive, send, and swap options are at the bottom.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Metamask 钱包的截图。顶部是标题钱包，Rinkeby 测试网络。标题下方是账户 2，金额为 8548.21009 美元，0 x 6276 椭圆形
    A 996。底部有接收、发送和交换选项。
- en: Figure 5-5
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-5
- en: 'MetaMask: Collectibles tab'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：收藏品选项卡
- en: Click Add Collectibles***.*** Paste the token contract address here (the same
    one that you copied in the previous section) and enter the token ID (as it is
    the first token you will enter a 1 here).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“添加收藏品”。粘贴令牌合约地址（与上一节中复制的相同）并输入令牌 ID（因为这是您将输入的第一个令牌，因此在这里输入 1）。
- en: Click Add and wait for a few seconds (Figure [5-6](#Fig6)). The NFT token was
    added!![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig6_HTML.jpg)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“添加”并等待几秒钟（图 [5-6](#Fig6)）。NFT 代币已添加！！[](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig6_HTML.jpg)
- en: A screenshot of Metamask wallet. The page is titled Wallet, Rinkeby Test Network.
    Below the title, are Account 2, dollar 8548.21009, 0 x 6276 ellipses A996\. Receive,
    send, and swap options. 2 tabs at the bottom are tokens and collectibles. Collectibles
    tab is selected and a unique asset, 0 U N A option is below the tab.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Metamask 钱包的截图。页面标题为“钱包”，Rinkeby 测试网络。标题下方是账户 2，金额为 8548.21009 美元，0 x 6276 椭圆形
    A996。接收、发送和交换选项。底部有 2 个选项卡，分别是代币和收藏品。选择了收藏品选项卡，一个名为 0 U N A 的唯一资产位于选项卡下方。
- en: Figure 5-6
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-6
- en: 'MetaMask: after adding the smart contract, it will appear here'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：添加智能合约后，它将出现在这里
- en: Click UniqueAsset*.* Now you will be able to see all the badges that you earn
    (Figure [5-7](#Fig7)). You can have multiple tokens originating from the same
    smart contract, each of which will be distinguished by a unique identifier.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig7_HTML.jpg)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“UniqueAsset”。现在您将能够看到您赚取的所有徽章（图 [5-7](#Fig7)）。您可以拥有多个源自同一智能合约的令牌，每个令牌都将通过唯一标识符加以区分！[](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig7_HTML.jpg)
- en: A screenshot of Metamask unique asset. The page is titled unique asset, Rinkeby
    Test Network. Below the title is an icon labeled 1 unique asset and send, add,
    and info options. An icon labeled my badge, hashtag 1 with a selectable option
    is at the bottom.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Metamask 唯一资产的截图。页面标题为“唯一资产”，Rinkeby 测试网络。标题下方是一个标有 1 个唯一资产的图标，以及发送、添加和信息选项。底部是一个标有“我的徽章”的图标，带有一个可选择的选项。
- en: Figure 5-7
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-7
- en: 'MetaMask: badge listing'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：徽章列表
- en: Click “My badge.” Now you can see the badge details! Also, you have a Send button
    so that you can send the badge to another wallet (Figure [5-8](#Fig8)).![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig8_HTML.jpg)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“我的徽章”。现在您可以看到徽章的详细信息！此外，您有一个发送按钮，可以将徽章发送到另一个钱包（图 [5-8](#Fig8)）。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig8_HTML.jpg)
- en: A screenshot of Metamask unique asset. The page is titled unique asset, Rinkeby
    Test Network. Below the title is a badge labeled M E S T R E. Text my badge hashtag
    1 and a send button is at the bottom.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask 独特资产的屏幕截图。页面标题为独特资产，Rinkeby 测试网络。标题下方是一个标有 M E S T R E 的徽章。文本是我的徽章标签
    1，并且底部有一个发送按钮。
- en: Figure 5-8
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-8
- en: 'MetaMask: badge display'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：徽章显示
- en: That’s it! You just created your first NFT token!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！您刚刚创建了您的第一个 NFT 代币！
- en: Sell Your Art NFT on OpenSea
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 OpenSea 上销售您的艺术 NFT
- en: OpenSea is a marketplace for digital goods such as collectibles, gaming items,
    digital art, and other digital assets backed by a blockchain such as Ethereum.
    You can purchase, sell, and trade any of these things with anyone in the world
    on OpenSea.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSea 是一个数字商品市场，例如收藏品、游戏道具、数字艺术以及其他基于区块链（如以太坊）支持的数字资产。您可以在 OpenSea 上与全球任何人购买、出售和交易这些物品。
- en: Connecting to OpenSea
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接到 OpenSea
- en: Go to OpenSea^([1](#Fn1)) and make sure that you are connected to the wallet
    that contains the NFT and that you are using the Rinkeby test network.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 OpenSea^([1](#Fn1))，确保您连接到包含 NFT 的钱包，并且您正在使用 Rinkeby 测试网络。
- en: Viewing Your Badge
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看您的徽章
- en: Go to My Profile. Click Activity and then click the badge title. These are your
    badge details. The details page allows you to view various information regarding
    the negotiation of your badge.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 转到我的个人资料。点击活动，然后点击徽章标题。这些是您的徽章详情。详情页面允许您查看关于徽章交易的各种信息。
- en: Listing Your Badge for Sale
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上架您的徽章出售
- en: Click Sell and then click Set Price. In Price, set the price that you desire
    to sell the NFT. On this page you can set the badge pricing method as well as
    schedule it to be listed at a future date (Figure [5-9](#Fig9)).![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig9_HTML.jpg)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 点击出售，然后点击设置价格。在价格中，设置您希望出售 NFT 的价格。在此页面上，您可以设置徽章的定价方式，并安排将其列出在未来的日期（图 [5-9](#Fig9)）。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig9_HTML.jpg)
- en: A screenshot of unique asset, my badge. It has three options for select your
    sell method, they are set price, highest bid, and bundle. Below them is a price
    input option. Include ending price, schedule for a future time, and privacy are
    with switch options.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我的徽章独特资产的屏幕截图。它有三种选择以选择您的销售方式，它们是设置价格、最高出价和捆绑包。它们下面是一个价格输入选项。包括最终价格、未来时间安排和隐私选项均为切换选项。
- en: Figure 5-9
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-9
- en: 'OpenSea: badge pricing page'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSea：徽章定价页面
- en: Click Post Your Listing. You will be redirected to the Summary page (Figure
    [5-10](#Fig10)). On this page you can see the total fees that will be deducted
    when selling your badge.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig10_HTML.jpg)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 点击发布您的列表。您将被重定向到摘要页面（图[5-10](#Fig10)）。在此页面上，您可以看到出售您的徽章时将被扣除的总费用。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig10_HTML.jpg)
- en: A screenshot of the summary page. There are 3 sections, listing, bounties, and
    fees. Listing has post your listing with a selectable option. Bounties and fees
    have instructions and details about affiliates. There is an edit button next for
    Bounties and there is a link to learn more under fees.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要页面的屏幕截图。有 3 个部分，列出、悬赏和费用。列出有一个可选择的选项来发布你的列表。悬赏和费用有关于合作伙伴的说明和细节。在悬赏旁边有一个编辑按钮，而在费用下有一个了解更多的链接。
- en: Figure 5-10
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-10
- en: 'OpenSea: badge’s Summary page'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSea：徽章的摘要页面
- en: MetaMask will be open in order to validate the transaction (Figure [5-11](#Fig11)).
    Click Confirm. In this step you need to approve the transaction that will confirm
    the listing of your badge for sale on the platform.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig11_HTML.jpg)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask 将打开以验证交易（图[5-11](#Fig11)）。点击确认。在这一步中，您需要批准将确认您的徽章在平台上出售的交易。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig11_HTML.jpg)
- en: A screenshot of the Metamask notification window. On the top is Rinkeby Test
    Network, account 1 rightward arrow 0 x 3301 ellipsis f 83 A. Below them is a link
    and a button for set approval for all. 2 tabs details and data in which data is
    selected and it displays gas fee and total. The reject and confirm buttons are
    at the bottom.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask 通知窗口的屏幕截图。顶部是 Rinkeby 测试网络，账户 1 向右箭头 0 x 3301 省略号 f 83 A。它们下面是一个链接和一个设置全部批准的按钮。2
    个选项卡详情和数据，其中数据被选中并显示燃气费和总费用。底部是拒绝和确认按钮。
- en: Figure 5-11
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-11
- en: 'MetaMask: confirm OpenSea transaction'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask：确认 OpenSea 交易
- en: Now you will need to provide some more details about you, such as your email
    and nickname. You will be asked to provide additional information after the transaction
    is approved (Figure [5-12](#Fig12)).![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig12_HTML.jpg)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您需要提供更多关于您的信息，比如您的邮箱和昵称。在交易获得批准后，您将被要求提供额外的信息（图[5-12](#Fig12)）。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig12_HTML.jpg)
- en: A screenshot of a window titled listing successful. The screenshot contains
    input options for email asterisk and nickname asterisk, send me occasional updates
    about Opensea is selected, and save button on the bottom left.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为“列表成功”的窗口的屏幕截图。截图包含了邮箱星号和昵称星号的输入选项，选中了“发送关于 Opensea 的偶尔更新”选项，并在左下角有一个保存按钮。
- en: Figure 5-12
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-12
- en: 'OpenSea: additional information'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSea：附加信息
- en: Click Save. Now, OpenSea will list your NFT for you!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 点击保存。现在，OpenSea 将为您列出您的 NFT！
- en: Exploring Listing Details
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 探索列表详情
- en: Scroll down to Trading History (Figure [5-13](#Fig13)); as you can see, a new
    event was created named List and with Price set at US 10\. On this page you can
    see all the badge trading history on the platform.![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig13_HTML.jpg)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到交易历史（图 [5-13](#Fig13)）；如你所见，创建了一个名为列表的新事件，并将价格设定为 US 10\. 在此页面上，你可以看到平台上所有徽章的交易历史。![](../images/521550_1_En_5_Chapter/521550_1_En_5_Fig13_HTML.jpg)
- en: A screenshot of the page titled trading history. There is an option named filter
    on the top. At the bottom, there are columns named event, price, from, and to.
    Under event, there are three heads, namely, list, transfer, and created.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 交易历史页面的截图。顶部有一个名为筛选器的选项。底部有名为事件、价格、来自和到的列。在事件下，有三个标题，即列表、转移和创建。
- en: Figure 5-13
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-13
- en: 'OpenSea: trading history'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSea：交易历史
- en: Click the Share icon. You can copy the link or share it on your social networks.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 点击分享图标。你可以复制链接或在社交网络上分享。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to create tokens in the ERC-721 standard, pin
    the image in IPFS, and import it in OpenSea and put it up for sale.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学会了如何在 ERC-721 标准中创建代币，在 IPFS 中固定图像，并在 OpenSea 中导入并将其出售。
- en: In the next chapter, we will find out how to use faucets and why they are important
    in testnets.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解如何使用水龙头以及它们在测试网络中的重要性。
