- en: ©  Vikram Dhillon, David Metcalf, and Max Hooper 2017Vikram Dhillon, David Metcalf
    and Max HooperBlockchain Enabled Applications[https://doi.org/10.1007/978-1-4842-3081-7_5](A430562_1_En_5_Chapter.xhtml)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: ©  Vikram Dhillon, David Metcalf, and Max Hooper 2017Vikram Dhillon, David Metcalf
    和 Max Hooper区块链启用应用程序[A430562_1_En_5_Chapter.xhtml](https://doi.org/10.1007/978-1-4842-3081-7_5)
- en: 5. Decentralized Organizations
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 去中心化组织
- en: 'Vikram Dhillon^(1 ), David Metcalf¹ and Max Hooper¹(1)Orlando, Florida, USABitcoin
    can be thought of as the first prototypical decentralized autonomous organization
    (DAO) . It created a network-based ecosystem of participants who contributed computational
    power toward a singular goal. In Bitcoin, the distributed protocol providing a
    financial service and rewarding miners became a rudimentary decentralized organization.
    In this chapter, we talk about more complex and full DAOs made in Aragon. Aragon
    ( [https://aragon.one/](https://aragon.one/) ) is a decentralized application
    (DApp) that lets anyone create and manage different kinds of organizations (nongovernmental
    organizations [NGOs]  , nonprofits, foundations) on the Ethereum blockchain. Creating
    a DAO requires numerous steps and originally it was more difficult to implement
    in Ethereum. However, Aragon implements all the basic features of an organization
    in a base template that is deployed whenever a user instantiates a company. Most
    of the traditional features such as a cap table, voting, fundraising, and accounting
    are offered in Aragon as a decentralized counterpart to run on the blockchain.
    In addition, an Aragon company can be customized to a very granular extent and
    extended using new modules that can be added to a company’s existing smart contracts.
    Aragon enables different organizations to be built on the blockchain, and one
    interesting use case integrates identity using a two-way verification scheme with
    Keybase. We talk about how the Keybase to Aragon peg functions to provide identity
    services in the context of a decentralized system. We also briefly go over the
    Aragon kernel, which is essentially a task manager with subroutines that ensure
    smooth communication within an organization, among its members, and in the underlying
    blockchain.We begin our discussion with the Aragon kernel and it’s main functions.
    Then, we take two approaches in defining a DAO: A definition in terms of consensus
    between members, and a definition focusing on features given by Ralph Merkel.
    Aragon-core has adopted the latter definition, and extended it to “organs”, so
    we go through all the organs available to Aragon-core. The heart of this chapter
    is a set of visual tutorials split into three topics. The first topic introduces
    users to the basics of an Aragon company and how to set up a MetaMask wallet.
    This topic ends with users having set up a default company and a functional wallet.
    The second topic dives into understanding the daily operations of your newly created
    company. This covers stocks and stock classes available in Aragon, user permissions,
    and tokens. A variety of operations are demonstrated here, such as adding new
    stock classes, issuing shares, assigning stocks to a new hire, assigning a role
    to a new employee, and transferring existing tokens within the company. The third
    topic focuses on more advanced topics in Aragon. Here, we discuss fundraising
    on the Ethereum blockchain using Aragon and the different types of rounds implemented
    in Aragon. Finally, we conclude the tutorial and this chapter with a discussion
    of bylaws and how to edit the default company template deployed by Aragon.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[Vikram Dhillon](https://doi.org/10.1007/978-1-4842-3081-7_5)^(1 ), David Metcalf¹
    和 Max Hooper¹(1)美国佛罗里达州奥兰多比特币可以被认为是第一个原型化的去中心化自治组织（DAO）。它创建了一个网络生态系统，由参与者共同向一个共同目标贡献计算能力。在比特币中，提供金融服务并奖励矿工的分布式协议成为了一个基本的去中心化组织。在本章中，我们讨论了在
    Aragon 中制作的更复杂和完整的 DAO。Aragon ([https://aragon.one/](https://aragon.one/)) 是一个分布式应用程序（DApp），允许任何人在以太坊区块链上创建和管理不同类型的组织（非政府组织
    [NGOs]、非营利组织、基金会）。创建 DAO 需要多个步骤，最初在以太坊中实现起来更加困难。然而，Aragon 在一个基本模板中实现了组织的所有基本功能，每当用户实例化一个公司时，就会部署该模板。大多数传统功能，如股本表、投票、筹款和会计，都在
    Aragon 中作为运行在区块链上的去中心化对应方提供。此外，Aragon 公司可以根据需要进行非常精细的定制，并使用可以添加到公司现有智能合约的新模块进行扩展。Aragon
    允许在区块链上构建不同的组织，一个有趣的用例集成了使用双向验证方案与 Keybase 的身份。我们讨论了 Keybase 到 Aragon 锚定功能如何在去中心化系统的背景下提供身份服务。我们还简要讨论了
    Aragon 内核，它本质上是一个任务管理器，具有确保组织内部、成员之间以及底层区块链之间平稳通信的子程序。我们从 Aragon 内核及其主要功能开始讨论。然后，我们采取了两种方法来定义
    DAO：一种是根据成员之间的共识来定义，另一种是专注于由 Ralph Merkel 给出的功能的定义。Aragon 核心采用了后者的定义，并将其扩展到“器官”，因此我们将介绍
    Aragon 核心提供的所有器官。本章的核心是一系列分为三个主题的视觉教程。第一个主题向用户介绍了 Aragon 公司的基础知识以及如何设置 MetaMask
    钱包。本主题以用户设置了默认公司和一个功能性钱包而告终。第二个主题深入了解您新创建的公司的日常运营。这包括在 Aragon 中可用的股票和股票类别、用户权限和代币。这里演示了各种操作，如添加新的股票类别、发行股票、向新员工分配股票、向新员工分配角色以及在公司内转移现有代币。第三个主题关注
    Aragon 中的更高级主题。在这里，我们讨论了在 Aragon 上使用以太坊区块链进行筹款以及在 Aragon 中实施的不同类型的轮次。最后，我们通过讨论章程以及如何编辑由
    Aragon 部署的默认公司模板来结束教程和本章。'
- en: Aragon Kernel
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Aragon 内核
- en: 'The kernel in Aragon serves as a switchboard directing requests and message
    passing to the various subroutines (also called organs). In production mode, the
    kernel will be concurrently interfacing with hundreds of Aragon organizations
    or users on the blockchain. Here, our focus is limited to the kernel interacting
    with just one company: a DAO. What is a DAO? A DAO is a blockhcain entity built
    on a consensus of decisions by its members. A DAO brings the concept of consensus
    inherent to the blockchain to include decisions and choices made by members of
    a DAO that have a stake in it (usually in the form of DAO tokens). As such, a
    DAO is built with automation at its core and members at the periphery that rely
    on a majority-based consensus to make decisions for the organization. Although
    this definition of a DAO is a general descriptor, it is incomplete. Perhaps a
    better approach to defining a DAO would be through the functions it performs.
    The concept for a DAO was originally derived from Bitcoin, which might be viewed
    as the first prototype for a DAO.NoteThe simplest functional unit on an Aragon
    network is a DAO and therefore the majority of our discussion is focused around
    a minimal use case. Aragon provides a base template that can be used to set up
    a DAO and you can modify this template to set up a custom set of rules. Other
    types of organizations (e.g., NGOs or nonprofits) are built on the base template
    with significant modifications that allow a new modus operandi. Additionally,
    throughout the remainder of this chapter, the terms DAO, company, and organization
    are used interchangeably to represent the same concept.Ralph Merkle talks about
    a DAO as an entity that owns internal property that has value, can update its
    internal state, is responsive to the members, and runs smart contracts. These
    are some of the most basic functions that any DAO should be able to perform, but
    currently there are no compliance standards (like the ERC20 for tokens) for DAOs.
    The kernel uses a set of organs to carry out most of its daily activities. Let’s
    go through the organs provided by default in Aragon:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Aragon 中的内核充当一个交换机，将请求和消息传递指向各种子程序（也称为器官）。在生产模式下，内核将同时与数百个 Aragon 组织或区块链上的用户进行交互。在这里，我们的重点仅限于内核与一家公司交互：一个
    DAO。什么是 DAO？DAO 是一个建立在成员决策共识基础上的区块链实体。DAO 将区块链固有的共识概念扩展到由 DAO 成员做出的决策和选择（通常以 DAO
    代币的形式持有利益）。因此，DAO 以自动化为核心建立，以成员在外围依靠基于多数的共识来为组织做出决策。尽管这个 DAO 的定义是一个通用描述，但它是不完整的。也许定义
    DAO 的更好方法是通过它执行的功能。DAO 的概念最初来源于比特币，它可能被视为 DAO 的第一个原型。注意：Aragon 网络上最简单的功能单元是 DAO，因此我们的大部分讨论都集中在一个最小的使用案例上。Aragon
    提供了一个基本模板，可用于设置 DAO，并且您可以修改此模板以设置自定义规则。其他类型的组织（例如，非政府组织或非营利组织）是在基本模板上进行了重大修改，以允许新的操作方式。此外，在本章的其余部分中，术语
    DAO、公司和组织是可以互换使用的，表示相同的概念。Ralph Merkle 谈到 DAO 是一个拥有内部具有价值的财产的实体，可以更新其内部状态，对成员作出响应，并运行智能合约。这些是任何
    DAO 应该能够执行的一些最基本的功能，但目前还没有 DAO 的合规标准（例如 ERC20 用于代币）。内核使用一组器官来执行其大部分日常活动。让我们逐个审查
    Aragon 默认提供的器官：
- en: 'Meta organ: A self-aware (in terms of internal state) and self-actionable organ
    that is responsible for updating the DAO internally in response to actions by
    the members or externally. This organ also maintains a global registry of organs
    operating within the kernel.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Meta 器官：一个自我感知（就内部状态而言）和自我可执行的器官，负责根据成员或外部的行动来内部更新 DAO。此器官还维护内核中运行的器官的全局注册表。
- en: 'Dispatch organ: A validator organ that determines whether a requested action
    or a transaction can be carried out on behalf of the requestor. This can be done
    through an oracle, or programmed logic that filters requests based on specific
    criteria. The outcome of the dispatch organ is a simple pass or fail. If an action
    fails, it will not be carried out. However, if an action or transaction passes,
    it will be dispatched to a more appropriate organ for processing or execution.
    The dispatch organ also maintains a list of priorities for each request to be
    triaged and directed appropriately.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dispatch 器官：一个验证器器官，确定是否可以代表请求者执行请求的操作或事务。这可以通过一个 oracle 或根据特定标准过滤请求的编程逻辑来完成。Dispatch
    器官的结果是简单的通过或失败。如果操作失败，则不会执行。但是，如果操作或事务通过，则会被分派到更适合的器官进行处理或执行。Dispatch 器官还维护每个请求的优先级列表，以便进行分类和适当的定向。
- en: 'Vault organ: The vault organ serves as a collective wallet for the DAO. It
    stores the funds owned by the DAO as tokens and approves any spending requests.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vault 器官：Vault 器官作为 DAO 的集体钱包。它以代币形式存储 DAO 拥有的资金，并批准任何支出请求。
- en: 'Token organ: The token organ specifically deals with governance tokens allocated
    to the members of DAO. This organ also contains the operational logic for adding
    new types of tokens or replacing and removing older tokens.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Token 器官：Token 器官专门处理分配给 DAO 成员的治理代币。此器官还包含添加新类型的代币或替换和删除旧代币的操作逻辑。
- en: 'Applications organ: This is the smart contract collective that operates at
    the core of a DAO . The applications running in this organ are sandboxed from
    the remainder of the organization, but most of the business logic resides in this
    organ. Aragon provides a basic set of Ethereum contracts responsible for default
    actions, but this organ is extensible. New applications or modules can be added
    to the organization to increase functionality to satisfy specific use cases.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Applications 器官：这是 DAO 核心中运行的智能合约集合。在此器官中运行的应用程序与组织的其余部分隔离，但大部分业务逻辑驻留在此器官中。Aragon
    提供了一套基本的以太坊合约负责默认操作，但此器官是可扩展的。可以向组织添加新的应用程序或模块，以增加功能，以满足特定用例。
- en: Identity Management
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份管理
- en: 'The concept of identity is a conundrum for cryptotechnologies because it requires
    a certain level of trust to be inherent in the network architecture. Most generalized
    approaches toward integrating identity in a consensus-based system involve some
    variation of cryptographic proofs and signatures. In Aragon, an external service
    called Keybase along with a registry contract are used to establish a “trustless”
    two-way verification scheme. The logic behind this scheme is very straightforward:
    Establish that a particular address belongs to you, and then verify that your
    username owns the address. How do these two statements reconcile in a functional
    setting? Let’s introduce the two components that make a two-way bridge possible.
    In simple terms, Keybase is a public–private key pair management service with
    OAuth integrations that allow a user to authenticate and verify accounts. Keybase
    can serve as a centralized hub for a user to link and verify external accounts.
    For instance, after creating an account on Keybase, the public profile of a user
    can display all the linked social media accounts establishing their legitimacy
    and connection. The second component is a registry contract that provides an account-to-address
    association mechanism from within the Aragon network. The two-way bridge forms
    from using the address (linked to an account on the network) to cryptographically
    sign a file that can then be hosted on Keybase (linked to user identity through
    various social media integrations ).NoteIt is crucial to keep in mind that in
    Aragon, identity is an opt-in feature. The use cases developed for Aragon range
    from providing complete anonymity, as in the case of a DAO, to full usernames
    integrating Keybase for a next-generation blockchain company.So how would users
    make their identity available to the two-way verification scheme? The workflow
    in Keybase Registry 2.0 has been simplified to one simple step: Upload the signed
    proof to the Keybase Filesytem (KBFS) . This introduces a few new components.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 身份概念对于加密技术来说是一个难题，因为它需要网络架构中具有一定程度的信任。大多数将身份整合到基于共识的系统中的通用方法涉及某种形式的加密证明和签名。在
    Aragon 中，一个名为 Keybase 的外部服务与注册合约一起被用来建立一个“无信任”的双向验证方案。这个方案背后的逻辑非常简单：建立一个特定地址属于你，并验证你的用户名拥有该地址。这两个陈述在功能设置中如何协调？让我们介绍使双向桥梁成为可能的两个组件。简单地说，Keybase
    是一个具有 OAuth 集成的公钥-私钥对管理服务，允许用户进行身份验证和账户验证。Keybase 可以作为一个集中式中心，让用户链接和验证外部账户。例如，在
    Keybase 上创建一个账户后，用户的公开资料可以显示所有链接的社交媒体账户，从而确立它们的合法性和联系。第二个组件是一个注册合约，它提供了来自 Aragon
    网络内的账户与地址关联机制。双向桥梁是通过使用地址（链接到网络上的一个账户）来对一个文件进行加密签名，然后该文件可以被托管在 Keybase 上（通过各种社交媒体集成链接到用户身份）。注意在
    Aragon 中，身份是一个选择性的功能至关重要。为 Aragon 开发的用例范围从提供完全匿名性，如 DAO 的情况，到整合 Keybase 的全用户名，以用于下一代区块链公司。那么用户如何使他们的身份对双向验证方案可用呢？Keybase
    注册 2.0 中的工作流程已经简化为一个简单的步骤：将签名证明上传到 Keybase 文件系统（KBFS）。这引入了一些新的组件。
- en: 'Keybase Filesystem: KBFS is a cryptographically secure local and cloud storage
    directory. KBFS only allows the owner of the directory to add new files, and these
    files are made available publicly. In KBFS, every file added to the directory
    is automatically signed by the owner’s private key and the signature can be verified
    by anyone through Keybase.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keybase 文件系统：KBFS 是一个具有密码学安全的本地和云存储目录。KBFS 只允许目录所有者添加新文件，这些文件是公开可用的。在 KBFS 中，每个添加到目录的文件都会被自动签名，签名可以通过
    Keybase 由任何人验证。
- en: 'Signed proof: Aragon uses a standard proof of identity signed by the user uploaded
    to the KBFS public directory. There are four components of this proof: the username
    on Keybase, the Ethereum account address owned by the user, a string or comment
    by the user, and finally the public key of the signature. Anyone who wishes to
    verify an identity can obtain this proof file and use a function such as getUsername(args)
    to perform a username reverse lookup given the account address in the proof.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签名证明：Aragon 使用用户上传到 KBFS 公共目录的标准身份证明。这个证明有四个组成部分：Keybase 上的用户名，用户拥有的以太坊账户地址，用户的字符串或评论，以及最后的签名公钥。任何希望验证身份的人都可以获得这个证明文件，并使用一个诸如
    getUsername(args) 的函数来执行给定证明中账户地址的用户名反向查找。
- en: 'Oraclize: The reverse lookup is an on-chain verification process performed
    through the registry contract within the Aragon network. For Keybase lookup, a
    data carrier service called oraclize is used. Oraclize requests the signature
    for a given Keybase username and creates a mapping of the username to an Ethereum
    account address. The signature on this proof file should validate with the user’s
    public key on the network. Oraclize performs an on-chain check to verify the proof
    signature and ensure that the mapping is legitimate. The party initiating this
    verification on behalf of another user also has to pay for the steps, including
    oraclize reference calls.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oraclize：反向查找是通过 Aragon 网络内的注册合约执行的验证过程。对于 Keybase 查找，使用了一个名为 oraclize 的数据载体服务。Oraclize
    请求给定 Keybase 用户名的签名，并创建一个将用户名映射到以太坊账户地址的映射。该证明文件上的签名应该与用户在网络上的公钥相匹配。Oraclize 执行一个在链上的检查来验证证明签名并确保映射是合法的。代表另一个用户发起此验证的一方还必须支付包括
    oraclize 参考调用在内的步骤的费用。
- en: 'Keybase Resolver: The Ethereum Name Service (ENS) allows us to resolve human-readable
    links into Ethereum addresses. Recently, Aragon has begun testing a Keybase resolver
    that will map callbacks to usernames into addresses such that john.keybase.eth
    -> 0x99...cx88. This simplifies the reverse lookups and username references throughout
    the network.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keybase 解析器：以太坊名称服务（ENS）允许我们将人类可读的链接解析成以太坊地址。最近，Aragon 已经开始测试一个 Keybase 解析器，它将回调映射到用户名，然后将用户名映射到地址，如
    john.keybase.eth -> 0x99...cx88。这简化了网络中的反向查找和用户名引用。
- en: DAO/Company Walkthrough
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DAO/公司概览
- en: 'In this section, we go through the process of creating a DAO and becoming familiar
    with the major DAO operations in Aragon. For the sake of simplicity, we will only
    have two entities participating in this DAO, an executive and an employee. This
    walkthrough is split into three topics:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将介绍创建一个 DAO 并熟悉在 Aragon 中的主要 DAO 操作的过程。为了简单起见，我们只有两个实体参与这个 DAO，一个是执行者，一个是雇员。这个步骤分为三个主题：
- en: 'Setting up a DAO: We introduce the participants of this DAO, show how to create
    a wallet, and get familiar with the interface.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置一个 DAO：我们介绍这个 DAO 的参与者，展示如何创建一个钱包，并熟悉界面。
- en: 'Creating stocks and assigning shares: After our DAO has been set up, we create
    new stock classes, issue new stock, and assign shares to the other entity.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建股票并分配股份：在我们的 DAO 设置完成后，我们创建新的股票类别，发行新股票，并将股份分配给另一个实体。
- en: 'Fundraising and editing bylaws: After shares have been assigned, we look at
    how fundraising works in Aragon. A DAO can raise funds from a specific investor
    in return for stocks, or publicly offer stock to raise a round of funding. We
    review the fundraising process, and more important, the bylaws that govern the
    DAO.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 筹款和修改章程：在股份被分配后，我们看看在 Aragon 中筹款是如何运作的。一个 DAO 可以从特定投资者那里筹集资金以换取股份，或公开发行股票以筹集一轮资金。我们审查筹款过程，更重要的是管理
    DAO 的章程。
- en: Setting Up a DAO
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置一个 DAO
- en: 'Download the Aragon client from [https://aragon.one/](https://aragon.one/)
    . This client has two main components: Aragon Core and MetaMask. In each client,
    Aragon Core functions as an administrative dashboard for the DAO. The main purpose
    of this component is directing access control of all entities participating in
    a DAO. Depending on your role and if you hold any stock, you might have access
    to the advanced features. We see later how this access to features can change
    by editing the bylaws. The second component is MetaMask, a digital wallet designed
    as a plug-in for Google Chrome to make Ethereum accessible to pragmatic daily
    users. MetaMask was chosen for Aragon to drive adoption by bringing an already
    familiar interface to the user. The opening screen, shown in Figure [5-1](#Fig1),
    provides a brief introduction to Aragon, along with the wallet setup.![A430562_1_En_5_Fig1_HTML.jpg](Images/A430562_1_En_5_Fig1_HTML.jpg)Figure
    5-1.The Aragon setup screen. A brief introduction to Aragon is provided here,
    along with a button to create a MetaMask wallet. On the top right of the screen
    there is an icon to access the wallet .MetaMask first asks you to create a password
    for your wallet, as shown in Figure [5-2](#Fig2). This will be your access key.
    After entering the password, you will be provided with a passphrase to recover
    your wallet in case you lose your password.NoteAragon is still connected to a
    testnet to illustrate the concept. As a result, for some steps, you might need
    to verify and confirm transactions multiple times to ensure the initial company
    creation steps. Some of the bugs are known and under active development in the
    beta code.![A430562_1_En_5_Fig2_HTML.jpg](Images/A430562_1_En_5_Fig2_HTML.jpg)Figure
    5-2.Creating a password for your MetaMask wallet. Every major step in Aragon is
    followed by a series of confirmations that broadcast new changes to the network
    in the form of transactions.After creating a wallet password and confirming the
    transactions , you should see a confirmation screen and the state of your current
    wallet (see Figure [5-3](#Fig3)). Here is a quick note about Aragon’s alpha releases:
    Currently the Aragon client does not operate on the Aragon network. It is connected
    to an Ethereum testnet (Kovan Test Net in this case, as shown in Figure [5-3](#Fig3)),
    which serves as a testing ground for Aragon. On a testnet, currency holds no value,
    so users can test the product and report any serious bugs, assisting in product
    development. A user can request test ETH to be sent to their wallet and experiment
    with Aragon without any consequences. That’s why when the wallet is created, it
    already comes loaded with a balance.![A430562_1_En_5_Fig3_HTML.jpg](Images/A430562_1_En_5_Fig3_HTML.jpg)Figure
    5-3.Wallet created using MetaMask. Notice the wallet address shown below along
    with the balance it has on the testnet.The screen after wallet creation brings
    you to Aragon Core, and there are two options available: Create a New Organization
    and Join an Existing Organization, shown in Figure [5-4](#Fig4). From here on,
    the walkthrough focuses on the first option , and Aragon is presented from the
    point of view of an executive. However, we briefly touch on how users can join
    a DAO and the level of access available to a regular employee.![A430562_1_En_5_Fig4_HTML.jpg](Images/A430562_1_En_5_Fig4_HTML.jpg)Figure
    5-4.Aragon Core Welcome screenThe two options provided to a user are not limited
    to just DAOs; rather, any type of organization can be built on Aragon, including
    NGOs and nonprofits. Traditional companies would take a new decentralized outlook
    on the Aragon blockchain , but ultimately it is up to the companies to decide
    which components can be decentralized. We will select Create a New Organization
    here. Creating a new company costs Ether, paid with the wallet we created in the
    previous step. Then, the transactions are broadcast to the blockchain by confirming
    them. Aragon uses a general template to deploy a company on the blockchain, but
    the founders can edit this template by changing bylaws. A circular progress indicator
    in the top right corner shows the transactions being verified for company deployment.After
    the company has been deployed, the next screen is the Aragon Core dashboard. This
    is where a user (executive or employee) handles the daily operations of a DAO,
    with functionss to participate in voting, assign shares, and more. The dashboard
    displays the welcome screen by default to the user. To navigate this dashboard,
    let’s begin by looking at your profile under Settings (Figure [5-5](#Fig5)).![A430562_1_En_5_Fig5_HTML.jpg](Images/A430562_1_En_5_Fig5_HTML.jpg)Figure
    5-5.Settings in Aragon Core dashboardEach account is assigned an address and a
    username on the network. This address is also associated with the funds available
    to the account through the wallet. Under the address is the role of this user.
    Next, the Settings screen shows some information about the company we created
    in earlier steps. The address for the company is given shown, and a founder would
    share this address with an employee so that he or she can join the organization.
    Recall the two choices from Figure [5-4](#Fig4). To join an organization, a user
    would enter the address given in the Company Address field. Below that, under
    Ethereum Account, is information on the user connected to this Aragon client.
    This address matches the one shown at the top right of that page, but here, we
    also see the remaining balance in that account. You can also rename this account
    or log out of this company. The more interesting tidbit is shown below the Ethereum
    Account information, an option to link your account and verify your identity.
    As we mentioned earlier, not all companies built on Aragon will take the form
    of a DAO and some might require verification of the participants. Aragon provides
    access to an Ethereum-Keybase resolver for identity management in specific use
    cases. Finally, the rest of the features in Aragon Core are accessible through
    the side menu .The Settings in Aragon only provide an overview of the user connected
    to the client, but what’s the default state of the company we just created? To
    get an overview of our DAO, we need to navigate to the Ownership tab shown in
    Figure [5-6](#Fig6).![A430562_1_En_5_Fig6_HTML.jpg](Images/A430562_1_En_5_Fig6_HTML.jpg)Figure
    5-6.Overview of our DAOEssentially, each participant of the DAO will have a stake
    in decision making, and this page provides the amount of stock each party owns.
    By default, the creator of a DAO initially owns all the stock. We can see the
    ownership distribution on the right side of the page, where Me is the current
    user, and on the pie chart, Me owns 100 percent of the stock. Currently, there
    is only one type of stock in the template, Class of Voting Stock (CVS), which
    allows the holder to participate in voting. Generally speaking, the more stock
    you own, the more influence you can exert on the voting process, but these effects
    diminish in a DAO with a large number of users. More precisely, the Voting Distribution
    section shows how the voting power is distributed among the entities in our DAO.
    We only have one user for now, but this chart will update as new users are added.
    Next, in this DAO the Shareholder list enumerates the shareholders and currently
    there are two, the company itself and the creator (executive, “Me”). The only
    stock class available is the voting stock, to which we will add more soon. Finally,
    the Ownership tab also allows us to perform advanced functions (e.g., issuing
    stock) that can be reached through the menu icon in the top right, which is the
    focus of the second topic in our walkthrough .'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://aragon.one/](https://aragon.one/)下载Aragon客户端。该客户端有两个主要组件：Aragon核心和MetaMask。在每个客户端中，Aragon核心作为DAO的管理仪表板。该组件的主要目的是指导对参与DAO的所有实体的访问控制。根据你的角色以及是否持有任何股份，你可能可以访问高级功能。稍后我们会看到通过修改公司章程可以改变功能访问权限的方式。第二个组件是MetaMask，一个设计为Google
    Chrome插件的数字钱包，使以太坊对实际日常用户可访问。MetaMask被选择为Aragon，以通过为用户带来一个已经熟悉的界面来推动采用。开场画面，如图[5-1](#Fig1)所示，提供了对Aragon的简要介绍，以及钱包设置。![A430562_1_En_5_Fig1_HTML.jpg](Images/A430562_1_En_5_Fig1_HTML.jpg)图5-1.Aragon设置画面。此处提供了对Aragon的简要介绍，以及创建MetaMask钱包的按钮。在屏幕右上角有一个访问钱包的图标。MetaMask首先要求您为您的钱包创建一个密码，如图[5-2](#Fig2)所示。这将是您的访问密钥。输入密码后，您将获得一个恢复钱包的口令，以防丢失密码。注意：Aragon仍然连接到一个测试网以说明概念。因此，对于某些步骤，您可能需要多次验证和确认交易，以确保初始公司创建步骤。一些已知的错误正在测试代码中积极开发。![A430562_1_En_5_Fig2_HTML.jpg](Images/A430562_1_En_5_Fig2_HTML.jpg)图5-2.为您的MetaMask钱包创建密码。在Aragon的每个重要步骤之后，都会跟随一系列确认，以交易的形式向网络广播新的更改。创建钱包密码并确认交易后，您应该会看到一个确认屏幕和您当前钱包的状态（请参见图[5-3](#Fig3)）。这里简要介绍了Aragon的α版本：当前Aragon客户端不在Aragon网络上运行。它连接到以太坊测试网（在本例中是科文测试网，如图[5-3](#Fig3)所示），这是Aragon的一个测试场地。在测试网上，货币没有价值，因此用户可以测试产品并报告任何严重的错误，协助产品开发。用户可以请求将测试ETH发送到他们的钱包，并在没有任何后果的情况下尝试Aragon。这就是为什么当创建钱包时，它已经加载了余额。![A430562_1_En_5_Fig3_HTML.jpg](Images/A430562_1_En_5_Fig3_HTML.jpg)图5-3.使用MetaMask创建的钱包。请注意下面显示的钱包地址以及其在测试网上的余额。创建钱包后的屏幕将带您进入Aragon核心，有两个选项可用：创建新组织和加入现有组织，如图[5-4](#Fig4)所示。从这里开始，教程将重点介绍第一个选项，并从执行者的角度介绍Aragon。但是，我们简要介绍了用户如何加入DAO以及普通员工可获得的访问级别。![A430562_1_En_5_Fig4_HTML.jpg](Images/A430562_1_En_5_Fig4_HTML.jpg)图5-4.Aragon核心欢迎屏幕向用户提供了两个选项，不仅限于DAO；任何类型的组织都可以在Aragon上构建，包括NGO和非营利组织。传统公司将对Aragon区块链采取新的分散化视角，但最终是公司决定哪些组件可以被分散化。我们将在这里选择创建一个新组织。创建一个新公司需要以太币，用我们在上一步中创建的钱包支付。然后，通过确认它们将交易广播到区块链上。Aragon使用通用模板在区块链上部署公司，但创始人可以通过修改公司章程来编辑此模板。右上角的循环进度指示器显示了用于公司部署的交易正在验证的过程。公司部署后，下一个屏幕是Aragon核心仪表板。这是用户（执行者或员工）处理DAO的日常运营的地方，具有参与投票、分配股份等功能。仪表板默认显示欢迎屏幕给用户。为了浏览此仪表板，让我们从“设置”下的您的个人资料开始（参见图[5-5](#Fig5)）。![A430562_1_En_5_Fig5_HTML.jpg](Images/A430562_1_En_5_Fig5_HTML.jpg)图5-5.Aragon核心仪表板中的设置每个帐户在网络上都被分配了一个地址和一个用户名。该地址也与通过钱包可用的资金相关联。地址下面是该用户的角色。接下来，设置屏幕显示了有关我们在先前步骤中创建的公司的一些信息。给出了公司的地址，并且创始人会与员工分享这个地址，以便他们加入组织。回想一下图[5-4](#Fig4)中的
- en: Issuing Shares
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发行股份
- en: 'Now that we have our generic company operational, it’s time to start editing
    the template and customizing the DAO. We explore here how to issue stock, add
    new types of shares, and assign them to an employee. In Aragon, every action that
    deals with changing the company''s operation relies on members reaching a consensus
    through majority voting. The default settings give every shareholder voting power,
    but this can be refined by editing the bylaws. Let’s begin by issuing shares to
    the DAO.NoteOne interesting use case for a company (or a DAO) in Aragon is to
    be used as a decentralized decision-making body for an open source project or
    an associated technology. The stocks become a mechanism for decision making for
    future directions of the project with greater community involvement through voting.
    The use of tokens and the ability to raise funds also provides a mechanism for
    providing monetary support to sustain development. We revisit this scenario later
    in this chapter.Referring to Figure [5-6](#Fig6), use the menu available in the
    top right to select Issue Shares to open a screen on the side. Issuing new shares
    will require us to pick a class of shares to offer and the number of shares to
    issue. The process is shown in Figure [5-7](#Fig7).![A430562_1_En_5_Fig7_HTML.jpg](Images/A430562_1_En_5_Fig7_HTML.jpg)Figure
    5-7.Issuing more sharesFirst, we have to decide the class of shares to issue.
    Currently, there is only one class of shares available, so we will use the default.
    Next, we choose to issue 100 new shares of the CVS type. To finalize this action,
    we first have to go through a voting process. Recall that all major changes to
    the company need to be reviewed by other shareholders and approved before an action
    can be carried out. Here, additional shares will only be issued if the notion
    receives at least 50 percent approval from shareholders. Only after that, the
    company gains more shares that can be reassigned to other users.Currently there
    is only one voting user in the DAO, so this will be the deciding vote. The voting
    interface looks like the general schematic for the voting process shown in Figure
    [5-8](#Fig8).![A430562_1_En_5_Fig8_HTML.jpg](Images/A430562_1_En_5_Fig8_HTML.jpg)Figure
    5-8.The voting interfaceIt follows a very straightforward outline , beginning
    with the name of the notion bring brought to voters’ attention. This is followed
    by the action being taken in response and a tentative schedule of the voting.
    The default setting for Aragon is to pass a notion with more than 50 percent approval.
    The interface next displays who put forth this notion for voting; here Me refers
    to the user connected to this Aragon client, along with the user’s address. The
    details of voting are shown next. Here only one vote is needed to approve the
    notion. Finally, the user is presented with two choices: Approve and Reject. After
    the vote has been cast, it will be gathered in a transaction. When the poll closes,
    all the votes will automatically be counted and the outcome displayed.So what
    does the voting outcome look like? Here, we assume the choice was to approve the
    notion for our DAO. Figure [5-9](#Fig9) shows the outcome of the vote.![A430562_1_En_5_Fig9_HTML.jpg](Images/A430562_1_En_5_Fig9_HTML.jpg)Figure
    5-9.Outcome of voting. The proposition has been accepted and voting is closed.
    The overall statistics on voting are reported so any user can see how the vote
    was splitIssuing more shares just changed the ownership distribution in our DAO.
    By default, newly issued shares belong to the company and then executives can
    vote to transfer those shares to other users as they see fit. Figure [5-10](#Fig10)
    shows the new distribution after shares have been issued. Compare this to Figure
    [5-6](#Fig6) when the company was just instantiated. Recall that until now, we
    have only had one stock class, so the global distribution of shares changes but
    there are no changes in the stock types. Let’s add new classes of stocks and explore
    the options associated with them.![A430562_1_En_5_Fig10_HTML.jpg](Images/A430562_1_En_5_Fig10_HTML.jpg)Figure
    5-10.A composite of the changes in ownership distribution with new shares issuedNotice
    that the new shares are issued directly to the company, not any particular user.
    Notice also the changes in the global distribution pie chart. Previously, the
    Me stake was the only visible portion of the chart. Now, with the new updates,
    the company holds a majority of the shares .Before we add new stock types to our
    DAO, let’s briefly talk about the different types of stock typically issued by
    a public company. There are three major types that we consider here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的通用公司已经运作，是时候开始编辑模板并自定义 DAO 了。我们在这里探讨如何发行股票，添加新类型的股票，并将它们分配给员工。在 Aragon
    中，涉及改变公司运营的每一个动作都依赖于成员通过多数投票达成共识。默认设置赋予每个股东投票权，但这可以通过编辑章程进行细化。让我们开始向 DAO 发行股票。注意：Aragon
    中公司（或 DAO）的一个有趣用例是用作开源项目或相关技术的去中心化决策机构。股票成为未来项目方向决策的机制，通过投票更广泛地涉及社区参与。代币的使用和筹集资金的能力也为提供资金支持以维持发展提供了机制。我们稍后在本章再次讨论这种情景。参见图
    [5-6](#Fig6)，使用右上角的菜单选择“发行股份”以打开侧边栏上的屏幕。发行新股份将需要我们选择要提供的股份类别和要发行的股份数目。此过程显示在图
    [5-7](#Fig7) 中。![A430562_1_En_5_Fig7_HTML.jpg](Images/A430562_1_En_5_Fig7_HTML.jpg)图
    5-7.发行更多股份首先，我们必须决定要发行的股份类别。目前只有一类股份可用，所以我们将使用默认设置。接下来，我们选择发行 100 股 CVS 类型的新股份。要完成此操作，我们首先必须经过投票过程。请记住，公司的所有重大变更都需要由其他股东审查并获得批准，然后才能执行。在这里，只有在该提案获得至少
    50% 股东批准后，才会发行额外的股份。只有在那之后，公司才能获得更多股份，可以重新分配给其他用户。目前 DAO 中只有一个投票用户，因此这将是决定性的投票。投票界面看起来像图
    [5-8](#Fig8) 中显示的投票过程的一般概要。![A430562_1_En_5_Fig8_HTML.jpg](Images/A430562_1_En_5_Fig8_HTML.jpg)图
    5-8.投票界面它遵循一个非常简单的大纲，从将要提交给投票者注意的提案名称开始。接下来是作为响应采取的行动以及投票的初步时间表。Aragon 的默认设置是通过超过
    50% 的批准来通过提案。接口接下来显示是谁提出了这个提案进行投票；这里的“我”指的是连接到此 Aragon 客户端的用户，以及用户的地址。接下来显示投票的详细信息。在这里，只需要一票来批准提案。最后，用户将看到两个选择：批准和拒绝。投票完成后，将收集到一次交易。当投票结束时，所有投票将自动计算并显示结果。那么投票结果是什么样的呢？在这里，我们假设选择批准
    DAO 的提案。图 [5-9](#Fig9) 显示了投票结果。![A430562_1_En_5_Fig9_HTML.jpg](Images/A430562_1_En_5_Fig9_HTML.jpg)图
    5-9.投票结果。该提案已被接受，投票已关闭。报告了投票的整体统计数据，以便任何用户都可以看到投票如何分配发行更多股份刚刚改变了我们 DAO 的所有权分配。默认情况下，新发行的股份属于公司，然后执行人员可以投票将这些股份转让给其他用户。图
    [5-10](#Fig10) 显示了发行股份后的新分配情况。与仅创建公司时的情况相比，这是一个改变。请记
- en: 'Common stock (Class A): This is what people normally refer to when they mention
    stocks. Common stock is issued by a company and usually available through stock
    exchanges such as the New York Stock Exchange (NYSE) or Nasdaq. The main advantages
    of common stock are payment in dividends and trade in an exchange. A dividend
    is typically a sum of money paid to the shareholders of a company at the end of
    a quarter out of the profits generated in that quarter. Common stock can be also
    be traded or sold at any time on an accredited exchange.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 普通股票（A类）：人们通常在提及股票时所指的就是这种。普通股票由一家公司发行，通常可以通过纽约证券交易所（NYSE）或纳斯达克等股票交易所进行交易。普通股票的主要优势在于分红和在交易所交易。股息通常是在每个季度结束时从当季利润中支付给公司股东的一笔款项。普通股票也可以在任何时候在认可的交易所进行交易或出售。
- en: 'Preferred stock (Class B): Preferred stock is a special kind of stock issued
    to investors who have a significant stake in the company. This stock has a few
    financial advantages over common stock, making it a safer investment. In terms
    of dividends, preferred stock is cashed before common stock and as a result receives
    a larger share of a company’s profits as compared to common stock. Moreover, common
    stock can vary in terms of dividends paid out, whereas preferred stock provides
    fixed returns to the shareholders .'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先股票（B类）：优先股票是一种特殊类型的股票，发行给对公司有重大利益的投资者。这种股票在财务上比普通股票有一些优势，使其成为更安全的投资。在股息方面，优先股票在普通股票之前兑现，因此相比普通股票获得了更大比例的公司利润。此外，普通股票的股息支付可以有所不同，而优先股票为股东提供固定的回报。
- en: 'Founder stock (Class F): Class F shares are an exclusive kind of preferred
    stock issued to founders of a company. These shares come with greater voting rights;
    for instance, one share of founder stock might counts for ten votes. In comparison,
    one share of common stock would only account for one vote. Founder stock grants
    super voting rights and is normally used to retain control of a company’s decision-making
    process when a large number of entities are involved.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创始人股票（F类）：F类股票是发行给公司创始人的一种独特类型的优先股票。这些股票带有更大的表决权；例如，一份创始人股票可能计为十票。相比之下，一份普通股票只能计为一票。创始人股票授予超级表决权，通常用于在涉及大量实体时保留对公司决策过程的控制。
- en: 'Let’s look at the stock classes offered in Aragon. This can be done through
    the Ownership tab we saw in Figure [5-6](#Fig6). Click Add Stock Class to open
    the dialog box shown in Figure [5-11](#Fig11).![A430562_1_En_5_Fig11_HTML.jpg](Images/A430562_1_En_5_Fig11_HTML.jpg)Figure
    5-11.Interface for adding new stockThere are four stock classes available in Aragon,
    listed under Stock Templates. Voting stock is the default, non-voting stock may
    be issued to attract employees to a company where holding stock becomes an economic
    multiplier, founders stock offers super voting rights and often remains concentrated
    among the founders , and finally unicorn stock is given to special investors who
    have a significant stake in the company because it offers a high multiplier and
    voting power. Next we assign the parameters of our new stock class. We will add
    a class of founder stock that will be indicated in the ownership with the symbol
    ARN-c. By default, founder stock has higher voting power than common stock, but
    that can be updated as necessary. The Economic Rights setting is a multiplier
    for the stockholder; essentially, the dividends paid back to this stockholder
    are multiplied by their economic right. Next is the number of shares issued. In
    this case, we want to add a founder class, and issue 30 new founder shares to
    the company. As usual, adding a new stock class would require a vote to be cast
    (16) and then the new shares would be made available.What does the new stock distribution
    look like? Figure [5-12](#Fig12) shows the addition of a new stock, and the changes
    are visible in the Stock Types pie chart .![A430562_1_En_5_Fig12_HTML.jpg](Images/A430562_1_En_5_Fig12_HTML.jpg)Figure
    5-12.Founder stock added. ARN-c is used as the symbol, and all current shares
    are owned by the company. To assign shares to members, a vote would have to be
    takenNext, we add another user to our DAO. The second user will be added as an
    employee and then assigned some shares. We can also show how an existing shareholder
    can reward another user with exclusive shares for their excellent work or a promotion.
    To add a new member to your organization, you would have to provide a user with
    the company address shown in Figure [5-5](#Fig5). They need to download Aragon
    and join your organization in the first steps after creating a wallet. After a
    new member joins, he or she can see the current state of the company through the
    Ownership settings. Figure [5-13](#Fig13) shows the process of assigning a role
    to a new user after that user has joined your organization.NoteThe terms organization,
    company, and DAO are being used interchangeably throughout this walkthrough.![A430562_1_En_5_Fig13_HTML.jpg](Images/A430562_1_En_5_Fig13_HTML.jpg)Figure
    5-13.Assigning role to a new employee in the organizationThe Roles tab shown in
    Figure [5-13](#Fig13) provides an overview of all the entities in the company.
    Currently, only one user is present: Me is the user connected to this Aragon client.
    To assign a new role, click Assign a Role to open the Assign Role dialog box.
    The recipient can be added by their username or an account address in the Recipient
    field. Depending on your company’s policies, if you require some level of identification
    to be associated with your members, you can add those users by referring to their
    username . If you don’t use the Keybase identity registry, you would have to add
    new users by referring to an address. After inputting the address, you can decide
    on the role for a user. Here, we are adding a new employee; however, there are
    other options available, such as adding a new executive, another employee, or
    a superuser. The superuser role is normally reserved for nonhuman entities that
    are a part of your organization, such as oracles or a factory entity that can
    deploy other components of your company. As always, assigning a new role to a
    user would require a vote to be cast before the role can be confirmed.So far,
    we have discussed how to issue new shares, assign stock, add new stock classes,
    and assign roles to new members of your company. Here is an exercise for you:
    Building on the current state of our DAO, add a nonvoting stock class with an
    economic multiplier of 5, and issue 1,000 shares to the company. Then, assign
    five of those shares to the new employee, Summer Snow. The result should look
    like Figure [5-14](#Fig14).![A430562_1_En_5_Fig14_HTML.jpg](Images/A430562_1_En_5_Fig14_HTML.jpg)Figure
    5-14.Assigning shares to a new userThe reader exercise should result in a new
    stock class called, ARN-b which is a non-voting stock. There should be 1,000 shares
    issued and by default, all the shares belong to the company. Next, we want to
    assign shares, which can be done on the Ownership tab. We have to refer to Summer
    Snow by an address, then pick the stock class and the number of shares to be assigned.
    To approve this change, we normally need a vote. In this case, however, the non-voting
    stock has an exception: An executive can grant non-voting stock instantly to another
    employee without any need for approval. This is limited only to assigning non-voting
    stock within a company , but this exception can be removed by editing the bylaws.Here
    are two more tasks: Assign half of the founders stock to yourself, and transfer
    1 founders share to Summer Snow. Both tasks can be performed on the Ownership
    tab and the final ownership distribution should look like Figure [5-15](#Fig15).
    The transfer process can also be completely instantly without any voting, but
    this action is irreversible.![A430562_1_En_5_Fig15_HTML.jpg](Images/A430562_1_En_5_Fig15_HTML.jpg)Figure
    5-15.Final ownership distribution at the end of all the steps performedThe Ownership
    tab organizes the shareholders by the stock classes they own. To review, we have
    three classes of stock available now: a non-voting stock (ARN-c), a CVS, and founders
    stock (ARN-b). The majority of shares with voting power are still owned by the
    executive, but transferring stock to the employee makes them eligible to participate
    in voting. On the right side are the newly updated pie charts for voting and global
    distribution of stock within the company. These common operations allow your company
    to serve as a governing body and collaboratively determine the future direction
    of an attached project.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看Aragon提供的股票类别。 这可以通过我们在图[5-6](#Fig6)中看到的所有权选项卡来完成。 单击添加股票类别以打开图[5-11](#Fig11)中显示的对话框。
    ![A430562_1_En_5_Fig11_HTML.jpg](Images/A430562_1_En_5_Fig11_HTML.jpg)图5-11.添加新股票的界面在Aragon中提供了四种股票类别，列在股票模板下。
    投票股票是默认的，非投票股票可能会发行给吸引员工的公司，持有股票成为经济乘数，创始人股票提供超级投票权并且通常保持在创始人之间，最后独角兽股票是给予拥有公司重大股份的特别投资者的，因为它提供了高倍增器和投票权。
    接下来，我们分配我们新股票类别的参数。 我们将添加一个创始人股票类别，该类别将在所有权中用ARN-c符号表示。 默认情况下，创始人股票的投票权高于普通股，但根据需要可以更新。
    经济权设置是股东的乘数； 实际上，支付给该股东的股息会乘以他们的经济权。 接下来是发行的股票数量。 在这种情况下，我们想添加一个创始人类别，并向公司发行30股新的创始人股。
    通常情况下，添加新股票类别需要进行投票（16），然后新股票才能提供。新股票分配是什么样的？ 图[5-12](#Fig12)显示了添加新股票，更改在股票类型饼图中可见。
    ![A430562_1_En_5_Fig12_HTML.jpg](Images/A430562_1_En_5_Fig12_HTML.jpg)图5-12.添加创始人股票。
    ARN-c用作符号，所有现有股票均由公司拥有。 要将股票分配给成员，必须进行投票接下来，我们向我们的DAO添加另一个用户。 第二个用户将被添加为员工，然后分配一些股票。
    我们还可以展示一个现有股东如何以独占股份的方式奖励另一个用户，以表彰他们的优秀工作或晋升。 要将新成员添加到您的组织中，您必须向用户提供在图[5-5](#Fig5)中显示的公司地址。
    他们需要下载Aragon并在创建钱包后的第一步中加入您的组织。 新成员加入后，他或她可以通过所有权设置看到公司的当前状态。 图[5-13](#Fig13)显示了在新用户加入组织后为新用户分配角色的过程。注意在本教程中，“组织”、“公司”和“DAO”这些术语是可以互换使用的。
    ![A430562_1_En_5_Fig13_HTML.jpg](Images/A430562_1_En_5_Fig13_HTML.jpg)图5-13.在组织中为新员工分配角色图[5-13](#Fig13)中显示的角色选项卡提供了公司中所有实体的概述。
    目前，只有一个用户存在：连接到此Aragon客户端的Me用户。 要分配新角色，请单击分配角色以打开分配角色对话框。 可以通过其用户名或接收者字段中的帐户地址添加接收者。
    根据您公司的政策，如果您要求与您的成员相关联的某种身份级别，则可以通过引用其用户名将这些用户添加到其中。 如果您不使用Keybase身份注册表，则必须通过引用地址来添加新用户。
    输入地址后，您可以为用户决定角色。 在这里，我们正在添加一个新的员工； 但是，还有其他可用选项，例如添加新的执行者、另一个员工或超级用户。 超级用户角色通常保留给非人实体，这些实体是您组织的一部分，例如oracle或可以部署您公司其他组件的工厂实体。
    像往常一样，向用户分配新角色需要进行投票才能确认。到目前为止，我们已经讨论了如何发行新股份，分配股票，添加新股票类别以及为公司的新成员分配角色。 这里有一个练习：根据我们DAO的当前状态，添加一个经济乘数为5的非投票股票类别，并向公司发行1,000股。
    然后，将其中五股分配给新员工夏季雪。 结果应该看起来像图[5-14](#Fig14)。 ![A430562_1_En_5_Fig14_HTML.jpg](Images/A430562_1_En_5_Fig14_HTML.jpg)图5-14.将股票分配给新用户读者练习应该产生一个名为ARN-b的新股票类别，这是一种非投票股票。
    应该发行1,000股， 默认情况下，所有股份都属于公司。 接下来，我们要分配股票，可以在所有权选项卡上完成。 我们必须通过地址引用夏季雪，然后选择股票类别和要分配的股份数。
    要批准此更改，通常需要投票。 但是，在这种情况
- en: Fundraising and Bylaws
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 筹款与章程
- en: 'In the last topic of our walkthrough , we handle the more advanced features
    present in Aragon, namely fundraising on the blockchain and bylaws, which offer
    another level of fine-tuning for governance of your company. Raising a round of
    funding on the Aragon blockchain is very different from traditional fundraising.
    The core idea is simple: Once your DAO is operational, you can issue shares and
    then you can offer a class of those shares to an investor in return for Ether.
    These shares can either be offered to an individual investor, or more broadly
    to the any participant in the network. A round has a specific closing window and
    starts when it has been approved by the company after voting. The second feature
    we discuss here is the bylaws, which are the computational equivalent of a configuration
    file that allows variables to be reassigned and updated as necessary. Bylaws provide
    a very granular level of access to the governing architecture of your company,
    and if changes are approved, the new rules are implemented immediately. All the
    default settings that we have referenced in previous topics arise from a template
    of bylaws adopted by Aragon to set up a company. Although new bylaws cannot be
    added to Aragon yet, the existing rules can be changed to create different levels
    of user permissions for members of the company. Let’s look at fundraising in Aragon
    in Figure [5-16](#Fig16).![A430562_1_En_5_Fig16_HTML.jpg](Images/A430562_1_En_5_Fig16_HTML.jpg)Figure
    5-16.Fundraising from a specific investor in AragonIn the Aragon Core, there’s
    a Fundraising tab, where you can click New Raise to open the corresponding dialog
    box. Currently there are two types of options for fundraising implemented in Aragon.
    The first one involves raising a round from a specific investor in return for
    a stake in your company. The second option is a crowdsale, where any participant
    of the network can buy stock in your company. In this case, we choose the first
    option and start an individual raise. The series needs a title and the class of
    shares being offered in return for the funds raised. Normally, an investor would
    want voting rights, so we picked CVS. After that, you have to enter the investor’s
    address manually and then specify how many shares you want to offer. Once the
    Aragon network has a true market, the shares can be priced in Ether and have tangible
    value on the blockchain. The outcome of a project associated with the Aragon-powered
    DAO will determine the value of the shares in market. The fundraiser has a time-window,
    at the end of which the round will close. This has the potential to evolve into
    the all-or-nothing model that Kickstarter uses. Finally, the fundraiser needs
    to be approved by a majority before it can become active and come online to the
    network .Let’s look at the bylaws next. Figure [5-17](#Fig17) shows a list of
    currently implemented bylaws that every entity participating in your company has
    agreed to honor. Eventually, executive-implemented rules will be allowed in Aragon
    to offer even more customization over governance.![A430562_1_En_5_Fig17_HTML.jpg](Images/A430562_1_En_5_Fig17_HTML.jpg)Figure
    5-17.Bylaws for the companyThe Bylaws tab lists all the available laws implemented
    for the company. We take a look here at the first law, which dictates how voting
    can be initiated. In Aragon, every major action requires a vote from the participants,
    so changing who can initiate a vote also implies that more actions can be performed
    that require a vote. The action requirements in the Begin Voting dialog box provide
    a few options, such as being a shareholder, having a role assigned in the company,
    or limiting voting to specific addresses (users). By default, voting requires
    a shareholder, but that can be changed here as needed. As with every other major
    action, a change in bylaws requires majority approval to be implemented company-wide.Let’s
    look at another example, this time granting the power to assign roles to new users
    and how identities can be integrated automatically using an oracle. Figure [5-18](#Fig18)
    provides a depiction of this example .![A430562_1_En_5_Fig18_HTML.jpg](Images/A430562_1_En_5_Fig18_HTML.jpg)Figure
    5-18.Changing the status of a member in your companyThis process is similar to
    the previous step, but instead, we will edit the second bylaw, Set entity status,
    here. In the Set Entity Status dialog box, select the last option: An oracle will
    be called for confirmation. This changes the parameters, as now you just need
    to provide the address of the oracle on the network. How does identity management
    function using an oracle? If your company requires some level of identification,
    Aragon can be integrated with Keybase and an oracle can confirm the status of
    identification from Keybase. In this way, new roles can be assigned without the
    need for a vote and only promotions or entity status updates would require network-wide
    voting .'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的教程中的最后一个话题中，我们处理了 Aragon 中的更高级功能，即区块链上的筹款和章程，这些功能为公司的治理提供了另一层微调的水平。在 Aragon
    区块链上进行一轮筹款与传统筹款非常不同。核心思想很简单：一旦你的 DAO 运作起来，你就可以发行股份，然后你可以向投资者提供这些股份的一类，以换取以太币。这些股份可以被提供给个别投资者，或者更广泛地提供给网络中的任何参与者。一轮筹款有一个特定的结束窗口，当公司投票通过后，它开始。我们在这里讨论的第二个功能是章程，它们是一个允许变量根据需要重新分配和更新的配置文件的计算等效物。章程为你的公司的治理架构提供了非常细粒度的访问级别，如果变更被批准，则新规则将立即实施。我们在先前的话题中引用的所有默认设置都来自
    Aragon 采用的章程模板，用于建立公司。尽管新的章程尚不能添加到 Aragon 中，但现有规则可以更改以为公司成员创建不同级别的用户权限。让我们看一下在
    Aragon 中的筹款，见图[5-16](#Fig16)。![A430562_1_En_5_Fig16_HTML.jpg](Images/A430562_1_En_5_Fig16_HTML.jpg)图
    5-16.在 Aragon 中从特定投资者那里筹款在 Aragon Core 中，有一个筹款选项卡，您可以单击“新筹款”以打开相应的对话框。目前在 Aragon
    中实施了两种类型的筹款选项。第一种涉及从特定投资者那里筹集一轮资金，以换取你公司的股份。第二个选项是众筹，任何网络的参与者都可以购买你公司的股票。在这种情况下，我们选择了第一种选项并开始了个人筹款。这个系列需要一个标题和要为筹集到的资金提供的股份类别。通常，投资者会想要投票权，所以我们选择了
    CVS。之后，您必须手动输入投资者的地址，然后指定您想要提供多少股份。一旦 Aragon 网络有了真正的市场，这些股份就可以用以太币定价，并在区块链上具有切实的价值。与
    Aragon 动力 DAO 相关的项目的结果将决定市场上股份的价值。筹款活动有一个时间窗口，在这个窗口结束时，该轮将关闭。这有可能演变成 Kickstarter
    使用的全有或全无模式。最后，筹款活动需要得到大多数人的批准，才能成为活跃并在线到网络上。接下来让我们看看章程。图[5-17](#Fig17)显示了当前实施的章程列表，每个参与公司的实体都同意遵守这些章程。最终，Aragon
    将允许执行型规则，以提供更多关于治理的定制化。![A430562_1_En_5_Fig17_HTML.jpg](Images/A430562_1_En_5_Fig17_HTML.jpg)图
    5-17.公司的章程章节列出了为公司实施的所有可用法律。我们在这里看一下第一个法律，它规定了如何发起投票。在 Aragon 中，每个重大行动都需要参与者的投票，因此更改谁可以发起投票也意味着可以执行更多需要投票的行动。在“开始投票”对话框中的操作要求提供了几个选项，例如成为股东，被分配公司中的角色，或将投票限制为特定地址（用户）。默认情况下，投票需要股东，但根据需要可以在此处更改。与每个其他重大行动一样，章程的更改需要得到大多数人的批准，以在公司范围内实施。接下来让我们看一个例子，这次是授予给新用户分配角色的权力以及如何使用一个
    oracle 自动集成身份。图[5-18](#Fig18)提供了这个例子的描绘。![A430562_1_En_5_Fig18_HTML.jpg](Images/A430562_1_En_5_Fig18_HTML.jpg)图
    5-18.更改您公司中成员的状态这个过程与前一步骤类似，但是我们将在这里编辑第二条法律，即设置实体状态。在“设置实体状态”对话框中，选择最后一个选项：将调用一个
    oracle 进行确认。这更改了参数，因为现在你只需要在网络上提供 oracle 的地址。如何使用 oracle 进行身份管理？如果您的公司需要一定级别的身份确认，Aragon
    可以与 Keybase 集成，并且 oracle 可以确认来自 Keybase 的身份状态。通过这种方式，新的角色可以被分配，而无需投票，只有晋升或实体状态更新需要网络范围的投票。
- en: Summary
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the concept of decentralized organizations. We
    started with a presentation of Aragon in the context of decentralized organizations
    built on the blockchain. We talked about the definition of a DAO and the organs
    that Aragon implements. We had an in-depth discussion on the identity management
    features enabled by Aragon and Keybase. Finally, the heart of this chapter was
    the walkthrough of how to set up, manage, and operate a DAO, including all its
    basic functions. This chapter has provided the foundation for creating your own
    DAO.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了去中心化组织的概念。我们从在区块链上构建的去中心化组织的背景下介绍了Aragon。我们谈论了DAO的定义以及Aragon实现的机构。我们深入讨论了Aragon和Keybase实现的身份管理功能。最后，本章的重点是如何设置、管理和运营DAO，包括其所有基本功能的演示。本章为创建您自己的DAO奠定了基础。
- en: References
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料
- en: The main reference used to compile this chapter was the Aragon whitepaper and
    the aragon-core GitHub docs.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 编写本章的主要参考资料是Aragon白皮书和aragon-core GitHub文档。
