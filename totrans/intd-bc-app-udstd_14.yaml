- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022J. T. GeorgeIntroducing Blockchain Applications[https://doi.org/10.1007/978-1-4842-7480-4_14](https://doi.org/10.1007/978-1-4842-7480-4_14)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家许可给APress Media, LLC，隶属于Springer Nature 2022J. T. George介绍区块链应用[https://doi.org/10.1007/978-1-4842-7480-4_14](https://doi.org/10.1007/978-1-4842-7480-4_14)
- en: 14. Using a MATLAB Smart Farm Project
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14. 使用MATLAB智能农场项目
- en: Joseph Thachil George^([1](#Aff2)  )(1)Rome, Italy
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Joseph Thachil George^([1](#Aff2)  )(1)意大利，罗马
- en: This project illustrates how to effectively control mutual exclusive access
    to a shared resource. To implement exclusivity in this manner, the project is
    created in MATLAB using the Simulink framework. The name of the project is *Smart
    Farm*. In this project, a fleet of autonomous robots performs a series of farming
    tasks, including preparing the soil, watering the plants, and producing the harvested
    plants.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目说明了如何有效地控制对共享资源的互斥访问。为了以这种方式实现排他性，该项目使用MATLAB和Simulink框架创建。项目的名称是*智能农场*。在这个项目中，一支由自主机器人组成的队伍执行一系列的农业任务，包括准备土壤、浇水和收获植物。
- en: 14.1 Description of the Smart Farm Project
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.1 智能农场项目描述
- en: The project addresses a case study of distributed, mutual exclusive access to
    a shared resource. The context is a *smart farm*, where a fleet of autonomous
    robots prepares the soil, waters the plants, harvests plant production, and so
    on.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目涉及到一个分布式、互斥访问共享资源的案例研究。情境是一个*智能农场*，其中一支由自主机器人组成的队伍负责准备土壤、浇水、收获植物等工作。
- en: Each robot moves cyclically between the fields and the main farm buildings and
    stores. The geography of the farm is such that there are two main production fields
    (named North and South), reachable from the main farm premises by a rural road
    that passes over a small bridge on a river (see Figure [14-1](#Fig1)). Only one
    robot at a time can use the bridge, which means that robots need to negotiate
    exclusive access to the bridge by means of V2V communication, with no centralized
    control center.![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig1_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig1_HTML.jpg)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 每个机器人循环移动在田地和主要农场建筑和仓库之间。农场的地理位置是这样的，有两个主要的生产区域（称为北部和南部），可以通过一条乡村道路从主要农场设施到达，该道路横跨一条小河上的一座小桥（见图[14-1](#Fig1)）。一次只能有一个机器人使用桥梁，这意味着机器人需要通过V2V通信协商独占式访问桥梁，而没有中央控制中心。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig1_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig1_HTML.jpg)
- en: Figure 14-1
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-1
- en: Bridge on a river
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 河上的桥梁
- en: Each robot can be seen as cycling through different modes of operation, represented
    in Figure [14-2](#Fig2). When a robot needs to move to a field or to the farm
    building, it enters Ask4Bridge mode, in which it asks for access to the bridge,
    communicating this request to the other robots, which are in the Ask4Bridge or
    Bridge modes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 每个机器人可以被视为在不同操作模式之间循环，如图[14-2](#Fig2)所示。当机器人需要移动到田地或农场建筑时，它会进入询问桥梁模式，向其他处于询问桥梁或桥梁模式的机器人发出访问桥梁的请求。
- en: The main objective of the project is to define the distributed communication
    protocol that allows exclusive access to the bridge, in order to avoid collisions
    over the bridge.![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig2_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig2_HTML.jpg)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的主要目标是定义分布式通信协议，以实现对桥梁的独占访问，以避免在桥梁上发生碰撞。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig2_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig2_HTML.jpg)
- en: Figure 14-2
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图14-2
- en: Modes of operation
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 操作模式
- en: 14.1.1 Project Requirements
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.1.1 项目需求
- en: 'The system must meet the following requirements:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 系统必须满足以下要求：
- en: '*Requirement 1*: The system is composed of a non-predetermined number of identical
    robots communicating with each other via a wireless connection.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 1*：系统由一组不确定数量的相同机器人组成，它们通过无线连接进行通信。'
- en: '*Requirement 2*: Each robot follows the cyclic modes of operation behavior
    described in Figure [14-2](#Fig2).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 2*：每个机器人遵循图[14-2](#Fig2)中描述的循环操作行为。'
- en: '*Requirement 3*: No two robots can access the bridge at the same time (mutual
    exclusion, safety).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 3*：任何两个机器人不能同时访问桥梁（互斥，安全性）。'
- en: '*Requirement* 4: A robot that is not granted bridge access waits until the
    bridge is cleared, and only then issues a new access request.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求* 4：未被授予桥梁访问权限的机器人将等待桥梁清空，然后才会发出新的访问请求。'
- en: '*Requirement* 5: If a robot issues a bridge access request, sooner or later,
    it is granted access (*liveness*).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求* 5：如果机器人发出桥梁访问请求，迟早会被授予访问权限（*活性*）。'
- en: '*Requirement 6:* If access to the bridge is granted to a robot coming from
    the North field, and there are at least two other robots R1 and R2 coming—R1 also
    from the North, and R2 from the farm or from South—then the next access cannot
    be granted to R1, coming again from North. The same applies to the symmetrical
    cases of a robot crossing the bridge from South or from the farm (*fairness*).'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 6*：如果桥梁的访问权限被授予来自北部田地的机器人，并且至少还有其他两个机器人 R1 和 R2 要过来—R1 也来自北部，R2 来自农场或南部—那么下一个访问权限不能再次授予给
    R1，再次来自北部。对于机器人从南部或从农场穿过桥梁的对称情况也适用（*公平性*）。'
- en: '*Requirement 7*: The system is based on a totally distributed algorithm, without
    any element of centralization.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 7*：该系统基于完全分布式算法，没有任何集中化元素。'
- en: '*Requirement 8*: The robots do not refer to a common clock, but each clock
    is autonomous and not synchronized.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*需求 8*：机器人不使用统一的时钟，而是每个时钟都是自主的，不进行同步。'
- en: 14.1.2 Solution Hints
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.1.2 解决方案提示
- en: The robots can be seen as nodes of a distributed system, which will be modeled
    using the given specification formalism. Typically each node will be modeled as
    an *extended finite state machine* of some form, and the nodes will exchange data
    using the mechanisms offered by the formalism to let different state machines
    communicate.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人可以看作是分布式系统的节点，将使用给定的规范形式对其进行建模。通常，每个节点将被建模为某种形式的*扩展有限状态机*，并且节点将使用规范提供的机制来交换数据，以使不同的状态机进行通信。
- en: The nodes (robots) are identified with a number, and their identifier can be
    used to send point-to-point communications when necessary.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 节点（机器人）用一个数字进行标识，它们的标识符可以在必要时用于发送点对点通信。
- en: As a suggestion, you can organize the solution based on a 2PC (two-phase commit
    protocol) algorithm (standard or linear), in which you need to define a coordinator,
    sending its proposal to the others.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为建议，您可以基于2PC（两阶段提交协议）算法（标准或线性）组织解决方案，在该算法中需要定义一个协调器，向其他节点发送其提案。
- en: A robot R1 asking for access to the bridge is acting as the coordinator at each
    run. Hence, it broadcasts the access request to the other robots. A robot receiving
    this request from R1, when working in any mode other than Ask4Bridge or Bridge,
    simply replies agree. A robot in Bridge mode will reply instead with abort, since
    it currently occupies the bridge. A robot R2 receiving this request from R1, when
    in mode Ask4Bridge*,* replies abort if its identifier is lower than that of R1;
    otherwise, it replies agree*.* But in this case, R2 has also to abort the algorithm
    run that it had launched when it entered Ask4Bridge mode  .
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 申请访问桥梁的机器人R1在每次运行时都充当协调器。因此，它向其他机器人广播访问请求。一个机器人从R1接收到这个请求时，当处于Ask4Bridge或Bridge以外的任何模式时，简单地回复同意。一个处于桥接模式的机器人将回复中止，因为它当前正在占用桥梁。一个机器人R2在Ask4Bridge模式下收到来自R1的请求时，如果它的标识符低于R1的标识符，它将回复中止；否则，它将回复同意。但在这种情况下，R2还必须中止它进入Ask4Bridge模式时启动的算法运行。
- en: A robot leaving the Bridge mode broadcasts the information that the bridge is
    free to the other nodes, so that the ones in Ask4Bridge mode can retry their requests.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 离开桥接模式的机器人会向其他节点广播桥接空闲的信息，以便处于Ask4Bridge模式的节点可以重试它们的请求。
- en: Note that a node should be able to start its own 2PC run *and* listening to
    messages incoming from other robots engaged in other 2PC (two-phase commit protocol)
    runs at the same time. This requires the use of some concurrent threads, or *statechart*
    regions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一个节点应该能够启动自己的2PC运行*并且*同时监听来自其他参与其他2PC（两阶段提交协议）运行的机器人的消息。这需要使用一些并发线程，或者*状态图*区域。
- en: In the first phase, you should focus on the 2PC scheme by considering a fixed
    set of three or four robots and accurately studying their interactions, ignoring
    the liveness and fairness requirements and considering only three operating modes
    *(*Ask4Bridge, Field Action, and Bridge).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一阶段，你应该专注于2PC方案，考虑一个固定的三或四个机器人集合，并准确研究它们的相互作用，忽略活性和公平性要求，只考虑三种操作模式（*Ask4Bridge*、*Field
    Action*和*Bridge*)。
- en: In the second phase, you extend the model to consider the other operating modes,
    possibly a larger number of robots and/or the liveness/fairness requirements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二阶段，你需要将模型扩展以考虑其他操作模式，可能涉及更多的机器人和/或活性/公平性要求。
- en: Note that, in general, the tools (in order to be able to simulate or formally
    verify the model) need to instantiate a fixed number of objects (nodes) by physically
    copying and pasting.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，通常情况下，为了能够模拟或正式验证模型，需要实例化一定数量的对象（节点），通过物理复制和粘贴。
- en: 14.2 Implementing the Project
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.2 实施项目
- en: The project is designed with three robots that move cyclically between the fields
    and the main agricultural buildings and stores. The geography of the farm is such
    that there are two main production fields (named North and South). The movements
    of robots satisfy the three basic requirements of concurrency control in distributed
    system using mutual exclusion, as mentioned earlier.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目设计有三台机器人，它们在田地和主要农业建筑物及仓库之间循环移动。农场的地理位置使得有两个主要的生产田地（命名为北和南）。机器人的移动满足分布式系统中使用互斥的并发控制的三个基本要求，如前文所述。
- en: In addition to that, the system is based on a totally distributed algorithm,
    without any element of centralization. The robots do not refer to a common clock,
    but each clock is autonomous and not synchronized.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，该系统基于完全分布式算法，没有任何集中化的元素。机器人不参考一个共同的时钟，而是每个时钟都是自主的且不同步的。
- en: 'The project is implemented in MATLAB and the robots are designed with the help
    of the Simulink tool. The following MATLAB dependencies are needed for implementation:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目是用MATLAB实现的，机器人是借助Simulink工具设计的。以下MATLAB依赖项需要用于实现：
- en: Simulink
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Simulink
- en: Stateflow
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stateflow
- en: Robotics System Toolbox
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人系统工具箱
- en: Navigation Toolbox
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航工具箱
- en: The next section covers the built-in features that are available in Simulink
    and used in this project.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分涵盖了Simulink中可用并在此项目中使用的内置功能。
- en: 14.2.1 Environment Models
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.2.1 环境模型
- en: The built-in Robotics Visualizer in MATLAB enables you to simulate and prototype
    algorithms in a 2D mobile robotics environment. The multi-robot ecosystem also
    enables for the development and prototype of algorithms in a 2D multi-robot mobile
    robotic environment. These functions are accessible through the MATLAB and Simulink
    interfaces.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB内置的机器人可视化器使您能够在2D移动机器人环境中模拟和原型化算法。多机器人生态系统还能够在2D多机器人移动机器人环境中开发和原型化算法。这些功能可通过MATLAB和Simulink界面访问。
- en: 14.2.2 Sensor Models
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.2.2 传感器模型
- en: In this project, the Lidar Sensor simulates 2D line-of-sight sensors  for visualization
    and algorithm prototyping. This feature is available in MATLAB and the Simulink
    interface (see Figure [14-3](#Fig3)).![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig3_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig3_HTML.jpg)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，激光雷达传感器模拟了2D视线传感器，用于可视化和算法原型设计。这个特性在MATLAB和Simulink界面中可用（见图[14-3](#Fig3)）。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig3_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig3_HTML.jpg)
- en: Figure 14-3
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-3
- en: The sensor
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器
- en: 14.2.3 Multi-Robot Lidar Sensor
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.2.3 多机器人激光雷达传感器
- en: In addition to the features listed previously, the Multi-Robot Lidar Sensor  was
    utilized to mimic two-dimensional line-of-sight detectors for the multi-robot
    environment. This sensor will test for a line-of sight for an occupancy map as
    well as other for robots using a finite radius in the environment. This feature
    is available in the MATLAB and Simulink interface.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前面列出的特性外，多机器人激光雷达传感器还被用来模拟多机器人环境中的二维视线探测器。该传感器将测试环境中使用有限半径的占用图的视线以及其他机器人的视线。这个特性在MATLAB和Simulink界面中可用。
- en: 14.3 The System Architecture
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.3 系统架构
- en: This project implements the two-phase commit protocol technology for the movement
    of the robots.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目实现了两阶段提交协议技术来移动机器人。
- en: Only one process can run the crucial section (CS) at a time under the system
    architecture. Mutual exclusions cannot be implemented in a distributed network
    using shared variables or a local kernel. The only way to create distributed mutual
    exclusion is using message forwarding. Unforeseen communication latency and partial
    information of the system status are dealt with via distributed system algorithms
    (see Figure [14-4](#Fig4)).![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig4_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig4_HTML.jpg)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统架构下，关键部分（CS）一次只能运行一个进程。在分布式网络中，不能使用共享变量或本地内核实现互斥。创建分布式互斥的唯一方法是使用消息转发。通过分布式系统算法处理未预见的通信延迟和系统状态的部分信息（见图[14-4](#Fig4)）。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig4_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig4_HTML.jpg)
- en: Figure 14-4
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-4
- en: Multi-sensor
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 多传感器
- en: To avoid collisions between the robots that are crossing the bridge, the architecture
    is designed in a such a way that, when a robot needs to move to a field or to
    the farm building, it enters the Ask4Bridge mode  . There, it asks for access
    to the bridge, communicating this request to the robots that are in Ask4Bridge
    mode. The distributed communication protocol (two-phase commit protocol) allows
    exclusive access, to avoid collisions over the bridge.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免穿越桥梁的机器人之间的碰撞，该架构被设计为，当一个机器人需要移动到一个场地或农场建筑时，它进入请求桥梁模式。在那里，它向处于请求桥梁模式的机器人通信请求桥梁的访问。分布式通信协议（两阶段提交协议）允许独占访问，以避免在桥上发生碰撞。
- en: A transaction is defined as a set of actions in the aforementioned architecture.
    Depending on the application criteria, each transaction is given a deadline. The
    operations are considered to be firm and genuine and have the same severity level.
    A transaction with a past-due date will be canceled right away.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述架构中，事务被定义为一组操作。根据应用标准，每个事务都被赋予一个截止日期。这些操作被认为是坚实且真实的，并且具有相同的严重程度。过期的事务将立即被取消。
- en: When a transaction is ready to “commit,” the two-phase commit protocol kicks
    in. A solitary coordinating machine initiates it (in this case, Robot 1). Robots
    2 and 3 are the other players, and they will wait for orders from the supervisor
    (Robot 1).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个事务准备“提交”时，两阶段提交协议就会启动。一个孤立的协调机器启动它（在本例中是机器人 1）。机器人 2 和 3 是其他参与者，它们将等待主管（机器人
    1）的指示。
- en: 'This technique ensures that transactions are atomic: either the whole transaction
    is reflected in the system’s final state, or none of this is. The transaction
    will be terminated if even a single individual is unable to submit. To put it
    another way, each employee has “veto” power over a transaction. The two-phase
    commit protocol’s fundamental flow is depicted in Figure [14-5](#Fig5).![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig5_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig5_HTML.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术确保了事务的原子性：整个事务要么反映在系统的最终状态中，要么一点也不反映。如果甚至有一个人无法提交，事务将被终止。换句话说，每个员工对事务都有“否决”权。两阶段提交协议的基本流程如图[14-5](#Fig5)所示。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig5_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig5_HTML.jpg)
- en: Figure 14-5
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-5
- en: System architecture of the smart farm
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 智能农场的系统架构
- en: 14.4 System Modeling
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.4 系统建模
- en: All the modeling is done with the help of MATLAB. Using the Simulink tool, I
    have developed a State flow model for the movement of the robots. To move the
    robots, the program uses the Robotics System Toolbox and the Navigation Toolbox.
    (To perform this task, note that the free plug-in is available in MATLAB.)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 所有建模都是通过 MATLAB 完成的。使用 Simulink 工具，我已经为机器人的移动开发了一个状态流模型。程序使用机器人系统工具箱和导航工具箱来移动机器人。（请注意，为了执行此任务，MATLAB
    中提供了免费插件。）
- en: 14.4.1 Robot Visualizer and Lidar Sensor
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.4.1 机器人可视化器和激光雷达传感器
- en: The Robot Visualizer  is used to develop the robot architecture. Additionally,
    using the Lidar Sensor for each robot, the movement of the robots can be verified.
    The Lidar Sensor may also mimic two-dimensional line-of-sight sensors, as shown
    in Figure [14-6](#Fig6).![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig6_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig6_HTML.jpg)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人可视化器用于开发机器人架构。此外，利用每个机器人的激光雷达传感器，可以验证机器人的移动。激光雷达传感器还可以模拟二维视线传感器，如图[14-6](#Fig6)所示。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig6_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig6_HTML.jpg)
- en: Figure 14-6
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-6
- en: Two-phase commit protocol(2PC)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 两阶段提交协议(2PC)
- en: 14.4.2 Obstacle Avoidance Logic and *2* PC Protocol Concept
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.4.2 避障逻辑和 *2* PC 协议概念
- en: To prevent robots from colliding while moving from one state to another, the
    project uses the 2PC protocol concept  for transition. To implement this concept,
    the project includes a different mode of movement for robots (based on vote).
    If one robot wants to move to a different state, it asks for Ask4Bridge mode  .
    Then the coordinator determines whether any other robots have requested the same
    mode. If not, it allows further movement. To prevent robots from colliding while
    they’re moving, the project also uses obstacle avoidance logic, which is available
    in MATLAB.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止机器人在从一个状态移动到另一个状态时发生碰撞，该项目使用了2PC协议概念进行过渡。为了实现这一概念，该项目包括了机器人的不同运动模式（基于投票）。如果一个机器人想要移动到另一个状态，它会请求Ask4Bridge模式。然后，协调员确定是否有其他机器人请求相同的模式。如果没有，它就允许进一步移动。为了防止机器人在移动时发生碰撞，该项目还使用了在MATLAB中可用的障碍物避免逻辑。
- en: 14.4.3 Architecture of North and South Farm and Storehouse
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.4.3 北方和南方农场以及仓库的架构
- en: There is a feature in MATLAB called the *multi-robot environment* that’s used
    to construct different fields, such as the North and South Farm and the Store.
    In this platform, you could build “n” number of robots and track their movement.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB中有一个称为*多机器人环境*的功能，用于构建不同的场景，如北方和南方农场以及仓库。在这个平台上，您可以构建“n”个机器人并跟踪它们的移动。
- en: 'This is a built-in feature that’s available in the Navigation Toolbox plugin
    in MATLAB. The MATLAB definition of the multi-robot environment is as follows:
    “The Multi-Robot Environment enables you to simulate and prototype algorithms
    in a two-dimensional multi-robot mobile robotics situation.” (See Figure [14-7](#Fig7).)![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig7_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig7_HTML.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是MATLAB中导航工具箱插件中可用的内置功能。MATLAB中多机器人环境的定义如下：“多机器人环境使您能够在二维多机器人移动机器人情境中模拟和原型化算法。”（见图[14-7](#Fig7)。）![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig7_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig7_HTML.jpg)
- en: Figure 14-7
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图14-7
- en: Robot Visualizer and Lidar Sensor
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人可视化器和激光雷达传感器
- en: 14.5 Implementing the Two-Phase Commit Protocol
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.5 实现两阶段提交协议
- en: When a transaction is ready to “commit,” the 2PC protocol kicks in. A single
    supervisor system initiates it (Robot 1, in the initial stage).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当交易准备“提交”时，2PC协议启动。一个单一的监督系统启动它（在初始阶段为机器人1）。
- en: The 2PC protocol has two phases, as shown here (assume in the initial stage,
    that Robot 1 is the coordinator and Robots 2 and 3 are participants).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 2PC协议有两个阶段，如此处所示（假定在初始阶段，机器人1是协调员，机器人2和3是参与者）。
- en: '**Phase 1:** The supervisor, Robot 1, asks each individual if they have finished
    their tasks for the transaction and are prepared to commit. Each member gives
    a yes or no answer.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阶段1：** 监督员，机器人1，询问每个人是否完成了他们的交易任务并准备好承诺。每个成员都回答是或否。'
- en: '**Phase 2:** All of the answers are counted by the organizer. If all of the
    workers said yes, the transaction will be completed. It will abort if this does
    not happen. The supervisor sends a message to each employee with the final commits
    choice and gets a response.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第二阶段：** 组织者计算所有答案。如果所有工作者都答应，事务将完成。如果没有，则会中止。主管向每个员工发送最终提交选择的消息并获得回应。'
- en: 'This technique assures that actions are atomic: either the whole action is
    reflected in the system’s final state, or none of this is. If even a single party
    is unable to commit, the transaction will be canceled. To put it another way,
    each party has *veto power* over a transaction.![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig8_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig8_HTML.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此技术确保动作是原子的：要么整个动作反映在系统的最终状态中，要么没有。如果甚至有一个方无法提交，事务将被取消。换句话说，每个方都对事务拥有*否决权*。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig8_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig8_HTML.jpg)
- en: Figure 14-8
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14-8
- en: Obstacle avoidance logic
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 避障逻辑
- en: It also assures the long-term viability of transactions. Before answering “yes”
    in Step 1, each party double-checks that all of a transaction’s writes have been
    durably written to storage. This allows the supervisor to make a final decision
    regarding a transaction without being concerned about a participant’s failure
    if they voted “yes” (see Figure [14-8](#Fig8)).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 它还确保了事务的长期可行性。在步骤 1 中回答“是”之前，每个方都会仔细检查事务的所有写入是否已经持久地写入存储。这使得主管可以在对事务做出最终决定时不必担心参与者的故障，如果他们投票“是”（见图[14-8](#Fig8)）。
- en: 14.5.1 Requirements
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.5.1 要求
- en: 'This project satisfies three basic requirements of concurrency control in distributed
    systems when using mutual exclusion:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用互斥时，此项目满足分布式系统中并发控制的三个基本要求：
- en: Mutual exclusion and safety
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互斥和安全性
- en: Liveness
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活性
- en: Fairness
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公平性
- en: 'Enabling several processes to access a common resource or data source is done
    in a mutually exclusive way:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 通过互斥方式使多个进程访问公共资源或数据源：
- en: There are no common variables in a distributed system that may be utilized to
    construct mutual exclusion and synchronization primitives.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分布式系统中没有可以用于构建互斥和同步原语的公共变量。
- en: The only way to share information is through data transfer.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 唯一的信息共享方式是通过数据传输。
- en: 'This three basic requirements are met as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是三个基本要求的满足方式：
- en: '**Mutual exclusion, safety:** Only one process can run the crucial portion
    at any given time.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互斥，安全性：** 在任何给定时间只有一个进程可以运行关键部分。'
- en: '**Liveness:** (There is no deadlock or hunger.) Two or more parties should
    not have to wait indefinitely for communications that will never arrive.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活性：**（没有死锁或饥饿。）两个或多个方应不必无限期地等待永远不会到达的通信。'
- en: '**Fairness:** Every process is given an equal opportunity to complete the key
    portion. In principle, fairness implies that crucial section execution requests
    are carried out in the sequence in which they arrive in the system.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公平性：** 每个进程都有平等的机会完成关键部分。原则上，公平性意味着关键部分的执行请求按照它们到达系统的顺序进行。'
- en: 'In addition to from the previous requirements, we have also implemented the
    following requirements:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除了以前的要求之外，我们还实现了以下要求：
- en: The system is composed of a non-predetermined number of identical robots communicating
    with each other via a wireless connection with the help of a Lidar Sensor and
    obstacle avoidance logic.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该系统由一定数量的相同机器人组成，它们通过无线连接相互通信，借助激光雷达传感器和避障逻辑。
- en: Each robot follows the cyclic modes of operation behavior with the help of the
    Robot Visualizer tool.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个机器人都遵循着循环模式的操作行为，借助机器人可视化工具实现。
- en: A robot that is not granted bridge access waits until the bridge is cleared,
    and only then issues a new access request, with the help of 2PC protocol concept.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未被授予桥接访问权限的机器人将等待直到桥梁清空，然后才发出新的访问请求，使用了2PC协议的概念。
- en: The system is based on a totally distributed algorithm, without any element
    of centralization, with the help of the 2PC protocol concept.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统基于完全分布式算法，没有任何集中化的元素，使用了2PC协议的概念。
- en: 14.5.2 Problems Encountered
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 14.5.2 遇到的问题
- en: 'While implementing this project, the following problems appeared:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施该项目时，出现了以下问题：
- en: There is a lack of scalability due to the hindering characteristics of the two-phase
    commit protocol.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于两阶段提交协议的阻碍特性，存在可扩展性不足的问题。
- en: The two-phase commit protocol’s biggest issue is that it is a hindering protocol.
    Some parties cannot complete their operations if the supervisor fails permanently.
    It will stall until a commit or rollback is received after a player has submitted
    an agreement message to the supervisor.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两阶段提交协议的最大问题在于它是一个阻碍协议。如果监督员永久失败，某些参与方将无法完成其操作。在玩家提交同意消息给监督员后，将等待收到提交或回滚。
- en: Once a participant has acknowledged that it is ready to commit, it must be able
    to commit the transaction afterward, even if it crashed in between. This requires
    checkpointing to persistence storage.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦参与者承认准备好提交了，即使在中间崩溃，也必须能够提交事务。这需要将检查点写入持久存储。
- en: The very worst situation occurs when the supervisor is also a participant and
    votes on the protocol’s conclusion. Then perhaps a crash to the supervisor wipes
    out both it and a member, ensuring that the protocol will stay blocked, despite
    the fact that only one loss occurred. 2PC is still a common consensus protocol
    due to its low communication complexity. However, in the event of a failure, the
    difficulty can rise to O if every node volunteers to be the recovery node O(n2)O(n2)O(n2).
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最糟糕的情况发生在监督者也是参与者并对协议的结论进行投票时。然后，如果监督者崩溃，可能会同时消失它和一个成员，从而确保协议会保持阻塞，尽管只发生了一个损失。由于其低通信复杂度，2PC仍然是一种常见的共识协议。然而，在发生故障时，困难可能会升至O，如果每个节点都自愿成为恢复节点O(n2)O(n2)O(n2)。
- en: Nevertheless  , the fact that 2PC might block due to a supervisor failing is
    a serious issue that severely reduces availability. If a transaction may be turned
    back at any moment, the protocol can recover as nodes time out, but if commit
    choices must be treated as permanent, a single failure can bring the entire system
    to a halt. Furthermore, a three-phase commit protocol has been developed that
    eliminates the blocking issues of 2PC at the cost of an additional message delay
    (see Figure [14-9](#Fig9)).![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig9_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig9_HTML.jpg)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，2PC可能由于监督者失败而阻塞的事实是一个严重的问题，严重降低了可用性。如果交易可能随时被撤消，那么协议可以随着节点超时而恢复，但如果提交选择必须被视为永久性，则一个故障就可能使整个系统陷入停顿。此外，已经开发出了一种三阶段提交协议，它消除了2PC的阻塞问题，但以额外的消息延迟为代价（见图[14-9](#Fig9)）。![../images/520777_1_En_14_Chapter/520777_1_En_14_Fig9_HTML.jpg](../images/520777_1_En_14_Chapter/520777_1_En_14_Fig9_HTML.jpg)
- en: Figure 14-9
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图14-9
- en: Model architecture of the north and south farm and storehouse
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 北方和南方农场及仓库的模型架构
- en: 14.6 Summary
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14.6 摘要
- en: In distributed computer systems, the committing protocols provide global atomicity.
    This ensures that transactions across a computer network do not end up on all
    nodes in the network, or on none at all if all nodes fail.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式计算系统中，提交协议提供全局原子性。这确保了网络中的交易不会在网络中的所有节点上结束，或者如果所有节点失败，则在所有节点上都不会结束。
- en: Distributed computing is a method of collaborating on a project using networked,
    standalone computers. A central computer splits the task and delivers it to the
    client computer to finish, according to this paradigm. This approach can withstand
    single client failures, thanks to commit mechanisms.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式计算是使用网络化的独立计算机进行项目协作的一种方法。根据这种范例，中央计算机分割任务并将其传递给客户端计算机完成。由于提交机制，这种方法可以抵御单个客户端的故障。
- en: The drawback of the *two-phase commit protocol* is that if the coordinator fails,
    all client resources are potentially frozen indefinitely. A timeout transition
    is used in committed three-phase protocols to compensate for this shortcoming.
    A timeout transition allows resources to be released at a predetermined time if
    the coordinating computer fails.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*两阶段提交协议*的缺点是，如果协调者失败，则所有客户端资源可能会无限期冻结。在提交了的三阶段协议中使用超时转换来弥补这个缺点。超时转换允许在协调计算机失败时在预定时间释放资源。'
- en: I’ve covered an essential protocol that may be utilized in the design of distributed
    systems in this chapter. With two phases—the commit request phase and the commit
    phase—two-phase commit methods assure atomicity. Computer coordination sends a
    request to every other client computer on the network during the commit request
    phase, then waits for a response message from each client. Step 2 is done if all
    messages are received; if there is a client error and not all messages are received,
    Step 1 is performed. All clients are notified of the disruption.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了一个在设计分布式系统时可能会用到的基本协议。两阶段提交方法确保了原子性，分为两个阶段——提交请求阶段和提交阶段。计算机协调在提交请求阶段向网络上的每台其他客户端计算机发送请求，然后等待每个客户端的响应消息。如果收到所有消息，则执行步骤
    2；如果客户端发生错误并且未收到所有消息，则执行步骤 1。所有客户端都会收到中断通知。
- en: Using MATLAB this way is a perfect example of a distributed system. The robots’
    movement is designed with the help of MATLAB tools. Two-phase commit protocol
    was used for the transaction of messages in the distributed system. This project
    is a case study of distributed mutual exclusive access to a shared resource. The
    setting was a smart farm, where a fleet of autonomous robots conducts activities
    such as soil preparation, plant watering, harvesting plant production, and so
    on.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方式使用MATLAB是分布式系统的一个完美例子。机器人的移动是使用MATLAB工具设计的。两阶段提交协议用于分布式系统中消息的事务处理。该项目是对共享资源的分布式互斥访问的案例研究。场景是一个智能农场，其中一队自主机器人进行土壤准备、植物浇水、收获植物产品等活动。
- en: The next chapter covers an example of an advanced project with more features
    of a distributed system. The project is called *Platoon* .
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章介绍了一个具有更多分布式系统特性的高级项目示例。该项目被称为*Platoon*。
