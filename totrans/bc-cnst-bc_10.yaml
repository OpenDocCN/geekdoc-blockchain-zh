- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2022T.
    Dounas, D. Lombardi (eds.)Blockchain for ConstructionBlockchain Technologies[https://doi.org/10.1007/978-981-19-3759-0_10](https://doi.org/10.1007/978-981-19-3759-0_10)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者（独家授权给 Springer Nature Singapore Pte Ltd. ）2022T. Dounas, D. Lombardi (编辑)Blockchain
    for ConstructionBlockchain Technologies[https://doi.org/10.1007/978-981-19-3759-0_10](https://doi.org/10.1007/978-981-19-3759-0_10)
- en: Private Distributed Ledger for Indoor Scene Annotation
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于室内场景注释的私有分布式账本
- en: 'Vladeta Stojanovic^([1](#Aff6) [ ](#ContactOfAuthor1)), Matthias Trapp^([2](#Aff7) [ ](#ContactOfAuthor2)),
    Jan Klimke^([2](#Aff7) [ ](#ContactOfAuthor3)), Rico Richter^([2](#Aff7) [ ](#ContactOfAuthor4))
    and Jürgen Döllner^([2](#Aff7) [ ](#ContactOfAuthor5))(1)HafenCity Universität
    Hamburg, Henning-Voscherau-Platz 1, 20457 Hamburg, Germany(2)Hasso Plattner Institute,
    Prof.-Dr.-Helmert-Straße 2-3, 14482 Potsdam, GermanyVladeta Stojanovic (Corresponding
    author)Email: [vladeta.stojanovic.main@hcu-hamburg.de](mailto:vladeta.stojanovic.main@hcu-hamburg.de)Matthias TrappEmail:
    [Matthias.Trapp@hpi.de](mailto:Matthias.Trapp@hpi.de)Jan KlimkeEmail: [Jan.Klimke@hpi.de](mailto:Jan.Klimke@hpi.de)Rico RichterEmail:
    [Rico.Richter@hpi.de](mailto:Rico.Richter@hpi.de)Jürgen DöllnerEmail: [juergen.doellner@hpi.de](mailto:juergen.doellner@hpi.de)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'Vladeta Stojanovic^([1](#Aff6) [ ](#ContactOfAuthor1)), Matthias Trapp^([2](#Aff7) [ ](#ContactOfAuthor2)),
    Jan Klimke^([2](#Aff7) [ ](#ContactOfAuthor3)), Rico Richter^([2](#Aff7) [ ](#ContactOfAuthor4))
    和 Jürgen Döllner^([2](#Aff7) [ ](#ContactOfAuthor5))(1)德国汉堡市 HafenCity 大学，Henning-Voscherau-Platz
    1，20457 Hamburg, Germany(2)哈佛普莱特纳学院，Prof.-Dr.-Helmert-Straße 2-3，14482 Potsdam,
    GermanyVladeta Stojanovic (通讯作者)Email: [vladeta.stojanovic.main@hcu-hamburg.de](mailto:vladeta.stojanovic.main@hcu-hamburg.de)Matthias TrappEmail:
    [Matthias.Trapp@hpi.de](mailto:Matthias.Trapp@hpi.de)Jan KlimkeEmail: [Jan.Klimke@hpi.de](mailto:Jan.Klimke@hpi.de)Rico RichterEmail:
    [Rico.Richter@hpi.de](mailto:Rico.Richter@hpi.de)Jürgen DöllnerEmail: [juergen.doellner@hpi.de](mailto:juergen.doellner@hpi.de)'
- en: Abstract
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: Visualization of annotation recording using a digital indoor model (e.g., point
    clouds, 3D models, 2D floorplans) allows stakeholders to see exactly how, e.g.,
    furniture items or machinery have been moved from one location in a building to
    another. The recording of such actions is vital for record keeping and future
    decision-making within the realm of facility management (FM), and especially concerning
    operations and maintenance (O &M) procedures. The use of a digital ledger enables
    immutable recording of attributes associated with a given indoor representation,
    e.g., recording of stakeholder annotations onto a point cloud representation.
    We present a conceptual approach based on blockchain technology (BT) for annotation
    of indoor scenes, with a focus on point cloud representations of such scenes.
    We present a case study describing the design and implementation of a private
    distributed ledger (PDL) as a service-oriented software (SOS) component—where
    any user annotations are recorded and verified, for proof of immutability for
    enhancing decision-making among FM stakeholders. We implement the visualization
    component using a Web3D-based client-side viewer and interface. Our approach sets
    the foundation for a development of a PDL-based system for indoor scene annotation,
    with potential to be further integrated into digital twin (DT) platforms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用数字室内模型（例如点云、3D模型、2D平面图）进行注释记录的可视化，利益相关者可以准确地看到建筑物内部货物或机械设备是如何从一个位置移动到另一个位置的。记录这些行为对于设施管理（FM）的记录和未来决策至关重要，特别是涉及运营和维护（O
    &M）程序。使用数字账本可以记录与给定室内表示相关的属性，例如将利益相关者的注释记录在点云表示中。我们提出了基于区块链技术（BT）的注释室内场景的概念方法，重点关注这些场景的点云表示。我们提供了一个描述设计和实施私有分布式账本（PDL）作为服务导向软件（SOS）组件的案例研究，在此案例研究中，任何用户的注释都将被记录和验证，以证明不可变性，以增强FM利益相关者之间的决策。我们使用基于Web3D的客户端查看器和界面来实现可视化组件。我们的方法为注释室内场景的基于PDL的系统的发展奠定了基础，这个系统有潜力进一步整合到数字孪生平台中。
- en: 1 Introduction
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: Digital representation of indoor environments plays a critical role in modern
    facility management (FM), especially with adaptation of building information modeling
    (BIM) practices [[1](#CR1)]. Digital representations of indoor environment can
    make use of existing 2D or 3D floorplans, BIM and CAD data, as well point clouds.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 室内环境的数字表示在现代设施管理（FM）中发挥关键作用，特别是在建筑信息建模（BIM）实践的适应中[[1](#CR1)]。室内环境的数字表示可以利用现有的2D或3D平面图、BIM和CAD数据，以及点云。
- en: Point clouds allow the capture and representation of the current physical state
    of the built environment, with enormous potential for further analysis and decision-making
    [[2](#CR2)]. Point clouds are also very useful for visualization and analysis
    applications within built environment and geospatial domains [[3](#CR3)], being
    able to capture the current physical state of an environment as a “digital snapshot”.
    Methods for indoor capture rely on using either photogrammetry or light detection
    and ranging (LiDAR) systems (e.g., terrestrial laser scanning (TLS)) as well modern
    commodity mobile devices that include integrated LiDAR sensors. The captured point
    clouds include the spatial representation in 3D space, along with color and/or
    intensity attributes.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 点云允许捕获和表示建筑环境的当前物理状态，并且具有进一步分析和决策的巨大潜力[[2](#CR2)]。 点云在建筑环境和地理空间领域的可视化和分析应用中也非常有用[[3](#CR3)]，能够将环境的当前物理状态捕获为“数字快照”。
    室内捕获方法依赖于使用摄影测量或光探测与测距（LiDAR）系统（例如，地面激光扫描（TLS））以及包含集成LiDAR传感器的现代通用移动设备。 捕获的点云包括在3D空间中的空间表示，以及颜色和/或强度属性。
- en: Using such a representation of indoor environments, FM personnel is able to
    assess the indoor environments current state, and make decisions concerning operation
    and maintenance (O &M) procedures, e.g., the generation of inventory for items
    such as a furniture or machinery, which can be detected in the point cloud using
    deep learning [[4](#CR4)]. Being able to record any changes and user annotations,
    using a physically accurate representation of indoor environments provided by
    point clouds, allows users to make decisions with enhanced spatial context for
    an for a particular point in time. The use of annotation is an important tool
    for establishing an ontology for FM decision-making concerning indoor environments,
    as it adds semantics to otherwise possibly ambiguous point cloud representations
    of real-world environments [[5](#CR5)]. Any such annotation recording can then
    be stored as textual and/or numeric data that is associated with a particular
    digital representation (in this case being point clouds).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种对室内环境的表示，设施管理人员能够评估室内环境的当前状态，并做出有关操作和维护（O & M）程序的决定，例如，为家具或机械等物品生成清单，并使用深度学习来检测点云中的这些物品[[4](#CR4)]。
    使用点云对室内环境的准确表示能够记录任何更改和用户注释，使用户能够基于增强的空间环境上下文在特定时间点做出决策。 注释的使用是建立有关室内环境设施管理决策本体论的重要工具，因为它为可能含糊不清的真实环境点云表示添加语义[[5](#CR5)]。
    然后可以将任何这种注释记录存储为与特定数字表示相关联的文本和/或数值数据（在本例中为点云）。
- en: This has additional important implications in various architecture, engineering,
    construction, owner, and occupant (AECOO) domains for generation of immutable
    digital documentation (e.g., tracking of construction site progress, recording
    of annotations during renovations/retrofitting of buildings, etc.). This digital
    documentation can then be used for further analysis, review of decisions or even
    as proof of contractual obligations with third parties.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '这对于各种建筑，工程，建筑，业主和占用者（AECOO）领域的不可变数字文档（例如，跟踪施工现场进度，记录大楼翻新/改建过程中的注释等）具有额外重要的意义。
    然后可以将这些数字文档用于进一步分析，审查决策，甚至作为与第三方的合同义务的证明。  '
- en: 1.1 Motivation and Contributions
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.1 动机和贡献
- en: Annotation recording based on a digital representation and in an non-modifiable
    manner requires the use of a specific data structure that ensure immutability
    between current and previously recorded data segments. The use of a private distributed
    ledger (PDL), based on *blockchain technology* (BT) principals, allows for immutable
    recording of such *transaction* data. The immutably recorded data can be based
    on, e.g., user annotations of common office furniture and areas using a point
    cloud (Fig. [1](#Fig1)).![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig1_HTML.png)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 基于数字表示并且以不可修改的方式进行的注释记录，需要使用特定的数据结构来确保当前和先前记录的数据段之间的不可变性。 使用基于*区块链技术*（BT）原则的私有分布式账本（PDL）可以不可变地记录这种*交易*数据。
    可以基于用户使用点云（图 [1](#Fig1)）对常见办公家具和区域进行注释来记录不可变的数据。![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig1_HTML.png)
- en: Fig. 1
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图1
- en: Example of annotations of an indoor point cloud using the prototypical implementation
    of a PDL. In this case, a new proposed location for a sofa object is recorded,
    along with an annotation of an arbitrary distance measurement. All of the blocks
    within the private ledger are immutably recorded, based on the users interactions
    with the point cloud scene, and presented using a Web3D-based software component
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PDL原型实现对室内点云的注释示例。在此案例中，记录了一个新的沙发对象的提议位置，以及一个任意距离测量的注释。基于用户与点云场景的交互，所有区块都被不可变地记录，并且使用基于Web3D的软件组件呈现
- en: While such data could be stored and queried using a database management system
    (DBMS), there is a need for a lightweight software component implementation, especially
    for use within a service-oriented system (SOS). The use of SOSs allows for decoupling
    of hardware requirements between the client and the server and enables flexible
    computation and streaming of result to various client configurations [[6](#CR6)].
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以使用数据库管理系统（DBMS）来存储和查询此类数据，但在服务导向系统（SOS）内尤其需要轻量级软件组件的实现。SOS的使用允许客户端和服务器之间的硬件要求解耦，并且能够通过灵活的计算和将结果流式传输到各种客户端配置[[6](#CR6)]。
- en: While a common shortcoming with public blockchains is that they are expected
    to be ever increasing in size, for private distributed ledgers, it may be the
    case that for each new scenario, a new blockchain is generated and used—after
    which, e.g., it can be securely archived and kept on the server for future reference.
    Another possibility would be to use a “master PDL” for each stakeholder group,
    which would be updated for every new O &M scenario that is shared, annotated,
    and reviewed by stakeholders.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管公共区块链的一个常见缺点是它们的体积预计会不断增加，但对于私有分布式账本来说，每个新场景可能都会生成并使用一个新的区块链；例如，在此之后，可以安全地存档并保留在服务器上以供将来参考。另一个可能性是为每个利益相关者群体使用一个“主账本”，该账本将用于分享、注释和由利益相关者审查的每个新的操作与维护场景。
- en: Such a SOS software component should not require the overhead of implementing
    and maintaining a traditional database and should be suitable for securely recording
    transactions between involved stakeholders, with validation of each new transaction
    being accepted by a consensus of trusted stakeholders. This is also important
    for integration with digital twin (DT) platforms, as such platforms attempt to
    combine multiple data sources of the built environment in order to create a cyberphysical
    counterpart and often require inputs and decision-making from multiple stakeholders
    as well [[7](#CR7)].
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的SOS软件组件不应需要实施和维护传统数据库的开销，并且应适用于在涉及的利益相关者之间安全记录交易，以及通过受信任的利益相关者的共识接受每个新的交易。这对于与数字孪生（DT）平台的集成也很重要，因为这些平台试图将建筑环境的多个数据源结合起来，以创建一个数字孪生，并且通常需要来自多个利益相关者的输入和决策[[7](#CR7)]。
- en: We present a conceptual approach, system design, and prototypical implementation
    of a PDL. We present and discuss a case study where we implement and test a prototypical
    PDL as a SOS component for recording of user annotations using indoor point clouds.
    A Web3D-based client-side software component is used for visualization of the
    point clouds and user-driven interaction, specifically for annotation recording
    within an 3D scene via the client Web-browser (Fig. [2](#Fig2)).![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig2_HTML.png)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出了PDL的概念性方法、系统设计和原型实现。我们提出并讨论了一个案例研究，在该研究中，我们使用PDL的原型实现作为SOS组件，用于记录用户对室内点云的注释。一个基于Web3D的客户端软件组件用于可视化点云和用户驱动交互，特别是通过客户端Web浏览器在3D场景中进行注释记录（图 [2](#Fig2)）！[](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig2_HTML.png)
- en: Fig. 2
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图2
- en: Example of user-based annotations of an indoor point cloud. These annotation
    operations are recorded as blockchain data in the presented case study, using
    the prototypical PDL software component
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 室内点云的基于用户的注释示例。在这个案例研究中，使用了PDL的原型软件组件将这些注释操作记录为区块链数据
- en: 2 Related Work
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 相关工作
- en: 2.1 Blockchain Technology for AECOO Applications
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 建筑工程，工程施工，运营与维护（AECOO）应用的区块链技术
- en: BT is based on a decentralized and distributed collection of ever-growing records,
    where the validity of each new added record is computed using a specified consensus
    algorithm, thus ensuring immutable digital record keeping. BT first appeared with
    the introduction of Bitcoin [[8](#CR8)], as has since been adapted in various
    domains, with more recent adaptations focusing on use cases for smart cities [[9](#CR9)],
    and the digital built environment representations [[10](#CR10)]. A blockchain
    data structure is an example of a Merkle tree [[11](#CR11)], allowing for immutable
    record keeping by using a hash verification mechanism. The decoupling of BT from
    cryptocurrency, and its subsequent use for various real-world applications, has
    led the development of Blockchain 2.0, and related distributed ladger technologies
    (DLT) based on the key concepts of BT [[12](#CR12)].
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: BT基于一个去中心化和分布式的不断增长的记录集合，每加入一个新记录都需要使用指定的共识算法来计算其有效性，从而确保不可变的数字记录保留。BT最早出现是在比特币的推出时[[8](#CR8)]，自那以后已经在各个领域得到了应用，最近的应用重点是智能城市[[9](#CR9)]和数字建环境表示[[10](#CR10)]的用例。区块链数据结构是默克尔树的一个例子[[11](#CR11)]，通过使用哈希验证机制实现不可变的记录保留。BT从加密货币中脱钩，并随后用于各种真实世界应用，推动了区块链2.0的发展，以及基于BT关键概念的相关分布式账本技术（DLT）[[12](#CR12)]的发展。
- en: A distributed ledger is a system where each record in a digital ledger is kept
    distributed and synchronized across all involved stakeholders, and any additions
    to it require the computation of the validity of all previous records in order
    to ensure immutability (e.g., that no previous records have been tampered with).
    This has significant applications for AECOO and related domains, e.g., BIM-based
    and smart building domains [[10](#CR10), [13](#CR13), [14](#CR14)], digital twins
    (DTs) [[15](#CR15), [16](#CR16)], and smart cities [[9](#CR9), [17](#CR17), [18](#CR18)]—since
    any changes made to, e.g., BIM or a point cloud representation, can be recorded
    immutably and used as potential legal and contractual documentation. Another comprehensive
    review of applications of DLTs for AECOO is provided by [[19](#CR19)].
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式账本是一个系统，其中数字账本中的每个记录都分布并与所有相关利益相关者同步，对其进行任何添加都需要计算所有先前记录的有效性，以确保不可变性（例如，之前的记录未被篡改）。这对AECOO和相关领域，例如基于BIM和智能建筑领域[[10](#CR10),
    [13](#CR13), [14](#CR14)]，数字孪生（DTs）[[15](#CR15), [16](#CR16)]，和智能城市[[9](#CR9),
    [17](#CR17), [18](#CR18)]都有重要的应用 - 因为对于例如，BIM或点云表示所做的任何更改都可以被不可变地记录下来，并用作潜在的法律和合同文件。关于DLT在AECOO中的应用的另一项综合审查由[[19](#CR19)]提供。
- en: As noted by Turk and Klinc, the most notable difference between document-based
    and current BIM-based practices is that any legally binding documentation was
    previously kept in physical form where it would pass through different level of
    bureaucracy [[20](#CR20)]. Research by Gunasekara et al. advocates the use of
    BT, DLT, and smart contracts for replacing current procurement practices in FM,
    by providing a conceptual framework that aims to digitize each of the main bottleneck
    processes in the pre-tendering, tendering, and post-award phases [[21](#CR21)].
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如Turk和Klinc所指出的，基于文档的实践和当前基于BIM的实践之间最显著的区别是，任何具有法律约束力的文件以前都是以物理形式保存的，然后通过不同层面的官僚主义程序[[20](#CR20)]。由Gunasekara等人进行的研究主张使用BT、DLT和智能合同来替代FM中当前的采购实践，通过提供一个旨在将招标前、招标和中标后阶段的主要瓶颈过程数字化的概念框架[[21](#CR21)]。
- en: With the use of BIM practices, particularly with the use of the common data
    environments (CDEs) concept, sharing of digital data used for all representational
    aspects of a building poses particular challenges concerning its ownership [[1](#CR1)].
    Research by Suliyanti and Sari presents a prototypical implementation of a BT-based
    multi-party BIM-management platform, where the aim is to allow multiple parties
    to record important transactions concerning the whole building lifecycle using
    a permissioned blockchain [[22](#CR22)]. The authors take note that a single “network
    admin” is still required to oversee the maintenance and integrity of the blockchain
    through fully granted access permissions using creating, reading, updating, and
    deleting (CRUD) operations on assets that represent the key phases of a buildings
    lifecycle.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用BIM实践，特别是使用共同数据环境（CDEs）概念时，用于建筑所有代表性方面的数字数据共享附带特定挑战，涉及其所有权[[1](#CR1)]。 Suliyanti和Sari的研究提供了一种基于BT的多方BIM管理平台的原型实现，旨在允许多方记录关于整个建筑生命周期的重要交易使用具有许可的区块链[[22](#CR22)]。
    作者注意到，仍然需要单个“网络管理员”来通过完全授予的访问权限监督区块链的维护和完整性，使用创建、读取、更新和删除（CRUD）操作对代表建筑生命周期关键阶段的资产进行操作。
- en: While the use of DLTs based on BT are still new to the AECOO industry, their
    use has already been researched for various BIM-related applications. Dounas and
    Lombardi investigate the use and multi-level integration of BT with CAD and BIM
    applications, particularly for tracking any changes and annotations to the BIMs,
    as well as CAD models [[23](#CR23)]. Lemeš and Lemeš discuss the potential use
    of BT for use distributed CAD and BIM software environments [[24](#CR24)]. Hargaden
    et al. discuss the benefits and challenges of using BT for construction progress
    monitoring, and the feasibility of integrating such systems with existing BIM
    practices [[25](#CR25)].
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管基于BT的DLT对AECOO行业仍然是新的，但它们的应用已经被研究用于各种与BIM相关的应用。 Dounas和Lombardi研究了BT与CAD和BIM应用的多级集成和使用，特别是用于跟踪BIM和CAD模型的任何更改和注释[[23](#CR23)]。
    Lemeš和Lemeš讨论了BT可能用于分布式CAD和BIM软件环境的潜在使用[[24](#CR24)]。 Hargaden等人讨论了使用BT进行施工进度监控的好处和挑战，以及与现有BIM实践集成此类系统的可行性[[25](#CR25)]。
- en: DLTs based on BT can either be public consortium-based or private [[26](#CR26)].
    For example, a private DLTs, referred to as a PDL in this research, are commonly
    found in organizations where there is a high level of trust between all users.
    Thus, the PDL can be used without needing to compute any proof-of-work results
    when adding new records—but the validity of the records in the ledger is still
    ensured using the same method as in public and consortium-based blockchains (e.g.,
    the ledger is distributed to trusted clients who form a consensus for any new
    data that is added). The use of PDLs are therefore suitable for integration into
    BIM and DT platforms [[12](#CR12), [27](#CR27)].
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 基于BT的DLT可以是公共财团组织或私有的[[26](#CR26)]。例如，在组织内部存在高度信任的情况下通常可以找到私有的DLT，本研究中称为PDL。因此，在添加新记录时，无需计算任何工作证明结果即可使用PDL，但是仍然使用与公共和财团组织区块链相同的方法来确保账本中记录的有效性（例如，账本分发给可信客户，这些客户就加入新数据形成共识）。因此，PDL的使用适用于集成到BIM和DT平台[[12](#CR12),
    [27](#CR27)]。
- en: 2.2 Point Cloud-Based Annotation Recording
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2 基于点云的注释记录
- en: Point clouds can provide 3D and textured up-to-date physical representations
    of the built environment up to high resolutions (millions of points per square
    meter), and featuring intricate details [[28](#CR28)]. According to Richter, point
    clouds can *“represent almost any type of physical object, site, landscape, geographic
    region, or infrastructure ... at all scales and with any precision”* [[29](#CR29)].
    The processes of capture, post-processing, and semantic enrichment are all required
    before the point cloud be analyzed and/or visualized [[5](#CR5)]. The final output
    of a semantically-enriched or processed point cloud can provide great benefit
    to AECOO practitioners and stakeholders such as FM operators who want a deeper
    insight into the current state of the built environment [[30](#CR30)].
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 点云可以提供建筑环境的3D和纹理最新物理表示，达到高分辨率（每平方米数百万点），并展示复杂细节[[28](#CR28)]。据Richter称，点云可以*“以任何比例和精度代表几乎任何类型的物理对象、场地、地理区域或基础设施…”*[[29](#CR29)]。在对点云进行分析和/或可视化之前，捕捉、后处理和语义丰富的过程都是必需的[[5](#CR5)]。语义丰富或处理过的点云的最终输出可以为AECOO从业者和利益相关者带来巨大的益处，比如希望深入了解建筑环境当前状态的FM运营商[[30](#CR30)]。
- en: The use of point clouds representations of the built environment for annotation
    recording is thus a natural extension of their use, as frequently captured point
    clouds of of the same area can be compared for spatial deviations and changes
    over time [[31](#CR31)]. For indoor environments, point clouds provide a good
    source for generation of semantically-enriched representations, especially those
    used to represent complex indoor spaces such a university campuses and offices
    [[32](#CR32)]. Semantic enrichment of point clouds using annotations added by
    users, or as results of various semantic enrichment processes (e.g., semantic
    segmentation using deep learning approaches [[33](#CR33)]), can further engage
    stakeholders, especially using Web-based visualization where multiple users are
    able to inspect the same point cloud scene [[34](#CR34)].
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对建筑环境的点云表示进行注释记录是它们的自然延伸的使用，因为经常捕捉的相同区域的点云可以进行空间偏差和随时间变化的比较[[31](#CR31)]。对于室内环境，点云为生成语义丰富的表示提供了良好的来源，特别是用于表示复杂的室内空间，如大学校园和办公室[[32](#CR32)]。使用用户添加的注释或各种语义丰富过程的结果（例如，使用深度学习方法进行语义分割[[33](#CR33)]）对点云进行语义丰富化，可以进一步吸引利益相关者，特别是使用基于Web的可视化，其中多个用户能够检查相同的点云场景[[34](#CR34)]。
- en: While domain expertise is usually required for reviewing and decision-making
    based on BIM [[35](#CR35)], the use of point clouds provides a more intuitive
    way for inspecting the physical representation of the *as-is* built environment.
    By capturing the physical state of objects such as furniture and equipment, including
    their spatial attributes at the time of the scan, point clouds can capture physical
    features that are otherwise often omitted or difficult to model using high-level
    geometric representations typically found in as-designed/as-built BIMs [[36](#CR36)].
    Any changes made by users reviewing a point cloud can thus be based on the real-world
    representation rather than an *as-designed* or *as-built* BIM.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通常需要领域专业知识来审核和基于BIM做决策[[35](#CR35)]，但使用点云提供了一种更直观的方式来检查“就地”建成环境的物理表示。通过捕捉家具和设备等物体的物理状态，包括它们在扫描时的空间属性，点云可以捕捉通常被忽视或难以使用高水平几何表示（通常在设计/建造的BIM中找到）建模的物理特征[[36](#CR36)]。因此，由用户进行的对点云的任何更改都可以基于真实世界的表示，而不是基于“按设计”或“按实际建造”的BIM。
- en: 3 Approach
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 方法
- en: The presented PDL software component is based on BT principals, except that
    it does not use any proof-of-work mechanism. Rather, any changes such as spatial
    and/or user annotations are recorded within an block with a unique hash code,
    and this block is added by a trusted user upon theoretical agreement between all
    stakeholders (e.g., a PDL “administrator” or multiple stakeholders with specific
    permissions). As such, all of the stakeholders are able to inspect and view the
    current scene with the annotations via the Web3D-based client-side user interface.
    This way, any changes can be communicated by stakeholders and referenced as immutable
    documentation.![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig3_HTML.png)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 所提供的 PDL 软件组件基于 BT 原则，唯一的不同之处在于它不使用任何工作证明机制。相反，任何如空间和/或用户注释的变化都记录在一个带有唯一哈希代码的块内，该块由值得信赖的用户在所有利益相关者之间的理论一致后添加（例如，一个
    PDL “管理员”或具有特定权限的多个利益相关者）。因此，所有利益相关者均能够通过基于 Web3D 的客户端用户界面检查和查看带有注释的当前场景。通过这种方式，任何变化都可以由利益相关者交流，并作为不可变文档的参考。![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig3_HTML.png)
- en: Fig. 3
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3
- en: A high-level system design of the prototypical PDL implementation, along with
    the proposed data flow between the client and server components
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 原型 PDL 实现的高级系统设计，以及客户端和服务器组件之间的提议数据流
- en: 3.1 System Design and Implementation
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 系统设计和实现
- en: The prototypical PDL is implemented within a service-oriented paradigm, with
    decoupling between client and server processing tasks (Fig. [3](#Fig3)). The blockchain
    component of the PDL is implemented as a server-side software component using
    Node.js, and it is responsible for creating and maintaining the blockchain. The
    blockchain is updated with specific attributes after the user records any changes
    or annotations made to the point cloud (Sect. [3.3](#Sec9)). Three different servers
    are also implemented, one for sending data updates to the blockchain, one for
    updating the blockchain, and one for updating the blockchain across all connected
    stakeholders.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 原型 PDL 实现在面向服务的范例中，客户端和服务器处理任务之间解耦（图 [3](#Fig3)）。PDL 的区块链组件以 Node.js 实现为服务器端软件组件，并负责创建和维护区块链。用户记录点云的任何更改或注释后，区块链将使用特定属性进行更新（Sect. [3.3](#Sec9)）。还实现了三个不同的服务器，一个用于向区块链发送数据更新，一个用于更新区块链，一个用于在所有连接的利益相关者之间更新区块链。
- en: 3.2 Servers Design and Implementation
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 服务器设计和实现
- en: The primary server dealing with updating the blockchain is implemented as an
    express server,^([1](#Fn1)) using the Sockets.io framework to enable bi-directional
    communication between the client and the server. The server is REST-based and
    utilizes HTTP POST and GET commands in order to add new blocks to the blockchain,
    as well as to send back the current contents of the blockchain. The secondary
    server is a re-direction server, which is also an express server that runs simultaneously
    alongside the main server, and passes the recorded annotations and scene changes
    from the client-side as HTML 5 hidden attribute form data. This server redirects
    the HTML 5 hidden form-data attributes to the HTTP server port running on the
    main express server, where a POST operation is triggered—thus creating a new block
    with the parsed form attributes and broadcasting a message to all connected peers
    that a new block has been added to the blockchain.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 处理区块链更新的主服务器是作为一个 express 服务器实现的，^([1](#Fn1)) 使用 Sockets.io 框架实现客户端和服务器之间的双向通信。服务器是基于
    REST 的，并利用 HTTP POST 和 GET 命令来向区块链添加新块，以及发送当前区块链的内容。次服务器是一个重定向服务器，也是一个同时运行在主服务器旁边的
    express 服务器，会将从客户端记录的注释和场景变化作为 HTML 5 隐藏属性表单数据传递。该服务器将 HTML 5 隐藏表单数据属性重定向到主 express
    服务器上运行的 HTTP 服务器端口，触发 POST 操作，从而使用解析的表单属性创建一个新块，并向所有连接的对等方广播有一个新块已被添加到区块链的消息。
- en: In order to allow more than one trusted stakeholder access to the blockchain,
    and to implement a basic conflict resolution mechanism, a third peer-to-peer (P2P)
    server architecture is implemented using WebSockets. The P2P server listens simultaneously
    at the same time as the HTPP server, except that instead of updating the blockchain
    from input by the client-side interface, it checks which peers have connected
    to the server and sends them a copy of the blockchain. The P2P server also constantly
    checks that each of the connected peers has the most recent version of the blockchain,
    and synchronizes it with the most recent version by updating the blockchain with
    the latest transactions, or replaces the current blockchain of a peer that is
    not up-to-date with the longest (and most recent) blockchain. The updating frequency
    of the blockchain implemented by the P2P server can be set to check, e.g., every
    couple of seconds, or can be triggered by a certain action, e.g., a specific stakeholder
    adds an annotation to the active scene. Finally, the P2P server can also add new
    blocks to the current blockchain by validating the hash of the last block in the
    current chain with the hash of the latest block received from any of the connected
    peers (Sect. [3.4](#Sec10)). This way for every new block that is added by the
    user, the block chain can be synchronized across all connected peers.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许多个可信的利益相关者访问区块链，并实现基本的冲突解决机制，使用 WebSockets 实现了第三种点对点（P2P）服务器架构。P2P 服务器同时监听与
    HTPP 服务器的连接，不同的是，它不是更新来自客户端界面的区块链，而是检查哪些节点连接到服务器并向它们发送区块链的副本。P2P 服务器还不断检查已连接节点是否具有最新版本的区块链，并通过使用最新交易来更新区块链或者将不及时的节点的当前区块链替换为最长（也是最新的）区块链。P2P
    服务器实现的区块链更新频率可以设置为每隔几秒钟进行检查，也可以由某一特定操作触发，例如特定利益相关者向活动场景添加注释。最后，P2P 服务器还可以通过验证当前链中最后一个区块的哈希与从任何已连接节点接收的最新区块的哈希进行添加新区块到当前区块链。通过这种方式，对于用户添加的每个新区块，区块链可以在所有连接的节点之间同步。
- en: 3.3 Block Structure
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 块结构
- en: 'The blockchain records specific attributes of an indoor environment, using
    its point cloud representation, at a particular point in time. These attributes
    provide an example of attributes that could be important for forming O &M decisions
    (a comprehensive list of attributes relative to FM is discussed by [[37](#CR37)]).
    The block structure used to store the transactions for the ledger is composed
    of the following data members:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链记录特定室内环境的属性，使用其点云表示，在特定时间点。这些属性提供了一个例子，说明对于形成 O &M 决策可能很重要的属性（关于 FM 的属性的详尽列表由
    [[37](#CR37)] 讨论）。用于存储分类账交易的块结构由以下数据成员组成：
- en: '*Index*: The index of the current block in the chain.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*索引*：链中当前块的索引。'
- en: '*Previous Hash*: The unique hash of the previous block.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*上一个哈希*：上一个块的唯一哈希。'
- en: '*Timestamp*: The timestamp of the current block.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*时间戳*：当前块的时间戳。'
- en: '*User ID*: The ID or name of the current user making annotations to the scene.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*用户 ID*：对场景进行注释的当前用户的 ID 或名称。'
- en: '*Scene Comments*: User annotations of the current point cloud scene.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*场景注释*：用户对当前点云场景的注释。'
- en: '*Scene Objects*: The current point cloud clusters in the scene.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*场景对象*：场景中当前点云群集。'
- en: '*Selected Objects*: The selected point cloud clusters.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*选定对象*：选定的点云群集。'
- en: '*Selected Objects Position*: The position of the selected point cloud clusters.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*选定对象位置*：选定点云群集的位置。'
- en: '*Current Hash*: The computed hash of the current block.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*当前哈希*：当前块的计算哈希。'
- en: The blockchain is first formed using an initial block, called the *genesis block*,
    which is set with default values. This genesis block is then used as the foundation
    block for computing the subsequent hash values of the next blocks that are added
    to the blockchain. The most notable data member of the block is the current hash,
    which is computed using all of the current data members. This unique hash value
    is computed as a 32 byte random character string using the SHA-256 pseudo-random
    number generator (PRNG) [[38](#CR38)], which is provided using the CryptoJS library.^([2](#Fn2))
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链首先使用初始块（称为 *起源块*）进行组成，起源块设置为默认值。这个起源块然后被用作计算后续添加到区块链的下一个块的哈希值的基础块。块最显著的数据成员是当前哈希，使用所有当前数据成员计算。这个唯一的哈希值通过使用
    SHA-256 伪随机数生成器（PRNG） [[38](#CR38)] 计算为一个 32 字节的随机字符字符串，并且是使用 CryptoJS 库提供的^([2](#Fn2))。
- en: Once the new block has been added with all of the data members set, and with
    a unique hash code based on the hash of the previous block, it is added to a global
    block array that is initiated and used during the run-time of the application.
    For the prototypical implementation, we used an in-memory approach for accessing
    and updating the blockchain. This blockchain array is shared and synchronized
    with all connected peers as well.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦新区块添加了所有数据成员，并且具有基于上一个区块的哈希值的唯一哈希码，它将添加到全局区块数组中，这个数组在应用程序运行时初始化和使用。对于原型实现，我们使用了一种内存方式来访问和更新区块链。这个区块链数组也与所有连接的对等方共享和同步。
- en: Since we are using a “trusted ledger” approach, we do not compute any proof
    of work when accepting a new block to be added to the blockchain. A trusted ledger
    is intended to be used internally by trusted stakeholders, where there is no need
    to for any of the stakeholders to “mine” any of the blocks, as everyone who is
    generating and adding new blocks is known to all other stakeholders using the
    blockchain. Mining of the blocks usually requires spending vast amounts of computational
    power in order to generate a valid signature based on the computed hash value
    that meets certain requirements (e.g., having a certain number of zeros as the
    first characters of the signature) and is common in public and decentralized ledgers
    and blockchain implementations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用的是“受信任的账本”方法，所以当接受要添加到区块链中的新区块时，我们不计算任何工作证明。受信任的账本旨在供受信任的利益相关者内部使用，其中不需要任何利益相关者“挖掘”任何区块，因为每个生成和添加新区块的人对其他使用区块链的利益相关者都是已知的。在公共和去中心化的账本和区块链实现中，挖矿通常需要大量的计算能力，以便基于计算出的哈希值生成满足特定要求的有效签名（例如，将零作为签名的第一个字符的特定数量）。
- en: 3.4 Blockchain Validation
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4 区块链验证
- en: A blockchain has the ability to immutably record transactions. The meaning of
    immutability in this sense means that the validity of the entire blockchain structure
    is based on the computed hash values of the sequential blocks containing previously
    recorded attributes and unique hash values (Fig. [4](#Fig4)). As such, assurance
    against tempering with previously inserted blocks can be obtained by validating
    the hash values of the current and the previous block in the blockchain and comparing
    them. If the hash value of current block, which was computed based on the hash
    value of the previous block along with any of its current attributes, is the same
    as the previous block hash value, then we can be certain that the these blocks
    contain attributes that were not tempered in any way.![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig4_HTML.png)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链有能力以不可变的方式记录交易。这里不可变性的意义是，整个区块链结构的有效性是基于连续区块的计算哈希值和包含先前记录的属性和唯一哈希值的哈希值。因此，通过验证区块链中当前区块和前一个区块的哈希值并将它们进行比较，可以得到对先前插入的区块进行篡改的保证。如果基于前一个区块的哈希值和其当前属性计算得到的当前区块的哈希值与前一个区块的哈希值相同，那么我们可以确定这些区块包含的属性没有被任何方式篡改。![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig4_HTML.png)
- en: Fig. 4
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4
- en: Example generation of blockchain data, where each new block contains a hash
    code generated from the current block attributes and the hash of the previous
    block
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据的示例生成，其中每个新区块包含了从当前区块属性和前一个区块的哈希值生成的哈希码。
- en: If transaction values within any of the inserted blocks in the blockchain were
    tempered with, the generated hash of the new block will be different than that
    of the same block in the copies of the blockchain used by other stakeholders.
    As all of the blocks are known to the stakeholders, it will be visible which blocks
    contain attributes that were tampered with. In essence, this process assumes that
    the blockchain is shared between trusted stakeholders, and as such each stakeholder
    has a copy of the blockchain that is updated and synchronized with other stakeholders.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果区块链中任何插入的区块中的交易值被篡改，那么新区块的生成哈希将与其他利益相关者使用的区块链副本中的同一区块的哈希不同。由于所有区块对利益相关者都是已知的，因此可以看到哪些区块包含被篡改的属性。在本质上，这个过程假定区块链是受信任的利益相关者共享的，因此每个利益相关者都有一个区块链的副本，并且这个副本会随其他利益相关者更新和同步。
- en: In the prototypical PDL implementation, we have implemented three different
    blockchain validation methods, namely (1) index validation of the current and
    the previous block, (2) validation of the hash of the previous block, and (3)
    validation of the hash of the current block. Additionally, these three validation
    methods are used to validate the consensus blockchain once it has been synchronized
    across all connected peers.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在原型PDL实现中，我们实现了三种不同的区块链验证方法，即（1）当前区块和上一个区块的索引验证，（2）上一个区块的哈希验证，以及（3）当前区块的哈希验证。另外，这三种验证方法被用于在所有连接的节点之间同步后验证共识区块链。
- en: 4 Client Design and Implementation
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 客户端设计和实现
- en: 4.1 Web3D-Based Visualization and Scene Interaction
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1 基于Web3D的可视化和场景交互
- en: The client-side implementation makes use of HTML 5 and Three.js for the main
    visualization and user input tasks.^([3](#Fn3)) Via the web-based user interface,
    users are able to load in a point cloud and add in any annotations, which are
    recorded in the PDL.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端实现采用了HTML 5和Three.js进行主要可视化和用户输入任务^([3](#Fn3))。通过基于Web的用户界面，用户可以加载点云并添加任何注释，这些注释将记录在PDL中。
- en: The visualization component is able to display the complete point cloud of a
    indoor scene (typically of about 100,000 points per 20 m![$$^2$$](../images/504856_1_En_10_Chapter/504856_1_En_10_Chapter_TeX_IEq1.png)).
    The current limit for visualizing a number of points per scene is approximately
    four million points (due to the use of non-optimized point cloud rendering). The
    use of Three.js enables the rendering of other useful visualization idioms [[39](#CR39)],
    e.g., billboard sprite rendering (used for displaying text), and various shading
    operations that can be performed on the point cloud via the programmable graphics
    pipeline (e.g., changing of color of a point cluster or its opacity).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化组件能够显示室内场景的完整点云（通常约为每20平方米 100,000个点![$$^2$$](../images/504856_1_En_10_Chapter/504856_1_En_10_Chapter_TeX_IEq1.png)）。每场景可视化点数的当前限制约为四百万点（由于非优化的点云渲染）。Three.js的使用使得可以通过可编程图形管线在点云上执行各种实用的可视化习语[[39](#CR39)]，例如广告牌雪碧图渲染（用于显示文本）以及可以通过可编程图形管线对点云执行的各种着色操作（例如更改点簇的颜色或不透明度）。
- en: A user is able to add annotations to the 3D point cloud scene, either for the
    entire scene or for specifically selected point clusters. Currently, this includes
    textual annotation and distance and area measurements (Fig. [2](#Fig2)). For annotation
    generation purposes, a portion of the original point cloud, used for generating
    annotations, can be copied without modifying the original data (Sect. [6.1](#Sec18)).
    Apart from textual annotations, the user can also select given cluster and transform
    its position and rotation in the 3D scene. Both the annotation and transformation
    actions can be captured as updated scene attributes that are sent to the server
    as a new block update. Each stakeholder can add blocks without explicit permission,
    due to the trusted nature of the PDL.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以为3D点云场景添加注释，可以是整个场景，也可以是特定选择的点簇。目前包括文本注释、距离和面积测量（图 [2](#Fig2)）。为了生成注释，用于生成注释的原始点云的一部分可以在不修改原始数据的情况下进行复制（第
    [6.1](#Sec18)节）。除了文本注释外，用户还可以选择给定簇并在3D场景中转换其位置和旋转。注释和变换操作都可以被捕获为发送到服务器的新区块更新的更新场景属性。由于PDL的值得信赖的特性，每个利益相关者都可以添加区块而无需明确许可。
- en: 4.2 Stakeholder Block Update Consensus
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2 利益相关者区块更新共识
- en: 'If some of the stakeholders are required to add annotations that need to be
    approved by other stakeholders, an consensus-based approach is required. We propose
    an approach for such a situation: Once the annotations have been made, the user
    who made the changes can send a preview of the scene and changes as an image and
    textual description to all involved stakeholders. The connected stakeholders can
    then approve or reject the changes. If the majority of stakeholders approve the
    changes, the user who made the suggested changes is then able to upload the proposed
    changes as a new block to the blockchain.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某些利益相关者需要添加需要其他利益相关者批准的注释，就需要一种基于共识的方法。我们提出了一种针对这种情况的方法：一旦注释完成，进行更改的用户可以向所有相关利益相关者发送场景和更改的预览图像和文本描述。连接的利益相关者然后可以批准或拒绝更改。如果大多数利益相关者批准更改，那么建议更改的用户就可以将更改上传为区块链的新区块。
- en: 5 Case Study
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 案例研究
- en: We present an experimental case study where we made use of point cloud representations
    of typical office environment. The office environment was captured using a commodity
    mobile device and presents an open office area of approximately 15 m![$$^2$$](../images/504856_1_En_10_Chapter/504856_1_En_10_Chapter_TeX_IEq2.png),
    along with common office furniture (e.g., chairs, sofas, tables). The point cloud
    contains 318,589 points, featuring spatial, and RGB color attributes. We performed
    both annotation and transformation tasks, where we annotated common office furniture
    and transformed the segmented point clusters to new locations in the scene. These
    changes were then recorded in the blockchain and updated to all connected peers.
    We assessed the integrity of the blockchain after it has been updated, using three
    different validation techniques (index, previous, and current hash validation).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供了一个实验案例研究，在该研究中，我们使用了典型办公环境的点云表示。办公环境是使用普通移动设备捕获的，呈现了一个约为15 m![$$^2$$](../images/504856_1_En_10_Chapter/504856_1_En_10_Chapter_TeX_IEq2.png)
    的开放办公区域，还有常见的办公家具（如椅子、沙发、桌子）。该点云包含318,589个点，具有空间和 RGB 颜色属性。我们进行了注释和转换任务，其中我们注释了常见的办公家具，并将分割的点簇转移到场景中的新位置。这些更改随后被记录在区块链中，并更新到所有连接的对等体。我们在更新后评估了区块链的完整性，使用了三种不同的验证技术（索引、先前和当前哈希验证）。
- en: 5.1 Annotation and Transformation Task
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.1 注释和转换任务
- en: The annotation and transformation task present a typical scenario in FM, where
    furniture has to be moved from one location to another by the O &M personnel,
    with instructions and result inspections carried out the O &M manager (Fig. [5](#Fig5)).
    This scenario is broken down into six different tasks, with tasks 1–3 illustrated
    in result Fig. [6](#Fig6), and showing the transaction results of recorded annotations
    between the three involved stakeholders. Once the task has been completed by the
    O &M employee in this scenario, the physical result of the task can be compared
    by the O &M Manager with the version of the point cloud scene that contains the
    annotated and agreed instructions of where to move the chairs. If the task is
    carried out to the satisfaction of the O &M manager, both the O &M employee and
    building manager would receive notification of a successfully completed task and
    this would be recorded as well in the PDL.![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig5_HTML.png)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注释和转换任务呈现了 FM 中的典型场景，其中家具必须由 O &M 人员从一个地点移动到另一个地点，并由 O &M 管理人员进行指导和结果检查（图 [5](#Fig5)）。该场景分为六个不同的任务，任务
    1–3 在结果图 [6](#Fig6) 中有所体现，并显示了三个涉及利益相关者之间已记录注释的交易结果。一旦在这种情况下 O &M 员工完成了任务，该任务的物理结果可以由
    O &M 管理人员与包含被注释和同意的椅子移动位置指示的点云场景版本进行比较。如果任务得到了 O &M 管理人员的满意完成，那么 O &M 员工和建筑经理都会收到成功完成的任务的通知，并且这也会被记录在
    PDL 中。![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig5_HTML.png)
- en: Fig. 5
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5
- en: Illustration of the proposed annotation and transformation task, broken down
    into six different steps, and involving three different stakeholders
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 展示了拟议的注释和转换任务，分为六个不同的步骤，并涉及三个不同的利益相关者。
- en: '![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig6_HTML.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/504856_1_En_10_Chapter/504856_1_En_10_Fig6_HTML.png)'
- en: Fig. 6
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6
- en: Result of the case study where the first three steps of the task generation
    and communication process are recorded in the PDL, visualized using the point
    cloud representation of the office area, and communicated to all involved stakeholders
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 任务生成和通信过程的前三个步骤记录在 PDL 中的案例研究结果，使用办公区域的点云表示进行可视化，并传达给所有涉及的利益相关者
- en: 5.2 Blockchain Computation Performance
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.2 区块链计算性能
- en: We further provide preliminary results in terms of computational performance
    of key block creation and validation methods (Table [1](#Tab1)), which are implemented
    and executed server-side using Node.js. The server used for testing is a commodity
    desktop PC, with an Intel Core i5-6500 CPU at 3.2 GHz with 8 GB RAM, using Node.js
    version 14.0.0.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进一步提供了关键区块创建和验证方法的计算性能初步结果（表 [1](#Tab1)），这些方法是使用 Node.js 在服务器端实现和执行的。用于测试的服务器是一台普通的台式个人电脑，配备了Intel
    Core i5-6500 CPU，主频为3.2 GHz，内存为8 GB，使用的是 Node.js 版本14.0.0。
- en: 'Each performance attribute measures the average time taken to complete a specific
    blockchain operation. The average time taken was measured using 15 consecutively
    recorded samples for each operation. The selected performance attributes are split
    up into three different types of operations: (1) block creation, (2) validation,
    and (3) retrieval. We used a blockchain with 15 different block elements.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 每个性能属性测量完成特定区块链操作所需的平均时间。通过对每个操作连续记录的 15 个样本来测量平均所需时间。所选择的性能属性分为三种不同类型的操作：（1）区块创建，（2）验证和（3）检索。我们使用了
    15 个不同区块元素的区块链。
- en: The block creation attributes include time taken to generate a new block, and
    the time taken to compute a unique hash for the new block. The validation attributes
    include validation of the current block index, and the validation of the previous
    and current hashes of two consecutive blocks. The validation of the complete block
    chain is performed using all three validation methods (index, current, and previous
    hash validation). The retrieval performance attributes were used to evaluate the
    time taken to retrieve the first block in the blockchain (the *genesis block*),
    and well as the time taken select and retrieve a random block from the complete
    blockchain.Table 1
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 区块创建属性包括生成新区块所需的时间，以及计算新区块的唯一哈希所需的时间。验证属性包括验证当前区块索引，以及验证两个连续区块的前一个和当前哈希。使用所有三种验证方法（索引、当前和前一个哈希验证）执行完整区块链的验证。检索性能属性用于评估检索区块链中第一个区块（*创世区块*）所需的时间，以及选择和检索完整区块链中的随机区块所需的时间。表1
- en: Preliminary evaluation of the PDL in terms of performance of key block creation
    and validation methods
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 初步评估 PDL 在关键区块创建和验证方法的性能方面
- en: '| Performance attribute | Time (ms) |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 性能属性 | 时间（毫秒） |'
- en: '| --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Block creation | 5.608 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 区块创建 | 5.608 |'
- en: '| Block hash computation | 0.306 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 区块哈希计算 | 0.306 |'
- en: '| Block index validation | 1.072 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 区块索引验证 | 1.072 |'
- en: '| Previous block hash validation | 1.031 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 上一个区块哈希验证 | 1.031 |'
- en: '| Current block hash validation | 1.278 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 当前区块哈希验证 | 1.278 |'
- en: '| Complete chain validation | 62.431 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 完整链验证 | 62.431 |'
- en: '| Genesis block retrieval | 7.810 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 创世区块检索 | 7.810 |'
- en: '| Random block retrieval | 7.744 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 随机区块检索 | 7.744 |'
- en: 6 Discussion
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 讨论
- en: The presented case study demonstrates the feasibility of our approach of tracking
    of spatial and user-annotated changed within a point cloud scene using a PDL.
    The use of a PDL based on BT principals offers promising alternative for storing
    of immutable data related to decision-making within the realm of FM, and integration
    with DT platforms. However, there are additional important points to take into
    account when considering the use of a PDL for FM-related-decision making tasks.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 所提供的案例研究展示了使用 PDL 跟踪点云场景中空间和用户注释更改的可行性。基于 BT 原则的 PDL 的使用为存储与 FM 领域内决策相关的不可变数据提供了有前途的替代方案，并且与
    DT 平台集成。然而，在考虑将 PDL 用于 FM 相关决策任务时，还有其他重要的考虑点。
- en: 6.1 Data Transfer and Storage Considerations
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.1 数据传输和存储考虑
- en: In the presented case study, we focus on simple annotations (e.g., measuring
    distances between two points or adding simple work order instructions), though
    the number of attributes recorded by each block for each transaction could increase
    to include many more details e.g., complete scene editing or selected object transformation
    history. This would also inevitably increase the processing overhead of the block
    hashing, synchronization, and validation operations.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在所提供的案例研究中，我们专注于简单的注释（例如，测量两点之间的距离或添加简单的工作指令），尽管每个区块记录的属性数量可能增加以包括更多细节，例如，完整的场景编辑或选择的对象变换历史。这将不可避免地增加区块哈希、同步和验证操作的处理开销。
- en: The presented approach does not explicitly store any point cloud data within
    the blockchain, but rather attributes associated with a given point cloud. As
    such, it is assumed that all stakeholders have access to the same and most recent
    version of the point cloud. Since point clouds tend to be very large (potentially
    millions or billions of points with gigabytes in size), their transmission, and
    storage remains impractical, especially using SOS implementations.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 所提出的方法并没有显式地在区块链中存储任何点云数据，而是与给定点云相关联的属性。因此，假定所有利益相关者都可以访问点云的相同和最新版本。由于点云往往非常庞大（可能包含数以百万计或数十亿个点，大小以千兆字节计），它们的传输和存储仍然不切实际，尤其是使用
    SOS 实施。
- en: Due to this presumably large size of point clouds, it is more practical to identify
    and make use of *metadata* of point clouds when using them for versioning and
    decision-making within a PDL. This can include timestamps of when the point cloud
    was created, number of points, size on hard disk, etc., and more importantly,
    the point cloud that is used can be stored on a secure server that provides read-only
    access to it for PDL-based versioning. This way all of the of the stakeholders
    can use the same and unmodified version of the point cloud for recording of user
    annotations, with the annotations becoming *proposed* changes that can be implemented
    in the updated version of the point cloud once a consensus has been reached.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 由于点云可能非常庞大，因此在在PDL（Product Data Labeling）中使用它们做版本控制和决策时，更实际的方法是识别和利用点云的*元数据*。
    这可以包括点云创建时间戳、点数、硬盘大小等，并且更重要的是，所使用的点云可以存储在一个安全服务器上，该服务器对基于PDL的版本控制提供只读访问。 这样，所有利益相关者可以使用相同且未修改的点云版本记录用户的标注，标注将成为*拟议*更改，一旦达成共识，就可以在更新版本的点云中实施。
- en: However, in order to prove that the stakeholders are using the original version
    of the point cloud, an initial verification step can be implemented using the
    actual point cloud data. A hash of the complete point cloud can be computed using
    SHA-256 as the main PRNG component. This hash value can then be compared and verified
    prior to any further stakeholder use and annotation of the point cloud, thus ensuring
    that the original and non-modified version of the point cloud is being used.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，为了证明利益相关者使用的是点云的原始版本，可以实施一个使用实际点云数据的初始验证步骤。 使用SHA-256计算完整点云的哈希值作为主PRNG组件。
    然后，在任何进一步的利益相关者使用和标注点云之前，可以比较和验证这个哈希值，从而确保使用的是原始且未修改的点云版本。
- en: It should also be noted that while the validity of the blockchain is ensured,
    the actual point cloud data should be treated as read-only data, so that it cannot
    be modified by any of the stakeholders. A portion of the original point cloud
    used for annotation purposes can be copied and stored temporarily (e.g., either
    in system memory or a DBMS), and this copied portion can be used for making any
    changes that enable the illustration of important scene changes for communication
    with stakeholders (e.g., showing where to move machinery or furniture items within
    a room).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，尽管区块链的有效性得到了保证，但实际的点云数据应被视为只读数据，以便不会被任何利益相关者修改。 用于标注的原始点云的一部分可以被复制并临时存储（例如，存储在系统内存或DBMS中），并且可以使用这个复制的部分进行任何可以说明与利益相关者交流的重要场景变化的更改（例如，显示在房间内移动机械或家具物品的位置）。
- en: Furthermore, the annotations and illustrations made using the temporary point
    cloud portion can be transmitted to other stakeholders as e.g., image-based annotations.
    This way, a single and valid version of the point cloud is used between all stakeholders,
    on to which the various annotations are projected, and images are captured and
    shared for decision-making—without the original point cloud being modified.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，使用临时点云部分制作的标注和插图可以作为基于图像的标注传输给其他利益相关者。 这样，所有利益相关者之间使用单个有效版本的点云，在其中进行各种标注的投影，并捕获和共享用于决策的图像，而原始点云不会被修改。
- en: 6.2 Potential Stakeholder Use Cases
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2 潜在的利益相关者使用案例
- en: A notable use case of the blockchain-based scene annotation would be integration
    into DT platforms for FM. As mentioned, it is impractical to include actual point
    cloud data in the blockchain, therefore criteria for inclusion of useful metadata
    would need to be investigated. The selection of appropriate metadata becomes particularly
    important for DT systems that integrate various data sources (e.g., BIM, CAD,
    floorplan, digital documents, sensor data—all in addition to point cloud data).
    For example, in a hypothetical DT platform, a BIM model would form only one of
    the key “base-data” sources. The combined use of multiple historic, current, and
    real-time digital data related to the operational lifecycle of a building can
    be merged together to form an “asset information model” (AIM), which is essentially
    what the DT platform uses and maintains [[40](#CR40)]. Additionally, a DT would
    be implemented within a digital twin environment (DTE), where the use of service-oriented
    architecture and system implementation could be benefit the integration of various
    processing components [[41](#CR41)].
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链场景标注的一个显着用例是集成到FM的DT平台中。正如前文所述，将实际点云数据包括在区块链中是不切实际的，因此需要调查包含有用元数据的标准。 对于集成了各种数据源（例如BIM、CAD、平面图、数字文档、传感器数据—所有这些都是点云数据的补充）的DT系统来说，选择适当的元数据变得尤为重要。
    例如，在一个假设的DT平台中，BIM模型只会形成关键的“基础数据”来源之一。 多个历史、当前和实时数字数据的合并使用，有助于形成“资产信息模型”（AIM），这基本上是DT平台使用和维护的内容[[40](#CR40)]。此外，DT将在数字孪生环境（DTE）中实施，服务导向架构和系统实施的使用将有助于集成各种处理组件[[41](#CR41)]。
- en: This is in contrast with current AECOO practices, where a BIM model and associated
    digital documentation are generated, shared and maintained using a common data
    environment (CDE)—usually with proprietary BIM software. Stakeholders can view
    the BIM model within a static state (e.g., not usually dynamically updated), where
    time, cost, and spatial clash detection properties can be computed using a given
    level-of-detail (LOD) BIM representation [[1](#CR1), [42](#CR42)].
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这与当前的AECOO做法形成鲜明对比，其中使用常见数据环境（CDE）（通常使用专有BIM软件）生成、共享和维护BIM模型及相关数字文档。利益相关者可以在静态状态下查看BIM模型（例如通常不会动态更新），可以使用给定的细节层次（LOD）BIM表示计算时间、成本和空间冲突检测属性[[1](#CR1),
    [42](#CR42)]。
- en: An AIM can be made up of a number of different file formats that facilitate
    capture, semantic enrichment, and exchange of information between stakeholders.
    Common file formats for such data exchange include IFC,^([4](#Fn4)) CoBIE,^([5](#Fn5))
    and the BIM collaborative format.^([6](#Fn6)) BCF is of notable interest due to
    the design of its API that enables sharing of important of BIM data, based on
    the IFC model, through a REST-based API that enables integration into a SOS. BCF
    is also a good potential candidate for use in a PDL since it is designed to share
    the metadata of an IFC model, instead of the IFC model itself. A possible use
    case scenario for a PDL could be to keep track of any changes to the IFC model
    via the specification of the BCF format, where each of the defined block datatypes
    and attributes correspond to their counterparts in the BCF specification.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: AIM可以由多种不同的文件格式组成，这些文件格式有助于捕获、语义丰富化和利益相关者之间的信息交换。用于此类数据交换的常见文件格式包括IFC，^([4](#Fn4))
    CoBIE，^([5](#Fn5)) 以及BIM协作格式。^([6](#Fn6)) 由于BCF的API设计能够通过基于REST的API共享基于IFC模型的重要BIM数据，因此BCF尤其引人关注。BCF还是PDL中的一个很好的潜在候选，因为它旨在共享IFC模型的元数据，而不是IFC模型本身。
    PDL的一个可能的用例场景是通过BCF格式的规范来跟踪IFC模型的任何变化，其中所定义的每个块数据类型和属性都与BCF规范中的对应部分相对应。
- en: An alternative would be to use the model view definition (MVD)^([7](#Fn7)) for
    selecting specific attributes, using a subset of the IFC specification to define
    the block structure of the blockchain based on the pre-defined usage requirements
    (e.g., usage for mechanical, electrical, and plumbing (MEP) components tracking
    versus spatial change tracking that can be captured at a LOD-300 IFC specification).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是使用模型视图定义（MVD）^([7](#Fn7)) 来选择特定属性，使用IFC规范的子集来定义基于预定义使用要求的区块链的块结构（例如，用于机械、电气和管道（MEP）组件跟踪与可以在LOD-300
    IFC规范下捕获的空间变化跟踪）。
- en: Scenarios where the use of BT would benefit stakeholders could include, e.g.,
    managing payments to third parties for maintenance of a building. This could further
    be extended with the use of *smart contracts*, where a transaction can trigger
    a scripted mechanism within the blockchain once a certain transaction is recorded
    [[43](#CR43)]. Stakeholders could also use a point cloud representation of an
    indoor environment to agree with responsible parties what changes need to be made
    by spatially selecting an area of interest and annotating it. As this is recorded
    immutably once all parties agree, it could be used for tracking of various building
    inventory tasks, e.g., movement of furniture or machinery from one specific location
    to another.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用区块链技术将有利于利益相关者的情景可能包括，例如，管理向第三方支付建筑维护费用。这可以进一步扩展到使用*智能合约*，其中一项交易可以在区块链内的特定记录后触发脚本化机制[[43](#CR43)]。利益相关者还可以使用室内环境的点云表示来与负责方商定空间选取感兴趣区域并进行标注需要做出的更改。一旦所有当事方都同意，这一记录是不可变的，它可以用于跟踪各种建筑清单任务，例如，家具或机械从一个特定位置到另一个位置的移动。
- en: Using the presented approach, the level of stakeholder interaction and annotation
    using the point cloud representation at minimum requires that the user selects
    a point cluster and annotates it by adding a textual note associated with it.
    This enables fast and easy overview and annotation, and potentially enhanced decision-making
    using the *as-is* point cloud representation of the built environment. While the
    the use of point clouds is advocated as the preferred means to convey key geometrical
    representation of the built environment, the presented approach of using PDL-based
    annotation can be applied to other geometric representations (e.g., triangulated
    meshes, boundary representations, 2D floorplans, etc.).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用提出的方法，利益相关者使用点云表示进行的交互和注释至少需要用户选择一个点簇，并通过添加与之关联的文字说明来注释它。这样可以轻松快速地进行概述和注释，并有可能通过建筑环境的*原貌*点云表示增强决策。虽然点云的使用被提倡为传达建筑环境的关键几何表示的首选手段，但使用基于PDL的注释的方法可以应用于其他几何表示（例如三角网格、边界表示、2D平面图等）。
- en: Furthermore, building managers and sub-contractors could use the blockchain
    to track changes such as on-going renovation and retrofitting work, e.g., multiple
    point clouds of an area that is being renovated could be captured, along with
    relevant documentation, and stored as metadata where a unique hash is associated
    with a given point cloud captured at a particular time. This way the involved
    stakeholders could use BT to track changes and monitor progress for such renovation
    or retrofitting work.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，建策经理和分包商可以使用区块链来跟踪改变，例如正在进行的翻新和改建工作，例如，可以捕捉区域的多个点云，以及相关文档，并将其存储为元数据，其中唯一的哈希与特定时间捕获的特定点云相关联。这样，相关利益相关者就可以使用区块链来跟踪这种翻新或改建工作的改变和监测进展。
- en: 6.3 Comparison with DBMSs
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.3 与数据库管理系统的比较
- en: A PDL can be thought of as a database in the sense that it is able to record,
    retrieve, and verify information in block-based data structures using BT APIs
    or protocols. However, a traditional database is designed to store data that cannot
    only be retrieved, but also modified (i.e., CRUD operations). A DBMS is usually
    installed on a single server, and copies of it are not intended to be distributed
    among users—unless they have special database administrator privileges. Since
    the blockchain is distributed, it has better fault tolerance than a traditional
    DBMS as all connected stakeholders have a copy of it, where as a DBMS usually
    has limited copies with privileged access rights.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将PDL看作是数据库，因为它能够使用区块链API或协议记录、检索和验证基于块的数据结构中的信息。但是，传统数据库被设计用于存储不仅可以检索，还可以修改的数据（即CRUD操作）。数据库管理系统通常安装在单个服务器上，并且其副本不打算分布在用户之间
    - 除非他们有特殊的数据库管理员权限。由于区块链是分布式的，所以它比传统的数据库管理系统具有更好的容错能力，因为所有连接的利益相关者都拥有它的副本，而传统的数据库管理系统通常具有有限的特权访问权限的副本。
- en: Additionally, DBMSs are designed to hold any kind of data, including very large
    spatial datasets such as point clouds, images, CAD models, and associated digital
    data. The speed of retrieval of such data in specialized DBMSs is also critical,
    and thus, they are designed around advanced data retrieval algorithms, e.g., spatial
    hash indexing for use in GIS [[44](#CR44)]. In comparison, a blockchain is designed
    to hold “lightweight” data—mostly textual and numerical data associated with transactions
    or metadata related to larger datasets that may be kept on a database or remote
    server. In terms of storage requirements, the average size of our PDL for a single
    scenario with 10 elements is 5.69 kb—using the specified block attributes stored
    and parsed in the JSON data format (Sect. [3.3](#Sec9)).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，DBMS 被设计用来存储任何类型的数据，包括非常大的空间数据集，如点云、图像、CAD 模型和相关数字数据。 在专门的 DBMS 中检索此类数据的速度也是至关重要的，因此它们是围绕先进的数据检索算法设计的，例如在
    GIS 中使用的空间哈希索引[[44](#CR44)]。 相比之下，区块链被设计用来存储“轻量级”数据，大部分是与交易相关的文本和数字数据或与数据库或远程服务器上的较大数据集相关的元数据。
    就存储需求而言，我们单个场景的 PDL 的平均大小为 5.69 kb，使用 JSON 数据格式存储和解析指定的块属性（第 3.3 节）。
- en: DBMS are also designed to deal with data types that can change based on use
    cases and data storage requirements. A blockchain block has hard-coded data types
    and attributes, and these cannot be changed unless a new blockchain is implemented
    from scratch. A PDL also does not have the same kind of flexibility as a non-relational
    DBMS for dealing with unstructured data, nor data whose attributes change once
    it is in use. Therefore, it is a requirement to decide among stakeholders which
    data attributes need to be included in the initial block design prior to deploying
    and using a PDL.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: DBMS 也被设计用来处理可以根据使用情况和数据存储要求进行更改的数据类型。 区块链块具有硬编码的数据类型和属性，除非全新实施一个新的区块链，否则这些属性不可更改。
    PDL 也不像非关系型 DBMS 面对处理非结构化数据或在使用后属性发生变化的数据那样具有相同的灵活性。 因此，在部署和使用 PDL 之前必须确保决策参与者决定在初始块设计中需要包含哪些数据属性。
- en: In terms of security, a PDL can be thought as always being secure—as all involved
    stakeholders have a copy of it, and in a trusted setting only blocks that have
    been approved by a majority of stakeholders or an appointed admin can be added
    to the blockchain. A DBMS usually requires one or more administrators to control
    who has access to and to grant required credentials to users to have specified
    access to complete or select parts of it when creating or modifying data. Therefore,
    the security and maintenance overhead of using a DBMS also tend to be higher in
    comparison with using a PDL.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 就安全性而言，可以将 PDL 视为始终安全的——因为所有相关利益相关者都有它的副本，且在受信任的环境中，只有得到大部分利益相关者或指定管理员批准的块才能被添加到区块链中。
    通常，DBMS 需要一个或多个管理员来控制谁可以访问它，并在创建或修改数据时授予用户所需的凭证来对其完整或选择部分进行访问。 因此，与使用 PDL 相比，使用
    DBMS 的安全性和维护开销往往更高。
- en: 6.4 Attack Possibilities on the Blockchain
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.4 区块链可能存在的攻击可能性
- en: A notable hypothetical weakness of public blockchains that they are susceptible
    to the “51%” or “double spending” attack [[45](#CR45)]. In the classic decentralized
    blockchain architecture, if the attacker manages to mine more blocks (51% more
    than the rest of the users), all of the connected users of the blockchain would
    use the attackers version of the blockchain since it would be the “consensus”
    or most up-to-date version. The attacker could then invalidate or modify any previously
    recorded transactions with their copy of the blockchain, which all other peers
    would be using.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 公共区块链的一个明显的假设性弱点是其容易受到“51%”或“双重支付”攻击的影响[[45](#CR45)]。 在经典的分散式区块链架构中，如果攻击者成功挖出更多的区块（比其他用户多出
    51%），那么区块链的所有连入用户将会使用攻击者版本的区块链，因为这将成为“共识”或者最更新版本。 攻击者可以使用他们的区块链副本来使先前记录的交易失效或修改，而其他节点将使用。
- en: This is mainly a problem in decentralized and public blockchains, where there
    are many anonymous users and proof of work is required prior to adding each new
    block. For PDLs, each of the blocks would usually be validated and added by a
    trusted person or party—and be dependant on social control rather than technical
    protection. The trusted stakeholders responsible for validation could, e.g., form
    a consensus when attempting or rejecting to add each new block with recorded transactions
    (Sect. [4.2](#Sec13)). This prevents the copying of the blockchain and adding
    blocks to it unless this was performed by a trusted client or group.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这主要是一个存在于去中心化和公共区块链中的问题，在那里有许多匿名用户，并且在添加每个新区块之前需要工作证明。 对于PDLs，每个区块通常会由受信任的人或团体验证和添加，并依赖于社会控制而不是技术保护。负责验证的受信任的利益相关者可以在尝试或拒绝添加记录交易的每个新区块时（Sect。
    第4.2节）形成共识。 这阻止了复制区块链并向其添加区块，除非由受信任的客户端或团体执行此操作。
- en: Another possibility for preventing modification of the PDL would be to create
    snapshots of it and back these up on a secure server with strong encryption. The
    snaphsots could be generated after each, e.g., important meeting between stakeholders,
    where the PDL and point cloud scene are used to annotate agreed items of discussion
    that may, e.g., form a part of a contractual obligation. Such a mechanism would
    reduce the possibility for any of the parties to claim that a tampered PDL is
    a valid one (if the valid one is stored safely as a snapshot and can be produced
    as evidence when required).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 防止修改PDL的另一种可能性是创建其快照，并将其备份到具有强加密的安全服务器上。这些快照可以在干系重要会议之后生成，在这些会议中， PDL和点云场景用于注释经过协商的讨论项目，这可能是合同义务的一部分。
    这样一个机制会减少任何一方声称篡改过的PDL为有效的可能性（如果有效的PDL安全地存储为快照，并在需要时可以作为证据提供）。
- en: 7 Conclusions and Outlook
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7 结论和展望
- en: In this paper, we have described a conceptual approach for tracking of user
    annotations of indoor point clouds for FM applications using a prototypical PDL
    software component. The provided experimental results demonstrate the feasibility
    of our approach, and we demonstrated its use in a typical O &M scenario. We have
    also discussed potential use of the blockchain for FM-related use by taking into
    account the kind of data types and attributes such a system would need to record
    immutably for O &M related tasks, and how stakeholders would be able to interact
    with it by viewing or adding new data using a Web3D-based user interface and visualization.
    The case study results also show that the prototypical PDL is able to record stakeholder
    annotations immutably, and that the validity of the blockchain cannot be compromised
    undetected. Furthermore, the preliminary performance results demonstrate the feasibility
    of the PDL as a lightweight SOS component that is able to perform key blockchain
    computations efficiently. Furthermore, the presented approach is not explicitly
    tied to using point clouds for representation and can be used for all scenarios
    using digital representations of various environments requiring immutable user
    annotations (e.g., city planning using CityGML-based representations).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们描述了一种概念性方法，用于使用原型PDL软件组件跟踪室内点云用户注释，用于FM应用。所提供的实验结果证明了我们方法的可行性，并演示了它在典型的O&M场景中的应用。我们还讨论了区块链在FM相关用途中的潜在用途，考虑了这样一个系统需要记录不可变地用于O&M相关任务的数据类型和属性，以及利益相关者如何能够通过使用基于Web3D的用户界面和可视化来查看或添加新数据与之交互。案例研究结果还表明，原型PDL能够不可变地记录利益相关者的注释，并且区块链的有效性无法被不知情地破坏。此外，初步的性能结果表明PDL作为一个轻量级SOS组件能够高效地执行关键的区块链计算的可行性。此外，所提出的方法并不明确地与使用点云进行表示绑定，并且可以用于使用不可变用户注释的各种环境的数字表示的所有情景（例如，使用基于CityGML的城市规划）。
- en: For the prototypical PDL implementation, the point cloud is kept on the server
    and loaded by the client user interface (copied into the clients system memory).
    A more efficient streaming-based method that provides read-only access to the
    point cloud that is stored securely on the server will be investigated. We have
    also proposed an approach for stakeholder consensus for adding new data to the
    blockchain, which we aim to implement and test for future work. Finally, we plan
    to expand the attributes of the blockchain to match those of the BCF specification,
    and test this approach using multiple stakeholders.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对于原型 PDL 实现，点云保存在服务器上，并由客户端用户界面加载（复制到客户端系统内存中）。我们将研究一种更有效的基于流式传输的方法，该方法提供对在服务器上安全存储的点云的只读访问。我们还提出了一种用于利益相关者共识的方法，用于向区块链添加新数据，我们的目标是实施和测试未来的工作。最后，我们计划扩展区块链的属性以匹配
    BCF 规范的属性，并使用多个利益相关者测试这种方法。
- en: Acknowledgements
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 致谢
- en: The presented work and publication text were completed while the first author
    Vladeta Stojanovic was still financed by a doctoral research stipend from the
    Research School on Service-Oriented Systems Engineering of the Hasso Plattner
    Institute, Faculty of Digital Engineering, University of Potsdam, Germany. The
    initial version of this text was completed and submitted to the editors on 13.12.2020\.
    The work done by authors from the Hasso Plattner Institute has been partially
    funded by the German Federal Ministry of Economic Affairs and Energy (BMWi) as
    part of the ZIM program, and the Research School on Service-Oriented Systems Engineering
    of the Hasso Plattner Institute, Faculty of Digital Engineering, University of
    Potsdam, Germany. There was no involvement from HafenCity Universität Hamburg
    in the development of this publication.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 第一作者 Vladeta Stojanovic 在德国波茨坦大学数字工程学院Hasso Plattner研究所服务导向系统工程研究学校的博士研究奖学金的资助下完成了所呈现的工作和出版文本。本文的初始版本于2020年12月13日完成并提交给编辑。Hasso
    Plattner学院的作者所做的工作部分资助来自德国经济和能源部（BMWi）ZIM计划，以及德国波茨坦大学数字工程学院Hasso Plattner研究所服务导向系统工程研究学校的资助。对于本出版物的开发，HafenCity大学汉堡没有参与其中。
