- en: '5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SMART CONTRACTS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 5.1\. INTRODUCTION
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Smart contracts is arguably the most widely known component of blockchain technology.
    The term smart contracts is synonymous with self-executing contracts, blockchain
    contracts or digital contracts. In this process, traditional contracts are converted
    into computer codes, then stored and replicated on the system. These codes are
    supervised by a network of computers and facilitate the exchange of money, property,
    shares or other assets in a transparent fashion. In essence, smart contracts are
    computer codes that automatically execute a transaction when pre-specified conditions
    are satisfied. The computer program automatically validates that the pre-specified
    condition has been satisfied and then determines how the assets should be redistributed
    between the participants of the underlying transaction. The decentralized ledger
    stores the conditions and conducts the eventual transaction in an immutable, tamper-free
    form which provides security and validity.
  prefs: []
  type: TYPE_NORMAL
- en: Nick Szabo, a computer scientist and a cryptographer, developed the concept
    of “smart contracts” in the mid-1990s, almost a decade before the advent of blockchain
    or Bitcoin. Though he did not name these as “smart contracts” these were self-executory
    contracts which did not require a trusted third party (Szabo, 1999). His initial
    motivation was to reduce transaction costs to enable microtransactions. Subsequently,
    he expanded on the concept of establishing contract law to facilitate transactions
    between strangers over the internet. Szabo had introduced a virtual currency in
    1998, called “Bit Gold,” which did not gain much popularity or traction. However,
    Bitcoin exploited many of the same features and popularized the notion of “smart
    contracts.”
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts are not merely a compilation of pre-conditions and rules around
    an agreement, but they also auto-execute those rules and obligations. Hence, smart
    contracts have to be supported by technology that is able to determine when the
    pre-conditions have been satisfied. Smart contracts are essentially lines of computer
    codes that contain “if-then” rules and are stored on a blockchain. When the conditions
    “ifs” are met, the code executes on its own and delivers the output, the “thens.”
    These can be used in business transactions where both parties agree upon the decided
    terms.
  prefs: []
  type: TYPE_NORMAL
- en: As an example, suppose a buyer agrees to make a payment of a million dollars
    upon the delivery of the goods. The buyer then deposits a million dollars in a
    blockchain account and the seller is assured that the funds exist and will be
    released to the seller once the buyer receives the goods. The seller then could
    ship the goods with a tracking device on the shipment. Once the goods are delivered,
    the tracking device shows the destination, this is verified by hundreds of users
    on the blockchain, and the million dollar is released from the escrow account
    to the seller’s account. The buyer can no longer cancel the purchase or refuse
    to pay. The payment was automatic upon the receipt of the goods. This reduces
    the risk of non-payment and consequently the transaction costs.
  prefs: []
  type: TYPE_NORMAL
- en: While smart contracts are generally associated with cryptocurrencies, currently
    this notion is being applied to other domains and uses. Many of these uses will
    be described in detail in latter chapters, and range from ethical sourcing of
    minerals to flight insurance and online sports betting. Smart contracts are prominent
    and one of the key features of Ethereum platform.
  prefs: []
  type: TYPE_NORMAL
- en: The sharing economy has been a critical driver of economic growth in the recent
    past. Some of the key players in this market, Airbnb, Uber and Lyft, are household
    names though being relatively young companies. A generic problem these platforms
    encounter is the need of a trusted third party to execute transactions and ensure
    that each participant is paid according to the contract. There is also a lack
    of privacy when using these services and the need to sign up for each platform.
    A smart contract phone app has been proposed to resolve these issues (Bogner,
    Chanson, & Meeuw, 2016).
  prefs: []
  type: TYPE_NORMAL
- en: The remainder of this chapter is organized as follows. In the next section,
    we define smart contracts. In Section 5.3, we discuss the economics of microtransactions
    and the consumer need to minimize cognitive costs. Section 5.4 describes the features
    of smart contracts, and Section 5.5 describes how it works. Some applications
    are discussed in Section 5.6\. The advantages are discussed in Section 5.7\. Section
    5.8 describes how blockchain technology provides the necessary infrastructure
    to execute smart contracts. Section 5.9 discusses the legal ramification. We conclude
    in Section 5.10 with a brief summary.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2\. SMART CONTRACTS DEFINED
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A smart contract is a simple set of business rules that are self-executed once
    the pre-determined conditions have been satisfied. In the traditional setting
    a responsible third-party intermediary, usually a lawyer or an escrow, is assigned
    with the task of ensuring the proper execution of the contract upon the fulfillment
    of the underlying terms and conditions. In the smart contract environment, the
    executory role of the trusted third-party intermediary is delegated to a computer
    code and the verification role is collectively undertaken by the participants
    in the blockchain. The decentralization of the verification process and the automation
    of the execution facilitates the objective and unambiguous satisfaction of the
    pre-condition and enforcing the outcomes. This allows participants to exchange
    items of value in transparent and conflict-free manner, without a third-party
    intermediary.
  prefs: []
  type: TYPE_NORMAL
- en: In current applications, smart contracts are simple business rules that are
    computer coded and automatically verified prior to executing the transaction.
    Smart contracts could be as simple as, “verify that account balance (*B*) exceeds
    transaction amount (*T*), prior to making payment of *T*.” In that instance, when
    the system is presented with a new transaction, it automatically checks the account
    balance, compares the account balance to transaction amount, executes transaction
    when *B* > *T*. In that sense, smart contracts are primarily “if/when—then” statements
    that are coded on a blockchain. A network of computers executes the actions when
    pre-specified conditions have been satisfied.
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts typically involves exchange of assets across multiple unrelated
    parties. The assets belonging to various participants in the transaction are deposited
    and redistributed among the participants in accordance to the pre-conditions outlined
    in the contract. The self-executory nature of the contracts ensures efficiency
    through real-time performance and cost savings.
  prefs: []
  type: TYPE_NORMAL
- en: To better illustrate the concept, consider a simple example of payment for transfer
    of goods. Suppose a Manufacturer *M* in the United States wants to purchase some
    raw materials from a supplier *S* located in Australia. The supplier *S* uses
    a transportation company *T* to ship the goods and purchases insurance from Company
    I should the shipment be lost during transit. *S* agrees to pay *T* for shipping
    charges only after receiving payment from *M*, which is a confirmation that the
    goods have been delivered.
  prefs: []
  type: TYPE_NORMAL
- en: '**Fig. 5.1:    Supply Chain Transaction in a Traditional Setting.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/C05-FIG1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[Fig. 5.1](#fig1) illustrates how the payments for this transaction would be
    processed in traditional businesses. Once *M* receives the goods and the invoice
    attached to it, it will send it to its cash disbursement clerk, who would then
    issue and mail a check to *S*. Upon receipt of the check from *M*, *S* would deposit
    it to their bank in Australia, who would then contact the *M*’s bank in United
    States and get the funds transferred. Upon receiving cash in their bank account,
    *S* sends the check to *T* which undergoes a similar process of cashing. The Insurance
    Company I collects its premium up-front, but does not recognize revenue, until
    sufficient time has passed and *S* has filed no claim.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Fig. 5.2](#fig2) illustrates how this transaction will take place with smart
    contract. At the time of placing the order, *M* deposits money on to the escrow
    account on the blockchain. *S* notes that *M* has deposited the money, contracts
    with *T* to transport the goods and purchases insurance from *I*. *S* puts in
    the shipping charges and the insurance premium on a separate escrow account on
    the same blockchain. *T* puts in a geographical tracking device on the shipment,
    which could potentially be monitored through internet of things (IoT). When the
    shipment is delivered to *M*, as noted by the tracking device, the smart contract
    self-executes and instantaneously releases *M*’s escrow funds to *S*. The release
    of funds to *S* triggers the other two smart contracts, and the escrow funds of
    *S* are released to *T* and *I*. The insurance company, *I* receive the premium
    and notes that the shipment was delivered as intended, hence no claims would be
    forthcoming. In general, there can be as many stipulations as needed to satisfy
    the buyer that the task will be completed to their satisfaction and stipulation.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fig. 5.2:    Supply Chain Transaction with Smart Contracts.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/C05-FIG2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let’s consider another more common example, that of selling a house. For anyone
    who has sold a house in the United States knows that it is a rather complicated,
    expensive and daunting process with lot of paperwork and communication between
    many different parties. In the traditional setting, there are multiple parties
    involved in the sale–purchase of real estate property, such as a house. The purchase
    of a house, in the United States, involves obtaining a court-registered document
    or the title, verification that the seller of the property is in fact listed as
    the owner of the property on the title. Additional verification is required that
    there are no outstanding lien on the property. Organizing a closing is often as
    tedious as organizing a wedding. That’s why majority of sellers use a real estate
    agent, who deals with the paperwork and acts as a liaison with various parties,
    until the deal is “closed.” An escrow service helps in these transactions, due
    to the amount of money and the number of parties involved in such transactions.
    There are also lawyers from both sides as well as a Title agent are involved in
    every closing. All said and done, it costs somewhere between 6% and 7% of the
    price of the house, for these many services, which is paid by the seller. A smart
    contract solution for real estate sales hence could have much economic ramification
    for the seller. Most importantly, smart contracts will resolve the trust issue,
    of ensuring that the seller is the legitimate owner of the house and the buyer
    has the funds to pay for the house. The “if-then” principle, in this case would
    ensure that the ownership of the house will be passed on to the buyer only when
    the purchase price is deposited in the system. As the trust between the parties
    is no longer of concern, there is no need for an intermediary, consequently saving
    considerable amount of money to the actual signatories of the transaction, the
    buyer and the seller.
  prefs: []
  type: TYPE_NORMAL
- en: Similar smart contract applications are being developed for real estate rental
    market, where the tenant deposits funds on a blockchain, which will be released
    to the landlord upon the transfer of the key, an event which is witnessed by all
    participants of the blockchain. If the key does not arrive by the specified date
    on the rental agreement, the funds are refunded to the prospective tenant. The
    smart contract works on the similar “if-then” premise. The system releases the
    key to the tenant provided the funds are in escrow, and releases the funds to
    the landlord once the keys have been transferred to the tenant. Through the mechanism,
    a level of trust is developed in the transaction, even though the landlord and
    the tenant may never have met. The smart contract performs the task of the real
    estate agent, who in traditional setting acts as the intermediary.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3\. ECONOMICS OF MICROTRANSACTIONS[¹](#fn1)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the 1990s, the early days of e-commerce, computer scientists were working
    on drastically reducing transaction costs of e-commerce so that a system could
    be created to facilitate micropayments. By transaction costs, the technologists
    implied computational costs or network costs. Nick Szabo bridged the gap between
    the technologists’ idea of costs to that of an economist. Typically, economists
    imply cognitive costs, or mental processing efforts of consumers, when discussing
    transaction costs.[²](#fn2)
  prefs: []
  type: TYPE_NORMAL
- en: The role that mental transaction costs have on human behavior can be well understood
    by observing the age-old habit of haggling for prices. Throughout economic history,
    as societies grow wealthier, there is a corresponding decline in retail haggling.
    Retail prices become a smaller fraction of individual wealth; hence individuals
    are unwilling to expend substantial mental energy, or incur cognitive costs, in
    haggling and exhibit the behavior of price takers for their retail purchases.
    The same is true for microtransactions, as the prices become small fractions of
    customer wealth, they tend to become irrelevant.
  prefs: []
  type: TYPE_NORMAL
- en: Consider electricity bills, for example. While the utility company is not expected
    to provide detail electricity consumption for each appliance, it is conceivable
    that personal accounting programs integrated with smart appliances will enable
    consumers to do it. Similarly, how does a homeowner better balance between electric
    versus gas heat, while it will lead to some savings one will incur a large cognitive
    cost. Similarly, when we transact with reliable and widely known entities, we
    trust them and tend not to recompute the charges, to save on cognitive costs.
  prefs: []
  type: TYPE_NORMAL
- en: In examining micropayments, the larger costs are imposed by the limits set by
    the mental transaction costs associated with micropayments. Hence, Szabo was motivated
    to explore possibilities of automating micropayments thereby greatly reducing
    the mental processes which impose cognitive costs on the consumers. As cognitive
    costs of micropayments decline, more and more consumers will engage in greater
    number of transactions involving micropayments.
  prefs: []
  type: TYPE_NORMAL
- en: Szabo (1997) concludes that mental or cognitive costs usually exceed the computational
    costs. Parties to a transaction would prefer systems that require less mental
    energy and memory to execute and do not necessarily object to paying a bit more
    for computational transaction costs. The cognitive costs are derived from three
    source that include, uncertainty in cash flow, incomplete and costly observation
    of product attribute and costly decision-making. As societies get wealthier, the
    mental costs will dominate consumer preferences. Hence, smart contracts are a
    mechanism to automate some of the decision-making and outsource the logistics
    of execution to public domain, thereby reducing the cognitive costs, enabling
    more transactions and business models.
  prefs: []
  type: TYPE_NORMAL
- en: 5.4\. FEATURES OF A SMART CONTRACT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In essence, smart contracts functions as automated escrow accounts. Two parties
    to a transaction deposit their deliverable, cash or goods, into the escrow account.
    Once the pre-conditions are met the transfer is auto-completed, without any further
    human intervention. Hence, all the conditions, “if-then” rules and rewards and
    costs must be pre-specified at the outset. The smart contracts do not merely maintain
    documentation of the terms but executes those terms and enforces the conditions.
    In its simplest form, the smart contracts have the following essential components.
  prefs: []
  type: TYPE_NORMAL
- en: First and foremost, the parties to the transaction must be clearly identified.
    As with any contract, the signatories must be identified. In other words, these
    are the individuals or corporations entering into the transaction. The signatories
    are two or more parties that agree with the terms and conditions of the smart
    contract, and have some underlying economic interest in the outcome.
  prefs: []
  type: TYPE_NORMAL
- en: Second, the outcome or the subject of the agreement must be objectively and
    unambiguously observable. The subject of the agreement must be an item or information
    that exists within the smart contract’s environment. Since the smart contract
    will be auto-executed upon the satisfaction of the terms or the pre-conditions,
    these pre-conditions must be observable to the executors of the smart contract,
    the blockchain participants. All the nodes in the blockchain must have unhindered
    and direct access to the item or the information which is the subject of the agreement.
    For example, in a smart contract on sports betting, the winner of the game and
    the final score is publicly available and unambiguous.
  prefs: []
  type: TYPE_NORMAL
- en: Third, the outcome of the contract must include direct and specific terms. The
    requirement of “specificity” of the terms stem from the need to be able to mathematically
    describe the terms using a programing language. The terms should include not only
    what the pre-conditions were, but the costs and rewards for each and every conceivable
    outcome for each and every signatory to the contract.
  prefs: []
  type: TYPE_NORMAL
- en: Fourth, these contracts must be able to operate within the requisite technical
    environment. At the outset, each signatory to the contract must be equipped to
    use public key cryptography. This will enable unique identification of the parties.
    The underlying system used must be reliable and secure. Once the terms and conditions
    have been programmed these cannot be altered or rewritten by hackers. Moreover,
    once the assets are transferred into the system, those must be secure.
  prefs: []
  type: TYPE_NORMAL
- en: Fifth, the execution of smart contracts requires an open and decentralized database.
    This ensures that the pre-conditions can be objectively assessed by multiple disinterested
    parties, to ensure proper execution. That is the terms of the transaction can
    be witnessed and verified by hundreds of people or computers, hence proper execution
    is assured. The blockchain technology provides adequate environment to facilitate
    smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the outcome of the smart contract may lead to triggering of other smart
    contracts. There could be a dependence relationship between smart contracts. These
    could be cascading of smart contracts, in that upon the resolution of the first
    smart contract, others are triggered, and so on. It is conceivable that the entire
    organization or system runs on well specified, pre-determined smart contracts.
    Of course, these require extensive planning and consideration of each and every
    possible outcome of each contingency. Additionally, all the cascading contracts
    must be able to operate in the technical environment supported by a decentralized
    database, such as blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 5.5\. HOW DOES IT WORK?[³](#fn3)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nick Szabo’s initial suggestion was to translate contractual clauses into computer
    code so that the computer could automatically execute and self-enforce them. This
    would minimize the need for trusted third parties, or even for transacting parties
    to use mental capacity to perform menial tasks. As noted in the above section,
    Nick Szabo was not just interested in reducing the out-of-pocket transaction costs
    or even computational costs, but the total costs which included cognitive costs.
    The blockchain technology, through its decentralized controls, provided the infrastructure
    to trigger self-execution, which was tamper-proof and could not be manipulated.
  prefs: []
  type: TYPE_NORMAL
- en: The smart contract resides on the blockchain and has a unique address. The smart
    contract is triggered by addressing a transaction to it. The smart contract then
    executes the terms of the contract independently and automatically, consistent
    with the code. The outcome of the transaction is broadcast to every other node
    in the blockchain. The record of the transaction is thus maintained at each location
    or node and is imprinted in the ledger, the block. The record is immutable and
    as additional transactions get recorded in the blockchain, additional blocks are
    added.
  prefs: []
  type: TYPE_NORMAL
- en: '[Fig. 5.3](#fig3) illustrates a summary of how a smart contract operates. Participants
    on the blockchain create contracts allowing different parties to have access to
    various functions within the contract. For example, only a few parties may be
    given permission to transact on that contract, and only one party the right to
    “withdraw” assets from the contract. The mechanics of operation can be understood
    through the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1.** Once a contract is created it has its own state and can take custody
    over assets on the blockchain.[⁴](#fn4) In some sense, the contract has its own
    account on the blockchain. The contract can hold assets it is prescribed to hold.'
  prefs: []
  type: TYPE_NORMAL
- en: '**2.** The contract enables the expression of business logic. That is, it can
    set the price, sanction payments upon receipt of goods, etc. For example, the
    business logic could be “make the payment 10 days after the delivery of goods,”
    or “make $100 payment to *B* if the flight 123 from New York to LA is delayed
    by two hours or more.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fig. 5.3:    Functioning of a Smart Contract.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/C05-FIG3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**3.** The contract must be comprehensive and unambiguous. That is, the contract
    should instruct proper course of action for each and every possible contingency.
    For example, if we are betting on the winner of the 2020 NCAA College Basketball
    tournament, a properly drafted contract should have considered the possibility
    of the tournament being canceled, and prescribe how the assets would be divided
    in that case.'
  prefs: []
  type: TYPE_NORMAL
- en: '**4.** The relationships between parties is driven by data. In computer scientist
    jargon, “an accounting transaction is merely ‘a signed data structure indicating
    a transfer of value’”(Antonopoulos, 2014). Simple transactions would be worded
    as, “if you send me X units of the goods, I will pay you $Y.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**5.** A smart contract is triggered by messages or transactions sent to its
    address. Once the pre-specified event occurs, a message is automatically sent
    to the “state” representing the contract and it is asked to action the terms of
    the contract.'
  prefs: []
  type: TYPE_NORMAL
- en: '**6.** The smart contract has to be such that the same set of circumstances
    *always* result in same outcome. In that sense, it has to be deterministic and
    not probabilistic. A probabilistic stipulation such as, “once the conditions are
    satisfied, toss a coin and pay only if it lands heads” will not work as different
    nodes will undertake the experiment and return different results. Since the nodes
    arrive at different results, a consensus in the network cannot be reached and
    hence the contract will not be executed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**7.** Since the smart contract resides on the blockchain, its content, code
    and operations are visible and subject to scrutiny by every other node in the
    network.'
  prefs: []
  type: TYPE_NORMAL
- en: '**8.** The interactions with the contract are conducted through messages on
    the blockchain, hence participants get a verifiable trace of each and every operation
    of the contract.'
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts operate as independent and objective “trusted third party,”
    whose only role is to execute the contract exactly as specified by the participants.
    The outcome of the smart contract is predictable and unambiguous. The outcome
    is shared with all other nodes in the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 5.6\. SMART CONTRACT APPLICATIONS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While governments and regulators all over the world have been sceptical and
    cautious of cryptocurrencies, they have enthusiastically embraced the underlying
    technology of smart contracts, as being revolutionary. Businesses and governments
    have been harnessing the technology to generate efficiencies and cost savings.
    In this section, we provide some of the use-case examples in the following paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: Large global banks have successfully traded exotic financial instruments, such
    as credit default swaps on the blockchain. Credit default swaps are primarily
    insurance products that creditors purchase to prevent losses should the borrower
    default on the payments. In the event of default of credit payments by the borrower,
    the instrument enables the creditor to collect some payment. The smart contract
    implementation is a simple “if-then” business rule. In case of default on the
    credit payment by the borrower, the seller of the swaps makes auto-executed payments
    to the purchaser of the swaps.
  prefs: []
  type: TYPE_NORMAL
- en: Insurance industry is one that still is very archaic, relying much on paper
    documentation and manual verification. This usually leads to significant time
    lag between when the damage occurs and the claims are settled, resulting in high
    administrative costs, dissatisfied policy holders and general inefficiency. Insurance
    industry is exploring application of smart contracts for claim processing, especially
    in cases of natural disasters. Natural disasters, like earthquake and hurricanes,
    are publicly known and often lead to a multitude of claims being filed, individual
    processing of which takes substantial time and effort. Enter smart contracts.
    With smart contracts, losses due to natural disaster can be approved by a network
    of participants and executed in a timely fashion and the policy holder receives
    the payment in their hour of need. The specific details on the extent of loss
    can be retained on the blockchain and verified subsequently, and adjustments if
    any made at a later date.
  prefs: []
  type: TYPE_NORMAL
- en: The process of creation of content, say for example this book, involves multiple
    parties and thus all of them are entitled to a share of the proceeds from the
    sale of the content. For example, while this book is marketed and sold by Emerald
    Publishing, as the author I am entitled to a portion of the sales price as royalty.
    A part of my compensation goes to my publishing agent. The royalty payments from
    the publisher to the author is usually based upon trust, as the authors have no
    way of independently verifying how many copies of the book are sold. Smart contracts
    can help resolve this by ensuring that royalties are distributed to the contributors
    based on pre-determined allocation of proceeds, by recording the revenue-sharing
    arrangement on a blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Ujo[⁵](#fn5) is an online music sharing/purchase company that uses the blockchain
    infrastructure to let listeners pay for the music directly to the musicians. Specifically,
    it allows public to download music in exchange of cryptocurrency which is then
    transferred to the content producers in Dai, a decentralized stable coin. It uses
    the smart contract feature to allocate the proceeds to the various owners of the
    music. Music industry is notorious for the large commissions taken by intermediaries,
    the record labels, concert venues and music streaming businesses. Ujo is trying
    to leverage blockchain technology to give content producers greater control over
    their intellectual property and limiting the roles of the intermediaries.
  prefs: []
  type: TYPE_NORMAL
- en: IoT is an area where smart contracts and blockchain technology is applicable.
    IoT connects everyday devices to internet to improve interconnectivity of the
    systems with the help of sensors. Incorporating blockchain and smart contract
    would enable the system to perform more efficiently. The sensors involved in the
    system will be nodes on the blockchain and with the help of smart contract the
    location and possession of each product can be traced and payments made accordingly.
    Thus the transfer of assets between parties could occur all through tracking devices,
    IoT and smart contracts, without any human intervention.
  prefs: []
  type: TYPE_NORMAL
- en: Additional use cases are described in subsequent chapters. These applications
    employ smart contract feature in many interesting and innovative ways.
  prefs: []
  type: TYPE_NORMAL
- en: 5.7\. ADVANTAGES OF SMART CONTRACTS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Smart contracts provide many benefits over traditional, paper-based, manually
    executed contracts. In certain instances, smart contracts are more convenient
    and faster. These are self-verifiable, self-executable and tamper-proof and thus
    provide a good blend of security and ease to facilitate transactions, which otherwise
    would not take place due to high transaction fees or lack of trust between the
    participants.
  prefs: []
  type: TYPE_NORMAL
- en: The signatories to the contract are the only parties to the agreement, there
    are no lawyers, agents or brokers involved. This provides a greater level of autonomy
    to the signatories and eliminates the possibility of manipulation by one of the
    other parties, tangentially involved in the transaction. The increased autonomy
    of the signatories empowers them and puts them in control of the terms and conditions,
    without unnecessary interference of the third parties, thereby reducing transaction
    costs.
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts are coded in an explicitly detailed form in a programing language,
    that are precise and logical. Due to the requirements of coding, internal inconsistencies
    in the contract are resolved at the outset. Computer code is more exact and precise
    than the ambiguity that is evident in legal jargon. Additionally, the programing
    exercise ensures that the conditions are comprehensive, as any condition not in
    the contract will remain unspecified and result in an error at the time of execution.
    These anomalies will be identified and resolved earlier in a smart contract. In
    traditional contracts there are possibilities that the person drafting the contract
    misses some conditions and contingencies. Thus, smart contracts tend to be more
    precise and accurate. Moreover, if implemented properly, these are extremely difficult
    to hack as they are protected with complex cryptography.
  prefs: []
  type: TYPE_NORMAL
- en: The pre-conditions and the terms of the transaction are coded. The encrypted
    message is available on a shared ledger and is time-stamped for perpetuity. Hence,
    there is no risk of the contract ever getting “lost” or misplaced. Thus there
    is always a backup available on the blockchain, even though one or both of the
    signatory may have misplaced or lost the original contract. Since they are stored
    in the blockchain ecosystem, the smart contracts are transparent. This eliminates
    the possibility of disputes and controversies upon execution of the contract.
    Moreover, one doesn’t have to necessarily trust all the participants in the transaction,
    as the unbiased, auto-executory nature of smart contracts replaces trust. Consequently,
    there is a greater degree of trust between the participants, even without the
    “trusted” third party providing it.
  prefs: []
  type: TYPE_NORMAL
- en: Since smart contracts are self-executory these can be processed in real time
    once the pre-specified conditions have been met. Smart contracts are run through
    the internet with just pieces of software codes. Therefore, the speed of completing
    transactions through smart contract is almost instantaneous and it can save hours,
    if not days. Unlike traditional manual processing, smart contracts could be executed
    after-hours and on weekends thereby reducing the wait time and increasing efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: Replacing traditional contracts by smart contracts can result in reducing costs.
    Since participants can trust the visible data and technology to ensure accurate
    execution of transaction, there is no need for a third party to validate and verify
    the terms of the agreement. As the lawyers, brokers and agents have no role, their
    commission and fees are eliminated. Additionally, these also reduce subsequent
    litigation or court costs. Since the signatories agree and commit to the conditions
    set in the smart contract, which is objectively and unbiasedly executed, there
    is little room for future disagreements or controversies requiring lengthy and
    costly litigation.
  prefs: []
  type: TYPE_NORMAL
- en: Automated contracts are not only faster and cheaper, but these also avoid the
    inadvertent errors that are inevitable in a manual process. The use of encrypted
    codes also ensures the safety and security of the documents and underlying assets.
    The contracts are essentially tamper-free as these cannot be altered without the
    knowledge or consent of a majority of the participants in the blockchain. Moreover,
    the requirement of the entire chain to be altered to change a single record provides
    assurance that once the transaction has been executed and recorded on the blockchain,
    it will not be subsequently altered or tampered with, making it fraud resistant.
  prefs: []
  type: TYPE_NORMAL
- en: 5.8\. BLOCKCHAIN FACILITATES SMART CONTRACTS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A blockchain-based system allows all participants of the network to be able
    to observe and verify the validity of transactions, thereby eliminating the need
    of a trusted third party. As discussed earlier, blockchain stored data in a distributed
    setting. The stored data of records, transactions, conditions, etc., are available
    publicly in real time. Thus, all the participants in the blockchain ecosystem
    could independently verify that the pre-conditions of a transaction have been
    met and the transaction carried out in accordance to the pre-specified rules.
  prefs: []
  type: TYPE_NORMAL
- en: Though the concept of smart contracts has been around since late twentieth century,
    it took about two decades to implement. The blockchain technology provides the
    necessary infrastructure to execute smart contracts in a reliable and secure fashion.
    Currently, we still live in a world of paper-based contracts, where the involvement
    of a trusted third party is obligatory. In developed societies, the trusted third
    party charges a substantial transaction fee, for being unbiased and “trusted.”
    In other societies, where the transaction fee may be low, the “trusted” third
    party could be susceptible to bribery and change the terms of the contract at
    a later date, leading to costly and time-consuming litigation.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain facilitated the growth and popularity of Bitcoin by enabling direct
    transfer of assets between two or more parties who did not know or trust each
    other. Incorporation of smart contracts broadens the scope of applications and
    transactions that blockchain can support. It now allows for multipart transactions,
    spanning a longer time period, to occur between parties that do not trust each
    other. Each party to the transaction can inspect the code, that is, read the contract,
    prior to deciding whether or not to participate in the transaction. Each party
    will have the certainty of execution of the contract once the obligation is fulfilled
    or pre-conditions are met. Each party can be assured that the counterparty has
    no ability to amend the contract at a later date or has any further control over
    the terms or execution of the contract. Each party will have the subsequent verifiability
    over the process. Once the transaction is executed, the validity and verifiability
    of the transaction is preserved for ever. In other words, it creates a permanent
    audit trail.
  prefs: []
  type: TYPE_NORMAL
- en: 5.9\. LEGAL COMPLEXITIES OF SMART CONTRACTS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Since the term “contracts” is used to describe this technological artifact,
    it is important to discuss that perhaps the use of “contract” is a misnomer, as
    this has very little to do with the legal definition of the term “contract.” To
    reiterate, “smart contracts” are merely coding of simple business logic that can
    be auto-executed and permanent, immutable records of the transaction will be kept.
    The term “contract” has little to do with legal validity of such arrangements.
    In fact, the very characteristics that makes these contracts attractive: decentralization,
    anonymity and automation cause many legal and regulatory issues as discussed in
    this section.'
  prefs: []
  type: TYPE_NORMAL
- en: Typically, a legal contract is between two responsible and known parties who
    are legally permitted to enter into contract in that particular jurisdiction.
    Anonymity or pseudoanonymity is contrary to the notion of legal contracts. In
    public and permission-less blockchain network it may be difficult to ascertain
    who the actors are and where are they located geographically, that is in which
    country’s jurisdiction. Since there is disparity in laws and regulations across
    countries, it is important to know the jurisdiction to ascertain what laws are
    applicable.
  prefs: []
  type: TYPE_NORMAL
- en: Legal jurisdictions differ in their definition of “contractual capability.”
    Contractual capability refers to a party’s ability to enter into a contract. In
    Australia, England, France and the United States, anyone under the age of 18 is
    a minor under law, hence cannot enter into a contract. Furthermore, the contract
    is generally voidable at the minor’s choice. Since the parties in a smart contract
    are often unknown to each other, there is no way to verify the age of the signatory.
    Consequently, it is possible that a party may inadvertently contract with a minor
    cloaked by the anonymity afforded by the technology. This threatens the enforceability
    of the agreement (Giancaspro, 2017).
  prefs: []
  type: TYPE_NORMAL
- en: The legal profession in most jurisdictions is still archaic and has not kept
    pace with technology. It is unsure if computer code, though mathematically valid,
    can be considered credible evidence in legal setting. Even if it is clear that
    the information and records cannot be tampered with, it is still unclear whether
    it can be presented as “evidence” or whether the transactions are “legally binding,”
    in each and every jurisdiction. Additionally, since blockchain by design is decentralized,
    it is unclear in which jurisdiction is the data stored and whether or not it meets
    the “rules of evidence” in the jurisdiction of legal action. Each network node
    may be subject to different legal requirements, and since there is no central
    administration or hub, the nationality of the “hub” may be questionable and the
    basis of legal argument.
  prefs: []
  type: TYPE_NORMAL
- en: For “smart contracts” to gain international traction on large and complex transactions,
    it may require regulators and lawmakers to collaborate across national borders
    to harmonize legal and regulatory regimes. In 2019 the Chairwoman of the United
    States Securities and Exchange Commission (SEC) made an important speech on this
    regard at Singapore. The content of the speech is analyzed in greater detail in
    a latter chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Laws can be effective only if they can be enforced through penalties or sanctions
    against the violators. What is imperative to announcing sanctions is that the
    lawbreakers need to be identified in the first place. The pseudoanonymity provided
    by the technology clearly works contrary to what is expected in law enforcement.
    Additionally, the actual identity of the parties may be kept private based on
    the privacy laws of the jurisdiction where the account (pseudoname) was established.
    Criminals, generally, would leverage on “regulatory arbitrage opportunities” and
    shop for countries and jurisdictions (such as Cayman Islands, Panama, etc.) which
    provide greater protection and preserve anonymity. It should however be noted
    that while there are some platforms that offer anonymity to account holder, the
    two most popular platforms, Bitcoin and Ethereum, do not support anonymity. Governments
    also try to discourage the use of anonymity by imposing anti-money-laundering
    laws.
  prefs: []
  type: TYPE_NORMAL
- en: 5.10\. CONCLUSION
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Smart contract is a young technology with great potential. It enables transactions
    between parties who do not have reasons to trust one other and eliminates the
    need for a trusted third party. Conducting transactions without an intermediary
    potentially saves money for the transacting parties as there is no need for agent
    commission, broker fees or government surcharge.
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts, being automated and self-executed reduces the cognitive costs
    of participants. Once the code is verified and agreed upon, routine transactions
    are undertaken by the computer program, overseen and validated by numerous participants
    of the blockchain, and stored indefinitely and tamper-proof on the block. Thereby,
    smart contract creates an opportunity to make routine transaction and processes
    automated, error-free and objective.
  prefs: []
  type: TYPE_NORMAL
- en: Despite its promise, smart contracts are still prone to “growing pains” and
    potential problems. For starters, since smart contracts rely exclusively on the
    code, its functionality is as good as the code and any problems or bugs in the
    code would have wide ranging ramifications. Bugs in the code could be exploited
    by hackers and scammers. In 2016, there was the DAO hack, wherein funds put into
    a smart account were susceptible to being stolen due to a mistake in the code.[⁶](#fn6)
    There are additional issues that remain to be resolved, such as how would government
    and taxation authorities regulate and tax such contracts. Further, what is a recourse
    if something unforeseen, like a pandemic occurs, how can smart contracts be modified
    or adapted to respond to changing circumstances.
  prefs: []
  type: TYPE_NORMAL
- en: While these problems are ubiquitous, these are magnified in the case of smart
    contracts, due to its novelty. However, since the technology has such promise
    and wide applicability, these issues will be perfected over time. It remains to
    be seen whether and when smart contracts become an integral part of our society
    and business transactions.
  prefs: []
  type: TYPE_NORMAL
- en: NOTES
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](#ifn1) This section is a non-technical summary of academic articles published
    or presented by Nick Szabo in the mid-1990s.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2.](#ifn2) See, for example, *The Economic Institutions of Capitalism* (Williamson
    1985) or Incomplete contracts (Hart 1989).'
  prefs: []
  type: TYPE_NORMAL
- en: '[3.](#ifn3) This section is based on Section II D of Christidis and Devestsikiots
    (2016).'
  prefs: []
  type: TYPE_NORMAL
- en: '[4.](#ifn4) For a detailed discussion see R. G. Brown (2015).'
  prefs: []
  type: TYPE_NORMAL
- en: '[5.](#ifn5) Ujo Music uses blockchain technology to create a transparent and
    decentralised database of rights and right owners, automating royalty payments
    using smart contracts and cryptocurrency. Available at [ujomusic.com](http://ujomusic.com).'
  prefs: []
  type: TYPE_NORMAL
- en: '[6.](#ifn6) For further details on the attack and its cause, see a summary
    at [https://www.coindesk.com/understanding-dao-hack-journalists](https://www.coindesk.com/understanding-dao-hack-journalists).'
  prefs: []
  type: TYPE_NORMAL
