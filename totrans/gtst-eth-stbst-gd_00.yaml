- en: Davi Pedro Bauer
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Ethereum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Step-by-Step Guide to Becoming a Blockchain Developer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../images/521550_1_En_BookFrontmatter_Figa_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: The Apress Logo.
  prefs: []
  type: TYPE_NORMAL
- en: Davi Pedro BauerCampo Bom, Rio Grande do Sul, BrazilISBN 978-1-4842-8044-7e-ISBN
    978-1-4842-8045-4[https://doi.org/10.1007/978-1-4842-8045-4](https://doi.org/10.1007/978-1-4842-8045-4)©
    Davi Pedro Bauer 2022Standard ApressTrademarked names, logos, and images may appear
    in this book. Rather than use a trademark symbol with every occurrence of a trademarked
    name, logo, or image we use the names, logos, and images only in an editorial
    fashion and to the benefit of the trademark owner, with no intention of infringement
    of the trademark. The use in this publication of trade names, trademarks, service
    marks, and similar terms, even if they are not identified as such, is not to be
    taken as an expression of opinion as to whether or not they are subject to proprietary
    rights.The publisher, the authors and the editors are safe to assume that the
    advice and information in this book are believed to be true and accurate at the
    date of publication. Neither the publisher nor the authors or the editors give
    a warranty, express or implied, with respect to the material contained herein
    or for any errors or omissions that may have been made. The publisher remains
    neutral with regard to jurisdictional claims in published maps and institutional
    affiliations.
  prefs: []
  type: TYPE_NORMAL
- en: This Apress imprint is published by the registered company APress Media, LLC,
    part of Springer Nature.
  prefs: []
  type: TYPE_NORMAL
- en: 'The registered company address is: 1 New York Plaza, New York, NY 10004, U.S.A.'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs: []
  type: TYPE_NORMAL
- en: This book is a step-by-step guide for everyone who wants to get started as an
    Ethereum developer. It was designed for those who have never programmed anything
    in the blockchain and want to get started.
  prefs: []
  type: TYPE_NORMAL
- en: I will cover everything from the basic requirements of installation to writing,
    testing, and deploying smart contracts. I will also cover topics such as IPFS,
    Filecoin, ENS, Chainlink, Truffle, Ganache, OpenZeppelin, Pinata, Fleek, Infura,
    MetaMask, and OpenSea, among others.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [1](521550_1_En_1_Chapter.xhtml), I will go through all the necessary
    requirements to start the activities described in this book. It covers software
    and tools such as Docker, Truffle, Ganache, MetaMask, and Infura.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [2](521550_1_En_2_Chapter.xhtml), you will learn how to create a
    basic Solidity project using the VS Code extension and then compile and deploy
    the smart contract to a local blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [3](521550_1_En_3_Chapter.xhtml), you will learn how to code smart
    contracts to create your own coin and deploy it to a local blockchain. Fungible
    tokens are interchangeable, so they are perfect to solve problems such as double
    spending. You will also be able to add this token to your own wallet and send
    it to different wallets, as well as send other coins that you already have.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [4](521550_1_En_4_Chapter.xhtml), you will learn how to create a
    unit test file for a smart contract, as well as write test assertions, run the
    unit tests, and check the unit test results.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [5](521550_1_En_5_Chapter.xhtml), you will be able to create smart
    contracts for badge tokens. You can use badge tokens, also known as NFTs, to represent
    physical things in the virtual world, such as digital collectibles, game items,
    digital art, etc. Each NFT token is unique and can have a unique value. In this
    chapter, you will learn how to code the smart contract with the help of the OpenZeppelin
    library. You will also create the badge and add it to IPFS node. After that, you
    will learn to pin it so it is available for everyone, everywhere. Next, you will
    learn how to migrate the contract to different environments such as a local blockchain
    using Ganache and testnets using Infura. Finally, you will learn how to sell your
    own NFT on OpenSea.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [6](521550_1_En_6_Chapter.xhtml), we will cover different ways to
    fund your wallet using faucets. This part is important because you will need some
    ether in your wallet in order to pay for the transaction. Most of the examples
    will be deployed on testnets so you won’t need real money to execute them.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [7](521550_1_En_7_Chapter.xhtml), you will learn how to create and
    save files on a decentralized file system. I also cover some tools such as a browser
    extension that will help you manage the node, as well as Pinata to help you pin
    your files remotely instead of keeping them locally. In addition, you will be
    able to host your own site on IPFS using Fleek.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [8](521550_1_En_8_Chapter.xhtml), I will cover ways to preserve files
    on a local node. The idea behind Filecoin is the same of IPFS, with the difference
    that Filecoin has an incentive mechanism and incentive nodes to preserve files.
    Filecoin was built on top of IPFS.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [9](521550_1_En_9_Chapter.xhtml), you will learn how to register
    a custom domain on the Ethereum Name System. You can use it to host a site under
    this domain name or even as a domain for your wallet to receive cryptos, tokens,
    or NFTs.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [10](521550_1_En_10_Chapter.xhtml), I will cover use cases where
    you need to pull data from off-chain using oracles. You will learn how to use
    price feeds and then crypto prices inside smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: In Chapter [11](521550_1_En_11_Chapter.xhtml), you will learn how to create
    a simple project to connect to Web3 using the .NET platform and how to retrieve
    data from the blockchain to display wallet balances.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter [12](521550_1_En_12_Chapter.xhtml) concludes the book.
  prefs: []
  type: TYPE_NORMAL
- en: Table of Contents[Chapter 1:​ Getting Started](521550_1_En_1_Chapter.xhtml)1[What
    Is Ethereum?​](521550_1_En_1_Chapter.xhtml#Sec1)1[Installing Visual Studio Code](521550_1_En_1_Chapter.xhtml#Sec2)2[Installing
    Docker](521550_1_En_1_Chapter.xhtml#Sec3)2[Installing the Blockchain Dev Kit Extension
    on VS Code](521550_1_En_1_Chapter.xhtml#Sec4)3[Installing the Extension](521550_1_En_1_Chapter.xhtml#Sec5)3[Installing
    Truffle](521550_1_En_1_Chapter.xhtml#Sec6)4[Installing Truffle](521550_1_En_1_Chapter.xhtml#Sec7)4[Checking
    Truffle Installation](521550_1_En_1_Chapter.xhtml#Sec8)5[Installing the Ganache
    CLI](521550_1_En_1_Chapter.xhtml#Sec9)6[Installing Ganache](521550_1_En_1_Chapter.xhtml#Sec10)6[Starting
    Ganache Locally](521550_1_En_1_Chapter.xhtml#Sec11)6[Installing and Setting Up
    MetaMask Wallet](521550_1_En_1_Chapter.xhtml#Sec12)7[Installing the Wallet](521550_1_En_1_Chapter.xhtml#Sec13)8[Configuring
    the Wallet](521550_1_En_1_Chapter.xhtml#Sec14)8[Accessing Your Wallet](521550_1_En_1_Chapter.xhtml#Sec15)8[Discovering
    Your Wallet Address](521550_1_En_1_Chapter.xhtml#Sec16)8[Create an Account on
    Infura](521550_1_En_1_Chapter.xhtml#Sec17)9[Creating a New Account](521550_1_En_1_Chapter.xhtml#Sec18)9[Setting
    Up Your Infura Project](521550_1_En_1_Chapter.xhtml#Sec19)10[Summary](521550_1_En_1_Chapter.xhtml#Sec20)11[Chapter
    2:​ Solidity](521550_1_En_2_Chapter.xhtml)13[Getting Started with the Solidity
    Project on VS Code](521550_1_En_2_Chapter.xhtml#Sec1)14[Creating a New Project](521550_1_En_2_Chapter.xhtml#Sec2)14[Compiling
    the Project](521550_1_En_2_Chapter.xhtml#Sec3)16[Deploying to a Development Blockchain](521550_1_En_2_Chapter.xhtml#Sec4)16[Summary](521550_1_En_2_Chapter.xhtml#Sec5)16[Chapter
    3:​ ERC-20:​ Fungible Tokens](521550_1_En_3_Chapter.xhtml)17[Write a Simple ERC-20
    Token Using OpenZeppelin](521550_1_En_3_Chapter.xhtml#Sec1)18[Preparing the Environment](521550_1_En_3_Chapter.xhtml#Sec2)19[Writing
    the Contract](521550_1_En_3_Chapter.xhtml#Sec3)19[Setting the Solidity Compiler
    Version](521550_1_En_3_Chapter.xhtml#Sec4)20[Compiling the Contract](521550_1_En_3_Chapter.xhtml#Sec5)20[Verifying
    the Result](521550_1_En_3_Chapter.xhtml#Sec6)21[Deploy the ERC-20 Token to the
    Ganache Development Blockchain](521550_1_En_3_Chapter.xhtml#Sec7)21[Preparing
    the Migration](521550_1_En_3_Chapter.xhtml#Sec8)22[Starting the Blockchain](521550_1_En_3_Chapter.xhtml#Sec9)22[Configuring
    the Blockchain Network](521550_1_En_3_Chapter.xhtml#Sec10)22[Deploying the Contract](521550_1_En_3_Chapter.xhtml#Sec11)23[Adding
    Ganache to MetaMask Networks](521550_1_En_3_Chapter.xhtml#Sec12)24[Adding the
    Token to a Wallet](521550_1_En_3_Chapter.xhtml#Sec13)25[Create an ERC-20 Token
    with a Fixed Supply](521550_1_En_3_Chapter.xhtml#Sec14)26[Creating the Project](521550_1_En_3_Chapter.xhtml#Sec15)26[Writing
    a Fixed Supply Contract](521550_1_En_3_Chapter.xhtml#Sec16)26[Compiling the Contract](521550_1_En_3_Chapter.xhtml#Sec17)28[Starting
    the Ganache Development Blockchain](521550_1_En_3_Chapter.xhtml#Sec18)28[Migrating
    the Contract to Ganache](521550_1_En_3_Chapter.xhtml#Sec19)29[Configuring MetaMask](521550_1_En_3_Chapter.xhtml#Sec20)30[Adding
    the Token to MetaMask](521550_1_En_3_Chapter.xhtml#Sec21)31[Transferring Tokens
    Between Accounts](521550_1_En_3_Chapter.xhtml#Sec22)33[Deploy the ERC-20 Token
    to a Testnet Using Infura](521550_1_En_3_Chapter.xhtml#Sec23)33[Installing the
    Prerequisites](521550_1_En_3_Chapter.xhtml#Sec24)33[Setting Up Your Infura Project](521550_1_En_3_Chapter.xhtml#Sec25)34[Setting
    Up Your Smart Contract](521550_1_En_3_Chapter.xhtml#Sec26)34[Configuring the Private
    Key](521550_1_En_3_Chapter.xhtml#Sec27)34[Deploying the Smart Contract](521550_1_En_3_Chapter.xhtml#Sec28)36[Checking
    Your Wallet Balance](521550_1_En_3_Chapter.xhtml#Sec29)36[Verifying the Smart
    Contract on Etherscan](521550_1_En_3_Chapter.xhtml#Sec30)36[Deploy the ERC-20
    Token to the Polygon Testnet (Layer 2)](521550_1_En_3_Chapter.xhtml#Sec31)37[Installing
    the Prerequisites](521550_1_En_3_Chapter.xhtml#Sec32)37[Adding Polygon Mumbai
    to MetaMask Networks](521550_1_En_3_Chapter.xhtml#Sec33)38[Activating the Polygon
    Add-on on Infura](521550_1_En_3_Chapter.xhtml#Sec34)39[Setting Up Your Infura
    Project](521550_1_En_3_Chapter.xhtml#Sec35)40[Setting Up Your Smart Contract](521550_1_En_3_Chapter.xhtml#Sec36)41[Configuring
    the Network (Using the Matic Endpoint)](521550_1_En_3_Chapter.xhtml#Sec37)41[Configuring
    the Network (Using the Infura Endpoint)](521550_1_En_3_Chapter.xhtml#Sec38)42[Configuring
    the Private Key](521550_1_En_3_Chapter.xhtml#Sec39)42[Deploying the Smart Contract](521550_1_En_3_Chapter.xhtml#Sec40)43[Checking
    Your Wallet Balance](521550_1_En_3_Chapter.xhtml#Sec41)44[Verifying the Smart
    Contract on PolygonScan](521550_1_En_3_Chapter.xhtml#Sec42)44[Deploy the ERC-20
    Token to the Polygon Mainnet (Layer 2)](521550_1_En_3_Chapter.xhtml#Sec43)45[Adding
    the Polygon Mainnet to MetaMask Networks](521550_1_En_3_Chapter.xhtml#Sec44)45[Configuring
    the Network (Using the Infura Endpoint)](521550_1_En_3_Chapter.xhtml#Sec45)46[Deploying
    the Smart Contract](521550_1_En_3_Chapter.xhtml#Sec46)47[Checking Your Wallet
    Balance](521550_1_En_3_Chapter.xhtml#Sec47)47[Verifying the Smart Contract on
    PolygonScan](521550_1_En_3_Chapter.xhtml#Sec48)47[Summary](521550_1_En_3_Chapter.xhtml#Sec49)48[Chapter
    4:​ Unit Tests for Smart Contracts](521550_1_En_4_Chapter.xhtml)49[Writing Unit
    Tests for ERC-20 Smart Contracts](521550_1_En_4_Chapter.xhtml#Sec1)50[Creating
    a New Unit Test File](521550_1_En_4_Chapter.xhtml#Sec2)50[Writing a Test for the
    Total Supply Contract](521550_1_En_4_Chapter.xhtml#Sec3)50[Writing Test Assertions
    for the Balance Contract](521550_1_En_4_Chapter.xhtml#Sec4)51[Running the Unit
    Tests](521550_1_En_4_Chapter.xhtml#Sec5)51[Checking the Unit Test Results](521550_1_En_4_Chapter.xhtml#Sec6)52[Summary](521550_1_En_4_Chapter.xhtml#Sec7)53[Chapter
    5:​ ERC-721 Nonfungible Tokens](521550_1_En_5_Chapter.xhtml)55[Create Your Art
    NFT Using Ganache and OpenZeppelin](521550_1_En_5_Chapter.xhtml#Sec1)56[Creating
    the Project](521550_1_En_5_Chapter.xhtml#Sec2)56[Configuring the Wallet to Sign
    Transactions](521550_1_En_5_Chapter.xhtml#Sec3)58[Configuring the Network](521550_1_En_5_Chapter.xhtml#Sec4)58[Configuring
    the Solidity Compiler](521550_1_En_5_Chapter.xhtml#Sec5)59[Configuring the Private
    Key](521550_1_En_5_Chapter.xhtml#Sec6)59[Creating the Badge Image](521550_1_En_5_Chapter.xhtml#Sec7)60[Adding
    the Badge to Your Local IPFS](521550_1_En_5_Chapter.xhtml#Sec8)61[Pinning the
    Badge to a Remote IPFS Node](521550_1_En_5_Chapter.xhtml#Sec9)61[Creating the
    Badge Metadata](521550_1_En_5_Chapter.xhtml#Sec10)62[Compiling the Smart Contract](521550_1_En_5_Chapter.xhtml#Sec11)62[Migrating
    the Smart Contract](521550_1_En_5_Chapter.xhtml#Sec12)63[Instantiate the Smart
    Contract](521550_1_En_5_Chapter.xhtml#Sec13)63[Awarding a Badge to a Wallet](521550_1_En_5_Chapter.xhtml#Sec14)63[Checking
    a Badge on Etherscan](521550_1_En_5_Chapter.xhtml#Sec15)63[Adding the NFT Token
    to Your Wallet](521550_1_En_5_Chapter.xhtml#Sec16)65[Sell Your Art NFT on OpenSea](521550_1_En_5_Chapter.xhtml#Sec17)69[Connecting
    to OpenSea](521550_1_En_5_Chapter.xhtml#Sec18)69[Viewing Your Badge](521550_1_En_5_Chapter.xhtml#Sec19)69[Listing
    Your Badge for Sale](521550_1_En_5_Chapter.xhtml#Sec20)69[Exploring Listing Details](521550_1_En_5_Chapter.xhtml#Sec21)73[Summary](521550_1_En_5_Chapter.xhtml#Sec22)74[Chapter
    6:​ Faucets](521550_1_En_6_Chapter.xhtml)75[Getting Test Ether from the Faucet
    on the Ropsten Network](521550_1_En_6_Chapter.xhtml#Sec1)75[Accessing the Faucet](521550_1_En_6_Chapter.xhtml#Sec2)76[Waiting
    for the Transaction](521550_1_En_6_Chapter.xhtml#Sec3)76[Getting Test Ether from
    the Faucet on the Rinkeby Testnet](521550_1_En_6_Chapter.xhtml#Sec4)77[Preparing
    for Funding](521550_1_En_6_Chapter.xhtml#Sec5)77[Funding Your Wallet](521550_1_En_6_Chapter.xhtml#Sec6)77[Checking
    Your Wallet](521550_1_En_6_Chapter.xhtml#Sec7)78[Getting Test MATIC from the Faucet
    on the Mumbai Testnet](521550_1_En_6_Chapter.xhtml#Sec8)78[Preparing for Funding](521550_1_En_6_Chapter.xhtml#Sec9)78[Funding
    Your Wallet](521550_1_En_6_Chapter.xhtml#Sec10)79[Checking Your Wallet](521550_1_En_6_Chapter.xhtml#Sec11)79[Getting
    the Test MATIC from the Faucet on the Mainnet](521550_1_En_6_Chapter.xhtml#Sec12)80[Preparing
    for Funding](521550_1_En_6_Chapter.xhtml#Sec13)80[Funding Your Wallet](521550_1_En_6_Chapter.xhtml#Sec14)80[Checking
    Your Wallet](521550_1_En_6_Chapter.xhtml#Sec15)81[Summary](521550_1_En_6_Chapter.xhtml#Sec16)81[Chapter
    7:​ InterPlanetary File System](521550_1_En_7_Chapter.xhtml)83[Create Your IPFS
    Node](521550_1_En_7_Chapter.xhtml#Sec1)84[Installing the Node](521550_1_En_7_Chapter.xhtml#Sec2)84[Configuring
    the Node](521550_1_En_7_Chapter.xhtml#Sec3)85[Testing the Node](521550_1_En_7_Chapter.xhtml#Sec4)85[Exploring
    Your IPFS Node](521550_1_En_7_Chapter.xhtml#Sec5)86[Add Files to the IPFS](521550_1_En_7_Chapter.xhtml#Sec6)87[Adding
    the File](521550_1_En_7_Chapter.xhtml#Sec7)87[Viewing the File Content on the
    Console](521550_1_En_7_Chapter.xhtml#Sec8)88[Checking the File in the Web UI](521550_1_En_7_Chapter.xhtml#Sec9)88[Viewing
    the File Content in a Browser](521550_1_En_7_Chapter.xhtml#Sec10)88[Set Up the
    IPFS Browser Extension](521550_1_En_7_Chapter.xhtml#Sec11)89[Installing the Browser
    Extension](521550_1_En_7_Chapter.xhtml#Sec12)89[Configuring the Node Type](521550_1_En_7_Chapter.xhtml#Sec13)89[Starting
    an External Node](521550_1_En_7_Chapter.xhtml#Sec14)89[Importing a File](521550_1_En_7_Chapter.xhtml#Sec15)90[Pin
    and Unpin IPFS Files on the Local Node](521550_1_En_7_Chapter.xhtml#Sec16)90[Starting
    Your Local Node](521550_1_En_7_Chapter.xhtml#Sec17)90[Adding a File to Your Node](521550_1_En_7_Chapter.xhtml#Sec18)90[Checking
    the File Was Added](521550_1_En_7_Chapter.xhtml#Sec19)91[Verifying Your File Was
    Pinned](521550_1_En_7_Chapter.xhtml#Sec20)91[Unpinning Your File](521550_1_En_7_Chapter.xhtml#Sec21)91[Pinning
    Your File Manually](521550_1_En_7_Chapter.xhtml#Sec22)91[Pin and Unpin Files on
    a Remote Node Using Pinata](521550_1_En_7_Chapter.xhtml#Sec23)92[Setting Up API
    Keys on Pinata](521550_1_En_7_Chapter.xhtml#Sec24)92[Setting Up Pinata as a Remote
    Service on Your Terminal](521550_1_En_7_Chapter.xhtml#Sec25)92[Adding a New File
    to Your Local IPFS Node](521550_1_En_7_Chapter.xhtml#Sec26)93[Pinning Your File
    to the Remote IPFS Node](521550_1_En_7_Chapter.xhtml#Sec27)93[Unpinning Your File
    from the Remote IPFS Node](521550_1_En_7_Chapter.xhtml#Sec28)93[Host Your Site
    on IPFS Using Fleek](521550_1_En_7_Chapter.xhtml#Sec29)94[Logging In on Fleek](521550_1_En_7_Chapter.xhtml#Sec30)94[Cloning
    Your Existing Repository](521550_1_En_7_Chapter.xhtml#Sec31)94[Installing Fleek](521550_1_En_7_Chapter.xhtml#Sec32)94[Initializing
    Fleek](521550_1_En_7_Chapter.xhtml#Sec33)94[Deploying Your Site](521550_1_En_7_Chapter.xhtml#Sec34)95[Summary](521550_1_En_7_Chapter.xhtml#Sec35)96[Chapter
    8:​ Filecoin](521550_1_En_8_Chapter.xhtml)97[How to Preserve Files on the Filecoin
    Local Node](521550_1_En_8_Chapter.xhtml#Sec1)98[Creating the Project](521550_1_En_8_Chapter.xhtml#Sec2)98[Configuring
    Truffle](521550_1_En_8_Chapter.xhtml#Sec3)98[Adding an Image to Be Preserved](521550_1_En_8_Chapter.xhtml#Sec4)99[Installing
    Dependencies](521550_1_En_8_Chapter.xhtml#Sec5)99[Starting Local Endpoints](521550_1_En_8_Chapter.xhtml#Sec6)100[Preserving
    Files to Filecoin](521550_1_En_8_Chapter.xhtml#Sec7)100[Summary](521550_1_En_8_Chapter.xhtml#Sec8)101[Chapter
    9:​ Ethereum Name Service](521550_1_En_9_Chapter.xhtml)103[Register Your ENS to
    Receive Crypto, Tokens, or NFTs in Your Wallet](521550_1_En_9_Chapter.xhtml#Sec1)103[Searching
    for Your Domain Name](521550_1_En_9_Chapter.xhtml#Sec2)104[Registering Your Name](521550_1_En_9_Chapter.xhtml#Sec3)104[Managing
    Your Registration Name](521550_1_En_9_Chapter.xhtml#Sec4)104[Checking the Name
    Resolution](521550_1_En_9_Chapter.xhtml#Sec5)105[Summary](521550_1_En_9_Chapter.xhtml#Sec6)106[Chapter
    10:​ Chainlink](521550_1_En_10_Chapter.xhtml)107[Get Crypto Prices Inside Smart
    Contracts Using Chainlink Oracles](521550_1_En_10_Chapter.xhtml#Sec1)108[Creating
    the Project](521550_1_En_10_Chapter.xhtml#Sec2)108[Creating the Smart Contract](521550_1_En_10_Chapter.xhtml#Sec3)108[Creating
    the Migration](521550_1_En_10_Chapter.xhtml#Sec4)111[Setting Up Your Infura Project](521550_1_En_10_Chapter.xhtml#Sec5)112[Configuring
    the Wallet to Sign Transactions](521550_1_En_10_Chapter.xhtml#Sec6)113[Configuring
    the Network](521550_1_En_10_Chapter.xhtml#Sec7)114[Configuring the Solidity Compiler](521550_1_En_10_Chapter.xhtml#Sec8)115[Configuring
    the Private Key](521550_1_En_10_Chapter.xhtml#Sec9)115[Compiling the Smart Contract](521550_1_En_10_Chapter.xhtml#Sec10)116[Deploying
    the Smart Contract](521550_1_En_10_Chapter.xhtml#Sec11)116[Getting the Price Information
    from the Smart Contract](521550_1_En_10_Chapter.xhtml#Sec12)117[Summary](521550_1_En_10_Chapter.xhtml#Sec13)118[Chapter
    11:​ Nethereum](521550_1_En_11_Chapter.xhtml)119[Getting Your Ether Balance Using
    Nethereum](521550_1_En_11_Chapter.xhtml#Sec1)119[Creating the Project](521550_1_En_11_Chapter.xhtml#Sec2)120[Installing
    Web3](521550_1_En_11_Chapter.xhtml#Sec3)120[Creating the Method](521550_1_En_11_Chapter.xhtml#Sec4)120[Getting
    the Balance](521550_1_En_11_Chapter.xhtml#Sec5)122[Summary](521550_1_En_11_Chapter.xhtml#Sec6)123[Chapter
    12:​ Conclusion](521550_1_En_12_Chapter.xhtml)125[Index](521550_1_En_BookBackmatter_OnlinePDF.xhtml#Ind1)127About
    the AuthorDavi Pedro Bauer![](../images/521550_1_En_BookFrontmatter_Figb_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A photo of Davi Pedro Bauer.
  prefs: []
  type: TYPE_NORMAL
- en: has more than 20 years of experience in the IT sector with experience in analysis
    and systems development. He has been working with agile methods since 2009, where
    he participated in agile adoption programs in multidisciplinary teams, supporting
    the implementation of processes and practices such as Scrum and Kanban, as well
    as the launch of new digital products for web and mobile platforms. Since 2016,
    he has been studying topics related to blockchain, such as cryptocurrencies, asset
    tokenization, smart contracts, and decentralized applications (DApps), and since
    2019, he has been working with DevSecOps from code to infrastructure.About the
    Technical ReviewerPrasanth Sahoo![](../images/521550_1_En_BookFrontmatter_Figc_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A photo of Prasanth Sahoo.
  prefs: []
  type: TYPE_NORMAL
- en: is a thought leader, an adjunct professor, a technical speaker, and a full-time
    practitioner in blockchain, DevOps, cloud, and agile working for PDI Software.
    He was awarded the “Blockchain and Cloud Expert of the Year Award 2019” from TCS
    Global Community for his knowledge sharing within academic services to the community.
    He is passionate about driving digital technology initiatives through coaching,
    mentoring, and grooming. Prasanth has a patent under his name, and to date, he
    has interacted with more than 50,000 professionals, mostly within the technical
    domain. He is a working group member in the Blockchain Council, CryptoCurrency
    Certification Consortium, Scrum Alliance, Scrum Organization, and International
    Institute of Business Analysis.
  prefs: []
  type: TYPE_NORMAL
