- en: © Springer Nature Switzerland AG 2020A. M. LangerAnalysis and Design of Next-Generation
    Software Architectures[https://doi.org/10.1007/978-3-030-36899-9_7](https://doi.org/10.1007/978-3-030-36899-9_7)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © Springer Nature Switzerland AG 2020A. M. Langer下一代软件架构的分析与设计[https://doi.org/10.1007/978-3-030-36899-9_7](https://doi.org/10.1007/978-3-030-36899-9_7)
- en: 7. Blockchain Analysis and Design
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7. 区块链分析与设计
- en: 'Arthur M. Langer^([1](#Aff2) [ ](#ContactOfAuthor2))(1)Center for Technology
    Management, Columbia University, New York, NY, USAArthur M. LangerEmail: [al261@columbia.edu](mailto:al261@columbia.edu)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'Arthur M. Langer^([1](#Aff2) [ ](#ContactOfAuthor2))(1)哥伦比亚大学技术管理中心，纽约，美国Arthur M. LangerEmail:
    [al261@columbia.edu](mailto:al261@columbia.edu)'
- en: 7.1 Understanding Blockchain Architecture
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7.1 理解区块链架构
- en: Blockchain technology represents an interesting architectural invention that
    will primarily addresses the challenges of cyber security in the internet. As
    I previous discussed, the existing central database architectures cannot provide
    the security necessary to launch IoT systems. Blockchain is defined as a “ledger-based”
    system, in that it is designed to track all transactions and update all members
    of the chain. In actuality, the block chain design evolved from what started as
    a linked list data structure. Essentially, a linked-list originally was designed
    as a data structure that linked to another data element by storing information
    about where a value was stored was stored in memory. It is a pointer system, that
    shows prior (previous) links and forward links as shown in Fig. [7.1](#Fig1).![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig1_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig1_HTML.png)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术代表了一种有趣的架构发明，主要解决了互联网中的网络安全挑战。正如我之前所讨论的，现有的中央数据库架构无法提供启动物联网系统所需的安全性。区块链被定义为“基于账本”的系统，因为它旨在跟踪所有交易并更新链中的所有成员。实际上，区块链设计是从最初的链表数据结构发展而来的。本质上，链表最初被设计为一种数据结构，通过存储关于值存储位置的信息，链接到另一个数据元素。这是一个指针系统，显示了先前的链接和向前的链接，如图 [7.1](#Fig1) 所示。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig1_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig1_HTML.png)
- en: Fig. 7.1
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1
- en: Linked list data structure
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 链表数据结构
- en: The problem addressed by linked list data structures was its ability to store
    related data or values without requiring the physical storage to be sequential.
    In other words, by having these “links” related file elements could actually be
    stored in different parts of storage and on different physical devices as shown
    in Fig. [7.2](#Fig2).![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig2_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig2_HTML.png)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 链表数据结构解决的问题是其能够在不要求物理存储连续的情况下存储相关数据或值。换句话说，通过这些“链接”，相关文件元素实际上可以存储在存储的不同部分和不同的物理设备上，如图 [7.2](#Fig2) 所示。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig2_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig2_HTML.png)
- en: Fig. 7.2
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2
- en: Linked list storage across physical storage devices
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 跨物理存储设备的链表存储
- en: The importance of the linked list data structure is that it allowed a logical
    file of information to be stored physically in different locations. But to the
    user it was invisible and allowed the system to maximize the data storage. However,
    common with any data structure strategy, there is always a downside. The allocation
    of a logical file across multiple physical devices diminishes performance. With
    large logical files that are distributed across many devices or even fragmented
    on the same disk will have significant reductions in performance.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 链表数据结构的重要性在于它允许将逻辑文件存储在不同的物理位置。但对于用户来说，它是不可见的，并允许系统最大化数据存储。然而，与任何数据结构策略一样，总会有不利因素。将逻辑文件分布在多个物理设备上会降低性能。对于分布在许多设备上的大型逻辑文件，甚至是在同一磁盘上分片的情况，性能会显著降低。
- en: Blockchain evolved the linked list model for similar yet different objectives.
    The linked data structures shown in Fig. [7.1](#Fig1) are now more complex and
    defined as “blocks” of information. The architecture allows for new blocks to
    be added dynamically and simultaneously updates each block when changes are made.
    A block, rather than representing a data element actually represents an account
    or user. So, each individual has their own block in the chain. Depending on the
    design of the blockchain (or the blockchain product) users may have equal or unequal
    rights on how they access and update the other blocks in the chain. All blocks
    contain information like the date, time, and amount of a transaction. In effect,
    the blockchain architecture acts as a modified linked list designed to keep track
    of transactions as opposed to link data elements. For this reason, this blockchain
    is a perfect solution for house-keeping and is often referred to as a ledger-based
    technology.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链改进了类似但目标不同的链表模型。图 [7.1](#Fig1) 中显示的链式数据结构现在更加复杂，并被定义为信息的“块”。该架构允许动态添加新块，并在进行更改时同时更新每个块。一个块，而不是代表一个数据元素，实际上代表一个账户或用户。因此，每个人在链中都有自己的块。根据区块链的设计（或区块链产品），用户可以具有相等或不相等的权利，以决定他们如何访问和更新链中的其他块。所有块都包含诸如交易日期、时间和金额之类的信息。实际上，区块链架构充当了一个修改过的链表，用于跟踪交易而不是链接数据元素。因此，这种区块链是保持账目的完美解决方案，并经常被称为基于账本的技术。
- en: The word ledger really emanated from the accounting profession, where ledgers
    were created to keep track of detailed transactions often known as debits and
    credits. At any given time, the accountant need only add and subtract all the
    transaction amount entries to calculate the balance of any ledger account. The
    important feature of a ledger; however, is its audit-trail feature that ensures
    knowledge of every transaction that makes up the balance. It acts like a running
    total at all times. What is also essential to a ledger is its ability to recalculate
    the balance each time so that a given balance can be tested for accuracy. Furthermore,
    the source date of every transaction in a ledger is documented. In blockchain,
    the ledger is the account; every account has a unique ledger in the chain. Another
    important factor in any ledger is the modification of any transaction is not allowed.
    For example, when you need to adjust an accounting entry, you don’t directly modify
    the original transaction or entry, rather one enters an “adjusting” entry that
    modifies the balance. Thus, in a ledger you can only create a transaction or read
    it, but you cannot modify or delete! Blockchain follows this rule and this is
    why it provides two significant benefits, (1) complete audit trail of all behavior
    in the block, and (2) you cannot reverse or modify a transaction which really
    restricts hackers. So, every blockchain entry is documented and a block stores
    the associated authorization and date/time of each transaction.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: “分类帐”这个词真正源自会计专业，会计师创建分类帐来跟踪详细的交易，通常称为借方和贷方。在任何给定时刻，会计师只需添加和减去所有交易金额条目，即可计算任何分类帐账户的余额。然而，分类帐的重要特性是其审计跟踪功能，确保了构成余额的每笔交易的知识。它始终像一个流动总数一样运作。分类帐的另一个重要特性是，每次都能重新计算余额，以便测试给定余额的准确性。此外，分类帐中每笔交易的源日期都有记录。在区块链中，分类帐就是账户；每个账户在链中都有一个唯一的分类帐。在任何分类帐中的另一个重要因素是不允许修改任何交易。例如，当您需要调整会计分录时，您不会直接修改原始交易或分录，而是输入一个“调整”分录来修改余额。因此，在分类帐中，您只能创建交易或读取它，但不能修改或删除！区块链遵循这个规则，这就是为什么它提供了两个重要的好处，(1)
    对块中所有行为的完整审计跟踪，以及(2) 不能撤销或修改交易，这真的限制了黑客。因此，每个区块链条目都有文档记录，并且每个交易的关联授权和日期/时间都存储在一个块中。
- en: In the blockchain, a user ledger is identified through a “hash” code key. The
    hash code is a random-based calculated number that is extremely difficult to decipher,
    so it adds a strong security to the chain. Each member of the blockchain has access
    to all the blocks and keeps a separate copy of the blockchain on their resident
    network system. This means that when a block is updated or a new block is added,
    each copy must be updated, which of course brings back the challenge of latency
    in performance. However, because there is no central controlling copy of the blockchain,
    it makes it challenging for a hacker to manipulate every copy. This is where blockchain
    adds hope to establish an internet architecture that can protect users.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，用户分类帐通过“哈希”代码键进行标识。哈希代码是一个随机计算的数字，极其难以解密，因此它为链添加了强大的安全性。区块链的每个成员都可以访问所有区块，并在其本地网络系统上保留区块链的单独副本。这意味着当一个区块被更新或一个新区块被添加时，必须更新每个副本，这当然带来了性能上的延迟挑战。然而，由于没有中央控制的区块链副本，这使得黑客很难操纵每个副本。这就是区块链为建立一个能够保护用户的互联网架构提供希望的地方。
- en: 'The blockchain protocol is built on the concept of “consensus.” Due to latency
    issues, the consensus protocol will always assume that the longest chain in a
    blockchain version represents the one that users trust most. So, in complex and
    large blockchain’s where updating is constantly occurring, the longest typically
    is the one that is most current at any instance. Of course, the importance of
    consensus is directly related to the size and the amounts of new blocks coming
    into the chain. Blockchains are also both private and public. From a public perspective
    anyone can view the contents of the blockchain but cannot access accounts without
    a private key which allows a user to transfer an item to the block. Another important
    factor to note is that the blockchain infrastructure provides trust (better known
    as access to the block) but not trust between blocks or users directly as this
    maximizes the security benefit of blockchain. There are various types of trust
    which means, how do I know you are the real authorized person accessing the block.
    There are six common proofs that are implemented in any blockchain product:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链协议建立在“共识”的概念上。由于延迟问题，共识协议始终假定区块链版本中最长的链代表了用户最信任的链。因此，在复杂和大型的区块链中，更新不断发生，通常最长的链在任何时刻都是最新的。当然，共识的重要性与链中新区块的大小和数量直接相关。区块链既是私有的又是公开的。从公众的角度来看，任何人都可以查看区块链的内容，但不能在没有私钥的情况下访问帐户，私钥允许用户向区块中转移物品。还有一个重要的因素需要注意，即区块链基础设施提供了信任（更好地称为对区块的访问），但不提供区块或用户之间的直接信任，因为这最大化了区块链的安全性。有各种类型的信任，这意味着，我怎么知道你是访问区块的真实授权人。在任何区块链产品中实施的六种常见证明如下：
- en: '1.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: '*Proof of Work*: avoids a hacker because the network machines are required
    to prove which involves complex algorithms not available to hackers. Further,
    the network machines must have specific configurations and space to be able to
    complete the algorithm. Proof of Work tends to be the most attractive to developers.'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*工作证明*：避免了黑客入侵，因为网络机器需要证明其所需的复杂算法对黑客不可用。此外，网络机器必须具有特定的配置和空间才能完成算法。工作证明往往对开发者最具吸引力。'
- en: '2.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: '*Proof of Stake*: requires the user to prove ownership of a specific amount
    of money. This approach is more common in Bitcoin blockchain given the trading
    of cryptocurrency. Simply put the owner must prove they have the money they are
    attempting to trade.'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*权益证明*：要求用户证明拥有特定金额的货币所有权。在比特币区块链中，这种方法更常见，因为加密货币的交易。简而言之，所有者必须证明他们拥有他们试图交易的货币。'
- en: '3.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: '*Proof of Hold*: the user has more rights based on the amount of time of possession
    of the coin.'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*持有证明*：用户根据持有硬币的时间更多的权利。'
- en: '4.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: '*Delegated Proof of Stake (DPOS)*: this allows users known as delegates who
    want to produce new blocks on the network. Delegates are allocated blocks based
    on the highest number of votes they receive from other delegates. DPOS is relevant
    when access to the blockchain is valued by having multiple blocks or accounts.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*委托权益证明 (DPOS)*：这允许被称为代表的用户在网络上生成新的区块。代表根据他们从其他代表那里获得的最高选票数量被分配区块。当通过拥有多个区块或帐户来评估对区块链的访问时，DPOS
    是相关的。'
- en: '5.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: '*Proof of Capacity*: this is an algorithm that requires users to solve challenges
    in the form of a puzzle. The more storage the requestor has allows them to solve
    the puzzle quicker. The puzzle is created by the service provider.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '6.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Proof of Elapsed Time*: users are randomly assigned a wait time. Those that
    have shorter wait times get access first.'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As one can see these proofs for access are very effective on keeping out hackers
    as opposed to whether who have rights as a user. This is why blockchain is so
    attractive as a solution particularly for IoT applications.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Forecasted Growth of Blockchain
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The growth of blockchain technology is predicted to grow enormously. Deloitte
    in 2019 recently surveyed 1,000 companies in seven countries and found that 34%
    already had blockchain in production with another 40% planning to invest 5 million
    in the year 2020! Much of this explosion of interest can be attributed to three
    factors:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The launch of Bitcoin in 2009 was the first successful blockchain implementation;
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The coming of 5G that addresses the latency criticisms of blockchain architecture;
    and
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The need for a cyber security infrastructure that allows IoT to be protected.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: There are certainly particular industries that are earlier adopters of blockchain,
    specifically banks, healthcare, property record keeping, smart contracts, and
    voting to name just a few.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 7.2.1 Advantages and Disadvantages of Blockchain
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Although blockchain represents a decentralized solution that favors IoT devices,
    there are specific advantages and disadvantages to consider:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'Positives:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Accuracy in verification
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elimination of 3rd party verifiers lowering cost
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security via decentralization
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transparency
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IoT and 5G capabilities
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scalability
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditability and traceability
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better access to data
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Negatives:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Increased costs for technology
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Latency and performance issues still exist
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attraction to hackers
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Short history of results
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As one can see above will there are disadvantages, there appears to be more
    positives and hope that blockchain can evolve into the next generation of a new
    architectural design.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 7.3 Analysis and Design of Blockchain
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many of the blockchain decisions have been focused in two areas; (1) the requirements
    analysis to determine the feasibility of a blockchain implementation, and (2)
    the architectural infrastructure decisions on the rules and governance of the
    blockchain itself. While I will provide various examples of these two issues,
    the important objective of this section is to define what responsibilities an
    analyst has in this process as it relates to the SDLC.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Overall, when assessing blockchain use cases are the preferred method for setting
    up and selecting the right blockchain design. Use cases for blockchain must first
    focus on specific features and functions that are common to an industry. Along
    with that specific industry comes possible processing regulations as well as technical
    requirements including such things like smart contracts, cryptocurrencies and
    legal constraints. All of these must be part of the analysis function. Further,
    data requirements and speed of response times are critical technical issues that
    drive the feasibility of a blockchain solution and its selection. So, it’s not
    just feasibility, it’s the overall construct of the blockchain itself, although
    in the financial industry one can see why block chain, while attractive, is of
    concern when it comes to the latency issue of performance capacity and scalability.
    In addition, the analyst must address the size of transactions and the storage
    needs within a block in the chain. Table [7.1](#Tab1) provides a list of the generic
    types of things that analysts should be prepared to capture and document.Table 7.1
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，在评估区块链用例时，首选的方法是设置和选择正确的区块链设计。区块链的用例必须首先关注特定行业共有的特定功能和功能。随着特定行业的出现，可能还有处理法规以及技术要求，包括智能合约、加密货币和法律限制等。所有这些都必须成为分析功能的一部分。此外，数据需求和响应时间的速度是决定区块链解决方案及其选择的关键技术问题。因此，这不仅仅是可行性问题，而是区块链本身的整体结构，尽管在金融行业中，人们可以理解为何区块链虽然吸引人，但在涉及性能容量和可伸缩性的延迟问题时仍然受到关注。此外，分析师还必须解决交易的大小以及链中的存储需求。表[7.1](#Tab1)提供了分析师应准备捕获和记录的通用类型列表。表
    7.1
- en: Generic blockchain business process requirement definitions
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通用区块链业务流程需求定义
- en: '| Generic requirement | Description |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 通用需求 | 描述 |'
- en: '| --- | --- |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Data storage | In block/out of block |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 数据存储 | 在块内/在块外 |'
- en: '| Mode location | Where are spokes in the network mobile, IoT etc. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 模式位置 | 网络中的轮辐位置 移动、物联网等 |'
- en: '| Network bandwidth | G power (5G, 4G etc.) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 网络带宽 | G 功率（5G、4G 等） |'
- en: '| Type of blockchain | Public, private, hybrid, consortium |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 区块链类型 | 公共、私有、混合、联盟 |'
- en: '| Industry |   |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 行业 |   |'
- en: '| Customer experience factors | User friendliness, robustness, accessibility
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 客户体验因素 | 用户友好性、健壮性、可访问性 |'
- en: '| Overall goal of the system | Paragraph of objectives |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 系统的总体目标 | 目标段落 |'
- en: '| Actors | Human and machine to machine |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 演员 | 人类和机器对机器 |'
- en: '| Authority level | Trusted, decentralized |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 权威级别 | 可信、去中心化 |'
- en: '| External system interlaces | Other networks |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 外部系统接口 | 其他网络 |'
- en: '| Data structures | External interfaces |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 数据结构 | 外部接口 |'
- en: '| Internal functions | Modifiers |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 内部功能 | 修饰符 |'
- en: '| Tests | Security assessment |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 测试 | 安全评估 |'
- en: '| External subsystem | User stories, inserting new blocks, acceptance tests
    of the system, user interface |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 外部子系统 | 用户故事、插入新区块、系统的验收测试、用户界面 |'
- en: '| Precondition | Requirements to become an actor |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 前置条件 | 成为演员的要求 |'
- en: Essentially blockchain in analysis and design resembles the licensing of a transaction
    processor. It’s almost like selecting a type of engine for a car. Engines have
    varying capabilities and limitations depending on the type of car you wish to
    own and how you want to drive the car. Things like gas mileage, pickup, durability,
    dependability, and the way the engine shifts, etc. In order to install the blockchain
    engine you must also understand the best way to install the product. Installation
    again would need to reflect industry requirements, performance preferences and
    regulatory limitations. The settings needed are part of the selection considerations
    for the ultimate blockchain vendor and product you choose to license. Each vendor,
    as with all third-party vendors have advantages and disadvantages in the product
    they license. Of course, each vendor believes they offer the best product, but
    there are also blockchains that might be better for a particular industry like
    Bitcoin in the financial markets.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从分析和设计的角度来看，区块链本质上类似于交易处理器的许可。这几乎就像为汽车选择一种引擎。引擎的能力和限制因你希望拥有的车型以及你想如何驾驶汽车而异。诸如油耗、加速性、耐用性、可靠性以及引擎的换档方式等因素。为了安装区块链引擎，您还必须了解安装产品的最佳方式。安装还需要反映行业要求、性能偏好和监管限制。所需的设置是选择最终区块链供应商和产品的考虑因素之一。与所有第三方供应商一样，每个供应商都有产品的优缺点。当然，每个供应商都认为他们提供的是最好的产品，但也有一些区块链可能更适合特定行业，比如金融市场上的比特币。
- en: There exist hundreds of industry and technology use cases prototypes for that
    can assist analysts to install and set up the blockchain once the product has
    been selected. It might even be part of driving the decision; let’s say the vendor
    did not support a feature that is required buy your industry. An example of a
    roadmap for design is Yrjola’s ([2019](#CR3)) use case for a citizens Broadband
    Radio Service Spectrum. His model also provides a flow diagram of interfaces,
    a life cycle flow of a transaction, and a decision diagram for setting up the
    blockchain as shown in Fig. [7.3](#Fig3).![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig3_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig3_HTML.png)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了产品，就会存在数百个行业和技术用例原型，可以帮助分析人员安装和设置区块链。一旦选择了产品，这甚至可能是决策的一部分；假设供应商不支持您行业所需的某项功能。设计的一个示例是Yrjola（[2019](#CR3)）为公民宽带无线电服务频谱提供的用例。他的模型还提供了接口的流程图、交易的生命周期流程以及用于设置区块链的决策图，如图7.3所示。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig3_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig3_HTML.png)
- en: Fig. 7.3
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3
- en: Yrjola Broadband Radio Service Spectrum blockchain
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Yrjola宽带无线电服务频谱区块链
- en: Another suggested approach to determining needs is to design process flows—sort
    of a data flow/flowchart of the sequence of events that occur when a user gets
    on the system and the decisions trees that define the flow. Xu et al. ([2017](#CR2))
    provides a sample design process that demonstrates how analysts can document requirements
    and the logic flow in Fig. [7.4](#Fig4). inevitably logic flows also uncover data
    element needs.![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig4_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig4_HTML.png)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 确定需求的另一种建议方法是设计流程——一种事件序列的数据流/流程图，描述用户进入系统时发生的事件以及定义流程的决策树。Xu等人（[2017](#CR2)）提供了一个样例设计流程，演示了分析人员如何在图7.4中记录需求和逻辑流程。不可避免地，逻辑流程还会揭示数据元素的需求。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig4_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig4_HTML.png)
- en: Fig. 7.4
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4
- en: Xu et al. design process for blockchain-based systems
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Xu等人针对基于区块链的系统的设计流程
- en: Blockchain design can also make use of traditional analysis tools covered earlier
    in this book. Various agile analysis tools can be incorporated in creating a design
    document for a blockchain smart contract system created by Marchesi et al. ([2018](#CR1)).
    Their approach can be used as a guideline for a generic blockchain SDLC. In their
    particular solution the authors use the UML methodology, but analysts can use
    they choose any of the structured analysis approaches.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链设计也可以利用本书早期介绍的传统分析工具。Marchesi等人（[2018](#CR1)）创建的区块链智能合约系统的设计文档中可以纳入各种敏捷分析工具。他们的方法可以作为通用区块链SDLC的指南。在他们的特定解决方案中，作者使用了UML方法，但分析人员可以选择任何结构化分析方法。
- en: 'Step 1: State the goal of the system in the form of a few paragraphs.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1步：以几段话的形式说明系统的目标。
- en: 'Step 2: Identify the actors (both human and machine) that ultimately represent
    the boundaries of inputs and outputs.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 2：确定最终代表输入和输出边界的参与者（包括人类和机器）。
- en: 'Step 3: Create a development process diagram as shown in Fig. [7.5](#Fig5).![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig5_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig5_HTML.png)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 3：制作开发流程图，如图 [7.5](#Fig5) 所示。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig5_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig5_HTML.png)
- en: Fig. 7.5
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.5
- en: Sample development process for a smart contract system
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 智能合约系统的示例开发流程
- en: 'Step 4: Develop the system requirements using high-level user stories using
    both prose writing and a use case diagram as shown in Fig. [7.6](#Fig6).![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig6_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig6_HTML.png)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 4：使用散文和用例图制定高级用户故事的系统需求，如图 [7.6](#Fig6) 所示。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig6_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig6_HTML.png)
- en: Fig. 7.6
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.6
- en: User story flow diagram
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用户故事流程图
- en: 'Step 5: Translate the user stories into object-class diagrams as shown in Fig. [7.7](#Fig7)
    which shows the entities, data structures, and operations.![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig7_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig7_HTML.png)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 5：将用户故事翻译成对象类图，如图 [7.7](#Fig7) 所示，显示实体、数据结构和操作。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig7_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig7_HTML.png)
- en: Fig. 7.7
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.7
- en: Object-class diagrams derived from user stories
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源自用户故事的对象类图
- en: 'Step 6: Develop State Transition Diagram showing possible states and what flows
    can cause a change in state. The example in Fig. [7.8](#Fig8) reflects UML style
    state chart.![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig8_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig8_HTML.png)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 6：制作显示可能状态及导致状态变化的流的状态转换图。图示例见图 [7.8](#Fig8)，反映了 UML 风格的状态图。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig8_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig8_HTML.png)
- en: Fig. 7.8
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.8
- en: State diagram derived from object-class flow
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源自对象类流的状态图
- en: 'Step 7: Create process specifications of functions from User Stories as shown
    in Table [7.2](#Tab2).Table 7.2'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤 7：根据用户故事创建函数的过程规范，如表 [7.2](#Tab2) 所示。表 7.2
- en: Process specifications of functions from user stories
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从用户故事中提取函数的过程规范
- en: '| Function | Modifiers, parameters | Action—Notes |'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Function | Modifiers, parameters | Action—Notes |'
- en: '| --- | --- | --- |'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| constructor | string nameFirmstring nameAdmin[(string nameSh, address addrSh,
    unit 16 noShares)] | Create the Voting Management contract, inputting the name
    of the firm, the Administrator’s name and, for each shareholder: name, address
    and number of shares. Add a new shareholder, giving his name, address and number
    of shares |'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| constructor | string nameFirmstring nameAdmin[(string nameSh, address addrSh,
    unit 16 noShares)] | 创建投票管理合约，输入公司名称、管理员姓名以及每个股东的姓名、地址和股份数量。添加一个新的股东，提供其姓名、地址和股份数量
    |'
- en: '| addShareholder | onlyOwnerstring nameShaddress addrShunit16 noShares | Add
    a new shareholder, giving his name, address and number of shares |'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| addShareholder | onlyOwnerstring nameShaddress addrShunit16 noShares | 添加一个新的股东，提供其姓名、地址和股份数量
    |'
- en: '| Delete Sharehold | onlyOwneraddress addrSh | Delete the given shareholder,
    giving his address. Can be done only it the shareholder has no active participation
    in an assembly |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Delete Sharehold | onlyOwneraddress addrSh | 删除给定股东，提供其地址。只有当股东在会议中没有积极参与时才能执行此操作
    |'
- en: '| editShareholder | onlyOwneraddress addrShstring nameShunit 16 noShares |
    Update the given shareholder, giving his address (that cannot be changed), name
    and number of shares. Can be done only if the shareholder has no active participation
    in an assembly |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| editShareholder | onlyOwneraddress addrShstring nameShunit 16 noShares |
    更新给定股东，提供其地址（不可更改）、姓名和股份数量。只有当股东在会议中没有积极参与时才能执行此操作 |'
- en: '| Change Administrator | onlyOwneraddress newOwnerstring nameAdmin | Give the
    address and the name of the new administrator |'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Change Administrator | onlyOwneraddress newOwnerstring nameAdmin | 给出新管理员的地址和姓名
    |'
- en: '| Convene Assembly | onlyOwner | Convene an assembly, giving start and end
    date and time of the assembly, a short description, the minimum percentage of
    shares needed for its validity, and the maximum number of delegations that can
    be given to a single Shareholder. No existing assembly can overlap with the new
    one |'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Convene Assembly | onlyOwner | 召集一个会议，提供会议的开始和结束日期和时间、简短描述、确保其有效所需的最低股份百分比以及单个股东可获得的最大授权数量。任何现有会议都不能与新会议重叠
    |'
- en: '| addVoting | onlyOwner | Add a call for voting to the given assembly, specifying
    the name of the voting, the two options that should be chosen, the minimum percentage
    of voting shares, and of votes needed to have a valid vote The assembly must not
    have already started |'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| addVoting | onlyOwner | 给定议会添加一个投票调用，指定投票的名称，应选择的两个选项，投票股份的最低百分比，以及需要有效投票的票数。议会不能已经开始
    |'
- en: '| participate | onlyShareholder | Register the participation of the sender
    to the given Assembly, provided that the start date and time of the Assembly has
    not yet passed, and that the sender has not already delegated another Shareholder,
    or already registered |'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| participate | onlyShareholder | 注册发件人对给定议会的参与，前提是议会的开始日期和时间尚未过去，并且发件人尚未委派另一股东，或者已经注册
    |'
- en: '| delegate | onlyShareholder | Delegate the participation to a given Assembly
    to another Shareholder, provided that the start date and time of the Assembly
    has not yet passed, that the sender has not already registered his participation
    of delegated another Shareholder, that the delegated Shareholder has registered
    to the Assembly, and has not yet reached the maximum number of delegations |'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| delegate | onlyShareholder | 将对给定议会的参与委派给另一股东，前提是议会的开始日期和时间尚未过去，发件人尚未注册他的参与或委派给另一股东，被委派的股东已经注册到议会，并且尚未达到最大委派数量
    |'
- en: '| castVote | onlyShareholder | Cast a vote for one of the choices of a given
    voting, provided that the sender is participating to the Assembly of the voting,
    that this Assembly has started and has not yet expired, and that the vote has
    not already cast |'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| castVote | onlyShareholder | 为给定投票的选择之一投票，前提是发件人参与了投票的议会，该议会已经开始并且尚未过期，并且该投票尚未投票
    |'
- en: '| verifyValidity ***view*** | OnlyOwnerOrShareholder | Read the total number
    of shares that participated to a given Assembly, and check if the minimum number
    has been reached. The Assembly must have expired |'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| verifyValidity ***view*** | OnlyOwnerOrShareholder | 读取参与给定议会的股份数量，并检查是否已达到最小数量。议会必须已过期
    |'
- en: '| readResults ***view*** | OnlyOwnerOrShareholder | Read the voting results
    (choice 1, choice 2 or no choice), given an Assembly, and the name of a voting.
    The Assembly must have expired |'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| readResults ***view*** | OnlyOwnerOrShareholder | 读取给定议会和投票名称的投票结果（选择1、选择2或无选择）。议会必须已过期
    |'
- en: '| deleteContract | onlyOwner | Permanently delete the contract |'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| deleteContract | onlyOwner | 永久删除合同 |'
- en: The Marchesi et al. sample depicts how requirements documents might appear in
    the SDLC for a typical smart contract blockchain. While there can be many variances,
    it is important to recognize how traditional analysis tools can be embedded in
    the block chain engine that will be inserted into the various other processes
    and data interfaces of the larger applications needed in any complex system.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Marchesi等人的样本描述了SDLC中典型智能合约区块链的需求文档可能的外观。虽然可能存在许多变体，但重要的是要认识到传统分析工具如何嵌入到将插入到其他各种流程和数据接口中的区块链引擎中，这些流程和数据接口是任何复杂系统中所需的更大应用程序的一部分。
- en: 7.4 Summary
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7.4 摘要
- en: Blockchain represents an essential architectural component to make IoT a feasible
    and secure engine that can be incorporated into complex systems. Essentially the
    blockchain will serve as the validation and recording of transaction using an
    accounting ledger-based system that guards against hackers. Without this engine
    system IoT cannot achieve widespread use across various industries and specific
    technologies. While we are still in the embryonic stages of blockchain development
    and it is predicted that there will be a plethora of third-party blockchain products
    that will provide the architecture for specific industry-related product processing.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链代表了使物联网成为可行和安全引擎的基本架构组件，该引擎可以并入复杂系统中。基本上，区块链将作为使用基于会计分类账系统的验证和记录交易的引擎，以防止黑客攻击。如果没有这个引擎系统，物联网无法在各个行业和特定技术中实现广泛应用。虽然我们仍处于区块链发展的萌芽阶段，但预计将会有大量的第三方区块链产品提供特定行业相关产品处理的架构。
- en: However, it is important to recognize that the latency issue is still very much
    a challenge. The philosophy of the blockchain architecture in terms of its update
    process very much resembles the old IBM token-ring structure. As a recollection
    of that network design, IBMs computer nodes each had to be updated in a circular
    ring that got updated sequentially. The problem then was that the network design
    was too slow to achieve itself as a feasible solution to networked personal computers.
    Figure [7.9](#Fig9) depicts the IBM token ring structure. The blockchain architecture
    replaces the personal computers with blocks. While updating blocks is faster than
    token ring network structure, it still will be challenged in scaling, especially
    in a mobile network system. While 5G will make blockchain more feasible, scalability
    across large mobile networks may still hinder widespread use. The next chapter
    will address some of the potential solutions that can ultimately increase processing
    power to support more scalable blockchain development.![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig9_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig9_HTML.png)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，重要的是要认识到延迟问题仍然是一个很大的挑战。从其更新过程的哲学角度来看，区块链架构非常类似于旧的IBM令牌环结构。回顾一下那种网络设计，IBM的计算机节点必须在一个循环环中进行顺序更新。那时的问题在于，网络设计速度太慢，无法作为网络个人计算机的可行解决方案。图 [7.9](#Fig9)
    描绘了IBM令牌环结构。区块链架构用区块替代了个人计算机。虽然更新区块比令牌环网络结构快，但在扩展方面仍然面临挑战，特别是在移动网络系统中。虽然5G将使区块链更加可行，但在大型移动网络中的可扩展性可能仍然阻碍广泛使用。下一章将讨论一些潜在的解决方案，这些解决方案最终可以增加处理能力，以支持更可扩展的区块链开发。![../images/480347_1_En_7_Chapter/480347_1_En_7_Fig9_HTML.png](../images/480347_1_En_7_Chapter/480347_1_En_7_Fig9_HTML.png)
- en: Fig. 7.9
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9
- en: IBM Token Ring Architecture
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: IBM令牌环结构
- en: 7.5 Problems and Exercises
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7.5 问题与练习
- en: '1.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Explain the relationship between Blockchain and Linked Lists.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释区块链与链表之间的关系。
- en: '2.'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: What is meant by a hash code?
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 什么是哈希码？
- en: '3.'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Compare the positives and negatives of blockchain.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 比较区块链的优缺点。
- en: '4.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: What are the two main objectives of blockchain analysis and design?
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 区块链分析与设计的两个主要目标是什么？
- en: '5.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: How does use cases relate to blockchain analysis?
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用例与区块链分析有何关联？
- en: '6.'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '6.'
- en: What is the relationship between a use case diagram, prose writing, and a minispec?
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用例图、散文写作和迷你规范之间有什么关系？
- en: '7.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '7.'
- en: What is the relationship between a minispec and pseudocode?
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 迷你规范和伪代码之间的关系是什么？
- en: '8.'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '8.'
- en: How can user stories be used to complete the requirements of the blockchain
    modeling tools?
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何使用用户故事完成区块链建模工具的要求？
- en: '9.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '9.'
- en: What is the relationship between a state transition diagram and blockchain?
    Why is it important?
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态转换图与区块链之间的关系是什么？为什么重要？
- en: '10.'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '10.'
- en: Why is blockchain architecture so important in the design of mobile-based IoT
    systems?
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为什么区块链架构在移动物联网系统设计中如此重要？
