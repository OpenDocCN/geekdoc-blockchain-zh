- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2021Z.
    Zheng et al. (eds.)Blockchain Intelligence[https://doi.org/10.1007/978-981-16-0127-9_3](https://doi.org/10.1007/978-981-16-0127-9_3)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: ©作者（们），受Springer Nature新加坡私人有限公司独家授权，2021Z. 郑等（eds.）区块链智能[https://doi.org/10.1007/978-981-16-0127-9_3](https://doi.org/10.1007/978-981-16-0127-9_3)
- en: 3. Analysis and Mining of Blockchain Transaction Network
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. 区块链交易网络的分析与挖掘
- en: 'Dan Lin^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor1)), Jiajing Wu^([1](#Aff4),
    [2](#Aff5) [ ](#ContactOfAuthor2)), Qi Yuan^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor3))
    and Zibin Zheng^([2](#Aff5) [ ](#ContactOfAuthor4))(1)School of Data and Computer
    Science, Sun Yat-sen University, Guangzhou, China(2)National Engineering Research
    Center of Digital Life, Sun Yat-sen University, Guangzhou, ChinaDan LinEmail:
    [lind8@mail2.sysu.edu.cn](mailto:lind8@mail2.sysu.edu.cn)Jiajing Wu (Corresponding
    author)Email: [wujiajing@mail.sysu.edu.cn](mailto:wujiajing@mail.sysu.edu.cn)Qi YuanEmail:
    [yuanq29@mail2.sysu.edu.cn](mailto:yuanq29@mail2.sysu.edu.cn)Zibin ZhengEmail:
    [zhzibin@mail.sysu.edu.cn](mailto:zhzibin@mail.sysu.edu.cn)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Dan Lin^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor1)), Jiajing Wu^([1](#Aff4),
    [2](#Aff5) [ ](#ContactOfAuthor2)), Qi Yuan^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor3))
    和 Zibin Zheng^([2](#Aff5) [ ](#ContactOfAuthor4))(1)中山大学数据与计算机科学学院，广州，中国(2)中山大学数字生活国家工程研究中心，广州，中国Dan
    Lin 电子邮件： [lind8@mail2.sysu.edu.cn](mailto:lind8@mail2.sysu.edu.cn)Jiajing Wu（通讯作者）电子邮件：
    [wujiajing@mail.sysu.edu.cn](mailto:wujiajing@mail.sysu.edu.cn)Qi Yuan 电子邮件： [yuanq29@mail2.sysu.edu.cn](mailto:yuanq29@mail2.sysu.edu.cn)Zibin
    Zheng 电子邮件： [zhzibin@mail.sysu.edu.cn](mailto:zhzibin@mail.sysu.edu.cn)
- en: Abstract
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduce an overview of network construction in blockchain.
    In recent years, network has been widely used to present information in various
    areas, and graph-embedding techniques have attracted attention from various fields.
    Ethereum is a blockchain-based platform supporting smart contracts. The open nature
    of blockchain makes the transaction data on Ethereum completely public, and also
    brings unprecedented opportunities for the transaction network analysis. We first
    model the Ethereum transaction records as a complex network named temporal weighted
    multidigraph (TWMDG) by incorporating time and amount features of the transactions,
    and then define the problem of temporal weighted multidigraph embedding (T-EDGE)
    by incorporating both temporal and weighted information of the edges. Moreover,
    we also design several flexible temporal walk strategies for random-walk based
    graph representation of this large-scale network and study the Ethereum transaction
    tracking problem and the evolution factors of transaction network via link prediction
    from the network perspective.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了区块链网络构建的概述。近年来，网络在各种领域广泛用于表示信息，图嵌入技术吸引了来自各领域的关注。以太坊是一个支持智能合约的基于区块链的平台。区块链的开放性质使得以太坊上的交易数据完全公开，也为交易网络分析带来了前所未有的机遇。我们首先通过整合交易的时序和金额特征，将以太坊交易记录建模为一种名为时间加权多图（TWMDG）的复杂网络，然后通过整合边的时序和加权信息，定义了时间加权多图嵌入问题（T-EDGE）。此外，我们还为这个大规模网络设计了几个灵活的时间游走策略，基于随机游走图表示方法，并从网络视角研究以太坊交易追踪问题和交易网络演变因素的链接预测。
- en: 3.1 Overview
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 概述
- en: Network is a kind of data form which is often used to describe the relationship
    between objects. In the past decade, network data has grown explosively and have
    been used to present information in various areas such as biological networks,
    social networks, computer networks, and financial transaction networks (Boccaletti
    et al. [2006](#CR3)). Complex networks can represent complex information in the
    real world in an elegant way. More and more attention has been paid to the analysis
    of large-scale networks by industry and academia. With the rapid development of
    machine learning technology, how to analyze the data effectively for large-scale
    complex networks becomes a central topic in the field of artificial intelligence.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 网络是一种常用于描述对象之间关系的数据形式。在过去的十年中，网络数据爆炸式增长，并被用于表示生物网络、社交网络、计算机网络和金融交易网络等各种领域的信息（Boccaletti等人[2006](#CR3)）。复杂网络可以以一种优雅的方式表示现实世界中的复杂信息。越来越多地关注学术界和工业界对大规模网络的分析。随着机器学习技术的快速发展，如何有效地分析大规模复杂网络数据成为人工智能领域的一个中心议题。
- en: In the real world, there are few analytical studies on financial transactions
    which have been conducted because the transaction records are usually private
    for the consideration of security and profit. The open nature of Blockchain provides
    us with unprecedented opportunities for data mining in this area. In fact, since
    blockchain technology was born from Bitcoin, cryptocurrency and blockchain are
    highly coupled. The research of cryptocurrency transaction network has very high
    application value, and nowadays, there are already some studies including graph
    analysis, price prediction, portfolio management, anti-money laundry, illicit
    detection, and so on (Chen et al. [2018a](#CR6),[b](#CR7), [2019](#CR8); Feder
    et al. [2018](#CR13); Jiang and Liang [2016](#CR15); Liang et al. [2018](#CR17);
    Ron and Shamir [2013](#CR25)). In 2017, Jiang and Liang presented a deterministic
    deep reinforcement learning method for cryptocurrency portfolio management, which
    inputs the historic prices of a set of financial assets and outputs the portfolio
    weights of the set in its trading algorithm. In 2018, Liang et al. traced the
    properties over time and understood the dynamics of three representative cryptocurrencies,
    that is, Bitcoin, Ethereum, and Namecoin, by constructing monthly transaction
    network.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，由于考虑到安全和利润，很少有对金融交易的分析研究，而这些交易记录通常是私有的。区块链的开放性质为我们提供了前所未有的数据挖掘机会。实际上，自从区块链技术从比特币诞生以来，加密货币与区块链就高度相关。加密货币交易网络的研究具有极高的应用价值，现在已经有包括图分析、价格预测、投资组合管理、反洗钱、非法行为检测等方面的一些研究（Chen等人[2018a](#CR6),[b](#CR7),
    [2019](#CR8); Feder等人[2018](#CR13); 江等人与梁等人[2016](#CR15); 梁等人[2018](#CR17); Ron和Shamir[2013](#CR25)）。2017年，江等人提出了一种确定性的深度强化学习方法，用于加密货币投资组合管理，该方法将一组金融资产的历史价格输入到其交易算法中，输出一组投资组合权重。2018年，梁等人通过构建月度交易网络，追踪了三种代表性加密货币（即比特币、以太坊和Namecoin）的特性随时间变化，理解了其动态。
- en: Because the processing of the whole blockchain transaction network is very time-consuming,
    it is essential to find an effective and efficient method to analyze the Blockchain
    transaction data. As we all know, the performance of machine learning tasks largely
    depends on the selection of data features, so how to represent the feature information
    reasonably in large-scale transaction networks is the key issue. Moreover, the
    algorithm based on machine learning usually requires feature information of samples,
    while the account information of the transaction networks is often difficult to
    obtain. The graph embedding algorithms can be used to mine the implicit features
    of the accounts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由于处理整个区块链交易网络非常耗时，找到一种有效高效的方法来分析区块链交易数据至关重要。众所周知，机器学习任务的表现很大程度上取决于数据特征的选择，因此在大规模交易网络中如何合理表示特征信息是关键问题。此外，基于机器学习的算法通常需要样本的特征信息，而交易网络的账户信息往往难以获得。图嵌入算法可用于挖掘账户的隐性特征。
- en: For network analysis and downstream machine learning tasks, graph embedding
    is an effective method to represent node features in a low dimensional space (Cai
    et al. [2018](#CR4)). Graph embedding algorithms can effectively reduce the data
    dimension of transaction network, and convert the large-scale and sparse high-dimensional
    one-hot node vectors to the dense low-dimensional node vectors. So it could be
    an effective way to analyze data on blockchain using Graph embedding.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于网络分析和下游的机器学习任务，图嵌入是一种有效的表示节点特征的方法，将节点特征表示在低维空间中（Cai等人[2018](#CR4)）。图嵌入算法可以有效减少交易网络的数据维度，将大规模稀疏的高维独热节点向量转换为密集的低维节点向量。因此，使用图嵌入分析区块链数据可能是一个有效的方法。
- en: Data analysis and mining on blockchain transaction network can help us to understand
    more about the blockchain transaction pattern, the evolution of blockchain financial
    market and the illegal activities on blockchain, etc.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链交易网络上的数据分析与挖掘可以帮助我们更好地理解区块链交易模式、区块链金融市场的演变以及区块链上的非法活动等。
- en: In this chapter we
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章节中，我们将
- en: '1.'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Introduce the basic knowledge of network, including the concept of network and
    the expression of the network
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 介绍网络的基本知识，包括网络的概念和网络的表达
- en: '2.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: Provide a network construction model that can keep the transaction information
    of blockchain completely
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提供一种可以完全保留区块链交易信息的网络构建模型
- en: '3.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Introduce the application examples of data analysis and mining using blockchain
    transaction network
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 介绍使用区块链交易网络进行数据分析与挖掘的应用案例
- en: 3.2 Basic Knowledge of Network
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 网络基础知识
- en: With the rapid development of network information technology represented by
    the Internet, mankind has entered the era of complex networks. Human production
    and life are increasingly dependent on the safe, reliable, and effective operation
    of various complex network systems.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 随着以互联网为代表的信息网络技术的快速发展，人类已经进入了复杂网络时代。人类的生产和生活越来越依赖于各种复杂网络系统的安全、可靠和有效运行。
- en: 3.2.1 Concept of Network
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2.1 网络概念
- en: In the natural world and even in human society, there are various connections
    between massive individuals, and interconnected individuals constitute a complex
    system of all kinds. If nodes are used to represent individuals and connected
    edges are used to represent connections between individuals, then these complex
    systems can be characterized through the network. For example, the social network
    of the Tencent platform records the user’s classmate relationship, friend relationship,
    and even group relationship with similar interests; the computer network describes
    the communication relationship between some computers connected by communication
    media; the biological body’s nervous system portrays the interconnection and interaction
    of a large number of nerve cells. These networks are connected by different individuals
    through various rules. They have many similar but not identical features in structure,
    and they also have different characteristics in function. They are often collectively
    called complex networks. Networks are a general language for describing complex
    systems of interacting entities (Fig. [3.1](#Fig1)).![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig1_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig1_HTML.png)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在自然界甚至人类社会中，大量个体之间存在各种联系，这些相互连接的个体构成了各种复杂的系统。如果用节点来表示个体，用连接的边来表示个体之间的联系，那么这些复杂系统可以通过网络来描述。例如，腾讯平台的社会网络记录了用户的同学关系、朋友关系，甚至具有相似兴趣的群组关系；计算机网络描述了通过通信介质连接的一些计算机之间的通信关系；生物体的神经系统描绘了大量神经细胞之间的相互连接和作用。这些网络是由不同个体通过各种规则连接起来的。它们在结构上有许多相似但不相同的特点，而且在功能上也有不同的特征。它们通常被统称为复杂网络。网络是描述相互作用实体复杂系统的通用语言（图[3.1](#Fig1)）。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig1_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig1_HTML.png)
- en: Fig. 3.1
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1
- en: Communication Network
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通信网络
- en: There are many types of networks, and real complex systems require different
    types of networks to describe them. For example, when investigating the cooperative
    relationship between scientists, scientists who have collaborated on at least
    one article will establish a connected edge. Then such a system can be described
    through the simplest undirected network. Undirected means that the connected edge
    has no directivity, and no right means that there is no strength or weakness in
    the connected side. If you want to use the edge to indicate the number of collaborative
    articles between scientists, then this system requires an undirected weighted
    network to represent, the thickness of the edge represents the size of the weight,
    that is, the cooperative frequency. In another example, in the food chain system,
    the edge represents the relationship between the predator and the predator. To
    describe this relationship with directivity, a directed network must be used (Fig.
    [3.2](#Fig2)).![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig2_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig2_HTML.png)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 网络有许多类型，而真实的复杂系统需要不同类型的网络来描述它们。例如，在调查科学家之间的合作关系时，至少共同发表过一篇文章的科学家将建立一个连接边。然后这样的系统可以通过最简单的无向网络来描述。无向意味着连接边没有方向性，也没有权利意味着连接边没有强度或弱度。如果你想用边来表示科学家之间的合作文章数量，那么这个系统需要一个无向加权网络来表示，边的粗细表示权重的大小，即合作频率。在另一个例子中，在食物链系统中，边代表捕食者与被捕食者之间的关系。为了用有向边表示这种关系，必须使用有向网络（图[3.2](#Fig2)）。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig2_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig2_HTML.png)
- en: Fig. 3.2
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2
- en: Neuron Network
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络
- en: 3.2.2 Mathematical Representation of Network
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2.2 网络的数学表示
- en: Network often refers to real systems, and graph is a mathematical representation
    of a network. The graph provides a unified method for representing various actual
    networks with abstract points and lines, and thus has become a common language
    for studying complex networks. But in most cases the two terms are used interchangeably.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 网络通常指的是现实系统，图是网络的数学表示。图提供了一种统一的方法，用抽象的点和线表示各种实际网络，因此成为了研究复杂网络的共同语言。但在大多数情况下，这两个术语是可以互换的。
- en: A concrete network can be abstracted as a graph ![
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具体的网络可以被抽象为一个图![
- en: $$G\left (V,E\right )$$
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq3.png)。'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq1.png), *V* is
    a set of vertexs, *E* is a set of edges, excluding multiple edges and self-connected
    edges. The total number of vertexs in the graph is !['
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq1.png), *V* 是一组顶点，*E*
    是一组边，排除多重边和自连边。图中的顶点总数是!['
- en: $$N\left (N = |V|\right )$$
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: $$N\left (N = |V|\right )$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq2.png), and
    the number of edges is !['
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq2.png)，边的数量是!['
- en: $$M\left ( M = |E|\right )$$
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: $$M\left ( M = |E|\right )$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq3.png). The
    graph has !['
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq3.png)。图中有!['
- en: $$N\left (N-1\right ) / 2$$
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: $$N\left (N-1\right ) / 2$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq4.png) vertex
    pairs, which is the complete set *U*.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq4.png)顶点对，这是完整的集合*U*。'
- en: 'Generally, according to whether the edges in the graph are directed and weighted,
    there can be four types of graphs:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，根据图中的边是否是有向和加权的，可以有四种图类型：
- en: '1.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Unweighted Undirected Graph. The edges in the graph are unweighted and undirected.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无权无向图。图中的边是无权且无向的。
- en: '2.'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: Unweighted Directed Graph. The edges in the graph are unweighted and directed.
    Unweighted graphs can actually mean that the weights in the graphs are all equal.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无权有向图。图中的边是无权且定向的。无权图实际上可能意味着图中的权重都是相等的。
- en: '3.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Weighted Undirected Graph. The edges in the graph are weighted and undirected.
    Undirected means that *(i, j)* and *(j, i)* represent the same edge.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 加权无向图。图中的边是加权的且无向的。无向意味着*(i, j)*和*(j, i)*表示同一条边。
- en: '4.'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: Weighted Directed Graph. The edges in the graph are weighted and directed. Edge
    is directed means there is an edge *(i, j)* from node *i* to node *j*, but there
    is not necessarily an edge *(j, i)* from node *j* to node *i*.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 加权有向图。图中的边是加权的且定向的。边的定向意味着从节点*i*到节点*j*存在边*(i, j)*，但不一定存在从节点*j*到节点*i*的边*(j, i)*。
- en: 3.3 Blockchain Transaction Network
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 区块链交易网络
- en: Recently, graphs have been widely used to analyze various networks, but most
    of the existing graph constructed miss temporal and weighted information on edges
    that may play a role in the financial transaction networks. The openness of Ethereum,
    a blockchain-based platform, provides us with an opportunity for data mining in
    this field. By considering the realistic rules and characteristics of the transaction
    networks, we model the Ethereum transaction network as a temporal weighted multidigraph
    (TWMDG), in which each node is a unique Ethereum account and each edge represents
    a transaction weighted by amount and allocated with timestamp.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，图已被广泛用于分析各种网络，但现有的大多数图构造都忽略了边缘的时态和加权信息，这些信息在金融交易网络中可能发挥作用。基于区块链的平台以太坊的开放性为我们提供了在这个领域进行数据挖掘的机会。通过考虑交易网络的现实规则和特点，我们将以太坊交易网络建模为具有时间加权多向图（TWMDG），其中每个节点是一个独特的以太坊账户，每条边代表一个由金额加权和时间戳分配的交易。
- en: 3.3.1 Method of Modeling Blockchain Transaction Network
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.1 区块链交易网络建模方法
- en: Up to now, graph has been used to model and analyze the huge transactions network
    of blockchain-based systems. In 2018, Chen et al. conducted the first systematic
    study to characterize Ethereum and get new observations with various indicators.
    Alqassem et al. ([2018](#CR1)) found the antisocial properties of Bitcoin system
    via transaction network data analysis. In existing research, transaction records
    are modeled as a simple graph, in which multiple transactions between a pair of
    addresses are merged into one transaction during the construction of the graph.
    However, different from other large-scale complex networks which edge only contains
    single information, each edge in the blockchain transaction network represents
    a particular coin transaction, and thus contains some unique information such
    as the direction, amount value and timestamp of a particular transaction.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 截至目前，图形已被用于模拟和分析基于区块链系统的大量交易网络。2018年，Chen等人进行了首次系统研究，以特征化以太坊并使用各种指标获得新的观察结果。[Alqassem等人](#CR1)通过交易网络数据分析发现了比特币系统的反社交特性。在现有研究中，交易记录被建模为简单图形，在构建图形的过程中，一对地址之间的多个交易被合并为一次交易。然而，与其他大型复杂网络的边只包含单一信息不同，区块链交易网络中的每一条边代表特定的币种交易，因此包含一些独特信息，如特定交易的流向、金额价值和时间戳。
- en: Incorporating the above information is essential for accurate modeling, characterization,
    and understanding of transaction network data. In addition, multiple transactions
    between two users are expected and it is more comprehensive to model a transaction
    network as a multidigraph rather than a simple graph. In graph theory, a multigraph
    (as opposed to a simple graph) is a graph which is allowed to have self-loops
    and multiple edges (also called parallel edges). A multidigraph is a directed
    multigraph.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 准确建模、表征和理解交易网络数据，融入上述信息至关重要。此外，预计两个用户之间会有多次交易，将交易网络建模为多图而不是简单图更为全面。在图论中，多图（与简单图相对）是指允许有自环和多重边的图（也称为平行边）。多图是一种有向多图。
- en: The existing methods of modeling the transaction records as simple graph are
    not sufficient to characterize the temporal and multiple features of transaction
    networks. So, we model the blockchain transaction records as a **Temporal Weighted
    Multidigraph**, and propose novel graph sampling and representation methods to
    keep the temporal and weighted information of the blockchain transaction. Next
    we provide an example of how to model the blockchain transaction network as Temporal
    Weighted Multidigraph. The selected blockchain transaction system is Ethereum,
    which is the largest public platform based on blockchain that supports smart contracts.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将交易记录建模为简单图形的现有方法不足以表征交易网络的时间和多重特征。因此，我们将区块链交易记录建模为**时间加权多图**，并提出了新的图形抽样和表示方法，以保持区块链交易的时序和加权信息。接下来，我们将提供一个如何将区块链交易网络建模为时间加权多图的示例。选择的区块链交易系统是以太坊，这是支持智能合约的最大公共区块链平台。
- en: 3.3.2 Modeling Ethereum Transaction Network by Graph
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.2 通过图形建模以太坊交易网络
- en: 'The modeling framework includes two main procedures, as shown in Fig. [3.3](#Fig3):
    (a) Data Collection. Obtain the transaction records of objective accounts from
    Ethereum through API of [https://​etherscan.​io/​](https://etherscan.io/) (A block
    explorer and analytics platform for Ethereum); (b) Network Construction. Based
    on the collected transaction data, a Temporal Weighted Multidigraph is constructed
    to represent the relationship of Ether transfer between accounts.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig3_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig3_HTML.png)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 建模框架包括两个主要程序，如图3.3所示：[3.3](#Fig3)（a）数据收集。通过[https://​etherscan.​io/​](https://etherscan.io/)的API获取目标账户的以太坊交易记录（以太坊的区块浏览器和分析平台）；（b）网络构建。基于收集的交易数据，构建一个时间加权多图来表示账户之间的以太坊转账关系。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig3_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig3_HTML.png)
- en: Fig. 3.3
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3
- en: The architecture of the proposed framework for modeling Ethereum transaction
    network by graph. (**a**) Data acquisition. (**b**) Network construction
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的用于建模以太坊交易网络的框架基于图形架构。（**a**）数据获取。（**b**）网络构建。
- en: 3.3.2.1 Data Collection
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.2.1 数据收集
- en: There are two types of Ethereum accounts, that is, external owned accounts (EOA),
    which is similar to ordinary bank accounts (Chen and Zheng [2018](#CR9)), and
    smart contract accounts, which are source code files. Ethereum accounts/addresses
    (We use “account” and “address” interchangeably in the following paper) are composed
    of the prefix “0x”, a common identifier for hexadecimal, concatenated with the
    rightmost 20 bytes of the public key. One example is “0x51faeda318982f439e80012fb45d2b017ddccd-be.”
    Usually, transactions take place between accounts that are represented by addresses
    for anonymity. In this work, we focus on the transactions between EOAs because
    the Ether transfer records between them are publicly available on the blockchain.
    Besides, we only include the successful transactions with nonzero amount value
    into our dataset. Because there are more than two million EOAs in the whole Ethereum
    transaction network, it (Chen et al. [2018a](#CR6)) is extremely time-consuming
    to process it, here we select objective accounts and then obtain their transaction
    data through APIs of Etherscan. As shown in Fig. [3.4](#Fig4), centered by a particular
    objective account, we obtain a directed *K*-order subgraph. *K*-in and *K*-out
    are two parameters to control the depth of sampling inward and outward from the
    center, respectively. The *K*-order sampling method can obtain space-intensive
    transaction data, whose corresponding transaction network is always connected
    and can better reserve the local information of the target nodes.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig4_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig4_HTML.png)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊账户有两种类型，即外部所有者账户（EOA），这与普通银行账户（Chen 和 Zheng [2018](#CR9)）相似，以及智能合约账户，这些是源代码文件。以太坊账户/地址（在本文档中，“账户”和“地址”可以互换使用）由前缀“0x”，一个十六进制的常见标识符，与公钥的最右边的20个字节连接而成。一个例子是“0x51faeda318982f439e80012fb45d2b017ddccd-be。”通常，交易发生在由地址表示以匿名的方式之间的账户。在此工作中，我们关注
    EOAs 之间的交易，因为以太币转账记录公开可查于区块链上。此外，我们只将成功且金额值非零的交易纳入我们的数据集中。由于整个以太坊交易网络中有超过两百万个
    EOAs，它（Chen 等人 [2018a](#CR6)）处理起来非常耗时，在这里我们选择目标账户，然后通过以太坊扫描的 API 获取其交易数据。如图 [3.4](#Fig4)
    所示，以特定的目标账户为中心，我们获得了一个有向*K*阶子图。*K*-入和*K*-出是以太坊账户分别为中心向外和向内采样的深度参数。*K*阶抽样方法可以获取空间密集的交易数据，其相应的交易网络总是连通，并更好地保留目标节点的位置信息。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig4_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig4_HTML.png)
- en: Fig. 3.4
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4
- en: A schematic illustration of a directed *K*-order subgraph
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有向*K*阶子图的示意图
- en: Using this sampling method, we get three subgraphs with different size from
    Ethereum for experiments. EthereumG1 is centered by account “0x51faeda318982f4-39e80012fb45d2b017ddccdbe”
    with *K*-in = *K*-out = *K* = 3; EthereumG2 is centered by account “0x5e247060f48eeb64367250ed03ff5091bba
    47fd1” with *K*-in = *K*-out = *K* = 4; EthereumG3 is centered by the same account
    as EthereumG1 with *K*-in = *K*-out = *K* = 4\. A summary of the datasets is listed
    in Table [3.1](#Tab1). The center accounts for building subgraphs are chosen randomly
    with no specification.Table 3.1
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种抽样方法，我们从以太坊中得到了不同大小的三个子图用于实验。以太坊G1 以账户“0x51faeda318982f4-39e80012fb45d2b017ddccdbe”为中心，*K*-入=*K*-出=*K*=3；以太坊G2
    以账户“0x5e247060f48eeb64367250ed03ff5091bba 47fd1”为中心，*K*-入=*K*-出=*K*=4；以太坊G3 与以太坊G1
    相同，中心账户为“0x51faeda318982f439e80012fb45d2b017ddccdbe”，*K*-入=*K*-出=*K*=4。数据集的总结列于表
    [3.1](#Tab1)。构建子图的中心账户是随机选择的，没有特定要求。表 3.1
- en: Statistics of datasets. The notation “#” represents “the number of” and “Txs”
    is short for “Transactions”
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集统计。符号“#”表示“数量”的意思，“Txs”是“Transactions”的缩写。
- en: '| Dataset | Address of center node | *K* | #Account | Txs |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 数据集 | 中心节点的地址 | *K* | #账户 | 交易量 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| EthereumG1 | 0x51faeda318982f439e80012fb45d2b017ddcc | 3 | 3832 | 208927
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G1 | 0x51faeda318982f439e80012fb45d2b017ddcc | 3 | 3832 | 208927 |'
- en: '| EthereumG2 | 0x5e247060f48eeb64367250ed03ff5091bba47fd1 | 4 | 10,628 | 208533
    |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G2 | 0x5e247060f48eeb64367250ed03ff5091bba47fd1 | 4 | 10,628 | 208533
    |'
- en: '| EthereumG3 | 0x51faeda318982f439e80012fb45d2b017ddccdbe | 4 | 26,175 | 677785
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G3 | 0x51faeda318982f439e80012fb45d2b017ddccdbe | 4 | 26,175 | 677785
    |'
- en: On Ethereum, various related information about Ether transactions is stored
    as data packets. In details, the *TxHash* field is a unique identification of
    a transaction, the *Value* field in a transaction refers to the amount of money
    transferred, and the *Timestamp* field indicates when the transaction happens.
    Besides, the *From* and *To* fields denote the sender and recipient of the transaction.
    With the collected fourtuples *(From, To, Value, Timestamp)*, we can construct
    a Temporal Weighted Multidigraph.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太坊上，与以太币交易相关的各种信息以数据包的形式存储。具体来说，*TxHash* 字段是交易的唯一标识，交易中的 *Value* 字段指的是转账的金额，*Timestamp*
    字段指的是交易发生的时间。此外，*From* 和 *To* 字段分别表示交易的发送者和接收者。利用收集到的四元组 *(From, To, Value, Timestamp)*，我们可以构建一个时间加权多图。
- en: 3.3.2.2 Network Construction
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.2.2 网络构建
- en: 'Ether transfer is one of the main activities that occurs on Ethereum. Here
    we abstract an Ether transfer transaction as a four-tuple *(src, dst, w, t)*,
    which means the sender src transfers *w* Ether to the recipient *dst* at time
    . To investigate the Ether transfer on Ethereum, we abstract the Ethereum transaction
    network as a Temporal Weighted Multidigraph:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊转账是发生在以太坊上的主要活动之一。这里我们将以太坊转账交易抽象为一个四元组 *(src, dst, w, t)*，意味着发送者 src 将在时间
    将 *w* 以太币转给接收者 *dst*。为了研究以太坊上的以太币转账，我们将以太坊交易网络抽象为一个时间加权多图：
- en: Definition 3.1 (Temporal Weighted Multidigraph (TWMDG))
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 3.1（时间加权多图（TWMDG））
- en: Given a graph ![
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个图 ![
- en: $$G = \left (V, E\right )$$
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: $$G = \left (V, E\right )$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq5.png), let
    *V* be the set of vertexs and *E* be the set of edges. Each edge is unique and
    is represented as !['
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq5.png)，让 *V*
    成为顶点集合，*E* 成为边集合。每条边都是唯一的，表示为 !['
- en: $$e = \left (u, v, w, t\right )$$
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: $$e = \left (u, v, w, t\right )$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq6.png), where
    *u* is the source vertex, *v* is the target vertex, *w* is the weight value, and
    *t* is the timestamp. For the sake of simplicity, we define mapping functions
    !['
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq6.png)，其中 *u*
    是源顶点，*v* 是目标顶点，*w* 是权重值，*t* 是时间戳。为了简化起见，我们定义映射函数 !['
- en: $$Src\left (e\right ) = u$$
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: $$Src\left (e\right ) = u$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq7.png), !['
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq7.png)，!['
- en: $$Dst\left (e\right ) = v$$
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: $$Dst\left (e\right ) = v$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq8.png), !['
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq8.png)，!['
- en: $$W\left (e\right ) = w$$
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: $$W\left (e\right ) = w$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq9.png), !['
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq9.png)，!['
- en: $$T\left (e\right ) = t$$
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: $$T\left (e\right ) = t$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq10.png) for
    ∀*e* ∈ *E*.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq10.png) 对于 ∀*e* ∈ *E*。'
- en: Based on the four-tuples collected from Ethereum transaction records, we can
    build a TWMDG, where each node represents a unique account and each edge represents
    a unique Ether transfer transaction.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 基于从以太坊交易记录中收集的四元组，我们可以建立一个 TWMDG，其中每个节点代表一个独特账户，每条边代表一个独特的以太币转账交易。
- en: 3.4 Data Analysis and Mining Based on Blockchain Transaction Network
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 以太坊交易网络为基础的数据分析和挖掘
- en: Existing studies on blockchain transaction network analysis and data mining
    can be categorized into two groups. One is applying metrics and topological features
    of complex networks to analyze and characterize blockchain transaction networks.
    The other is the blockchain transaction data mining problem solving by means of
    machine-learning based approaches. These studies mainly focus on the issues of
    ownership identification and anomaly detection in the blockchain systems. Except
    for the ownership identification and detection problem, transaction tracking of
    cryptocurrencies is also of importance to improve the financial security of blockchain
    systems. Current research on transaction tracing mainly discuss about how to trace
    the capital flow in the past by studying the transaction records, while the problem
    of using past records to predict future transactions are rarely considered. However,
    predicting transaction execution is another way to study transaction tracking
    effectively. In this part, we present a new method based on network embedding
    to study Blockchain transactions, and apply it to actual Blockchain data analysis.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现有关于区块链交易网络分析和数据挖掘的研究可以分为两组。一组是应用复杂网络的度量和拓扑特征来分析和表征区块链交易网络。另一组是通过机器学习方法解决区块链交易数据挖掘问题。这些研究主要关注区块链系统中的所有权识别和异常检测问题。除了所有权识别和检测问题，加密货币交易的追踪也是提高区块链系统金融安全的重要方面。目前关于交易追踪的研究主要讨论如何通过研究交易记录来追踪过去的资本流动，而利用过去记录来预测未来交易的问题很少被考虑。然而，预测交易执行是研究交易追踪的另一种有效方式。在这部分，我们提出了一种基于网络嵌入的方法来研究区块链交易，并将其应用于实际的区块链数据分析。
- en: 3.4.1 Temporal Weighted Multidigraph Embedding
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4.1 时间加权的多元图嵌入
- en: Given a temporal weighted multidigraph ![
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个加权的时间多元图 ![
- en: $$G = \left (V,E\right )$$
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: $$G = \left (V,E\right )$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq11.png), which
    Construction method has been shown in Sect. [3.3.1](#Sec6). We define following
    mapping functions: For ∀*e* ∈ *E*, !['
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq11.png), 其构建方法已在第[3.3.1](#Sec6)节中展示。我们定义以下的映射函数：对于
    ∀*e* ∈ *E*, !['
- en: $$Src\left (e\right ) = u$$
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: $$Src\left (e\right ) = u$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq12.png), !['
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq12.png), !['
- en: $$Dst\left (e\right ) = v$$
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: $$Dst\left (e\right ) = v$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq13.png). Function
    !['
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq13.png). 函数
    !['
- en: $$W\left (e\right ) = w$$
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: $$W\left (e\right ) = w$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq14.png) maps
    an edge to its weight and function !['
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq14.png) 将边映射到其权重和函数
    !['
- en: $$T\left (e\right ) = t$$
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: $$T\left (e\right ) = t$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq15.png) maps
    an edge to its timestamp. Our principal goal is to learn an embedding function
    !['
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq15.png) 将边映射到其时间戳。我们的主要目标是学习一个嵌入函数
    !['
- en: $$\Phi :V\rightarrow \mathbb {R}^d$$
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: $$\Phi :V\rightarrow \mathbb {R}^d$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq16.png) (*d* ≪|*V* |)
    which preserves original network information.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq16.png) (*d* ≪|*V* |)
    以保留原始网络信息。'
- en: 'The purpose of learned representations is to include node similarity, as well
    as temporal and weighting properties specifically for financial transaction networks,
    which can improve predictive performance on downstream machine learning tasks.
    The proposed method T-EDGE can learn dynamic node representations more appropriately
    and meaningfully using a general embedding framework consisting of two main parts:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 学习到的表示的目的包括节点相似性，以及针对金融交易网络的时间和加权属性，这可以提高下游机器学习任务的预测性能。所提出的 T-EDGE 方法可以更适当和有意义地使用包含两个主要部分的通用嵌入框架来学习动态节点表示：
- en: '1.'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: The first part is the temporal walk generator with the temporal restriction
    and walking strategies.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一部分是有时间限制的随机游走生成器以及行走策略。
- en: '2.'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: The second part is the update process based on skip-gram, and the parameters
    are updated by Stochastic Gradient Descent algorithm.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二部分是基于跳字法的更新过程，参数通过随机梯度下降算法进行更新。
- en: 3.4.1.1 Random Walk
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.1.1 随机游走
- en: For scalable network representation learning, random walk mechanism has been
    widely proven to be an effective technique to capture structural relationships
    between nodes (Perozzi et al. [2014](#CR23)). Taking the temporal dependencies
    and multiplicity of edges into consideration, we adopt a temporal walk for transaction
    networks. This kind of random walk sequences contains the actual meaning of capital
    flow in transaction networks. In a temporal weighted multidigraph, the *temporal
    walk* defined as sequential incremental path from the beginning node to the end
    node. Such a temporal walk is represented as a sequence of *l* nodes *walk* [*n*] = {*v*
    [1], *v* [2], …, *v* [*l*]} together with a sequence of ![
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: $$\left (l - 1\right )$$
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq17.png) edges
    *walk* [*e*] = {*e* [1], *e* [2], …, *e* [*l*−1]}, where !['
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: $$Src\left (e_i\right )=v_i$$
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq18.png), !['
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: $$Dst\left (e_i\right ) = v_{i + 1}$$
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq19.png) !['
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: $$\left (1\leq i \leq \left (l - 1\right )\right )$$
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq20.png), and
    !['
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: $$T\left (e_i\right )\leq T\left (e_{i + 1}\right )$$
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq21.png) !['
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: $$\left (1\leq i \leq \left (l - 2\right )\right )$$
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq22.png). This
    temporal limit is a novel idea designed for the temporal walk.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: Consider a temporal walk that just traversed edge *e* [*i*−1], and is now stopping
    at node *v* [*i*] at time ![
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: $$t = T\left (e_{i - 1}\right )$$
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq23.png). The
    next node *v* [*i*+1] of the random walk is decided by selecting a temporally
    valid edge *e* [*i*]. We define the *temporal edge neighborhood* for a node *u*
    as !['
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: $$N_t\left (u\right ) = \{ e~|~Src\left (e\right ) = u, T\left (e\right )\geq
    t \} $$
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq24.png). Let
    !['
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '$$\eta _-: \mathbb {R}\rightarrow \mathbb {Z}^+$$'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq25.png) to be
    a function that maps the timestamps of edges to a descending ranking, and let
    !['
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: $$\eta _+:\mathbb {R}\rightarrow \mathbb {Z}^+$$
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq26.png) be a
    function that maps the timestamps of edges to an ascending ranking. Here are our
    walking strategies used in Ethereum transaction network embedding as a example:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: T-EDGEIn our temporal weighted multidigraphs discussed here, a random walk generator
    of T-EDGE samples uniformly from the neighbors. All candidate edges in *N* [*t*]
    have the same probability to be selected as the next edge of random walk. The
    expression of the probability is![
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} P(e)=\frac{1}{|N_t(v_i)|}. \end{aligned} $$
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ1.png)(3.1)T-EDGE
    (TBS)TBS refers to Temporal Biased Sampling. For financial transaction networks,
    the similarity between accounts is time-dependent and dynamic. Naturally, there
    is a strong correlation between frequently transaction accounts. The probability
    of selecting each edge *e* ∈ *N* [*t*](*v* [*i*]) can be given as:!['
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ1.png)(3.1)T-EDGE
    (TBS)TBS指的是时间偏置采样。对于金融交易网络，账户之间的相似性是时间依赖的和动态的。自然而然，频繁交易账户之间存在很强的相关性。选择每个边 *e*
    \(\in\) *N* [*t*](*v* [*i*]) 的概率可以给出为：!['
- en: $$\displaystyle \begin{aligned} P(e)=P_{TBS}(e)=\frac{\eta_-(T(e))}{\sum_{e'\in
    N_t(v_i)}~\eta_-(T(e'))}. \end{aligned} $$
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P(e)=P_{TBS}(e)=\frac{\eta_-(T(e))}{\sum_{e'\in
    N_t(v_i)}~\eta_-(T(e'))}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ2.png)(3.2)T-EDGE
    (WBS)WBS refers to Weighted Biased Sampling. The weight value of each transaction
    indicates the importance of interactions between the two accounts involved. The
    transaction amount can reflect the importance of transactions between accounts
    and then can reflect the degree of correlation between accounts. In most cases,
    there is a great similarity between accounts with large number of transactions.
    The probability of each edge *e* ∈ *N* [*t*](*v* [*i*]) being selected is!['
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ2.png)(3.2)T-EDGE
    (WBS)WBS指的是加权偏置采样。每个交易的权重值表示涉及两个账户之间交互的重要性。交易金额可以反映账户间交易的重要性，进而可以反映账户之间的相关程度。在大多数情况下，交易数量较多的账户之间存在很大的相似性。每个边
    *e* \(\in\) *N* [*t*](*v* [*i*]) 被选择的概率是!['
- en: $$\displaystyle \begin{aligned} P(e)=P_{WBS}(e)=\frac{\eta_+(W(e))}{\sum_{e'\in
    N_t(v_i)} \eta_+(W(e'))}. \end{aligned} $$
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P(e)=P_{WBS}(e)=\frac{\eta_+(W(e))}{\sum_{e'\in
    N_t(v_i)} \eta_+(W(e'))}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ3.png)(3.3)T-EDGE
    (TBS+ WBS)We combine the aforementioned sampling probabilities considering information
    from both temporal and weighted domains by!['
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3'
- en: $$\displaystyle \begin{aligned} P_{TBS+WBS}(e) = P_{TBS}(e)^\alpha P_{WBS}(e)^{(1-\alpha)}
    , (0\leq\alpha\leq1), \end{aligned} $$
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P_{TBS+WBS}(e) = P_{TBS}(e)^\alpha P_{WBS}(e)^{(1-\alpha)}
    , (0\leq\alpha\leq1), \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ4.png)(3.4)!['
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ4.png)(3.4)!['
- en: $$\displaystyle \begin{aligned} P(e)=\frac{P_{TBS+WBS}(e)}{\sum_{e'\in N_t(v_i)}
    P_{TBS+WBS}(e')}, \end{aligned} $$
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P(e)=\frac{P_{TBS+WBS}(e)}{\sum_{e'\in N_t(v_i)}
    P_{TBS+WBS}(e')}, \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ5.png)(3.5)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ5.png)(3.5)'
- en: for ∀*e* ∈ *N* [*t*](*v* [*i*]). Here *α* = 0.5 is the default value for balancing
    between TBS (time domain) and WBS (amount domain).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 对 ∀*e* \(\in\) *N* [*t*](*v* [*i*]). 这里 *α* \(= 0.5\) 是平衡TBS（时间域）和WBS（金额域）之间的默认值。
- en: When ending up with a leaf node, we return the walk immediately.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当结束到一个叶节点时，我们立即返回该路径。
- en: Note that for temporal and directed multigraphs such as transaction networks,
    T-EDGE can be regarded as a specific version of DeepWalk. As Table [3.2](#Tab2)
    shows, T-EDGE is equally likely to select all candidate edges (temporal successive
    edges). T-EDGE (TBS) and T-EDGE (WBS) represent adding sampling preference on
    the time domain and the amount domain respectively while T-EDGE (TBS+WBS) denotes
    to add sampling preference on both the time domain and the amount domain.Table
    3.2
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，对于像交易网络这样的时序有向图，T-EDGE可以被视为深度游走的一个特定版本。如表 [3.2](#Tab2) 所示，T-EDGE同样可能选择所有候选边（时序连续边）。T-EDGE
    (TBS) 和 T-EDGE (WBS) 分别表示在时间域和金额域上添加采样偏好，而 T-EDGE (TBS+WBS) 表示在时间域和金额域上都添加采样偏好。表
    3.2
- en: Four types of T-EDGE variation for Ethereum transaction network
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊交易网络的四种T-EDGE变种
- en: '|   | Time domain | Amount domain |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '|    | 时间域 | 金额域 |'
- en: '| --- | --- | --- |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Algorithms | Unbiased | Biased | Unbiased | Biased |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 算法 | 无偏 | 有偏 | 无偏 | 有偏 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| T-EDGE | *√* |   | *√* |   |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE | *√* |    | *√* |    |'
- en: '| T-EDGE (TBS) |   | *√* | *√* |   |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE (TBS) |    | *√* | *√* |    |'
- en: '| T-EDGE (WBS) | *√* |   |   | *√* |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE (WBS) | *√* |    |    | *√* |'
- en: '| T-EDGE (TBS+WBS) |   | *√* |   | *√* |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE (TBS+WBS) |    | *√* |    | *√* |'
- en: 3.4.1.2 Learning Process
  id: totrans-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.1.2 学习过程
- en: In the above subsection, we have described the method to obtain the sampling
    sequence of temporal walk related to time and weight. In this section, we will
    formally use skip-gram model to describe the process of learning node vectors
    (Mikolov et al. [2013a](#CR20),[b](#CR21)).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个子节中，我们已经描述了获得与时间和权重相关的时间步序列的采样方法。本节将正式使用跳字模型来描述学习节点向量的过程（Mikolov 等 [2013a](#CR20),[b](#CR21)）。
- en: The essence of skip-gram model is a three-layer neural network model, including
    input layer, hidden layer, and output layer. First, we train a neural network
    model based on the sampling walk sequences; however, the purpose of training is
    not to use the model to predict the test set, but to use the parameters learned
    from the model, namely the hidden layer parameters, as the node vectors. Then,
    the node representations can be learned by maximizing the probability of observing
    the neighborhood of a node conditioned on its embedding by making an analogy between
    natural language sentence and truncated random walk sequence (as shown in Table
    [3.3](#Tab3)). This cost function is as followed:![
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '| 研究领域 | 示例 | 输入 | 输出 |'
- en: $$\displaystyle \begin{aligned} \min_{\Phi} -\Pr(\{v_{i-k}, \ldots, v_{i+k}\}
    \backslash v_i | \Phi(v_i)), \end{aligned} $$
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \min_{\Phi} -\Pr(\{v_{i-k}, \ldots, v_{i+k}\}
    \backslash v_i | \Phi(v_i)), \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ6.png)(3.6)Table
    3.3'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ6.png)(3.6)表
    3.3'
- en: The comparison between language model word2vec and graph model Deepwalk
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 词模型 word2vec 与图模型 Deepwalk 之间的比较
- en: '| Research domain | Example | Input | Output |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq26.png) 的计算。该概率是!['
- en: '| --- | --- | --- | --- |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Natural language processing | word2vec | Sequence of word (sentences) | Word
    vectors |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: 自然语言处理 | word2vec | 序列词（句子） | 词向量 |
- en: '| Graph representation learning | deepwalk | Sequence of nodes (random walks)
    | Node vectors |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: 图表示学习 | deepwalk | 序列节点（随机游走） | 节点向量 |
- en: where *k* is the window size. According to the conditional independent assumption
    in skip-gram model, we have:![
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *k* 是窗口大小。根据跳字模型中的条件独立假设，我们有：![
- en: $$\displaystyle \begin{aligned} \Pr(\{v_{i-k}, \ldots, v_{i+k}\} \backslash
    v_i | \Phi(v_i)) = \prod_{j=i-k, j\neq i}^{i+k}~\Pr(v_j|\Phi(v_i)). \end{aligned}
    $$
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 跳字模型的本质是一个三层神经网络模型，包括输入层、隐藏层和输出层。首先，我们基于采样行走序列训练一个神经网络模型；然而，训练的目的并不是使用该模型来预测测试集，而是使用模型学到的参数，即隐藏层参数，作为节点向量。然后，通过最大化条件概率来学习节点表示，该概率是观察到一个节点的
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ7.png)(3.7)Similar
    to DeepWalk, we employ “hierarchical softmax” technique (Perozzi et al. [2014](#CR23))
    to accelerate the computation of !['
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ7.png)(3.7)与
    DeepWalk 类似，我们采用“分层 softmax”技术（Perozzi 等 [2014](#CR23)）来加速 !['
- en: $$\Pr (v_j|\Phi (v_i))$$
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: $$\Pr (v_j|\Phi (v_i))$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq27.png). We
    first apportion |*V* | nodes to the leaf nodes of a Huffman Tree, and then transform
    the computation of !['
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq27.png). 我们首先将
    |*V* | 节点分配给哈夫曼树的非叶节点，然后将 !['
- en: $$\Pr (v_j|\Phi (v_i))$$
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: $$\Pr (v_j|\Phi (v_i))$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq28.png) into
    computing the probability of walking randomly from the root of Huffman Tree with
    inputting node *v* [*i*] and outputting node *v* [*j*]. The probability is!['
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq28.png) 建模为从哈夫曼树的根节点随机行走，输入节点
    *v* [*i*] 并输出节点 *v* [*j*] 的概率计算。概率是!['
- en: $$\displaystyle \begin{aligned} \Pr(v_j | \Phi(v_i)) = \prod_{t=1}^{\lceil \log
    |V| \rceil}~\Pr(b_t|\Phi(v_i)), \end{aligned} $$
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \Pr(v_j | \Phi(v_i)) = \prod_{t=1}^{\lceil \log
    |V| \rceil}~\Pr(b_t|\Phi(v_i)), \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ8.png)(3.8)where
    *b* [*t*] is from !['
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ8.png)(3.8)其中
    *b* [*t*] 来自 !['
- en: $$\{ b_0=root, b_1, \ldots , b_{\lceil \log |V| \rceil }=v_j\}$$
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: $$\{ b_0=root, b_1, \ldots , b_{\lceil \log |V| \rceil }=v_j\}$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq29.png). Then
    we model !['
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq29.png). 然后我们将
    !['
- en: $$\Pr (b_t|\Phi (v_i)$$
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: $$\Pr (b_t|\Phi (v_i)$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq30.png) with
    *sigmiod* function:!['
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq30.png) 的计算转换为
    *sigmiod* 函数：!['
- en: $$\displaystyle \begin{aligned} \Pr(b_t|\Phi(v_i)=\frac{1}{1+\exp(-\Phi(v_i)\cdot
    \Phi(b_{t-1}))}, \end{aligned} $$
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \Pr(b_t|\Phi(v_i)=\frac{1}{1+\exp(-\Phi(v_i)\cdot
    \Phi(b_{t-1}))}, \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ9.png)(3.9)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ9.png)(3.9)'
- en: where Φ(*b* [*t*−1]) represents *b* [*t*]’s parent node in the Huffman tree.
    Skip-gram model then updates the weight using back propagation algorithm and Stochastic
    Gradient Descent.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 其中Φ(*b* [*t*−1])表示*b* [*t*]在Huffman树中的父节点。跳过模型然后使用反向传播算法和随机梯度下降更新权重。
- en: Random walk based graph embedding methods have been proved to be scalable and
    effective for large graphs. The time complexity of the temporal walk part and
    the SkipGram learning procedure is *O*(*r*|*V* |*L*) and ![
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 随机游走基于的图嵌入方法已被证明是可扩展且有效的，适用于大型图。时间复杂度的时间游走部分和SkipGram学习过程是*O*(*r*|*V* |*L*)和![
- en: $$O(|V| \log |V|)$$
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: $$O(|V| \log |V|)$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq31.png), respectively,
    where |*V* | is the number of nodes, *r* represents walks per node, and *L* refers
    to the length of random walk.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq31.png)，分别，其中|*V* |是节点数，*r*代表每个节点的游走数，*L*指的是随机游走的长度。'
- en: 3.4.2 Phishing Scam
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4.2 钓鱼诈骗
- en: With the advent of online businesses, phishing scam becomes a new type of cybercrime
    (Liu and Ye [2001](#CR19)). It is reported to account for more than 50% of all
    cyber-crimes in Ethereum since 2017 (Team [2017](#CR26)). In order to evaluate
    the performance of the proposed T-EDGE strategies, we conduct node classification
    experiments on Ethereum to classify labeled phishing nodes and unlabeled nodes
    (treated as unphishing nodes).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 随着在线业务的出现，钓鱼诈骗成为了一种新型网络犯罪（刘和叶[2001]）。据报告，自2017年以来，以太坊超过50%的所有网络犯罪都是钓鱼诈骗（团队[2017]）。为了评估所提出的T-EDGE策略的性能，我们在以太坊上进行了节点分类实验，以将标记的钓鱼节点和未标记的节点（视为非钓鱼节点）进行分类。
- en: 3.4.2.1 Data Acquisition
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.2.1 数据获取
- en: To train our node classification model using supervised learning, we obtain
    445 phishing nodes labeled by Etherscan with the same number of randomly selected
    unlabeled nodes as the objective nodes.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用监督学习训练我们的节点分类模型，我们获得了由Etherscan标记的445个钓鱼节点，以及与目标节点相同数量的随机选择的未标记节点。
- en: As Sect. [3.3](#Sec5) has shown, *K*-order sampling is an effective method to
    obtain the local information of an objective accounts (Lin et al. [2020](#CR18)).
    We assume that for a typical *Ether* transfer flow centered on a phishing node,
    the previous node of the phishing node may be a victim, and the next one to three
    nodes may be the bridge nodes with money laundering behaviors. Therefore, we collect
    subgraphs with *K*-in = 1, *K*-out = 3 for each of the 890 objective nodes and
    then splice them into a large-scale network with 86,623 nodes.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如第[3.3](#Sec5)节所示，*K*阶采样是一种有效的方法，用于获取目标账户的局部信息（林等人[2020]）。我们假设对于一个典型的以以太坊为中心的钓鱼节点的转账流，钓鱼节点的上一个节点可能是受害者，接下来的一到三个节点可能是具有洗钱行为的桥梁节点。因此，我们收集了*K*个目标节点的子图，*K*个目标节点的子图，然后将它们拼接成一个包含86,623个节点的的大型网络。
- en: 3.4.2.2 Setting
  id: totrans-187
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.2.2 设置
- en: 'In the experiments, we compare the proposed T-EDGE algorithms with two baseline
    random walk based graph embedding methods:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验中，我们将提出的T-EDGE算法与两种基线随机游走基于图嵌入方法进行了比较：
- en: '1.'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: '**DeepWalk** is the pioneer work in employing random walks to learn a latent
    space representation of social interactions. Borrowing the idea of word2vec, the
    learned representation encodes community structure so it can be easily exploited
    by standard classification methods (Perozzi et al. [2014](#CR23)).'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**DeepWalk**是利用随机游走学习社交互动的潜在空间表示的先驱工作。借鉴了word2vec的思想，学到的表示编码了社区结构，因此可以很容易地被标准分类方法利用（Perozzi等人[2014]）。'
- en: '2.'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: '**Node2vec** further exploits a flexible neighborhood sampling strategy, that
    is, Breadth-first Sampling (BFS) and Depth-first Sampling (DFS), with parameters
    *p* and *q* to capture both local and global structure (Grover and Leskovec [2016](#CR14)).'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Node2vec**进一步探索了一种灵活的邻域采样策略，即广度优先采样（BFS）和深度优先采样（DFS），参数*p*和*q*捕捉局部和全局结构（Grover和Leskovec[2016]）。'
- en: 'To ensure a fair comparison, we implement the directed version of DeepWalk
    and node2vec using OpenNE (an open-source package for network embedding, [github.​com/​thunlp/​openne](https://github.com/thunlp/openne)).
    For these random walk based embedding methods, we set several hyperparameters:
    the node embedding dimension *d* = 128, the size of window *k* = 4, the length
    of walk *l* = 10, and walks per node *r* = 4\. For node2vec, we grid search over
    *p*, *q* ∈{0.50, 1.0, 1.5, 2.0} according to Grover and Leskovec ([2016](#CR14)).
    For DeepWalk, we set *p* = *q* = 1.0 as it is a special case of node2vec. We implement
    the Skip-gram model by using a Python library named Gensim (Rehurek and Sojka
    [2010](#CR24)), a framework for fast Vector Space Modeling.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保公平比较，我们实现了DeepWalk的有向版本和node2vec，使用了OpenNE（一个开源的网络嵌入包，[github.​com/​thunlp/​openne](https://github.com/thunlp/openne)）。对于这些基于随机游走的嵌入方法，我们设置了一些超参数：节点嵌入维度
    *d* = 128，窗口大小 *k* = 4，游走长度 *l* = 10，每个节点的游走数 *r* = 4\。对于node2vec，我们根据Grover和Leskovec([2016](#CR14))在
    *p*, *q* ∈{0.50, 1.0, 1.5, 2.0} 上进行网格搜索。对于DeepWalk，我们将其设置为 *p* = *q* = 1.0，因为它是对node2vec的一个特例。我们使用一个名为Gensim的Python库（Rehurek和Sojka[2010](#CR24)）实现Skip-gram模型，这是一个用于快速向量空间建模的框架。
- en: 3.4.2.3 Metrics
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.2.3 指标
- en: To make the comprehensively, we randomly select {50%, 60%, 70%, 80%} of objective
    nodes as training set and the remaining objective nodes as test set respectively.
    We use the training set to train a classic binary classifier, namely, Support
    Vector Machine (SVM), and then use it to classify the samples of the test set.
    Note that we use fivefold cross validation to train the classifier and evaluate
    it on the test set.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保全面理解，我们随机选择{50%，60%，70%，80%}的目标节点作为训练集，其余的目标节点作为测试集。我们使用训练集来训练一个经典的双分类器，即支持向量机（SVM），然后用它来分类测试集的样本。注意我们用五折交叉验证来训练分类器并在测试集上评估它。
- en: For a binary classification task based on a supervised learning framework, it
    can be divided into the following four cases according to the actual labels of
    the samples and the prediction results of the classifier.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于监督学习框架的二分类任务，可以根据实际样本标签和分类器的预测结果分为以下四种情况。
- en: '1.'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'True Positive (TP): Samples whose labels are positive and also predicted to
    be positive.'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 真阳性（TP）：标签为阳且被预测为阳性的样本。
- en: '2.'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'True Negative (TN): Samples whose labels are positive but predicted to be negative.'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 真阴性（TN）：标签为阳但被预测为阴性的样本。
- en: '3.'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'False Positive (FP): Samples whose labels are negative but predicted to be
    positive.'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假阳性（FP）：标签为阴但被预测为阳性的样本。
- en: '4.'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'False Negative (FN): Samples whose labels are negative and also predicted to
    be positive.'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假阴性（FN）：标签为负且被预测为阳性的样本。
- en: In classification tasks, micro-F1 (Mi-F1) and macro-F1 (Ma-F1) are generally
    used to evaluate classification accuracy. First we have
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在分类任务中，微F1（Mi-F1）和宏F1（Ma-F1）通常用于评估分类准确性。首先我们有
- en: '1.'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Precision: !['
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 精度：![
- en: $$ \frac {TP}{TP+FP}$$
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $$ \frac {TP}{TP+FP}$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq32.png)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq32.png)'
- en: '2.'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Recall: !['
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 召回率：![
- en: $$ \frac {TP}{TP+FN}$$
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $$ \frac {TP}{TP+FN}$$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq33.png)'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq33.png)'
- en: F1-score is an indicator used to measure the accuracy of the binary classification
    model. The calculation formula is![
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: F1分数是衡量二分类模型准确性的指标。计算公式是![
- en: $$\displaystyle \begin{aligned} 2 \times \frac{precision\times recall }{precision
    + recall}. \end{aligned} $$
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} 2 \times \frac{precision\times recall }{precision
    + recall}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ10.png)(3.10)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ10.png)(3.10)'
- en: Macro-F1 refers to calculating the total *precision* and *recall* of all categories
    for F1-score, while Micro-F1 refers to the calculation of F1-score after calculating
    the average of *precision* and *recall* for each category.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 宏F1指的是计算所有类别的总*精度*和*召回率*的F1分数，而微F1指的是在计算每个类别的*精度*和*召回率*的平均值之后计算F1分数。
- en: 3.4.2.4 Results
  id: totrans-218
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.2.4 结果
- en: The results of micro-F1 (Mi-F1) and Marco-F1 (Ma-F1) are shown in Fig. [3.5](#Fig5).
    According to Fig. [3.5](#Fig5), we have the following observations:![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig5_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig5_HTML.png)
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图[3.5](#Fig5)展示了微F1（Mi-F1）和宏F1（Ma-F1）的结果。根据图[3.5](#Fig5)，我们得出以下观察结果：![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig5_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig5_HTML.png)
- en: Fig. 3.5
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5
- en: Node classification performance with different training ratio
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 不同训练比例下的节点分类性能
- en: '1.'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Our proposed methods T-EDGE, T-EDGE (TBS), T-EDGE (WBS), T-EDGE (TBS+WBS) overwhelmingly
    outperform DeepWalk and node2vec.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们提出的T-EDGE、T-EDGE(TBS)、T-EDGE(WBS)、T-EDGE(TBS+WBS)方法在性能上大幅超越了DeepWalk和node2vec。
- en: '2.'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: Both T-EDGE(TBS) and T-EDGE(WBS) attain better performance than T-EDGE in which
    the random walk generator has uniform probability.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: both T-EDGE(TBS) and T-EDGE(WBS) attain better performance than T-EDGE in which
    the random walk generator has uniform probability.
- en: '3.'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Both T-EDGE(TBS) and T-EDGE(WBS) perform better than T-EDGE(TBS+ WBS) which
    considers both temporal and amount information with parameter *α* = 0.5.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: both T-EDGE(TBS) and T-EDGE(WBS) perform better than T-EDGE(TBS+ WBS) which
    considers both temporal and amount information with parameter *α* = 0.5.
- en: All in all, our proposed methods learn effective node representations combined
    with rich information, which really help us obtain better performance in classification
    task. The result also indicates that time-dependent walks and edge information
    are essential in transaction networks.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，我们提出的方法结合了丰富的信息，有效地学习了节点表示，这确实帮助我们在分类任务中获得更好的性能。结果也表明，在交易网络中，时间依赖的遍历和边信息是必不可少的。
- en: 3.4.3 Link Prediction
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4.3 链接预测
- en: The link prediction problem is to predict the appearance of links in a given
    graph based on the observed information. In this work, we evaluate the performance
    of the proposed T-EDGE method through a temporal directed link prediction task
    based on binary classification.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 链接预测问题是在给定图的基础上，根据观察到的信息预测链接的出现。在这项工作中，我们通过基于二分类的时序有向链接预测任务来评估所提出T-EDGE方法的表现。
- en: 3.4.3.1 Data Acquisition
  id: totrans-231
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.3.1 数据获取
- en: To do the link prediction, we obtain three subgraphs with different size for
    experiments from Ethereum. EthereumG1 is centered by account “0x51faeda318982f439e
    800-12fb45d2b01-7ddccdbe” with *K*-in = *K*-out = 3; EthereumG2 is centered by
    account “0x5e247060f48eeb64367250ed03ff5091bba47fd1” with *K*-in = *K*-out = 4;
    and EthereumG3 is centered by account same as EthereumG1 with *K*-in = *K*-out = 4\.
    The summary of the dataset is listed in Table [3.4](#Tab4).Table 3.4
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行链接预测，我们从以太坊获取了三个不同大小的子图用于实验。以太坊G1以账户“0x51faeda318982f439e 800-12fb45d2b01-7ddccdbe”为中心，*K*-in=*K*-out=3；以太坊G2以账户“0x5e247060f48eeb64367250ed03ff5091bba47fd1”为中心，*K*-in=*K*-out=4；以太坊G3与以太坊G1相同，以账户为中心，*K*-in=*K*-out=4。数据集的总结列于表[3.4](#Tab4)中。表3.4
- en: Statistics of datasets used in link prediction problem
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接预测问题的数据集统计
- en: '|   | Current network | Node pairs split for classification |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '|  | 当前网络 | 用于分类的节点对划分 |'
- en: '| --- | --- | --- |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Dataset | &#124;*V* &#124; | &#124;*E′*&#124; | #train | #test | #test/train
    |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 数据集 | &#124;*V* &#124; | &#124;*E′*&#124; | #train | #test | #test/train
    |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| EthereumG1 | 3832 | 208927 | 13658 | 1140 | 8.35% |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G1 | 3832 | 208927 | 13658 | 1140 | 8.35% |'
- en: '| EthereumG2 | 10628 | 208533 | 26958 | 7510 | 27.86% |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G2 | 10628 | 208533 | 26958 | 7510 | 27.86% |'
- en: '| EthereumG3 | 26175 | 677785 | 66102 | 11502 | 17.40% |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| 以太坊G3 | 26175 | 677785 | 66102 | 11502 | 17.40% |'
- en: Firstly, we sort all the collected edges based on their timestamps and presume
    that the earlier edges *E′* (with a smaller timestamp) as the known links, and
    *V* denotes the nodes which are involved in *E′*. The current network *G* = (*V*,
    *E′*) is formed by node set *V* and edge set *E′*. Then we can use graph embedding
    methods to learn node representations of the current network Φ(*v*) for ∀*v* ∈ *V* .
    Secondly, node pairs (*src*, *dst*) existing in *E′* are used as positive samples
    of the training set in the binary classifier. Then the negative samples are the
    equal number of node pairs which are randomly selected. We obtain features of
    a directed link from nodes *v* [*i*] to *v* [*j*] by concatenating their node
    embeddings, that is, *F* [*i*,*j*] = [ Φ(*v* [*i*]), Φ(*v* [*j*])]. If *i* = *j*,
    *F* [*i*,*j*] = *F* [*j*,*i*]. Finally, we train a support vector classifier to
    classify the links in the test set, whose positive samples are the residue links
    (with a larger timestamp).
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们根据时间戳对所有收集的边进行排序，假设较早的边*E′*（时间戳较小）为已知的链接，*V*表示参与*E′*的节点集合。当前网络*G*=(*V*,
    *E′*)由节点集*V*和边集*E′*组成。然后我们可以使用图嵌入方法来学习当前网络*G*的节点表示Φ(*v*)对于任意的*v*∈*V*。其次，存在于*E′*中的节点对(*src*,
    *dst*)作为二分类器训练集中的正样本。然后随机选择相同数量的节点对作为负样本。我们从节点*v* [*i*]到*v* [*j*]的有向链接的特征通过连接它们的节点嵌入获得，即*F*
    [*i*,*j*] = [Φ(*v* [*i*]), Φ(*v* [*j*])]。如果*i* = *j*, *F* [*i*,*j*] = *F* [*j*,*i*]。最后，我们训练一个支持向量分类器来分类测试集中的链接，其正样本为剩余链接（时间戳较大）。
- en: 3.4.3.2 Setting
  id: totrans-242
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.3.2 设置
- en: 'In experiments, we compared the proposed T-EDGE with two baseline random walk
    based graph embedding methods, DeepWalk (Perozzi et al. [2014](#CR23)) and node2vec
    (Grover and Leskovec [2016](#CR14)). To ensure the fairness of the comparison,
    we implement the directed version of DeepWalk and node2vec using OpenNE (THUNLP
    [2017](#CR27)), an open source toolkit for graph embedding. For these random walk
    based embedding methods, we have several hyperparameters: the node embedding dimension
    *d*, the size of window *k*, the length of walk *l*, and walks per node *r*. Generally,
    we set *d* = 128, and *k* = 4\. Specifically, we set *r* = 20, *l* = 10 for EthereumG1,
    *r* = 10, *l* = 10 for EthereumG2, *r* = 10, *l* = 20 for EthereumG3\. For node2vec,
    we grid search over *p*, *q* ∈ 0.50, 1.0, 1.5, 2.0\. For DeapWalk, we set *p* = *q* = 1.0
    as it is a special case of node2vec.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验中，我们将提出的T-EDGE与两种基于随机游走的图嵌入基线方法进行了比较：DeepWalk（Perozzi等人[2014](#CR23)）和node2vec（Grover和Leskovec[2016](#CR14))。为确保比较的公平性，我们使用OpenNE（THUNLP[2017](#CR27)）实现了DeepWalk的有向版本和node2vec，这是一个用于图嵌入的开源工具包。对于这些基于随机游走的嵌入方法，我们有几个超参数：节点嵌入维度*d*、窗口大小*k*、游走长度*l*以及每个节点的游走次数*r*。通常，我们设置*d*=128，*k*=4。具体来说，对于以太坊G1，我们设置*r*=20，*l*=10；对于以太坊G2，*r*=10，*l*=10；对于以太坊G3，*r*=10，*l*=20。对于node2vec，我们对*p*、*q*∈0.50、1.0、1.5、2.0进行了网格搜索。对于DeapWalk，我们将其设置为*p*=*q*=1.0，因为它是对node2vec的一个特例。
- en: 3.4.3.3 Results
  id: totrans-244
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.3.3 结果
- en: 'The performance of various methods on temporal directed link prediction is
    compared in terms of area under curve (AUC) and average precision (AP), which
    is shown in Table [3.5](#Tab5). For a clearer explanation, we only demonstrate
    two extreme sampling strategies of proposed algorithm: T-EDGE, which does not
    apply any bias, and T-EDGE (TBS+WBS), which combines biases from both time-domain
    and amount-domain with default *α* = 0.5\. According to Table [3.5](#Tab5), we
    have got the observations as follow: (1) T-EDGE without any bias overwhelmingly
    outperforms DeepWalk and node2vec, which manifests that for analysis and understanding
    of financial transaction networks, the temporal information as well as the multiplicity
    characteristic of edges in TWMDG is very significant and meaningful; (2) with
    biases of both time and amount domains, TEDGE (TBS+WBS) attains better performance
    than unbiased T-EDGE, which demonstrates that the abundant information in time
    and amount domains is indeed helpful for us to obtain a more comprehensive representation
    for predictive tasks.Table 3.5'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在时序有向链接预测方面，各种方法的性能通过曲线面积（AUC）和平均精度（AP）进行了比较，如表[3.5](#Tab5)所示。为了更清晰的解释，我们只展示了算法的两种极端采样策略：T-EDGE，不应用任何偏差，以及T-EDGE
    (TBS+WBS)，它结合了时间域和数量域的偏差，默认*α*=0.5。根据表[3.5](#Tab5)，我们得出以下观察结果：(1) 不带任何偏差的T-EDGE明显优于DeepWalk和node2vec，这表明对于金融交易网络的分析与理解，时间信息以及TWMDG中边的多重特性非常重要且有意义；(2)
    带有时间和数量域偏差的TEDGE (TBS+WBS)的性能优于无偏差的T-EDGE，这证明了时间和数量域的丰富信息确实有助于我们获得更全面的预测任务表示。表3.5
- en: Performances of different methods for link prediction
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 不同方法在链接预测中的性能
- en: '|   | EthereumG1 | EthereumG2 | EthereumG3 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '|  | 以太坊G1 | 以太坊G2 | 以太坊G3 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Metrics(%) | AUC | AP | AUC | AP | AUC | AP |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| 指标(%) | AUC | AP | AUC | AP | AUC | AP |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| DeepWalk | 82.71 | 76.69 | 85.91 | 82.13 | 79.92 | 77.72 |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| DeepWalk | 82.71 | 76.69 | 85.91 | 82.13 | 79.92 | 77.72 |'
- en: '| node2vec | 83.03 | 76.94 | 86.30 | 82.47 | 82.20 | 79.99 |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| node2vec | 83.03 | 76.94 | 86.30 | 82.47 | 82.20 | 79.99 |'
- en: '| T-EDGE | 87.73 | 83.73 | 92.85 | 90.29 | 93.00 | 90.78 |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE | 87.73 | 83.73 | 92.85 | 90.29 | 93.00 | 90.78 |'
- en: '| T-EDGE(TBS+WBS) | **89**.**55** | **85**.**58** | **93**.**36** | **90**.**94**
    | **93**.**83** | **91**.**89** |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| T-EDGE(TBS+WBS) | **89**.**55** | **85**.**58** | **93**.**36** | **90**.**94**
    | **93**.**83** | **91**.**89** |'
- en: 'In order to further illustrate the advantages of T-EDGE methods, we compares
    the performance of the embedding methods on EthereumG1 with varying value of node
    embedding dimension *d*, walk length *h*, walks per node *l*, and window size
    *k*. Results in Fig. [3.6](#Fig6) point out: (1) T-EDGE with or without additional
    biases consistently is always better than DeepWalk and node2vec under different
    conditions of *k*, *l*, *r*; (2) DeepWalk and node2vec are more sensitive to two
    hyperparameters, walk length *l* and walks per node *r*, while T-EDGE methods
    can always achieve satisfactory results with a wide variance of both *l* and *r*;
    (3) interestingly, with the increase of *d*, the performance of T-EDGE methods
    monotonically improves, while the performance of DeepWalk and node2vec decreases
    as *d* exceeds 64, which implies that T-EDGE methods can embed more useful information
    and thus for data representation it requires a larger value of *d*.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig6_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig6_HTML.png)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步说明T-EDGE方法的优点，我们在EthereumG1上比较了节点嵌入维度*d*、步行长度*h*、每个节点的步行数*l*和窗口大小*k*变化的嵌入方法的性能。图[3.6](#Fig6)的结果指出：（1）无论在*k*、*l*、*r*的不同条件下，T-EDGE带或不带额外偏差始终优于DeepWalk和node2vec；（2）DeepWalk和node2vec对两个超参数，步行长度*l*和每个节点的步行数*r*更敏感，而T-EDGE方法可以在*l*和*r*的宽范围内变化，始终取得满意的结果；（3）有趣的是，随着*d*的增加，T-EDGE方法的性能单调提高，而DeepWalk和node2vec的性能在*d*超过64时随着*d*的增加而降低，这表明T-EDGE方法可以嵌入更多有用的信息，因此对于数据表示，需要*d*的较大值。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig6_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig6_HTML.png)
- en: Fig. 3.6
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6
- en: Performance in terms of Area Under Curve (AUC) under varying hyperparameters,
    when (**a**) fixing *l* = 10, *r* = 20, *d* = 128, and varying *k* from 2 to 8;
    (**b**) fixing *k* = 4, *r* = 20, *d* = 128, and varying *l* from 4 to 10; (**c**)
    fixing *k* = 4, *l* = 10, *d* = 128, and varying *r* from 8 to 20; (**d**) fixing
    *k* = 4, *l* = 10, *r* = 20, and varying *d* from 8 to 256
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在变化超参数下的性能，当（**a**）固定*l*=10、*r*=20、*d*=128，变化*k*从2到8；（**b**）固定*k*=4、*r*=20、*d*=128，变化*l*从4到10；（**c**）固定*k*=4、*l*=10、*d*=128，变化*r*从8到20；（**d**）固定*k*=4、*l*=10、*r*=20，变化*d*从8到256
- en: To further look into the sampling strategies of T-EDGE methods, we provide results
    of all possible combinations of different biases in both time and amount domains.
    Figure [3.7](#Fig7) shows that averagely, biased methods T-EDGE (TBS), TEDGE (WBS),
    and T-EDGE (TBS+WBS) outperform the unbiased method T-EDGE; adding bias in both
    temporal and weighted domain methods T-EDGE (TBS+WBS) surpass adding only one
    bias methods T-EDGE (TBS) and T-EDGE(WBS).![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig7_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig7_HTML.png)
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步研究T-EDGE方法的采样策略，我们提供了不同偏差在时间和数量领域所有可能的组合的结果。图[3.7](#Fig7)显示，平均而言，有偏方法T-EDGE（TBS）、TEDGE（WBS）和T-EDGE（TBS+WBS）优于无偏方法T-EDGE；在时间和加权域方法T-EDGE（TBS+WBS）中添加偏差，超越了仅添加一个偏差的方法T-EDGE（TBS）和T-EDGE（WBS）。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig7_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig7_HTML.png)
- en: Fig. 3.7
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7
- en: Heat map of Area Under Curve (%) for link prediction using proposed T-EDGE with
    different combinations of strategies
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链路预测的提出T-EDGE不同策略组合的热图（%）
- en: 3.4.4 Transaction Tracking on Blockchain
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4.4 区块链上的交易追踪
- en: The emergence of blockchain provides an ideal solution to solve the trust problems
    and achieving efficient collaboration in the digital world. It is well known that
    the industry has special expectations for blockchain as a new application scenario
    of Internet infrastructure. However, various types of cybercrime have also arisen
    on the blockchain ecosystem in recent years. Criminals take advantage of the anonymity
    of blockchain to evade supervision and engage in money laundering, smuggling,
    and other illegal activities. For instance, Bitcoin is reported to be involved
    in a number of illegal transactions on the dark web marketplaces, for example,
    “Silk Road,” which hided a lot of drug dealing, assassinations, and other crimes
    (ElBahrawy et al. [2019](#CR11)). Besides, for Ethereum which supports the functionality
    of smart contracts, more types of cybercrimes have been reported, such as exploits,
    hacks, phishing, and ponzi schemes (Chen et al. [2018b](#CR7); Ethereum).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的出现为解决数字世界中的信任问题并提供高效的协作提供了一个理想的解决方案。众所周知，该行业对区块链作为互联网基础设施的新应用场景抱有特殊的期望。然而，近年来在区块链生态系统中也出现了各种网络犯罪。犯罪分子利用区块链的匿名性逃避监管，从事洗钱、走私和其他非法活动。例如，比特币据称参与了暗网市场上的许多非法交易，例如“丝绸之路”，隐藏了大量的毒品交易、暗杀和其他犯罪（ElBahrawy等人[2019](#CR11)）。此外，对于支持智能合约功能的以太坊，已经报道了更多类型的网络犯罪，例如利用漏洞、黑客攻击、钓鱼和庞氏骗局（Chen等人[2018b](#CR7);
    以太坊）。
- en: Due to the rise of cybercrimes on blockchain systems, *transaction tracking*
    of cryptocurrencies has become an increasingly urgent issue. The past few years
    have witnessed a rise in a series of well-known projects and companies in the
    field of transaction tracking on the blockchain, such as Chainalysis, Ethereum,
    and CipherTrace. Transaction tracking is an interesting and important issue for
    regulators, cryptocurrency exchanges, as well as investors. For regulators, transaction
    tracking can assist them to identify fraud gangs, trace the capital flow, retrieve
    the stolen money, and improve the regulatory system. For example, it is reported
    that Chainalysis has helped the FBI identify two agents on corruption charges
    of stealing bitcoin from an online drug market operator (O’Neill [2017](#CR22)).
    While for cryptocurrency exchanges, transaction tracking improves their capabilities
    of know your transaction (KYT) and anti-money laundering (AML), and thus better
    understand the market and ensure that the rights of law-abiding users are not
    affected. Besides, for ordinary investors or cryptocurrency companies, they can
    employ the results of transaction tracking to check whether some funds or transactions
    have been associated with illegal identities or polluted by traveling through
    suspicious paths, which prevents the withdrawals to blacklisted addresses.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块链系统上网络犯罪的出现，*加密货币的交易追踪*已经成为一个日益紧迫的问题。过去几年见证了一系列知名项目和公司在这个领域的兴起，如Chainalysis、以太坊和CipherTrace。交易追踪对于监管机构、加密货币交易所和投资者来说是一个有趣且重要的问题。对于监管机构来说，交易追踪可以帮助他们识别欺诈团伙，追踪资金流向，追回被盗资金，并改进监管体系。例如，据报道，Chainalysis帮助FBI识别了两名被指控从在线毒品市场运营商那里窃取比特币的代理人（O’Neill[2017](#CR22)）。而对于加密货币交易所，交易追踪提高了他们的了解你的交易（KYT）和反洗钱（AML）的能力，从而更好地了解市场，确保遵守法律的用户的权益不受影响。此外，对于普通投资者或加密货币公司，他们可以利用交易追踪的结果来检查某些资金或交易是否与非法身份有关或通过可疑路径被污染，这防止了提现到被列入黑名单的地址。
- en: Intuitively, the huge transaction records of cryptocurrencies can be modeled
    as a network for analysis and understanding. Take Ethereum as an example, its
    transaction history can be modeled as a directed transaction network, where a
    node represents an account and an edge connecting two nodes refers to the existence
    of at least one transaction between them. In this work, we study the issue of
    transaction tracking on Ethereum from a network perspective.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 直观地说，加密货币的巨大交易记录可以被建模为一个网络，用于分析和理解。以以太坊为例，其交易历史可以被建模为一个有向交易网络，其中节点代表一个账户，两个节点之间的边表示它们之间至少存在一次交易。在这项工作中，我们从网络的角度研究了以太坊上的交易追踪问题。
- en: Current research on transaction tracing mainly discuss about how to trace the
    capital flow in the past by studying the transaction records, while the problem
    of using past records to predict future transactions are rarely considered. However,
    predicting transaction execution is another way to study transaction tracking
    effectively. Hence in this part, we provide an example of studying the prediction
    facet of transaction tracking on Ethereum, and by this way, also can discover
    the driving factors of Blockchain transaction network evolution.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 当前关于交易追踪的研究主要讨论如何通过研究交易记录来追踪过去的资本流动，而使用过去记录来预测未来交易的问题很少被考虑。然而，预测交易执行是研究交易追踪的另一有效途径。因此，在本部分中，我们提供一个研究以太坊上交易追踪预测方面的例子，并通过这种方式，也可以发现区块链交易网络演化的驱动因素。
- en: In Fig. [3.8](#Fig8), we plot the relationships between transaction tracking,
    network evolution, and link prediction on Ethereum. More details about these three
    issues are discussed as follows.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 [3.8](#Fig8) 中，我们在以太坊上绘制了交易追踪、网络演变和链接预测之间的关系。关于这三个问题，以下详细讨论。
- en: 1.Transaction tracking of cryptocurrency consists of two parts, tracing and
    prediction. The problem of tracing pays attention to how the cryptocurrency accumulated
    and flowed in the past by studying the transaction records. While the problem
    of prediction tries to figure out where the cryptocurrency will go in the future.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig8_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig8_HTML.png)
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1.加密货币的交易追踪包括追踪和预测两部分。追踪问题关注通过研究交易记录来了解加密货币过去如何积累和流动，而预测问题则试图弄清楚加密货币未来将流向何方。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig8_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig8_HTML.png)
- en: Fig. 3.8
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.8
- en: The relations among transaction tracking, network evolution and link prediction
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 交易追踪、网络演变和链接预测之间的关系。
- en: '2.'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'In the field of network science, link prediction and network evolution are
    closely related: The link prediction method provides a quantitative technique
    to evaluate the corresponding evolutionary model, while the mechanism of network
    evolution gives an interpretation to the results of the corresponding link prediction
    model. In addition, link prediction and network evolution can be viewed as analyzing
    the rules of network changes over time from the microscopic and macroscopic perspectives,
    that is, link prediction focuses on predicting the generation of new links in
    the network and network evolution studies the overall change trends of the whole
    network.'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在网络科学领域，链接预测和网络演变密切相关：链接预测方法为相应的演变模型提供了定量技术评估，而网络演变的机制则解释了相应链接预测模型的结果。此外，链接预测和网络演变可以被看作是从微观和宏观角度分析网络随时间变化的规则，即链接预测关注预测网络中新链接的生成，而网络演变研究整个网络的整体变化趋势。
- en: '3.'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Link prediction aims to predict the occurrence of links in a given network on
    the basis of observed information (the existing links are used as the training
    data for learning to predict the future links in the test set). Similarly, transaction
    tracking tries to predict future transactions by mining and extracting information
    from historical records. Thus, it is reasonable to deal with problem of the transaction
    tracking with link prediction techniques from a network perspective.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 链接预测旨在基于观察到的信息（现有链接作为学习预测测试集中的未来链接的训练数据）预测给定网络中链接的发生。同样，交易追踪试图通过从历史记录中挖掘和提取信息来预测未来的交易。因此，从网络角度使用链接预测技术来处理交易追踪问题是有道理的。
- en: '4.'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: Since the cryptocurrency transaction is a kind of financial and social behaviors
    (Alqassem et al. [2020](#CR2)), the transaction patterns are driven by intrinsic
    mechanisms and the transaction networks should exhibit some corresponding evolution
    rules. Therefore, exploring the rules and factors of network evolution can provide
    important insights for designing the cryptocurrency tracking strategies.
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于加密货币交易是一种金融和社会行为（Alqassem 等人 [2020](#CR2)），交易模式是由内在机制驱动的，交易网络应展现出一些相应的演变规则。因此，探索网络演变的规则和因素可以为设计加密货币追踪策略提供重要的洞察。
- en: In consideration of the relationship between link prediction and network evolution,
    we propose a comprehensive framework with supervised link prediction approach
    for transaction network analysis. Besides, we explore how two important factors
    in financial networks, namely, transaction time and transaction amount, impact
    the evolution of Ethereum transaction network. In particular, we discuss the scenarios
    in which the new transaction relationships are more likely to arise, as shown
    in Fig. [3.9](#Fig9).![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig9_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig9_HTML.png)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到链接预测与网络演化之间的关系，我们提出了一种综合框架，采用有监督的链接预测方法对交易网络进行分析。此外，我们还探讨了金融网络中的两个重要因素，即交易时间和交易金额，如何影响以太坊交易网络的演化。特别是，我们讨论了在新的交易关系更可能出现的情况，如图[3.9](#Fig9)所示！[../images/506524_1_En_3_Chapter/506524_1_En_3_Fig9_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig9_HTML.png)
- en: Fig. 3.9
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9
- en: 'A draft of discovering new relationship generation factor in Ethereum transaction
    network. Scenario (**a**) and (**b**) consider transaction features (i.e., edge
    features). We notice that in scenario (**a**), there is much *Ether* involved
    in the money transfer path {*a* → *d* → *e*} than that in {*a* → *b* → *c*}. In
    scenario (**b**), there are more frequent transactions in the money transfer path
    {*a* → *d* → *e*} than that in {*a* → *b* → *c*}. To investigate the driving factors
    of Ethereum, we seek to answer the issue: *In which situation it is more likely
    to generate new transaction between accounts* (*a*, *c*) or (*a*, *e*)*?*'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太坊交易网络中发现新的关系生成因素的草稿。情景（**a**）和（**b**）考虑交易特征（即边缘特征）。我们注意到，在情景（**a**）中，货币转移路径{*a* → *d* → *e*}中涉及的*Ether*比{*a* → *b* → *c*}要多得多。在情景（**b**）中，货币转移路径{*a* → *d* → *e*}中的交易频率比{*a* → *b* → *c*}要高。为了研究以太坊的驱动因素，我们试图回答问题：*在什么情况下更有可能生成账户*(*a*,
    *c*)或(*a*, *e*)*之间的新的交易*?*
- en: In the following, we introduce a framework to investigate the transaction tracking
    problem and the evolution factors of Ethereum transaction networks via embedding
    based link prediction. First, convert the transaction records to a temporal weighted
    multidigraph from a network perspective, which has been showed in Sect. [3.3](#Sec5).
    Next we trace the transaction paths by running random walks with different strategies
    to obtain co-occurrence statistics considering different factors, and then learn
    representations mapping the original graph into the embedded space. Last, by employing
    link prediction methods, we predict the transactions, and then try to infer the
    possible factors of network evolution by comparing the results derived from different
    walk strategies.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 以下，我们介绍了一个框架，通过基于嵌入的链接预测来研究以太坊交易网络的交易追踪问题和演化因素。首先，从网络角度将交易记录转换为时间加权的多边图，这在Sec.
    [3.3](#Sec5)中已经说明。接下来，通过使用不同策略运行随机游走来跟踪交易路径，以获得考虑不同因素的共现统计数据，然后学习将原始图映射到嵌入空间的表示。最后，利用链接预测方法预测交易，并通过比较不同游走策略得到的结果来尝试推断网络演化的可能因素。
- en: 3.4.4.1 Embedding Based Link Prediction for Investigation
  id: totrans-280
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.4.1 用于调查的基于嵌入的链接预测
- en: Link prediction is a quantitative tool to investigate the evolution mechanism
    comprehensively. It is to estimate the likelihood of the existence of links between
    node pairs based on the current network in formation, such as the observed links
    and node attributes (Kumar et al. [2020](#CR16)). Link prediction techniques like
    similarity-based indices are difficult with dealing large-scale networks, since
    calculating the indices for each unconnected node pairs is time-consuming for
    Ethereum transaction networks.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 链接预测是一种用于全面研究演化机制的定量工具。它是基于当前网络信息（如观察到的链接和节点属性（Kumar等人[2020](#CR16)））来估计节点对之间存在链接的可能性。类似相似度指数的链接预测技术在处理大规模网络时较为困难，因为对于每个未连接的节点对计算指数会花费以太坊交易网络大量时间。
- en: Network embedding is considered as a dimension reduction technique which has
    become a popular research direction in the field of graph mining in recent years
    (Cai et al. [2018](#CR4)). Network embedding, also known as network representation
    learning, is an effective representation of networks preserving the node neighborhood
    structures. Similar nodes in the original network should have similar node vectors
    in the embedded low-dimensional space, as shown in Fig. [3.10](#Fig10).![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig10_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig10_HTML.png)
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 网络嵌入被认为是图形挖掘领域近年来变得流行的一个维度降低技术（Cai等人[2018](#CR4)）。网络嵌入，也称为网络表示学习，是保持网络节点邻域结构的有效网络表示。如
    图3.10所示，在原始网络中相似的节点在嵌入的低维空间中应该有相似的节点向量。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig10_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig10_HTML.png)
- en: Fig. 3.10
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 3.10
- en: A toy example of embedding the network into a 2D space. (**a**) Input graph.
    (**b**) Embedding space and nodes
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 将网络嵌入到2D空间的玩具示例。（**a**）输入图。（**b**）嵌入空间和节点
- en: For scalable networks, random walk mechanism has been widely proved to be an
    effective technique to capture structural relationships between nodes (Perozzi
    et al. [2014](#CR23)). With various walking strategies considering different factors,
    the original network is transformed into different collections of node sequences
    by sampling truncated random walks. The occurrence frequency on short random walks
    of a node and its content reflects the proximity between them. Therefore, the
    obtained node sequences with different distributions results in various node representations
    via the optimization procedure.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可扩展网络，随机游走机制已经被广泛证明是一种有效的方法来捕捉节点之间的结构关系（Perozzi等人[2014](#CR23)）。考虑不同因素的各种游走策略，通过抽样截断随机游走将原始网络转化为不同的节点序列集合。节点在其短随机游走中的出现频率及其内容反映了它们之间的接近程度。因此，通过优化过程获得的具有不同分布的节点序列导致不同的节点表示。
- en: For the Ethereum transaction network which can be modeled as Temporal Weighted
    Multidigraph, we propose a dynamic node representation method consisting of two
    main parts, random walk and optimization procedure, which has been explained in
    detail in Sect. [3.4.1](#Sec11). Here, we give a complete algorithm for you to
    better understand it. Combining the two parts, the pseudocode for temporal weighted
    multidigraph embedding is given in Algorithm [3.1](#FPar2).
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可以建模为时间加权多图的以太坊交易网络，我们提出了一种动态节点表示方法，包括两个主要部分：随机游走和优化过程，这在第3.4.1节中详细解释。在这里，我们为你提供一个完整的算法，以便更好地理解它。结合这两部分，时间加权多图嵌入的伪代码在算法3.1中给出（#FPar2）。
- en: Algorithm 3.1 Temporal weighted multidigraph embedding![../images/506524_1_En_3_Chapter/506524_1_En_3_Figa_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Figa_HTML.png)
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 算法3.1 时间加权多图嵌入![../images/506524_1_En_3_Chapter/506524_1_En_3_Figa_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Figa_HTML.png)
- en: 3.4.4.2 Evaluation Measurement of Temporal Link Prediction
  id: totrans-288
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.4.2 时间链接预测的评估测量
- en: Link prediction aims to predict the appearance of links in the network based
    on observed information. In conventional link prediction experiments where links
    have no timestamp, the observed links of the network are usually randomly divided
    into training and test sets.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 链接预测的目的是基于观察信息预测网络中链接的出现。在传统的链接预测实验中，由于链接没有时间戳，网络的观察链接通常随机分为训练集和测试集。
- en: For the problem of link prediction considered in a temporal network considered
    here, we find it more reasonable to split the train-test set according to the
    timestamp and use the existing links in the past to predict the occurrences of
    links in the future.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在这里考虑的具有时间戳的时态网络链接预测问题，我们认为根据时间戳拆分训练集和测试集，并使用过去现有的链接来预测未来链接的出现更为合理。
- en: 'We depict the main steps of the temporal link prediction in Fig. [3.11](#Fig11),
    and explain each of them as follows:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在图3.11中描述时间链接预测的主要步骤，并解释如下：
- en: 1.We sort all the edges collected from transaction records by timestamps and
    assume that 50% of the earlier edges as the known edges, which constitute the
    current network.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig11_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig11_HTML.png)
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1. 我们根据时间戳对从交易记录中收集的所有边进行排序，假设早于50%的边为已知边，这些已知边构成了当前网络。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig11_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig11_HTML.png)
- en: Fig. 3.11
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Fig. 3.11
- en: The main steps of temporal link prediction in our work. t r a i n_p o s a n
    d t e s t_p o s are the positive links of the training set and test set, and t
    r a i n_n e g a n d t e s t_n e g are the negative links of the training set and
    test set, respectively
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们工作中时间序列链接预测的主要步骤。t r a i n_p o s a n d t e s t_p o s 是训练集和测试集的正链接，而t r a i
    n_n e g a n d t e s t_n e g 分别是训练集和测试集的负链接。
- en: '2.'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Then we can learn node representations of the current network Φ(*v*) for ∀*v* ∈ *V* via
    graph embedding methods. For the embedding methods based on random walk, we have
    several hyperparameters: the node embedding dimension *d*, the size of window
    *k*, the length of walk *l*, and walks per node *r*. In general, we set *d* = 128,
    and *k* = 4\. Specifically, we set *r* = 20, *l* = 10 for EthereumG1, *r* = 10,
    *l* = 10 for EthereumG2, and *r* = 10, *l* = 20 for EthereumG3.'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后我们可以通过图嵌入方法学习当前网络 Φ(*v*) 对于 ∀*v* ∈ *V* 的节点表示。对于基于随机游走的嵌入方法，我们有几个超参数：节点嵌入维度
    *d*、窗口大小 *k*、游走长度 *l* 以及每个节点的游走次数 *r*。通常，我们设置 *d* = 128，*k* = 4\。具体来说，我们在EthereumG1上设置
    *r* = 20，*l* = 10，在EthereumG2上设置 *r* = 10，*l* = 10，在EthereumG3上设置 *r* = 10，*l* = 20。
- en: '3.'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: For the binary classifier, the 50% links with earlier timestamps in the original
    network act as positive samples of the training set, and the remainder (the 50%
    links with later timestamps) are treated as the positive samples of the test set.
    Besides, we randomly sample an equal number of node pairs with no link as negative
    samples of the training set and the test set.
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于二分类器，原始网络中时间戳较早的50%的链接作为训练集的正样本，其余的（时间戳较晚的50%的链接）作为测试集的正样本。此外，我们随机从训练集和测试集中抽取相同数量的节点对作为负样本，这些节点对之间没有链接。
- en: For the evaluation of link prediction experiments, the samples in test set can
    be divided into four categories, according to the combination of the ground-truth
    category and the prediction category.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 对于链接预测实验的评估，测试集中的样本可以根据真实类别和预测类别的组合分为四个类别。
- en: '1.'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'True Positive (TP): The positive data item (the existent link) predicted as
    positive'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 真阳性（TP）：预测为正性的正数据项（存在的链接）
- en: '2.'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'True Negative (TN): The negative data item (the nonexistent link) predicted
    as negative'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 真负例（TN）：预测为负性的负数据项（不存在的链接）
- en: '3.'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'False Positive (FP): The negative data item (the nonexistent link) predicted
    as positive'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假阳性（FP）：预测为正性的负数据项（不存在的链接）
- en: '4.'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'False Negative (FN): The positive data item (the existent link) predicted as
    negative'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假阴性（FN）：预测为负性的正数据项（存在的链接）
- en: Based on the four categories, the following two metrics can be derived.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这四个类别，可以导出以下两个度量指标。
- en: 1.True positive rate (TPR):![
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1.真阳性率（TPR）：![
- en: $$\displaystyle \begin{aligned} TPR= \frac{\#TP}{\#TP+\#FN}. \end{aligned} $$
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} TPR= \frac{\#TP}{\#TP+\#FN}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ11.png)(3.11)'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ11.png)(3.11)'
- en: 2.False positive rate (FPR):![
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2.假阳性率（FPR）：![
- en: $$\displaystyle \begin{aligned} \frac{\#FP}{\#FP+\#TN}. \end{aligned} $$
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \frac{\#FP}{\#FP+\#TN}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ12.png)(3.12)'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ12.png)(3.12)'
- en: Moreover, based on TPR and FPR, we calculate area under curve (AUC) to evaluate
    the performance of the experiments. AUC is a commonly considered metric in many
    predictive tasks, and its value is usually defined as the area under the receiver
    operating characteristic curve (ROC), whose horizontal axis is FPR and vertical
    axis is TPR. The higher the AUC value is, the more accurate the classifier.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，基于TPR和FPR，我们计算曲线下面积（AUC）来评估实验性能。AUC是在许多预测任务中常被考虑的度量指标，其值通常定义为接收者操作特征曲线（ROC）下的面积，其中水平轴为FPR，垂直轴为TPR。AUC值越高，分类器越准确。
- en: 3.4.5 Results and Analysis
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4.5 结果与分析
- en: 3.4.5.1 Investigation on the Transaction Time
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.5.1 交易时间的研究
- en: First we investigate how the temporal information affects the evolution of Ethereum
    transaction networks. Consider a random walk which is currently stopping at a
    node *v* [*i*], the next node of the random walk is decided by selecting a temporally
    valid edge of node *v* [*i*]. As mentioned before, this edge is selected from
    the set of temporal successive edge denoted as *L* [*t*](*v* [*i*]) using a particular
    sampling bias. Considering transaction time information, each candidate edge *e* ∈ *L*
    [*t*](*v* [*i*]) is assigned a selection probability *P* [*T*](*e*) whose calculation
    methods under different walking strategies are given in Table [3.6](#Tab6). The
    four kinds of walking strategies with the consideration of transaction time information
    are explained as follows:Table 3.6
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们研究时间信息如何影响以太坊交易网络的演变。考虑一个当前正在节点 *v* [*i*] 停止的随机游走，随机游走的下一个节点是通过选择节点 *v*
    [*i*] 的一个时间上有效的边来决定的。如前所述，这个边是从表示时间上连续边集合 *L* [*t*](*v* [*i*]) 中使用特定的抽样偏差选出的。考虑交易时间信息，每个候选边
    *e* ∈ *L* [*t*](*v* [*i*]) 被分配一个选择概率 *P* [*T*](*e*)，其计算方法在不同游走策略下如下表[3.6](#Tab6)所示。考虑交易时间信息的四种游走策略如下解释：表
    3.6
- en: Sampling biases in different walking strategies, taking the timestamp (transaction
    time) of edges into account. *T* [*max*] is the largest timestamp of the current
    network
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑不同游走策略下的抽样偏差，将边的时间戳（交易时间）考虑在内。*T* [*max*] 是当前网络的最大时间戳
- en: '| Factor | Walking strategies | Equation |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 因素 | 游走策略 | 方程式 |'
- en: '| --- | --- | --- |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| From *WS* [4] to *WS* [1], the random walks tend to sample the successive
    transactions with shorter time interval. | *WS* [1] | *P*(*e*) = ![ $$\frac {T_{max}-T(e)}{\sum
    _{e''\in L_t(v_i)}~(T_{max}-T(e''))}$$'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '| 从 *WS* [4] 到 *WS* [1]，随机游走倾向于抽取时间间隔较短的连续交易。 | *WS* [1] | *P*(*e*) = ![ $$\frac
    {T_{max}-T(e)}{\sum _{e''\in L_t(v_i)}~(T_{max}-T(e''))}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq34.png) |'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq34.png) |'
- en: '|   | *WS* [2] | *P* [*T*](*e*) = ![ $$\frac {\eta _-(T(e))}{\sum _{e''\in
    L_t(v_i)}~\eta _-(T(e''))}$$'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '|   | *WS* [2] | *P* [*T*](*e*) = ![ $$\frac {\eta _-(T(e))}{\sum _{e''\in
    L_t(v_i)}~\eta _-(T(e''))}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq35.png) |'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq35.png) |'
- en: '|   | *WS* [3] | *P* [*T*](*e*) = ![ $$\frac {1}{&#124;L_t(v_i)&#124;}$$'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '|   | *WS* [3] | *P* [*T*](*e*) = ![ $$\frac {1}{&#124;L_t(v_i)&#124;}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq36.png) |'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq36.png) |'
- en: '|   | *WS* [4] | *P* [*T*](*e*) = ![ $$\frac {\eta _+(T(e))}{\sum _{e''\in
    L_t(v_i)}~\eta _+(T(e''))}$$'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '|   | *WS* [4] | *P* [*T*](*e*) = ![ $$\frac {\eta _+(T(e))}{\sum _{e''\in
    L_t(v_i)}~\eta _+(T(e''))}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq37.png) |'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq37.png) |'
- en: '1.'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Strategy *WS* [1]: This strategy assumes that the earliest transaction (with
    the smallest timestamp) of the current node has the highest probability of being
    selected as the next edge of the random walk. More specifically, the selection
    probability of the next walk (i.e., transaction) is linearly dependent on the
    time interval between the next walk timestamp *T*(*e*) and the largest timestamp
    *T* [*max*] of the current network.'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略 *WS* [1]：该策略假设当前节点最早的交易（具有最小的时间戳）具有被选为随机游走下一边的最高概率。更具体地说，下一游走（即交易）的选择概率与下一游走时间戳
    *T*(*e*) 和当前网络的最大时间戳 *T* [*max*] 之间的时间间隔线性相关。
- en: '2.'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Strategy *WS* [2]: Similar to Strategy *WS* [1], an earlier transaction has
    a higher probability to be selected. Yet this strategy employs a descending ranking
    function *η* [−] which maps the timestamp of edges to a descending order. The
    selection probability of the next walk is linearly dependent on the descending
    ranking of the timestamp *η* [−](*T*(*e*)).'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Strategy *WS* [2]: 与策略 *WS* [1] 类似，更早的交易具有更高的被选中概率。然而此策略采用一个降序排名函数 *η* [−]
    ，该函数将边的 时间戳映射到一个降序。下一游走的选择概率线性依赖于时间戳的降序排名 *η* [−](*T*(*e*))。'
- en: '3.'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Strategy *WS* [3]: Under this strategy, each candidate transaction has the
    identical probability to be selected.'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Strategy *WS* [3]: 采用此策略时，每个候选交易具有相同的被选中概率。'
- en: '4.'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'Strategy *WS* [4]: This strategy is an opposite of Strategy *WS* [2], and the
    earliest transaction of the current node has the lowest probability of being selected
    as the next edge of the random walk. Analogically, this strategy employs an ascending
    ranking function *η* [+] which maps the timestamp of edges to an ascending order.
    The selection probability of the next walk is linearly dependent on the ascending
    ranking of the timestamp *η* [+](*T*(*e*)).'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略 *WS* [4]：这一策略与策略 *WS* [2] 相反，当前节点的最早交易被选为随机游走的下一个边的概率最低。类比地，该策略采用一个递增排名函数
    *η* [+]，将边的 timestamp 映射到递增顺序。下一个游走的选中概率与 timestamp 的递增排名 *η* [+](*T*(*e*))线性相关。
- en: The essence of different strategies is to adjust the effects of time interval
    between successive edges on sampling random walk paths, which meanwhile influence
    the proximity between nodes in the graph. We can see that, walking strategies
    in Table [3.6](#Tab6), from *WS* [1] to *WS* [4], the random walks tend to sample
    the successive transactions with longer time intervals. Figure [3.12](#Fig12)
    compares the performance of link prediction under different walking strategies
    in terms of AUC. On all the three transaction networks, the algorithm based on
    Strategy *WS* [1] outperforms the rest.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig12_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig12_HTML.png)
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 不同策略的本质是调整连续边之间的时间间隔对随机游走路径的影响，同时影响图中的节点邻近度。我们可以看到，表 [3.6](#Tab6) 中的游走策略，从 *WS*
    [1] 到 *WS* [4]，随机游走倾向于采样具有更长时间间隔的连续交易。图 [3.12](#Fig12) 在 AUC 方面比较了不同游走策略下链接预测的性能。在所有三个交易网络中，基于策略
    *WS* [1] 的算法表现最佳。![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig12_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig12_HTML.png)
- en: Fig. 3.12
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 3.12
- en: Link prediction result considering transaction time factor with different walking
    strategies
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑交易时间因素的不同游走策略的链接预测结果
- en: Back to the problem of transaction tracking of cryptocurrencies, we can roughly
    infer that in an Ethereum transaction network, the generation of new transaction
    is related to the time factor. The answer to the question in Fig. [3.9](#Fig9)b
    is that, it is more likely to generate new transaction between accounts *a* and
    *e*. This indicates that new transactions are more likely to take place between
    node pairs with more frequent transactions in the path. When tracking the money
    flow among Ethereum accounts, we should pay more attention to those transaction
    paths with shorter time interval.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 回到加密货币交易的跟踪问题，我们可以大致推断，在以太坊交易网络中，新交易的生成与时间因素有关。图 [3.9](#Fig9)b 中的问题的答案是，在账户
    *a* 和 *e* 之间更有可能生成新的交易。这表明，在路径中交易频率更高的节点对之间更有可能发生新交易。在跟踪以太坊账户之间的资金流动时，我们应该更加关注那些时间间隔较短的交易路径。
- en: 3.4.5.2 Investigation on the Transaction Amount
  id: totrans-342
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.5.2 交易金额的研究
- en: Next, we investigate the effects of edge weight information (i.e., transaction
    amount value) on the link prediction experiments. With the consideration of transaction
    amount, each candidate edge *e* ∈ *L* [*t*](*v* [*i*]) is assigned a selection
    probability *P* [*W*](*e*) whose calculation methods under different walking strategies
    are given in Table [3.7](#Tab7), and walking strategies with the consideration
    of transaction time information are explained as follows:Table 3.7
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们研究了边权重信息（即交易金额值）对链接预测实验的影响。考虑交易金额，每个候选边 *e* ∈ *L* [*t*](*v* [*i*]) 被分配一个选择概率
    *P* [*W*](*e*)，其计算方法在不同游走策略下给出表 [3.7](#Tab7)，如下解释考虑交易时间信息的游走策略：表 3.7
- en: Sampling biases in different walking strategies, taking the weight (transaction
    amount) of edge into account
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 不同游走策略下的抽样偏差，考虑边的权重（交易金额）
- en: '| Factor | Walking strategies | Equation |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| 因素 | 游走策略 | 方程式 |'
- en: '| --- | --- | --- |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| From *WS* [7] to *WS* [5], the random walks tend to sample the successive
    transactions with largest transaction amount. | *WS* [5] | *P* [*W*](*e*) = ![
    $$\frac {W(e)}{\sum _{e''\in L_t(v_i)} W(e'')}$$'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '| 从*WS* [7]到*WS* [5]，随机游走倾向于采样具有最大交易金额的连续交易。 | *WS* [5] | *P* [*W*](*e*) = ![
    $$\frac {W(e)}{\sum _{e''\in L_t(v_i)} W(e'')}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq38.png) |'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq38.png) |'
- en: '|   | *WS* [6] | *P* [*W*](*e*) = ![ $$\frac {\eta _+(W(e))}{\sum _{e''\in
    L_t(v_i)} \eta _+(W(e''))}$$'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '|   | *WS* [6] | *P* [*W*](*e*) = ![ $$\frac {\eta _+(W(e))}{\sum _{e''\in
    L_t(v_i)} \eta _+(W(e''))}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq39.png) |'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '[图3.13](#Fig13) |'
- en: '|   | *WS* [7] | *P* [*W*](*e*) = ![ $$\frac {1}{&#124;L_t(v_i)&#124;}$$'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '|   | *WS* [7] | *P* [*W*](*e*) = ![ $$\frac {1}{&#124;L_t(v_i)&#124;}$$'
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq40.png) |'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '[图3.13](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_IEq40.png)
    |'
- en: '1.'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Strategy *WS* [5]: This strategy assumes that the probability of each candidate
    edge being selected is proportional to its edge weight, that is, the transaction
    amount *W*(*e*).'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略 *WS* [5]：该策略假设每个候选边的选择概率与其边权重成比例，即交易金额 *W*(*e*)。
- en: '2.'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Strategy *WS* [6]: Under this strategy, an edge with higher weight has a higher
    probability to be chosen, but a linear mapping function (i.e., ranking function)
    is adopted to weaken the impact of edge weight information, comparing with Strategy
    *WS* [5]. Specifically, the selection probability of the next walk is linearly
    dependent on *η* [+](*W*(*e*)).'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略 *WS* [6]：在此策略下，权重较高的边被选择的概率更高，但采用了线性映射函数（即排名函数）来弱化边权重信息的影响，与策略 *WS* [5] 相比。具体来说，下一个游走的的选择概率依赖于
    *η* [+](*W*(*e*))。
- en: '3.'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Strategy *WS* [7]: Under this strategy, each candidate transaction has the
    identical probability to be selected.'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略 *WS* [7]：在此策略下，每个候选交易具有相同的选择概率。
- en: From Strategy *WS* [5], *WS* [6], to *WS* [7], the impact of edge weight gradually
    weakens. The result given in Fig. [3.13](#Fig13) demonstrates that the link prediction
    model based on Strategy *WS* [5] attains the best performance. This result implies
    that the likelihood of transaction occurrence in the future is positively related
    to transaction amount. In most cases, the larger amount of transaction, the closer
    relationship between two accounts. We can have an answer to the question in Fig.
    [3.9](#Fig9)a—it is more likely to generate new transaction between accounts *a*
    and *e*. As nodes *a* and *e* have large amount transactions with a common neighbor
    *d*, the relationship between them should be much stronger than that between nodes
    *a* and *c*. When dealing with the transaction tracking problem, we should pay
    more attention to those transaction paths with larger amount.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig13_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig13_HTML.png)
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 从策略 *WS* [5]、*WS* [6] 到 *WS* [7]，边权重的影响逐渐减弱。图 [3.13](#Fig13) 给出的结果表明，基于策略 *WS*
    [5] 的链接预测模型取得了最佳性能。这一结果暗示未来交易发生的可能性与交易金额成正比。在大多数情况下，交易金额越大，两个账户之间的关系越密切。我们可以回答图
    [3.9](#Fig9)a 中的问题——账户 *a* 和 *e* 之间产生新交易的概率更高。由于节点 *a* 和 *e* 与共同邻居 *d* 有大量交易，它们之间的关系应该比节点
    *a* 和 *c* 之间的关系强得多。在处理交易追踪问题时，我们应该更加关注那些金额较大的交易路径。![图3.13](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig13_HTML.png)
- en: Fig. 3.13
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13
- en: Link prediction result considering transaction amount factor with different
    walking strategies
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑不同游走策略下交易金额因素的链接预测结果
- en: 3.4.5.3 Investigation on Both Factors
  id: totrans-362
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.4.5.3 对两个因素的研究
- en: Furthermore, we combine both the temporal and weight factors, and investigate
    how they influence transaction evolution. We combine the aforementioned sampling
    probabilities from both temporal and weighted domains by setting the probability
    of choosing edge *e* as:![
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将时间和权重因素结合起来，研究它们如何影响交易演变。我们将上述从时间和加权域中得到的采样概率结合起来，通过设置选择边 *e* 的概率为：![
- en: $$\displaystyle \begin{aligned} P(e)_{TW} = P_T(e)^\alpha P_W(e)^{(1-\alpha)},
    \end{aligned} $$
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P(e)_{TW} = P_T(e)^\alpha P_W(e)^{(1-\alpha)},
    \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ13.png)(3.13)where
    *α* is a tuning parameter varying from 0 to 1\. Here *α* = 0.5 is the default
    value for balancing between time domain and amount domain. Notably, *P* [*T*](*e*)
    denotes to the selecting probability with Strategies from *WS* [1] to *WS* [4],
    and *P* [*W*](*e*) denotes to the selecting probability with Strategies from *WS*
    [5] to *WS* [7]. Finally there is a standardized operation as!['
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[图3.13](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ13.png)(3.13)其中
    *α* 是一个从0到1变化的调节参数。这里 *α* = 0.5 是平衡时间和金额域的默认值。值得注意的是，*P* [*T*](*e*) 指的是使用从 *WS*
    [1] 到 *WS* [4] 的策略的选择概率，*P* [*W*](*e*) 指的是使用从 *WS* [5] 到 *WS* [7] 的策略的选择概率。最后有一个标准化操作作为!['
- en: $$\displaystyle \begin{aligned} P(e)=\frac{P_{TW}(e)}{\sum_{e'\in L_t(v_i)}
    P_{TW}(e')}. \end{aligned} $$
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} P(e)=\frac{P_{TW}(e)}{\sum_{e'\in L_t(v_i)}
    P_{TW}(e')}. \end{aligned} $$
- en: '](../images/506524_1_En_3_Chapter/506524_1_En_3_Chapter_TeX_Equ14.png)(3.14)We
    provide the results of all possible combinations of time domain strategy and amount
    domain strategy in Fig. [3.14](#Fig14), and can observe that from bottom to top,
    from left to right, link prediction model tends to obtain better performance.
    Moreover, when the amount factor is taken into account, especially with Strategy
    *WS* [5] (the rightmost column), the difference between combining different time
    strategies is less obvious.![../images/506524_1_En_3_Chapter/506524_1_En_3_Fig14_HTML.png](../images/506524_1_En_3_Chapter/506524_1_En_3_Fig14_HTML.png)'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 3.14
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: Link prediction result considering both the transaction time and amount factors.
    (**a**) *EthereumG1*. (**b**) *EthereumG2*. (**c**) *EthereumG3*
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: The results further verify that both the time and amount factors impact the
    Ethereum transaction interaction, and imply that the amount factor has greater
    influence than the time factor on the network evolution. This inspires us to pay
    more attention to the transactions with large amount when talking about transaction
    tracking.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: 3.5 Summary
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we briefly introduced the complex network, which is an important
    mean to understand complex system. And we proposed a novel framework for Ethereum
    analysis through network embedding. Particularly, we constructed a temporal weighted
    multidigraph to reserve information as much as possible and present a graph embedding
    method called T-EDGE which incorporates temporal and weighted information of financial
    transaction networks into node embeddings. To investigate the impact of transaction
    time and amount, we design flexible walking strategies for random-walk based temporal
    network embedding.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: We have implemented the proposed and two baseline embedding methods on the actual
    Ethereum network to achieve two actual-related prediction tasks, namely temporal
    link prediction and phishing/non-phishing node classification, and we first discussed
    the importance of the transaction tracking problem on Ethereum and dealt with
    this problem from the network science perspective. Technically, we presented a
    comprehensive framework to explore the factor of Ethereum transaction network
    evolution via network-embedding based link prediction. Experimental results demonstrated
    the effective of the proposed T-EDGE embedding method, meanwhile indicating that
    a temporal weighted multidigraph can more comprehensively represent the temporal
    and financial properties of dynamic transaction networks.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
