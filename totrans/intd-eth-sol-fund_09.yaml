- en: © Chris Dannen 2017Chris DannenIntroducing Ethereum and Solidity10.1007/978-1-4842-2535-6_9
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © Chris Dannen 2017Chris DannenIntroducing Ethereum and Solidity10.1007/978-1-4842-2535-6_9
- en: 9. Creating Private Chains
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9. 创建私人链
- en: Contrary to what public-chain enthusiasts argue, private chains do have merit
    as learning tools, and may ultimately have uses for large corporations, nation-states,
    or nongovernmental organizations (NGOs). However, it should be said that blockchains
    are not inherently better for all databases and networksChris Dannen^(1 )(1)Brooklyn,
    New York, USAIn the last few chapters, we’ve focused on deploying smart contracts,
    dapps, and tokens. In this chapter, we’ll engage in a brief discussion of blockchains
    as databases to more thoroughly understand how the chains themselves are deployed.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与公链爱好者的论点相反，私有链作为学习工具确实具有优点，并且最终可能会被大型公司、国家或非政府组织（NGO）使用。然而，应该指出的是，区块链并不是所有数据库和网络都固有地更好。Chris Dannen^(1 )(1)美国纽约布鲁克林在过去的几章中，我们专注于部署智能合约、dapps和代币。在本章中，我们将简要讨论区块链作为数据库，以更彻底地了解链本身是如何部署的。
- en: Private and Permissioned Chains
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 私有链和权限链
- en: 'A private chain is just a cloud database achieved by way of the peer-to-peer
    Ethereum protocol: it’s a silo that you control and that you can grant access
    to.This should be contrasted with a permissioned blockchain , which like an enterprise
    software application has defined roles with permissions that can be set by a central
    administrator.Big picture, private chains are in no way inherently better than
    cloud databases. In practice, the utility of the Ethereum protocol comes from
    bringing disparate groups together to share secure infrastructure, instead of
    duplicating effort. Today, the Ethereum network is fully operational, however
    it has not scaled to the point where existing web application providers could
    migrate. But this is after only two years of development, and as you’ll see in
    Chapter [11](A433414_1_En_11_Chapter.html), the future milestones are fairly incredible
    and coming to pass on schedule.By contrast, the HTTP Web has been under development
    since 1989.[¹](#Fn1) Decentralized cloud storage, namespaces, and other common
    elements of the HTTP Web have yet to be reproduced in the Ethereum Web, but will
    be soon. Let’s move on so you can create your very own custom blockchain, to get
    a better understanding of how they work.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 私有链只是通过点对点以太坊协议实现的云数据库：它是一个你可以控制并且可以授予访问权限的数据仓库。这应该与许可区块链形成对比，后者就像企业软件应用程序一样，有着由中央管理员设定的权限和角色。大局观上，私有链在实践中并不比云数据库更具优势。实际上，以太坊协议的效用在于将分散的群体聚集在一起共享安全的基础设施，而不是重复努力。如今，以太坊网络已经运转良好，但尚未扩展到现有网络应用程序提供商可以迁移的程度。但这只是在发展两年之后，正如你将在[第11章](A433414_1_En_11_Chapter.html)中看到的，未来的里程碑相当令人难以置信，并且按计划实现。相比之下，HTTP
    Web自1989年一直在发展中。【¹】分散式云存储、命名空间和HTTP Web的其他常见元素尚未在以太坊网络中复制，但很快就会实现。让我们继续，这样你就可以创建自己的定制区块链，以更好地了解它们是如何运作的。
- en: Setting Up a Local Private Chain
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A private chain is of limited usefulness because, as established in Chapters
    [6](A433414_1_En_6_Chapter.html) and [7](A433414_1_En_7_Chapter.html), the security
    of a chain is proportional to the number of nodes that are mining on it. When
    you start up your chain, it will have only one miner: you.However, starting up
    a local private chain is a nice way to create a testnet in a classroom environment,
    enabling students to mine and thus execute their and their classmates’ transactions
    and smart contracts. Once you see how easy it is, you will appreciate the highly
    generalized nature of the EVM.The content is the same as the genesis field provided
    by the config parameter:Because you already have Geth installed, and you know
    how to use the command line, you need only three things to create a private chain:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Custom genesis JSON file
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom network ID (a number)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A directory where the network ID file is stored
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can make up the network ID; it simply can’t be numerals 1 or 2, which are
    already taken by the testnet (2) and the main network (1). We’ll go over the custom
    genesis file next.Creating Your Blockchain Genesis FileEvery blockchain has to
    start somewhere, and in this, your very own Garden of Eden, you get to plant the
    seed that becomes a private chain. Block 0 does not point to a predecessor block,
    and is thus unlike any other block in the chain. The protocol ensures that your
    chain will accept only blocks that can trace their roots back to this genesis
    block by looking at the root hash in the block header.Here’s how you create the
    custom genesis file.First, open your text editor. You’re going to create a network
    called 765, so you’ll set 765 as the nonce value. It needs to be a nonzero number.
    You can find the code at [https://github.com/chrisdannen/Introducing-Ethereum-and-Solidity/blob/master/genesis765.json](https://github.com/chrisdannen/Introducing-Ethereum-and-Solidity/blob/master/genesis765.json)
    or under the Chapter [9](A433414_1_En_9_Chapter.html) heading at [http://eth.guide](http://eth.guide)
    .In your text editor, paste in the following text:{"nonce": "0x0000000000000765","timestamp":
    "0x0","parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000","extraData":
    "0x0","gasLimit": "0x4c4b40","difficulty": "0x400","mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000","coinbase":
    "0x0000000000000000000000000000000000000000","alloc": {}Save this file to your
    desktop and call it genesis765.json.To open your new chain with a JavaScript console,
    like the one you used in Chapter [6](A433414_1_En_6_Chapter.html), open the Terminal
    and then type the following seven elements on one line:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以构建网络 ID；它不能仅是数字1或2，因为测试网（2）和主网络（1）已经使用了。我们接下来将讨论自定义创世文件。创建您的区块链创世文件每个区块链都必须有一个起点，在这个你自己的伊甸园中，你可以种下成为私有链的种子。区块0不指向前任区块，因此与链中的任何其他区块都不同。协议确保您的链将仅接受可以追溯其根源到此创世区块的区块，方法是查看区块头中的根哈希。下面是如何创建自定义创世文件的方法。首先，打开您的文本编辑器。您将创建一个名为765的网络，因此您将设置765作为随机值。它需要是一个非零数。您可以在
    [https://github.com/chrisdannen/Introducing-Ethereum-and-Solidity/blob/master/genesis765.json](https://github.com/chrisdannen/Introducing-Ethereum-and-Solidity/blob/master/genesis765.json)
    或 [http://eth.guide](http://eth.guide) 的第[9](A433414_1_En_9_Chapter.html)章标题下找到代码。在您的文本编辑器中，粘贴以下文本：{"nonce":
    "0x0000000000000765","timestamp": "0x0","parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000","extraData":
    "0x0","gasLimit": "0x4c4b40","difficulty": "0x400","mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000","coinbase":
    "0x0000000000000000000000000000000000000000","alloc": {}}将此文件保存到桌面，并将其命名为 genesis765.json。要使用
    JavaScript 控制台打开您的新链，就像您在第[6](A433414_1_En_6_Chapter.html)章中使用的那个一样，在终端中输入以下七个元素：'
- en: geth
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: geth
- en: console
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制台
- en: --networkid
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --网络 ID
- en: --genesis
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --创世
- en: The path to the Genesis file
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创世文件路径
- en: --datadir
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --数据目录
- en: A data directory to store your new chain
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于存储您的新链的数据目录
- en: You will create a hidden directory called ∼/.ethereum/chain765 to store your
    chain. Your complete Terminal command should look like this:geth console --networkid
    765 --genesis ∼/Desktop/genesis765.json --datadir ∼/.ethereum/chain765Note Type
    eth at the console of your new chain to see a list of available JavaScript methods.
    In a group testing environment, you can use commands such as net.peercount to
    see how many other people are mining on your chain, and other miscellany.And that’s
    it! Your new chain is up and running, and you can use the console just as you
    did in Chapter [6](A433414_1_En_6_Chapter.html). Remember that you need to turn
    on your miner with the miner.start() command in the console before your contracts
    will execute on this testnet.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你将创建一个名为∼/.ethereum/chain765的隐藏目录来存储你的链。你完整的终端命令应该是这样的：geth console --networkid
    765 --genesis ∼/Desktop/genesis765.json --datadir ∼/.ethereum/chain765请注意，在你的新链的控制台中键入eth类型来查看可用的JavaScript方法列表。在群体测试环境中，你可以使用命令比如net.peercount来查看有多少其他人在你的链上挖矿，以及其他杂项。就是这样！你的新链已经启动运行了，你可以像在第[6](A433414_1_En_6_Chapter.html)章中一样在控制台中使用它。请记住，在你的合同执行之前，你需要在控制台中使用miner.start()命令打开你的矿工。
- en: Optional Flags to Use with New Chains
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于新链的可选标志
- en: 'You can use other flags when creating a new chain to customize your testnet
    environment:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新链时，你可以使用其他标志来定制你的测试网络环境：
- en: '--nodiscover: This prevents anyone with the same genesis file and the same
    network ID from connecting to your chain accidentally.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --nodiscover：防止具有相同创世文件和相同网络ID的任何人意外连接到你的链。
- en: '--maxpeers 0: If you know how many peers you want connected to your node (say
    you have a classroom with a limited number of students), you can delimit your
    chain’s number of participants with this flag.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --maxpeers 0：如果你知道你想要连接到你的节点的对等体数量（比如你有一个有限数量的学生的教室），你可以使用此标志限制你的链的参与者数量。
- en: '--rpcapi "db,eth,net,web3": Enables RPC and various Web3.js APIs that are accessed
    over RPC.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --rpcapi "db,eth,net,web3"：启用RPC和各种通过RPC访问的Web3.js API。
- en: '--rpcport "8080": The default port for Geth is 8080, but you can choose a different
    one with this flag.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --rpcport "8080"：Geth的默认端口为8080，但你可以使用此标志选择不同的端口。
- en: '--rpccorsdomain " [http://eth.guide/](http://eth.guide/) ": Use this flag to
    specify the domains of servers that are allowed to connect to your node and make
    RPC calls.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --rpccorsdomain " [http://eth.guide/](http://eth.guide/) "：使用此标志来指定允许连接到你的节点并进行RPC调用的服务器域名。
- en: '--identity "TestnetMainNode": This gives your chain a human-readable name,
    which makes it easily identifiable when in a list of peers.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --identity "TestnetMainNode"：这为你的链提供了一个易于识别的人类可读名称，这使得在对等体列表中很容易识别。
- en: Private Blockchains in Production Usage
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生产环境中的私有区块链使用
- en: 'In this chapter we’ve presented the concept of private blockchains as a sandbox
    for learning Solidity and the Ethereum smart contract deployment paradigm. However,
    some people are quite serious about taking private blockchains out of the testnet
    role and using them in an enterprise or small-to-medium business computing context,
    to create real web services.This is antithetical to the security model that the
    Ethereum developers had in mind when they designed the protocol. In practice,
    your private chain presents little incentive for hackers to compromise it. After
    all, the value of the tokens mined on your chain (or any chain, for that matter)
    is only what other people will pay for them.Stop and think about that for a moment!
    The main network, the network we consider the Ethereum public blockchain, is no
    different than any other chain. Testnets and the main network are technically
    indistinguishable, except for the rate of participation they get, and the fact
    that one is socially accepted as the main public chain. If you’re surprised, then
    you’ve forgotten the core mantra of Ethereum: generalize everything, and keep
    the protocol featureless.What makes the main network main is the fact that it
    was started (and later forked) by Vitalik Buterin and the rest of the Ethereum
    Core development team. It is only the trust, interest, and curiosity in those
    individuals that keeps people using the main chain.There is no technical feature
    inside Mist or Geth that could not be changed with a protocol fork, which would
    designate a new chain as the main one. (In fact, this happened after the DAO hack
    incident in summer of 2016, leaving behind an “old” chain called Ethereum Classic,
    which is still being mined today by some miners.)This is the inherent flexibility—and
    impermanence—that makes the network resilient. This kind of agility is necessary
    now, in the early days of the network, but will become less and less appealing
    as the network grows and users seek more predictability and reliability. Before
    long, state forks will be almost impossible to pull off owing to the sheer size
    of the network, and the likelihood of another Ethereum chain popping up becomes
    less and less.Indeed, Ethereum has much maturation to endure before it is running
    large, mission-critical business logic contracts. However, when you consider the
    incredible ease of use, it’s easy to see why Ethereum, and networks like it, are
    bound to replace the stiff and aging Hypertext Transfer Protocol.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了私有区块链的概念，作为学习 Solidity 和以太坊智能合约部署范例的沙盒。然而，一些人非常认真地想要将私有区块链摆脱测试网角色，并将它们用于企业或中小型业务计算环境中，以创建真正的网络服务。这与以太坊开发者在设计协议时所考虑的安全模型背道而驰。在实践中，你的私有链对于黑客来说几乎没有动机去攻击它。毕竟，你的链上挖出的代币的价值（或任何链上挖出的代币的价值）只是其他人愿意为它们支付的价值。停下来想一想！主网，我们所考虑的以太坊公共区块链网络，与任何其他链没有什么不同。测试网和主网在技术上是无法区分的，除了它们的参与率以及一个被社会认可为主要公共链。如果你感到惊讶，那么你已经忘记了以太坊的核心口号：泛化一切，并保持协议的无特征性。使主网成为主网的是它是由
    Vitalik Buterin 和以太坊核心开发团队发起（并后来进行了分叉）。只有对这些个人的信任、兴趣和好奇心才能保持人们使用主链。在 Mist 或 Geth
    中没有任何技术特性是不能通过协议分叉进行更改的，这将指定一个新的链作为主链。（事实上，在 2016 年夏天的 DAO 黑客事件之后，这种情况发生了，留下了一个被称为以太坊经典的“旧”链，今天仍然有一些矿工在挖掘它。）这种固有的灵活性和不稳定性使得网络具有弹性。这种灵活性在网络的早期阶段是必要的，但随着网络的增长和用户对更可预测性和可靠性的需求，它将变得越来越不吸引人。不久之后，由于网络的规模巨大，状态分叉几乎不可能进行，另一个以太坊链的可能性也越来越小。确实，以太坊在运行大型、关键业务逻辑合约之前还有很多成熟过程。然而，当你考虑到其令人难以置信的易用性时，很容易理解为什么以太坊以及类似的网络注定会取代僵化老化的超文本传输协议。
- en: Summary
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概要
- en: With all the ease and guarantees of private and permissioned blockchains, why
    have a public chain at all? Why don’t large corporations merely spin up large
    networks of nodes in their worldwide offices, creating their own private Ethereum
    networks?The short answer is that it’s easier and cheaper for large organizations
    to build on top of distributed infrastructure which they don’t have to pay to
    build and maintain. Even better, they don’t have to pay to secure it; the network
    itself grows more secure as organizations add their nodes.Indeed, only a public
    chain is truly trustworthy for high-value transactions, because only a public
    chain is secured by so much proof of work. For all its users know, a private or
    permissioned EVM instance has been altered in ways that make it unfair or untrustworthy.
    With the public chain, protocol forks would need to be initiated by all miners
    to become effective network-wide.In the next chapter, we’ll discuss what individuals
    and companies might choose to build on the public chain.Footnotes[1](#Fn1_source)Wikipedia,
    “Hypertext Transfer Protocol,” [https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)
    , 2016.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管私有和许可的区块链具有所有的便利和保证，为什么还需要公共链呢？为什么大型企业不简单地在全球各地的办公室搭建大量节点，创建自己的私有以太坊网络呢？简短的回答是，对于大型组织来说，在无需付费建设和维护的分布式基础设施上构建更容易、更便宜。更好的是，他们无需为其安全性付费；随着组织添加其节点，网络本身变得更加安全。事实上，只有公共链对于高价值交易才是真正可信的，因为只有公共链由如此多的工作证明来保障安全。就所有用户而言，私有或许可的EVM实例可能已被修改，使其变得不公平或不可信。对于公共链，协议分叉需要所有矿工发起才能在整个网络范围内生效。在下一章中，我们将讨论个人和公司可能选择在公共链上构建的内容。脚注[1](#Fn1_source)维基百科，“超文本传输协议”，[https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)
    ，2016年。
