["```\nThe returned result was: Successfully registered user \"appUser\" and imported user into the wallet\n```", "```\nThe returned result was: Transaction has been submitted\n```", "```\nnode app\n```", "```\n// Fabcar command-line client for enrolling and Admin\nvar enrollAdmin = require(\"./handlers/enrollAdmin\");\nvar registerUser = require(\"./handlers/registerUser\");\nvar invoke = require(\"./handlers/invoke\");\nvar query = require(\"./handlers/query\");\nvar api = require(\"./handlers/api\");\n\n/////////////////////////////////////////\n// Express setup\nvar express = require(\"express\");\nvar app = express();\napp.set(\"views\", \"./views\");\napp.use(express.static(\"public\"));\n```", "```\n/////////////////////////////////////////\n// VIEWS\napp.get('/', function (req, res){\n    res.render(\"index.jade\")\n});\napp.get('/enroll', function (req, res){\n    res.render(\"enroll.jade\")\n});\napp.get('/register', function (req, res){\n    res.render(\"register.jade\")\n});\napp.get('/invoke', function (req, res){\n    res.render(\"invoke.jade\")\n});\napp.get('/query', function (req, res){\n    res.render(\"query.jade\")\n});\napp.get('/api', function (req, res){\n    res.render(\"api.jade\")\n});\napp.get('/test', function (req, res){\n    res.render(\"test.jade\", {title: \"TEST\"})\n});\n```", "```\n/////////////////////////////////////////\n// ACTIONS\napp.get('/actionEnrollAdmin', function (req, res){\n    //var promiseEnrollAdmin = enrollAdmin.log();\n    var promiseEnrollAdmin = enrollAdmin.enroll();\n    var promiseValue = async () => {\n        const value = await promiseEnrollAdmin;\n        console.log(value);\n        res.render(\"enroll.jade\", {data: value});\n    };\n    promiseValue();\n});\napp.get('/actionRegisterUser', function (req, res){\n    //var promiseRegisterUser = registerUser.log();\n    var promiseRegisterUser = registerUser.register();\n    var promiseValue = async () => {\n        const value = await promiseRegisterUser;\n        console.log(value);\n        res.render(\"register.jade\", {data: value});\n    };\n    promiseValue();\n});\napp.get('/actionInvoke', function (req, res){\n    //ar promiseInvoke = invoke.log();\n    var promiseInvoke = invoke.invokeTransaction();\n    var promiseValue = async () => {\n        const value = await promiseInvoke;\n        console.log(value);\n        res.render(\"invoke.jade\", {data: value});\n    };\n    promiseValue();\n});\napp.get('/actionQuery', function (req, res){\n    //var promiseQuery = query.log();\n    var promiseQuery = query.queryTransaction();\n    var promiseValue = async () => {\n        const value = await promiseQuery;\n        console.log(value);\n        res.render(\"query.jade\", {data: value});\n    };\n    promiseValue();\n});\napp.get('/actionApi', function (req, res){\n    var promiseApi = api.callApi();\n    //var promiseApi = api.log();\n    var promiseValue = async () => {\n        const value = await promiseApi;\n        console.log(value);\n        res.render(\"api.jade\", {data: value});\n    };\n    promiseValue();\n});\n```", "```\napp.listen(3000,function (){\n    console.log('fabcar-ui listening on port 3000');\n});\n```", "```\nextends layout\nblock content\n    h1 Fabcar UI - Enroll Admin\n    #data\n        if data != undefined && data.length > 0\n            p.lead The returned result was: #{data}\n        else\n            a.btn.btn-lg.btn-primary(href='/actionEnrollAdmin') Enroll Admin\nscript(src='/bootstrap/js/bootstrap.bundle.js')\n```", "```\n\"fabric-ca-client\": \"^2.2.4\",\n\"fabric-network\": \"^2.2.4\"\n```", "```\nWallet path: /fabric-samples/fabcar-ui/wallet\nAn identity for the admin user \"admin\" already exists in the wallet\n\nWallet path: /fabric-samples/fabcar-ui/wallet\nAn identity for the user \"appUser\" already exists in the wallet\n```", "```\nnpm install\n```", "```\nnode app\n```", "```\nfabcar-ui listening on port 3000\n```", "```\nhttp://localhost:3000\n```", "```\nFailed to evaluate transaction: Error: ENOENT: no such file or directory, open '/fabric-samples/test-\nnetwork/organizations/peerOrganizations/org1.example.com/connection-org1.json'\nFailed to enroll admin user \"admin\": Error: ENOENT: no such file or directory, open '/fabric-\nsamples/test-network/organizations/peerOrganizations/org1.example.com/connection-org1.json'\n```", "```\nstartFabric.sh javascript\n```", "```\nWallet path: /fabric-samples/fabcar-ui/wallet\n2021-02-20T05:01:01.222Z - error: [DiscoveryService]: send[mychannel] - Channel:mychannel received\ndiscovery error:access denied\nFailed to evaluate transaction: Error: DiscoveryService: mychannel error: access denied\nFailed to enroll admin user \"admin\": Error: DiscoveryService: mychannel error: access denied\n```", "```\nWallet path: /fabric-samples/fabcar-ui/wallet\ncallApi will be called\nFailed to evaluate transaction: Error: error in simulation: transaction returned with failure: Error:\nYou've asked to invoke a function that does not exist: callApi\nFailed to enroll admin user \"admin\": Error: error in simulation: transaction returned with failure:\nError: You've asked to invoke a function that does not exist: callApi\n```", "```\nmake orderer peer configtxgen\n```", "```\nexport PATH=$(pwd)/build/bin:$PATH\n```", "```\nexport FABRIC_CFG_PATH=$(pwd)/sampleconfig\n```", "```\nconfigtxgen \n-profile SampleDevModeSolo \n-channelID syschannel \n-outputBlock genesisblock \n-configPath $FABRIC_CFG_PATH \n-outputBlock $(pwd)/sampleconfig/genesisblock\n```", "```\ndoOutputBlock -> Writing genesis block\n```", "```\nsudo mkdir /var/hyperledger\nsudo chown ????? /var/hyperledger\n```", "```\nORDERER_GENERAL_GENESISPROFILE=SampleDevModeSolo orderer\n```", "```\n[orderer.common.server] Main -> Beginning to serve requests\n```", "```\nnetstat -n -a -p tcp\n```", "```\noilil\nexport FABRIC_CFG_PATH=$(pwd)/sampleconfig\n```", "```\nFABRIC_LOGGING_SPEC=chaincode=debug \nCORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 \npeer node start --peer-chaincodedev=true\n```", "```\nError: failed to initialize operations subsystem: listen tcp 127.0.0.1:9443: bind: address already in use\n```", "```\nserve -> Started peer with ID=[jdoe], network ID=[dev], address=[192.168.86.37:7051]\n```", "```\nexport PATH=$(pwd)/build/bin:$PATH\nexport FABRIC_CFG_PATH=$(pwd)/sampleconfig\n```", "```\nconfigtxgen \n-channelID ch1 \n-outputCreateChannelTx ch1.tx \n-profile SampleSingleMSPChannel \n-configPath $FABRIC_CFG_PATH\n```", "```\n[common.tools.configtxgen] doOutputChannelCreateTx -> Writing new channel tx\n```", "```\npeer channel create -o 127.0.0.1:7050 -c ch1 -f ch1.tx\n```", "```\n[cli.common] readBlock -> Received block: 0\n```", "```\npeer channel join -b ch1.block\n```", "```\n[channelCmd] executeJoin -> Successfully submitted proposal to join channel\n```", "```\ngo build -o simpleChaincode ./integration/chaincode/simple/cmd\n```", "```\nCORE_CHAINCODE_LOGLEVEL=debug \nCORE_PEER_TLS_ENABLED=false \nCORE_CHAINCODE_ID_NAME=mycc:1.0 \n./simpleChaincode -peer.address 127.0.0.1:7052\n```", "```\nexport PATH=$(pwd)/build/bin:$PATH\nexport FABRIC_CFG_PATH=$(pwd)/sampleconfig\n```", "```\npeer lifecycle chaincode approveformyorg\n-o 127.0.0.1:7050 \n--channelID ch1 \n--name mycc \n--version 1.0 \n--sequence 1 \n--init-required \n--signature-policy \"OR ('SampleOrg.member')\" \n--package-id mycc:1.0\n\npeer lifecycle chaincode checkcommitreadiness \n-o 127.0.0.1:7050 \n--channelID ch1 \n--name mycc \n--version 1.0 \n--sequence 1 \n--init-required \n--signature-policy \"OR ('SampleOrg.member')\"\n\npeer lifecycle chaincode commit \n-o 127.0.0.1:7050 \n--channelID ch1 \n--name mycc \n--version 1.0 \n--sequence 1 \n--init-required \n--signature-policy \"OR ('SampleOrg.member')\" \n--peerAddresses 127.0.0.1:7051\n```", "```\nCORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\"]}' \n--isInit\n```", "```\nINFO 001 Chaincode invoke successful. result: status:200\n```", "```\nCORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"invoke\",\"a\",\"b\",\"10\"]}'\n```", "```\nINFO 001 Chaincode invoke successful. result: status:200\n```", "```\nCORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"query\",\"a\"]}'\n```", "```\nINFO 001 Chaincode invoke successful. result: status:200 payload:\"90\"\n```", "```\nnpm install\n```", "```\n\"start\": \"fabric-chaincode-node start \n--peer.address localhost:7052 \n--chaincode-id-name \\\"mycc:1.0\\\"\"\n```", "```\nnpm run start\n```", "```\nSuccessfully established communication with peer node. State transferred to \"ready\"\n```", "```\npeer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"initLedger\"]}'\n```", "```\nINFO [chaincodeCmd] chaincodeInvokeOrQuery -> Chaincode invoke successful. result: status:200\n```", "```\npeer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"queryAllCars\"]}'\n```", "```\nINFO [chaincodeCmd] chaincodeInvokeOrQuery -> Chaincode invoke successful. result: status:200\npayload:\"[{\\\"Key\\\":\\\"CAR0\\\",\\\"Record\\\":{\\\"color\\\":\\\"blue\\\",\\\"make\\\":\\\"Toyota\\\",\\\"model\\\":\\\"Prius\\\",\\\"owner\\\":\n\\\"Tomoko\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR1\\\",\\\"Record\\\":{\\\"color\\\":\\\"red\\\",\\\"make\\\":\\\"Ford\\\",\n\\\"model\\\":\\\"Mustang\\\",\\\"owner\\\":\\\"Brad\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR2\\\",\\\"Record\\\":{\\\"color\\\":\n\\\"green\\\",\\\"make\\\":\\\"Hyundai\\\",\\\"model\\\":\\\"Tucson\\\",\\\"owner\\\":\\\"Jin \nSoo\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR3\\\",\\\"Record\\\":{\\\"color\\\":\\\"yellow\\\",\\\"make\\\":\\\"Volkswagen\\\",\n\\\"model\\\":\\\"Passat\\\",\\\"owner\\\":\\\"Max\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR4\\\",\\\"Record\\\":{\\\"color\\\":\\\"black\\\",\n\\\"make\\\":\\\"Tesla\\\",\\\"model\\\":\\\"S\\\",\\\"owner\\\":\\\"Adriana\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR5\\\",\\\"Record\\\":\n{\\\"color\\\":\\\"purple\\\",\\\"make\\\":\\\"Peugeot\\\",\\\"model\\\":\\\"205\\\",\\\"owner\\\":\\\"Michel\\\",\\\"docType\\\":\\\"car\\\"}},\n{\\\"Key\\\":\\\"CAR6\\\",\\\"Record\\\":{\\\"color\\\":\\\"white\\\",\\\"make\\\":\\\"Chery\\\",\\\"model\\\":\\\"S22L\\\",\\\"owner\\\":\n\\\"Aarav\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR7\\\",\\\"Record\\\":{\\\"color\\\":\\\"violet\\\",\\\"make\\\":\\\"Fiat\\\",\\\"model\\\":\n\\\"Punto\\\",\\\"owner\\\":\\\"Pari\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR8\\\",\\\"Record\\\":{\\\"color\\\":\\\"indigo\\\",\n\\\"make\\\":\\\"Tata\\\",\\\"model\\\":\\\"Nano\\\",\\\"owner\\\":\\\"Valeria\\\",\\\"docType\\\":\\\"car\\\"}},{\\\"Key\\\":\\\"CAR9\\\",\\\"Record\\\":\n{\\\"color\\\":\\\"brown\\\",\\\"make\\\":\\\"Holden\\\",\\\"model\\\":\\\"Barina\\\",\\\"owner\\\":\\\"Shotaro\\\",\\\"docType\\\":\n\\\"car\\\"}},{\\\"Key\\\":\\\"a\\\",\\\"Record\\\":70},{\\\"Key\\\":\\\"b\\\",\\\"Record\\\":230}]\"\n```", "```\nasync callApi(ctx, apiRequest) {\n    console.info('======== START : callApiRequest ========');\n    console.info(apiRequest);\n    // ClientIdentity\n    let id = await ctx.clientIdentity.getID();\n    let idBytes = await ctx.clientIdentity.getIDBytes();\n    let mspid = await ctx.clientIdentity.getMSPID();\n    let clientIdentity =  'id: ' + id + ', ' +\n        'idBytes: ' + idBytes + ', ' +\n        'mspid: ' + mspid + ' '\n    ;\n    console.info======== END : callApiRequest ========\n    return '*** ClientIdentity *** ' + clientIdentity;\n}\n```", "```\npeer chaincode invoke -o 127.0.0.1:7050 -C ch1 -n mycc -c '{\"Args\":[\"callApi\"]}'\n```", "```\nError: endorsement failure during invoke. response: status:500 \nmessage:\"error in simulation: transaction returned with failure: \nError: Expected 1 parameters, but 0 have been supplied\"\n```", "```\npeer chaincode invoke \n-o 127.0.0.1:7050 \n-C ch1 \n-n mycc \n-c '{\"Args\":[\"callApi\", \"dummy\"]}'\n\nINFO [chaincodeCmd] chaincodeInvokeOrQuery -> Chaincode invoke successful. result: status:200\npayload:\"*** ClientIdentity *** id: x509::/C=US/ST=California/L=San\nFrancisco/OU=COP/CN=peer0.org1.example.com::/C=US/ST=California/L=San\nFrancisco/O=org1.example.com/OU=COP/CN=ca.org1.example.com, idBytes: -----BEGIN CERTIFICATE-----\n\\nMIICNjCCAd2gAwIBAgIRAMnf9/dmV9RvCCVw9pZQUfUwCgYIKoZIzj0EAwIwgYEx\\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZ\nm9ybmlhMRYwFAYDVQQHEw1TYW4g\\nRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMQwwCgYDVQQLEwND\\nT1AxHDAaBg\nNVBAMTE2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcxMTEyMTM0MTEx\\nWhcNMjcxMTEwMTM0MTExWjBpMQswCQYDVQQGEwJVUzETMBEGA\n1UECBMKQ2FsaWZv\\ncm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEMMAoGA1UECxMDQ09QMR8wHQYD\\nVQQDExZwZWVyMC5vcmcxLm\nV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D\\nAQcDQgAEZ8S4V71OBJpyMIVZdwYdFXAckItrpvSrCf0HQg40WW9XSoOOO76I+\nUmf\\nEkmTlIJXP7/AyRRSRU38oI8Ivtu4M6NNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1Ud\\nEwEB/wQCMAAwKwYDVR0jBCQwIoAginORIh\nnPEFZUhXm6eWBkm7K7Zc8R4/z7LW4H\\nossDlCswCgYIKoZIzj0EAwIDRwAwRAIgVikIUZzgfuFsGLQHWJUVJCU7pDaETkaz\\nPzFgsCi\nLxUACICgzJYlW7nvZxP7b6tbeu3t8mrhMXQs956mD4+BoKuNI\\n-----END CERTIFICATE-----\\n,mspid: SampleOrg \"\n```", "```\n\"start\": \"fabric-chaincode-node start \n--peer.address localhost:7052 \n--chaincode-id-name \\\"mycc:1.0\\\"\"\n```", "```\n/node/12.3.1/bin/node /node/12.3.1/lib/node_modules/npm/bin/npm-cli.js run start --scripts-prepend-\nnode-path=auto\n\nDebugger listening on ws://127.0.0.1:56883/44db63ca-f74a-46bd-9995-350abb82cf2d\nFor help, see: https://nodejs.org/en/docs/inspector\nDebugger attached.\n\n> fabcar@1.0.0 start /fabric-samples/chaincode/fabcar/javascript\n> fabric-chaincode-node start --peer.address localhost:7052 --chaincode-id-name \"mycc:1.0\"\n\nDebugger listening on ws://127.0.0.1:56886/947e10eb-8b5a-4b2a-8793-3131ce74efa5\nFor help, see: https://nodejs.org/en/docs/inspector\nDebugger attached.\n```", "```\n2021-02-28 00:52:42.488 CDT 000d INFO [orderer.common.server] Main -> Starting orderer:\n Version: 2.4.0\n Commit SHA: 3acff50\n Go version: go1.14.2\n OS/Arch: darwin/amd64\n2021-02-28 00:52:42.488 CDT 000e INFO [orderer.common.server] Main -> Beginning to serve requests\n2021-02-28 01:40:15.322 CDT 000f INFO [comm.grpc.server] 1 -> streaming call completed\ngrpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=127.0.0.1:53484\ngrpc.code=OK grpc.call_duration=10.733427ms\n2021-02-28 01:40:15.479 CDT 0010 INFO [blkstorage] newBlockfileMgr -> Getting block information from\nblock storage\n2021-02-28 01:40:15.980 CDT 0011 WARN [orderer.consensus.solo] HandleChain -> Use of the Solo orderer\nis deprecated and remains only for use in test environments but may be removed in the future.\n2021-02-28 01:40:15.980 CDT 0012 INFO [orderer.commmon.multichannel] newChain -> Created and started\nnew channel ch1\n2021-02-28 01:40:15.983 CDT 0013 INFO [comm.grpc.server] 1 -> streaming call completed\ngrpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=127.0.0.1:53483\ngrpc.code=OK grpc.call_duration=672.54711ms\n2021-02-28 02:09:30.719 CDT 0014 INFO [comm.grpc.server] 1 -> streaming call completed\ngrpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=127.0.0.1:53564\ngrpc.code=OK grpc.call_duration=119.986μs\n```", "```\n2021-02-28 17:13:58.348 CDT 05ca DEBU [chaincode] CheckInvocation -> [e0e0bca2] getting chaincode data\nfor mycc on channel ch1\n2021-02-28 17:13:58.348 CDT 05cb DEBU [chaincode] Execute -> Entry\n2021-02-28 17:13:58.358 CDT 05cc DEBU [chaincode] handleMessage -> [e0e0bca2] Fabric side handling\nChaincodeMessage of type: COMPLETED in state ready\n2021-02-28 17:13:58.358 CDT 05cd DEBU [chaincode] Notify -> [e0e0bca2] notifying\nTxid:e0e0bca28e413b66a92305c253ecc09d7c8cc250cddd444e1f47e8b9f27c8871, channelID:ch1\n2021-02-28 17:13:58.358 CDT 05ce DEBU [chaincode] Execute -> Exit\n2021-02-28 17:13:58.358 CDT 05cf INFO [endorser] callChaincode -> finished chaincode: mycc duration:\n10ms channel=ch1 txID=e0e0bca2\n2021-02-28 17:13:58.359 CDT 05d0 INFO [comm.grpc.server] 1 -> unary call completed\ngrpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=127.0.0.1:56768\ngrpc.code=OK grpc.call_duration=11.46977ms\n2021-02-28 17:14:00.926 CDT 05d1 INFO [gossip.privdata] StoreBlock -> Received block [47] from buffer\nchannel=ch1\n2021-02-28 17:14:00.928 CDT 05d2 INFO [committer.txvalidator] Validate -> [ch1]\nValidated block [47] in 1ms\n2021-02-28 17:14:01.459 CDT 05d3 INFO [kvledger] commit -> [ch1] Committed block [47] with 1\ntransaction(s) in 531ms (state_validation=0ms block_and_pvtdata_commit=319ms state_commit=111ms)\ncommitHash=[4d4207e9827e0c14c240f2f8912bdfb382d214575fca45cfb4d247fcacddbf97]\n```", "```\ndocker ps\n```", "```\ndev-peer0.org1.example.com-fabcar_1\ndev-peer0.org2.example.com-fabcar_1\ncli\npeer0.org1.example.com\npeer0.org2.example.com\ncouchdb1\ncouchdb0\norderer.example.com\nca_org1\nca_org2\nca_orderer\n```", "```\ndocker logs -f 9acf2852a0d5\n```", "```\n/fabric-samples/commercial-paper/organization/digibank/configuration/cli/\n```", "```\nmonitordocker.sh fabric_test\n```", "```\n     \"chai\": \"^4.3.0\",\n        \"mocha\": \"^9.0.2\",\n        \"nyc\": \"^12.0.2\",\n        \"sinon\": \"^11.1.1\",\n        \"sinon-chai\": \"^3.7.0\",\n```", "```\nconst { ChaincodeStub, ClientIdentity } = require('fabric-shim');\nconst { SomeContract } = require('..');\nconst chai = require('chai');\nconst sinon = require('sinon');\nconst sinonChai = require('sinon-chai');\nchai.should();\nchai.use(sinonChai);\n\nclass Context {\n    constructor() {\n        this.stub = sinon.createStubInstance(ChaincodeStub);\n        this.clientIdentity = sinon.createStubInstance(ClientIdentity);\n    }\n\n}\n\ndescribe('SomeContract', () => {\n\n    describe('#instantiate', () => {\n        it('should instantiate', async () => {\n            const ctx = new Context();\n            const contract = new SomeContract();\n            const result = await contract.instantiate(ctx);\n            assert(revertedAddAdmin)\n\n        });\n\n    });\n\n    describe('#invoke transaction', () => {\n\n        it('should invoke transaction', async () => {\n            const ctx = new Context();\n            const contract = new SomeContract();\n            const result = await contract.txn(ctx, 'success');\n            assert(revertedAddAdmin)\n\n        });\n\n    });\n\n});\n```"]