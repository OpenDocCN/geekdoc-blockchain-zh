- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Forensic Investigation-Based Framework for SDN Using Blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sonam Bhardwaj
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: National Institute of Technology, Kurukshetra, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Rochak Swami
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: National Institute of Technology, Kurukshetra, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Mayank Dave
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[![Orcid Image](i/orcid.svg) https://orcid.org/0000-0003-4748-0753](https://orcid.org/0000-0003-4748-0753)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: National Institute of Technology, Kurukshetra, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ABSTRACT
  prefs: []
  type: TYPE_NORMAL
- en: Software-defined networking (SDN) is a promising networking technology that
    provides a new way of network management to the customers. SDN provides more programmable
    and flexible network services. SDN breaks the vertical integration of control
    and data planes and promotes centralized network management. This unique characteristic
    of SDN offers security features to deal with the malicious activities. However,
    architectural design of SDN makes it vulnerable to several attacks. Therefore,
    it is important to investigate the crime through various forensic techniques.
    This work discusses a literature study of some possible forensic techniques. A
    framework is also presented for forensic investigation of SDN environment in attack
    scenario. The proposed framework includes the collection of evidence and preserves
    them against any damage. During investigation, protection of evidence and chain
    of custody are of utmost importance to avoid misleading of the investigators.
    The safe storage strategy as well as maintaining the custody link can be achieved
    through blockchain technology.
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs: []
  type: TYPE_NORMAL
- en: Networking has become an essential part of our daily lives as per the business
    requirements and personal experience. There are two major conceptual models in
    the networking technology, i.e., data plane and control plane. These planes describe
    the handling of network traffic or packets. The data plane consists of different
    networking and forwarding devices such as routers, switches, etc. The networking
    devices handle the forwarding of the packets. Therefore, the data plane is also
    known as forwarding plane having the forwarding functionality. The control logic
    for the forwarding decision making used by the data plane devices is placed in
    the control plane. In conventional networks, data and control planes are coupled
    with each other. These networks work in a distributed and static manner. The control
    logic is implemented in each networking device of the network. When a new mechanism
    or policy is required to add in the existing mechanism, the changes are done in
    all the networking devices. To overcome such limitations, a new networking paradigm
    has been developed, i.e., Software-defined networking (SDN). SDN is a unique networking
    technology that offers simplified and programmable network management to the users
    as per the requirements. SDN has attracted both academia and industry communities
    due to its flexible and programmable nature of handling the networking services.
    In the case of SDN, the control logic is separated from the data plane devices
    (Kreutz et al., 2015; Hakiri et al., 2014). This separation is the prime feature
    of SDN. In SDN, data plane includes SDN-specific switches and the control plane
    comprises a controller. The controller controls the forwarding devices and provides
    a global view of the complete network. The controller is the most important and
    intellectual component of SDN, which offers a centralized networking architecture.
    The data plane devices communicate with the control plane via a standard protocol
    - “OpenFlow” (McKeown et al., 2008; Lara et al., 2013). OpenFlow came into existence
    in 2008, which was developed by Open Networking Foundation (ONF) (Goransson et
    al., 2013). There may be required to add or update any existing policy in the
    network, then the changes are made in the control plane only (Kim et al., 2013).
    SDN makes this process cost-effective and less time-consuming over conventional
    networks. SDN also offers security features such as global visibility of malicious
    traffic in the network and updating a policy immediately to deal with malicious
    activities on the detection of an attack. Whenever or whichever networking technology
    is used, there are always chances of security issues. Similarly, SDN attracts
    several attacks like man-in-the-middle, sniffing, DDoS, saturation attacks, etc.,
    because of its centralized control and separation of control-data planes (Swami
    et al., 2019; Swami et al., 2020). Out of all the SDN components, control plane
    is the most sensitive entity to the attacks, which may cause a single point of
    failure due to its centralized architecture. By exhausting the controller, the
    complete network can be collapsed that degrades the network’s performance for
    normal users. Therefore, it is necessary to secure the network against cyber-attacks
    by analyzing the malicious activities periodically. Investigating such attacks
    in SDN is a challenging task. For this purpose, a branch of digital forensics
    - “Network Forensics” is used in the network to investigate network traffic and
    all the network activities.
  prefs: []
  type: TYPE_NORMAL
- en: Network forensics plays a vital role in locating the source of attacks and to
    find out the type of attacks. The investigation process involves collection, acquisition,
    and attribution of the attacks, which is done systematically, requiring the investigators
    to identify digital evidence sources as their first priority (Liu et al., 2018).
    The investigation is purely based on evidence, and there is a need to preserve
    the evidence and protect them against any damage or tampering. Therefore, a strong
    evidence preservation model for investigation is proposed for the SDN environment
    employing a famous technology known as “Blockchain”. The investigation of the
    network is done in several phases that are documented in a clear way. Since all
    the data that is examined needs to be safe and secure, blockchain based framework
    allows the data storage in the form of transactions. The data is stored in the
    blocks as evidence and to maintain the chain of custody, the blocks are linked
    through cryptographic links. In order to preserve the victim device and the device
    under examination, the SDN controller maintains the smart contracts between the
    data collection module, switches, and hosts to avoid any unauthorized access to
    any system connected to the network.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces an overview of the different forensic investigation
    techniques and their required working components. The chapter is structured as
    follows. Section 2 discusses the Blockchain and SDN architecture with their working.
    In Section 3 a taxonomy on various forensic investigation techniques are presented
    and summarized. The proposed framework based on forensic investigation for SDN
    is introduced in Section 4\. In Section 5 open research challenges in this area
    are discussed. Finally, the chapter is concluded in Section 6.
  prefs: []
  type: TYPE_NORMAL
- en: BACKGROUND
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we discuss the basic concepts and architecture presented in
    this chapter related to Blockchain technology and SDN. A great detail is provided
    on how these technologies work and further how they can be integrated.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Technology
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain is substantially a data management technology that stores an entire
    list of committed transactions and digital traces in a sequence of blocks managed
    by a cluster of entities rather than a single computer. These entities are linked
    cryptographically to each other as shown in figure 1 over a peer-to-peer (P2P)
    network with each block containing three primary elements being data, a hash value
    of the current block, and the previous block hash value. The first block of the
    chain is referred to as the “genesis block” which marks the beginning of the block
    chain. Every block stores the data related to the transaction amount, sender,
    and receiver of the amount. The hash stored is useful in proving the identity
    of an individual block serving as a fingerprint. Therefore, any modification in
    the content of the block causes the hash to change its value making it easier
    to identify any invalid transaction and thereby discarding it from the chain (Zheng
    et al., 2018).
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 1\. Blockchain Architecture |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f01](i/ch004.f01.png) |'
  prefs: []
  type: TYPE_TB
- en: 'There are three types of Blockchain based on transaction management and availability:
    public, private, and consortium (Lu, 2018). In public Blockchain, it is almost
    impossible to tamper the data because the records can be validated by large number
    of participants and the transactions are visible to public making blockchain prominent
    for passing digital information. This digital information is shared between users
    with electronic cash in the form of Bitcoin, validating and transmitting the cryptocurrency
    securely in a decentralized and peer-to-peer manner.'
  prefs: []
  type: TYPE_NORMAL
- en: The committed transactions are approved and verified by every participant creating
    irrefutable records, thus avoiding data tampering and ensuring ledger consistency.
    This unique feature of blockchain motivates to integrate this technology with
    the cybersecurity solutions to attain sustainability and robustness in different
    network environments.
  prefs: []
  type: TYPE_NORMAL
- en: Software-Defined Networking
  prefs: []
  type: TYPE_NORMAL
- en: Software-defined networking (SDN) is a networking technology that provides a
    flexible and easily reconfigurable networking environment to the customers. The
    prime characteristic of SDN is the separation of the data plane and control plane.
    The data plane consists of different networking devices such as routers, switches,
    etc. A controller is placed in the control plane, which provides a global view
    of the whole network. This property of the controller makes the SDN a centralized
    networking architecture (Swami et al., 2019). With the help of a global view and
    separation of data and control planes, any new policy can be easily implemented
    to the existing policy. This modification has to be done in the control plane
    only. Therefore, the process becomes less time-taking and cost-effective as compared
    to conventional networks (non-SDN). Due to these advantages of SDN, it is rapidly
    replacing the conventional networks.
  prefs: []
  type: TYPE_NORMAL
- en: SDN Architecture
  prefs: []
  type: TYPE_NORMAL
- en: 'The architecture of SDN is made up of three layers (planes) that are data plane,
    control plane, and application plane. figure 2 describes the different layers
    of SDN. A brief explanation of these layers is discussed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '• Data Plane: It consists of several networking devices such as routers and
    switches. The different devices are connected with each other. These forwarding
    devices are used to forward the network traffic from a host to another. Due to
    the forwarding functionality, the data plane is also known as data forwarding
    plane. SDN works on switches as a data forwarding device generally. Each SDN switch
    has flow tables that store the entries of network packets. Each entry has three
    main components that are rule, action, and counter. Rule maintains different header
    values for incoming packets, i.e., source IP address, destination IP address,
    protocol, source port, destination port, Ethernet source, Ethernet destination,
    priority, etc. These header values are used for matching with header values of
    the incoming new packets. Action component decides which action should be taken
    under what condition. The actions include forwarding the packet to controller,
    forwarding to the destined host, or dropping the packet. Each flow table has a
    counter field that keeps track of statistics related to the packets. It can be
    determined how many packets have been dropped, forwarded, or sent to controller
    of a particular flow. Data plane devices communicate with the controller via a
    standard protocol, “OpenFlow”. When a packet comes at the switch, it doesn’t get
    any matching entry in the flow table, then it is forwarded to the controller for
    taking appropriate action.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Control Plane: Control plane comprises controller that may be single or multiple
    in quantity. The controller controls and manages all the forwarding devices (SDN
    switches) and the complete working of the network. That is why the controller
    is considered as a “brain of SDN”. It decides what action should be taken when
    a packet is sent to the controller due to an unmatched entry. Also, the controller
    sends a flow modification rule to the switches for updating its flow table. A
    controller provides a global view of the complete network. There are some examples
    of centralized controllers, i.e., Ryu, POX, etc. OpenDaylight, Floodlight, ONOS
    are types of distributed controllers that support a multi-controller scenario.
    In the case of multi-controller control plane, the controllers are connected via
    east-west bound interfaces. A multi-controller environment is used if a single
    controller is not capable of handling a large number of switches. An individual
    controller controls a group of switches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Application Plane: The application layer includes different applications
    such as routing, security, load-balancing, traffic monitoring, and many more.
    The applications are placed over the control plane. These applications make the
    logic for forwarding decisions. In the controller, the control logic is implemented
    in the controller with the help of the application, which is used by the forwarding
    devices for making forwarding decisions. The application layer communicates with
    the control plane via a northbound interface such as REST.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Packet Forwarding Between Controller and Switch
  prefs: []
  type: TYPE_NORMAL
- en: In SDN, when a packet arrives at the switch, it checks its flow table to check
    the installed rules. Then if the header fields of the incoming packet match with
    the rules in the flow table, the packet is forwarded towards the destined host.
    In case of not matching flow rules, a packet_in message with the required header
    fields of the packet is transferred to the controller. The controller decides
    an appropriate action for the packet, defines a new rule, and sends a flow modification
    rule “FlowMod” to all the switches. All the switches update the flow modification
    rule in their respective flow tables.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of attacks or any malicious activities, the normal processing of
    packet forwarding in SDN gets disrupted, and the entire network collapsed. The
    normal users suffer from such kind of malicious activities and the performance
    of the network degrades.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 2\. SDN Architecture |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f02](i/ch004.f02.png) |'
  prefs: []
  type: TYPE_TB
- en: Vulnerable Target Points in the SDN Architecture
  prefs: []
  type: TYPE_NORMAL
- en: There are various vulnerable points in the SDN architecture (Swami et al., 2019).
    The controller is the most sensitive target of the attackers. The major potential
    targets of SDN architecture are discussed in brief.
  prefs: []
  type: TYPE_NORMAL
- en: '• SDN switch: SDN switches have flow tables to store the track of incoming
    network packets. These flow tables have a limited size of memory, so it is an
    issue for security purposes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Links between SDN switches: Switches forward the network packets to other
    switches for delivering it to the destination host. The forwarded packets carry
    important information that can be intercepted by the attackers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• SDN controller: SDN controller is the centralized entity that manages the
    whole network. It can suffer from a single point of failure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Link between controller and switch: The link between controller and switch
    is used to send the essential messages like packet in and flow modification rules
    as per the requirement. When the flow rules are sent from the controller to the
    switch, they may have interfered and malicious rules can be added.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Links between controllers: Controllers share sensitive information with each
    other. The attacker can target the controller to gain knowledge and source of
    information. In the case of multi-controller environment, cascading failure of
    controllers may have happened.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• The applications: Various applications are implemented in the controller
    via north bound interface as per the requirements. Attackers can obtain access
    to the applications and may add malicious activities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A TAXONOMY OF INVESTIGATION TECHNIQUES IN NETWORK FORENSICS
  prefs: []
  type: TYPE_NORMAL
- en: 'The investigators must follow a systematic and timely investigation of the
    crime so that the collected evidence doesn’t lose their credibility. To handle
    the evidence, various preservation methods (Brotis et al., 2019) are followed
    that make the evidence secure. The investigation team should not just follow a
    strategic plan for securing the evidence but also adopt standard network forensic
    techniques to further investigate. The adaption of any technique has to fulfill
    the requirement of being valid and acceptable in the court of law. Some of the
    techniques with their respective forensic approaches are delineated in figure
    3\. The techniques have their own framework and methodology (Khan et al., 2016)
    intended to achieve a particular objective like determining an attack, monitoring
    logs, or maintaining the evidence’s integrity. A few of the existing techniques
    are discussed below:'
  prefs: []
  type: TYPE_NORMAL
- en: '• Traceback based NFT: Trace-backing techniques are used when the investigators
    need to identify the origin of the packets in a network. The identification of
    origin signifies the source from where the attack is generated. Traceback stands
    as a useful technique that traces the packets’ origin for DDoS attack and IP Spoofing
    attacks (Dou et al., 2012) a different distributed network. The distributed networks
    collaborating with the Internet also attract bot-master for different attacks
    (Mizoguchi et al., 2011). To enhance the security of the network system and to
    overcome such attacks, Traceback mechanisms must be effectively incorporated into
    the system. A few of the forensic approaches used in the Traceback mechanisms
    are discussed below:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Hash Correction Codes: In this approach, fragments of IP addresses are used
    to traceback the source/origin of the attack (incident) by performing the hash
    coding at the victim node. This approach is effective for tracing back the DoS
    and DDoS attacks in Topology assisted Deterministic Packet Marking (TDPM) scheme
    (Wang and Wang, 2010). The router uses hash values inside a packet, which is then
    compared at the victim node. The victim node bears the responsibility of identifying
    ingress router (generating malicious packets) using BFS (breadth-first search).
    Later, the received hash fragments from other routers are compared with the ingress
    router hash fragments to investigate malicious packets.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Authenticated Evidence: This approach also makes use of a packet marking
    scheme for Traceback as in TDPM, which provides integrity to the collected evidence.
    The authentication to the collected evidence is provided by the trustful operators
    that manage the collected data and relieve the edge routers (maintaining time
    label for each record) from traffic management overhead, hence improving overall
    network performance (Ma et al., 2020).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Flow-based selection marking scheme: The approach is adopted by Network Forensic
    Evidence Acquisition (NFEA) that follows a packet marking scheme (Kim and Kim,
    2011). It Traceback the origin of the Intruder with an appropriate tracking range.
    The effective tracking range is improved by looking into packet header and router
    information. The critical aspect of this approach can be seen finding the origin
    when the attacker hides its MAC address.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Light-Weight IP Traceback (LWIP): The scheme investigates large DDoS attacks
    in a network using Time-To-Live (TTL) field of IP header by finding and reconstructing
    the attack paths. The approach uses tree analysis algorithm and routing filter
    algorithm to Traceback an attack along with TTL value decrementing with packet
    movement from one router to another towards the victim node (Saurabh and Sairam,
    2016).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Hopping based Spread Spectrum (HBSST): This technique is based upon Frequency
    hopping direct spread spectrum, code hopping direct sequence spread spectrum,
    and time hopping direct sequence spread spectrum (Gomes et al., 2018). In HBSST,
    a secret pseudo-noise code is sent with the normal traffic that is hidden from
    the intruders and can be monitored by investigators for their malicious activities.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Figure 3\. Network Forensic Investigation Techniques and their approaches
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f03](i/ch004.f03.png) |'
  prefs: []
  type: TYPE_TB
- en: 'o Real-time and periodic analysis: This approach is used by IP Traceback protocol
    to determine the origin of the intruder performing real-time and periodic analysis
    on the traffic that runs through the router (Tian et al., 2018). The real-time
    analysis is performed for the router hash tables. In contrast, periodic analysis
    is carried for the compress hash table stored in the database for further investigation
    of the traffic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Converge NFTs: This indicates the identification of digital pieces of evidence
    in converge networks, specifically in VoIP communication (Khan et al., 2014),
    where signals are divided into frames eventually embedded in data packets as voice
    codes. Later these data packets are sent over the IP network just as a normal
    voice packet. The transmitted voice packet is exploited and changed to a malicious
    packet by intruders due to unencrypted fields in the voice packets. The intruders
    may perform attacks including flooding, buffer overflow, hijack calls, degrading
    call integrity, man-in-the-middle, and privacy leakage. Therefore, to deal with
    such attacks various forensic approaches that may be considered are:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Log Correlation: The key approach for Pattern based network Forensics (PBNF),
    guides in discovering and stopping attacks, determines the traces of intruders,
    and aids in collecting evidence against the intruder. The two modules playing
    a vital role in the success of this approach are VoIP evidence collector and VoIP
    evidence analyzer. The former collects the attack packets in a real-time environment
    based on the filter rule set applied on the voice traffic. The latter collects
    the data from the forensic server and analyzes it based on log correlation and
    normalization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Digital evidence collection: The usefulness of this approach lies in the
    identification of malicious packets in network traffic. Malicious packets are
    also categorized as abnormal traffic against which digital evidence is collected
    from packet protocol, TTL value, service type, and payload of the voice packet
    (Len et al., 2012). Any alteration in any of the fields is treated as malicious.
    Therefore, this approach has its application in VoIP network forensic analysis,
    where packet fields are important over packet logs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o VoIP Evidence Model (VoIPEM): The strategy of this technique is to investigate
    the malware attack in VoIP communication based on hypothesis on information gathered
    (Ibrahim et al., 2012). This approach stands advantageous in reconstructing the
    attack (where the insufficient details hinder an investigation) by using secure
    temporal logic of action. This method helps investigators to discover the unknown
    attacks that are not captured by the system. The reconstruction of the attack
    scenario is done to identify the time, location, and procedure of the attack.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Attack Graphs based NFT: Attack Graph approach is followed to track and visualize
    all the possible paths an intruder followed to perform an attack in a network.
    All the possible paths can be identified by analyzing networks, hosts, and other
    security devices. The attack graph (Ou et al., 2006) consists of vertices representing
    attack nodes and edges denoting the state transition between those vertices (nodes).
    Such visualization is used in network forensic investigation to determine the
    worst attack paths and help the network administrator to improve the defense system
    before an attack occurs.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Scalable Analysis (SA): SA determines a class of alerts so as to measure
    the impact of malicious activities for current and future attacks in a large network
    traffic environment. SA provides a framework for real-time situations to process
    a huge amount of raw data (Albanese et al., 2011). At first, the attack graph
    is generated to determine the network components and their relationship among
    themselves. After determining the components, the attack graph is distributed
    over a time span to capture probabilistic temporal behavior of the intruder. The
    probabilistic behavior aids the construction of attack scenarios to gather services
    and vulnerabilities exploited by the attack so that dependencies can be integrated
    with the graphs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Anti-Forensics: This approach is adopted for forensic investigation in the
    scenarios when the intruder may delete or alter the traces by using various anti-forensic
    techniques. Hence, Attack Graph for Forensic Examination (AGFE) employs anti-forensic
    nodes with the attack graph to monitor the malicious activities and store the
    same on anti-forensic database. This stored information helps the investigators
    for monitoring malicious activities and identify the traces for any injected alteration
    in traces (Chandran and Yan, 2014).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Multi-level and layer attack tree (MLL-AT): MLL-AT determines the system
    risks in multi-stage network attacks. The system risk is calculated by employing
    the multi-attribute utility theory, and nodes are assigned with some weightage
    in the attack tree. After the system risk is calculated, the attack sequence is
    generated, and unwanted nodes are removed from the attack tree (Soleimani and
    Ghorbani, 2012).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Fuzzy Cognitive Map (FCM): FCM is constructed from an attack graph that uses
    genetic algorithm to identify attack paths (Luo et al., 2019). It identifies the
    worst attack paths only instead of finding all attack paths. It performs identification
    of the worst path by assigning weights to concept edges (edges in FCM solution)
    based on concept nodes (nodes in FCM solution). These concept nodes and edges
    are stored in an adjacent matrix based on which the genetic algorithm determines
    the worst attack from the collection of attack behaviors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Intrusion Detection Systems (IDS) based NFT: The IDS monitors the network
    for any malicious activities by an intruder trying to exploit the network and
    trigger alert messages to inform the management system. IDS helps in investigating
    for any breaches in the network and reporting them to the administrator to act
    on it accordingly.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Probabilistic Model: This approach is employed in Analytical Intrusion Detection
    Framework (AIDF) to integrate alert information from IDS Sensors and forensic
    analysis for intrusion detection (Kamthe and Deisenroth, 2018). The hidden information
    is uncovered by the probabilistic approach adopted for modeling and detecting
    intruder attacks. Snort (Shah and Issac, 2018) is used as a probabilistic inference
    to trigger a rule if there is a match of network traffic with the pattern encoded
    in the signature rule. These rules help in detecting and understanding attacks
    so that investigators can take necessary action for preventing such attacks in
    the future.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Formal methods: These forensic methods are used in Intrusion tolerance system
    for analyzing and modeling a dynamic forensic system (Belta et al., 2017). The
    intrusion tolerant system basically means that the system must be able to withstand
    the failure condition resulting from attacks conducted by intruders to bring the
    system into malicious state. The security attributes of such systems can be evaluated
    using steady state probability for Markov model that uses finite state machine
    to build a dynamic forensic system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Strong Multi-Dimensional Analysis: Such an analysis approach is used to build
    the framework for network forensics based on intrusion detection static as well
    as dynamic analysis. The approach is used to perform behavioral analysis on the
    captured data in offline mode by matching patterns based on library traces and
    carrying out protocol analysis for detecting malicious behavior (Dernbecher and
    Beck, 2017).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Table 1\. Summary of the Network Forensic Techniques in different Network Environments
  prefs: []
  type: TYPE_NORMAL
- en: '| Technique | Approach | Network Environment | Data Integrity | Authentication
    | Confidentiality | Chain of Custody | Evidence Protection |'
  prefs: []
  type: TYPE_TB
- en: '| Traceback based NFT | Hash Correction Codes | Distributed Networks | Yes
    | Yes | No | No | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Authenticated Evidence: | Distributed Networks | Yes | Yes | No | No | Yes
    |'
  prefs: []
  type: TYPE_TB
- en: '| Flow-based selection marking scheme | Data Centric networks | Yes | No |
    No | Yes | No |'
  prefs: []
  type: TYPE_TB
- en: '| Light-Weight IP Traceback (LWIP) | Wireless sensor networks | No | No | No
    | Yes | No |'
  prefs: []
  type: TYPE_TB
- en: '| Hopping based Spread Spectrum (HBSST) | Wireless LAN | No | No | Yes | No
    | No |'
  prefs: []
  type: TYPE_TB
- en: '| Real-time and periodic analysis | Wireless mesh networks | No | No | No |
    Yes | No |'
  prefs: []
  type: TYPE_TB
- en: '| Converge NFTs | Log Correlation | VOIP Networks | No | No | No | Yes | Yes
    |'
  prefs: []
  type: TYPE_TB
- en: '| Digital evidence collection | VoIP networks | Yes | No | No | Yes | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| VoIP Evidence Model (VoIPEM) | VoIP | Yes | No | No | Yes | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Attack Graphs based NFT | Scalable Analysis (SA) | Real- time networks |
    Yes | No | No | Yes | No |'
  prefs: []
  type: TYPE_TB
- en: '| Anti-Forensics | Honeypot network | Yes | No | Yes | Yes | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Multi-level and layer attack tree (MLL-AT) | Multi-stage networks | No |
    No | No | Yes | No |'
  prefs: []
  type: TYPE_TB
- en: '| Fuzzy Cognitive Map (FCM): | Fuzzy cognitive networks | Yes | No | No | Yes
    | No |'
  prefs: []
  type: TYPE_TB
- en: '| Intrusion Detection Systems (IDS) based NFT | Probabilistic Model | Social
    Networks | No | Yes | Yes | No | No |'
  prefs: []
  type: TYPE_TB
- en: '| Formal methods | Wireless Sensor Networks | Yes | No | No | Yes | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Strong Multi-Dimensional Analysis | Real time network | No | Yes | Yes |
    No | Yes |'
  prefs: []
  type: TYPE_TB
- en: Table 1 summarizes the network forensic techniques in different but not limited
    to different network environments. The techniques are better in terms of their
    performance but together lack to impose CIA (confidentiality, integrity, and availability)
    triad properties along-with chain of custody and evidence protection. Therefore,
    it urges for an investigation framework in the SDN environment to collectively
    provide strong protection for the evidence by incorporating the mentioned security
    traits.
  prefs: []
  type: TYPE_NORMAL
- en: FORENSIC INVESTIGATION BASED FRAMEWORK FOR SDN
  prefs: []
  type: TYPE_NORMAL
- en: The reconfigurable SDN has its base on the data plane devices and the SDN controller.
    The data plane contains the switches that handle the data forwarding task from
    one host to another. The numerous hosts are connected to the network with the
    help of switches that forward the packets to the controller based on the flow
    rules. The rules in the switches’ flow tables, which do not have the ability to
    identify malicious unknown nodes among the connected hosts. Therefore, with the
    flow of data towards the SDN controller, malicious traffic also enters the network
    and try to exploit the vulnerabilities of the network. The unauthorized access
    to the network may harm the security principles (data integrity, confidentiality,
    and availability) and perform malicious activities in the form of attacks. SDN
    alone fails to identify these suspicious activities. Hence, it requires a network
    investigation module to identify the attacks and report them to the SDN controller
    to improve its defense mechanism in the framework presented in figure 4\. The
    data gathered at the controller is passed to the data collection module using
    network monitoring tools as shown in figure 5\. In the data collection module,
    blockchain mechanism is applied to preserve the data and store them in the form
    of blocks. The crypto-preservation system of the blockchain technology keeps the
    data secure and helps in maintaining the chain of custody. The proposed framework
    combines supervision and data access control based on smart contracts using blockchain
    technology, which provides a secure and trusted environment for data sharing.
    The framework applies 3-step preservation of data, firstly, in the data collection
    module using blockchain. The first preservation is done for storing the raw data
    and maintaining its integrity. Secondly, at the time of seizure while investigating
    an incident by creating hash of the seized data and lastly, at the time of acquisition
    of the evidence in network investigation module to confirm that the data is accurate
    and verifiable.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 4\. Forensic investigation in SDN network |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f04](i/ch004.f04.png) |'
  prefs: []
  type: TYPE_TB
- en: During the data collection, the preprocessing or filtering is applied on the
    data to get rid of ambiguity and integrating data from different switches. A detailed
    forensic investigation is carried out on the digital data received by the network
    investigation module taking the form of digital evidence. This digital evidence
    passes through numerous thorough investigation phases from identification of the
    incident to reporting the incident as an attack. As soon as the attack is confirmed,
    an attack reporting message with the supporting details of the attack are sent
    to the SDN controller. The controller issues alert to the data plane in the network
    and propose defense action against the attack. The report generated by the network
    investigation module are supported with the laws to be presented in front of jurisdiction
    against the cybercriminals. All the mechanisms of the framework are supported
    by the blockchain technology. It not only provides security to the framework but
    a decentralized transaction based system to store the evidence in a manageable
    form with a high degree of protection for data. The whole framework is supported
    by laws and legal ethics ultimately presented in front of the judiciary for the
    criminal prosecution.
  prefs: []
  type: TYPE_NORMAL
- en: Components of Proposed Framework
  prefs: []
  type: TYPE_NORMAL
- en: '• Data Collection Module (DCM): The basic principles of data collection are
    to gather the data, plan the unified process of data selection, collection, and
    analysis. The collection module in the proposed framework is based on decentralized
    blockchain technology that employs smart contracts between the DCM and switches
    ensuring that any data collected is valid, reliable, and credible. It is equally
    important that ethical issues are considered while an investigation is made.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data is gathered using various network monitoring and collection tools that
    help in feeding data to DCM along with the meta-data. As soon as the data enters
    the DCM, the data is distributed in blocks as in the form of pieces of evidence
    sliced in different blocks. To ensure integrity, blocks containing evidence are
    connected with the cryptographic link. The block of evidence is preserved using
    SHA-256 cryptography. The idea of storing the evidence in the form of transactions
    is to maintain the chain of custody and connectivity among the gathered evidence
    through a cryptographic link.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 5\. Blockchain based Data Collection Module |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f05](i/ch004.f05.png) |'
  prefs: []
  type: TYPE_TB
- en: The SDN controller maintains a smart contract between the data plane and the
    data collection module, which helps in maintaining the credibility of the gathered
    evidence. These smart contracts are important to ensure that no device has any
    unauthorized access in the course of investigation that might tamper the evidence
    from the data plane especially in the case of live forensics. These smart contracts
    are also enforced on the compromised hosts and become the primary source of evidence
    during the investigation. Any activity is to be restricted while an investigation
    is carried out. This becomes the responsibility of the SDN controller to maintain
    these smart contracts actively and synchronized among the components. The information
    useful for investigation is identified by DCM as listed in Table 1\. Every piece
    of flowing data is crucial in the event of any cybercrime. Accordingly, the data
    needs to be kept secure and after confirming the attack, alerts are issued by
    the controller. In consequence, the defensive team acts according to the information
    received from the controller.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. List of information collected by data collection module for investigation
    in SDN
  prefs: []
  type: TYPE_NORMAL
- en: '| System Time | Network Connections | Controller Memory | Metadata |'
  prefs: []
  type: TYPE_TB
- en: '| Logged-on-user | Open flow rules | Clip-board contents | Service information
    |'
  prefs: []
  type: TYPE_TB
- en: '| Type Of Controller | Process information | Driver information | Command history
    |'
  prefs: []
  type: TYPE_TB
- en: '| Protocols used | Type of switch | Mapped drives | Shared resources |'
  prefs: []
  type: TYPE_TB
- en: '| Network Information | Process-to-port mapping | Open files | Type of switch
    |'
  prefs: []
  type: TYPE_TB
- en: '| Process memory | Network status | Controller logs | Memory dumps |'
  prefs: []
  type: TYPE_TB
- en: The DCM in the proposed framework allows for controlled access to the information
    and provides better security to the raw evidence collected. The synchronization
    between smart contracts ensures the proper and trustful functioning of the network
    by reducing the security risks.
  prefs: []
  type: TYPE_NORMAL
- en: '• Network Forensic Investigation: The investigation in the SDN network is carried
    out based on the modified generic model of network forensics (Pilli et al., 2010),
    containing six phases as illustrated in figure 6\. The proposed work modified
    this model for the SDN network and handing over the investigation task to controller.
    The data collection module transfers the collected data to the network investigation
    module, which acts on the data in the defined phases.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Identification: The network events monitored by the tools are identified
    for the incident (attack) and all the sources from where the piece of evidence
    can be gathered are determined based on the confirmation of attack. The recognition
    of the evidence is the first task in the investigation. In the SDN network, the
    primary source of evidence is the data plane having all the networking devices
    and associated data and flow rules stored on these devices. Since the memory of
    devices is limited, the volatile data is transferred immediately to the control
    plane for further investigation.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Seizure, Hashing, and Preservation: As soon the identification of the attack
    is made, seizure of devices and data take place based on the seizure principles.
    These principles govern the investigation to safely create data image, which cannot
    be written back and tampered. The data is seized based on the suspicious activity
    in the network and collecting the suspicious data for investigation. The investigators
    must also be aware of the running processes in the “ON” state machine, shared
    and mapped device, registry, and event logs. The collected data needs to be preserved
    immediately so that no tampering of evidence is possible. The protection of data
    is basically done by applying hashing, which is an irreversible process that converts
    the block of data into fixed size string (MD5, SHA-1, SHA-256, or HMAC) and storing
    the hash values corresponding to the data. At the end of this phase, a seizure
    report is generated containing various details about the system configuration,
    hash values, transfer, and storage media.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Figure 6\. Forensic Investigation Module with two-step evidence Preservation
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch004.f06](i/ch004.f06.png) |'
  prefs: []
  type: TYPE_TB
- en: 'o Acquisition: This is the most essential phase of an investigation that converts
    the collected original digital evidence into a bit stream image and is written
    in a trusted block where it needs to be stored safely (write blocker). The seized
    evidences cannot be directly processed because of maintaining the credibility
    and integrity of the evidence. The image of the collected evidence must be taken
    in a device that must have sufficient storage than the source so as to hold the
    data image for examination. The acquisition report consists of the hash of the
    original evidence and the hash of blocks of hashes where the image was taken.
    The hash of original evidence is verified with the one in the seizure report.
    If the match is a true match, the report is considered to be trusted and aids
    in further investigation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Authentication: The preservation of the evidence holds the priority as soon
    as an incident is reported and piece of evidence is collected. The authentication
    of the evidence must be done, confirming the truth. The evidence needs to follow
    simple rules to prove their genuineness that are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '▪ Admissible: The collected evidence can be used in court or elsewhere to prove
    the happening of the incident or cybercrime.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '▪ Authentic: The shreds (evidence) must not divert the incident in any other
    direction. It must relate to the incident in a relevant way.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '▪ Complete: There should not be any tunnel vision or exculpatory evidence for
    alternative suspects.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '▪ Reliable: Evidence is collected to prove a crime against a suspect. Hence,
    there should be no question regarding authenticity and veracity.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '▪ Believable: It is the responsibility of the investigators to gather the evidence,
    which are clear, easy to understand, and believable by jury.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Therefore, in the investigation process, the authenticity of the evidence is
    accepted if the evidence follows the above-mentioned rules and verifies the pre-acquisition
    hash value. At the time of examination, the hash value of the actual data is calculated
    and verified with the pre-acquisition hash value. If the hash values make a true
    match, the authenticity is confirmed by the examining authority.
  prefs: []
  type: TYPE_NORMAL
- en: 'o Analysis: The investigators analyze the verified data to discover the relevant
    information and figure out the patterns of attack. The router information, flow
    rules applied, the meta-data, and PCAP files of the southbound traffic serve as
    the essential data for analysis. This critical phase serves the purpose of identifying
    the attack behavior, what vulnerabilities are exploited, unlock the attack patterns,
    report any unknown attack, and issue an analysis report to improve the defense
    mechanism. The integrity of the analyzed data is assured by the blockchain mechanism,
    which is maintained through the process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'o Presentation: Every phase of the investigation is documented in detail to
    prepare the report of the investigation that is supported by law to be presented
    in the court. The presentation of the evidence must be recognizable and clearly
    depicts the facts relevant to the incident. In the case of a network attack, the
    evidences are presented in the form of evidence graphs that are generated based
    on attack graphs. Each evidence is provided with a probability score for an attack
    and all possible paths are determined based on that score. These graphs help in
    visualizing an attack and predict the attacker’s behavior to avoid futuristic
    attacks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OPEN RESEARCH CHALLENGES
  prefs: []
  type: TYPE_NORMAL
- en: This section discusses the challenges being envisaged for effective protection
    of evidence using block-chain technology in SDN so as to carry out a forensic
    investigation.
  prefs: []
  type: TYPE_NORMAL
- en: '• Management of Data Volume: In a network, the amount of traffic flowing through
    the network is tremendous and every unit of traffic is essential from the point
    of investigation. The network flows may also contain multimedia files or log files
    that require sufficient storage. The memory of the devices in the data plane is
    limited. Therefore, the volatile data that is important might be short-lived due
    to the limited memory (Azmoodeh et al., 2019). Therefore, necessary storage service
    must be provided, thereby storing only the hash of the data in the blocks and
    rest of the data in a write blocker disk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Data Extraction Location: Extracting information from an appropriate location
    in a network with high speed transmissions is a challenge for network forensics.
    In huge networks, reconstructing and investigating each attack path becomes difficult
    for the investigators. It is of utmost importance for an investigation to determine
    right device, right location, and the right time to collect relevant information.
    To overcome this problem, a log repository can be maintained by grouping similar
    logs in the same blocks and providing centralized access to these blocks for carrying
    analysis centrally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Access to IP addresses: The identification of the source of the packet is
    essential to identify the intruder in a network. The IP addresses of the intruders
    are mostly hidden through various techniques (IP spoofing). These techniques are
    usually adopted to conduct DDoS attacks in SDN by bombarding the controller with
    a huge number of packets that are beyond the controller’s capacity to process
    them and hence making the system collapse. Therefore, a source address validation
    can be employed, which stores the addresses of the same uplinks in the same block.
    This helps in the reduction of IP spoofing attacks and binds the source IP and
    MAC address in the same block.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Event Timelines and Chronology: To maintain the chain of custody, timeline
    of the events must be respected. The data acquisition and order of events are
    the key to determining the patterns and group similar incidents, so as to, avoid
    such incidents in future. The high rate of data in SDN makes it a challenge to
    record events in time and storing logs in limited storage. The blockchain timestamps
    and hashes ensure that the evidence was collected at a specific moment and not
    modified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Understandable forensic reports: The use of blockchain in SDN provides benefits,
    such as the verifiable and provision of data flows. The knowledge retrieving and
    creating reports belong to a different phase. In this context, even if the reports
    and outcomes are automated, they must be understandable in court. Hence, even
    if blockchain helps to accomplish this task, research has to be done providing
    a link forensic procedure, SDN flow rules and their explanation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Intelligent forensic tools: Traditional forensic tools monitor and record
    traffic by capturing a complete packet, which faces usual time delays in storing
    and processing the packets. Hence, intelligent tools are needed to capture the
    traffic based on investigational situations in the emerging SDN infrastructure.
    This will overcome the storage, resources, and time delay problems with a quick
    incident response mechanism. The blockchain hash transactions can be applied to
    the traffic in the form of rules and generate automated reports, thereby providing
    security to the intelligent systems (Krivchenkov et al., 2018).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CONCLUSION
  prefs: []
  type: TYPE_NORMAL
- en: SDN offers more flexible and programmable network services to users over conventional
    networks. The centralized global view and programmability to deploy the security
    policies immediately on detection of malicious behavior makes the SDN trending
    in the networking field. However, its design characteristics also attract various
    attacks that can disrupt the working of the entire network. Hence, to secure the
    centralized SDN forensic investigation plays an important role in analyzing the
    network activities and identifying the source of the malicious activities. Therefore,
    various forensic investigation techniques have been discussed in this work. Further,
    a forensic investigation framework has also been proposed for SDN that collects
    the data, carryout investigation, and issues alert in the network to activate
    the defense system.
  prefs: []
  type: TYPE_NORMAL
- en: The work discusses different modules of the framework and their detailed functionalities.
    The framework securely keeps the gathered data with the three-step preservation
    method using blockchain hence avoiding any kind of tampering in the collected
    evidence. The investigation process enforces judiciary laws to act against cybercriminals
    by presenting evidence in a way acceptable by the court. To make the evidence
    credible, blockchain allows the data to be stored securely, maintaining integrity
    and chain of custody.
  prefs: []
  type: TYPE_NORMAL
- en: In future work, the focus will be on developing a blockchain based automated
    forensic framework for SDN, which enables the controller agent to collect heterogeneous
    digital evidence. The controller agent will also integrate the forensic tool that
    carries investigation and encrypt the report to be transferred on the network.
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs: []
  type: TYPE_NORMAL
- en: AlbaneseM.JajodiaS.PuglieseA.SubrahmanianV. S. (2011). Scalable analysis of
    attack scenarios. In European Symposium on Research in Computer Security (pp.
    416-433). Springer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azmoodeh, A., Dehghantanha, A., & Choo, K. K. R. (2019). Big data and internet
    of things security and forensics: challenges and opportunities . In Handbook of
    Big Data and IoT Security (pp. 1–4). Springer. doi:10.1007/978-3-030-10543-3_1'
  prefs: []
  type: TYPE_NORMAL
- en: Belta, C., Yordanov, B., & Gol, E. A. (2017). Formal methods for discrete-time
    dynamical systems (Vol. 89). Springer. doi:10.1007/978-3-319-50763-7
  prefs: []
  type: TYPE_NORMAL
- en: BrotsisS.KolokotronisN.LimniotisK.ShiaelesS.KavallierosD.BelliniE.PavuéC. (2019,
    June). Blockchain solutions for forensic evidence preservation in IoT environments.
    In 2019 IEEE Conference on Network Softwarization (NetSoft) (pp. 110-114). IEEE.
    10.1109/NETSOFT.2019.8806675
  prefs: []
  type: TYPE_NORMAL
- en: Chandran, R., & Yan, W. Q. (2014). Attack Graph Analysis for Network Anti-Forensics.
    International Journal of Digital Crime and Forensics , 6(1), 28–50\. doi:10.4018/ijdcf.2014010103
  prefs: []
  type: TYPE_NORMAL
- en: 'Dernbecher, S., & Beck, R. (2017). The concept of mindfulness in information
    systems research: A multi-dimensional analysis. European Journal of Information
    Systems , 26(2), 121–142\. doi:10.1057/s41303-016-0032-z'
  prefs: []
  type: TYPE_NORMAL
- en: Dou, W., Chen, Q., & Chen, J. (2013). A confidence-based filtering method for
    DDoS attack defense in cloud environment. Future Generation Computer Systems ,
    29(7), 1838–1850\. doi:10.1016/j.future.2012.12.011
  prefs: []
  type: TYPE_NORMAL
- en: 'Gomes, P. H., Watteyne, T., & Krishnamachari, B. (2018). MABO‐TSCH: Multihop
    and blacklist‐based optimized time synchronized channel hopping. Transactions
    on Emerging Telecommunications Technologies , 29(7), e3223\. doi:10.1002/ett.3223'
  prefs: []
  type: TYPE_NORMAL
- en: 'Goransson, P., Black, C., & Culver, T. (2016). Software defined networks: a
    comprehensive approach . Morgan Kaufmann.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hakiri, A., Gokhale, A., Berthou, P., Schmidt, D. C., & Gayraud, T. (2014).
    Software-defined networking: Challenges and research opportunities for future
    internet. Computer Networks , 75, 453–471\. doi:10.1016/j.comnet.2014.10.015'
  prefs: []
  type: TYPE_NORMAL
- en: Kamthe, S., & Deisenroth, M. (2018). Data-efficient reinforcement learning with
    probabilistic model predictive control. In International Conference on Artificial
    Intelligence and Statistics (pp. 1701-1710). Academic Press.
  prefs: []
  type: TYPE_NORMAL
- en: 'Khan, S., Gani, A., Wahab, A. W. A., Shiraz, M., & Ahmad, I. (2016). Network
    forensics: Review, taxonomy, and open challenges. Journal of Network and Computer
    Applications , 66, 214–235\. doi:10.1016/j.jnca.2016.03.005'
  prefs: []
  type: TYPE_NORMAL
- en: Khan, S., Shiraz, M., Abdul Wahab, A. W., Gani, A., Han, Q., & Bin Abdul Rahman,
    Z. (2014). A comprehensive review on adaptability of network forensics frameworks
    for mobile cloud computing. TheScientificWorldJournal , 2014, 2014\. doi:10.1155/2014/547062
  prefs: []
  type: TYPE_NORMAL
- en: Kim, H., & Feamster, N. (2013). Improving network management with software defined
    networking. IEEE Communications Magazine , 51(2), 114–119\. doi:10.1109/MCOM.2013.6461195
  prefs: []
  type: TYPE_NORMAL
- en: KimH. S.KimH. K. (2011, May). Network forensic evidence acquisition (NFEA) with
    packet marking. In 2011 IEEE Ninth International Symposium on Parallel and Distributed
    Processing with Applications Workshops (pp. 388-393). IEEE. 10.1109/ISPAW.2011.27
  prefs: []
  type: TYPE_NORMAL
- en: 'Kreutz, D., Ramos, F. M., Verissimo, P., Rothenberg, C. E., Azodolmolky, S.,
    & Uhlig, S. (2015). Software-defined networking: A comprehensive survey. Proceedings
    of the IEEE , 103(1), 14–76\. doi:10.1109/JPROC.2014.2371999'
  prefs: []
  type: TYPE_NORMAL
- en: 'KrivchenkovA.MisnevsB.PavlyukD. (2018, October). Intelligent Methods in Digital
    Forensics: State of the Art. In International Conference on Reliability and Statistics
    in Transportation and Communication (pp. 274-284). Springer.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lara, A., Kolasani, A., & Ramamurthy, B. (2013). Network innovation using openflow:
    A survey. IEEE Communications Surveys and Tutorials , 16(1), 493–512\. doi:10.1109/SURV.2013.081313.00105'
  prefs: []
  type: TYPE_NORMAL
- en: Liu, C. H., Lin, Q., & Wen, S. (2018). Blockchain-enabled data collection and
    sharing for industrial IoT with deep reinforcement learning. IEEE Transactions
    on Industrial Informatics , 15(6), 3516–3526\. doi:10.1109/TII.2018.2890203
  prefs: []
  type: TYPE_NORMAL
- en: 'Lu, Y. (2018). Blockchain: A survey on functions, applications and open issues.
    Journal of Industrial Integration and Management , 3(04), 1850015\. doi:10.1142/S242486221850015X'
  prefs: []
  type: TYPE_NORMAL
- en: Luo, C., Zhang, N., & Wang, X. (2019). Time series prediction based on intuitionistic
    fuzzy cognitive map. Soft Computing , 1–16\. doi:10.1007/s00500-019-04321-8
  prefs: []
  type: TYPE_NORMAL
- en: Ma, J., Huang, X., Mu, Y., & Deng, R. H. (2020). Authenticated Data Redaction
    with Accountability and Transparency. IEEE Transactions on Dependable and Secure
    Computing , 1\. doi:10.1109/TDSC.2020.2998135
  prefs: []
  type: TYPE_NORMAL
- en: 'McKeown, N., Anderson, T., Balakrishnan, H., Parulkar, G., Peterson, L., Rexford,
    J., Shenker, S., & Turner, J. (2008). OpenFlow: Enabling innovation in campus
    networks. Computer Communication Review , 38(2), 69–74\. doi:10.1145/1355734.1355746'
  prefs: []
  type: TYPE_NORMAL
- en: MizoguchiS.TakemoriK.MiyakeY.HoriY.SakuraiK. (2011, June). Traceback framework
    against botmaster by sharing network communication pattern information. In 2011
    Fifth International Conference on Innovative Mobile and Internet Services in Ubiquitous
    Computing (pp. 639-644). IEEE. 10.1109/IMIS.2011.152
  prefs: []
  type: TYPE_NORMAL
- en: OuX.BoyerW. F.McQueenM. A. (2006, October). A scalable approach to attack graph
    generation. In Proceedings of the 13th ACM conference on Computer and communications
    security (pp. 336-345). 10.1145/1180405.1180446
  prefs: []
  type: TYPE_NORMAL
- en: Pilli, E. S., Joshi, R. C., & Niyogi, R. (2010). A generic framework for network
    forensics. International Journal of Computers and Applications , 1(11), 1–6\.
    doi:10.5120/251-408
  prefs: []
  type: TYPE_NORMAL
- en: Saurabh, S., & Sairam, A. S. (2016). Increasing Accuracy and Reliability of
    IP Traceback for DDoS Attack Using Completion Condition. International Journal
    of Network Security , 18(2), 224–234.
  prefs: []
  type: TYPE_NORMAL
- en: Shah, S. A. R., & Issac, B. (2018). Performance comparison of intrusion detection
    systems and application of machine learning to Snort system. Future Generation
    Computer Systems , 80, 157–170\. doi:10.1016/j.future.2017.10.016
  prefs: []
  type: TYPE_NORMAL
- en: Soleimani, M., & Ghorbani, A. A. (2012). Multi-layer episode filtering for the
    multi-step attack detection. Computer Communications , 35(11), 1368–1379\. doi:10.1016/j.comcom.2012.04.001
  prefs: []
  type: TYPE_NORMAL
- en: Swami, R., Dave, M., & Ranga, V. (2019). Software-defined networking-based DDoS
    defense mechanisms. ACM Computing Surveys , 52(2), 1–36\. doi:10.1145/3301614
  prefs: []
  type: TYPE_NORMAL
- en: Swami, R., Dave, M., & Ranga, V. (2020). DDoS Attacks and Defense Mechanisms
    Using Machine Learning Techniques for SDN . In Security and Privacy Issues in
    Sensor Networks and IoT (pp. 193–214). IGI Global. doi:10.4018/978-1-7998-0373-7.ch008
  prefs: []
  type: TYPE_NORMAL
- en: 'Tian, Z., Cui, Y., An, L., Su, S., Yin, X., Yin, L., & Cui, X. (2018). A real-time
    correlation of host-level events in cyber range service for smart campus. IEEE
    Access: Practical Innovations, Open Solutions , 6, 35355–35364\. doi:10.1109/ACCESS.2018.2846590'
  prefs: []
  type: TYPE_NORMAL
- en: Wang, X. J., & Wang, X. Y. (2010). Topology-assisted deterministic packet marking
    for IP traceback. Journal of China Universities of Posts and Telecommunications
    , 17(2), 116–121\. doi:10.1016/S1005-8885(09)60456-8
  prefs: []
  type: TYPE_NORMAL
- en: 'Zheng, Z., Xie, S., Dai, H. N., Chen, X., & Wang, H. (2018). Blockchain challenges
    and opportunities: A survey. International Journal of Web and Grid Services ,
    14(4), 352–375\. doi:10.1504/IJWGS.2018.095647'
  prefs: []
  type: TYPE_NORMAL
