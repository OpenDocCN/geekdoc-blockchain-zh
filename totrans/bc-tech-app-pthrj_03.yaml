- en: '[Chapter 4](contents.xhtml#re_chapter4)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: '[Consensus Algorithms – A Survey](contents.xhtml#re_chapter4)'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共识算法——一项调查
- en: R. Indrakumari, T. Poongodi, Kavita Saini, and B. Balamurugan
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: R. Indrakumari, T. Poongodi, Kavita Saini, 和 B. Balamurugan
- en: Contents
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 内容
- en: '[4.1 Introduction](chapter4.xhtml#ch-4-sec-1)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.1 引言](chapter4.xhtml#ch-4-sec-1)'
- en: '[4.2 Consensus](chapter4.xhtml#ch-4-sec-2)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.2 共识](chapter4.xhtml#ch-4-sec-2)'
- en: '[4.3 Lottery-Based Algorithms](chapter4.xhtml#ch-4-sec-3)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3 基于彩票的算法](chapter4.xhtml#ch-4-sec-3)'
- en: '[4.3.1 Proof of Work](chapter4.xhtml#ch-4-sec-4)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.1 工作证明](chapter4.xhtml#ch-4-sec-4)'
- en: '[4.3.2 Proof of eXercise (PoX)](chapter4.xhtml#ch-4-sec-5)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.2 锻炼证明（PoX）](chapter4.xhtml#ch-4-sec-5)'
- en: '[4.3.3 Proof of Useful Work](chapter4.xhtml#ch-4-sec-6)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.3 有用工作证明](chapter4.xhtml#ch-4-sec-6)'
- en: '[4.3.4 Proof of Stake](chapter4.xhtml#ch-4-sec-7)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.4 权益证明](chapter4.xhtml#ch-4-sec-7)'
- en: '[4.3.5 Delegated Proof of Stake (DPoS)](chapter4.xhtml#ch-4-sec-8)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.5 委托权益证明（DPoS）](chapter4.xhtml#ch-4-sec-8)'
- en: '[4.3.6 Leased Proof of Stake (LPoS)](chapter4.xhtml#ch-4-sec-9)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.6 租赁权益证明（LPoS）](chapter4.xhtml#ch-4-sec-9)'
- en: '[4.3.7 Proof of Elapsed Time](chapter4.xhtml#ch-4-sec-10)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.7 经过时间证明](chapter4.xhtml#ch-4-sec-10)'
- en: '[4.3.8 Proof of Luck (PoL)](chapter4.xhtml#ch-4-sec-11)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.8 运气证明（PoL）](chapter4.xhtml#ch-4-sec-11)'
- en: '[4.3.9 Proof of Space or Proof of Storage](chapter4.xhtml#ch-4-sec-12)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.9 空间证明或存储证明](chapter4.xhtml#ch-4-sec-12)'
- en: '[4.3.9.1 Theory](chapter4.xhtml#ch-4-sec-13)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.9.1 理论](chapter4.xhtml#ch-4-sec-13)'
- en: '[4.3.9.2 Burstcoin](chapter4.xhtml#ch-4-sec-14)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.9.2 Burstcoin](chapter4.xhtml#ch-4-sec-14)'
- en: '[4.3.9.3 SpaceMint](chapter4.xhtml#ch-4-sec-15)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.3.9.3 SpaceMint](chapter4.xhtml#ch-4-sec-15)'
- en: '[4.4 Voting-Based Consensus](chapter4.xhtml#ch-4-sec-16)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 基于投票的共识
- en: '[4.4.1 Byzantine Fault Tolerance-Based Consensus](chapter4.xhtml#ch-4-sec-17)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.4.1 拜占庭容错共识](chapter4.xhtml#ch-4-sec-17)'
- en: '[4.4.2 Crash Fault Tolerance-Based Consensus](chapter4.xhtml#ch-4-sec-18)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.4.2 容错崩溃的共识](chapter4.xhtml#ch-4-sec-18)'
- en: '[4.5 Conclusions](chapter4.xhtml#ch-4-sec-19)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[4.5 结论](chapter4.xhtml#ch-4-sec-19)'
- en: '[References](chapter4.xhtml#b-9781000175257-bib3)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[4.1 Introduction](chapter4.xhtml#re_ch-4-sec-1)'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.1 引言](chapter4.xhtml#re_ch-4-sec-1)'
- en: Blockchain is considered one of the technologies with the most potential [[1](#re_TNF-CH004_CIT00001)].
    Bitcoin, proposed by Nakamoto [[2](#re_TNF-CH004_CIT00002)], attracted researchers
    and industrialist attention towards blockchain as it has the capacity to eradicate
    the limitations of the traditional payment method which depends on a third party.
    In conventional payment methods, while making a payment people trust a third party
    who verifies the validity of their transactions. In most cases, the third party
    is not trustworthy as every transaction is based on a single organization, causing
    insufficient trust. This can be addressed by using many independent organizations,
    which changes the view from centralization to decentralization. Satoshi introduced
    the ledger design that is called block, and contains a verified transaction. Genesis
    block [[3](#re_TNF-CH004_CIT00003)], considered as the first block, contains the
    first transactions of Bitcoin.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链被认为是具有最大潜力的技术之一[[1](#re_TNF-CH004_CIT00001)]。比特币，由中本聪提出[[2](#re_TNF-CH004_CIT00002)]，吸引了研究人员和工业家的注意力，因为其具有消除依赖第三方传统支付方法局限性的能力。在传统的支付方式中，人们在支付时信任第三方来验证他们交易的有效性。在大多数情况下，第三方并不可信，因为每一笔交易都基于一个单一的组织，导致信任不足。这可以通过使用许多独立组织来解决，从而改变从集中化到去中心化的看法。中本聪引入了被称为区块的账本设计，包含一个验证的交易。创世区块[[3](#re_TNF-CH004_CIT00003)]，被认为是第一个区块，包含了比特币的首批交易。
- en: When a transaction occurs its validity is verified by some nodes. Validity here
    refers to the sufficiency of money with the sender and the digital signature of
    the sender [[4](#re_TNF-CH004_CIT00004)]. After verifying the validity, the block
    holding the transaction is added to the chain which can be identified by all other
    nodes. A node can append a block holding various transactions by distributing
    it to other node which requested to add this node to the current chain. The limitation
    in this method is that, if every node requests its preferable node, then there
    exists a mess in the situation. To avoid this, the consensus algorithm is introduced,
    which holds an agreement made between all nodes about which blocks should be appended,
    and which nodes are permitted to append their proposed blocks. Many versions of
    the consensus algorithm have been proposed to date.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当交易发生时，其有效性由一些节点验证。在这里，有效性指的是发送者拥有足够的资金以及发送者的数字签名[[4](#re_TNF-CH004_CIT00004)]。验证有效性后，包含交易的区块被添加到链中，所有其他节点都可以识别它。一个节点可以通过将其分发给请求将此节点添加到当前链中的其他节点，来附加包含各种交易的区块。这种方法的限制是，如果每个节点都请求其首选节点，那么情况就会变得混乱。为了避免这种情况，引入了共识算法，该算法保持了所有节点之间关于应附加哪些区块以及哪些节点被允许附加其提议区块的协议。到目前为止，已经提出了许多共识算法的版本。
- en: In this chapter, various variants of the consensus algorithm in blockchain are
    discussed with two main types. Initially, the proof-based consensus algorithm
    is discussed followed by the voting-based consensus algorithm.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将讨论区块链中的各种共识算法的变体，主要分为两类。首先讨论基于证明的共识算法，然后是基于投票的共识算法。
- en: '[4.2 Consensus](chapter4.xhtml#re_ch-4-sec-2)'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.2 共识](chapter4.xhtml#re_ch-4-sec-2)'
- en: The consensus algorithm is considered as a decision-making procedure for a group
    in that individuals participate actively to make and support decisions that fit
    well for the rest. In other words it can be thought of as a resolution where the
    individuals are supporting the decision. The consensus algorithm is an active
    research topic around the world that updates the distributed shared state in a
    secure manner. In a traditional distributed system, fault tolerance is achieved
    by distributing the shared state across multiple replicas in the network. Based
    upon the preset state transition protocol framed by the state machine the updating
    of replicated shared state occurs, which is referred to as state machine replication.
    The concept behind replication is if one or more node crashes, it will not lose
    anything. The main task of the state machine is to make sure that nodes with the
    same inputs will produce the same outputs. These replicas contact each other to
    construct consensus and consent the finality of the state after a state change
    is executed. In blockchain-based applications, the shared state is the blockchain.
    Consensus can be implemented through various ways such as lottery-based algorithms
    like proof of work (PoW) and proof of elapsed time (PoET) or by voting-based methods
    which include Paxos and Redundant Byzantine Fault Tolerance (RBFT). These methods
    depend upon various fault-tolerance models and network requirements.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 共识算法被视为一个群体决策过程，其中个体积极参与制定和支持适合其余群体的决策。换句话说，它可以被看作是一个决议，个体在支持决策。共识算法是一个在全球范围内积极研究的主题，它以一种安全的方式更新分布式共享状态。在传统的分布式系统中，容错是通过在网络中的多个副本上分布共享状态来实现的。基于状态机预设的状态转换协议，复制共享状态的更新发生，这被称为状态机复制。复制的概念是，如果有一个或多个节点崩溃，它不会丢失任何东西。状态机的主要任务是确保具有相同输入的节点会产生相同的输出。这些副本相互联系，在执行状态更改后构建共识并同意状态的最终性。在基于区块链的应用中，共享状态就是区块链。共识可以通过各种方式实现，例如基于彩票的算法，如工作量证明（PoW）和证明时间流逝（PoET），或者基于投票的方法，包括Paxos和冗余拜占庭容错（RBFT）。这些方法依赖于各种容错模型和网络要求。
- en: In lottery-based algorithms, the winner can be scaled to a huge number of nodes
    as they recommend a block and send it to the remaining nodes of the network for
    validation. When two or more winners propose a block, the forking method is invoked
    to analyze which results in a longer time to finality. In voting-based algorithms,
    the result is based on low latency finality. Here, the nodes transfer the message
    to other nodes and hence take more time to attain consensus, resulting in a trade-off
    between speed and scalability.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于彩票的算法中，胜者可以扩展到大量节点，因为他们推荐一个区块并将其发送到网络中剩余的节点进行验证。当两个或更多的胜者提出一个区块时，分叉方法被调用以分析，这会导致最终结果耗时更长。在基于投票的算法中，结果取决于低延迟的最终性。在这里，节点将消息传递给其他节点，因此达成共识需要更多时间，从而在速度和可扩展性之间产生权衡。
- en: '[4.3 Lottery-Based Algorithms](chapter4.xhtml#re_ch-4-sec-3)'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.3 基于彩票的算法](chapter4.xhtml#re_ch-4-sec-3)'
- en: The lottery-based algorithm is otherwise known as the Nakamoto consensus, after
    the founder of Bitcoin. Here a validator is elected, to make decision about the
    next node to be appended. The lottery-based algorithm is not an equiprobable distribution
    technique, as it has its own probability distribution to the winner. Various algorithms
    based on the lottery-based method are discussed as follows.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 基于彩票的算法也被称为中本聪共识，得名于比特币的创始人。在这里，一个验证者被选中，就下一个要添加的节点做出决定。基于彩票的算法不是等概率分布技术，因为它有自己的概率分布给赢家。下文讨论了基于彩票方法的多种算法。
- en: '[4.3.1 Proof of Work](chapter4.xhtml#re_ch-4-sec-4)'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.1 工作量证明](chapter4.xhtml#re_ch-4-sec-4)'
- en: 'Proof of work (PoW) [[5](#re_TNF-CH004_CIT00005)] is the initial consensus
    protocol used for cryptocurrency that permits the blockchain users to obtain consensus
    in Bitcoin. This protocol particularly involves the SHA-256 hashing algorithm,
    Merkle tree and peer-to-peer (P2P) network to create, broadcast and verify blocks
    in the blockchain network. PoW also incurs costly digital computation since it
    includes various techniques to complete the process. The properties of PoW are
    described below:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明（PoW）[5]是用于加密货币的初始共识协议，允许区块链用户在比特币中达成共识。该协议特别涉及SHA-256散列算法、Merkle树和点对点（P2P）网络，以在区块链网络中创建、传播和验证区块。由于它包括完成过程的各种技术，PoW还造成了昂贵的数字计算。PoW的特性如下：
- en: PoW is developed for permission-less public distributed ledgers and for mining
    processes; it consumes more computational resources.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作量证明（PoW）是为无需许可的公共分布式账本和挖矿过程而开发的；它消耗了更多的计算资源。
- en: To construct a new block, a cryptographic puzzle must be solved by the miner,
    and the user who solves the puzzle first will avail the reward by broadcasting
    the result in the network.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要构建一个新的区块，矿工必须解决一个加密谜题，并且首先解决谜题的用户可以通过在网络上广播结果来获得奖励。
- en: The protocol maintains the transactions in each block in a linear fashion and
    a block consists of the set of transactions.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议以线性方式维护每个区块中的交易，并且一个区块由交易集合组成。
- en: The cryptographically signed transaction will be accepted only if the signature
    is validated and verified in the network.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有当签名在网络上得到验证和确认时，加密签名交易才会被接受。
- en: The challenge-response computation process is known as mining.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挑战-响应计算过程称为挖矿。
- en: A reward is distributed fairly in this protocol. If the miner is determined
    with ‘p’ fraction of whole computation power, they would have a probability ‘p’
    to mine the subsequent blocks.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个协议中，奖励是公平分配的。如果矿工拥有“p”整个计算能力的“p”比例，他们将有机会挖掘后续区块。
- en: If any conflict arises, then the protocol releases multiple branches of blocks;
    however the longer one is retained as the trusted branch.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果产生任何冲突，协议将释放多个区块分支；然而，较长的那个分支被视为可信分支。
- en: The main objective of PoW lies in managing the consensus; a newly entered node
    can spot the current state of the network based on the protocol rules [[6](#re_TNF-CH004_CIT00006)].
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PoW的主要目标是管理共识；新加入的节点可以根据协议规则找出网络的当前状态[[6]]。
- en: 'PoW introduces mining that involves a step for validating a block (group of
    transactions) in the network by displaying the computational proof of the completed
    work. Once a transaction is started, the available miners in the network compete
    each other to become first by solving a cryptographic puzzle and form the block.
    The miner who solves the puzzle successfully broadcasts the solution to the block
    among other peers, and the solution is verified to make the new block acceptable
    on the chain. Some of the implementation details are described below:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明（PoW）引入了挖矿过程，该过程包括在网络上验证区块（交易组）的一个步骤，通过展示已完成工作的计算证明来进行验证。一旦交易开始，网络中的可用矿工就会相互竞争，通过解决一个加密谜题来形成区块。成功解决谜题的矿工将解决方案广播给其他同伴，然后解决方案被验证以使新区块被链接受。一些实现细节如下：
- en: 'a) Bitcoin: It is the first P2P cryptocurrency that permits two participants
    to exchange their payments without any third-party intervention. From the beginning,
    it inspired many sectors such as healthcare, governance, the financial sector,
    etc. The payments in Bitcoin are exchanged with identity anonymity and trivial
    fees. As it is decentralized, it avoids the risk of counterparties and is not
    influenced by any of the policies of financial organizations. Micropayment channels
    are allowed in Bitcoin via the native protocol library [[7](#re_TNF-CH004_CIT00007)]
    and offline lightening network [[8](#re_TNF-CH004_CIT00008)]. The computational
    data can also be sold through zero knowledge proof to obtain the maximum trust
    during a transaction [[9](#re_TNF-CH004_CIT00009)]. A multi-signature transaction
    is also supported to improve the security level [[10](#re_TNF-CH004_CIT00010),
    [11](#re_TNF-CH004_CIT00011), ].'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a) 比特币：它是第一个允许两个参与者无需任何第三方干预即可交换支付的对等加密货币。从一开始，它就激励了许多领域，如医疗保健、治理、金融部门等。比特币中的支付以匿名身份交换，费用微不足道。由于它去中心化，因此避免了对手方的风险，并且不受任何金融机构政策的影响。比特币通过原生协议库[[7](#re_TNF-CH004_CIT00007)]和离线闪电网络[[8](#re_TNF-CH004_CIT00008)]允许微支付通道。通过零知识证明在交易中出售计算数据，以在交易中获得最大信任[[9](#re_TNF-CH004_CIT00009)]。比特币还支持多签名交易，以提高安全级别[[10](#re_TNF-CH004_CIT00010),
    [11](#re_TNF-CH004_CIT00011), ]。
- en: b) Litecoin [[12](#re_TNF-CH004_CIT00012)] is an open-source P2P cryptocurrency
    implementation based on proof of work. It utilizes enhanced security algorithms
    that are both memory- and computationally intensive. Scyrpt is used to prevent
    counterfeiting in the consensus protocol.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b) 以太坊[[12](#re_TNF-CH004_CIT00012)]是一个基于工作量证明的开源P2P加密货币实现。它利用了既占用内存又计算密集型的增强安全性算法。Scyrt用于在共识协议中防止伪造。
- en: c) Other cryptocurrencies implementing PoW are Primecoin, Zcash, Monero, Vertcoin,
    etc.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c) 采用PoW的其他加密货币包括Primecoin、Zcash、Monero、Vertcoin等。
- en: 'Analysis:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 分析：
- en: PoW is a power-consuming protocol that needs a huge amount of computation power
    which is merely a wastage of resources as many efficient protocols are available.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PoW是一个耗电的协议，需要大量的计算能力，而许多有效的协议已经存在，这实际上是一种资源的浪费。
- en: In PoW, the difficulty level also increases and with it the power required to
    solve the cryptographic puzzle. Moreover, it becomes inaccessible for solo miners
    to actively participate in the network.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PoW中，难度级别也会增加，解决加密谜题所需的力量也随之增加。此外，对于单独的矿工来说，积极参与网络变得无法实现。
- en: The protocol is perceived as wasting immense resources due to the extensive
    power consumption. Other consensus protocols are preferably recommended for better
    output and efficient processing.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于PoW的广泛耗电，该协议被认为是在浪费巨大的资源。更推荐使用其他共识协议，以获得更好的输出和有效的处理。
- en: The requirement of high computational power by PoW also guarantees a high level
    of security. An attacker requires 51% of computational power which is simply impossible
    considering the difficulty level of this protocol. However, the PoW is highly
    vulnerable to Sybil attacks, denial-of-service (DoS) attacks and selfish mining
    attacks.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PoW对高计算能力的需求也确保了高安全级别。攻击者需要51%的计算能力，考虑到该协议的难度水平，这根本是不可能的。然而，PoW对Sybil攻击、拒绝服务（DoS）攻击和自私挖矿攻击非常脆弱。
- en: An application-specific integrated circuit (ASIC) is the hardware that manages
    the mining process, and it offers an unfair edge when compared to others in the
    network due to its expense ([Figure 4.1](chapter4.xhtml#fig4.1)).
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序特定的集成电路（ASIC）是管理挖矿过程的硬件，由于其成本高昂，与其他网络中的其他设备相比具有不公平的优势([图4.1](chapter4.xhtml#fig4.1))。
- en: '![](../images/fig4.1.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig4.1.jpg)'
- en: Figure 4.1 Structure of proof of work.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 工作量证明的结构。
- en: '[4.3.2 Proof of eXercise (PoX)](chapter4.xhtml#re_ch-4-sec-5)'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.2 锻炼证明（PoX）](chapter4.xhtml#re_ch-4-sec-5)'
- en: It is a conceptual consensus protocol designed for the distributed ledger which
    consumes huge computational resources of the system. An attempt is being made
    to transform the hash-based PoW puzzle-mining process into a useful output in
    order to avoid wastage of resources. A variant of PoW solves real-world computational
    problems by considering matrices as an exercise. Several matrix-based real-world
    scientific problems in various applications include DNA-RNA matching, image processing,
    data mining, etc.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种为分布式账本设计的概念性共识协议，它消耗系统的大量计算资源。正在尝试将基于哈希的PoW谜题挖掘过程转变为有用的输出，以避免资源的浪费。PoW的一种变体通过考虑矩阵作为练习来解决现实世界的计算问题。在各种应用中，基于矩阵的现实世界科学问题包括DNA-RNA匹配、图像处理、数据挖掘等。
- en: '[4.3.3 Proof of Useful Work](chapter4.xhtml#re_ch-4-sec-6)'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.3 有用工作证明](chapter4.xhtml#re_ch-4-sec-6)'
- en: The conceptual idea was proposed to solve scientific problems focusing on orthogonal
    vectors (OV) as the proof of work, and it also integrates zero-knowledge proof
    concept. With this, the miners can provide only the proof of the solution, not
    the solution itself, to the delegated task. The solution becomes available only
    after the certain pre-set condition is met in the network.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个概念性的想法是为了解决科学问题，关注正交向量（OV）作为工作量证明，并且整合了零知识证明的概念。通过这种方式，矿工可以为委派任务提供解决方案的证明，而不是解决方案本身。在网络上满足一定的预设条件后，解决方案才变得可用。
- en: '[4.3.4 Proof of Stake](chapter4.xhtml#re_ch-4-sec-7)'
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.4 权益证明](chapter4.xhtml#re_ch-4-sec-7)'
- en: Proof of stake (PoS) is a consensus protocol that selects the validator based
    on economic stake (refers the amount of coins that particular validator owns)
    and coin age. It is available in so many variants with significant changes in
    the base protocol. The different protocols differ in minimizing the centralization
    issue and double spending.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 权益证明（PoS）是一种基于经济股份（指的是特定验证者所拥有的硬币数量）和币龄来选择验证者的共识协议。它有众多变体，在基本协议上有显著的改变。不同的协议在最小化集中化和双重支付问题上有所不同。
- en: 'The various properties of PoS are described below:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对PoS的各种属性的描述：
- en: The computational challenge-response process in the protocol is known as minting.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议中的计算挑战-响应过程被称为铸币。
- en: Initially, it was designed for permission-based public distributed ledgers and
    focuses on economical based puzzle solutions.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最初，它是为基于权限的公共分布式账本设计的，关注基于经济的谜题解决方案。
- en: The new coins are not being generated in PoS, hence there is no block reward
    and only the transaction fee will be taken by the miner in PoS.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PoS中，新硬币不是被生成，因此没有区块奖励，矿工只能从PoS中获取交易费用。
- en: A new node always requires rules, protocol messages and recent state to reach
    the current state of the blockchain network.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个新的节点总是需要规则、协议消息和最新的状态来达到区块链网络的当前状态。
- en: The miner for a specific block is chosen based on the economic stake in the
    network.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特定块的矿工是基于网络中的经济股份来选择的。
- en: In PoS, the probability ‘p’ of a validator is directly proportional to the fraction
    ‘p’ of the stake that the miner owns out of all in the round.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PoS中，验证者的概率‘p’与矿工在所有轮次中拥有的股份比例‘p’成正比。
- en: In PoS, the distributed ledger keeps track of the validators with their respective
    stake in the network. The validators in PoS invest stake to gain chances to mine
    the next block. The chances are higher for the validator who has the higher stake.
    The validators will be chosen randomly for block creation. For any cheating attempt,
    the stake will get debited in the system. Moreover, the block creation process
    in PoW is straightforward, and computational power is not significantly required.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在PoS中，分布式账本跟踪网络中的验证者及其相应的股份。PoS中的验证者投资股份以获得挖掘下一个块的机会。股份越高，验证者的机会就越高。随机选择验证者进行块的创建。对于任何作弊尝试，系统中的股份将被扣除。此外，PoW中的块创建过程简单明了，对计算能力的要求并不高。
- en: Ethereum [[13](#re_TNF-CH004_CIT00013)] is an open-source blockchain influenced
    by PoS to reach the consensus. Initially, it was based on PoW cryptocurrency;
    later the consensus mechanism was shifted to Proof of Stake, and it became more
    secure and energy-efficient. Smart contract is available to perform the operation
    in the blockchain network. The Ethereum platform provides a blockchain development
    stack, in which the developers can construct and deploy distributed apps (DApps).
    Huge opportunities are available to form unlimited ideas by using this promising
    technology in the blockchain. Other PoS-based cryptocurrencies are Peercoin, Navvcoin,
    Neo, Decred, Dash, PivX and Reddcoin.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊[[13](#re_TNF-CH004_CIT00013)]是一个开源区块链，受到PoS的影响以实现共识。最初，它基于PoW加密货币；后来，共识机制转变为权益证明，变得更加安全和节能。智能合约可用于在区块链网络上执行操作。以太坊平台提供了一个区块链开发堆栈，开发人员可以在其中构建和部署分布式应用程序（DApps）。使用这项有前景的技术在区块链上形成无限的想法有很大的机会。其他基于PoS的加密货币有Peercoin、Navvcoin、Neo、Decred、Dash、PivX和Reddcoin。
- en: 'Analysis:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 分析：
- en: PoS is energy-efficient and profitable for many stakeholders.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于许多利益相关者来说，PoS是节能且有益的。
- en: It is an eco-friendly protocol since it requires a negligible amount of computation.
    In addition, it does not need any specialized hardware for active participation.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为它需要极少的计算资源，所以它是一种环保协议。此外，它不需要任何专业硬件即可参与。
- en: In PoS, more than 50 percent of power is required by an attacker to corrupt
    the network, and it is easier when compared to obtaining 51% in PoW. To prevent
    such security attacks, an economic penalty approach is followed in PoS to penalize
    the colluding participant. In fact, it is very effective because only major stakeholders
    can influence the network, and they will try to avoid penalties in the network.
    The penalty scheme is successfully implemented in the Ethereum platform; others
    have followed different strategies in order to solve this problem.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PoS中，攻击者需要超过50%的计算能力来破坏网络，这比在PoW中获得51%要容易。为了防止这种安全攻击，PoS采用了一种经济处罚方法，对合谋的参与者进行处罚。实际上，这非常有效，因为只有主要利益相关者才能影响网络，他们会尽量避免在网络上受到处罚。处罚方案在以太坊平台上成功实施；其他方案采用了不同的策略来解决这个问题。
- en: '[4.3.5 Delegated Proof of Stake (DPoS)](chapter4.xhtml#re_ch-4-sec-8)'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.5 委托权益证明（DPoS）](chapter4.xhtml#re_ch-4-sec-8)'
- en: 'Delegated proof of stake (DPoS): It is viewed as the common variation of PoS,
    where the validators are elected by the stakeholders rather being validated by
    themselves. DPoS works based on representative democracy whereas PoS follows the
    direct democracy. The person who is holding wallet can vote for the validator
    in order to create a new block. Validators can be combined with each other to
    create a new block instead of competing with each other as in PoS and PoW. It
    encourages better opportunities for the distribution of reward as voting for a
    normal delegate, who in turn will give rewards back to them, thus results in decentralization.
    The voters should ensure the honest attitude of the validator in order to ensure
    the guarantee of the stake. BitShares and Steem are the most popular implementations
    of DPoS.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 委托权益证明（DPoS）：这被认为是PoS的常见变体，其中验证者是由利益相关者选举产生的，而不是由自己验证。DPoS基于代议制民主运作，而PoS遵循直接民主。持有钱包的人可以为验证者投票以创建新区块。验证者可以相互组合来创建新区块，而不是像PoS和PoW那样相互竞争。它鼓励更好的奖励分配机会，因为为普通代表投票，代表反过来会给他们回报，从而实现去中心化。选民应确保验证者的诚实态度，以确保质押的保证。BitShares和Steem是DPoS最受欢迎的实现。
- en: '[4.3.6 Leased Proof of Stake (LPoS)](chapter4.xhtml#re_ch-4-sec-9)'
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.6 租赁权益证明（LPoS）](chapter4.xhtml#re_ch-4-sec-9)'
- en: It is the least commonly used variant of PoS focusing on the ‘rich get richer’
    issue. It motivates the participants to lease the stake to vote for the node and
    the new block would be created by the node which has more stake. Then the received
    reward will be distributed amongst all leasing participants. The system also motivates
    the number of leasing participants to achieve rewards, hence improving the protocol’s
    security.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是PoS使用最少的变体，关注“富者愈富”的问题。它激励参与者将质押股份出租以投票给节点，新区块将由拥有更多股份的节点创建。然后，收到的奖励将分配给所有租赁参与者。该系统还激励租赁参与者数量以实现奖励，从而提高协议的安全性。
- en: 'Use-cases: The technology is best suited for developing a public transaction
    system. It is more secure and efficient for the construction of public cryptocurrencies.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 应用案例：这项技术最适合于开发公共交易系统。它对于构建公共加密货币更为安全、高效。
- en: '[4.3.7 Proof of Elapsed Time](chapter4.xhtml#re_ch-4-sec-10)'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.7 已逝时间证明](chapter4.xhtml#re_ch-4-sec-10)'
- en: Proof of elapsed time (PoET) [[14](#re_TNF-CH004_CIT00014)] is an efficient
    consensus protocol that influences the utilization of a trusted execution environment
    (TEE). It extends proof of ownership and proof of time in order to enhance the
    efficiency of the mining process by incorporating a fair lottery system. Random
    waiting time is enforced for block creation by leveraging the capabilities of
    TEE. PoET uses Intel-based hardware (e.g. Intel SGX), and it is specifically designed
    for permission-less public distributed ledgers. The participants’ and transaction
    logs are transparent and verifiable, showing more reliability of the network.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 已逝时间证明（PoET）[[14](#re_TNF-CH004_CIT00014)]是一个有效的共识协议，影响了可信执行环境（TEE）的利用。它通过引入一个公平的抽奖系统来提高挖矿过程的效率，扩展了所有权证明和时间证明。通过利用TEE的能力，强制执行区块创建的随机等待时间。PoET使用基于英特尔的硬件（例如英特尔SGX），并且专为无需许可的公共分布式账本而设计。参与者和交易日志是透明和可验证的，显示出网络的更高可靠性。
- en: The systematic procedure of this protocol is similar to PoW, but it consumes
    less computational resources. The nodes compete among themselves in order to solve
    a cryptographic puzzle and search the next block. In the PoET protocol, each validator
    is assigned ‘T’ a random wait time to construct the block and it is tracked by
    it. The validator who has successfully completed the waiting time can create and
    publish the block in the network. The protocol follows both first come first serve
    (FCFS) and a random lottery scheme. The entire process relies on Software Guard
    Extensions (SGX) which assure trusted code execution in a safe environment (i.e.
    Intel Software Guard Extension).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 该协议的系统程序类似于PoW，但消耗的计算资源更少。节点之间相互竞争，以解决一个密码学难题并寻找下一个区块。在PoET协议中，每个验证者被分配一个随机的等待时间`T`来构建区块，并由它来跟踪。成功完成等待时间的验证者可以在网络上创建并发布区块。该协议遵循先来先服务（FCFS）和随机抽奖方案。整个过程依赖于软件保护扩展（SGX），以确保在安全环境中执行可信代码（即英特尔软件保护扩展）。
- en: PoET reaches consensus by maintaining the anonymity of the network participants.
    A monotonic counter-type hardware is maintained in TEE to protect the system from
    malicious activities which also ensures that only one instance is currently executing
    in a single CPU. There may be the chance of creating multiple instances of ‘T’
    wait time by the participants in order to boost their luck. The protocol is highly
    susceptible to various security attacks and lacks security analysis [[10](#re_TNF-CH004_CIT00010)].
    Particularly, Intel Software Guard Extension is vulnerable to rollback attacks
    [[15](#re_TNF-CH004_CIT00015)].
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: PoET通过保持网络参与者的匿名性来达成共识。在TEE中维护一个单调计数器类型的硬件，以保护系统免受恶意活动的影响，同时也确保在单个CPU中只有一个实例正在执行。参与者可能会创建多个`T`等待时间实例，以提高他们的运气。该协议极易受到各种安全攻击，并且缺乏安全性分析[[10](#re_TNF-CH004_CIT00010)]。特别是，英特尔软件保护扩展容易受到回滚攻击[[15](#re_TNF-CH004_CIT00015)]。
- en: Hyperledger Sawtooth [[16](#re_TNF-CH004_CIT00016)] is a modular blockchain
    introduced by Intel, and it follows the PoET consensus algorithm for implementing
    a leader election lottery system. Parallel processing is followed in transactions
    for block creation and validation by using ‘Advance Transaction Execution Engine’.
    The protocol is highly capable in providing efficient throughput among a huge
    network population. Moreover, it is an enterprise grade protocol that enables
    the development process of general-purpose smart contracts.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Sawtooth [[16](#re_TNF-CH004_CIT00016)]是由英特尔推出的一个模块化区块链，它遵循PoET共识算法来实现领导选举彩票系统。在创建和验证区块时，通过使用“Advance
    Transaction Execution Engine”进行并行处理。该协议在大量网络节点中提供高效的吞吐量。此外，它是一个企业级协议，可促进通用智能合约的开发过程。
- en: '[4.3.8 Proof of Luck (PoL)](chapter4.xhtml#re_ch-4-sec-11)'
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.8 运气证明（PoL）](chapter4.xhtml#re_ch-4-sec-11)'
- en: Proof of luck (PoL) is a conceptual permissioned consensus protocol based on
    trusted execution environments (TEEs) (i.e. Intel SGX) [[17](#re_TNF-CH004_CIT00017)].
    It extends the functionality of proof of ownership and proof of time, addressing
    the issues such as centralization of available consensus protocol (PoS, PoW) and
    extensive energy consumption. Moreover, it exhibits low latency of transaction
    validation, and the block confirmation time is 15 seconds greater when compared
    to Ethereum and significantly 10 minutes less than Bitcoin.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运证明（PoL）是基于可信执行环境（TEEs）（即英特尔 SGX）的概念性许可共识协议[[17](#re_TNF-CH004_CIT00017)]。它扩展了所有权证明和时间证明的功能，解决了现有共识协议（PoS，PoW）的集中化和大量能源消耗的问题。此外，它还表现出低事务验证延迟，区块确认时间比以太坊大15秒，比比特币显著小10分钟。
- en: The protocol signals the participants in each round to commit all the available
    uncommitted transactions to a new block and the version block is assigned a numeric
    value. Later, the voting process is started in which the participants vote for
    a number randomly and the node with the highest vote wins the luckiest block.
    The other participants in the network stop the mining process and their own block
    is broadcasted as soon as the luckiest block is received; hence the network congestion
    can be minimized.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该协议在每个轮次中通知参与者提交所有可用未提交的交易到新块，并为版本块分配一个数值。随后，启动投票过程，参与者随机投票，得票最高的节点赢得幸运区块。当接收到幸运区块时，网络中的其他参与者停止挖矿过程，并立即广播自己的区块；因此，可以最小化网络拥塞。
- en: '[4.3.9 Proof of Space or Proof of Storage](chapter4.xhtml#re_ch-4-sec-12)'
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.3.9 空间证明或存储证明](chapter4.xhtml#re_ch-4-sec-12)'
- en: Proof of space or proof of storage [[18](#re_TNF-CH004_CIT00018)] is an ecofriendly
    protocol developed to avoid abuse of resources [[19](#re_TNF-CH004_CIT00019)].
    It is similar to proof of work but instead of computation it involves disk consumption.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 空间证明或存储证明[[18](#re_TNF-CH004_CIT00018)]是一种环保协议，旨在避免资源滥用[[19](#re_TNF-CH004_CIT00019)]。它类似于工作量证明，但涉及磁盘消耗，而不是计算。
- en: Proof of space is meant for public distributed ledgers, and the free disk storage
    is considered as the resource.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空间证明是为公共分布式账本设计的，免费的磁盘存储被视为一种资源。
- en: The influence of a miner’s power over the network is directly proportional to
    the amount of disk space being contributed.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矿工的网络影响力与贡献的磁盘空间成正比。
- en: '[4.3.9.1 Theory](chapter4.xhtml#re_ch-4-sec-13)'
  id: totrans-91
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[4.3.9.1 理论](chapter4.xhtml#re_ch-4-sec-13)'
- en: Proof of storage utilizes disk space to mine a block. It verifies the honesty
    of a remote file by distributing a copy of data to a server and computing a challenge-response
    protocol to ensure the integrity of the data. The actors in the proof-of-storage
    algorithm are the Provers and the Verifiers. Provers are actors who store data,
    and Verifiers are actors who authenticate that the Provers are storing the data.
    Verifiers usually provide a challenge to the Provers, who in turn solve the challenge
    with a proof to the exact proof-of-storage scheme.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 存储证明利用磁盘空间挖出一个区块。它通过将数据分发到服务器并计算挑战-响应协议来验证远程文件的真实性，以确保数据的完整性。证明存储算法中的参与者是证明者和验证者。证明者是存储数据的参与者，验证者是验证证明者是否存储数据的参与者。验证者通常向证明者提供一个挑战，证明者随后用确切的存储证明方案解决该挑战。
- en: Proof of storage generates random solutions called plots in advance using the
    Shabal algorithm and saves it on hard drive. This process is called plotting.
    Following the plotting process, the miners compare the solutions with the recent
    puzzle [[20](#re_TNF-CH004_CIT00020)].
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 存储证明使用 Shabal 算法提前生成随机解决方案，称为图，并将其保存在硬盘上。这个过程被称为绘图。在绘图过程之后，矿工将解决方案与最近的谜题进行比较[[20](#re_TNF-CH004_CIT00020)]。
- en: '[4.3.9.2 Burstcoin](chapter4.xhtml#re_ch-4-sec-14)'
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[4.3.9.2 Burstcoin](chapter4.xhtml#re_ch-4-sec-14)'
- en: Burstcoin is a mineable coin implemented with an eco-friendly proof-of-space
    algorithm in 2014\. It is a decentralized cryptocurrency and payment system that
    depends on space when mining resources [[21](#re_TNF-CH004_CIT00021)]. Burstcoin
    mining is inexpensive, and it can be performed on a mobile device [[22](#re_TNF-CH004_CIT00022)].
    The first Turing complete smart contract which solves computing problems is implemented
    using proof-of-space protocol.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Burstcoin 是一种在 2014 年实现环保空间证明算法的挖矿硬币。它是一个去中心化的加密货币和支付系统，在挖矿资源时依赖于空间[[21](#re_TNF-CH004_CIT00021)]。Burstcoin
    挖矿成本低廉，可以在移动设备上进行[[22](#re_TNF-CH004_CIT00022)]。第一个解决计算问题的图灵完备智能合约是通过空间证明协议实现的。
- en: '[4.3.9.3 SpaceMint](chapter4.xhtml#re_ch-4-sec-15)'
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[4.3.9.3 SpaceMint](chapter4.xhtml#re_ch-4-sec-15)'
- en: SpaceMint is a cryptocurrency, replacing energy-intensive computations associated
    with cryptocurrencies by proof of space. Here miners invest disk space instead
    of computing power. The mining process takes place in two phases, initialization
    and mining. In initializing, the miners contribute N bits of space and create
    secret key pairs. The miners publish its space commitment through a special transaction.
    In the mining phase, mining is incentivized through block rewards and transaction
    fees. Once initialized, each miner attempts to add a block to the blockchain every
    time period. SpaceMint holds three types of transactions, namely, payment, space
    commitments and penalties. Each transaction is signed by the users and sent to
    miners to be added to the block.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: SpaceMint 是一种加密货币，通过证明空间来替代与加密货币相关的能源密集型计算。在这里，矿工投资磁盘空间而不是计算能力。挖矿过程分为两个阶段：初始化和挖矿。在初始化阶段，矿工贡献N位空间并创建密钥对。矿工通过特殊交易发布其空间承诺。在挖矿阶段，挖矿通过区块奖励和交易费用得到激励。一旦初始化，每个矿工都会在每次周期尝试向区块链添加一个区块。SpaceMint
    支持三种交易类型，即支付、空间承诺和处罚。每笔交易都由用户签名并发送给矿工添加到区块中。
- en: '[4.4 Voting-Based Consensus](chapter4.xhtml#re_ch-4-sec-16)'
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.4 基于投票的共识](chapter4.xhtml#re_ch-4-sec-16)'
- en: In voting-based consensus algorithms, the verifying network should be adjustable
    and explicitly known in order to exchange the message without any complication.
    In proof-based consensus algorithms, the nodes are allowed freely to unite and
    pullout from the network.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于投票的共识算法中，验证网络应该是可调整的并且是明确已知的，以便没有任何复杂性地进行消息交换。在基于证明的共识算法中，节点被允许自由地加入或退出网络。
- en: The nodes in the voting-based consensus algorithm communicate with each other
    prior to adding their own blocks into the chain. The execution process is same
    as the conventional fault tolerance method incorporated in the distributed system
    [[23](#re_TNF-CH004_CIT00023)].
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 基于投票的共识算法中的节点在将各自的区块添加到链之前相互通信。执行过程与分布式系统中集成的传统容错方法相同 [[23](#re_TNF-CH004_CIT00023)]。
- en: As in any fault-tolerance method, the voting-based consensuses are intended
    to work when there is a crash in the nodes and sometimes the nodes are subverted.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 像任何容错方法一样，基于投票的共识旨在节点崩溃和有时节点被颠覆时正常工作。
- en: When the node crashes, it waits for the information passed by other nodes. In
    some cases, the waiting node will not receive any proper message or guidance from
    other nodes to make a decision. To prevent this, there should be n + 1 nodes instead
    of n nodes to perform uninterrupted operation [[24](#re_TNF-CH004_CIT00024)].
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当节点崩溃时，它等待其他节点传递的信息。在某些情况下，等待的节点不会从其他节点收到任何适当的消息或指导来做出决定。为了防止这种情况，应该有n + 1个节点而不是n个节点来进行不间断的操作
    [[24](#re_TNF-CH004_CIT00024)]。
- en: In contrast to this, the subverting nodes perform outlandish operations, resulting
    in imprecise output. These issues can be addressed by a classical problem, popularly
    called the Byzantine Generals Problem developed by Lamport et al. [[25](#re_TNF-CH004_CIT00025)].
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 与这个相比，颠覆节点执行出格的操作，导致输出不精确。这些问题可以通过一个经典问题来解决，这个问题被称为由Lamport等人开发的拜占庭将军问题 [[25](#re_TNF-CH004_CIT00025)]。
- en: Here, the concept is that Byzantine generals have occupied an enemy’s camp by
    dividing their army force into N groups under N generals, who are capable of attacking
    the enemies from various sites. To win, the N groups of armies should attack at
    the same time. Before commencing the attack, they should come to an agreement
    about the time of attacking by exchanging proper messages, and the decision is
    taken by the majority. Regrettably, there is some conspirator among the general
    group whose intention is to cheat the other generals by passing diverse decision
    to others which causes failure in the attack as some generals are not participating
    in the attack.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，概念是拜占庭将军通过将他们的军队力量分成N组，每组由N个将军领导，占领了敌人的营地，这些将军能够从各个地点攻击敌人。为了获胜，N组军队应该同时发起攻击。在开始攻击之前，他们应该通过交换适当的信息达成攻击时间的共识，并且由多数决定。不幸的是，在将军群体中有一些阴谋家，他们的意图是通过向其他人传递不同的决定来欺骗其他将军，这导致攻击失败，因为一些将军没有参与攻击。
- en: The solution for this issue is proposed by Lamport et al. that to tolerate the
    n subverted generals, there should be at least 2n + 1 generals to accompany them.
    The same scenario is applicable in blockchain in that some nodes can be subverted
    when executing the consensus work by propagating diverse results to other nodes.
    These bad situations lead to the classification of voting-based consensus algorithms
    into
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题解决方案是由Lamport等人提出的，要容忍n个被颠覆的将军，至少应该有2n+1个将军与他们同行。同样的情况也适用于区块链，在执行共识工作时，一些节点可能会被颠覆，通过向其他节点传播不同的结果。这些糟糕的情况导致投票
    based 共识算法分为
- en: 1\. Byzantine fault tolerance-based consensus which avoids the occurrence of
    crashing and subverted nodes.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1. 基于拜占庭容错共识，避免出现崩溃和被颠覆的节点。
- en: 2\. Crash fault tolerance-based consensus which prevents the cases of crashing
    nodes.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2. 基于崩溃容错共识，防止节点崩溃的情况。
- en: The consensus algorithms under these sub-categories make an assumption that
    among N nodes, there should be at least t nodes (t < N) operating normally. While
    in crash fault tolerance-based consensus, t is usually set equal to [N/2 + 1],
    in Byzantine fault tolerance-based consensus, t is usually assigned equal to [2N/3
    + 1].
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这些子类别下的共识算法假设在N个节点中，至少有t个节点（t < N）正常运行。而在崩溃容错共识中，t通常设置为[N/2 + 1]，在拜占庭容错共识中，t通常分配为[2N/3
    + 1]。
- en: '[4.4.1 Byzantine Fault Tolerance-Based Consensus](chapter4.xhtml#re_ch-4-sec-17)'
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.4.1 基于拜占庭容错共识](chapter4.xhtml#re_ch-4-sec-17)'
- en: Byzantine fault tolerance-based consensus is based on the popular Hyperledger
    Blockchain platform [[26](#re_TNF-CH004_CIT00026)] used by many enterprises, especially
    IBM [[27](#re_TNF-CH004_CIT00027)]. Castro and Liskov [[28](#re_TNF-CH004_CIT00028)]
    proposed a variant of Byzantine fault tolerance called the Practical Byzantine
    Fault Tolerance (PBFT) intended for Hyperledger Fabric [[29](#re_TNF-CH004_CIT00029)].
    In Byzantine fault tolerance, there exist two sorts of nodes, namely, a leader
    node and validating peers.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 基于拜占庭容错共识是基于流行的Hyperledger区块链平台[[26](#re_TNF-CH004_CIT00026)]，许多企业都在使用，尤其是IBM
    [[27](#re_TNF-CH004_CIT00027)]。 Castro和Liskov [[28](#re_TNF-CH004_CIT00028)] 提出了一个拜占庭容错变体，称为实用拜占庭容错（PBFT），旨在为Hyperledger
    Fabric [[29](#re_TNF-CH004_CIT00029)]。在拜占庭容错中，存在两种类型的节点，分别是领导者节点和验证节点。
- en: Formerly, the validating peers receive the request from the clients to validate
    the transactions. After validating, the results are sent to the leader and other
    peers. Here the threshold is the batch size is maintained. Based on the time of
    creation, the leader arranges the transactions and puts them into a block.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，验证节点从客户端接收验证交易的请求。验证后，结果发送给领袖和其他节点。在这里，阈值是保持批处理大小。根据创建时间，领袖安排交易并将它们放入一个区块中。
- en: Symbiont [[30](#re_TNF-CH004_CIT00030)] and R3 Corda [[31](#re_TNF-CH004_CIT00031)]
    are famous blockchain platforms based on Byzantine fault-tolerance consensus algorithms
    proposed by Bessani et al. [[32](#re_TNF-CH004_CIT00032)]. In addition to the
    procedure of execution, Bessani et al. developed a replica for storing the log
    of executed operations in a single machine, which is used for gaining the last
    current state, when a node fails, and needs to restart.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[共生体](#re_TNF-CH004_CIT00030)和R3 Corda是基于拜占庭容错共识算法，由Bessani等人提出的著名区块链平台[[30](#re_TNF-CH004_CIT00030)]
    [[31](#re_TNF-CH004_CIT00031)]。除了执行过程，Bessani等人还在单机上开发了一个副本，用于存储已执行操作的日志，当节点失败需要重新启动时，可以用来获取最后一个当前状态。'
- en: '[4.4.2 Crash Fault Tolerance-Based Consensus](chapter4.xhtml#re_ch-4-sec-18)'
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[4.4.2 基于崩溃容错共识](chapter4.xhtml#re_ch-4-sec-18)'
- en: 'Paxos [[33](#re_TNF-CH004_CIT00033)] and Raft [[34](#re_TNF-CH004_CIT00034)]
    is a crash fault tolerance-based consensus used by Quorum [[35](#re_TNF-CH004_CIT00035)]
    to tolerate crashes. Raft is based on an assumption that every time, [n/2 + 1]
    of the total nodes work normally. In the Raft consensus algorithm, the verifying
    nodes take the role of follower, candidate and leader. The communication among
    the nodes is made by messages: RequestVote for voting a leader node, and AppendEntries
    for transferring the requests to other nodes.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Paxos [[33](#re_TNF-CH004_CIT00033)] 和 Raft [[34](#re_TNF-CH004_CIT00034)] 是Quorum
    [[35](#re_TNF-CH004_CIT00035)] 用来容忍崩溃的基于崩溃容错共识。Raft基于这样一个假设，每次总共有[n/2 + 1]个节点正常工作。在Raft共识算法中，验证节点扮演着跟随者、候选人和领导者的角色。节点之间的通信是通过消息进行的：RequestVote用于投票选举领导节点，AppendEntries用于将请求传递给其他节点。
- en: During execution, the requested transactions from the clients are received by
    the leader who in turn saves them to a list called log entry. After receiving
    the request, the leader sends the AppendEntries message to all followers which
    contains the transaction log along with previous transaction index. For instance,
    if the leader sends the nth transaction, then he should attach the (n – 1)th transaction
    details.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行过程中，客户端请求的交易由领导者接收，并将它们保存到一个称为日志条目的列表中。接收请求后，领导者向所有跟随者发送AppendEntries消息，其中包含事务日志和前一个事务索引。例如，如果领导者发送第n笔交易，那么他应该附上第（n-1）笔交易的详细信息。
- en: Chain [[36](#re_TNF-CH004_CIT00036)], a blockchain platform, uses an algorithm
    called federated which is based on the crash fault-tolerance consensus algorithm.
    Here there are n nodes in the verifying network; among them there are two nodes
    called the block generator and block signers. The transactions received from the
    clients are verified by the block generator and the valid one is saved in a temporary
    list. The block generator considers some requested transactions sequentially and
    puts them into the blocks and circulates to all block signers. The blocks received
    by the signers are verified, and the valid blocks are signed and sent back to
    the block generator. If a block is signed by a majority of block signers, then
    it is considered as a trustworthy block and the same is appended to the chain
    maintained by the block generator. Since more than one block signer acknowledges
    the block, if there exists any crash then the chain could resist the crash fault.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 链[[36](#re_TNF-CH004_CIT00036)]，一个区块链平台，使用一种名为联邦的算法，该算法基于崩溃容错共识算法。在这里，验证网络中有n个节点；其中有两个节点称为区块生成器和区块签署者。从客户端接收的交易由区块生成器验证，并将有效的一个保存到一个临时列表中。区块生成器依次考虑一些请求的交易，并将它们放入区块中，然后传递给所有区块签署者。签署者接收的区块进行验证，并对有效的区块进行签署并发送回区块生成器。如果一个区块被大多数区块签署者签署，那么它被认为是值得信赖的区块，并且将其添加由区块生成器维护的链中。由于有多个区块签署者确认区块，如果存在任何崩溃，那么链能够抵抗崩溃故障。
- en: '[4.5 Conclusions](chapter4.xhtml#re_ch-4-sec-19)'
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.5 结论](chapter4.xhtml#re_ch-4-sec-19)'
- en: This chapter provides a survey of some consensus algorithms applicable in blockchain.
    The algorithms are categorized into two types, namely, proof-based algorithms
    and vote-based algorithms. In the proof-based algorithms, the nodes have to prove
    its majority to append the blocks which it requires. In the vote-based algorithm,
    an agreement is made among nodes regarding the blocks to be appended to the ledger.
    The applications of these two types of algorithms are discussed elaborately in
    the chapter.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了一些适用于区块链的共识算法的调查。这些算法分为两类，分别是基于证明的算法和基于投票的算法。在基于证明的算法中，节点必须证明其多数才能附加所需块。在基于投票的算法中，节点之间就应附加到账本中的区块达成一致。本章详细讨论了这两种算法的应用。
- en: '[References](chapter4.xhtml#re_b-9781000175257-bib3)'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[参考文献](chapter4.xhtml#re_b-9781000175257-bib3)'
- en: '[1](#TNF-CH004_CIT00001). S. Haber and W. S. Stornetta, “How to time-stamp
    a digital document,” Journal of Cryptology, vol. 3, no. 2, pp. 99–111, 1991.'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[1](#TNF-CH004_CIT00001). S. Haber 和 W. S. Stornetta，“如何给数字文档打时间戳”，《密码学杂志》，第3卷，第2期，pp.
    99–111，1991年。'
- en: '[2](#TNF-CH004_CIT00002). S. Nakamoto, “Bitcoin: a peer-to-peer electronic
    cash system,” 2008 [Online]. Available: [https://bitcoin.org/](https://bitcoin.org)
    bitcoin.pdf.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[2](#TNF-CH004_CIT00002). 中本聪（S. Nakamoto），“比特币：一种点对点的电子现金系统”，2008年 [在线]。可在
    [https://bitcoin.org/](https://bitcoin.org) bitcoin.pdf 下载。'
- en: '[3](#TNF-CH004_CIT00003). Bitcoinwiki, “Genesis block,” 2017 [Online]. Available:
    [https://en.bitcoin.it/wiki/Genesis_block](https://en.bitcoin.it).'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[3](#TNF-CH004_CIT00003). Bitcoinwiki，“创世区块”，2017年 [在线]。可在 [https://en.bitcoin.it/wiki/Genesis_block](https://en.bitcoin.it)
    获取。'
- en: '[4](#TNF-CH004_CIT00004). E. Robert, “Digital signatures,” 2017 [Online]. Available:
    [http://cs.stanford.edu/people/eroberts/courses/](http://cs.stanford.edu) soco/projects/public-key-cryptography/dig_sig.html.'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[4](#TNF-CH004_CIT00004). E. Robert, “数字签名”，2017年 [在线]。可在 [http://cs.stanford.edu/people/eroberts/courses/](http://cs.stanford.edu)
    soco/projects/public-key-cryptography/dig_sig.html 获取。'
- en: '[5](#TNF-CH004_CIT00005). S. Nakamoto, “Bitcoin: a peer-to-peer electronic
    cash system (white paper),” 2008\. [Online]. Available: [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org).'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[5](#TNF-CH004_CIT00005). 中本聪（S. Nakamoto），“比特币：一种点对点的电子现金系统（白皮书）”，2008年。 [在线]。可在
    [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org) 获取。'
- en: '[6](#TNF-CH004_CIT00006). R. Greenfield, “Vulnerability: proof of work vs.
    proof of stake,” 27/08/2017\. [Online]. Available: [https://medium.com/@robertgreenfieldiv](https://medium.com)/vulnerabilit
    y-proof-of-work-vs-proof-of-stake-f0c44807d18c.'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[7](#TNF-CH004_CIT00007). J. Poon and T. Dryja, “The Bitcoin lightning network:
    scalable off-chain instant payments,” 26/01/2016\. [Online]. Available: [https://lightning.network/lightning-networkpaper.pdf](https://lightning.network).'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[8](#TNF-CH004_CIT00008). Bitcoinj Community, “Working with micropayment channels,”
    [Online]. Available: [https://bitcoinj.github.io/](https://bitcoinj.github.io).'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[9](#TNF-CH004_CIT00009). Gmaxwell, “Zero knowledge contingent payment,” 02/2016\.
    [Online]. Available: [https://en.bitcoin.it/wiki/Zero_Knowledge_Contingen](https://en.bitcoin.it)
    t_Payment.'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[10](#TNF-CH004_CIT00010). M. Rosenfeld, “What are multi-signature transactions?”
    18/05/2012\. [Online]. Available: [https://bitcoin.stackexchange.com/questions/3718/wh](https://bitcoin.stackexchange.com)
    at-are-multi-signature-transactions.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[11](#TNF-CH004_CIT00011). Belcher, “Multisignature,” 12/2018\. [Online]. Available:
    [https://en.bitcoin.it/wiki/Multisignature](https://en.bitcoin.it).'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[12](#TNF-CH004_CIT00012). Litecoin Project Community, “About LiteCoin,” 2018\.
    [Online]. Available: [https://litecoin.org/](https://litecoin.org).'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[13](#TNF-CH004_CIT00013). J. Ray, “Ethereum (Whitepaper),” 26/05/2018\. [Online].
    Available: [https://github.com/ethereum/wiki/wiki/White-Paper](https://github.com).'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[14](#TNF-CH004_CIT00014). L. Chen, L. Xu, N. Shah, W. Shi, Z. Gao and Y. Lu,
    “Security analysis of Proof-of-Elapsed-Time (PoET),” In SSS 2017, Boston, MA,
    2017.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[15](#TNF-CH004_CIT00015). M. Brandenburger, C. Cachin, M. Lorenz and R. Kapitza,
    “Rollback and forking detection for trusted execution environments using lightweight
    collective memory,” In Conference: 2017 47th Annual IEEE/IFIP International Conference
    on Dependable Systems and Networks (DSN), 2017.'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[16](#TNF-CH004_CIT00016). K. Olson, M. Bowman, J. Mitchell, S. Amundson, D.
    Middleton and C. Montgomery, “Hyperledger Sawtooth (whitepaper),” 01/2018\. [Online].
    Available: [https://www.hyperledger.org/wpcontent/uploads/2018/01/Hyperledger_Sawtooth_Wh](https://www.hyperledger.org)
    itePaper.pdf.'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[17](#TNF-CH004_CIT00017). M. Milutinovic, W. He, H. Wu and M. Kanwal, “Proof
    of luck: an efficient blockchain consensus protocol,” In Middleware Conference,
    Italy, 2016.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[18](#TNF-CH004_CIT00018). S. Dziembowski, S. Faust, V. Kolmogorov and K. Pietrzak,
    “Proof of space,” In International Association for Cryptologic Research (IACR),
    2013.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[19](#TNF-CH004_CIT00019). gmaxwell, “Proof of Storage to make distributed
    resource consumption costly,” 10/2013\. [Online]. Available: [https://bitcointalk.org/index.php?topic=310323.0](https://bitcointalk.org).'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[20](#TNF-CH004_CIT00020). P. Andrew, “What is proof of capacity? An eco-friendly
    mining solution,” 31/01/2018\. [Online]. Available: [https://coincentral.com/what-is-proof-ofcapacity/](https://coincentral.com).'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[21](#TNF-CH004_CIT00021). S. Gauld, F. V. Ancoina and R. Stadler, “The burst
    Dymaxion,” 27/12/2017\. [Online]. Available: [https://www.burst-coin.org/wpcontent/uploads/2017/07/The-Burst-Dymaxion-1.00.pdf](https://www.burst-coin.org).'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[22](#TNF-CH004_CIT00022). P. Andrew, “What is Burstcoin?” 31/01/2018\. [Online].
    Available: [https://coincentral.com/what-isburstcoin-beginners-guide/](https://coincentral.com).'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[23](#TNF-CH004_CIT00023). W. L. Heimerdinger and C. B. Weinstock, “A conceptual
    framework for system fault tolerance,” Defense Technical Information Center, Technical
    Report CMU/SEI-92-TR-033, 1992.'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[24](#TNF-CH004_CIT00024). L. Lamport, “Paxos made simple,” ACM SIGACT News,
    vol. 32, no. 4, pp. 18–25, 2014.'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[25](#TNF-CH004_CIT00025). L. Lamport, R. Shostak and M, Pease, “The Byzantine
    generals problem,” ACM Transactions on Programming Languages and Systems, vol.
    4, no. 3, pp. 382–401, 1982.'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[26](#TNF-CH004_CIT00026). Hyperledger [Online]. Available: [http://hyperledger.org/](http://hyperledger.org).'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[27](#TNF-CH004_CIT00027). Hyperledger fabric [Online]. Available: [https://github.com/hyperledger/fabric](https://github.com).'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[28](#TNF-CH004_CIT00028). M. Castro and B. Liskov, “Practical Byzantine fault
    tolerance,” In Proceedings of the Third Symposium on Operating Systems Design
    and Implementation, New Orleans, LA, 1999, pp. 173–186.'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[29](#TNF-CH004_CIT00029). C. Cachin, “Architecture of the hyperledger blockchain
    fabric,” In Proceedings of ACM Workshop on Distributed Cryptocurrencies and Consensus
    Ledgers, Chicago, IL, 2016.'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[30](#TNF-CH004_CIT00030). Symbiont [Online]. Available: [https://symbiont.io/](https://symbiont.io).'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[31](#TNF-CH004_CIT00031). Corda [Online]. Available: [https://www.corda.net/](https://www.corda.net).'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[32](#TNF-CH004_CIT00032). Bessani, J. Sousaand E. E. P. Alchieri, “State machine
    replication for the masses with BFT-SMART,” In Proceedings of 2014 44th Annual
    IEEE/IFIP International Conference on Dependable Systems and Networks, Atlanta,
    GA, 2014, pp. 355–362.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[33](#TNF-CH004_CIT00033). L. Lamport, “Paxos made simple,” ACM SIGACT News,
    vol. 32, no. 4, pp. 18–25, 2014.'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[34](#TNF-CH004_CIT00034). D. Ongaro and J. K. Ousterhout, “In search of an
    understandable consensus algorithm,” In Proceedings of 2014 USENIX Annual Technical
    Conference, Philadelphia, PA, 2014, pp. 305–319.'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[35](#TNF-CH004_CIT00035). Raft-based consensus for Ethereum/Quorum [Online].
    Available: [https://github.com/jpmorganchase/](https://github.com) quorum/blob/master/raft/doc.md.'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[36](#TNF-CH004_CIT00036). Federated Consensus [Online]. Available: [https://chain.com/docs/1.2/protocol/papers/federated-consensus](https://chain.com).'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
