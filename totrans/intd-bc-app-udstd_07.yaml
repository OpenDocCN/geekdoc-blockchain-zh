- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022J. T. GeorgeIntroducing Blockchain Applications[https://doi.org/10.1007/978-1-4842-7480-4_7](https://doi.org/10.1007/978-1-4842-7480-4_7)
  prefs: []
  type: TYPE_NORMAL
- en: 7. Consensus Algorithms for Blockchains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Joseph Thachil George^([1](#Aff2)  )(1)Rome, Italy
  prefs: []
  type: TYPE_NORMAL
- en: A *consensus algorithm* is a mechanism that enables humans or machines to cooperate
    in a distributed setting. Even if some agents fail, the system must be able to
    agree on a common source of truth for all agents. To put it another way, the system
    must be tolerant to failures.
  prefs: []
  type: TYPE_NORMAL
- en: In a centralized design, the system is controlled by a single entity. That system
    can make adjustments in most circumstances because there isn’t a complicated governance
    mechanism in place to obtain consensus among multiple administrators.
  prefs: []
  type: TYPE_NORMAL
- en: It’s a different story with a decentralized setup. Say you’re working with a
    distributed database; how do you decide which entries to add?
  prefs: []
  type: TYPE_NORMAL
- en: The most crucial development that opened the way for blockchains was overcoming
    this difficulty in an environment where strangers do not trust one other. This
    chapter looks at how consensus algorithms are crucial to the operation of cryptocurrencies
    and distributed ledgers.
  prefs: []
  type: TYPE_NORMAL
- en: 7.1 Consensus Algorithms and Cryptocurrency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The blockchain  is a database that stores the balances of cryptocurrency users.
    It’s critical that everyone (or, more precisely, every node) have a duplicate
    of the database. Otherwise, you’ll soon find yourself with contradictory information,
    undermining the cryptocurrency network’s very purpose.
  prefs: []
  type: TYPE_NORMAL
- en: Users can’t spend each other’s currencies, thanks to public-key cryptography.
    However, network participants must still rely on a single source of truth in order
    to ascertain whether funds have been spent.
  prefs: []
  type: TYPE_NORMAL
- en: To coordinate participation, Satoshi Nakamoto, the creator of Bitcoin, suggested
    a Proof of Work method. We’ll delve into how PoW works later; for now, we’ll look
    at some of the common characteristics of the various consensus algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: To begin, you need people who want to contribute blocks (referred to as *validators*)
    to provide a stake. The stake is a monetary amount that a validator must present,
    which deters them from acting dishonestly. They will lose their stake if they
    cheat. Computing power, cryptocurrency, and even reputation are examples.
  prefs: []
  type: TYPE_NORMAL
- en: Why would they jeopardize their own assets? There is a monetary incentive. This
    is typically comprised of fees paid by other users, freshly minted cryptocurrency
    units, or both, and is typically comprised of the protocol’s native cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: Transparency is the last thing you need. You must be able to recognize when
    someone is lying. It should be expensive for them to create blocks, but inexpensive
    for anyone to validate them. This guarantees that regular users keep validators
    in check.
  prefs: []
  type: TYPE_NORMAL
- en: Individual members of a group make and support the best option for the group
    as a whole using consensus algorithms. It is a decision-making system in which
    individuals must support the overall choice regardless of whether they agree with
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Simply put, it’s a method for a group of people to make decisions. As an example,
    consider a team of 10 people who want to choose a project that will benefit all
    of them. Each of them can make a suggestion, but most will opt for the one that
    will best benefit them. Others will be affected by this decision, whether they
    agree with it or not.
  prefs: []
  type: TYPE_NORMAL
- en: Consider doing that with tens of thousands of participants. Isn’t it going to
    make things a lot harder?
  prefs: []
  type: TYPE_NORMAL
- en: Consensus algorithms agree not just with the popular vote, but also with a solution
    that benefits everyone. As a result, the network is always victorious.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus models  on the blockchain are ways to establish equity and fairness
    in the online world. A *consensus theorem* is the name given to the consensus
    mechanisms that were utilized to get this agreement.
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Objectives of Consensus Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'These blockchain consensus models have a number of specific goals, including:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reaching an agreement:** As much as possible, the mechanism collects all
    of the group’s agreements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration:** Each party aims for a more favorable agreement that benefits
    the entire group.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration:** Everybody works as a group, putting their individual goals
    aside.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Equal rights:** Each voter has the same value in the voting process and each
    person’s vote is important.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Involvement:** The voting must be done by everyone in the network. No one
    will be left out, and no one will be able to abstain from voting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.3 Different Types of Consensus Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another very difficult aspect of Byzantine is reaching an agreement. Nodes will
    be unable to reach a compromise or have a greater difficulty value if even one
    defect occurs.
  prefs: []
  type: TYPE_NORMAL
- en: With consensus algorithms, you do not have to deal with this issue. Their major
    purpose is to achieve a given aim by any means necessary. The Byzantine consensus
    structure is substantially less trustable than the blockchain consensus models.
  prefs: []
  type: TYPE_NORMAL
- en: Because of this, in a distributed system with potentially contradicting outputs,
    it’s good to employ consensus techniques for a greater or higher result.
  prefs: []
  type: TYPE_NORMAL
- en: A consensus algorithm is a computer engineering method that allows dispersed
    processes or systems to agree on a *single data value* *.* Consensus methods are
    used in networks with numerous faulty nodes to ensure dependability. In distributed
    computing and multi-agent systems, resolving this issue, known as the *consensus
    problem* *,* is critical.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus algorithms must assume that certain processes and systems will be
    unavailable and that some communications will be lost, in order to handle this
    reality. Consensus methods must be fault-tolerant as a result.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus methods are used in networks with numerous faulty nodes to ensure
    dependability. They must ensure that the system’s agents can agree on a single
    source of truth.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4 Types of Blockchain Consensus Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of blockchain consensus algorithms with varying features
    (see Figure [7-1](#Fig1)). The following sections cover many of them.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.1 Proof-of-Work (PoW)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Satoshi Nakamoto invented PoW  , which is the earliest consensus mechanism in
    the blockchain world. Mining is another name for it, and the nodes involved are
    called *miners* .
  prefs: []
  type: TYPE_NORMAL
- en: The miners must resolve complex math riddles employing a large amount of computing
    power in this technique. They employ a variety of mining techniques, including
    Graphical Processing Unit (GPU) mining, Application Specific Integrated Circuit
    (ASIC) mining, and Field Programmable Gate Array (FPGA) mining. The person who
    solves the problem first gets a block as a prize.![../images/520777_1_En_7_Chapter/520777_1_En_7_Fig1_HTML.jpg](../images/520777_1_En_7_Chapter/520777_1_En_7_Fig1_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7-1
  prefs: []
  type: TYPE_NORMAL
- en: Types of consensus algorithms
  prefs: []
  type: TYPE_NORMAL
- en: Several cryptocurrencies—including Bitcoin, Litecoin, ZCash, Primecoin, Monero,
    and Vertcoin—utilize the Proof of Work mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: PoW has had an impact on not only the finance industry, but also on healthcare,
    governance, management, and other fields. In fact, it has provided the option
    of multichannel payments and multi-signature transactions over an address in order
    to improve security.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.2 Proof of Stake (PoS)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The simplest and most ecologically friendly alternative to the PoW consensus
    mechanism is Proof of Stake (PoS)  .
  prefs: []
  type: TYPE_NORMAL
- en: The block creators in this blockchain system do not act as miners, but rather
    as validators. They can construct a block over everyone, which will save energy
    and time. In order to validate the block, they must invest a certain amount of
    money or stake.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, unlike PoW, miners are given the option to keep their transaction
    fees in this algorithm because there is no reward mechanism in this consensus
    model.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, companies like Ethereum were pushed to upgrade their paradigm from
    PoW to PoS in their Ethereum 2.0 release. It also aided the correct functioning
    of several blockchain ecosystems such as Dash, Peercoin, Decred, ReddCoin, and
    Piv X.
  prefs: []
  type: TYPE_NORMAL
- en: While PoS addressed some of the flaws that previously plagued PoW, the market
    still faced numerous challenges. Several types of PoS were created to address
    these issues and provide a better blockchain ecosystem. The two major variations
    of Proof of Stake (PoS) are PoSD and LPoS, discussed next.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.2.1 Proof of Stake Delegated (PoSD)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In PoSD, players stake their coin and vote for a certain number of delegates,
    with the amount they invest determining how much weight they receive. For example,
    if user A invests 10 coins in a delegate while user B spends 5, A’s vote is more
    important than B’s.
  prefs: []
  type: TYPE_NORMAL
- en: Delegates are also paid in interchange fees or a set number of bitcoins.
  prefs: []
  type: TYPE_NORMAL
- en: Due to its stake-weighted voting method, PoSD is commonly considered a digital
    democracy and one of the fastest blockchain consensus algorithms. Some of the
    real-world uses of the blockchain consensus mechanism include Steem, EOS, and
    Bit Shares.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.2.2 Leased Proof of Stake (LPoS)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: LPoS  is updated variant of the PoS consensus mechanism on the Waves platform.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike the traditional proof-of-stake approach, which allows users to lease
    their cryptocurrency balance to full nodes, this consensus process enables users
    to rent their remaining balance to complete nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Those who rent the most have the best chance of creating the block. In addition,
    the leaser gets paid a share of the transaction charge collected from the entire
    node.
  prefs: []
  type: TYPE_NORMAL
- en: This Proof-of-Stake variation offers a fast and secure way to build public cryptocurrencies.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.3 Byzantine Fault Tolerance (BFT)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Byzantine Error  is a situation in which the system’s participants must
    agree on a suitable approach to avoid catastrophic failure, yet some of them are
    unsure. PBFT and DBFT are the two most common BFT consensus models in the blockchain
    industry.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.4 Practical-BFT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Practical-BFT  is a simple method that tackles the Byzantine Common’s difficulties
    by permitting users to agree to the messages that have been delivered to them
    by completing a computation to verify the validity decision.
  prefs: []
  type: TYPE_NORMAL
- en: The party then informs other nodes of its decision, which are then required
    to make a decision. The final choice is then based on the information gathered
    from the other nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.5 Delegated Byzantine Fault Tolerance (dBFT)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The dBFT  technique was introduced by NEO and NEO coin holders have the ability
    to elect delegates as well.
  prefs: []
  type: TYPE_NORMAL
- en: This is true regardless of the amount of money they invest. Anyone who meets
    the minimum requirements, which include a verified identification, adequate equipment,
    and 1,000 GAS, can serve as a delegate. After that, a speaker is chosen at random
    from among the delegates.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.6 Direct Acyclic Graph (DAG)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DAG  is a simple yet important blockchain consensus mechanism that every mobile
    app development business dealing with blockchain should be familiar with.
  prefs: []
  type: TYPE_NORMAL
- en: In this type of blockchain consensus architecture, each node prepares to become
    a “miner.” If miners are removed from the equation and transactions are validated
    by users, the cost associated with them is lowered to $0\. The process of validating
    transactions between any two nodes becomes easier, making it lighter, faster,
    and more secure.
  prefs: []
  type: TYPE_NORMAL
- en: Despite the fact that these are the most common consensus models in the development
    environment, several other blockchain consensus mechanisms have begun to gain
    traction, including the following.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.7 Proof of Capacity (PoC)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The method that is followed is plotting  . Two cryptocurrencies that use this
    blockchain consensus technology are Burstcoin and SpaceMint.
  prefs: []
  type: TYPE_NORMAL
- en: How does it work? First you need to grasp two ideas—charting and mining—in order
    to appreciate the essence of the consensus theorem.
  prefs: []
  type: TYPE_NORMAL
- en: The PoC algorithm uses nonces that are different from those used in Bitcoin.
    Until the nonces are solved, you’ll have to hash your ID and data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hard drive “mining” is the next concept. As previously indicated, you can get
    zero to 4095 scoops at one time and then you can store it in our storage space.
    You will be given a strict timeframe to resolve the nonces. This timeline mentions
    how long it will take to create a block.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will receive a block as a reward if you can resolve the nonces faster than
    the other miners. Burst is a well-known example of a company that has embraced
    the PoC algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.8 Proof-of-Burn (PoB)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PoB  consensus architecture is an alternative to PoW and PoS in terms of energy
    consumption. It operates by letting miners burn/ruin virtual cryptocurrency tokens,
    allowing them to produce blocks proportional to the currencies. They are more
    likely to win a new block for each coin they get if they burn more coins.
  prefs: []
  type: TYPE_NORMAL
- en: However, in order to burn money, they must transmit it to an address where it
    cannot be used to verify the block. This is often utilized in the situation of
    distributed consensus. The best example of this consensus mechanism is Slimcoin.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.9 Proof-of-Identity (PoI)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PoI is similar to the idea of authorized identity. It’s a piece of cryptographic
    confirmation for a user’s private key, which is associated with each transaction.
  prefs: []
  type: TYPE_NORMAL
- en: Each identified user can create and manage a data block that can be shared with
    others in the network.
  prefs: []
  type: TYPE_NORMAL
- en: This blockchain’s methodology ensures the data’s validity and integrity. As
    a result, it’s a good candidate for use in smart cities.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.10 Proof-of-Activity (PoA)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PoA  combines the benefits of the PoW and PoS consensus models.
  prefs: []
  type: TYPE_NORMAL
- en: The miners compete to solve a cryptographic puzzle as quickly as possible, using
    special hardware and electric energy, exactly as they do in PoW. However, the
    blocks that come together only have the information on the block successors’ identity
    and the prize transaction.
  prefs: []
  type: TYPE_NORMAL
- en: Proof-of-Activity (PoA) is a combination of the Proof-of-Stake (PoS) and Proof-of-Work
    (PoW) consensus techniques. It allows legitimate transactions and consensus among
    miners to take place. In both PoS and PoW, PoA seeks to solve centralization concerns.
    It also aspires to do it in a resource-conserving manner.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.11 Proof-of-Elapsed Time (PoET)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PoET  is based on the principle of evenly distributing and increasing the odds
    for a larger percentage of participants. As a result, each participating node
    is required to wait for a specific time to begin the next mining process. The
    member who has been waiting the least amount of time is requested to propose a
    block.
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, each node chooses how long it will wait before entering sleep
    mode.
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.12 Proof-of-Importance (PoI)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PoI is a NEM-developed variant of the PoS protocol that takes into account the
    roles of validators. This is influenced not only by the quantity and likelihood
    of their shares, but also by other factors, such as reputation, total balance,
    and the number of transactions done through each specific address.
  prefs: []
  type: TYPE_NORMAL
- en: The table shown in Figure [7-2](#Fig2) compares the different consensus algorithms.![../images/520777_1_En_7_Chapter/520777_1_En_7_Fig2_HTML.jpg](../images/520777_1_En_7_Chapter/520777_1_En_7_Fig2_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7-2
  prefs: []
  type: TYPE_NORMAL
- en: Algorithm comparison table
  prefs: []
  type: TYPE_NORMAL
- en: 7.5 Consensus in Distributed Systems and Blockchain Technology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The two primary forms of blockchains are authorized, which is called authorization
    of blockchain. Nodes are anonymous on the permissionless blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: A fork can be caused by adding a new modified transaction block. When a valid
    transaction disagrees with an invalid one, a fork occurs. The consensus algorithm’s
    main purpose is to obtain consensus across the nodes so that each node may agree
    on a true value. Nodes are not anonymous in the authorized blockchain and are
    considered known entities.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, the communication paradigm, whether synchronous or asynchronous,
    is taken into account when defining the consensus system. Crash errors, transient
    errors, omission mistakes, security errors, software errors, Byzantine errors,
    time errors, and environmental problems are all examples of errors.
  prefs: []
  type: TYPE_NORMAL
- en: Crash failure occurs when a process comes to an abrupt halt. In a synchronous
    context, timeout measures will help reveal this failure, however in a non-synchronous
    atmosphere, failure is difficult to recognize.
  prefs: []
  type: TYPE_NORMAL
- en: '**Passage failure** **:** Non-inevitable and long-lasting failures are referred
    to as *transient* failures. Low batteries or a power surge might create a hardware
    issue. These software flaws might be defects in internal codes that arise infrequently
    and go unnoticed during testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reliability failure:** Reliability failures arise because of safety assaults
    and impersonation. As a result, it’s conceivable that data will be corrupted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software failure:** Software failures occur as a result of faults in design
    and modeling. Other types of failures, such as crash or omission, can be caused
    by this type of failure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Byzantine failure:** A byzantine failure is a fault that manifests itself
    differently in each member of the system. It makes it difficult for all members
    to establish an agreement or reach a consensus.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These mistakes perplex the system, making it harder for it to accept them. A
    server, for example, may seem to be down to one viewer while being functional
    to another. Because of their conflicting viewpoints, both observers will be unable
    to reach a consensus, and the server cannot be deemed failed.
  prefs: []
  type: TYPE_NORMAL
- en: '**Temporal failure:** Temporal failures happen when a deadline is missed. That
    is, accurate results may be obtained, but they are too late to be considered useful.
    In real-time systems, this category is extremely important.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Environmental perturbations** **:** If the solution is not made adaptive
    to changes in the environment, it will fail. A change in the environment could
    cause a right result to be incorrect.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchains are decentralized ledgers that are not administered by a central
    authority. Malicious individuals could be rewarded handsomely for attempting to
    cause faults. As a result, thinking about the Byzantine problem and its solutions
    is important for blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: A Byzantine error  manifests itself differently in each member of the system.
    It inhibits all participants from reaching an agreement or forming a consensus.
    These errors perplex the system, making it difficult for it to accept the errors.
  prefs: []
  type: TYPE_NORMAL
- en: 7.6 Review Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “Consensus is a fundamental concept in distributed systems, but it is unique
    to blockchain.” Is this statement correct or incorrect?
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2.Which statement is true?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A consensus algorithm is a method that allows companies or machines to cooperate
    in a dispersed setting.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: b.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A consensus algorithm is a method that prevents users or machines from cooperating
    in a distributed environment.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: c.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A consensus algorithm prevents users or machines from cooperating in a distributed
    environment.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: d.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can show equivalence relations using a consensus procedure, which is a mechanism.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 3.Which of the following statements about the concept of Proof of Work is correct?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PoW systems allow players who know a secret, usually a public key, to perform
    faster computations.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: b.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PoW systems allow players who know a secret, usually a private key, to perform
    faster computations.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: c.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: With this process, miners must use extensive computation capacity to solve complicated
    mathematical challenges.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: d.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: With this process, miners must use algorithms to solve complex mathematical
    challenges.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 4.Which of the following statements about Proof of Activity is correct?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Miners compete, much as in PoW, to solve a cryptographic problem as soon as
    possible using specialized hardware and electricity.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: b.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Miners resolve a cryptographic challenge using specific hardware and electric
    energy as quickly as possible, much like in PoW.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: c.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Miners use it to resolve a cryptographic challenge using special software and
    electric energy as quickly as possible, much like in PoW.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: d.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Miners compete to resolve a cryptographic challenge using special software and
    energy as quickly as possible, much like in PoW.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '5.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*“*In its functioning, PoI is a PoS version that considers the role of shareholders
    and validators.” Do you think this statement is true or false?'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 7.7 Review Answers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Answer: Incorrect. Consensus is a major idea in distributed-systems, not just
    in blockchain.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Answer: A, A consensus algorithm is a method that allows companies or machines
    to cooperate in a dispersed setting.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Answer: C, Miners must solve complicated mathematical riddles employing a large
    amount of computing power in this technique.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Answer: A, Miners compete, much as in PoW, to solve a cryptographic problem
    as soon as possible using specialized hardware and electricity.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '5.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This statement is true.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 7.8 Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The blockchain can be a distributed ledger, which has sparked interest across
    a wide range of industries. Blockchain technology is already being used in a variety
    of sectors to create goods and services. It is important to grasp blockchain’s
    core components, functional characteristics, and architecture in order to appreciate
    its affect and applicability to various applications.
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin, a cryptocurrency, is the most well-known application of blockchain.
    Because a blockchain network is a distributed ledger, it requires a consensus
    mechanism among peer nodes to ensure that it functions properly.
  prefs: []
  type: TYPE_NORMAL
- en: To comprehend blockchain’s influence and applicability to diverse applications,
    it’s critical to understand its fundamental components, functional features, and
    design. Several consensus algorithms have been proposed in the modern world, each
    with its unique set of reliability and scalability features. To fulfill the needs
    of all businesses, a single consensus algorithm will be inadequate. It’s essential
    to assess the strengths, weaknesses, and applications of the various consensus
    algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters related to blockchain consensus, privacy, and scalability were identified
    and discussed. The consensus techniques are compared and contrasted in terms of
    these factors. There are research gaps in the development of efficient consensus
    algorithms as well as the assessment of current algorithms. Developers and researchers
    will be guided through the process of assessing and creating a consensus algorithm
    in this book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to the obvious consensus algorithms, the nature of blockchain networks
    is extremely flexible. There is no such thing as a “perfect” blockchain consensus
    algorithm. But, we guess, that is the allure of technology: it is always improving.
    Since this chapter explained blockchain and consensus algorithms in detail, you
    should now be ready to start a project based on these technologies. The next chapter
    explains the first project of this book.'
  prefs: []
  type: TYPE_NORMAL
