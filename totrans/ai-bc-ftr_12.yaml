- en: © The Author(s), under exclusive license to Springer Nature Switzerland AG 2021Y.
    Maleh et al. (eds.)Artificial Intelligence and Blockchain for Future Cybersecurity
    ApplicationsStudies in Big Data90[https://doi.org/10.1007/978-3-030-74575-2_10](https://doi.org/10.1007/978-3-030-74575-2_10)
  prefs: []
  type: TYPE_NORMAL
- en: Improved Secure Intrusion Detection System by User-Defined Socket and Random
    Forest Classifier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Garima Sardana^([1](#Aff7)  ) and Abhishek Kajal^([1](#Aff7)  )(1)Department
    of Computer Science and Engineering, Guru Jambheshwar University of Science and
    Technology, Hisar, India
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Research has considered the intrusion Detection system (IDS) to make detection
    and classification of intrusions, attacks, and different types of data-stealing
    activities. Existing research in the field of the IDS system has been considered.
    The model has been developed to send and receive data. The IDS system is proposed
    to detect, classify the intrusion with the integration of the Random forest algorithm.
    The socket programming has been used to transfer data from sender to receiver.
    To secure the transmission used defined port number has been used. Moreover, the
    data traveling over the network would be in encrypted form to avoid the possibility
    of data manipulation or access by an unauthentic user. The IDS system is capable
    to trace attacks of different categories as the random classifier has classified
    the attacks.
  prefs: []
  type: TYPE_NORMAL
- en: KeywordsIDSRandom forest algorithmSocket programmingClassification
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the use of Web-Based Services and Applications are increasing day by day,
    the probability of Cyber Attacks is also increasing. When sensitive and important
    user data travels over a network, both internal and external intruders may try
    to attack or hack this data. The attackers can use manual and machine-based method
    for this purpose. These attackers are becoming more powerful and efficient. It
    has become a challenge to stop and avoid these attackers or hackers. The data
    attacks or these types of data-stealing are known as Cyber Crime and these malicious
    people who perform these types of activities are known as cyber attackers. From
    time to time researchers or specialized teams are working in this field and proposing
    innovative, flexible, and more trusted IDS systems [[1](#CR1)].
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Intrusion Detection System
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Intrusion Capturing Model systems are used to make detection and classification
    of intrusions, attacks, and different types of data-stealing activities. This
    system is used towards the network and host level system and works automatically
    on time. Based on intrusive behaviors, the intrusion detection systems are differentiated
    between network-based and host-based systems.
  prefs: []
  type: TYPE_NORMAL
- en: This system is considered in the form of a criminal warning. Let us take an
    example to understand this point. To protect a home from theft lock systems are
    used in homes. As soon as it identifies such type of activity it alerts the owner
    by rings an alarm. However, input congestion coming from the Internet in the direction
    of the escape firewall is filtered by firewalls.
  prefs: []
  type: TYPE_NORMAL
- en: The stock of IDS hardware is already available. It uses the information which
    is generated from an individual host-based IDS (HIDS). In addition to this, it
    also uses those IDSs which take advantage of information gathered from an entire
    segment of the normal system.
  prefs: []
  type: TYPE_NORMAL
- en: For example, it becomes possible for outer users to make a connection to the
    intranet by dialing through a modem. This modem is put into operation in a personal
    system of businesses. A firewall is not able to identify this type of entry. An
    Intrusion Prevention System becomes a system of protection and threat stoppage
    technology. It controls system traffic flows to identify and stop the exploitation
    of weak points.
  prefs: []
  type: TYPE_NORMAL
- en: 1.2 Types of IDS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '1'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Host-based IDS
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Network-based IDS
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hybrid IDS
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Host-Based IDS** views a sign of intrusion in the local system. For analysis
    purpose of examination, information related to the host system’s logging is used
    by them. Host manager is considered in the form sensing element. The sensing element
    which is based on the Host’s information, include network and other logs produced
    by controller treatment and data of objects not reflected in normal controller
    checking & logging method.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Network-Based IDSs** is used to detect network traffic. It requires the implementation
    of sensing elements throughout the system. This type of system is required for
    a particular section of the network. It is used to analyze the network and activity
    of protocols.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hybrid IDS** system tries to integrate the advantages of all IDS while removing
    its loopholes. In this system, the sensing element and hosts communicate with
    a core administration or director stage. Introduction of data which is collected
    from network-based sensing elements and host-based computer program becomes the
    biggest problem for the supplier of a hybrid instruction detection system.'
  prefs: []
  type: TYPE_NORMAL
- en: 1.3 Random Forest Classifier
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Random forest (RF) [[16](#CR16)] has been known as an ensemble classifier (see
    Fig. [1](#Fig1)). It has been developed to enhance the accuracy and performance
    of IDS systems. This classifier includes several decision trees. After reviewing
    several classifiers, it is clear that there is less error in the classification
    of intrusion using RF which shows its efficiency and applicability. This classification
    is better than other classification classifiers. This classifier considers several
    trees, minimum node size, and the number of features to split each node. There
    are many advantages of this classifier such as it saves the generated forests
    which can be used for future reference. It also resolves the issue related to
    fitting. Accuracy and variable importance generate without any manual effort.
    When the individual trees are constructed in a random forest, randomization is
    used to choose the best node to split on. This value is equal to √A, where A is
    the number of attributes in the dataset. Therefore, RF formulated several noisy
    trees that influence accuracy and wrong decision.![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig1_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: Random forest classifications
  prefs: []
  type: TYPE_NORMAL
- en: İn this research paper the Sect. [1](#Sec1) is introducing intrusion detection
    system along with its types. Moreover the role of random forest classification
    for IDS detection has been presented. Section [2](#Sec5) is presenting existing
    researches in field of intrusion detection while Sect. [3](#Sec6) is focusing
    on the problem statement. The Sect. [4](#Sec7) has focused on research methodology
    where socket programming has been considered along with client server transmission
    mechanism. The concept of user defined ports and predefined port have been considered
    in this section. Intrusion Sect. [5](#Sec8) is presenting the tools used for IDS
    detection and Sect. [6](#Sec9) discussed the proposed work. Section [7](#Sec10)
    explores the results obtained during simulation and finally Sect. [8](#Sec14)
    presented the conclusion.
  prefs: []
  type: TYPE_NORMAL
- en: 2 Literature Review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In 2020, Y. Zhou et al. [[1](#CR1)] developed an Efficient Intrusion Detection
    System. In their work, they considered Feature Selection and Ensemble Classifier.
    In 2020, Y. J. Chew et al. [[2](#CR2)] applied a Decision Tree in the company
    of responsive size in the system—dependent upon intrusion detection. The design
    which was proposed by them has been examined in the company of six proportions
    Gure KDDCup, NIDS records. In 2020, Song, Yajie, and Bu, Bing et al. [[3](#CR3)]
    proposed a new design for Intrusion Detection. For the achievement of this purpose,
    they combine Network and hardware. The work is confirmed on equipment on the up
    and up reenactment foundation of CBTC frameworks. Recreation results demonstrate
    strategy accomplished ninety-seven point six four percent genuine certain rate.
    It can essentially increase the level of safety insurance in support of the CBTC
    structure. In 2019, A. Arul Anitha et al. [[4](#CR4)] developed ANNIDS: Artificial
    neural network dependent intrusion detection system in support of the internet
    of things (IoT). They discussed that there are several studies on IoT which have
    revealed that Artificial Neural Network (ANN) is best to acquire accurate detection
    rate as compared to other approaches. In 2019, A. Khraisat et al. [[5](#CR5)]
    surveyed the system of intrusion detection, various methods, records, and related
    issues. Their survey work has presented a taxonomy of contemporary IDS. In addition
    to this, a comprehensive review related to notable recent works is made. In 2019,
    R. Vinayakumar et al. [[6](#CR6)] developed an ethos of deep learning in support
    of a system that is used for smart intrusion detection. Their research work introduced
    a new form of deep learning which deep neural network (DNN) becomes. In 2018,
    Meira, Jorge et al. [[7](#CR7)] gave relative Results Unsupervised Techniques
    in Cyber Attack Novelty Detection. Interruption location has been known as a significant
    need in current occasions. PC frameworks are continually being casualties of pernicious
    assaults. In 2018, Kolli, Satish and Lilly et al. [[8](#CR8)] considered CSA for
    PTC with the support of DIDS. Railroads are intending to finish the execution
    of PTC frameworks by 2020 with the essential security destinations of maintaining
    a strategic distance from between train crashes, train crashes and guaranteeing
    railroad specialist wellbeing. In 2018, Clotet et al. [[9](#CR9)] talked about
    an ongoing inconsistency based on IDS for digital assault discovery at the mechanical
    procedure level of Critical Infrastructures. This work presents a constant abnormality
    based discovery framework intended during the mechanical procedure of essential
    structure (CI). In 2018, T. Tian et al. [[10](#CR10)] improves the maximization
    method of ant lion. Its application is also improved. It was done in the system
    in which hydraulic turbines are dominating to identify its parameter. In 2017,
    Aleroud [[11](#CR11)] utilized circumstantial data for the detection of internet
    attacks. An ongoing pattern is towards the information based interruption identification
    frameworks (IDSs). IDSs in which information is used in the form of base saves
    information regarding digital attacks and probable weak points and utilize this
    information. In 2017, Al-Dabbagh et al. [[12](#CR12)] composed a System of intrusion
    Detection given internet Attacks in mobile control systems. In this article, a
    proposed topology for a remote organized control framework has been concentrated
    under a few digital assault situations. In 2017, S. M. Alqahtani et al. [[13](#CR13)]
    made a comparison in the middle of various organizations’ techniques in support
    of cloud IDS warnings along with fuzzy organizers. In their research work, they
    utilized general classification algorithms. In 2017, S. Mouassa et al. [[14](#CR14)]
    discussed the Ant lion optimizer to resolve the problems related to the transmission
    of ideal and sensitive energy in the electric network. In 2017, B. B. Rao et al.
    [[15](#CR15)] explained Fast KNN Classifiers to utilize in developing an efficient
    IDS system. A couple of KNN grouping methods that are very fast are considered
    in their work.'
  prefs: []
  type: TYPE_NORMAL
- en: 3 Problem Statement
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Classifiers that are established based on machine learning already exist. When
    this classifier is implemented it will make the efficiency of intrusion detection
    systems better. But, at the same time, it also includes some vulnerability. The
    performing period of the existing system needs improvement. For this purpose,
    additional nodes are added in the direction of the available group. In addition
    to this, existing systems are not able to deliver complete details related to
    malware patterns and quality. In short, for making the efficiency better, a complicated
    pattern of DNNs are made trained over the latest device with the help of a distributed
    method.
  prefs: []
  type: TYPE_NORMAL
- en: 'A complicated pattern of DNNs is not trained in this work using the standard
    of intrusion detection system records. It happens because the expenses of computerized
    calculation related to the company of complicated patterns of DNNs are comprehensive.
    Using the standard of intrusion detection system records, solutions that are established
    based on machine learning designs raise many challenging concerns which are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '1'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Design generates highly incorrect encouraging speed in the company of intrusion
    large extent.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Designs are not capable of being generalized because in the present assessment,
    for representing design efficiency just an individual record is implemented.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Design examines up to this point does not consider present network conjunction
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To maintain the present fast-growing network dimension and activities, a different
    type of solution becomes a requirement.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: All the above said challenging issues become the primary encouragement in support
    of this research where the effectiveness of existing machine learning classifiers
    becomes the main focal point. However existing methods generate highly incorrect
    encouraging speed by capturing how the supply of networks is used. Within standard
    conjunction arrangements of attacks are present in the company of highly low description
    and for a long period.
  prefs: []
  type: TYPE_NORMAL
- en: 4 Research Methodology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The proposed work has make using of socket programming for client server model.
    Transmission requires IP address and port no during transmission. The receiver
    needs to initialize the connection before receiving data from sender. The data
    is then transferred from sender to receiver. The intrusion detection model is
    detecting and classifying the intruder during transmission process.
  prefs: []
  type: TYPE_NORMAL
- en: Client-Server Model
  prefs: []
  type: TYPE_NORMAL
- en: Two requests related to a system can be started at the same time, but practically
    it is not needed. Because of that, it becomes necessary to form the application
    of the transmission network in such a way that it can execute compulsory network
    function in a specified order, in place of parallel function. Primarily, the server
    performs and stays in this post until it obtains the network packet which is delivered
    in its direction when the client performs. When the primary contact completes
    either consumer or server becomes capable of delivering and obtaining information.
  prefs: []
  type: TYPE_NORMAL
- en: IP4 Addresses
  prefs: []
  type: TYPE_NORMAL
- en: These addresses extended up to thirty-two bits. Normally they exist in the market
    standard form of numbers. All four bytes due to which thirty-two address build
    exists in the form of whole number (zero to two hundred and fifty-five) and divided
    through a dot.
  prefs: []
  type: TYPE_NORMAL
- en: Port
  prefs: []
  type: TYPE_NORMAL
- en: For the identification of sockets in an exception manner address related to
    web service, adjacent rules and numbers linked with the port are used. Because
    of this reason, whenever a socket is formed, it is compared in the company of
    internet protocol address and port number. Ports become the objects of a computer
    program in the middle of different demands. As soon as a host obtains a packet,
    it moves in the direction of the protocol heap and finally reaches the application
    layer. A packet during data transmission is consisting of a port number & IP address
    where data is to be delivered within data. Port number 1 to 1023 are reserved
    for existing services but 1024 to 65,535 are available for our programs.
  prefs: []
  type: TYPE_NORMAL
- en: Socket Programming
  prefs: []
  type: TYPE_NORMAL
- en: 'Programming is already used for communication in the middle of two applications.
    This application runs in the settings of two Java runtime environments. There
    is the feasibility that the programming related to Java Socket may be connection-oriented.
    It is also possible that this programming can be done in the absence of connection.
    The Socket, as well as Server Socket classes, have been used. These are applied
    for programming related to connection-oriented sockets. Datagram Socket in the
    company of Datagram Packet classes has been applied. These are used to do programming
    related to without connection socket. The user in socket programming must know
    given two points below:'
  prefs: []
  type: TYPE_NORMAL
- en: Server IP Address
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Port number
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Socket class
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The socket is used to communicate among devices. Socket class could be applied
    to make the socket. Several methods of socket class are used to create connection,
    close connection, read and write data from on socket to another socket.
  prefs: []
  type: TYPE_NORMAL
- en: Server Socket Class
  prefs: []
  type: TYPE_NORMAL
- en: It becomes possible to use it in the formulation of the server socket. It is
    applied to make communication with clients. The following table explains those
    methods which are available inside the Server Socket
  prefs: []
  type: TYPE_NORMAL
- en: Important MethodsTo run this code there is a need to open two command prompts.
    Here execution of each program takes place on every command prompt (see Fig. [2](#Fig2)).
    During the execution of client code, information is shown over the server-side
    (Table [1](#Tab1)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig2_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig2_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 2
  prefs: []
  type: TYPE_NORMAL
- en: Output of program
  prefs: []
  type: TYPE_NORMAL
- en: Table 1
  prefs: []
  type: TYPE_NORMAL
- en: Server socket class methods
  prefs: []
  type: TYPE_NORMAL
- en: '| Method | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Public socket accept() | In addition to linking in the middle of server &
    client, proceeds socket |'
  prefs: []
  type: TYPE_TB
- en: '| Public synchronized void close() | Stop the server socket |'
  prefs: []
  type: TYPE_TB
- en: 5 Tools in Intrusion Detectıon
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The products which are made available to the general public after intrusion
    detection manage a variety of administrative objectives that are related to their
    safety [[2](#CR2)]. Hardware that is used to provide safety is considered here.
  prefs: []
  type: TYPE_NORMAL
- en: SNORT
  prefs: []
  type: TYPE_NORMAL
- en: It is a type of computer program which can be accessed freely. To define congestion,
    languages which are made based on rules are used by it. This language is adjustable
    [[6](#CR6)]. It files packets out of internet protocol address in a format that
    can be inspected visually by human beings. It identifies lots of worms; weak points
    explore attempts, scan ports in addition to other illegal activities. With the
    help of different pre-processors, content discovery, and the examination of various
    rules and regulations, all these things are identified.
  prefs: []
  type: TYPE_NORMAL
- en: OSSEC-HIDS
  prefs: []
  type: TYPE_NORMAL
- en: It becomes famous in the form of open source security. It is a computer program
    that can be assessed freely. It works concerning crucial computer program. The
    structure which is established based on the Client/Server model is used by it.
    It is so much capable that it can easily deliver OS logs in the direction of the
    server in support of examination work and for preservation. It is already implemented
    in machines which carry out log examination, ISPs, educational institutions &
    information hub. For the observations and assessment of certified logs and firewalls,
    HIDS is used.
  prefs: []
  type: TYPE_NORMAL
- en: FRAGROUTE
  prefs: []
  type: TYPE_NORMAL
- en: It becomes famous in the form of a forwarding device that is used for division.
    Bundles of internet protocol are delivered by the attacker in the direction of
    the frag router. After that these packets are broken and processed for the party.
  prefs: []
  type: TYPE_NORMAL
- en: HONEYD
  prefs: []
  type: TYPE_NORMAL
- en: It becomes hardware that developed basic moderators into the network [[6](#CR6)].
    When the facilities are utilized through a host, it permits an individual host
    to demand various locations on a local area network in support of networks’ computerized
    calculation. It becomes possible to criticize the basic engine or to track their
    path [[6](#CR6)].
  prefs: []
  type: TYPE_NORMAL
- en: KISMET
  prefs: []
  type: TYPE_NORMAL
- en: In support of the intrusion detection system which is mobile, it becomes a benchmark.
    This system is arranged inside the useful load of packets and happenings of WIDS.
    It would identify the intruder gateway.
  prefs: []
  type: TYPE_NORMAL
- en: 6 Proposed Work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The work which has been introduced here contains two phases: (1) Quality Collection
    (2) Organizations. In this work, one against-all method was included in support
    of organizing all attacks. For the identification of usual datasets, we established
    them to class one, and the remaining attacks are established to class two different.
    After that, qualities are collected and organization is done through the radiofrequency
    method. The complete arrangement of the system is displayed in the diagram (see
    Fig. [3](#Fig3)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig3_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig3_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 3
  prefs: []
  type: TYPE_NORMAL
- en: Process flow of proposed work
  prefs: []
  type: TYPE_NORMAL
- en: 7 Result and Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The simulation process is presenting the client server transmission in sender
    and receiver where user defined port is used to transfer information between two
    nodes. The random forest classifier has been applied to classify the intrusion.
  prefs: []
  type: TYPE_NORMAL
- en: 7.1 Client Server Setting in Sender and Receiver
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here, the usage of the network is put forward. Net bean-based Integrated Development
    Environment. It is already highlighted in the diagram (see Fig. [4](#Fig4)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig4_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 4
  prefs: []
  type: TYPE_NORMAL
- en: On the server-side, we have made designing and written code to enable the download
    option and disable the download option
  prefs: []
  type: TYPE_NORMAL
- en: The design view of the file receiver module (see Fig. [5](#Fig5)). Here the
    port no, the path of file, content decoding token has been specified.![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig5_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig5_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5
  prefs: []
  type: TYPE_NORMAL
- en: Design view of receiver application
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Sender Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The design view of the file sender module (see Fig. [6](#Fig6)). Here the port
    no, the path of the file, IP address of receiver, content-encoding token has been
    specified.![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig6_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig6_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6
  prefs: []
  type: TYPE_NORMAL
- en: Code to implement UPLOAD on the sender side
  prefs: []
  type: TYPE_NORMAL
- en: Running ApplicationThere is a need to upload a text file from sending to the
    receiver side. In the following figure nn.txt file has been shown (see Fig. [7](#Fig7)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig7_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig7_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 7
  prefs: []
  type: TYPE_NORMAL
- en: Running applications
  prefs: []
  type: TYPE_NORMAL
- en: At the time of execution of the file sender code (see Fig. [8](#Fig8)), it is
    essential to clarify whether port no is more than 1023\. File path and approval
    token are also specified.![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig8_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig8_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 8
  prefs: []
  type: TYPE_NORMAL
- en: Running applications
  prefs: []
  type: TYPE_NORMAL
- en: During the execution of the file sender module, there is a requirement of user-defined
    port number 6666, file path, and authorization of token. The specification of
    IP addresses to put target location for file for broadcasting (see Fig. [9](#Fig9)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig9_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig9_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 9
  prefs: []
  type: TYPE_NORMAL
- en: File sender applications
  prefs: []
  type: TYPE_NORMAL
- en: 7.3 Random Forest Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The simulation of random forest classifier has been performing using MATLAB
    and the classification result is shown in Figs. [10](#Fig10) and [11](#Fig11).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig10_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig10_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 10
  prefs: []
  type: TYPE_NORMAL
- en: The classification error according to grown trees
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig11_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig11_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 11
  prefs: []
  type: TYPE_NORMAL
- en: Classification tree viewer
  prefs: []
  type: TYPE_NORMAL
- en: ≫call_generic_random_forests
  prefs: []
  type: TYPE_NORMAL
- en: Confusion MatrixAfter training of the dataset testing module is run then the
    confusion matrix is generated considering various attributes. The true classes
    are presented on y-axis and predicted classes are presented on the x-axis (Fig. [12](#Fig12)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig12_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig12_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 12
  prefs: []
  type: TYPE_NORMAL
- en: Confusion matrix of proposed model
  prefs: []
  type: TYPE_NORMAL
- en: Considering the above confusion matrix chart presenting accuracy, precision,
    recall value, and f-score is generated. The accuracy chart in the case of existing
    work is presented below (Figs. [13](#Fig13), [14](#Fig14), [15](#Fig15), [16](#Fig16)
    and [17](#Fig17)).![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig13_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig13_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 13
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of proposed and previous in case of accuracy
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig14_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig14_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 14
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of proposed and previous in case of precision
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig15_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig15_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 15
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of proposed and previous in case of recall
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig16_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig16_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 16
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of proposed and previous in case of F-score
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_10_Chapter/507793_1_En_10_Fig17_HTML.png](../images/507793_1_En_10_Chapter/507793_1_En_10_Fig17_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 17
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of proposed and previous IDS model
  prefs: []
  type: TYPE_NORMAL
- en: 8 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The research concludes that a random forest is proven as an ensemble classifier.
    It is capable to enhance the accuracy and performance of IDS systems. Results
    conclude that this classifier includes many decision trees. After the simulation,
    it has been concluded that there is less error in the classification of intrusion
    using RF which is efficient and applicable. The proposed system is more secure
    as it has made use of a user-defined socket during data transmission. The probability
    of IDS attacks has been reduced due to the presence of encryption and user-defined
    socket transmission. The accuracy, precision value, recall value and f-score is
    found better in case of proposed IDS system.
  prefs: []
  type: TYPE_NORMAL
- en: 9 Future Scope
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Research has been focused to provide security against different attacks such
    as DOS attacks and Probe attacks. For improving the efficiency of present IDS
    systems a new model was added to monitor the DNS and BGP events in the Networks.
    The future work on relevant research has been analyzing various machine learning
    classifiers that are utilized to increase performance in the case of IDS. This
    research work also introduces a method for enhancement of system efficiency which
    is based upon intrusion Detection. For this using Random Forest Classifier is
    bringing into use. Future researchers are supposed to evaluate the new technique
    by calculating the quality of service parameters.
  prefs: []
  type: TYPE_NORMAL
