- en: 8   Private Blockchain Platforms and Use Cases
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8   私有区块链平台和用例
- en: Blockchain is a peer-to-peer distributed ledger technology, which makes it easier
    to create a more cost-efficient network with no central point of control. This
    is in contrast to the world where members of a business ecosystem maintain their
    own ledger o`r` systems of record (SOR). These separate ledgers are continually
    being reconciled with one another in an inefficient, expensive, and often nonstandard
    way. Over time, these separate ledgers have been duplicated many times within
    each member’s datacenters. It has gotten to the point where data governance, testing,
    release management, and in effect the complete software development life cycle
    (SDLC) is always hampered and more or less broken or damaged. It is no wonder
    that these institutions cannot innovate fast enough. It’s like trying to run a
    race while dragging a trailer containing all the clothing you’ve ever owned throughout
    your lifetime!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种点对点的分布式账本技术，这使得创建一个没有中心控制点的更成本效益的网络变得容易。这与商业生态系统成员维护自己的账本`或`记录系统（SOR）的世界形成对比。这些独立的账本以一种低效、昂贵且通常非标准化的方式相互协调。随着时间的推移，这些独立的账本在各个成员的数据中心内被多次复制。现在的情况是，数据治理、测试、发布管理和完整的软件开发生命周期（SDLC）总是受到阻碍，或多或少是破裂或损坏的。难怪这些机构不能快速创新。这就像试图在拖着包含你一生中所有衣服的拖车的同时参加比赛！
- en: However, recently the concept of private blockchains has become popular within
    the discussions on blockchain technology, particularly among financial institutions.
    Instead of having a fully decentralized network open to the public with anonymous
    parties, it is possible to create a system where each party is identified and
    granted permissions to change or read the blockchain. These private blockchains
    are also tackling the performance issue because consensus is performed on fewer
    nodes. In fact, it is likely that there will be many blockchain networks with
    each network serving a different set of goals and distinct business applications
    (see [Figure 8-1](ch8.xhtml#ch8fig1)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，最近私有区块链的概念在区块链技术的讨论中变得流行，特别是在金融机构中。而不是拥有一个完全去中心化的网络对公众开放，并且参与方是匿名的，创建一个每个参与方都被识别并授予改变或读取区块链权限的系统是可能的。这些私有区块链也在解决性能问题，因为共识是在较少的节点上执行的。实际上，很可能会有许多不同的区块链网络，每个网络服务于不同的一组目标和独特的商业应用（参见[图8-1](ch8.xhtml#ch8fig1)）。
- en: '![Images](fig8-1.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![Images](fig8-1.jpg)'
- en: '**FIGURE 8-1   Many blockchain networks**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**图8-1    许多区块链网络**'
- en: It is important to note that there is some discussion that these private blockchains
    are compromising the central concept of decentralization. But for the purposes
    of this book let’s take a look at the differences between the types or categories
    of blockchain.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，有一些讨论认为这些私有区块链正在妥协去中心化的核心概念。但为了本书的目的，让我们来看看不同类型或类别的区块链之间的差异。
- en: Categories of Blockchain
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区块链类别
- en: 'Generally speaking, there are three categories of blockchain-like database
    applications: public, consortium, and private.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，区块链类数据库应用有三种类型：公共的、联盟的和私有的。
- en: •   **Public**   Anyone can read or submit transactions (submissions will be
    committed if valid), and anyone can participate in the consensus process. These
    trustless platforms are secured by mechanisms such as proof of work or proof of
    stake, a.k.a. cryptoeconomics. In other words, influence in the consensus process
    is proportional to the quantity of economic resources that entity can bring to
    bear.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: •   **公共**   任何人都可以读取或提交交易（如果有效，提交将被提交），任何人都可以参与共识过程。这些无需信任的平台通过工作量证明或权益证明等机制来保证安全，即加密货币经济学。换句话说，共识过程中的影响力与该实体可以动用的经济资源的数量成比例。
- en: •   **Consortium**   Consensus is controlled by a preselected set of nodes and
    rules for achieving consensus. The right to read the blockchain can be open to
    the public, or it can also be restricted to a set of known participants—for example,
    10 banks in a consortium that agree to the consensus rule that 7 of 10 banks must
    sign (approve) a block for it to be considered a valid representation of the truth.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: •   **联盟**   共识由预先选择的一组节点和实现共识的规则控制。读取区块链的权利可以对公众开放，或者也可以限制在已知参与者集合中——例如，一个同意7个中的10个银行必须签字（批准）一个区块才能被认为是真相的有效表示的联盟中的10家银行。
- en: •   **Private**   Write permissions are kept centralized to a single organization
    or part of it. Read permissions may be public or restricted to a set of known
    participants.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: •   **私有**   写入权限保持在单一组织或其部分手中。读取权限可能是公开的或限制在已知参与者集合中。
- en: In short, there are really two categories, *public* and *private*. The *consortium*
    is a derivative of the private blockchain with multiple identified and permissioned
    members/participants.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，实际上有两个类别，*公共*和*私有*。*联盟*是私有链的一个派生，具有多个确定和授权的成员/参与者。
- en: 'Here is a list of the advantages of a private blockchain:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是私有链的一些优势列表：
- en: •   When read permission is enforced, a private blockchain provides privacy.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: •   当读取权限得到执行时，私有区块链提供了隐私保障。
- en: •   A consortium or private entity can change the rules of a blockchain, allowing
    them to revert transactions, modify (fix) balances, etc. This functionality may
    be deemed necessary, although we must say these reasons look more like patches
    to fix defective functionality.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: •   联盟或私有实体可以更改区块链的规则，允许他们撤销交易，修改（修复）余额等。这一功能可能被认为是必要的，尽管我们必须说这些原因看起来更像是为了修复有缺陷功能的补丁。
- en: •   The miners (or validators) are identified, defined, and known, so any risk
    of a 51 percent attack from colluding bad actors does not exist or can easily
    be identified and dealt with.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: •   矿工（或验证者）是确定、定义和知名的，所以来自勾结不良行为者的51%攻击不存在或可以很容易地被识别和处理。
- en: •   Transactions are less expensive, since they only need to be verified by
    a limited set of trusted (and identified) nodes instead of by every node on the
    public network. There does not have to be any transaction fee. There may still
    be a requirement to run a validator node to participate in the network. This would
    be an expense, but would be less expensive to participants than a transaction
    fee on the public network. The validator node may also provide protection against
    a distributed denial-of-service (DDoS) attack.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: •   交易成本较低，因为它们只需要由有限的信任（且确定）节点验证，而不是由公共网络上的每个节点验证。不一定需要任何交易费。可能仍然需要运行一个验证节点以参与网络。这对参与者来说将是一笔费用，但比在公共网络上的交易费要便宜。验证节点还可能提供对分布式拒绝服务（DDoS）攻击的保护。
- en: •   With fewer miners needed, consensus finality can be achieved much faster
    among a smaller group.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: •   由于需要的矿工更少，在小团体中可以更快地实现共识最终性。
- en: So, given the above, it is no surprise that financial institutions invariably
    choose private (or consortium) platforms for their blockchain applications. It
    is also a reason that private blockchains are also known as enterprise blockchains.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，鉴于上述情况，金融机构选择私有（或联盟）平台用于其区块链应用也就不足为奇了。这也是私有链被称作企业链的一个原因。
- en: Private Blockchain Use Cases
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 私有链应用案例
- en: 'The public blockchain has, in many cases by design, the following challenges
    to enterprise adoption, particularly those industries that are highly regulated:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 公共区块链在许多方面设计上对企业发展具有挑战性，尤其是在那些高度受监管的行业：
- en: •   No privacy
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: •   没有隐私
- en: •   Anonymous processors
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: •   匿名处理器
- en: •   Little to no governance
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: •   几乎没有治理
- en: •   Limited throughput with slow transaction confirmation (performance challenge)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: •   有限的吞吐量，交易确认速度慢（性能挑战）
- en: 'In short, there are essentially two aspects to privacy itself: read permission
    and block generation (or write) permission. If the use case requires privacy,
    you will want to restrict read permission. If the use case requires trust spread
    across a limited and predetermined set of participants, you will want to restrict
    write permission. Both aspects individually or collectively may push you to a
    private (or consortium) blockchain platform.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，隐私本身本质上分为两个方面：读取权限和区块生成（或写入）权限。如果用例需要隐私，你将希望限制读取权限。如果用例需要信任扩散到有限和预定的参与者集合，你将希望限制写入权限。这两个方面单独或共同可能推动你走向私有（或联盟）区块链平台。
- en: 'Throughout this chapter we mention use cases for private blockchains. The following
    is a more complete collection of use cases:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们提到了私有链的应用案例。以下是更完整的应用案例集合：
- en: •   A permissioned interfinancial institution settlement layer for digital assets
    (currencies and securities)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: •   为数字资产（货币和证券）提供一个权限化的金融机构间结算层
- en: •   An intracompany ledger (balance sheet) containing private data without any
    single department being in authoritative control
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: •   一个公司内部账本（资产负债表），包含私有数据，而没有任何一个部门拥有权威控制权
- en: •   A permissioned platform for the issuance and maintenance of rewards, loyalty
    points, and gift cards
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: •   一个用于发行和维护奖励、忠诚积分和礼品卡的受许可平台
- en: •   A tracking tool for private equity, debt, and other liquid agreements
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: •   私有股权、债务和其他流动协议的跟踪工具
- en: •   Database management, auditing, etc., internal to a single company
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: •   单一公司内部的数据库管理、审计等
- en: •   Any use case that requires incredibly high numbers of transactions per second
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: •   任何需要每秒极高交易量的用例
- en: Again, the considerations for choosing a private blockchain platform can be
    narrowed down to the requirements depicted in [Figure 8-2](ch8.xhtml#ch8fig2).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，选择私有区块链平台的考虑因素可以缩小到[图8-2](ch8.xhtml#ch8fig2)中描绘的需求。
- en: '![Images](fig8-2.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](fig8-2.jpg)'
- en: '**FIGURE 8-2   Requirements leading to private blockchains**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**图8-2   导致私有区块链的需求**'
- en: Private Blockchain Technology
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 私有区块链技术
- en: This section presents blockchain technology platforms that are applicable for
    the private and consortium spaces.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了适用于私有和联盟空间的区块链技术平台。
- en: AlphaPoint Distributed Ledger Platform
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 阿尔法点分布式账本平台
- en: '![Images](f0176-01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0176-01.jpg)'
- en: 'Website: [https://www.alphapoint.com/adlp.html](https://www.alphapoint.com/adlp.html)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://www.alphapoint.com/adlp.html](https://www.alphapoint.com/adlp.html)
- en: 'AlphaPoint Distributed Ledger Platform is a private, permissioned protocol
    that leverages blockchain, and it further allows firms complete control over their
    data. ADLP’s key benefits are:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 阿尔法点分布式账本平台是一个私有的、受许可的协议，利用区块链，并允许公司完全控制其数据。ADLP的关键优势是：
- en: •   **Secure architecture**   Multiple entities communicate and link via encrypted
    messages across secure networks.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: •   **安全的架构**   多个实体通过加密消息在安全的网络上进行通信和链接。
- en: •   **Permissioned**   Parties can only access data that is explicitly shared
    with them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: •   **受许可**   各方只能访问明确与他们共享的数据。
- en: The platform enables organizations to digitize, manage, and exchange financial
    instruments; deploy smart contracts along with automated workflows; and therefore
    reduce operational overhead.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台使组织能够数字化、管理和交换金融工具；部署智能合约以及自动化工作流程；从而降低运营成本。
- en: Chain Core
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 链核
- en: '![Images](f0177-01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0177-01.jpg)'
- en: 'Website: [https://chain.com](https://chain.com)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://chain.com](https://chain.com)
- en: Chain Core is a permissioned blockchain platform that is used to issue and/or
    transfer financial assets. Using it, financial institutions can launch and operate
    a blockchain network or connect to other networks in order to move assets around.
    The Chain protocol handles this by defining how assets are issued, transferred,
    and controlled. It allows a single entity (private) or a group of organizations
    (consortium) to operate a network, supports the coexistence of multiple types
    of assets (e.g., currencies, securities, derivatives, gift cards, and loyalty
    points), and has a degree of interoperability with other independent networks.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 链核是一个受许可的区块链平台，用于发行和/或转让金融资产。利用它，金融机构可以启动和运营区块链网络，或连接到其他网络以便转移资产。链协议通过定义资产的发行、转让和控制方式来处理这一点。它允许单一实体（私有）或一组组织（联盟）运营一个网络，支持多种资产类型（如货币、证券、衍生品、礼品卡和忠诚积分）的共存，并且与其他独立网络有一定的互操作性。
- en: Corda
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 科达
- en: '![Images](f0177-02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0177-02.jpg)'
- en: 'Website: [https://www.corda.net](https://www.corda.net)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://www.corda.net](https://www.corda.net)
- en: Corda is an open-source platform that implements a distributed ledger made up
    of mutually distrusting nodes that records the state of deals and obligations
    between entities, which can be institutions or individuals. Unlike Ethereum, Corda’s
    smart contracts are currently limited to the application of financial logic, and
    all nonfinancial applications are out of scope.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 科达是一个开源平台，实现了一个由相互不信任的节点组成的分布式账本，记录了实体之间的交易和债务状态，这些实体可以是机构或个人。与以太坊不同，科达的智能合约目前仅限于金融逻辑的应用，所有非金融应用都在范围之外。
- en: One of Corda’s key features is pluggable consensus within the same network.
    This feature supports multiple consensus providers, and each can employ different
    algorithms. This type of distributed ledger has many applications focused around
    commerce, such as finance, trade, and supply chain tracking. Other key features
    are that this is a permissioned network, with access controlled by a doorman (TLS
    certificate provided to each node participant upon successful registration), and
    that all communication between nodes is point-to-point, instead of being sent
    to all nodes in a global broadcast.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Corda的一个关键特性是在同一网络中可插拔共识。这一特性支持多个共识提供者，每个提供者都可以使用不同的算法。这种分布式账本在商业领域有许多应用，如金融、贸易和供应链跟踪。其他关键特性是这是一个受许可的网络，访问由门卫控制（每个节点参与者在成功注册后都会获得TLS证书），节点之间的所有通信都是点对点的，而不是发送给所有节点的全局广播。
- en: Domus Tower
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Domus Tower
- en: '![Images](f0177-03.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0177-03.jpg)'
- en: 'Website: [http://domustower.com](http://domustower.com)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 'Website: [http://domustower.com](http://domustower.com)'
- en: Domus Tower has a vertical blockchain product that is solely designed to settle
    U.S. equities. The company’s key selling point is that its technology can record
    a high rate of transactions in a scalable manner. The company’s whitepaper begins
    with a statement that the product has been “benchmarked at ingesting over 1 million
    transactions per second on hardware costing less than $50 per hour on Amazon’s
    Web Services with the potential to scale to greater than 10 million transactions
    per second.”
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Domus Tower有一个专门为结算美国股票设计的垂直区块链产品。该公司的一个主要卖点是，其技术可以在可扩展的方式下记录高交易率。该公司的白皮书以一个声明开头，称该产品已经在亚马逊网络服务的硬件上进行了“基准测试，每小时的硬件成本不到50美元，能够处理超过100万笔交易，并有潜力扩展到每秒超过100万笔交易。”
- en: It uses a double-entry approach for credits and debits, and data storage is
    contained in a Merkle directional acyclic graph (MerkleDAG), which ensures that
    the blockchain has not been altered or corrupted. All data transmitted to the
    blockchain is digitally signed and verified before it is written to a block. Authority
    is centralized under this model, and any node on the network that has write permission
    to a blockchain can write transactions to that chain.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 它采用双记账方法处理贷方和借方，数据存储包含在Merkle有向无环图（MerkleDAG）中，确保区块链没有被篡改或损坏。所有传输到区块链的数据在写入区块之前都进行数字签名和验证。在这种模型下，权威是集中的，网络上的任何具有区块链写入权限的节点都可以将交易写入该链。
- en: The Elements Project
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: The Elements Project
- en: '![Images](f0178-01.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0178-01.jpg)'
- en: 'Website: [https://elementsproject.org](https://elementsproject.org)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'Website: [https://elementsproject.org](https://elementsproject.org)'
- en: Elements Core is an open-source, protocol-level technology developers can use
    to extend the functionality of Bitcoin to build new applications. Combinations
    of Elements (functionality) developed in this technical community can be brought
    together and fashioned into sidechains. It uses the periodic table and associated
    chemistry approaches to the naming and combining of functionality to build an
    application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Elements Core是一个开源的、协议级别的技术，开发者可以使用它来扩展比特币的功能以构建新的应用程序。这个技术社区开发的元素（功能）组合可以被汇集在一起，并形成侧链。它使用元素周期表及相关化学方法来命名和组合功能，以构建应用程序。
- en: 'The current list of Elements are:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'The current list of Elements are:'
- en: •   **Ai (Asset Issuance)**   Ability to issue confidential assets that represent
    any asset such as vouchers, coupons, currencies, deposits, bonds, shares, etc.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Ai (资产发行)**   能够发行代表任何资产（如凭证、优惠券、货币、存款、债券、股份等）的保密资产。
- en: •   **Ct (Confidential Transactions)**   In a cryptographic way this keeps the
    amounts transferred visible only to participants in the transaction and those
    they designate, while still guaranteeing that no more coins can be spent than
    are available (double-spend).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Ct (保密交易)**   以加密方式仅让交易参与者和他们指定的人可见转账金额，同时仍保证不能花费比可用金额更多的币（防止双重花费）。
- en: •   **Dp (Deterministic Pegs)**   Allow cross-chain transactions to be constructed
    in a decentralized fashion, where tokens can be moved from one blockchain to another.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Dp (确定性peg)**   允许以去中心化的方式构建跨链交易，使得代币可以从一条区块链转移到另一条。
- en: •   **Op (New Opcodes)**   Delivers new and re-enables some safe but disabled
    operation codes in Bitcoin (i.e., string concatenation, substrings, integer shifts,
    and some bitwise operations).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Op (新操作码)**   向比特币交付新的操作码，并重新启用一些已被禁用但安全的操作码（例如，字符串连接、子字符串、整数移位以及一些位运算）。
- en: •   **Rtl (Relative Time Lock)**   Allows a transaction to be time-locked, preventing
    its use in a new transaction until a relative time change is achieved.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Rtl (相对时间锁定)**   允许一个交易被时间锁定，防止在没有达到相对时间变化的情况下在新交易中使用。
- en: •   **Sb (Signed Blocks)**   Allows the creator of the block to verify their
    identity in the future.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Sb (签名区块)**   允许区块的创建者在将来验证他们的身份。
- en: •   **Scv (Signature Covers Value)**   Signature on a transaction can be invalidated
    if the inputs have been spent. Transaction can be validated fast by checking its
    signature.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Scv (签名覆盖值)**   如果输入已被花费，交易的签名可以被无效化。通过检查其签名，可以快速验证交易。
- en: •   **Ss (Schnorr Signatures)**   New way of constructing signatures for transactions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Ss (Schnorr 签名)**   为交易构建签名的新方法。
- en: •   **Sw (Segregated Witness)**   Reduces the required space for transactions
    in a block by a factor of 4.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: •   **Sw (隔离见证)**   通过因子4减少区块中交易所需的空间。
- en: Additionally, there are proposed Elements under development that are not yet
    ready for deployment on a public sidechain.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些正在开发中但尚未准备好部署在公共侧链上的提议元素。
- en: HydraChain
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: HydraChain
- en: '![Images](f0179-01.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0179-01.jpg)'
- en: 'Website: [https://github.com/HydraChain/hydrachain](https://github.com/HydraChain/hydrachain)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 官网：[https://github.com/HydraChain/hydrachain](https://github.com/HydraChain/hydrachain)
- en: HydraChain is 100 percent compatible with Ethereum; it extends the platform
    by adding support for creating permissioned distributed ledgers for private or
    consortium chain applications. All existing tools on the Ethereum platform can
    be reused. The essential difference is that HydraChain does not use proof-of-work
    for consensus, it relies on a registered and accountable set of validators, which
    propose and validate the order of transactions.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: HydraChain 与 Ethereum 完全兼容；它通过添加支持创建私有或联盟链应用程序的受控分布式账本来扩展该平台。Ethereum平台上的所有现有工具都可以被重复使用。本质上的区别是HydraChain不需要工作量证明来达成共识，它依赖于一个注册且可追溯的验证者集合，这些验证者提出并验证交易的顺序。
- en: Hyperledger
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Hyperledger
- en: Hyperledger is the umbrella project of open-source blockchains and supporting
    tools that was started in December 2015 by the Linux Foundation. The purpose of
    Hyperledger is to advance blockchain technology by identifying and then addressing
    important features that can transform the way business transactions are conducted
    on a distributed ledger.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 是 Linux 基金会于2015年12月启动的开源区块链和配套工具的伞形项目。Hyperledger 的目标是推进区块链技术，通过识别并解决重要的功能特性，从而改变在分布式账本上进行商业交易的方式。
- en: '![Images](f0179-02.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0179-02.jpg)'
- en: 'The requirements for blockchains vary greatly across different use cases and
    industries, and Hyperledger is designed and implemented to be highly modular,
    with pluggable options to suit the differing industry requirements. The simplified
    project goals are:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的需求在不同的用例和行业中差异很大，Hyperledger 被设计为高度模块化，具有可插拔选项以适应不同的行业需求。简化的项目目标是：
- en: •   **Create framework and code base**   Users can then build and run robust,
    industry-specific business transactions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: •   **创建框架和代码库**   用户可以构建和运行健壮、特定行业的商业交易。
- en: •   **Foster a community**   This will benefit the ecosystem for all.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: •   **培育社区**   这将有利于所有生态系统的利益。
- en: •   **Promote participation**   Includes end users, developers, and solution
    providers.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: •   **促进参与**   包括终端用户、开发者和解决方案提供商。
- en: •   **Neutral host**   Establish home for infrastructure, meetings, events,
    and collaborative discussions. Additionally, provide structure around the business
    and technical governance.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: •   **中立主机**   为基础设施、会议、活动和协作讨论建立家园。此外，为商业和技术治理提供结构。
- en: Hyperledger Frameworks
  id: totrans-86
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger 框架
- en: 'The Hyperledger initiative incubates and promotes a range of business blockchain
    technologies, including distributed ledger frameworks, smart contract engines,
    client libraries, graphical interfaces, utility libraries, and sample applications.
    The Hyperledger umbrella strategy encourages the reuse of common building blocks
    and enables rapid innovation of distributed ledger technology (DLT) components.
    Here are the frameworks for Hyperledger:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 计划孵化并推广一系列商业区块链技术，包括分布式账本框架、智能合约引擎、客户端库、图形界面、实用库和示例应用程序。Hyperledger
    伞形战略鼓励通用构建块的重复使用，并促进分布式账本技术（DLT）组件的快速创新。以下是 Hyperledger 的框架：
- en: Hyperledger Fabric
  id: totrans-88
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger Fabric
- en: '![Images](f0180-01.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](f0180-01.jpg)'
- en: 'Website: [http://hyperledger.org](http://hyperledger.org)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 官网：[http://hyperledger.org](http://hyperledger.org)
- en: Intended as the foundation pillar for developing applications or solutions with
    a modular architecture, Fabric allows components such as consensus and membership
    services to be added in a plug-and-play fashion. Ledger data can be stored in
    multiple formats, consensus protocols can be switched in and out, and different
    identity verification methods are supported. There is support for channels, which
    are separate ledgers of transactions that are only made visible to specified groups
    of network participants.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发应用程序或解决方案的模块化架构的基础支柱，Fabric允许诸如共识和会员服务之类的组件以即插即用的模式添加。账本数据可以存储在多种格式中，共识协议可以随时切换，并且支持不同的身份验证方法。支持通道，这是仅对指定网络参与者组可见的单独交易账本。
- en: '**Hyperledger Fabric Tutorial**   Prior to running the tutorial, you will need
    to ensure that your computer has the following prerequisites installed:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**Hyperledger Fabric教程**   在运行教程之前，您需要确保您的计算机已安装以下先决条件：'
- en: •   cURL (ensure your version handles redirects)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: •   cURL（确保您的版本可以处理重定向）
- en: •   Docker and Docker Compose
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: •   Docker和Docker Compose
- en: •   Node.js runtime and NPM
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: •   Node.js运行时和NPM
- en: 'The following listing contains the commands and the console output for setting
    up Hyperledger Fabric on a Mac. The first order of business is to set up Go in
    the Path:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表包含在Mac上设置Hyperledger Fabric的命令和控制台输出。首先要做的业务是设置Path中的Go：
- en: '![Images](p0180-01.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0180-01.jpg)'
- en: 'Then upgrade Node Package Manager and install Node.js:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然后升级Node包管理器并安装Node.js：
- en: '![Images](p0181-01.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0181-01.jpg)'
- en: 'Create a working directory for where the clone of Hyperledger Fabric samples
    should go:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为Hyperledger Fabric样本的克隆创建一个工作目录：
- en: '![Images](p0181-02.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0181-02.jpg)'
- en: 'Issue the `clone` command:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`clone`命令：
- en: '![Images](p0181-03.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0181-03.jpg)'
- en: 'Install the platform-specific Hyperledger Fabric binaries:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 安装特定平台的Hyperledger Fabric二进制文件：
- en: '![Images](p0181-04.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0181-04.jpg)'
- en: '![Images](p0182-01.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0182-01.jpg)'
- en: '![Images](p0182-02.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0182-02.jpg)'
- en: '![Images](p0183-01.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0183-01.jpg)'
- en: '![Images](p0183-02.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0183-02.jpg)'
- en: '![Images](p0184-01.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0184-01.jpg)'
- en: 'There are four tutorials that come with Hyperledger Fabric. They are:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 共有四个与Hyperledger Fabric一起提供的教程。它们是：
- en: •   **write_first_app**   Designed to show an application developer how to write
    their first application using the Node.js SDK.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: •   **write_first_app**   旨在向应用程序开发者展示如何使用Node.js SDK编写他们的第一个应用程序。
- en: •   **build_network**   Oriented toward a network operator going through the
    process of establishing a blockchain network and deploying a simple application
    to test it out.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: •   **build_network**   面向网络运营商，通过建立区块链网络并部署一个简单的应用程序来测试它。
- en: •   **chaincode4ade**   Shows a developer how to write business logic agreed
    to by the members of the network.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: •   **chaincode4ade**   向开发者展示如何在网络上达成共识的商务逻辑。
- en: •   **chaincode4noah**   Demonstrates the administration of business logic by
    a network operator.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: •   **chaincode4noah**   展示了网络运营商如何管理业务逻辑。
- en: We will now step through the write_first_app tutorial, which again is designed
    to show the tasks involved and to provide the basis for writing a first application
    against the Hyperledger Fabric network. As with all other persistence layer–based
    (i.e., database or file system) applications that you’ve worked on before, this
    tutorial demonstrates the two common use cases of (1) reading from the chain and
    (2) writing to (or updating) the chain.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将逐步通过write_first_app教程，该教程旨在展示涉及的任务并提供针对Hyperledger Fabric网络编写第一个应用程序的基础。与您之前工作的所有其他基于持久层（即数据库或文件系统）的应用程序一样，这个教程演示了两个常见用例：（1）从链中读取和（2）写入（或更新）链。
- en: 'So, the first step is to navigate to the fabric directory and list its contents:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一步是导航到fabric目录并列出其内容：
- en: '![Images](p0184-02.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0184-02.jpg)'
- en: 'Now start the Fabric network, which does the following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始Fabric网络，执行以下操作：
- en: •   Starts a peer node, an ordering node, a Certificate Authority, and a CLI
    container
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: •   启动同伴节点、排序节点、证书权威和CLI容器
- en: •   Creates a channel and joins the peer node to the new channel
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: •   创建一个通道并将同伴节点加入新通道
- en: •   Installs a smart contract onto the peer’s file system and instantiates this
    contract on the channel by starting a chaincode (smart contract) container
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: •   在同伴文件系统上安装智能合约，并通过启动链码（智能合约）容器在通道上实例化此合约。
- en: •   Calls the initLedger function on the smart contract to create 10 cars in
    the ledger
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: •   调用智能合约上的initLedger函数在账本中创建10辆汽车。
- en: '![Images](p0184-03.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0185-01.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'Now view the processes that have been started:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0185-02.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'Now install the SDK node modules so that the sample code will function:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0186-01.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'Let’s take a look at the query.js code, in particular the highlighted sections
    that show how to connect to the chain and then issue a query:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看query.js代码，特别是突出显示的部分，显示了如何连接到链然后发出查询：
- en: '![Images](p0187-01.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0187-01.jpg)'
- en: '![Images](p0187-02.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0187-02.jpg)'
- en: '![Images](p0188-01.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'A slight adjustment to the query will let us read by a single key:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 对查询稍作调整，让我们能够通过一个键来读取：
- en: '![Images](p0188-02.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0188-02.jpg)'
- en: 'Submitting the adjusted query and showing the response:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 提交调整后的查询并显示回应：
- en: '![Images](p0188-03.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0188-03.jpg)'
- en: '![Images](p0189-01.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'Now we can move on to making some changes to the ledger. We will start off
    with the sample code that will add a new car to the chain. Here is the invoke.js
    code; again the section for inserting CAR10 is highlighted:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以开始对账本进行一些更改。我们将从示例代码开始，该代码将向链中添加一辆新车。以下是invoke.js代码；再次突出显示插入CAR10的部分：
- en: '![Images](p0189-02.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0189-02.jpg)'
- en: '![Images](p0190-01.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0'
- en: '![Images](p0191-01.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0192-01.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0192-01.jpg)'
- en: 'When you execute the insert, here is the response:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当你执行插入操作时，这是回应：
- en: '![Images](p0192-02.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0192-02.jpg)'
- en: 'After adjusting the query.js code to read the new key (changed `’CAR4’` to
    `’CAR10’`) and executing:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在调整query.js代码以读取新键（将`’CAR4’`改为`’CAR10’`）并执行：
- en: '![Images](p0192-03.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0193-01.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0193-01.jpg)'
- en: 'Then execute the invoke.js code:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 然后执行invoke.js代码：
- en: '![Images](p0193-02.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0193-02.jpg)'
- en: 'Run query.js one more time to query CAR10; here is the response:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0193-03.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0193-03.jpg)'
- en: 'Now we have stood up the blockchain, read from it, and written to it. The only
    thing left to do is to shut down the docker instance by issuing the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了区块链，从中读取和写入。剩下要做的就是通过发出以下命令来关闭docker实例：
- en: '![Images](p0193-04.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](p0194-01.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0195-01.jpg)'
- en: This concludes the Hyperledger Fabric tutorial.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了超级账本Fabric教程。
- en: Hyperledger Iroha
  id: totrans-157
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '![Images](f0194-01a.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0185-02.jpg)'
- en: 'Websites:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：
- en: '[https://github.com/hyperledger/iroha](https://github.com/hyperledger/iroha)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '[https://www.hyperledger.org/projects/iroha](https://www.hyperledger.org/projects/iroha)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: Iroha was contributed to Hyperledger by the Japanese fintech company Soramitsu.
    It is a business blockchain framework designed to be simple and easy to incorporate
    into infrastructural projects requiring distributed ledger technology.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 樱花科技（Soramitsu）是一家日本的金融科技公司，它为超级账本（Hyperledger）贡献了Iroha。Iroha是一个为基础设施项目设计的简单易集成的业务区块链框架，这些项目需要分布式账本技术。
- en: 'Some key features are:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关键特性包括：
- en: •   Creation and management of complex assets, including currencies, rights,
    serial numbers, patents, etc.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: •   Management and permission of user accounts (read and write), including business
    rules for transactions and queries
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: 'Iroha’s goal is to provide the following encapsulated C++ components that other
    projects can use:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Iroha的目标是提供以下封装的C++组件，供其他项目使用：
- en: •   Sumeragi consensus library (inspired by BChain, a chain-style Byzantine
    replication protocol that propagates transactions among the nodes with a chain
    topology)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: •   Ed25519 digital signature library
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: •   Ed25519数字签名库
- en: •   SHA-3 hashing library
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: •   SHA-3散列库
- en: •   Transaction serialization library
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: •   P2P broadcast library
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: •   P2P广播库
- en: •   API server library
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: •   API服务器库
- en: •   iOS, Android, and JavaScript libraries
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: •   Blockchain explorer/data visualization suite
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: Hyperledger Sawtooth
  id: totrans-175
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 超级账本Sawtooth
- en: '![Images](f0195-01.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0194-01.jpg)'
- en: 'Websites: [https://github.com/hyperledger/sawtooth-core](https://github.com/hyperledger/sawtooth-core)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](p0185-02.jpg)'
- en: '[https://www.hyperledger.org/projects/sawtooth](https://www.hyperledger.org/projects/sawtooth)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.hyperledger.org/projects/sawtooth](https://www.hyperledger.org/projects/sawtooth)'
- en: Hyperledger Sawtooth is a modular platform for building, deploying, and running
    distributed ledgers. Hyperledger Sawtooth includes a proprietary consensus algorithm,
    Proof of Elapsed Time (PoET), which targets large distributed validator populations
    with minimal resource consumption.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Sawtooth 是一个用于构建、部署和运行分布式账本的模块化平台。Hyperledger Sawtooth 包括一种专有的共识算法，证明过去时间（PoET），它针对大型分布式验证者群体，资源消耗最小。
- en: Hyperledger Tools
  id: totrans-180
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger 工具
- en: All platforms need tools and utilities, and blockchain is no different. The
    following are the current tools for the Hyperledger platform.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 所有平台都需要工具和实用程序，区块链也不例外。以下是 Hyperledger 平台当前的工具。
- en: Hyperledger Cello
  id: totrans-182
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger Cello
- en: '![Images](f0195-02.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0195-02.jpg)'
- en: 'Websites: [https://github.com/hyperledger/cello](https://github.com/hyperledger/cello)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://github.com/hyperledger/cello](https://github.com/hyperledger/cello)
- en: '[https://www.hyperledger.org/projects/cello](https://www.hyperledger.org/projects/cello)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.hyperledger.org/projects/cello](https://www.hyperledger.org/projects/cello)'
- en: 'Hyperledger Cello is a toolkit that aims to bring the on-demand “as-a-service”
    deployment model to the blockchain ecosystem. Its goal is to reduce the effort
    required for the setup, ongoing maintenance, and teardown of blockchains. Its
    highlights are:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Cello 是一个工具包，旨在将按需的“即服务”部署模型引入区块链生态系统。它的目标是减少设置、持续维护和拆除区块链所需的努力。它的亮点包括：
- en: •   Instantly provision customizable blockchains, for example, Hyperledger Fabric
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: •   即时提供定制的区块链，例如，Hyperledger Fabric
- en: •   Maintain a pool of executing blockchains on top of baremetals, VMs, Docker
    Swarm, and Kubernetes
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: •   在裸机、虚拟机、Docker Swarm 和 Kubernetes 上维护一个执行区块链的池
- en: •   Administration dashboard that provides system status and allows adjustment
    to chain numbers or scale resources
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: •   提供系统状态的管理仪表板，允许调整链数或扩展资源
- en: Hyperledger Composer
  id: totrans-190
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger Composer
- en: '![Images](f0195-03.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0195-03.jpg)'
- en: 'Websites: [https://github.com/hyperledger/composer](https://github.com/hyperledger/composer)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://github.com/hyperledger/composer](https://github.com/hyperledger/composer)
- en: '[https://www.hyperledger.org/projects/composer](https://www.hyperledger.org/projects/composer)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.hyperledger.org/projects/composer](https://www.hyperledger.org/projects/composer)'
- en: Hyperledger Composer is a collaboration tool for building blockchain business
    networks, accelerating the development of smart contracts and their deployment
    across a distributed ledger. See [Figure 8-3](ch8.xhtml#ch8fig3) for sample screen
    captures of the tool. Hyperledger Composer is an extensive, open development collaboration
    toolset and framework to make developing blockchain applications easier. Its goal
    is to accelerate producing value by making it easier to model a business network
    and then integrate a blockchain application with the existing/legacy business
    systems. It supports existing Hyperledger Fabric blockchains and supports pluggable
    consensus protocols that have been established by permissioned network members.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Composer 是一个用于构建区块链业务网络的协作工具，加速智能合约的开发和部署到分布式账本。参见图 8-3（[Figure
    8-3](ch8.xhtml#ch8fig3)）为该工具的示例屏幕截图。Hyperledger Composer 是一个广泛的开源开发协作工具集和框架，使开发区块链应用程序变得更容易。它的目标是加速产生价值，使建模业务网络变得更容易，然后将区块链应用程序与现有的/遗留的业务系统集成。它支持现有的
    Hyperledger Fabric 区块链，并支持由授权网络成员建立的可插拔共识协议。
- en: '![Images](fig8-3.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![Images](fig8-3.jpg)'
- en: '**FIGURE 8-3   Hyperledger Composer**'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 8-3   Hyperledger Composer**'
- en: Hyperledger Explorer
  id: totrans-197
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Hyperledger Explorer
- en: '![Images](f0196-01.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0196-01.jpg)'
- en: 'Websites: [https://www.hyperledger.org/projects/explorer](https://www.hyperledger.org/projects/explorer)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://www.hyperledger.org/projects/explorer](https://www.hyperledger.org/projects/explorer)
- en: '[https://github.com/hyperledger/blockchain-explorer](https://github.com/hyperledger/blockchain-explorer)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/hyperledger/blockchain-explorer](https://github.com/hyperledger/blockchain-explorer)'
- en: Hyperledger Explorer, contributed by IBM, Intel, and DTCC, can view, invoke,
    deploy, or query blocks, transactions with associated data, network information
    (e.g., name, status), chain codes and transaction families, and other relevant
    information contained in the blockchain. See [Figure 8-4](ch8.xhtml#ch8fig4) for
    sample screen capture of the tool.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Explorer，由 IBM、Intel 和 DTCC 贡献，可以查看、调用、部署或查询区块、与相关数据一起的交易、网络信息（例如，名称、状态）、链码和交易家族，以及区块链中包含的其他相关信息。参见图
    8-4（[Figure 8-4](ch8.xhtml#ch8fig4)）为该工具的示例屏幕截图。
- en: '![Images](fig8-4.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![Images](fig8-4.jpg)'
- en: '**FIGURE 8-4   Hyperledger Explorer**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 8-4   Hyperledger Explorer**'
- en: Interbit
  id: totrans-204
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Interbit
- en: '![Images](f0197-01.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0197-01.jpg)'
- en: 'Website: [http://btl.co/interbit](http://btl.co/interbit)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[http://btl.co/interbit](http://btl.co/interbit)
- en: 'Interbit is an enterprise-grade blockchain platform that enables applications
    to be built, managed, and run on a blockchain. Its key features are:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Interbit 是一个企业级区块链平台，它使应用程序能够在一个区块链上构建、管理和运行。它的关键特性是：
- en: •   **Privacy**   Ensures that data is only available to those who have permission
    to see and change it
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: •   **隐私**   确保数据只对那些有权限查看和更改数据的人可用
- en: •   **Scalability**   Provides a platform that can scale to hundreds of thousands
    of transactions per second
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: •   **可扩展性**   提供一个可以扩展到每秒数十万笔交易的平台
- en: •   **Portability**   The first blockchain platform developed that is able to
    run full nodes on lightweight IoT devices
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: •   **便携性**   第一个能够在轻量级 IoT 设备上运行完整节点的区块链平台
- en: Monax
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Monax
- en: '![Images](f0197-02.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0197-02.jpg)'
- en: 'Website: [https://monax.io](https://monax.io)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://monax.io](https://monax.io)
- en: Monax is a permissionable smart contract machine. Released in December 2014,
    Monax provides a modular blockchain client with a permissioned smart contract
    interpreter built in part to the specification of the Ethereum Virtual Machine
    (EVM). In early 2017, blockchain startup Monax announced they were joining Hyperledger.
    It is the first code base with an EVM joining the consortium. Swift, an interbank
    transfer platform, has experimented with the Monax platform as part of its project
    to look at integrating blockchain into its payments platform. Let’s walk through
    a Monax tutorial.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Monax 是一个可授权的智能合约平台。发布于2014年12月，Monax 提供了一个模块化的区块链客户端，其中内置了一个部分遵循以太坊虚拟机（EVM）规格的受许可智能合约解释器。2017年初，区块链初创公司
    Monax 宣布加入 Hyperledger。它是第一个加入联盟的基于 EVM 的代码库。Swift，一个银行间转账平台，已经尝试使用 Monax 平台作为其将区块链整合到支付平台项目的一部分。让我们来浏览一下
    Monax 教程。
- en: Monax Tutorial
  id: totrans-215
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Monax 教程
- en: One of the first things to be done for this tutorial is to establish the virtual
    environment; this can be either Docker or Vagrant. We will look at a Vagrant installation.
    The following assumes that you already have Vagrant installed and you have downloaded
    the associated monax.box file and the Monax workshop sources.zip file.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程首先要做的第一件事是建立虚拟环境；这可以是 Docker 或 Vagrant。我们将查看 Vagrant 安装。以下假设你已经安装了 Vagrant，并且你已经下载了相关的
    monax.box 文件和 Monax 研讨会源代码.zip 文件。
- en: 'The first step is to register the Monax virtual machine:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是注册 Monax 虚拟机：
- en: '![Images](p0198-01.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0198-01.jpg)'
- en: 'Then change directory to the workshop material and initialize the `vagrant`
    instance:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 然后切换到教程材料目录并初始化 `vagrant` 实例：
- en: '![Images](p0198-02.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0198-02.jpg)'
- en: 'Then start up the instance:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 然后启动实例：
- en: '![Images](p0198-03.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0198-03.jpg)'
- en: If you get the above error, it means you haven’t installed VirtualBox. No big
    deal, just go ahead and download and install it and try starting up the instance
    again.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遇到了上面的错误，这意味着你还没有安装 VirtualBox。没关系，只需去下载并安装它，然后再次尝试启动实例。
- en: '![Images](p0199-01.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0199-01.jpg)'
- en: 'The final part of the setup stage for the tutorial is to secure shell into
    it:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 教程设置阶段的最后一步是使用安全壳进入它：
- en: '![Images](p0199-02.jpg)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0199-02.jpg)'
- en: Note that the virtual machine login for the secure shell is `contrib-jessie`,
    the login of the person who originally created the virtual instance.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，安全壳虚拟机登录为 `contrib-jessie`，这是创建虚拟实例的人的登录名。
- en: '**Make a Chain Configuration**   With the Monax virtual machine setup completed,
    you can now begin the process of making a chain configuration. This process creates
    all of the necessary files for a private blockchain within the Monax platform.
    The following is the help text for the chain’s `make` command:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建链配置**   完成 Monax 虚拟机设置后，你现在可以开始制作链配置的过程。这个过程在 Monax 平台上创建了一个私有区块链的所有必要文件。以下是链的
    `make` 命令的帮助文本：'
- en: '![Images](p0200-01.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0200-01.jpg)'
- en: '![Images](p0200-02.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0200-02.jpg)'
- en: '![Images](p0201-01.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0201-01.jpg)'
- en: 'In the following command, we make a chain configuration with one full node
    and three participants:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下命令中，我们使用一个完整节点和三个参与者创建一个链配置：
- en: '![Images](p0201-02.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0201-02.jpg)'
- en: 'Start the workshop chain:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 启动研讨会链：
- en: '![Images](p0202-01.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0202-01.jpg)'
- en: 'Copy the user keys and import them into the development keys server:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 复制用户密钥并将它们导入到开发密钥服务器中：
- en: '![Images](p0202-02.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0202-02.jpg)'
- en: Note that the import step may take a few minutes.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，导入步骤可能需要几分钟。
- en: '**Tutorial: Phases**   The next steps are the main deployment and test phases.
    It begins with Phase 1, which is a job that does the following:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**教程：阶段** 接下来的步骤是主要部署和测试阶段。它从第一阶段开始，这个阶段是一个执行以下操作的作业：'
- en: •   Deploys the course registry (a Solidity smart contract)
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '- 部署课程注册表（一个Solidity智能合约）'
- en: •   Registers a participant
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '- 注册参与者'
- en: •   Gets the number of participants registered
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取注册的参与者数量'
- en: •   Verifies that the number of course participants is 1
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证课程参与人数为1'
- en: 'Here are the above steps expressed in the epm.yaml file:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在epm.yaml文件中表达的上述步骤：
- en: '![Images](p0202-03.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0202-03.jpg)'
- en: '![Images](p0203-01.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0203-01.jpg)'
- en: 'To execute the above work and view the output for Phase 1:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述工作并查看第一阶段的输出：
- en: '![Images](p0203-02.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0203-02.jpg)'
- en: 'The following listing shows the contents of the Course Registry smart contract
    being deployed (CourseRegistry.sol file):'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的列表显示了课程注册表智能合约被部署的内容（CourseRegistry.sol文件）：
- en: '![Images](p0203-03.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0203-03.jpg)'
- en: '![Images](p0204-01.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0204-01.jpg)'
- en: 'The next step in the tutorial, Phase 2, is to run a job that does the following:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 教程下一步，第二阶段，是运行一个作业，执行以下操作：
- en: •   Deploys the course manager (another Solidity smart contract)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '- 部署课程管理器（另一个Solidity智能合约）'
- en: •   Gets a handle on the course manager
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取课程管理器的句柄'
- en: •   Registers a participant
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '- 注册参与者'
- en: •   Gets the number of participants registered
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取注册的参与者数量'
- en: •   Verifies that the number of course participants is 1
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证课程参与人数为1'
- en: 'Here are the above steps expressed in the epm.yaml file:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在epm.yaml文件中表达的上述步骤：
- en: '![Images](p0204-02.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0204-02.jpg)'
- en: '![Images](p0205-01.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0205-01.jpg)'
- en: 'To execute the above work and view the output:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述工作并查看输出：
- en: '![Images](p0205-02.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0205-02.jpg)'
- en: 'The following listing shows the contents of the course manager smart contract
    being deployed (CourseManager.sol file):'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的列表显示了课程管理智能合约被部署的内容（CourseManager.sol文件）：
- en: '![Images](p0206-01.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0206-01.jpg)'
- en: 'The following listing shows the contents of the course registry smart contract
    being deployed (CourseRegistry.sol file):'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的列表显示了课程注册表智能合约被部署的内容（CourseRegistry.sol文件）：
- en: '![Images](p0206-02.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0206-02.jpg)'
- en: 'The following listing shows the contents of the default course registry smart
    contract being deployed (DefaultCourseRegistry.sol file):'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的列表显示了默认课程注册表智能合约被部署的内容（DefaultCourseRegistry.sol文件）：
- en: '![Images](p0206-03.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0206-03.jpg)'
- en: '![Images](p0207-01.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0207-01.jpg)'
- en: 'Phase 3 is to run a job that does the following:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 第三阶段是运行一个作业，执行以下操作：
- en: •   Deploys the course manager (Solidity smart contract)
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '- 部署课程管理器（Solidity智能合约）'
- en: •   Gets a handle on the course manager
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取课程管理器的句柄'
- en: •   Registers a participant (that fails)
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '- 注册参与者（失败）'
- en: •   Gets the number of participants registered
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取注册的参与者数量'
- en: •   Verifies that the number of course participants is 0
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证课程参与人数为0'
- en: •   Registers a participant (that succeeds)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '- 注册参与者（成功）'
- en: •   Gets the number of participants registered
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取注册的参与者数量'
- en: •   Verifies that the number of course participants is 1
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证课程参与人数为1'
- en: 'Here are the above steps expressed in the epm.yaml file:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在epm.yaml文件中表达的上述步骤：
- en: '![Images](p0207-02.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0207-02.jpg)'
- en: '![Images](p0208-01.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0208-01.jpg)'
- en: 'To execute the above work and view the output:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述工作并查看输出：
- en: '![Images](p0208-02.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0208-02.jpg)'
- en: '![Images](p0209-01.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0209-01.jpg)'
- en: 'Phase 4 is a job that does the following:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 第四阶段是一个执行以下操作的作业：
- en: •   Deploys the courses library (Solidity smart contract)
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '- 部署课程库（Solidity智能合约）'
- en: •   Deploys the course manager (link to the course library)
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '- 部署课程管理器（链接到课程库）'
- en: •   Gets a handle on the course manager
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取课程管理器的句柄'
- en: •   Adds a course (Solidity 101)
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '- 添加课程（Solidity 101）'
- en: •   Gets the number of courses available
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取可用的课程数量'
- en: •   Verifies that the number of courses available is 1
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证可用的课程数量为1'
- en: •   Registers a participant for the available course (Solidity 101)
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '- 注册参加可用的课程（Solidity 101）'
- en: •   Gets the number of participants registered
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '- 获取注册的参与者数量'
- en: •   Verifies that the number of course participants is 1
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '- 验证课程参与人数为1'
- en: 'Here are the above steps expressed in the epm.yaml file:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在epm.yaml文件中表达的上述步骤：
- en: '![Images](p0210-01.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0210-01.jpg)'
- en: '![Images](p0211-01.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0211-01.jpg)'
- en: 'To execute the above work and view the output:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述工作并查看输出：
- en: '![Images](p0211-02.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0211-02.jpg)'
- en: '![Images](p0212-01.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0212-01.jpg)'
- en: 'That is the end of the tutorial. Now comes the teardown, which isn’t documented.
    In order to tear down the whole virtual environment, you will first exit the secure
    shell, if you haven’t already done so:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 教程到此结束。现在进入拆卸环节，这一部分没有文档。为了彻底拆卸整个虚拟环境，您首先需要退出安全终端，如果您还没有这么做的话：
- en: '![Images](p0213-01.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0213-01.jpg)'
- en: 'Then you can start the teardown process as follows:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您可以按照以下步骤开始拆卸过程：
- en: '![Images](p0213-02.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![Images](p0213-02.jpg)'
- en: The above tutorial is a brief introduction to the Monax offering. It demonstrated
    defining and starting up a chain, deploying smart contracts written in Solidity,
    and then calling functions on the smart contracts.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 上述教程是对 Monax 产品的简要介绍。它展示了定义和启动一个链，部署用 Solidity 编写的智能合约，然后调用智能合约上的函数。
- en: MultiChain
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: MultiChain
- en: '![Images](f0213-01.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0213-01.jpg)'
- en: 'Websites:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：
- en: '[https://www.multichain.com](https://www.multichain.com)'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.multichain.com](https://www.multichain.com)'
- en: '[https://github.com/MultiChain/multichain](https://github.com/MultiChain/multichain)'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/MultiChain/multichain](https://github.com/MultiChain/multichain)'
- en: 'MultiChain is an open-source platform for private chains based on Bitcoin’s
    blockchain. Its key features are:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: MultiChain 是一个基于比特币区块链的开源私有链平台。其关键特性包括：
- en: •   **Managed permissions**   Control over who can connect; send and receive
    transactions; create assets, streams, and blocks
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: •   受管理的权限**   控制谁可以连接；发送和接收交易；创建资产、数据流和区块
- en: •   **Rapid deployment**   Two steps to create a new blockchain and three to
    connect to an existing one
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: •   快速部署**   创建新区块链需要两步，连接现有区块链需要三步
- en: •   **Unlimited assets**   Tracked and verified at the network level
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: •   无限制的资产**   在网络层面进行跟踪和验证
- en: •   **Data streams**   Allow the creation of multiple key-value, time series,
    or identity databases on a blockchain
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: •   数据流**   允许在区块链上创建多个键值、时间序列或身份数据库
- en: MultiChain provides maximal compatibility with the Bitcoin ecosystem, which
    includes the Bitcoin Core APIs/runtime parameters, the peer-to-peer protocol,
    and its transaction/block formats.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: MultiChain 为比特币生态系统提供最大兼容性，包括比特币核心 API/运行时参数、点对点协议及其交易/区块格式。
- en: Openchain
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Openchain
- en: '![Images](f0214-01.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0214-01.jpg)'
- en: 'Websites:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：
- en: '[https://www.openchain.org](https://www.openchain.org)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.openchain.org](https://www.openchain.org)'
- en: '[https://github.com/openchain](https://github.com/openchain)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/openchain](https://github.com/openchain)'
- en: Openchain is an open-source distributed ledger platform for issuing and managing
    digital assets. The administrator of an Openchain instance defines the rules of
    the ledger, then the permissioned end users can exchange value on the ledger according
    to its rules. Each transaction on the ledger is digitally signed.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: Openchain 是一个开源的分布式账本平台，用于发行和管理数字资产。Openchain 实例的管理员定义账本的规则，然后授权的最终用户可以根据这些规则在账本上进行价值交换。账本上的每一笔交易都是数字签名的。
- en: 'Openchain is a generic register of asset ownership. Some example use cases
    are:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: Openchain 是一个资产所有权的通用注册表。一些示例用例包括：
- en: •   Securities, commodities, currencies
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 证券、商品、货币
- en: •   Ownership titles (land, real estate, music or software licensing)
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: •   所有权证明（土地、房地产、音乐或软件许可）
- en: •   Reward, gift, and loyalty cards
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 奖励、礼品和忠诚度卡片
- en: Quorum
  id: totrans-327
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 权益证明（Quorum）
- en: '![Images](f0214-02.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0214-02.jpg)'
- en: 'Websites: [https://github.com/jpmorganchase/quorum](https://github.com/jpmorganchase/quorum)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[https://github.com/jpmorganchase/quorum](https://github.com/jpmorganchase/quorum)
- en: '[https://www.jpmorgan.com/country/US/EN/Quorum](https://www.jpmorgan.com/country/US/EN/Quorum)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.jpmorgan.com/country/US/EN/Quorum](https://www.jpmorgan.com/country/US/EN/Quorum)'
- en: Quorum an open-source distributed ledger platform based on the official Go implementation
    of Ethereum. It is designed to support applications that require identity and
    (high-speed/throughput) performance of private transactions within a permissioned
    group of known participants. One of the design goals of Quorum is to reuse as
    much existing Ethereum technology as possible and to keep in sync with future
    versions of the public Ethereum code base.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: Quorum 是一个基于以太坊官方 Go 实现的开源分布式账本平台。它旨在支持需要身份验证以及在已知参与者权限组内进行高速/吞吐量性能的私人交易的应用程序。Quorum
    的一个设计目标是尽可能重用现有的以太坊技术，并与公共以太坊代码库的未来版本保持同步。
- en: Quorum also comes with Cakeshop, which is a graphical user interface for working
    with Quorum networks, smart contracts, and APIs. The Quorum consensus mechanism
    is based on majority voting, which results in faster blocktimes, transaction finality,
    and on-demand block creation.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: Quorum 还提供 Cakeshop，这是一个用于与 Quorum 网络、智能合约和 API 工作的图形用户界面。Quorum 共识机制基于多数投票，这导致更快的区块时间、交易最终性和按需创建区块。
- en: Quorum uses cryptography to shield data from those who are not a party to the
    transaction. Quorum is a single shared blockchain and a combination of changes
    to Ethereum along with smart contracts to segment the private data. The Go-Ethereum
    code base changes are to the block proposal and block validation processes. For
    block validation, all nodes validate public transactions, and they also validate
    private transactions that they are party to when executing the contract code associated
    with the transactions.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Quorum 使用密码学保护数据不被非交易方访问。Quorum 是一个单一共享的区块链和以太坊更改的组合，以及智能合约来分割私有数据。Go-Ethereum
    代码库的更改是对区块提议和区块验证过程的更改。对于区块验证，所有节点验证公共交易，当执行与交易相关的合同代码时，它们还验证自己参与的私有交易。
- en: Stellar
  id: totrans-334
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 恒星
- en: '![Images](f0215-01.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0215-01.jpg)'
- en: 'Website: [https://www.stellar.org](https://www.stellar.org)'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 官网：[https://www.stellar.org](https://www.stellar.org)
- en: Stellar is an open-source, distributed payments infrastructure that connects
    banks, payment
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 恒星是一个开源的分布式支付基础设施，连接银行、支付
- en: 'systems, and people. It enables the building of mobile wallets, banking tools,
    and smart devices. The servers in the chain communicate and sync with each other
    to ensure that transactions are valid and get applied to the ledger. Stellar uses
    its own form of consensus called Stellar Consensus Protocol (SCP). Its key properties
    are:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 系统和人。它支持构建移动钱包、银行工具和智能设备。链中的服务器相互通信并同步，以确保交易是有效的并且被记录在账本上。恒星网络使用自己的共识机制，称为恒星共识协议（SCP）。它的关键特性包括：
- en: •   Low latency.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: •   低延迟。
- en: •   Digital signatures and hash families.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: •   数字签名和哈希家族。
- en: •   Decentralized control where anyone is able to participate and no central
    authority dictates whose approval is required for consensus.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: •   去中心化控制，任何人都可以参与，没有中心权威决定谁的支持是达成共识所必需的。
- en: •   Flexible trust. Users have the freedom to trust any combination of parties
    they see fit. For example, a small nonprofit may play a key role in keeping much
    larger institutions honest.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: •   灵活的信任。用户有自由信任任何他们认为合适的组合。例如，一个小型非营利组织可能在保持更大机构诚实方面发挥关键作用。
- en: Symbiont Assembly
  id: totrans-343
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 生命之树汇编
- en: '![Images](f0215-02.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![Images](f0215-02.jpg)'
- en: 'Website: [https://symbiont.io/technology/introducing-symbiont-assembly](https://symbiont.io/technology/introducing-symbiont-assembly)'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 官网：[https://symbiont.io/technology/introducing-symbiont-assembly](https://symbiont.io/technology/introducing-symbiont-assembly)
- en: Symbiont Assembly is an immutable (or “append-only”) database that provides
    a single, global ledger whose transaction history is replicated out to all nodes
    in the network. It is a permissioned ledger, where each user signs their transactions
    so that their identity can be verified by all participants on the network.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 生命之树汇编是一个不可变的（或“只追加”）数据库，提供了一个单一的全球账本，其交易历史被复制到网络中的所有节点。它是一个需要权限的账本，每个用户签署他们的交易，以便他们的身份可以被网络上的所有参与者验证。
- en: Symbiont Assembly uses a proprietary Byzantine fault-tolerant consensus protocol
    called BFT-SMaRt, which was designed with simplicity and modularity in mind, and
    has improved performance over public blockchain consensus protocols.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 生命之树汇编使用一种名为 BFT-SMaRt 的专有拜占庭容错共识协议，该协议设计时考虑了简单性和模块化，并且比公共区块链共识协议有更好的性能。
- en: Summary
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: There are many options for permissioned private blockchains, and the list is
    likely to grow. In many cases, government/industry regulation dictates that private
    control is needed. That being said, the freedom, neutrality, and openness that
    started Bitcoin on the public blockchain are things to keep in mind. The focus
    of decentralizing control and consensus on the public platform is clearly something
    to think about. There is a great deal of chatter and concern around privacy, identity,
    speed, and cost of the public blockchain solutions. It is important to note that
    by creating privately administered smart contracts on public blockchains, or cross-chain
    exchange layers that sit in between public and private blockchains, it is possible
    to deliver some degree of the properties of private blockchains on the public
    platforms. Time will tell if these types of capabilities and properties ever get
    built into the public blockchain.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 对于受许可的私有区块链，有许多选择，而且这个列表可能会继续增长。在许多情况下，政府/行业规定需要私有控制。话说回来，比特币在公有区块链上启动时的自由、中立和开放是一个需要考虑的事情。在公共平台上分散控制和共识的关注点显然是值得思考的。围绕隐私、身份、速度和公有区块链解决方案的成本，有很多讨论和关注。需要注意的是，通过在公有区块链上创建私有管理的智能合约，或者在公有和私有区块链之间的跨链交换层，可以在公共平台上提供私有区块链的一定属性。时间将告诉我们这些能力和属性是否会被构建到公有区块链中。
