- en: '2.'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '2.'
- en: THE THEORY
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 理论
- en: Consensus Creates Coded Trust
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 共识创造编码信任
- en: When I went back home on Spring Festival holiday last year, as a “festival routine,”
    I was overwhelmed by all kinds of questions from my curious elder relatives. For
    example, What are you working on? When are you going to get married? How much
    can you earn every month? Usually, I can satisfy them with good answers, but this
    time, things were a little bit different. When I told them that I worked in a
    Blockchain technology company, 80 percent of them continued to ask, “what is Blockchain?”
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当我去年春节假期回家时，作为“节日惯例”，我被好奇的亲戚们问了各种问题。例如，你在做什么工作？你什么时候结婚？你每个月能赚多少钱？通常，我可以给他们满意的答案，但这次有点不同。当我告诉他们我在一家区块链技术公司工作时，80%的人继续问：“区块链是什么？”
- en: I attempted to quote the definition of Blockchain on Baidu or Google and tried
    to explain to them the cool things we were doing with Blockchain. However, they
    responded with a more curious and confused facial expression. “Why can’t you put
    it more simply?”
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我试图引用百度或谷歌上的区块链定义，并试图向他们解释我们用区块链做的酷事。然而，他们回应的是更加好奇和困惑的表情。“你为什么不能更简单地说？”
- en: 'Then I realized that ordinary people can’t comprehend the professional and
    rigorous definition on Baidu or in academic journals. I turned to Blog and Zhihu
    (the Chinese Quora) to try to find a simplified explanation. Among many articles
    on this topic, two interesting ones attracted my attention: one is the most-liked
    response under the hot topic “how to explain Blockchain to your stupid roommate”;
    the other is “Consensus on Blockchain,” written by Zhang Tongxie on Sina’s blog
    channel. In the following part of this book, I quote some of their opinions and
    attempt to adopt their way of explaining—by telling stories—to elaborate on the
    definition of Blockchain.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我意识到普通人无法理解百度或学术期刊中的专业严谨定义。我转向博客和知乎（中国的Quora）试图找到一个简化的解释。关于这个话题的许多文章中，有两篇吸引了我的注意：一篇是在热门话题“如何向你的笨室友解释区块链”下最受欢迎的回答；另一篇是张同写在新浪博客频道的“区块链共识”。在这本书的以下部分，我引用了他们的观点，并尝试采用他们解释的方式——通过讲故事——来阐述区块链的定义。
- en: WHAT IS BLOCKCHAIN?
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是区块链？
- en: Blockchain and Bikers
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链与骑手
- en: In 2006, financial giants like JP Morgan, Citigroup, Goldman Sachs, and NASDAQ
    all expressed their keen interest in Blockchain technology. What is this Blockchain
    technology (a.k.a distributed ledger)? We shall start with another story.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2006年，金融巨头如摩根大通、花旗集团、高盛和纳斯达克都对区块链技术表现出了浓厚的兴趣。什么是区块链技术（又名分布式账本）？我们从另一个故事开始。
- en: '![images](../Images/26-1.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/26-1.jpg)'
- en: 'Fig. 2-1: Bikers on Wall Street.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-1：华尔街骑手。
- en: Before NASDAQ was founded, people use bikes laden with bonds around Wall Street
    for bond clearing and settlement. As businesses grew, bikes could not handle the
    increasing transactions. In the 1960s, Wall Street traded only four days, each
    day, for four hours, to help settlement keep up with trade volumes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在纳斯达克成立之前，人们骑着装满债券的自行车在华尔街进行债券清算和结算。随着商业的发展，自行车无法处理日益增长的交易量。在20世纪60年代，华尔街的交易只在工作日的四天内进行，每天四小时，以帮助结算跟上交易量。
- en: This practice could not continue. Bikes can never outperform computers. In 1971,
    people gathered together searching for solutions. DTC clearing system was then
    proposed. Under this solution, all transactions should be done with brokers included
    in this system, which is still adopted by NASDAQ. Obviously, this solution just
    replaced the bike with the “car.” In many TV series, the country or the family
    is often trapped in chaos due to the death of the emperor or the head of the family.
    The cause of the plots mentioned above is that centralization is not enduring.
    When the number of transactions and brokers reaches a certain level, the system
    might be paralyzed or even crash.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这种做法无法继续。自行车永远无法超越计算机。1971年，人们聚集在一起寻找解决方案。当时提出了DTC清算系统。在这个解决方案下，所有交易都应该包括在这个系统中的经纪人进行，纳斯达克仍然采用这种方式。显然，这个解决方案只是用“汽车”取代了自行车。在许多电视剧中，国家或家庭经常因为皇帝或家族头的死亡而陷入混乱。上述剧情的原因是集中化是不可持续的。当交易量和经纪人达到一定水平时，系统可能会瘫痪甚至崩溃。
- en: '![images](../Images/27-1.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/27-1.jpg)'
- en: 'Fig. 2-2: Centralized DTC clearing system.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-2：集中式DTC清算系统。
- en: 'Blockchain is a distrusted ledger where every node displays and maintains the
    central ledger. The ledger cannot be tampered with unless someone controlled over
    half of the nodes. Take a simple example: You keep your family ledger and manage
    your parents’ salary. If you want to buy some snacks, the ledger loophole is dozens
    of yuan. If you want to buy a cell phone, the loophole is thousands of yuan. This
    is just an example; I believe many of us in childhood desired pocket money from
    parents.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个不信任的账本，每个节点展示和维护着中心账本。除非有人控制了超过一半的节点，否则账本无法被篡改。举个简单的例子：你保管家庭账本，管理父母的工资。如果你想买一些零食，账本的漏洞是几十元。如果你想买一个手机，账本的漏洞就是上千元。这只是个例子；我相信我们很多人小时候都渴望过父母给的零花钱。
- en: '![images](../Images/28-1.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/28-1.jpg)'
- en: 'Fig. 2-3: Centralized family ledger.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-3：中心化的家庭账本。
- en: With a distributed ledger, the above scenario will never come true. Everyone
    in the family participates in bookkeeping, and everyone can check the central
    ledger. No one can falsify the ledger. There is no money for your dad’s cigarettes
    and your snacks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式账本技术下，上述场景永远不会发生。家庭成员人人参与记账，人人可以查阅中心账本。没有人能篡改账本。所以你爸爸的烟钱和你的零食钱是足够的。
- en: Blockchain, in essence, is a decentralized and distributed ledger. It involves
    a set of cryptography-based data blocks. Each block contains many pieces of information
    confirmed by Bitcoin’s transaction network.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，区块链是一个去中心化和分布式的账本。它涉及一套基于密码学的数据块。每个数据块包含许多由比特币交易网络确认的信息片段。
- en: '![images](../Images/29-1.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/29-1.jpg)'
- en: 'Fig. 2-4: Distributed family ledger.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-4：分布式家庭账本。
- en: Centralization and Decentralization
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 集中化和去中心化
- en: 'As we mentioned above, Blockchain is the decentralized distributed ledger.
    What does “decentralized” mean? First, let’s picture in mind this situation: what
    will you do if you are buying a book online?'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们上面提到的，区块链是一个去中心化的分布式账本。“去中心化”是什么意思？首先，让我们想象一下这种情况：如果你在网上买书，你会做什么？
- en: 'Step 1: Place an order and transfer a sum of money to Alipay.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 1：下单并把钱转到支付宝。
- en: 'Step 2: Alipay confirms receipt of the money and informs the vendor to deliver
    the book you ordered.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2：支付宝确认收到钱后，通知卖家发货你订购的书。
- en: 'Step 3: The vendor receives the notification from Alipay and starts the delivery
    process.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 3：卖家收到支付宝的通知后开始发货流程。
- en: 'Step 4: You receive the book and confirm receipt.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 4：你收到书并确认收货。
- en: 'Step 5: Alipay receives your confirmation and transfers the money you paid
    for the book to the vendor.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 5：支付宝收到你的确认后，会将你支付买书的款项转给卖家。
- en: '![images](../Images/30-1.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/30-1.jpg)'
- en: 'Fig. 2-5: Decentralized transaction process.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-5：去中心化交易流程。
- en: In the illustration above we can see that, even though the transaction happens
    between you and the vendor, Alipay is the true center of it. Therefore, the whole
    transaction process could fail if something goes wrong with Alipay, such as a
    meteor crashing all the servers of Alipay, or a new round of global economic crises
    decimating Alibaba Group. Neither you nor the vendor could prove the transaction,
    which will lead to a dead end.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的说明中，我们可以看出，尽管交易是发生在你和卖家之间，但支付宝才是真正的中心。因此，如果支付宝出问题，比如支付宝的服务器被流星撞击，或者阿里巴巴集团因全球经济危机而破产，整个交易过程都可能失败。你和卖家都无法证明交易，这将导致死路一条。
- en: '![images](../Images/30-2.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/30-2.jpg)'
- en: 'Fig. 2-6: Destruction of the central node leads to the failure of the whole
    transaction.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-6：中心节点损坏导致整个交易失败。
- en: A Virtual City Running as Blockchain
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基于区块链运行的虚拟城市
- en: 'To illustrate how Blockchain works clearly, we may as well propose an extreme
    situation based on the simplification of the decentralized and distributed construction.
    Assume that we have a decentralized city with five residents—we name them A, B,
    C, D, and E. Here is what they do when they want to borrow money from others:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清晰说明区块链如何工作，我们不妨提出一个基于去中心化和分布式结构的简化情况。假设我们有一个有五个居民的去中心化城市——我们称他们为 A、B、C、D
    和 E。当他们想要向别人借钱时，他们会这样做：
- en: '![images](../Images/31-1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/31-1.jpg)'
- en: 'Fig. 2-7: Bookkeeping of a decentralized city.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-7：去中心化城市的账本。
- en: Suppose resident B borrows one yuan from resident A, and A informs other residents
    by shouting, “I am A, and I just lent one yuan to B.” Subsequently, B will say
    loudly, “I am B, I just borrowed one yuan from A.” When other residents—C, D,
    and E—hear what they say, they write down on their ledgers, “dd/mm/yy, A lends
    one yuan to B.”
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 假设居民B从居民A那里借了一元钱，A通过大喊：“我是A，我刚刚借给B一元钱。”来告知其他居民。随后，B会大声说：“我是B，我刚刚从A那里借了一元钱。”当其他居民——C、D和E——听到他们的话时，他们会在自己的账本上写下：“dd/mm/yy，A借给B一元钱。”
- en: '![images](../Images/32-1.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/32-1.jpg)'
- en: 'Fig. 2-8: The impossibility of tampering with the distributed ledger.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-8：篡改分布式账本的不可能性。
- en: In this extremely simplified model of a small city with only five residents,
    a distributed system is actually established in the city where no bank or Alipay
    is needed, which means that it works without a trusted relationship or credible
    organization. When every individual in this distributed system keeps their own
    ledger, it will be impossible to tamper with the records. Suppose B changes his
    mind and denies that he has borrowed one yuan from A? Then C, D, and E will testify
    on behalf of A using the same record on their ledgers—“dd/mm/yy, A lends one yuan
    to B.”
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个极其简化的、仅有五名居民的微型城市模型中，实际上建立了一个分布式系统，该系统中无需银行或支付宝，这意味着它可以在没有信任关系或可靠组织的情况下运行。当这个分布式系统中的每个人都保持自己的账本时，篡改记录将是不可能的。假设B改变主意，否认他向A借了一元钱？那么C、D和E将会在他们的账本上使用相同的记录为A作证——“dd/mm/yy，A借给B一元钱。”
- en: Whether you noticed it or not, in this case, the money transferred from A to
    B doesn’t really matter, because it can be replaced by any other concept of value
    that gets admitted by all people within the community. For example, resident A
    says, “I have created a Balala engergy,” and when others hear that, they will
    record that A owns a Balala energy, even though they do not even know what the
    hell a Balala energy is. What next? Resident A can then say that “I transferred
    one piece of Balala energy to B.” When all residents in the city, including B,
    C, D, and E validate the transaction, then this transaction will become officially
    valid.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是否注意到，在这种情况下，从A转移到B的钱并不重要，因为它可以被社区内所有人认可的任何其他价值概念所取代。例如，居民A说：“我创造了巴啦啦能量，”当其他人听到这个消息时，他们会记录下A拥有巴啦啦能量，尽管他们甚至不知道巴啦啦能量究竟是什么。接下来怎么办？居民A可以然后说：“我把一块巴啦啦能量转移给了B。”当城市中的所有居民，包括B、C、D和E验证这笔交易时，这笔交易将正式有效。
- en: '![images](../Images/33-1.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/33-1.jpg)'
- en: 'Fig. 2-9: The circulation of Balala energy.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-9：巴啦啦能量的流通。
- en: A Few Problems in Small Cities
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 小城市中的几个问题
- en: 'Certainly, the Blockchain world will not be that simple. It also has other
    rules and restrictions. Let’s first address the following issues:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，区块链世界并不会那么简单。它还有其他规则和限制。我们先来解决以下问题：
- en: 'Problem One: Why bother keeping a record?'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 问题一：为什么还要记录？
- en: 'Just because you shout to the sky, will others be obligated to help you keep
    a record? Does their time cost nothing? Do their notebooks cost nothing? So, to
    fairly ask others to help me with bookkeeping, I added a new rule. I decided to
    reward the first person who heard me shout and recorded it in his notebook. The
    reward mechanism is also straightforward: the first one who heard me shout and
    recorded it can get a Balala energy reward. The Balala energy is not given to
    you; instead, it is the remuneration of your labor, just like earning money by
    working. You help me with bookkeeping, and the entire system will reward you.
    The requirements are as follows: First of all, you have to hear my shout and take
    it down before anyone else; after recording, you must immediately inform the whole
    city that you have finished recording this sentence and that neither you nor they
    have any use in rerecording it. This way, others will not try to profit by recording
    it themselves. In the meantime, you have to do one more thing, namely, adding
    a unique number to your record before calling it out along with the number, which
    enables the next person to continue with this record and the unique number.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你向天空呼喊，别人就有义务帮你记录吗？他们的时间不花钱？他们的笔记本不花钱？所以，为了公平地请求别人帮我记账，我增加了一条新规定。我决定奖励第一个听到我呼喊并在他的笔记本上记录的人。奖励机制也很简单：第一个听到我呼喊并记录下来的人可以获得巴啦啦能量奖励。巴啦啦能量不是给你的；而是你劳动的报酬，就像工作赚钱一样。你帮我记账，整个系统会奖励你。要求如下：首先，你必须在我其他人之前听到我的呼喊并记录下来；记录后，你必须立即通知整个城市你已经完成了记录这句话，而且你和他们都没有重新记录的用处。这样，其他人就不会试图通过自己记录来获利。与此同时，你必须再做一件事，即在呼喊时加上一个唯一编号，这样下一个人可以继续这个记录和唯一编号。
- en: '![images](../Images/34-1.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/34-1.jpg)'
- en: 'Fig. 2-10: The reward for bookkeeping.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-10：记账的奖励。
- en: 'When this new rule comes into operation, there must be people who, in order
    to get the Barrara energy, begin to hold their breath and listen to the shouts
    around them only to be able to be the first to take down a new record. Readers
    who know a little about the Blockchain might come up with the term “Bitcoin mining.”
    That’s right. This is a simple explanation of Bitcoin mining. On the topic of
    Bitcoin mining, a user of Zhihu named “Linglongxieseng” once mentioned a more
    vivid example in an article. The example is roughly this: when single men are
    looking for girlfriends, “national mother-in-law” would say something along the
    lines of, “I have a lot of beautiful and cute daughters who have pretty skin.
    If you can solve our troublesome problem, I will offer the WeChat number of one
    of them.”'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当这个新规则开始实施时，肯定会有为了获得巴啦啦能量而开始屏住呼吸，倾听周围呼喊的人，只为了能第一个记录新记录的人。了解一点区块链知识的读者可能会联想到“比特币挖矿”这个术语。没错。这就是比特币挖矿的简单解释。关于比特币挖矿，知乎上有一个用户名叫“凌龙睡醒”曾在一篇文章中提到一个更生动的例子。这个例子的大意是：当单身汉寻找女朋友时，“国母”会说这样的话，“我有很多美丽可爱的女儿，皮肤都很漂亮。如果你能解决我们这个麻烦的问题，我会把其中一个的微信号给你。”
- en: '![images](../Images/35-1.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/35-1.jpg)'
- en: 'Fig. 2-11: The Universal “Troublesome Problem” of the “Mother-in-law.”'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-11：“国母”的“麻烦问题”普遍存在。
- en: '![images](../Images/36-1.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/36-1.jpg)'
- en: 'Fig. 2-12: The reward for solving problems.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-12：解决问题的奖励。
- en: As a result, single men compete feverishly with one another, eager to solve
    the problem. As long as one of them solves a problem, he will immediately declare
    to the world proudly and demonstrate to everyone that the girl’s WeChat number
    is his, persuading others to give up. Although the other single men have already
    set out, they are not fast enough and therefore have no choice but to solve the
    next problem at once.[1](#Afn_1)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，单身汉们争相竞争，急于解决问题。只要他们中的一个人解决问题，他就会立刻向世界骄傲地宣称，并向所有人展示女孩的微信号是他的，说服其他人放弃。尽管其他单身汉已经出发，但他们不够快，因此不得不立刻解决下一个问题。[1](#Afn_1)
- en: At the same time, the single lucky man who successfully solved the problem does
    not need to pay one or two hundred thousand yuan to pay for a bride; instead,
    the “national mother-in-law,” conquered by his talents, would give him a vast
    fortune as a dowry, that is, the reward of Bitcoin in Bitcoin mining.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，那个成功解决问题的单身幸运儿无需支付一两万元人民币的彩礼；相反，被他才华征服的“国母”，会给他一大笔财富作为嫁妆，即比特币挖矿的比特币奖励。
- en: 'Problem Two: How to Deal With Forking?'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 问题二：如何处理分叉？
- en: We cite the description posted on Zhihu (the Chinese version of Quora) by the
    user, “Wangle-LaiW3n,” in this section. In a large city, the problem will arise
    that B and C finish their recording and both of them yell to the sky at the same
    time, “The Balala Energy number 89757 belongs to me.” However, the city is so
    large that some people claim that the Balala Energy number 89757 belongs to B,
    while others believe that it belongs to C. Nonetheless, the single Balala Energy
    number 89757 can be acquired by only one person. Therefore, how can we resolve
    the problem? Is it possible for each person to own half of the Balala Energy?
    Apparently, it is not acceptable. In this event, we will tackle this problem in
    an extremely primitive and simple way that lets the long information chain decide.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们引用知乎（Quora的中国版本）用户“Wangle-LaiW3n”发布的描述。在一个大城市中，B和C完成记录并同时向天空大喊，“编号为89757的Balala能量属于我。”然而，城市如此之大，有些人声称编号为89757的Balala能量属于B，而其他人则认为它属于C。然而，唯一的编号为89757的Balala能量只能被一个人获得。那么，我们如何解决这个问题呢？每个人能拥有Balala能量的一半吗？显然，这是不可接受的。在这种情况下，我们将以一种非常原始和简单的方式解决这个问题，让长的信息链做出决定。
- en: '![images](../Images/37-1.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/37-1.jpg)'
- en: 'Fig. 2-13: How can we deal with forking?'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-13：我们如何处理分叉？
- en: 'If there are no restrictions, the incident will develop as follows: some people
    believe that the Energy belongs to B, and they start adding to the record after
    hearing the claim. Therefore, all their subsequent work will be done on the basis
    of the fact that B owns the Balala Energy number 89757\. With the passing on of
    the information, the information chain will grow longer and longer. While for
    the other people who believe that C claims the ownership at first, the result
    is much the same.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有限制，事件将会这样发展：一些人认为能量属于B，在听到这个主张后开始记录。因此，他们所有后续的工作都是基于B拥有编号为89757的Balala能量这一事实。随着信息的传递，信息链会变得越来越长。而对于那些最初认为C主张拥有能量的人，结果也是类似的。
- en: The problem becomes exacerbated as the single entire information chain in a
    carefully numbered sequence diverts into two branches after B and C yell out their
    claim for the 89757 Balala Energy. If the problem cannot be solved immediately,
    each person will acquire his or her own version of the information, and no one
    will be able to figure out which is correct.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当B和C大喊他们对于编号为89757的Balala能量的主张后，整个单一的、精心编号的信息链会分成两个分支。如果问题不能立即解决，每个人都会拥有自己信息版本，没有人能弄清楚哪个是正确的。
- en: '![images](../Images/38-1.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/38-1.jpg)'
- en: 'Fig. 2-14: Every time, the rules for recording are extremely intricate.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-14：每次记录规则都极其复杂。
- en: To solve the problem, the city adds new rules to the Blockchain. The record
    must be written in the top grid, and the distance of 0.89757 millimeters between
    the center of the record and the upper line of the matts should be guaranteed.
    Therefore, every person has to write after determining the right place with the
    help of ruler, which is highly difficult. The record takes each person five minutes
    to finish, and the time for taking down the sentence of claim differs from each
    other. Hence, others who are writing the sentence will stop and begin another
    line that “the sentence is written by XYZ and the number of it is XXX” when someone
    else has yelled out, “I have finished. The sentence is written by XYZ.”
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，城市在区块链上增加了新规则。记录必须写在最顶部的网格中，并且记录中心与matts上缘之间的距离必须保证为0.89757毫米。因此，每个人在用尺子确定好位置后都必须写下内容，这非常困难。每个人完成记录需要五分钟，而写下索赔句子所需的时间各不相同。因此，当别人大喊“我完成了。这句话是XYZ写的。”时，正在写下句子的人会停下来，开始另一行内容：“XYZ写了这句话，编号是XXX。”
- en: 'Problem Three: Double Spending'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 问题三：双重花费
- en: Double spending refers to the phenomenon of the same digital cash being used
    twice in the same transaction.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 双重花费是指同一数字现金在同一交易中被使用两次的现象。
- en: If I yell to B and C at the same time, “I give you a Balala Energy,” what can
    I do with the Balala Energy? There is only one Balala Energy, so how can I make
    sure that the single Balala Energy is used only once in the real transaction?
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我同时对B和C大喊，“我给你一个Balala能量，”我能用这个Balala能量做什么呢？Balala能量只有一个，我怎么确保这个唯一的Balala能量只在一次真实交易中使用？
- en: 'Take Bitcoin as an example. Satoshi Nakamoto clarified in the fifth section
    of the Bitcoin White Paper that the Bitcoin network runs as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以比特币为例。中本聪在比特币白皮书第五节中明确指出比特币网络运行如下：
- en: 1.   New transactions are broadcast to the network.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   新交易被广播到网络上。
- en: 2.   Each node brings the received transaction information into a block.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   每个节点将接收到的交易信息纳入区块。
- en: 3.   Other nodes will recognize the validity of the block when, and only when,
    all the transactions involved in the block are valid and appear for the first
    time.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   只有当区块中的所有交易都是有效的并且是第一次出现时，其他节点才会认为区块是有效的。
- en: 4.   Other nodes contend that they accept the block by following the end of
    the block and creating a new block to extend the information chain, considering
    the random hash of the block as the random hash of the new block.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 4.   其他节点争辩说，他们通过跟随区块的末尾并创建一个新的区块来延伸信息链，将区块的随机哈希视为新区块的随机哈希。
- en: In other words, timestamping has been added to the transaction data of Bitcoin
    since the beginning of the transaction, with the confirmation finished when the
    transaction data are packaged into a block. After confirming for six consecutive
    times, the transaction becomes irreversible. For Bitcoin, each confirmation is
    required to “solve an intricate problem.” That is to say, every confirmation takes
    a certain amount of time.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，自从比特币交易开始以来，交易数据中就已经加入了时间戳，交易数据被包装进区块时完成确认。连续确认六次后，交易变得不可逆转。对于比特币来说，每个确认都需要“解决一个复杂问题”。也就是说，每个确认需要一定的时间。
- en: '![images](../Images/40-1.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/40-1.jpg)'
- en: 'Fig. 2-15: Irreversibility after six confirmations.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-15：六次确认后的不可逆转。
- en: In this case, when I try to reuse the fund to pay for the transaction, it is
    nearly impossible for me to realize the confirmation of two deals at the same
    time because of the long time that is required by the confirmation. And the second
    deal cannot be confirmed after the first deal is confirmed as valid. The record
    of Blockchain throughout the network can be achieved without the problem of double
    spending on the condition that an agreement is reached across the entire network.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，当我尝试重新使用资金来支付交易时，由于确认所需时间较长，几乎不可能同时实现两笔交易的确认。一旦第一笔交易被确认有效，第二笔交易就无法得到确认。在达成全网络共识的前提下，区块链网络全程记录是可以实现的，这样就不会出现双重花费的问题。
- en: '![images](../Images/41-1.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/41-1.jpg)'
- en: 'Fig. 2-16: Double spending will not happen.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-16：双重花费不会发生。
- en: HOW DOES BLOCKCHAIN WORK?
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是如何工作的？
- en: The Core Concept of Blockchain
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的核心概念
- en: Before explaining the working principles of Blockchain, let us first make a
    brief introduction to several core concepts involved in Blockchain.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在解释区块链的工作原理之前，我们先简要介绍区块链中涉及的一些核心概念。
- en: A. The Block
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: A. 区块
- en: A block, as a basic structural element of Blockchain, consists of a block header
    containing metadata, and a block body containing transaction data.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 区块作为区块链的基本结构单元，由包含元数据的区块头和包含交易数据区块体组成。
- en: 'The block header contains three sets of metadata:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头包含三组元数据：
- en: 1.   Used to connect front blocks and index hash value data from the parent
    block;
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   用于连接前区块和从父区块中索引哈希值数据；
- en: 2.   Mining difficulty, Nonce (random number, a counter used for workload proof
    algorithm), timestamp;
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   挖矿难度，Nonce（随机数，用于工作量证明算法的计数器），时间戳；
- en: 3.   Can summarize and quickly sum up Merkle root data of all transaction data
    in the check block.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   能够总结并快速计算出所有交易数据的Merkle根数据。
- en: '![images](../Images/42-1.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/42-1.jpg)'
- en: 'Fig. 2-17: The structure of a block header.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-17：区块头的结构。
- en: Every ten minutes, one block can be created in the Blockchain system, which
    includes all the transactions’ information that took place across the network
    during that time. Each block also contains the ID (identification code) of the
    previous block, which allows each block to find its previous node so that a complete
    chain of transactions is formed. Since its inception, the whole network has formed
    only one master blockchain.[2](#Afn_2)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 每隔十分钟，区块链系统可以创建一个区块，其中包括了该时间段内网络上的所有交易信息。每个区块还包含前一个区块的ID（识别码），这使得每个区块能够找到其前一个节点，从而形成一个完整的交易链。自诞生以来，整个网络只形成了一个主区块链。[2](#Afn_2)
- en: B. Hash Algorithm
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: B. 哈希算法
- en: Hash algorithm is a one-way password mechanism in the Blockchain to ensure transaction
    information is not compromised. After receiving a plaintext, Hash algorithm converts
    it into a shorter length and fixed-sizes hash data in an irreversible way.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希算法是区块链中的一种单向密码机制，用以确保交易信息不会被泄露。在接收到明文后，哈希算法将其转换成固定长度且更短的哈希数据，这个过程是不可逆的。
- en: 'It has two characteristics:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 它有两个特点：
- en: 1.   The encryption process is irreversible, which means that we cannot reverse
    the original plaintext by outputting the hash data.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   加密过程是不可逆的，这意味着我们不能通过输出哈希数据来反推出原始明文。
- en: 2.   Entering the plain text and outputting hash data correspond with each other,
    which means that any change in the input information will inevitably lead to changes
    in the final output of the hash data.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   输入明文和输出哈希数据相对应，这意味着输入信息的任何变化都将不可避免地导致哈希数据最终输出的变化。
- en: '![images](../Images/43-1.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/43-1.jpg)'
- en: 'Fig. 2-18: Two characteristics of the hash algorithm figure.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-18：哈希算法图的两个特点。
- en: In Blockchain, block encryption is usually performed using the SHA-256 (Secure
    Hash Algorithm), which has an input length of 256 bits and outputs a string of
    random hash data of 32-bytes.[3](#Afn_3)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，通常使用 SHA-256（安全哈希算法）进行块加密，该算法的输入长度为256位，输出32字节的随机哈希数据字符串。[3](#Afn_3)
- en: The Blockchain encrypts transaction information in a transaction block using
    Hash algorithms and compresses the message into a hash string of numbers and letters.
    The hash value of Blockchain can uniquely and accurately identify a block. Any
    node in Blockchain can obtain the hash value of this block through a simple hash
    calculation, and the calculated hash value does not change, which means that the
    information in the block has remained uncompromised.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链在交易块中使用哈希算法加密交易信息，并将消息压缩成一个由数字和字母组成的哈希字符串。区块链的哈希值可以唯一且准确地标识一个区块。区块链中的任何节点通过简单的哈希计算都可以获得该块的哈希值，计算出的哈希值不会改变，这意味着区块中的信息保持未泄露。
- en: '![images](../Images/44-1.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/44-1.jpg)'
- en: 'Fig. 2-19: Hash algorithm in Blockchain.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-19：区块链中的哈希算法。
- en: C. The Public Key and Private Key
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 第三章 公钥与私钥
- en: On the subject of Blockchain, we often hear the expressions public key and private
    key. These are commonly known as asymmetric encryption, which is an improvement
    over the previous symmetric encryption (using the username and password). We use
    the e-mail encryption model to briefly introduce the public key, which is for
    everyone to use. You can publish by e-mail and let others download through the
    site. In fact, the public key is used to encrypt/verify the seal. The private
    key belongs to you only, and you must be very careful to keep it, preferably with
    a password. The private key is used to decrypt/sign and is owned by the individual.[4](#Afn_4)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 关于区块链，我们经常听到公钥和私钥这些术语。它们通常被称为非对称加密，这是一种改进于之前的对称加密（如使用用户名和密码）。我们用电子邮件加密模型简要介绍公钥，它是供所有人使用的。你可以通过电子邮件发布，并通过网站让其他人下载。实际上，公钥用于加密/验证印章。私钥只属于你一个人，你必须非常小心地保管它，最好设置一个密码。私钥用于解密/签名，由个人拥有。[4](#Afn_4)
- en: '![images](../Images/45-1.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/45-1.jpg)'
- en: 'Fig. 2-20: Public and private keys in Blockchain.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-20：区块链中的公钥和私钥。
- en: In the Bitcoin system, the private key is essentially an array of 32 bytes.
    Both the public key and the address are generated based on the private key. With
    the private key, the public key and address can be generated, and the Bitcoin
    on the corresponding address can be spent. To spend via Bitcoin using a private
    key is to sign the unspent transactions to which it corresponds.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在比特币系统中，私钥本质上是一个32字节的数组。公钥和地址都基于私钥生成。有了私钥，就可以生成公钥和地址，进而可以花费相应地址上的比特币。使用私钥花费比特币就是签署对应的未花费交易。
- en: '![images](../Images/46-1.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/46-1.jpg)'
- en: 'Fig. 2-21: Using the public key and private key to complete a transaction.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-21：使用公钥和私钥完成交易。
- en: In Blockchain, the public key and the private key are used for identity identification.
    Let’s assume that there are two people in Blockchain, Tom and Jerry. If Tom wants
    to prove that he is really himself, he only needs to use the private key to sign
    the file and send it to Jerry. And then Jerry uses the public key to verify the
    signature of the file. If the verification succeeds, it proves that this file
    must be encrypted by Tom with a private key. As Tom’s private key can only be
    held by Tom, it can verify that Tom is really Tom. In the Blockchain system, the
    public key and the private key can also ensure the security of peer-to-peer information
    delivery in distributed networks. In the Blockchain information transfer, encryption
    and decryption of both public and private keys of information delivery are often
    unpaired.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，公钥和私钥用于身份验证。假设区块链中有两个人，汤姆和杰瑞。如果汤姆想要证明他真的是自己，他只需要使用私钥签名文件并发送给杰瑞。然后杰瑞使用公钥来验证文件的签名。如果验证成功，这就证明了这个文件一定是汤姆用私钥加密的。因为汤姆的私钥只能由汤姆持有，所以可以验证汤姆确实是汤姆。在区块链系统中，公钥和私钥也可以确保分布式网络中点对点信息传递的安全。在区块链信息传输中，信息传递的公钥和私钥的加密和解密通常是未配对的。
- en: For senders, the private key is used to sign the information, and the information
    receiver’s public key is used to encrypt the information. For the information
    receiver, the sender’s public key is used to verify the sender’s identity, and
    the private key is used to decrypt the encrypted message.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于发送方，私钥用于签名信息，而信息接收方的公钥用于加密信息。对于信息接收方，发送方的公钥用于验证发送方的身份，私钥用于解密加密的信息。
- en: '![images](../Images/47-1.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/47-1.jpg)'
- en: 'Fig. 2-22: Timestamp in Blockchain.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-22：区块链中的时间戳。
- en: D. The Timestamp
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: D. 时间戳
- en: The timestamp in Blockchain exists in the block from the moment the block is
    generated. It corresponds to the authentication of each transaction, proving its
    authenticity. Timestamps are written directly in Blockchain, and the blocks that
    have been generated in Blockchain cannot be tampered with, because once tampered
    with, the generated hash value changes and becomes an invalid datum. Each timestamp
    will also include the previous timestamp in its random hash. This process is repeated,
    sequentially linked, and finally produces a complete chain.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的时间戳从区块生成的那一刻就存在于区块中。它对应于每个交易的验证，证明其真实性。时间戳直接写入区块链，而区块链中已生成的区块无法被篡改，因为一旦被篡改，生成的哈希值会发生变化，成为无效的数据。每个时间戳还会在其随机哈希中包括前一个时间戳。这个过程会重复，依次链接，最终形成一个完整的链。
- en: E. Merkle Tree Structure
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: E. 默克尔树结构
- en: Blockchain uses the Merkle tree’s data structure to store the values of all
    the leaf nodes and uses that as a basis for generating a uniform hash value. Merkle
    tree leaf nodes store hash value of data information, while non-leaf nodes store
    hash value of the combination of all leaf nodes below them.[5](#Afn_5)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链使用默克尔树的数据结构来存储所有叶子节点的值，并以此为基础生成统一的哈希值。默克尔树叶子节点存储数据信息的哈希值，而非叶子节点存储下面所有叶子节点组合的哈希值。[5](#Afn_5)
- en: '![images](../Images/48-1.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/48-1.jpg)'
- en: 'Fig. 2-23: Merkle tree structure in Blockchain.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-23：区块链中的默克尔树结构。
- en: Similarly, the change of any one datum in the block will lead to the change
    of the Merkle tree structure. Merkle tree structure can significantly reduce the
    amount of data computation in the transaction information verification comparison,
    for all we have to do is to validate the uniform hash value generated by the Merkle
    tree structure.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，区块中任何一项数据的改变都会导致默克尔树结构的改变。默克尔树结构可以显著减少交易信息验证比较中的数据计算量，我们只需要验证默克尔树结构生成的统一哈希值即可。
- en: When speaking of the Bitcoin virus, we have talked about several core concepts
    and definitions of Blockchain, but how does it work? To solve this problem, we
    have to start talking about Bitcoin, at which point many people’s first reaction
    is to bring up Bitcoin virus. To approach the topic of the Bitcoin virus incident,
    we must first talk about what exactly Bitcoin is and its characteristics, describing
    what the whole world knows. Remember the fear of being dominated by Bitcoins?
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论比特币病毒时，我们已经讨论了区块链的一些核心概念和定义，但是它是如何工作的呢？为了解决这个问题，我们必须开始谈论比特币，这时很多人的第一反应就是提起比特币病毒。要接近比特币病毒事件的话题，我们必须首先谈论比特币究竟是什么以及它的特点，描述全世界都知道的东西。还记得被比特币支配的恐惧吗？
- en: On that day, when you woke up in the morning, you found an ugly red frame pop
    up on the screen. You were so excited because, finally, you did not need to write
    essays.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 那天早上，你醒来发现屏幕上弹出一个难看的红色框架。你很兴奋，因为终于不需要写论文了。
- en: '![images](../Images/49-1.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/49-1.jpg)'
- en: 'Fig. 2-24: Bitcoin virus invasion.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2-24: 比特币病毒入侵。'
- en: On May 12, 2017, a trivial incident occurred online. Documents in many schools
    and hospitals were locked up by a ransomware worm called “EternalBlue” (also known
    as WannaCry). It stated that if you want to see information, you need to pay.
    Not too much, 300 Bitcoins. At first glance, someone may think that it is only
    300, so few. Actually, the price of a Bitcoin is almost equal to 10,000 Chinese
    yuan in China, because the Bitcoin platform is under regulation in China and therefore
    cannot be withdrawn. The price in other countries is even higher. Of course, for
    individual users, it is not necessary to give so much money; after all, not everyone
    has over 300 million yuan.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 2017 年 5 月 12 日，网络上发生了一件小事。许多学校和医院的文档被一种名为“永恒之蓝”（也称为 WannaCry）的勒索软件蠕虫锁定。它声称如果你想看到信息，你需要支付。并不多，300
    个比特币。乍一看，有人可能认为只有 300 个，这么少。实际上，在中国，一个比特币的价格几乎等于 10000 元人民币，因为中国的比特币平台受到监管，因此无法提现。在其他国家的价格更高。当然，对于个人用户来说，没有必要给这么多钱；毕竟，不是每个人都有
    300 亿元人民币。
- en: '![images](../Images/50-1.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/50-1.jpg)'
- en: 'Fig. 2-25: Bitcoins are required to unlock.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2-25: 需要比特币解锁。'
- en: Hackers want everyone to pay in Bitcoins, but that is not really the problem
    with Bitcoin. Bitcoin is a coin, lying quietly aside, waking up in the morning
    to find itself in the headlines. Till May 16, 2017, more than 300,000 users in
    over 150 countries have been “persecuted.” Moreover, it is said that the “EternalBlue”
    virus has been upgraded to version 2.0, which is not limited by the domain name,
    with higher dissemination.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客希望每个人都能用比特币支付，但比特币的问题并不在于此。比特币是一种硬币，静静地躺在一边，早上醒来发现自己在头条。直到 2017 年 5 月 16 日，超过
    30 万用户在 150 多个国家受到了“迫害”。此外，据说“永恒之蓝”病毒已经升级到 2.0 版本，不再受域名限制，传播性更高。
- en: '![images](../Images/51-1.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/51-1.jpg)'
- en: 'Fig. 2-26: “EternalBlue.”'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2-26: “永恒之蓝。”'
- en: So, what is the Bitcoin virus? It can be regarded as a magical virus, a mixture
    of two things—the encryption algorithm blackmail virus and the “EternalBlue” hacking
    tool. The “EternalBlue” hacking tool is responsible for entering people’s computers
    without a click, and then the encryption algorithm blackmail virus encrypts your
    files before blackmail. Where does the Bitcoin virus come from? The encryption
    algorithm blackmail virus is actually an “old friend.” Cryptolocker, the world’s
    first recorded ransomware, was born in 1989 as a program that uses cryptographic
    algorithms to blackmail money. The virus maker was apprehended in a few days.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，比特币病毒是什么呢？它可以被认为是一种神奇的病毒，是两者的混合体——加密算法勒索病毒和“永恒之蓝”黑客工具。 “永恒之蓝”黑客工具负责不点击就进入人们的电脑，然后加密算法勒索病毒在勒索之前加密你的文件。比特币病毒从何而来？加密算法勒索病毒其实是一个“老朋友”。Cryptolocker，世界上第一个记录的勒索软件，于
    1989 年作为一个使用加密算法进行勒索钱的程序诞生。病毒制造者在几天内被抓获。
- en: '![images](../Images/51-2.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/51-2.jpg)'
- en: 'Fig. 2-27: The maker of the Cryptolocker virus was caught.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2-27: 加密锁病毒制造者被捕。'
- en: In fact, Cryptolocker is very simple to solve at the beginning, because it uses
    a symmetric encryption algorithm, which is cracked easily by a reverse program.
    However, the ransomware virus, like Wallet and Onion, currently uses an asymmetric
    encryption algorithm. The encryption and decryption processes of asymmetric encryption
    algorithm use two different keys, so simply reversing the program is not feasible,
    which we will explain in detail later. However, this time the hacker not only
    improved the ransomware worm, but also equipped it with a “good companion”—the
    “EternalBlue” hacking tool—which can directly occupy your computer without your
    clicking on any link. There is also the beautiful legend of the “EternalBlue”
    virus, which is said to have been used by the National Security Agency to steal
    information from other countries and is in the “arsenal of the United States.”
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，Cryptolocker在最初是很简单解决的，因为它使用的是对称加密算法，很容易被逆向工程破解。然而，像Wallet和Onion这样的勒索软件病毒目前使用的是非对称加密算法。非对称加密算法的加密和解密过程使用两个不同的密钥，因此简单地逆向工程程序是不可行的，我们将在后面详细解释。然而，这次黑客不仅改进了勒索软件蠕虫，还为其配备了一个“好伙伴”——“永恒蓝”黑客工具——可以在你点击任何链接的情况下直接占领你的电脑。还有“永恒蓝”病毒的美丽传说，据说曾被国家安全局用于窃取其他国家的情报，并列入“美国武器库”。
- en: '![images](../Images/52-1.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/52-1.jpg)'
- en: 'Fig. 2-28: The irreversible charateristics of asymmetric cryptographic algorithm.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-28：非对称加密算法的不可逆特性。
- en: The U.S. National Security Agency has a hacker organization called “Equation
    Organization,” which is responsible for classified works for the U.S. government
    that cannot be cracked by reverse programs.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 美国国家安全局有一个名为“方程式组织”的黑客组织，负责美国政府无法被逆向工程破解的机密工作。
- en: '![images](../Images/53-1.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/53-1.jpg)'
- en: 'Fig. 2-29: The Legend of the “U.S. Arsenal.”'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-29：“美国武器库”的传说。
- en: '![images](../Images/53-2.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/53-2.jpg)'
- en: 'Fig. 2-30: The Legend of the “Shadow Brokers.”'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-30：“影子经纪人”的传说。
- en: Later, the organization became known because of the world-famous “Stuxnet” incident
    in the Iran nuclear test and “PRISM” incidents. Subsequently, a hacker group called
    “Shadow Brokers” cracked the “arsenal of the United States.” They held auctions
    online, selling these “weapons” with money, but no one was interested. Then, they
    launched crowdfunding, wanting to make a profit from these “weapons,” but still
    no one paid attention. Subsequently, on April 14, 2017, they released the “weapons”
    directly. Since then, the “EternalBlue” hacking tool and the encryption algorithm
    blackmail virus became “lethal weapons.”
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，该组织因伊朗核试验的著名“震网”事件和“棱镜”事件而闻名。随后，一个名为“影子经纪人”的黑客组织破解了“美国武器库”。他们在网上举行拍卖，用钱出售这些“武器”，但没有人感兴趣。然后，他们发起众筹，想从这些“武器”中获利，但仍然无人关注。随后，在2017年4月14日，他们直接发布了这些“武器”。从那时起，“永恒蓝”黑客工具和加密算法勒索病毒成为了“致命武器”。
- en: Indeed, this is just a beautiful legend, and the NSA did not admit it. Therefore,
    there are differing opinions about where “EternalBlue” comes from, and there is
    no practical proof. When can the virus be cracked? First of all, the “EternalBlue”
    hacking tool attacks Windows (Microsoft’s operating system) loopholes, which means
    that as long as you update with Windows patches and turn on the active defense
    of the firewall, this tool does not have the soil to survive.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这只是一个美丽的传说，国家安全局并没有承认。因此，关于“永恒蓝”来自何处存在不同看法，并且没有实际证据。病毒何时能被破解？首先，我们需要了解“永恒蓝”黑客工具攻击的是Windows（微软的操作系统）漏洞，这意味着只要你用Windows补丁更新并开启防火墙的主动防御，这个工具就没有生存的土壤。
- en: '![images](../Images/54-1.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/54-1.jpg)'
- en: 'Fig. 2-31: Upgrading the firewall.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-31：升级防火墙。
- en: However, Windows always has new loopholes. Maybe the hacker equips the virus
    with a tool to attack a new loophole, giving birth to a variety of viruses, such
    as “EternalRed,” “EternalYellow,” or the like. As we know, ransomware virus uses
    asymmetric encryption algorithms for encryption. Its most prominent feature is
    that it cannot be tampered with or reversed. The encryption and decryption processes
    use two different keys.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Windows总是有新的漏洞。也许黑客会为病毒配备一个工具来攻击新的漏洞，从而产生各种病毒，比如“永恒红”、“永恒黄”等。众所周知，勒索软件病毒使用非对称加密算法进行加密。其最显著的特点是无法被篡改或逆转。加密和解密过程使用两个不同的密钥。
- en: '![images](../Images/55-1.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/55-1.jpg)'
- en: 'Fig. 2-32: Hard to crack an asymmetric encryption algorithm.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-32: 破解非对称加密算法很难。'
- en: '![images](../Images/55-2.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/55-2.jpg)'
- en: 'Fig. 2-33: Standing on the shoulders of giants.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-33: 站在巨人的肩膀上。'
- en: Now, the computer cannot complete the amount of back-calculation required, because
    the cost is too high. Thus, the hottest Blockchain technology in the world is
    using asymmetric encryption algorithms. That is to say, hackers design passwords
    on the basis of the most advanced technology of the times. It is not easy for
    us to crack them.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，计算机无法完成所需的逆向计算量，因为成本太高。因此，全球最热门的区块链技术正在使用非对称加密算法。也就是说，黑客基于当时最先进的技术设计密码。我们很难破解它们。
- en: Recall how the well-known “Panda burning incense” virus was finally cracked.
    The hacker was caught and forced to write a program to crack it. This outcome
    remains the norm. The most likely solution is to catch the hacker and force him
    or her to hand over the key. After we enter the key, we can unblock it.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下著名的中毒“熊猫烧香”病毒是如何被最终破解的。黑客被捕，被迫编写一个程序来破解它。这种情况仍然是常态。最可能的解决方案是抓到黑客并迫使他交出钥匙。我们输入钥匙后，就可以解锁它。
- en: '![images](../Images/56-1.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/56-1.jpg)'
- en: 'Fig. 2-34: The hacker hands over the key.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-34: 黑客交出了钥匙。'
- en: When and how will the Bitcoin hacker be caught? These questions involve a third
    question, which is why do hackers require payment in Bitcoins? The answer is that
    it is easy to get away with because of the anonymity of Bitcoin. Bitcoin is an
    online virtual currency that can circulate with anonymity, which makes it easier
    for hackers to hide their identity. You do not need to know who the other person
    is; a Bitcoin address alone allows you to realize point-to-point transfer. Another
    reason hackers choose Bitcoin is that Bitcoins are recognized around the world
    and can be circulated globally. Bitcoin accounts for the largest share of digital
    money. It has many “fans” around the world. Many countries recognize the legal
    status of Bitcoin, and some large companies even accept Bitcoin payments.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币黑客何时何会被抓到？这些问题涉及到第三个问题，即黑客为什么需要用比特币支付？答案是因为比特币的匿名性，使得很容易逃脱。比特币是一种可以在匿名状态下在线流通的虚拟货币，这使得黑客更容易隐藏他们的身份。你不需要知道对方是谁；一个比特币地址就可以实现点对点转账。黑客选择比特币的另一个原因是，比特币在全球范围内被认可并可以全球流通。比特币在数字货币中占据最大份额。在全球有许多“粉丝”。许多国家承认比特币的法律地位，一些大型公司甚至接受比特币支付。
- en: '![images](../Images/57-1.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/57-1.jpg)'
- en: 'Fig. 2-35: Bitcoin’s internationality.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-35: 比特币的国际化。'
- en: '![images](../Images/57-2.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/57-2.jpg)'
- en: 'Fig. 2-36: Bitcoin transaction records are publicly available.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-36: 比特币交易记录是公开的。'
- en: However, it is not so easy for hackers to escape from the arm of the law because
    one of the characteristics of Bitcoin is that it can’t be compromised. All records
    cannot be tampered with and are publicly available. Once the address released
    by the hacker receives Bitcoins, a record is added to the ledger and everyone’s
    ledger updates simultaneously. Everyone can find this record. The transfer of
    this address and cash withdrawal records are also verifiable. As long as the hacker
    conducts operations requiring interaction with realities such as withdrawal, it
    will undoubtedly reveal clues.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于比特币的一个特性是不可妥协，黑客并不容易逃脱法律的制裁。所有记录都无法被篡改且是公开的。一旦黑客发布的地址收到比特币，就会在账本上添加一条记录，并且所有人的账本同时更新。每个人都可以找到这个记录。这个地址的转账和提现记录也是可验证的。只要黑客进行提现等需要与现实互动的操作，无疑会透露线索。
- en: In fact, in most cases, Bitcoin business is not 100 percent anonymous. Transferring
    Bitcoins is similar to an author publishing his work under a pen name. If an author’s
    pseudonym is associated with his identity, anything he has ever written is also
    associated. For individuals, the anonymity of Bitcoin is related to your wallet
    that receives Bitcoins. Every transaction involving this address is permanently
    stored in this Blockchain. If your address is related to your real identity, then
    every transaction will be related to you. Many countries are now monitoring the
    Bitcoin trading platform, and transactions require multiple real-name authentications.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，在大多数情况下，比特币业务并非百分之百匿名。转移比特币类似于作者以笔名发表作品。如果一个作者的笔名与他/她的身份关联，那么他/她所写的一切也会关联起来。对于个人来说，比特币的匿名性与接收比特币的钱包有关。涉及这个地址的每一笔交易都会永久存储在这个区块链中。如果你的地址与你的真实身份相关，那么每一笔交易都会与你相关。现在许多国家都在监控比特币交易平台，交易需要多重实名认证。
- en: '![images](../Images/58-1.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/58-1.jpg)'
- en: 'Fig. 2-37: Bitcoin is not 100 percent anonymous.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-37：比特币并非百分之百匿名。
- en: Therefore, as long as any clue is found about the true information concerning,
    and consequently the identity of, the hacker, then he or she will be very likely
    to get caught.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，只要找到关于黑客真实信息和身份的任何线索，那么他/她很可能会被抓住。
- en: '![images](../Images/59-1.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/59-1.jpg)'
- en: 'Fig. 2-38: Multiple real-name authentication.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-38：多重实名认证。
- en: '![images](../Images/59-2.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/59-2.jpg)'
- en: 'Fig. 2-39: Solution one: searching.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-39：解决方案一：搜索。
- en: HOW TO PREVENT THE “ETERNALBLUE” VIRUS
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如何防止“永恒之蓝”病毒
- en: 'Solution One: Searching'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案一：搜索
- en: Now, open any of your browsers, input “how to prevent Bitcoin virus” in the
    input box, and you will see overwhelming solutions pop out. You can click any
    one of them to read; they all read the same. You simply cut off the Internet,
    set a firewall, block port 445, and update the Windows patches. I recommend that
    you get into the habit of opening up your firewall in the long run, though the
    Windows firewall pops out from time to time. Security is paramount.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开你任何一个浏览器，在输入框里输入“如何防止比特币病毒”，你会看到大量的解决方案涌现出来。你可以点击任何一个查看，它们都一样。你只需要断开互联网，设置一个防火墙，封锁端口
    445，并更新Windows补丁。我建议你长期养成打开防火墙的习惯，尽管Windows防火墙时不时会弹出。安全至关重要。
- en: 'Solution Two: Fighting Fire with Fire'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案二：以火攻火
- en: 'What should we do if it happens again? You can try this: What the hacker tries
    to encrypt are our important files, the suffixes of which are doc (documents),
    xls (spreadsheets), ppt (presentations), psd (image files), etc. The hacker will
    not encrypt the videos and seed files in some unpopular formats. Therefore, in
    addition to backing up important files a few more times, we can also make them
    into compression packages and change them into an unpopular format like .modv.
    Of course, this cannot make the important files entirely immune to destruction.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果再次发生这种情况，我们应该怎么办呢？你可以尝试这个方法：黑客试图加密的是我们的重要文件，它们的扩展名是 doc（文档）、xls（电子表格）、ppt（演示文稿）、psd（图片文件）等。黑客不会加密一些不流行格式中的视频和种子文件。因此，除了再备份重要文件几次，我们还可以将它们制成压缩包，并改为像.modv这样的不流行格式。当然，这并不能使重要文件完全免疫于破坏。
- en: '![images](../Images/60-1.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/60-1.jpg)'
- en: 'Fig. 2-40: Solution two: fire with fire.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-40：解决方案二：以火攻火。
- en: 'Solution Three: Rob His Job'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案三：抢他的工作
- en: 'The best part of this move is that you can get the hackers out of the way.
    This applies to programmers who can write a “virus program” with asymmetric encryption
    to encrypt all the files in personal computers. They can input the password each
    time before seeing the files, since the password is known only by themselves.
    It is a little messy, but it works: “It is mine; you can find no way to get to
    it.”'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这一招最妙的地方在于，你可以把黑客赶走。这也适用于那些会编写带有非对称加密的“病毒程序”来加密个人电脑上所有文件的程序员。因为他们自己知道密码，所以每次查看文件前都需要输入密码。虽然有点乱，但确实有效：“这是我的，你找不到任何获取它的方法。”
- en: '![images](../Images/61-1.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/61-1.jpg)'
- en: 'Fig. 2-41: Solution three: rob his job.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-41：解决方案三：抢他的工作。
- en: The last thing to remind you of is that in China, Bitcoins cannot be withdrawn.
    Therefore, you should consider whether to pay ransoms prudently. After all, we
    cannot ensure there is no second invasion after the payment. Facing the virus,
    we should keep calm.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 需要提醒你的最后一点是，在中国，比特币不能提现。因此，你在支付赎金时应该谨慎考虑。毕竟，我们无法确保付款后不会有第二次入侵。面对病毒，我们应该保持冷静。
- en: '![images](../Images/61-2.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/61-2.jpg)'
- en: 'Fig. 2-42: Failure to unlock after paying the ransom.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-42：支付赎金后未能解锁。
- en: Since I work in the Blockchain and Bitcoin industry, from the moment the virus
    broke out, I have received a lot of phone calls from relatives asking questions
    like “I heard that you study the virus, are you running away?” During the workdays,
    I am always being asked, “Please share your opinions, when can the manipulator
    be caught?”
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我从事区块链和比特币行业，自从病毒爆发以来，我接到了很多亲戚的电话，问的问题比如“我听说你研究病毒，你在逃跑吗？”工作日的时候，我总是被问到，“请分享你的看法，操纵者什么时候能被抓住？”
- en: The reason why hackers use Bitcoin for ransom is that it has features such as
    anonymity and decentralization that can help them to hide their identity. But
    I always hold the opinion that technology itself is innocent, and neither Bitcoin
    nor Blockchain should take the responsibility.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客之所以用比特币进行勒索，是因为它具有匿名性和去中心化等特性，可以帮助他们隐藏身份。但我一直认为，技术本身是无辜的，比特币和区块链也不应该承担责任。
- en: '![images](../Images/62-1.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/62-1.jpg)'
- en: 'Fig. 2-43: Technology itself is innocent.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-43：技术本身是无辜的。
- en: The Workflow of Bitcoin
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币的工作流程
- en: As [Fig. 2-44](#fig2_44) shows, in Blockchain, all the nodes go back up to the
    source, which is also the first block of Blockchain—“Genesis block.”
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如图2-44所示，在区块链中，所有的节点都会回溯到源头，这也是区块链的第一个区块——“创世区块”。
- en: After the creation of “Genesis block,” users of Bitcoin keep “solving the problem.”
    By calculating, they try to get the numerical solution that meets the specific
    SHA-256 hash values.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在创世区块（Genesis block）创建之后，比特币的用户们一直在“解决问题”。他们通过计算，试图找到符合特定SHA-256散列值的数值解。
- en: This process is called “Bitcoin mining.”
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程被称为“比特币挖矿”。
- en: No matter which user gets the numerical solution meeting the requirements first,
    it will be broadcast through the network. Then, other nodes will receive the information
    and validate it. Once it is validated, other nodes will stop calculating and add
    the new block after the previous one.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 无论哪个用户先得到符合要求的数值解，它都会通过网络广播出去。然后，其他节点会接收到这个信息并验证它。一旦验证通过，其他节点就会停止计算，并在前一个区块之后添加新的区块。
- en: '![images](../Images/63-1.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/63-1.jpg)'
- en: 'Fig. 2-44: The workflow of Bitcoin.'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-44：比特币的工作流程。
- en: More and more users join the Blockchain system of Bitcoin, and more and more
    hash values are found. In the process of repetition, new blocks are continuously
    generated and validated. Finally, a main chain is formed. In the meantime, the
    difficulty of the hash algorithm is adjusted to control the time spent by users
    in getting the solutions.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 越来越多的用户加入比特币的区块链系统，越来越多的数值解被发现。在重复的过程中，新的区块不断被生成和验证。最后，形成了一条主链。与此同时，散列算法的难度被调整，以控制用户获得解决方案的时间。
- en: '![images](../Images/63-2.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/63-2.jpg)'
- en: 'Fig. 2-45: Figuring out the numerical solution to meet hash values.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-45：找出符合散列值的数值解。
- en: In the actual trading process of Bitcoin, assuming that user A and user B are
    going to make a transaction, the block with which broadcasts to all the users
    in the Blockchain allowing them to validate it. Once the transaction is validated,
    this block will have a timestamp and be added into the main chain of Blockchain.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在比特币的实际交易过程中，假设用户A和用户B要进行一笔交易，那个区块会广播给所有区块链的用户，让他们去验证。一旦交易被验证，这个区块就会有时间戳，并被添加到区块链的主链中。
- en: '![images](../Images/64-1.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/64-1.jpg)'
- en: 'Fig. 2-46: Using a timestamp.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-46：使用时间戳。
- en: The essence of Blockchain is a public mutual validating accounting system, which
    records all transactions of all accounts. Each change of any account will be recorded
    in the general ledger. All the users have a complete ledger with which they can
    independently calculate all the accounts as well as the current balance of everyone.[6](#Afn_6)
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的本质是一个公共的相互验证会计系统，它记录了所有账户的交易。任何账户的每一次变化都会记录在总账中。所有用户都有一份完整的账本，他们可以独立地计算出所有账户以及每个人的当前余额。
- en: Since all the statistics are transparent, everyone can check the source code.
    In this way, people will trust the decentralized system without worrying about
    any hidden conspiracies.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有的统计数据都是透明的，每个人都可以检查源代码。这样，人们会信任去中心化系统，而不担心任何隐藏的阴谋。
- en: BITCOIN HARD FORK
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: BITCOIN HARD FORK
- en: Since it was born in 2009, Bitcoin’s market cap has climbed to tens of billions
    of US dollars, and many people are crazy about it (please note that according
    to China’s policy, Bitcoin is not currency). Recently, some predict that Bitcoin
    may even plummet when a fork becomes ineluctable.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 自2009年诞生以来，比特币市值攀升至数十亿美元，许多人对此都疯狂痴迷（请注意，根据中国的政策，比特币不是货币）。最近，一些人预测，当分叉不可避免时，比特币甚至可能暴跌。
- en: '![images](../Images/65-1.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/65-1.jpg)'
- en: 'Fig. 2-47: Is a Bitcoin fork inevitable?'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-47：比特币分叉不可避免吗？
- en: Satoshi’s Decision
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 中本聪的决定
- en: Back to 2009, when Satoshi was projecting Bitcoin, the data at hand were limited,
    so he decided the capacity of one block to be 1M (megabyte). However, one transaction
    occupies 250 bytes and even more. Some transactions even need 500 bytes. Apparently,
    the capacity is far from enough.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 回到2009年，当中本聪在设计比特币时，手头的数据有限，因此他决定一个区块的容量为1M（兆字节）。然而，一笔交易占用250字节甚至更多。有些交易甚至需要500字节。显然，这个容量远远不够。
- en: 'Let’s do the math together:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一起做数学题：
- en: One block’s size is 1M, 1M=1,024KB=1,048,576B.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 一个区块的大小是1M，1M=1,024KB=1,048,576B。
- en: Then the number of transactions that one block can hold is 1,048,576÷250 ≈ 4,194.3.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 那么一个区块可以容纳的交易数量是1,048,576÷250 ≈ 4,194.3。
- en: The time to verify one block is 10 minutes, 10 minutes= 600 seconds.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 验证一个区块的时间是10分钟，10分钟=600秒。
- en: Therefore, the number of transactions that can be verified per second is 4,194.3÷600
    ≈ 7.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，每秒可以验证的交易数量是4,194.3÷600 ≈ 7。
- en: '![images](../Images/66-1.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/66-1.jpg)'
- en: 'Fig. 2-48: 1M size is apparently not enough.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-48：1M的容量显然不够。
- en: '![images](../Images/66-2.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/66-2.jpg)'
- en: 'Fig. 2-49: The blocks need scaling.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-49：区块需要扩容。
- en: Every block is only able to verify seven or fewer transactions per second, which
    will undoubtedly lead to the congestion of transactions and thus low verification
    speed. Once one transaction has finished, it has to wait in a long queue to be
    verified. One day, the congestion will reach its limit and cause the whole system
    to break down.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 每个区块只能验证每秒七笔或更少的交易，这无疑会导致交易拥堵，从而降低验证速度。一旦一笔交易完成，它必须等待在长长的队列中才能被验证。总有一天，拥堵将达到极限，导致整个系统崩溃。
- en: Different Scaling Plans
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的扩容计划
- en: How should we deal with the problem? Start to change!
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该如何处理这个问题？开始改变！
- en: How to change? Nowhere can we find Satoshi! Then to whom should we turn? Satoshi
    has entrusted the maintenance of Bitcoin system to five geeks!
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如何改变？我们找不到中本聪！那么我们应该转向谁？中本聪将比特币系统的维护托付给了五个极客！
- en: Then again, how to change?
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 再说一次，如何改变？
- en: 'Listen to me: we should scale the block size to 2M.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 听我说：我们应该把区块大小扩展到2M。
- en: No, it should be 20M.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 不，它应该是20M。
- en: Many people put forward their own scaling plan on behalf of their interest groups.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人代表他们的利益集团提出了自己的扩容计划。
- en: '1.   Bitcoin Classic: The maximum of this field should be scaled to 2M, and
    in the future, it is planned to take the median of the first 2,016 blocks and
    multiply it by a predetermined multiple to determine the upper limit of the size
    of the next blocks.'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   Bitcoin Classic：这个字段的最大值应该扩展到2M，未来计划取前2,016个区块的中位数，并乘以一个预定的倍数来确定下一个区块大小的上限。
- en: '2.   Bitcoin XT: The maximum should be 20M and doubled every two years until
    the upper limit reaches 8.3G (Gbyte).'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   Bitcoin XT：最大值应该是20M，并且每两年翻倍，直到上限达到8.3G（Gbyte）。
- en: '![images](../Images/67-1.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/67-1.jpg)'
- en: 'Fig. 2-50: Different scaling plans.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-50：不同的扩容计划。
- en: '3.   Bitcoin Unlimited: The maximum can be any number—even infinite—and the
    mining pool should determine its size.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   Bitcoin Unlimited：最大值可以是任何数字——甚至是无限大——矿池应该决定其大小。
- en: No agreement has yet to be reached because each group believes their plan is
    the best. What should we do now? If we can create an upgraded version of Bitcoin
    and everyone agrees to join the new system, then there will be no need to fork.
    However, how should we get everyone to agree to upgrade?
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个群体都认为他们的计划是最好的，因此还没有达成任何协议。我们现在应该做什么？如果我们能创建一个比特币的升级版本，并且每个人都同意加入新系统，那么就不需要分叉。然而，我们应该如何让大家都同意升级？
- en: '![images](../Images/68-1.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/68-1.jpg)'
- en: 'Fig. 2-51: Disagreement on scaling plans will lead to a fork.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-51：扩容计划的分歧将导致分叉。
- en: Different opinions and ideas have given rise to a variety of scaling plans,
    and those plans cannot be unified. Thus, a Bitcoin fork becomes inevitable. In
    fact, in the future, the proposed size may grow even larger.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的意见和想法导致了各种扩容计划的产生，这些计划无法统一。因此，比特币分叉变得不可避免。实际上，将来提出的规模可能会更大。
- en: HARD FORK AND SOFT FORK
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 硬分叉与软分叉
- en: What is the difference between a hard fork and a soft fork? To put it simply,
    it is the difference in compatibility. A soft fork is temporary, and a hard fork
    is permanent. When permanent divergence occurs on Blockchain after new consensus
    is released, some nonupgraded nodes cannot verify the upgraded blocks—then a hard
    fork happens.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 硬分叉与软分叉的区别是什么？简单来说，就是兼容性的差异。软分叉是临时的，而硬分叉是永久的。当新的共识发布后，区块链上的永久分歧发生时，一些未升级的节点无法验证升级区块——那么就发生了硬分叉。
- en: '![images](../Images/69-1.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/69-1.jpg)'
- en: 'Fig. 2-52: Structure diagram of a hard fork.'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-52：硬分叉的结构图。
- en: 'Here is the definition of a hard fork: the situation where a parallel chain
    is added to the old chain after changes happen to Bitcoin’s block format or transaction
    format, and the nonupgraded nodes refuse to verify the blocks that are created
    and verified by the upgraded nodes.[7](#Afn_7)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是硬分叉的定义：在比特币的区块格式或交易格式发生变化后，在旧链上添加一条平行链，未升级的节点拒绝验证由升级节点创建和验证的区块。[7](#Afn_7)
- en: '![images](../Images/69-2.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/69-2.jpg)'
- en: 'Fig. 2-53: What is a hard fork?'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-53：硬分叉是什么？
- en: 'Here are the characteristics of a hard fork:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是硬分叉的特点：
- en: 1.   No forward compatibility, and the previous version will be forced to upgrade.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   没有向前兼容性，之前的版本将被强制升级。
- en: '2.   There will be two parallel chains: the old one and the new one.'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   将会有两条平行的链：旧链和新链。
- en: 3.   The nodes need to agree to fork at a certain point in time, and those that
    disagree will remain on the old chain.[8](#Afn_8)
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   节点需要在某个时间点达成分叉共识，那些不同意的人将留在旧链上。[8](#Afn_8)
- en: '![images](../Images/70-1.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/70-1.jpg)'
- en: 'Fig. 2-54: The characteristics of a hard fork.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-54：硬分叉的特点。
- en: 'When a new consensus is launched, a temporary fork may occur because the nonupgraded
    nodes will create illegal blocks, since they do not fully understand the new consensus.
    Thus, the definition of a soft fork: when the data structure of Bitcoin transactions
    changes, the nonupgraded nodes can verify the blocks produced by the upgraded
    nodes, and the upgraded nodes can also verify the blocks produced by the nodes
    that have not been upgraded.[9](#Afn_9)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的共识被推出时，可能会暂时出现分叉，因为未升级的节点会创建非法区块，因为它们没有完全理解新的共识。因此，软分叉的定义是：当比特币交易的数据结构发生变化时，未升级的节点可以验证升级节点生成的区块，升级节点也可以验证未升级节点的区块。[9](#Afn_9)
- en: '![images](../Images/71-1.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/71-1.jpg)'
- en: 'Fig. 2-57: The characteristics of a soft fork.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-57：软分叉的特点。
- en: INTERESTING EXAMPLES
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的例子
- en: Let’s take the restoration of a palace as an example. Suppose there is a Bitcoin
    kingdom on an isolated island, and the palace of this kingdom has withstood many
    years’ erosion and started to appear dilapidated. Some ministers of the court
    suggest the king tear down the palace and rebuild, while some believe repair and
    restoration can make the palace look new. The two groups argue with each other,
    and neither can persuade the other, which leads to a fork.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以修复宫殿为例。假设有一个比特币王国位于一个孤岛上，这个王国的宫殿已经承受了多年的侵蚀并开始出现破败。宫廷中的一些大臣建议国王拆除宫殿并重建，而一些人则认为修复和
    restoration可以让宫殿看起来焕然一新。两组人相互争吵，都无法说服对方，这导致了分叉。
- en: '![images](../Images/72-1.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/72-1.jpg)'
- en: 'Fig. 2-58: The example of a Bitcoin kingdom.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-58：比特币王国的例子。
- en: '![images](../Images/72-2.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/72-2.jpg)'
- en: 'Fig. 2-59: Example to illustrate a hard fork.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-59：说明硬分叉的例子。
- en: When will a hard fork occur? Because the two groups cannot reach an agreement,
    they decide to implement their plan separately. Those who propose to rebuild the
    palace hire workers to build anew, and those who insist on restoration keep the
    old part of the palace. This situation can be compared to the hard fork in Bitcoin’s
    world when a new chain splits from the old chain at a certain point in time, and
    these two chains are not compatible with each other.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 硬分叉何时会发生？因为两个团体无法达成协议，他们决定分别实施他们的计划。那些提议重建宫殿的人雇佣工人重新建造，那些坚持修复的人保持宫殿的旧部分。这种情况可以与比特币世界中的硬分叉相比较，当新链在某个时间点从旧链中分离时，这两条链彼此不兼容。
- en: What will happen when a soft fork occurs? Let’s get back to the Bitcoin kingdom.
    To prevent the argument between the two groups from reaching an impasse, they
    agree to compromise. Both sides can do what they wish to the palace and admit
    the legality of each other’s practice. Similarly, in Bitcoin’s world, when a soft
    fork occurs, the nonupgraded nodes can stick to the old rules, while the upgraded
    nodes will start to adopt the new ones. For example, after Segwit proposed by
    Bitcoin Core, no new coins were produced.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 当发生软分叉时会发生什么？让我们回到比特币王国。为了防止两个团体之间的争论陷入僵局，他们同意妥协。双方都可以对宫殿做他们想做的事情，并承认彼此实践的合法性。同样，在比特币的世界里，当发生软分叉时，未升级的节点可以坚持旧规则，而升级的节点将开始采用新的规则。例如，在比特币核心提出的Segwit之后，没有产生新币。
- en: '![images](../Images/73-1.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/73-1.jpg)'
- en: 'Fig. 2-60: Illustration of a soft fork.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-60：软分叉的说明。
- en: WHAT IS THE INFLUENCE OF A FORK?
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 分叉的影响是什么？
- en: First, let’s have a look at a recent, successful fork. In July 2016, the Ethereum
    development team forcibly transferred all funds of The DAO (Distributed Autonomous
    Organization) and its sub-DAOs to a specific refund contract in Block 192,000
    by modifying the code of Ethereum Software. The address thus “recaptured” the
    ethernet currency of the DAO contract controlled by the hacker. After that, two
    chains were formed, one for the ETC (original chain), and the other for the new
    ETH (new chain). Then a hard fork happened!
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看一个最近的、成功的分叉。2016年7月，以太坊开发团队通过修改以太坊软件的代码，将DAO（分布式自治组织）及其子DAO的所有资金强制转移到区块192,000的特定退款合约中。因此，该地址“夺回”了由黑客控制的DAO合约的以太币。之后，形成了两条链，一条是原始链的ETC，另一条是新链的ETH。然后就发生了硬分叉！
- en: '![images](../Images/74-1.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/74-1.jpg)'
- en: 'Fig. 2-61: Ethereum’s hard fork.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-61：以太坊的硬分叉。
- en: 'It had a massive influence on miners: mining can be easier for them after the
    fork, but the price of coins will be more unpredictable because of the uncertainty
    in the market afterward.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 它对矿工产生了巨大影响：分叉后矿工的挖矿可能会变得更容易，但由于市场的不确定性，硬币的价格将更加不可预测。
- en: '![images](../Images/75-1.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/75-1.jpg)'
- en: 'Fig. 2-62: The impact on miners.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-62：对矿工的影响。
- en: A Hard Fork’s Impact on the Bitcoin Industrial Chain
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 硬分叉对比特币产业链的影响
- en: From a technical point of view, the main problem with a hard fork is that it
    requires all users to move to a new Blockchain with different rules. In order
    to maintain the brand value of Bitcoin and people’s faith in Bitcoin, Bitcoin’s
    supporters are opposed to hard forks. If a hard fork really happens, it may set
    off a cyberwar and a consensus war.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，硬分叉的主要问题是它需要所有用户都转移到具有不同规则的新区块链。为了维护比特币的品牌价值和人们对比特币的信仰，比特币的支持者反对硬分叉。如果真的发生硬分叉，它可能会引发网络战争和共识战争。
- en: A Hard Fork’s Impact on Bitcoin’s Price
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 硬分叉对比特币价格的影响
- en: The market determines the price fluctuation and outlook of Bitcoin. Theoretically
    speaking, Bitcoin prices will first undergo a slump after a hard fork.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 市场决定比特币的价格波动和前景。从理论上讲，比特币价格在硬分叉后会首先经历一段低迷期。
- en: '![images](../Images/75-2.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/75-2.jpg)'
- en: 'Fig. 2-63: The impact on an industrial chain.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-63：工业链的影响。
- en: Both Bitcoin and the new coin occurring after the fork will return to a normal
    level. The discussion of a Bitcoin fork shows no sign of ending. Maybe this is
    precisely the glamour of decentralized Bitcoin—the diversity.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币及其分叉后的新币都将回归正常水平。比特币分叉的讨论没有结束的迹象。也许这就是去中心化比特币的魅力——多样性。
- en: '![images](../Images/76-1.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/76-1.jpg)'
- en: 'Fig. 2-64: The impact on Bitcoin’s price.'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-64：对比特币价格的影响。
- en: THE WORKING PROCESS OF BLOCKCHAIN
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的工作流程
- en: How does Blockchain work?
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是如何工作的？
- en: As [Fig. 2-65](#fig2_65) shows, assume that A and B are going to have a transaction.
    A launches a request of setting up a new block, and the block will be broadcast
    to all the users in the network. After validated by all the users, it will be
    added to the main chain, which saves permanent and transparent transaction records
    that can be checked by every user. Actually, the Blockchain technology is a distributed
    database in which accounting is done and maintained by all the nodes rather than
    controlled by individuals or centralized subjects. Not a single node can tamper
    the ledger.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 如图2-65所示，假设A和B将要进行一笔交易。A发起一个建立新块的请求，该块将广播给网络中的所有用户。在所有用户验证后，它将被添加到主链中，保存可以被每个用户检查的永久且透明的交易记录。实际上，区块链技术是一个分布式数据库，其中会计由所有节点完成和维护，而不是由个人或集中主体控制。没有一个节点可以篡改账本。
- en: '![images](../Images/77-1.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/77-1.jpg)'
- en: 'Fig. 2-65: The working process of Blockchain.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-65：区块链工作过程。
- en: If you are going to tamper with a record, you need to control more than 51 percent
    of the nodes or computing power of the whole network at the same time. It is almost
    impossible, since there are an infinite amount of nodes, and new ones are added
    all the time in Blockchain. What is more, the cost of tampering is so high that
    nearly no one can afford it.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要篡改一条记录，你需要同时控制超过51%的节点或整个网络的计算能力。这在几乎是不可能的，因为区块链中的节点数量是无限的，而且随时都有新的节点加入。此外，篡改的成本如此之高，几乎没有人能承担得起。
- en: '![images](../Images/78-1.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/78-1.jpg)'
- en: 'Fig. 2-66: The ledger cannot be compromised.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-66：账本无法被破坏。
- en: Four Major Features of Blockchain
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链四大特点
- en: 'After numerous accounting, the Blockchain becomes a reliable public ledger
    with enormous capacity, which has the following features:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 经过多次核算，区块链变成了一个可靠的大型公共账本，具有以下特点：
- en: '![images](../Images/78-2.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/78-2.jpg)'
- en: 'Fig. 2-67: Features of Blockchain: decentralized.'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-67：区块链特点：去中心化。
- en: '1.   Decentralized: In a decentralized financial system, there is no intermediary,
    and all nodes have equal rights and duties, so that the overall operation of the
    system will not be affected by the shutdown of any one node.'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   去中心化：在一个去中心化的金融系统中，没有中介，所有节点权利和义务平等，因此系统的整体运作不会受到任何单一节点关闭的影响。
- en: '2.   Detrust: Thanks to the transparent operation of the database and system,
    all the nodes can make transactions without issues of trust. Within the rules
    and time limitations of the system, the nodes cannot deceive one another.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   去信任：由于数据库和系统的透明操作，所有节点都可以无需信任问题地进行交易。在系统的规则和时间限制内，节点之间无法互相欺骗。
- en: '3.   Collectively maintained: All the nodes have a maintenance function, which
    means all the users participate in maintaining the system.'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   集体维护：所有节点都有维护功能，这意味着所有用户都参与系统的维护。
- en: '![images](../Images/79-1.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/79-1.jpg)'
- en: 'Fig. 2-68: Blockchain’s characteristics: detrust.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-68：区块链特性：去信任。
- en: '![images](../Images/79-2.jpg)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/79-2.jpg)'
- en: 'Fig. 2-69: Blockchain’s characteristics: collective maintenance.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-69：区块链特性：集体维护。
- en: '4.   Reliable database: Each node in the system has the latest copy of the
    complete database. It is invalid to modify the database of a single node because
    the system will automatically make comparisons and take the data most commonly
    occurring as the real ones.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 4.   可靠数据库：系统中的每个节点都有最新完整数据库的副本。单个节点修改数据库是无效的，因为系统会自动进行比较，并取最常出现的数据作为真实数据。
- en: '![images](../Images/80-1.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/80-1.jpg)'
- en: 'Fig. 2-70: Features of Blockchain: reliable database.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-70：区块链特点：可靠数据库。
- en: BLOCKCHAIN’S UNDERLYING STRUCTURE
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链底层结构
- en: A Model Framework of Blockchain
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链模型框架
- en: The model framework of Blockchain is repeatedly discussed, and people who first
    get into the industry commonly have questions about its composition. We will demonstrate
    the framework through the most comprehensive and easiest explanation derived from
    large amounts of materials. There are six layers of the model framework of Blockchain”
    data layer, network layer, consensus layer, neuron layer, contract layer, and
    application layer. Each layer performs a core function, and by cooperating with
    one another, these layers achieve a decentralized trust mechanism.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的模型框架反复被讨论，新手入行时常对其构成有疑问。我们将通过大量材料中最全面、最容易的解释来展示这个框架。区块链有六个层次的模型框架：“数据层、网络层、共识层、神经元层、合约层和应用层。每一层执行一个核心功能，通过相互合作，这些层实现了一个去中心化的信任机制。
- en: A. Data Layer
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: A. 数据层
- en: The data layer mainly represents the physical attributes of Blockchain technology.
    The first node that the technologists who designed the Blockchain system created
    was genesis block, then blocks of the same form under the same rules connect together
    to be a parent Blockchain following a chained structure. As operation duration
    increases, new blocks are added to the parent Blockchain after being verified,
    and the parent Blockchain continues to grow longer.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 数据层主要表示区块链技术的物理属性。设计区块链系统的技术员创建的第一个节点是创世区块，然后在相同规则下相同形式的区块连接在一起，形成一个链式的父区块链。随着运行时间的增加，新区块在验证后添加到父区块链中，父区块链继续变长。
- en: '![images](../Images/81-1.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/81-1.jpg)'
- en: 'Fig. 2-71: A model framework of Blockchain.'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-71：区块链的模型框架。
- en: Each block is supported by many technologies such as time-stamping technology,
    which can ensure that it connects with the other blocks in chronological order,
    and hash function, which in turn ensures there will be no tampering with that
    transaction record.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 每个区块都得到了诸如时间戳技术等多项技术支持，这可以确保它按时间顺序与其他区块连接，并使用哈希函数确保交易记录不被篡改。
- en: B. Network Layer
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: B. 网络层
- en: The main function of the network layer is to realize the information communication
    among the nodes in the Blockchain network. Blockchain in nature is a P2P (point
    to point) network. Every node can both receive and produce information. Nodes
    achieve communication by jointly maintaining a common Blockchain. Within a Blockchain
    network, every node can create a new block, and after the creation, it will broadcast
    to other nodes, which will perform a verification of the new block. With successful
    verification from over 51 percent of the users within the whole Blockchain network,
    this new block can be added to the parent Blockchain.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 网络层的主要功能是在区块链网络中的节点之间实现信息通信。本质上，区块链是一个P2P（点对点）网络。每个节点既可以接收也可以产生信息。节点通过共同维护一个公共区块链来实现通信。在区块链网络中，每个节点都可以创建一个新块，创建后，它会广播给其他节点，其他节点将验证这个新块。在整条区块链网络中有超过51%的用户成功验证后，这个新块可以添加到父区块链中。
- en: '![images](../Images/82-1.jpg)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/82-1.jpg)'
- en: 'Fig. 2-72: The network layer of Blockchain.'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-72：区块链的网络层。
- en: C. Consensus Layer
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: C. 共识层
- en: A consensus layer can help highly dispersed nodes within a decentralized system
    achieve efficient consensus about the effectiveness of Blockchain data. Common
    consensus mechanisms in Blockchain include proof-of-work algorithm, proof-of-stake
    algorithm, and delegated proof-of-stake consensus, which will be the focus in
    the following chapters.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 共识层可以帮助一个去中心化系统内高度分散的节点高效地达成关于区块链数据的共识。区块链中常见的共识机制包括工作量证明算法、权益证明算法和委托权益证明共识，这些将是接下来章节的重点。
- en: D. Neuron Layer
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: D. 神经元层
- en: The main function of the neuron layer is to provide activation measures, encouraging
    nodes to participate in the safety verification of Blockchain. Let’s take Bitcoin,
    for example; it has two reward mechanisms. When the number of Bitcoins reaches
    21 million, new blocks will no longer generate Bitcoins, at which point the reward
    mechanism will mainly involve fees that are taken off from every transaction.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 神经元层的主要功能是提供激活度量，鼓励节点参与区块链的安全验证。让我们以比特币为例；它有两种奖励机制。当比特币达到2100万时，新区块将不再产生比特币，此时奖励机制将主要涉及从每笔交易中扣除的手续费。
- en: '![images](../Images/83-1.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/83-1.jpg)'
- en: 'Fig. 2-73: The neuron layer of Blockchain.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-73：区块链的神经元层。
- en: E. Contract Layer
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: E. 合约层
- en: 'The contract layer mainly includes various kinds of script code, algorithm
    mechanisms, and smart contracts. Let’s take Bitcoins, for example: they are programmable
    currency, and the script code encapsulated in the contract layer stipulates the
    transaction mode and various details during the transaction process.'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 合约层主要包括各种脚本代码、算法机制和智能合约。让我们以比特币为例：它们是可编程货币，合约层中封装的脚本代码规定了交易方式和交易过程中的各种细节。
- en: F. Application Layer
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: F. 应用层
- en: The application layer encapsulates various application scenarios and cases of
    Blockchain, such as; OKLink, a cross-border payment platform based on Blockchain,
    as well as other various applications that we will talk about later in the application
    chapter.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 应用层封装了各种区块链应用场景，例如；OKLink，一个基于区块链的跨境支付平台，以及其他我们将在应用章节中讨论的各种应用。
- en: BASIC TYPES OF BLOCKCHAIN
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的基本类型
- en: Public Blockchain
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 公有区块链
- en: Public Blockchain allows everyone around the world to read, create, acquire
    verification of transactions, and participate in the consensus process, which
    decides on the exact blocks that can be added to Blockchain and makes the current
    status clear.[10](#Afn_10)
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 公有区块链允许全球所有人阅读、创建、获取交易验证以及参与共识过程，决定可以添加到区块链的确切区块，并使当前状态清晰。[10](#Afn_10)
- en: '![images](../Images/84-1.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/84-1.jpg)'
- en: 'Fig. 2-74: Public Blockchain.'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-74: 公有区块链。'
- en: 'Features of Public Blockchain:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 公有区块链的特点：
- en: 1.   Protects users from the influence of developers.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   保护用户不受开发者影响。
- en: In a public Blockchain, application developers have no right to interfere with
    users’ activities so that the Blockchain can protect its users.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在公有区块链中，应用开发者无权干涉用户活动，以便区块链保护其用户。
- en: 2.   Low access threshold.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   低访问门槛。
- en: All can have the access as long as he or she owns a computer that connects to
    the internet.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 只要有电脑连接互联网，任何人都可以访问。
- en: 3.   All data is open by default.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   所有数据默认公开。
- en: Every participant in a public Blockchain can access all transaction records
    in the distributed ledger.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 公有区块链的每一个参与者都可以访问分布式账本中的所有交易记录。
- en: Private Blockchain
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链
- en: Private Blockchain refers to a Blockchain with its writing access belonging
    to only one organization, aiming to restrict read access and open access.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链指的是其写入权限属于只有一个组织的区块链，旨在限制读取权限和开放权限。
- en: '![images](../Images/85-1.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/85-1.jpg)'
- en: 'Fig. 2-75: Private Blockchain.'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-75: 私有区块链。'
- en: 'Features of Private Blockchain:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链的特点：
- en: 1.   High transaction velocity.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   高交易速度。
- en: There are fewer nodes in a private Blockchain, and with a high level of trust,
    not every node is needed to verify a transaction. Thus, the transaction velocity
    of a private Blockchain is much higher than that of a public Blockchain.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链中的节点较少，且信任度较高，不需要每个节点验证交易。因此，私有区块链的交易速度远高于公有区块链。
- en: 2.   Provides better protection for privacy.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 2.   更好地保护隐私。
- en: Data in a private Blockchain will not go public and will not be obtained by
    any individual who has access to the network.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链中的数据不会公开，也不会被任何接入网络的个人获取。
- en: 3.   Transaction costs can be greatly reduced, even to zero.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 3.   交易成本可以大幅降低，甚至降至零。
- en: In a private Blockchain, transactions can be achieved free of charge or at least
    at very low costs. If a physical organization controls and deals with all transactions,
    then it will no longer need to charge for its operations.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在私有区块链中，交易可以免费实现，或至少成本非常低。如果一个物理组织控制并处理所有交易，那么它将不再需要为其运营收费。
- en: 4\. Protect basic products from damage.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 4.   保护基本产品不受损害。
- en: By using a private Blockchain, banks and traditional financial organizations
    can ensure their vested interests and protect their original ecosystem.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用私有区块链，银行和传统金融机构可以确保其既得利益并保护其原始生态系统。
- en: Consortium Blockchain
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 联盟区块链
- en: A consortium Blockchain refers to a Blockchain that has its consensus process
    controlled by preselected nodes. For example, for a consortium Blockchain consisting
    of fifteen financial organizations, each organization operates a node, and to
    make every block validated, verification from over half of the consortium, which
    is eight, is needed. This type of Blockchain may allow everyone to read or can
    be subjected to participants’ hybrid routes.[11](#Afn_11)
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 联盟区块链指的是其共识过程由预选节点控制的区块链。例如，由十五家金融机构组成的联盟区块链，每家机构运行一个节点，为了使每个区块得到验证，需要超过半数联盟的验证，即八家。这种类型的区块链可能允许每个人阅读，或者可以受到参与者混合路线的约束。[11](#Afn_11)
- en: Consortium Blockchain is regarded as partially decentralized, and the Blockchain
    project R3 CEV can be seen as a form of consortium Blockchain.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 联盟区块链被认为是部分去中心化的，而区块链项目R3 CEV可以看作是联盟区块链的一种形式。
- en: '![images](../Images/87-1.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/87-1.jpg)'
- en: 'Fig. 2-76: Consortium Blockchain.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-76：联盟区块链。
- en: Other Classifications
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 其他分类
- en: 'Let’s return to other classifications of Blockchain: permission chain, hybrid
    chain, and complex chain. Permission chain refers to a Blockchain system that
    requires each node to perform verification. Both private Blockchain and public
    Blockchain belong to permission chain. With the increasing development of Blockchain
    technology, its technical framework will not simply consist of private and public
    Blockchains, and the distinction between the two will be less apparent. Thus,
    gradually, the concept of complex chain and hybrid chain have been debated.'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到区块链的其他分类：权限链、混合链和复杂链。权限链指的是需要每个节点进行验证的区块链系统。私有区块链和公共区块链都属于权限链。随着区块链技术的发展，其技术框架不会仅仅由私有和公共区块链组成，两者之间的区别将不那么明显。因此，逐渐地，复杂链和混合链的概念被讨论。
- en: Development of Blockchain
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的发展
- en: 'According to the viewpoints of Melanie Swan, founder of the Institute for Blockchain
    Studies, there are three stages and fields regarding the development of Blockchain
    technology: Blockchain 1.0, Blockchain 2.0, and Blockchain 3.0.[12](#Afn_12)'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 根据区块链研究所创始人梅兰妮·斯旺的观点，区块链技术的发展有三个阶段和领域：区块链1.0、区块链2.0和区块链3.0。[12](#Afn_12)
- en: 'Blockchain 1.0: Programmable currency represented by Bitcoin. It is more like
    innovation of a digital currency field, such as a system for currency transfer,
    cashing, and payment.'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链1.0：以比特币为代表的可编程货币。它更像是对数字货币领域的创新，比如货币转账、兑现和支付的系统。
- en: 'Blockchain 2.0: Programmable finance based on Blockchain. It is more about
    innovations in contracts (especially business contracts) and transactions, including
    stocks, securities, futures, loans, clearing, and settlement, as well as the so-called
    smart contracts.'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链2.0：基于区块链的可编程金融。它更多的是关于合同（尤其是商业合同）和交易的创新，包括股票、证券、期货、贷款、清算和结算，以及所谓的智能合同。
- en: 'Blockchain 3.0: Application of Blockchain in other industries. It refers to
    changes in man’s organizational forms, including health, science, culture, as
    well as justice and voting based on Blockchain.'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链3.0：区块链在其他行业的应用。它指的是人类组织形式的变化，包括健康、科学、文化，以及基于区块链的司法和投票。
- en: '![images](../Images/88-1.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/88-1.jpg)'
- en: 'Fig. 2-77: The development of Blockchain.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-77：区块链的发展。
- en: Consensus Mechanism of Blockchain
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的共识机制
- en: 'Before consensus mechanism, let us take a look at two other introductory problems:
    the two-army problem and Byzantine failures.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 在共识机制之前，让我们来看两个其他介绍性问题：两军问题和拜占庭故障。
- en: 'Problem One: The Two-Army Problem'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 问题一：两军问题
- en: 'Speaking of this, a popular explanation on the Internet is as follows:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这个，网络上有一个流行的解释如下：
- en: 'Two armies far apart need to convey information to each other. The blue army
    sends a messenger to tell the red army: “If you dare, take out the Italian cannons!”
    Upon receipt of this information, the red army sends a messenger to tell the blue
    army: “Copy that!” Then the blue army sends a messenger to the red army again:
    “We know that you have got it.” And the red army sends a messenger again: “We
    know you know we got the information.” The blue army sends a messenger again:
    “We know you know we know you have the information.” And then … there is no end.'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 遥远的两支军队需要互相传递信息。蓝色军队派一名信使告诉红色军队：“如果你敢，就拿出意大利大炮！”收到这条信息后，红色军队派一名信使告诉蓝色军队：“收到。”然后蓝色军队再次派信使给红色军队：“我们知道你已经收到了。”红色军队再次派信使：“我们知道你知道我们收到了信息。”蓝色军队再次派信使：“我们知道你知道我们知道你有信息。”然后……就没有然后了。
- en: '![images](../Images/89-1.jpg)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/89-1.jpg)'
- en: 'Fig. 2-78: The two-army problem.'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-78：两军问题。
- en: 'Problem Two: Byzantine Failures'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 问题二：拜占庭失败
- en: 'This is an old problem, and the details are as follows:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个古老的问题，细节如下：
- en: In military actions, The Byzantine Roman Empire decides whether to attack or
    retreat according to generals’ votes. That is to say, if most of the generals
    decide to attack, the army will rush up. However, if spies are hiding in the army
    (defecting generals may vote inversely intentionally, or the herald changes the
    order without authorization), then how to make sure that the result can honestly
    reflect the will of loyal generals?[13](#Afn_13)
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在军事行动中，拜占庭罗马帝国根据将军们的投票来决定是否进攻或撤退。也就是说，如果大多数将军决定进攻，军队就会冲上去。然而，如果间谍隐藏在军队中（叛变的将军可能故意投票相反，或者信使未经授权改变命令），那么如何确保结果能真实反映忠诚将军的意愿？[13](#Afn_13)
- en: Let us explain it further with details.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步用细节来解释。
- en: '![images](../Images/90-1.jpg)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/90-1.jpg)'
- en: 'Fig. 2-79: Byzantine failures.'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-79：拜占庭失败。
- en: 'Long, long ago, a strong empire named Byzantine had extremely powerful armies.
    There were ten small six of them launched offensives at the same time so that
    they would have the chance to win, or else they would be defeated. Here comes
    the problem: in ancient times, communication between armies depended entirely
    on people. Once there was a spy in a national army, it didn’t matter whether it
    was the general or the signalman who gave the orders; the other nine countries
    might receive false information, resulting in failure. If you were the king of
    one of those small countries, how could you ensure more than five countries would
    fight alongside you? After all, if you were not careful enough, you might lose
    the country.'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 很久很久以前，有一个名叫拜占庭的强大帝国，拥有极其强大的军队。同时发起十次小规模的进攻，这样他们就有机会获胜，否则就会失败。问题来了：在古代，军队之间的通信完全依靠人。一旦国家军队中有间谍，无论是将军还是发令员给出命令；其他九个国家可能会收到错误的信息，导致失败。如果你是那些小国之一的国王，你如何确保有超过五个国家会与你并肩作战？毕竟，如果你不够小心，你可能会失去国家。
- en: These problems are why we need to reach consensus. There are various consensus
    mechanisms in Blockchain. None of them is perfect, so none of them can be applied
    to all scenarios. Below, we will go over different consensus mechanisms discussed
    by Mr. Zhang in his article “Consensus mechanism on blockchain.” We selected nine
    kinds of consensus mechanisms with comparatively specific features to make a brief
    introduction. The common consensus mechanisms include nine types, including, most
    significantly, Proof of Work, Proof of State, and Delegated Proof of Stake.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题是我们需要达成共识的原因。区块链中有各种共识机制。没有一个是完美的，所以没有一个可以适用于所有场景。下面，我们将回顾张先生在文章“区块链上的共识机制”中讨论的不同共识机制。我们选择了具有相对特定特征的九种共识机制进行简要介绍。常见的共识机制包括九种，最重要的是工作量证明、状态证明和委托证明股份。
- en: 'A: PROOF OF WORK'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 工作量证明'
- en: Proof of Work (PoW) can usually only be proved from the results because monitoring
    the work process is cumbersome and inefficient.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明（PoW）通常只能从结果来证明，因为监控工作过程既繁琐又低效。
- en: When Bitcoin generates blocks, PoW is employed. The hash of a matching block
    consists of N preleading zeros. The number of zeros depends on the difficulty
    of the network. To get a reasonable block hash value requires a lot of tests and
    calculations, and the calculation time depends on the machine’s hash operation
    speed. When a node provides a reasonable block hash value, it indicates that the
    node has indeed gone through a large number of calculations; of course, this does
    not give the absolute number of calculations, because finding a reasonable hash
    value is a probabilistic event. When a node occupies a computing power of n percent
    of the entire network, then the node has a n percent probability of finding the
    block hash.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 当比特币生成区块时，采用工作量证明。匹配块的散列值由N个前导零组成。零的数量取决于网络的难度。要获得合理的区块散列值需要大量的测试和计算，计算时间取决于机器的散列运算速度。当一个节点提供一个合理的区块散列值时，表明该节点确实进行了大量的计算；当然，这并不给出绝对的计算次数，因为找到一个合理的散列值是一个概率事件。当一个节点拥有整个网络计算能力的n%时，那么该节点就有n%的概率找到区块散列值。
- en: PoW relies on machines to conduct mathematical operations and then obtain the
    right to record. The operations consume immense resources and have high consensus
    mechanism and weak supervision. Meanwhile, each consensus needs the whole network
    to participate in calculating and has a relatively low efficiency and performance
    ratio, as well as a fault-tolerance of allowing 50 percent of the nodes in the
    entire Internet to be in error.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明（PoW）依赖于机器进行数学运算，然后获得记录的权利。这些运算消耗了大量的资源，并且具有高共识机制和弱的监管。同时，每一次共识都需要整个网络参与计算，并且相对效率和性能比较低，以及容错性允许整个互联网50%的节点出错。
- en: 'Advantages of PoW: Completely decentralized; free access to nodes.'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明的优点：完全去中心化；节点免费加入。
- en: 'Disadvantages of PoW: Currently, Bitcoin has attracted most of the global computing
    power; other Blockchain applications using the PoW consensus can hardly obtain
    the same computing power to protect their own security. Also, mining causes much
    waste of resources, and the time to reach consensus is relatively long.'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明的缺点：目前，比特币已经吸引了全球大部分的计算能力；采用PoW共识的其他区块链应用几乎很难获得相同的计算能力来保护自身的安全。另外，挖矿导致大量资源浪费，达成共识的时间相对较长。
- en: 'The projects using PoW: Bitcoin, the first three stages of Ethereum—Frontier,
    Homestead, and Metropolis. The fourth stage of Ethereum, Serenity, will use the
    PoS.'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PoW的项目：比特币，以太坊的前三个阶段——前沿、家园和 Metropolis。以太坊的第四个阶段，宁静，将采用PoS。
- en: B. PROOF OF STAKE
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 证明股份（PoS）
- en: Proof of Stake (PoS) was first proposed by the “Quantum Mechanic” at the 2011
    Bitcoin Forum’s Lecture and was later implemented by Peercoin (DOT) and NXT (Futures)
    with different ideas.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 证明股份（PoS）最初是由2011年比特币论坛上的“量子物理学家”提出的，后来由Peercoin（DOT）和NXT（Futures）以不同的想法实施。
- en: The main idea of PoS is that the difficulty of acquiring recording rights for
    nodes is inversely proportional to the rights and benefits held by nodes. Compared
    with PoW, it reduces certain resource consumption caused by mathematical operations.
    The performance has been correspondingly improved. But based on hashing, the regulation
    on competing for the recording right is still weak. The fault tolerance of PoS
    is the same as PoW. It is an upgrade of PoW, which reduces the difficulty of mining
    in proportion to time and to tokens occupied by each node and thus speeds up the
    process of finding random numbers.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: PoS的主要思想是，节点获取记录权的难度与节点拥有的权利和利益成反比。与PoW相比，它减少了由于数学运算造成的一些资源消耗。性能相应地得到提高。但是基于散列，对争夺记录权的竞争的调节仍然很弱。PoS的容错性与PoW相同。它是PoW的升级，通过时间和每个节点占有的代币成比例地降低挖矿难度，从而加快寻找随机数的进程。
- en: In PoW, a user may use $1,000 to buy a computer, join the network to mine, create
    a new block, and then get rewarded. In the PoS, users can purchase equivalent
    tokens for $1,000 and put these tokens as deposits into the PoS mechanism. Users
    thereby have the chance to create new blocks and get rewards.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在PoW中，一个用户可能用1000美元买一台电脑，加入网络进行挖矿，创建一个新的区块，然后获得奖励。在PoS中，用户可以用1000美元购买等值的代币，并将这些代币作为存款投入到PoS机制中。用户因此有机会创建新的区块并获得奖励。
- en: '![images](../Images/93-1.jpg)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/93-1.jpg)'
- en: 'Fig. 2-80: PoS Random Selected Algorithm.'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-80：PoS随机选择算法。
- en: In general, there is a collection of coin holders in this system. Holders put
    tokens into the PoS mechanism, and then they become verifiers. For the first block
    in Blockchain, the PoS algorithm randomly selects one among the verifiers (the
    verifier’s weight is based on the number of tokens they invest). For example,
    the chance for a verifier investing 10,000 tokens is 10 times as that of the one
    investing 1,000 tokens, which gives him the right to create the next block. Within
    a certain time, if the verifier has not yet generated a block, a second verifier
    is instead selected to generate a new block. Like PoW, PoS chooses the longest
    link.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，在这个系统中有一群币持有者。持有者将代币投入到 PoS 机制中，然后他们成为验证者。对于区块链的第一个区块，PoS 算法随机选择一位验证者（验证者的权重基于他们投资的代币数量）。例如，投资
    10,000 个代币的验证者的机会是投资 1,000 个代币的验证者的 10 倍，这给了他创建下一个区块的权利。在一定时间内，如果验证者还没有生成区块，则会选择第二个验证者来生成新区块。与
    PoW 一样，PoS 选择最长的链。
- en: With economies of scale (referring to the phenomenon of increasing economic
    efficiency due to the expansion of production scale) disappearing, the risk of
    centralization is reduced. The tokens worth $10 million bring a return that is
    exactly 10 times the value of tokens worth of $1 million, and no one will receive
    disproportional additional rewards for the ability to afford large-scale production
    tools.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 随着规模经济（指由于生产规模扩大而导致的经济效益提高的现象）的消失，中心化的风险降低了。价值 1000 万美元的代币带来的回报正好是价值 100 万美元代币的
    10 倍，没有人会因为承担大规模生产工具的能力而获得不成比例的额外奖励。
- en: 'Advantages of PoS: It somehow shortens the time for reaching consensus and
    no longer needs to consume enormous energy to mine.'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: PoS 的优点：它以某种方式缩短了达成共识的时间，并且不再需要消耗巨大的能量进行挖矿。
- en: 'Disadvantages of PoS: Mining is still needed without eradicating the deadly
    flaw in commercial applications, and any confirmation is only probabilistic rather
    than deterministic. Theoretically, there may be other attacks, for example, Ethereum’s
    DAO attack causing Ethereum to fork and the ETC to appear, which in fact proved
    the failure of this hard fork.'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: PoS 的缺点：在没有消除商业应用中的致命缺陷的情况下仍需要挖矿，任何确认都是概率性的而不是确定性的。从理论上讲，可能还有其他攻击，例如以太坊的 DAO
    攻击导致以太坊分叉出 ETC，这实际上证明了这次硬分叉的失败。
- en: C. DELEGATED PROOF OF STATE
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: C. 委托证明状态
- en: The BitShares community first raised the idea of the DPoS mechanism. The main
    difference between DPoS and PoS is that the node elects several delegates, who
    verify and record transactions, but its compliance and supervision, performance,
    resource consumption, and fault tolerance are similar to those of PoS. Similar
    to board voting, the token holders elect and entrust a certain number of nodes
    to verify and record transactions.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: BitShares 社区首先提出了 DPoS 机制的想法。DPoS 与 PoS 的主要区别在于，节点选举几个 delegate，他们验证并记录交易，但它的合规性和监督、性能、资源消耗和容错能力与
    PoS 类似。类似于董事会投票，代币持有者选举并委托一定数量的节点来验证和记录交易。
- en: 'The working principle of DPoS is as follows: Each shareholder has a corresponding
    influence in proportion to his percentages of shareholding, and the result of
    51 percent of shareholder voting will be irreversible and binding. The challenge
    is to achieve “51 percent approval” in a timely and efficient method. To achieve
    this goal, each shareholder can entrust his vote to a delegate. The top 100 delegates
    with the most votes generate blocks according to the established schedule. Each
    delegate is assigned to a certain time to generate a block.'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: DPoS 的工作原理如下：每位股东对应的影响力与他持股百分比成正比，股东投票 51% 的结果是不可逆转且具有约束力的。挑战在于及时高效地实现“51% 的批准”。为了实现这个目标，每位股东可以将他的投票权委托给一个
    delegate。根据既定计划，得票数最多的前 100 名 delegate 生成区块。每个 delegate 被分配在某个时间生成一个区块。
- en: '![images](../Images/95-1.jpg)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/95-1.jpg)'
- en: 'Fig. 2-81: The working principle of DPoS.'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-81：DPoS 的工作原理。
- en: All delegates will receive 10 percent of the transaction fee that is equivalent
    to an average block. If an average block takes 100 shares as a transaction fee,
    one delegate can receive one share as the reward.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 delegate 都将获得相当于平均区块的 10% 交易费。如果一个平均区块的交易费是 100 个份额，那么一个 delegate 就能获得一个份额作为奖励。
- en: Some delegates may fail to broadcast their blocks promptly due to the network
    latency, which will result in a fork in Blockchain. However, this is unlikely
    to happen, because the delegate who generates the block can establish a direct
    connection with the delegates of the block before and after. Establishing this
    direct connection with the delegate behind you (and possibly the one after you)
    will ensure that you get paid.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 一些代表可能由于网络延迟而未能及时传播他们的区块，这将导致区块链分叉。然而，这种情况不太可能发生，因为生成区块的代表可以与前后区块的代表直接建立连接。与在你之后（可能还有之后的一个）的代表建立这种直接连接将确保你得到报酬。
- en: Under the DPoS’s voting mode, a new block can be generated every thirty seconds.
    In normal network conditions, the possibility of a fork in Blockchain is extremely
    small, and even if it happens, it can be resolved in a few minutes.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在DPoS的投票模式下，每三十秒可以生成一个新块。在正常网络条件下，区块链分叉的可能性极其微小，即使发生了，也能在几分钟内解决。
- en: 'The basic steps to perform this mode are:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此模式的基本步骤如下：
- en: 1.   Become a delegate. To become a delegate, you must register your public
    key on the Internet and get a 32-bit unique identifier. This identifier is quoted
    by the “head” of each transaction’s data.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 成为代表。要成为代表，你必须在互联网上注册你的公钥并获得一个32位唯一标识符。这个标识符被每个交易数据的“头部”引用。
- en: 2.   Keep the nodes honest. There will be a monitoring service in the system,
    which will calculate the behavior of each node in real time, which is equivalent
    to an automated error correction mechanism. Let me give an example. If a node
    does not produce a new block as expected, then it is considered that this node
    automatically gives up its right to produce the block, so the next node generates
    a new block.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 保持节点诚实。系统中会有一个监控服务，该服务会实时计算每个节点的表现，这相当于一个自动的错误修正机制。让我举一个例子。如果一个节点没有如预期产生新块，那么认为这个节点自动放弃了产生块的权利，所以下一个节点生成一个新块。
- en: 3.   Delegates represent integrity. Each wallet will display a status indicator
    to let users know how their delegates perform. If they miss too many blocks, the
    system will recommend that the user replace them with new ones. If any delegate
    is found to have issued an invalid block, then all standard wallets will ask to
    select a new delegate before each wallet makes further transactions.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 代表诚信。每个钱包都会显示一个状态指示器，让用户知道他们的代表表现如何。如果他们错过太多区块，系统将建议用户用新的代表替换他们。如果发现任何代表发布了无效区块，那么所有标准钱包在每次钱包进行进一步交易前都会要求选择一个新的代表。
- en: 4.   Attack resistance. For attack resistance, the power obtained by the top
    100 delegates is the same, namely, each delegate has an equal voting right. Thus,
    it is impossible to obtain more than 1 percent of the votes and concentrate the
    power on a single delegate. With only 100 delegates, it is not difficult to imagine
    an attacker who could perform “denial of service” attacks on the delegates whose
    turn is to generate the block. Fortunately, because the identity of each delegate
    is the public key instead of the IP address, the threat of this particular attack
    can be easily mitigated. This will make it more difficult to determine the attack
    target of DDoS (Distributed Denial of Service). The potential connections between
    delegates will make it more difficult to hinder the block-generating process.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 抗攻击能力。对于抗攻击能力，前100位代表的权力是相同的，即每个代表拥有相等的投票权。因此，不可能获得超过1%的票数并将权力集中在单一代表手中。由于只有100位代表，不难想象一个攻击者对轮到生成块的代表执行“服务拒绝”攻击。幸运的是，因为每个代表的身份是公钥而不是IP地址，这种特定攻击的威胁可以很容易地减轻。这使得难以确定DDoS（分布式服务拒绝）攻击的目标。代表之间的潜在联系使得更难以阻碍区块生成过程。
- en: '![images](../Images/97-1.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/97-1.jpg)'
- en: 'Fig. 2-82: The voting pattern of DPoS.'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-82：DPoS的投票模式。
- en: 'Advantages of DPoS: The number of nodes participating in verification and recording
    is significantly reduced, and second-level consensus verification is achieved.'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: DPoS的优势：参与验证和记录的节点数量显著减少，实现了二级共识验证。
- en: 'Disadvantages of DPoS: The entire consensus mechanism relies on tokens, but
    many commercial applications do not require tokens.'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: DPoS的缺点：整个共识机制依赖于代币，但许多商业应用并不需要代币。
- en: D. BETTING CONSENSUS
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: D. 投注共识
- en: Betting Consensus is a brand-new concept introduced by the consensus mechanism
    of next-generation Ethereum Casper, which belongs to PoS. Casper’s consensus is
    reached based on blocks instead of chains like PoS.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 投注共识是下一代以太坊Casper共识机制引入的一个全新的概念，属于PoS。Casper的共识是基于区块而不是链的PoS。
- en: 'To prevent verifiers from offering different bets in different fields, we have
    another simple but strict rule: if you bet the same numbers twice, or you submit
    a bet that Casper can’t process according to the protocol, you will lose all your
    deposits. This is how Casper differs from a traditional PoS punishment system.
    In this way, illegal nodes maliciously attacking can’t get transaction fees and
    will risk having their deposits confiscated.'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止验证者在不同的领域提供不同的投注，我们制定了另一个简单但严格的规则：如果你两次投注相同的数字，或者你提交的投注Casper根据协议无法处理，你会失去所有的存款。这就是Casper与传统PoS惩罚系统的不同之处。这样，恶意攻击的非法节点无法获得交易费用，并且有风险丧失他们的存款。
- en: 'The verifiers of Casper protocol should complete two activities: block generating
    and betting:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: Casper协议的验证者应完成两项活动：区块生成和投注：
- en: Block generating is a process independent from other events. Verifiers collect
    transactions, and when it’s their turn to generate a block, they generate the
    block, sign, and send it to the network. The betting is more complicated. Currently,
    Casper’s default verifier strategy is designed to imitate the Byzantine Fault
    Tolerance, to observe how other verifiers bet, take the value at the 33 percent
    point, and move a step farther to 0 or 1.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 区块生成是一个与其他事件无关的过程。验证者收集交易，当他们轮到生成区块时，他们生成区块、签名，并发送到网络。投注更为复杂。目前，Casper的默认验证者策略是设计来模仿拜占庭容错，观察其他验证者的投注，取33%点的值，再进一步移动到0或1。
- en: 'The client verifies the current situation with the following process: First,
    they download all the blocks and bets, then opinions are formed using the algorithm
    mentioned above but not published; they simply observe different heights in the
    sequence. If the chance of one block is over 0.5, they process it. Otherwise,
    they skip it. The situation after all blocks are processed is displayed as the
    “current situation.” The client can also give some objective opinions on the “final
    verification.” If the opinion by all blocks before height k is over 99.999 percent
    or below 0.0001 percent, the client can see that the first k clients are finally
    verified.'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端通过以下过程验证当前情况：首先，他们下载所有的区块和投注，然后使用上面提到但未发布的算法形成观点；他们仅仅观察序列中的不同高度。如果一个区块的机会超过0.5，他们处理它。否则，他们跳过它。所有区块处理后的情况被显示为“当前情况”。客户端还可以对“最终验证”给出一些客观意见。如果高度k之前的所有区块的意见超过99.999%或低于0.0001%，客户端可以看到前k个客户端最终被验证。
- en: E. RIPPLE CONSENSUS
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: E. RIPPLE CONSENSUS
- en: The Ripple Consensus algorithm enables a group of nodes to reach a consensus
    based on a special list of initial nodes. The special list of initial nodes is
    like a club. To accept a new member, 51 percent of the members of the club must
    pass it. The consensus follows the “51 percent power” of these core members, and
    outsiders have no influence. Since the club starts from centralization, it will
    always be centralized, and if it starts to corrupt, shareholders can do nothing.
    Like Bitcoin and Peercoin, the Ripple system separates shareholders from their
    voting rights, so it is more centralized than other systems.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: Ripple共识算法使得一组节点能够基于一组特殊的初始节点达成共识。这个特殊的初始节点列表就像一个俱乐部。要接受一个新成员，俱乐部51%的成员必须通过它。共识遵循这些核心成员的“51%的权力”，外部人士无法产生影响。由于俱乐部从集中化开始，它总是会是集中化的，如果它开始腐败，股东们无能为力。像比特币和
    Peercoin 一样，Ripple系统将股东与他们的投票权分离，因此它比其他系统更加集中化。
- en: '![images](../Images/99-1.jpg)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/99-1.jpg)'
- en: 'Fig. 2-83: Ripple Consensus.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-83：Ripple共识。
- en: F. POOL
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: F. 池
- en: 'Based on the traditional distributed consistency technique and data verification
    mechanism, Pool is the consensus mechanism widely used in the Bitcoin industry
    today. Its pros and cons are as follows:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 基于传统的分布式一致性技术和数据验证机制，池是当今比特币行业广泛使用的共识机制。它的优缺点如下：
- en: 'Advantages: It can work without tokens. Based on sophisticated distributed
    consistency algorithm (Pasox, Raft, etc.), it can achieve second-level consensus
    verification.'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 优点：它可以在没有代币的情况下工作。基于复杂的分布式一致性算法（Pasox、Raft等），它可以实现第二级共识验证。
- en: 'Disadvantages: The level of decentralization is weaker than Bitcoin and is
    more suitable for a centralized business pattern with various participants.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点：去中心化的程度不如比特币，更适合具有多种参与者的集中式业务模式。
- en: G. PRACTICAL BYZANTINE FAULT TOLERANCE
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: G. 实用拜占庭容错
- en: For distributed calculation, different computers try to reach consensus by exchanging
    information. Sometimes, the coordinator or some members in the system may exchange
    incorrect information due to system error. For a Byzantine Generals Problem, based
    on the numbers of the computers in error, there won’t be definite answers for
    a possible resolution, but there will be ways to verify the efficiency of a mechanism.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分布式计算，不同的计算机通过交换信息来达成共识。有时，协调者或系统中的某些成员可能由于系统错误而交换错误的信息。对于拜占庭将军问题，根据出错的计算机数量，可能不会有一个明确的解决方案，但会有验证机制效率的方法。
- en: '![images](../Images/100-1.jpg)'
  id: totrans-425
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/100-1.jpg)'
- en: 'Fig. 2-84: Byzantine Fault Tolerance.'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig. 2-84: 拜占庭容错。'
- en: 'The possible resolution: under the condition of N ≥ 3F + 1, consistency is
    achievable (N is the total number of computers; F is the total number of fault
    computers). After information is exchanged between computers, each computer lists
    all the information it gets, then the result obtained by most computers is taken
    as the resolution.'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 可能的解决方案：在N ≥ 3F + 1的条件下，可以实现一致性（N是计算机的总数；F是故障计算机的总数）。在计算机之间进行信息交换后，每台计算机列出它获得的所有信息，然后取大多数计算机得到的结果作为解决方案。
- en: Practical Byzantine Fault Tolerance (PBFT) was created by Castro and Liskov
    in 1999 and is the first widely applied Byzantine Fault Tolerance Algorithm. If
    2/3 of the nodes in the system function normally, the consistency can be ensured.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 实用拜占庭容错算法（PBFT）是由Castro和Liskov在1999年创建的，是第一个被广泛应用的拜占庭容错算法。如果系统中至少有2/3的节点正常运行，就可以保证一致性。
- en: 'The overall process of the practical Byzantine Fault Tolerance algorithm is
    as follows: The client sends a request to the masternode to invoke a service operation,
    such as “<REQUEST, o, t, c>,” where client c requests to execute operation o,
    and the timestamp t is used to guarantee the client’s request will only be executed
    once. Each message sent from the replica node to the client contains the current
    view number for the client to trace, so the current masternode number can be further
    deduced. The client sends a request to its own masternode via a P2P message, and
    then the masternode automatically broadcasts the request to all backup nodes.'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 整体实用拜占庭容错算法的流程如下：客户端向主节点发送请求以调用服务操作，例如“<REQUEST, o, t, c>”，其中客户端c请求执行操作o，时间戳t用于确保客户端的请求只被执行一次。从副本节点发送给客户端的每条消息都包含当前视图编号，以便客户端进行追踪，从而进一步推断出当前的主节点数量。客户端通过P2P消息向自己的主节点发送请求，然后主节点自动将请求广播给所有备份节点。
- en: View numbers are consecutively numbered integers. The masternode is calculated
    by the formula p = v mod | R|, where v is the view number, p is the copy number,
    and |R| is the number of replica sets.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 视图编号是连续编号的整数。主节点由公式p = v mod | R|计算得出，其中v是视图编号，p是副本号，|R|是副本集的数量。
- en: The response from the replica to the client is “<REPLY,v,t,c,i,r>,” where v
    is the view number, t is the time-stamp, i is the number of the replica, and r
    is the result of the request execution.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 副本向客户端的响应是“<REPLY,v,t,c,i,r>”，其中v是视图编号，t是时间戳，i是副本号，r是请求执行的结果。
- en: 'The masternode broadcasts the request to other replicas and then begins performing
    tasks in three stages:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 主节点将请求广播给其他副本，然后开始分三个阶段执行任务：
- en: 1.   Prepreparation stage. The masternode assigns a sequence number, n, to the
    received request and then sends a preprepared message to all backup nodes. The
    format of the prepared message is “<<PRE-PREPARE,v,n,d>,m>,” where v is the view
    number, m is the request message sent by the client, and d is the summary of the
    request message m.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 1.   预备阶段。主节点为接收到的请求分配一个序列号n，然后向所有备份节点发送预备消息。预备消息的格式为“<<PRE-PREPARE,v,n,d>,m>”，其中v是视图编号，m是客户端发送的请求消息，d是请求消息m的摘要。
- en: 2.   Preparation stage. If backup node i accepts the preprepared message, it
    enters the preparation stage. While preparing, the node sends a preparation message
    “<PREPARE,v,n,d,i>” to all replica nodes and writes the preprepared message and
    the preparation message in its own log.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 准备阶段。如果备份节点i接受预准备消息，它将进入准备阶段。在准备过程中，节点向所有副本节点发送一个准备消息“<PREPARE,v,n,d,i>”，并在自己的日志中记录预准备消息和准备消息。
- en: 3.   Confirmation stage. When the “(m, v, n, i)” condition is true, replica
    i broadcasts “<COM-MIT, v, n, D(m), i>” to other replica nodes and then enters
    the confirmation stage. All replicas execute the request and send the result back
    to the client. The client needs to wait for different replicas to send back the
    same result as the final result of the entire operation.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 确认阶段。当“(m, v, n, i)”条件为真时，副本i将“<COM-MIT, v, n, D(m), i>”广播给其他副本节点，然后进入确认阶段。所有副本执行请求并将结果返回给客户端。客户端需要等待不同的副本返回相同的最终结果作为整个操作的结果。
- en: If the client does not receive a reply by a certain time, the request will be
    broadcast to all replica nodes; if the request has already been processed at the
    replica node, the replica will resend the execution result to the client. If the
    request is not processed at the replica node, the replica node will forward the
    request to the masternode; if the masternode does not broadcast the request, then
    it is considered to be invalid. If there are enough replica nodes that think the
    masternode fails, a view change will be triggered.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端在一定时间内没有收到回复，请求将被广播给所有副本节点；如果在副本节点已经处理了请求，副本将重新将执行结果发送给客户端。如果请求在副本节点没有处理，副本节点将请求转发给主节点；如果主节点不广播请求，则认为它无效。如果有足够认为主节点失败的副本节点，将触发视图更改。
- en: '[Figure 2-85](#fig2_85) displays the normal execution process of the algorithm
    when an invalid masternode does not exist. In the figure, 0 is the masternode,
    replica 3 is the invalid node, and c is the client:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-85（[Figure 2-85](#fig2_85)）显示了一个无效主节点不存在的算法的正常执行过程。在图中，0是主节点，副本3是无效节点，c是客户端：
- en: '![images](../Images/103-1.jpg)'
  id: totrans-438
  prefs: []
  type: TYPE_IMG
  zh: '![images](../Images/103-1.jpg)'
- en: 'Fig. 2-85: The algorithm when a masternode is valid.'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-85：当一个主节点有效的算法。
- en: 'The practical Byzantine Fault Tolerance is a consensus mechanism that adopts
    “permitted voting and minority subordination” to elect leaders and keep books.
    This consensus mechanism allows Byzantine Fault Tolerance and the participation
    of strong supervisory nodes and has authority rating capability, higher performance,
    and lower energy consumption. During each round of voting, nodes in the entire
    network elect the leaders, allowing 33 percent of the nodes to do evil, namely,
    33 percent fault tolerance. Because it is suitable for the application scenario
    of the consortium Blockchain, the Practical Byzantine Fault Tolerance mechanism
    and its improved algorithm are currently the most widely used consensus algorithms
    for consortium Blockchain. The improved algorithm is optimized in the following
    ways: it modifies the requirements of the underlying network topology and uses
    P2P networks, it can adjust the number of nodes, and it reduces the number of
    messages used by the protocol.'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 实用的拜占庭容错是一种采用“许可投票和少数服从”来选举领导和保持账本的共识机制。该共识机制允许拜占庭容错和强大监督节点的参与，并具有权威评级能力、更高的性能和更低的能耗。在每一轮投票中，整个网络的节点选举领导者，允许33%的节点做坏事，即33%的容错。因为它适合于联盟区块链的应用场景，实用拜占庭容错机制及其改进算法目前是联盟区块链最广泛使用的共识算法。改进算法在以下方面进行了优化：它修改了底层网络拓扑的要求，并使用P2P网络，它可以调整节点数量，减少协议中使用的消息数量。
- en: H. DELEGATED BYZANTINE FAULT TOLERANCE
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: H. 委托拜占庭容错
- en: 'In April 2016, Antshares released a consensus algorithm white paper, describing
    a universal consensus mechanism—Delegated Byzantine Fault Tolerance—and proposing
    an improved Byzantine Fault Tolerance algorithm that can be applied to Blockchain
    systems. Based on the Practical Byzantine Fault Tolerance algorithm, the Delegated
    Byzantine Fault Tolerance algorithm offers the following improvements:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 2016年4月，Antshares发布了一份共识算法白皮书，描述了一种通用共识机制——委托拜占庭容错，并提出了一个可以应用于区块链系统的改进拜占庭容错算法。基于实用拜占庭容错算法，委托拜占庭容错算法提供了以下改进：
- en: 1.   Improves the request response pattern of the C/S (client/server) to the
    P2P network-suited equal nodes pattern.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 1.       改进了C/S（客户端/服务器）的请求响应模式，使之适合P2P网络的对等节点模式。
- en: 2.   Improves the static node participating in consensus into a consensus participation
    node that can access and withdraw dynamically.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 2.       将静态节点参与共识改进为可以动态访问和退出的共识参与节点。
- en: 3.   Designs and generates a voting system for nodes participating in consensus
    based on the proportion of equity ownership and decides the nodes participating
    in consensus by voting.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 3.       设计并生成一个基于股权比例的节点参与共识投票系统，并通过投票决定参与共识的节点。
- en: 4.   Introduces the digital certificates in Blockchain and solves the problem
    of verifying the accounting node’s authentic identity during the voting.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 4.       引入区块链中的数字证书，解决了在投票过程中验证会计节点真实身份的问题。
- en: 'Advantages of DBFT: Has professionalized bookkeepers, tolerance to any types
    of faults, multipeople cooperative bookkeeping, finality of each block, no forks,
    and reliable algorithm with strict mathematical proof.'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: DBFT的优点：有专业的记账员，对任何类型的错误都有容忍性，多人合作记账，每个区块的最终性，没有分叉，并且有严格的数学证明的可靠算法。
- en: 'Disadvantages of DBFT: When 1/3 or more of the bookkeepers stop working, the
    system will be unable to provide services. When 1/3 or more of the bookkeepers
    commit a crime, and the other bookkeepers are segmented into two Internet islands,
    the criminal bookkeepers can utilize the forks in the system, but leave cryptographic
    evidence.'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: DBFT的缺点：当1/3或更多的记账员停止工作时，系统将无法提供服务。当1/3或更多的记账员犯罪，并且其他记账员被分割成两个互联网岛屿时，犯罪记账员可以利用系统中的分叉，但留下加密证据。
- en: To sum up, the core of DBFT ensures the system’s finality to the maximum extent
    and makes Blockchain suitable for real-world financial applications.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，DBFT的核心最大限度地确保系统的最终性，并使区块链适用于现实世界的金融应用。
- en: I. PAXOS ALGORITHM
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: I. Paxos算法
- en: 'Paxos Algorithm is a traditional distributed consistency algorithm. It’s a
    consensus mechanism based on leader election: it has leader nodes with absolute
    authority, the participation of strong regulation nodes, high performance, and
    low resource consumption. All nodes usually have offline accessing mechanisms,
    but malicious nodes are not allowed during the election, so there is no fault
    tolerance.'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: Paxos算法是一种传统的分布式一致性算法。它是一种基于领导者选举的共识机制：它有具有绝对权威的领导者节点，有强大的监管节点参与，具有高性能和低资源消耗。所有节点通常都有离线访问机制，但在选举过程中恶意节点是不允许的，所以没有容错性。
- en: _____________
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: _________________
- en: '[1](#Bfn_1)     “How to explain Blockchain to your stupid roommate?” [EB/OL].
    (2016–08–08) [2017–05–18]. [http://mt.sohu.com/20160808/n463044051.shtml](http://mt.sohu.com/20160808/n463044051.shtml).'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '[1](#Bfn_1)       “如何向你的笨室友解释区块链？”[EB/OL]。(2016-08-08)[2017-05-18]。 [http://mt.sohu.com/20160808/n463044051.shtml](http://mt.sohu.com/20160808/n463044051.shtml)。'
- en: '[2](#Bfn_2)     YANG Xiaochen, ZHANG Ming, “Bitcoin: theory, characteristic
    and vision” [J], Financial Review, 2014(2).'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '[2](#Bfn_2)       杨晓晨，张明，“比特币：理论、特性与愿景”[J]，金融评论，2014(2)。'
- en: '[3](#Bfn_3)     TANG Wenjian, LV Wen, “How Blockchain redefine the world,”
    [EB/OL]. (2017–02–24) [2017–05–18]. [http://www.jianshu.com/p/89275ffca97b](http://www.jianshu.com/p/89275ffca97b).'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '[3](#Bfn_3)       唐文剑，吕文，“区块链如何重新定义世界，”[EB/OL]。(2017-02-24)[2017-05-18]。 [http://www.jianshu.com/p/89275ffca97b](http://www.jianshu.com/p/89275ffca97b)。'
- en: '[4](#Bfn_4)     Mosquito eats frog (nickname), “Public and Private Key” [EB/OL].
    (2013–01–09) [2017–05–18]. [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html).'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '[4](#Bfn_4)       蚊子吃青蛙（昵称），“公钥与私钥”[EB/OL]。(2013-01-09)[2017-05-18]。 [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html)。'
- en: '[5](#Bfn_5)     Mosquito eats frog (nickname), “Public and Private Key” [EB/OL].
    (2013–01–09) [2017–05–18]. [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html).'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '[5](#Bfn_5)       蚊子吃青蛙（昵称），“公钥与私钥”[EB/OL]。(2013-01-09)[2017-05-18]。 [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html)。'
- en: '[6](#Bfn_6)     BTSX Investment White Paper V1.1 [EB/OL]. (2014–09–16) [2017–05–18].[http://www.docin.com/p–924681871.html](http://www.docin.com/p–924681871.html).'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '[6](#Bfn_6)       BTSX投资白皮书V1.1[EB/OL]。(2014-09-16)[2017-05-18]。 [http://www.docin.com/p–924681871.html](http://www.docin.com/p–924681871.html)。'
- en: '[7](#Bfn_7)     “Bitcoin technical note: what is consensus, fork, and compatibility?”
    [EB/OL]. (2016–10–11) [2017–05–18]. [http://business.sohu.com/20161011/n469963760.shtml](http://business.sohu.com/20161011/n469963760.shtml).'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '[7](#Bfn_7)     “比特币技术笔记：什么是共识、分叉和兼容性？” [EB/OL]. (2016–10–11) [2017–05–18].
    [http://business.sohu.com/20161011/n469963760.shtml](http://business.sohu.com/20161011/n469963760.shtml).'
- en: '[8](#Bfn_8)     “Hard fork scaling has the risk of split while soft fork does
    not” [EB/OL]. (2016–10–09) [2017–05–18]. [http://8btc.com/thread-40509-1-1.html](http://8btc.com/thread-40509-1-1.html).'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '[8](#Bfn_8)     “硬分叉扩容存在分裂风险而软分叉则没有” [EB/OL]. (2016–10–09) [2017–05–18]. [http://8btc.com/thread-40509-1-1.html](http://8btc.com/thread-40509-1-1.html).'
- en: '[9](#Bfn_9)     “The growing pains of Bitcoin: solution to the problem of congestion
    or thoroughly split?” [EB/OL]. (2017–03–21) [2017–05–18]. [http://forex.cngold.org/c/2017–03–21/c4886602_2.html](http://forex.cngold.org/c/2017–03–21/c4886602_2.html).'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '[9](#Bfn_9)     “比特币的成长之痛：拥堵问题的解决方案还是彻底分裂？” [EB/OL]. (2017–03–21) [2017–05–18].
    [http://forex.cngold.org/c/2017–03–21/c4886602_2.html](http://forex.cngold.org/c/2017–03–21/c4886602_2.html).'
- en: '[10](#Bfn_10)   “A comprehensive introduction to Blockchain: public Blockchain
    vs private Blockchain” [EB/OL]. (2016–08–09) [2017–05–18]. [http://www.weiyangx.com/199778.html](http://www.weiyangx.com/199778.html).'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[10](#Bfn_10)   “区块链全面介绍：公共区块链与私人区块链” [EB/OL]. (2016–08–09) [2017–05–18]. [http://www.weiyangx.com/199778.html](http://www.weiyangx.com/199778.html).'
- en: '[11](#Bfn_11)   Huang Butian. “Forms of Blockchain.” [EB/OL]. [2017–05–18].
    [https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html](https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html).'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '[11](#Bfn_11)   黄 buttian. “区块链的形式.” [EB/OL]. [2017–05–18]. [https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html](https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html).'
- en: '[12](#Bfn_12)   “Blockchain comes, bound to overturn our future life” [EB/OL].
    (2016–04–20) [2017–05–18]. [http://mt.sohu.com/20160420/n445253975.shtml](http://mt.sohu.com/20160420/n445253975.shtml).'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '[12](#Bfn_12)   “区块链来了，注定要颠覆我们的未来生活” [EB/OL]. (2016–04–20) [2017–05–18]. [http://mt.sohu.com/20160420/n445253975.shtml](http://mt.sohu.com/20160420/n445253975.shtml).'
- en: '[13](#Bfn_13)   Data Sunshine, “On Blockchain from the Technical Perspective”
    [EB/OL]. (2016–10–17) [2017–05–18]. [http://sanwen.net/a/unmoipo.html](http://sanwen.net/a/unmoipo.html).'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '[13](#Bfn_13)   Data Sunshine, “从技术角度谈区块链” [EB/OL]. (2016–10–17) [2017–05–18].
    [http://sanwen.net/a/unmoipo.html](http://sanwen.net/a/unmoipo.html).'
