- en: '2.'
  prefs: []
  type: TYPE_NORMAL
- en: THE THEORY
  prefs: []
  type: TYPE_NORMAL
- en: Consensus Creates Coded Trust
  prefs: []
  type: TYPE_NORMAL
- en: When I went back home on Spring Festival holiday last year, as a “festival routine,”
    I was overwhelmed by all kinds of questions from my curious elder relatives. For
    example, What are you working on? When are you going to get married? How much
    can you earn every month? Usually, I can satisfy them with good answers, but this
    time, things were a little bit different. When I told them that I worked in a
    Blockchain technology company, 80 percent of them continued to ask, “what is Blockchain?”
  prefs: []
  type: TYPE_NORMAL
- en: I attempted to quote the definition of Blockchain on Baidu or Google and tried
    to explain to them the cool things we were doing with Blockchain. However, they
    responded with a more curious and confused facial expression. “Why can’t you put
    it more simply?”
  prefs: []
  type: TYPE_NORMAL
- en: 'Then I realized that ordinary people can’t comprehend the professional and
    rigorous definition on Baidu or in academic journals. I turned to Blog and Zhihu
    (the Chinese Quora) to try to find a simplified explanation. Among many articles
    on this topic, two interesting ones attracted my attention: one is the most-liked
    response under the hot topic “how to explain Blockchain to your stupid roommate”;
    the other is “Consensus on Blockchain,” written by Zhang Tongxie on Sina’s blog
    channel. In the following part of this book, I quote some of their opinions and
    attempt to adopt their way of explaining—by telling stories—to elaborate on the
    definition of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: WHAT IS BLOCKCHAIN?
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain and Bikers
  prefs: []
  type: TYPE_NORMAL
- en: In 2006, financial giants like JP Morgan, Citigroup, Goldman Sachs, and NASDAQ
    all expressed their keen interest in Blockchain technology. What is this Blockchain
    technology (a.k.a distributed ledger)? We shall start with another story.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/26-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-1: Bikers on Wall Street.'
  prefs: []
  type: TYPE_NORMAL
- en: Before NASDAQ was founded, people use bikes laden with bonds around Wall Street
    for bond clearing and settlement. As businesses grew, bikes could not handle the
    increasing transactions. In the 1960s, Wall Street traded only four days, each
    day, for four hours, to help settlement keep up with trade volumes.
  prefs: []
  type: TYPE_NORMAL
- en: This practice could not continue. Bikes can never outperform computers. In 1971,
    people gathered together searching for solutions. DTC clearing system was then
    proposed. Under this solution, all transactions should be done with brokers included
    in this system, which is still adopted by NASDAQ. Obviously, this solution just
    replaced the bike with the “car.” In many TV series, the country or the family
    is often trapped in chaos due to the death of the emperor or the head of the family.
    The cause of the plots mentioned above is that centralization is not enduring.
    When the number of transactions and brokers reaches a certain level, the system
    might be paralyzed or even crash.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/27-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-2: Centralized DTC clearing system.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain is a distrusted ledger where every node displays and maintains the
    central ledger. The ledger cannot be tampered with unless someone controlled over
    half of the nodes. Take a simple example: You keep your family ledger and manage
    your parents’ salary. If you want to buy some snacks, the ledger loophole is dozens
    of yuan. If you want to buy a cell phone, the loophole is thousands of yuan. This
    is just an example; I believe many of us in childhood desired pocket money from
    parents.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/28-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-3: Centralized family ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: With a distributed ledger, the above scenario will never come true. Everyone
    in the family participates in bookkeeping, and everyone can check the central
    ledger. No one can falsify the ledger. There is no money for your dad’s cigarettes
    and your snacks.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain, in essence, is a decentralized and distributed ledger. It involves
    a set of cryptography-based data blocks. Each block contains many pieces of information
    confirmed by Bitcoin’s transaction network.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/29-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-4: Distributed family ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: Centralization and Decentralization
  prefs: []
  type: TYPE_NORMAL
- en: 'As we mentioned above, Blockchain is the decentralized distributed ledger.
    What does “decentralized” mean? First, let’s picture in mind this situation: what
    will you do if you are buying a book online?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Place an order and transfer a sum of money to Alipay.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Alipay confirms receipt of the money and informs the vendor to deliver
    the book you ordered.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: The vendor receives the notification from Alipay and starts the delivery
    process.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: You receive the book and confirm receipt.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Alipay receives your confirmation and transfers the money you paid
    for the book to the vendor.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/30-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-5: Decentralized transaction process.'
  prefs: []
  type: TYPE_NORMAL
- en: In the illustration above we can see that, even though the transaction happens
    between you and the vendor, Alipay is the true center of it. Therefore, the whole
    transaction process could fail if something goes wrong with Alipay, such as a
    meteor crashing all the servers of Alipay, or a new round of global economic crises
    decimating Alibaba Group. Neither you nor the vendor could prove the transaction,
    which will lead to a dead end.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/30-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-6: Destruction of the central node leads to the failure of the whole
    transaction.'
  prefs: []
  type: TYPE_NORMAL
- en: A Virtual City Running as Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: 'To illustrate how Blockchain works clearly, we may as well propose an extreme
    situation based on the simplification of the decentralized and distributed construction.
    Assume that we have a decentralized city with five residents—we name them A, B,
    C, D, and E. Here is what they do when they want to borrow money from others:'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/31-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-7: Bookkeeping of a decentralized city.'
  prefs: []
  type: TYPE_NORMAL
- en: Suppose resident B borrows one yuan from resident A, and A informs other residents
    by shouting, “I am A, and I just lent one yuan to B.” Subsequently, B will say
    loudly, “I am B, I just borrowed one yuan from A.” When other residents—C, D,
    and E—hear what they say, they write down on their ledgers, “dd/mm/yy, A lends
    one yuan to B.”
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/32-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-8: The impossibility of tampering with the distributed ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: In this extremely simplified model of a small city with only five residents,
    a distributed system is actually established in the city where no bank or Alipay
    is needed, which means that it works without a trusted relationship or credible
    organization. When every individual in this distributed system keeps their own
    ledger, it will be impossible to tamper with the records. Suppose B changes his
    mind and denies that he has borrowed one yuan from A? Then C, D, and E will testify
    on behalf of A using the same record on their ledgers—“dd/mm/yy, A lends one yuan
    to B.”
  prefs: []
  type: TYPE_NORMAL
- en: Whether you noticed it or not, in this case, the money transferred from A to
    B doesn’t really matter, because it can be replaced by any other concept of value
    that gets admitted by all people within the community. For example, resident A
    says, “I have created a Balala engergy,” and when others hear that, they will
    record that A owns a Balala energy, even though they do not even know what the
    hell a Balala energy is. What next? Resident A can then say that “I transferred
    one piece of Balala energy to B.” When all residents in the city, including B,
    C, D, and E validate the transaction, then this transaction will become officially
    valid.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/33-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-9: The circulation of Balala energy.'
  prefs: []
  type: TYPE_NORMAL
- en: A Few Problems in Small Cities
  prefs: []
  type: TYPE_NORMAL
- en: 'Certainly, the Blockchain world will not be that simple. It also has other
    rules and restrictions. Let’s first address the following issues:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem One: Why bother keeping a record?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Just because you shout to the sky, will others be obligated to help you keep
    a record? Does their time cost nothing? Do their notebooks cost nothing? So, to
    fairly ask others to help me with bookkeeping, I added a new rule. I decided to
    reward the first person who heard me shout and recorded it in his notebook. The
    reward mechanism is also straightforward: the first one who heard me shout and
    recorded it can get a Balala energy reward. The Balala energy is not given to
    you; instead, it is the remuneration of your labor, just like earning money by
    working. You help me with bookkeeping, and the entire system will reward you.
    The requirements are as follows: First of all, you have to hear my shout and take
    it down before anyone else; after recording, you must immediately inform the whole
    city that you have finished recording this sentence and that neither you nor they
    have any use in rerecording it. This way, others will not try to profit by recording
    it themselves. In the meantime, you have to do one more thing, namely, adding
    a unique number to your record before calling it out along with the number, which
    enables the next person to continue with this record and the unique number.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/34-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-10: The reward for bookkeeping.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When this new rule comes into operation, there must be people who, in order
    to get the Barrara energy, begin to hold their breath and listen to the shouts
    around them only to be able to be the first to take down a new record. Readers
    who know a little about the Blockchain might come up with the term “Bitcoin mining.”
    That’s right. This is a simple explanation of Bitcoin mining. On the topic of
    Bitcoin mining, a user of Zhihu named “Linglongxieseng” once mentioned a more
    vivid example in an article. The example is roughly this: when single men are
    looking for girlfriends, “national mother-in-law” would say something along the
    lines of, “I have a lot of beautiful and cute daughters who have pretty skin.
    If you can solve our troublesome problem, I will offer the WeChat number of one
    of them.”'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/35-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-11: The Universal “Troublesome Problem” of the “Mother-in-law.”'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/36-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-12: The reward for solving problems.'
  prefs: []
  type: TYPE_NORMAL
- en: As a result, single men compete feverishly with one another, eager to solve
    the problem. As long as one of them solves a problem, he will immediately declare
    to the world proudly and demonstrate to everyone that the girl’s WeChat number
    is his, persuading others to give up. Although the other single men have already
    set out, they are not fast enough and therefore have no choice but to solve the
    next problem at once.[1](#Afn_1)
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, the single lucky man who successfully solved the problem does
    not need to pay one or two hundred thousand yuan to pay for a bride; instead,
    the “national mother-in-law,” conquered by his talents, would give him a vast
    fortune as a dowry, that is, the reward of Bitcoin in Bitcoin mining.
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem Two: How to Deal With Forking?'
  prefs: []
  type: TYPE_NORMAL
- en: We cite the description posted on Zhihu (the Chinese version of Quora) by the
    user, “Wangle-LaiW3n,” in this section. In a large city, the problem will arise
    that B and C finish their recording and both of them yell to the sky at the same
    time, “The Balala Energy number 89757 belongs to me.” However, the city is so
    large that some people claim that the Balala Energy number 89757 belongs to B,
    while others believe that it belongs to C. Nonetheless, the single Balala Energy
    number 89757 can be acquired by only one person. Therefore, how can we resolve
    the problem? Is it possible for each person to own half of the Balala Energy?
    Apparently, it is not acceptable. In this event, we will tackle this problem in
    an extremely primitive and simple way that lets the long information chain decide.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/37-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-13: How can we deal with forking?'
  prefs: []
  type: TYPE_NORMAL
- en: 'If there are no restrictions, the incident will develop as follows: some people
    believe that the Energy belongs to B, and they start adding to the record after
    hearing the claim. Therefore, all their subsequent work will be done on the basis
    of the fact that B owns the Balala Energy number 89757\. With the passing on of
    the information, the information chain will grow longer and longer. While for
    the other people who believe that C claims the ownership at first, the result
    is much the same.'
  prefs: []
  type: TYPE_NORMAL
- en: The problem becomes exacerbated as the single entire information chain in a
    carefully numbered sequence diverts into two branches after B and C yell out their
    claim for the 89757 Balala Energy. If the problem cannot be solved immediately,
    each person will acquire his or her own version of the information, and no one
    will be able to figure out which is correct.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/38-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-14: Every time, the rules for recording are extremely intricate.'
  prefs: []
  type: TYPE_NORMAL
- en: To solve the problem, the city adds new rules to the Blockchain. The record
    must be written in the top grid, and the distance of 0.89757 millimeters between
    the center of the record and the upper line of the matts should be guaranteed.
    Therefore, every person has to write after determining the right place with the
    help of ruler, which is highly difficult. The record takes each person five minutes
    to finish, and the time for taking down the sentence of claim differs from each
    other. Hence, others who are writing the sentence will stop and begin another
    line that “the sentence is written by XYZ and the number of it is XXX” when someone
    else has yelled out, “I have finished. The sentence is written by XYZ.”
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem Three: Double Spending'
  prefs: []
  type: TYPE_NORMAL
- en: Double spending refers to the phenomenon of the same digital cash being used
    twice in the same transaction.
  prefs: []
  type: TYPE_NORMAL
- en: If I yell to B and C at the same time, “I give you a Balala Energy,” what can
    I do with the Balala Energy? There is only one Balala Energy, so how can I make
    sure that the single Balala Energy is used only once in the real transaction?
  prefs: []
  type: TYPE_NORMAL
- en: 'Take Bitcoin as an example. Satoshi Nakamoto clarified in the fifth section
    of the Bitcoin White Paper that the Bitcoin network runs as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   New transactions are broadcast to the network.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Each node brings the received transaction information into a block.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Other nodes will recognize the validity of the block when, and only when,
    all the transactions involved in the block are valid and appear for the first
    time.
  prefs: []
  type: TYPE_NORMAL
- en: 4.   Other nodes contend that they accept the block by following the end of
    the block and creating a new block to extend the information chain, considering
    the random hash of the block as the random hash of the new block.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, timestamping has been added to the transaction data of Bitcoin
    since the beginning of the transaction, with the confirmation finished when the
    transaction data are packaged into a block. After confirming for six consecutive
    times, the transaction becomes irreversible. For Bitcoin, each confirmation is
    required to “solve an intricate problem.” That is to say, every confirmation takes
    a certain amount of time.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/40-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-15: Irreversibility after six confirmations.'
  prefs: []
  type: TYPE_NORMAL
- en: In this case, when I try to reuse the fund to pay for the transaction, it is
    nearly impossible for me to realize the confirmation of two deals at the same
    time because of the long time that is required by the confirmation. And the second
    deal cannot be confirmed after the first deal is confirmed as valid. The record
    of Blockchain throughout the network can be achieved without the problem of double
    spending on the condition that an agreement is reached across the entire network.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/41-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-16: Double spending will not happen.'
  prefs: []
  type: TYPE_NORMAL
- en: HOW DOES BLOCKCHAIN WORK?
  prefs: []
  type: TYPE_NORMAL
- en: The Core Concept of Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: Before explaining the working principles of Blockchain, let us first make a
    brief introduction to several core concepts involved in Blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: A. The Block
  prefs: []
  type: TYPE_NORMAL
- en: A block, as a basic structural element of Blockchain, consists of a block header
    containing metadata, and a block body containing transaction data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The block header contains three sets of metadata:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   Used to connect front blocks and index hash value data from the parent
    block;
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Mining difficulty, Nonce (random number, a counter used for workload proof
    algorithm), timestamp;
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Can summarize and quickly sum up Merkle root data of all transaction data
    in the check block.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/42-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-17: The structure of a block header.'
  prefs: []
  type: TYPE_NORMAL
- en: Every ten minutes, one block can be created in the Blockchain system, which
    includes all the transactions’ information that took place across the network
    during that time. Each block also contains the ID (identification code) of the
    previous block, which allows each block to find its previous node so that a complete
    chain of transactions is formed. Since its inception, the whole network has formed
    only one master blockchain.[2](#Afn_2)
  prefs: []
  type: TYPE_NORMAL
- en: B. Hash Algorithm
  prefs: []
  type: TYPE_NORMAL
- en: Hash algorithm is a one-way password mechanism in the Blockchain to ensure transaction
    information is not compromised. After receiving a plaintext, Hash algorithm converts
    it into a shorter length and fixed-sizes hash data in an irreversible way.
  prefs: []
  type: TYPE_NORMAL
- en: 'It has two characteristics:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   The encryption process is irreversible, which means that we cannot reverse
    the original plaintext by outputting the hash data.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Entering the plain text and outputting hash data correspond with each other,
    which means that any change in the input information will inevitably lead to changes
    in the final output of the hash data.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/43-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-18: Two characteristics of the hash algorithm figure.'
  prefs: []
  type: TYPE_NORMAL
- en: In Blockchain, block encryption is usually performed using the SHA-256 (Secure
    Hash Algorithm), which has an input length of 256 bits and outputs a string of
    random hash data of 32-bytes.[3](#Afn_3)
  prefs: []
  type: TYPE_NORMAL
- en: The Blockchain encrypts transaction information in a transaction block using
    Hash algorithms and compresses the message into a hash string of numbers and letters.
    The hash value of Blockchain can uniquely and accurately identify a block. Any
    node in Blockchain can obtain the hash value of this block through a simple hash
    calculation, and the calculated hash value does not change, which means that the
    information in the block has remained uncompromised.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/44-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-19: Hash algorithm in Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: C. The Public Key and Private Key
  prefs: []
  type: TYPE_NORMAL
- en: On the subject of Blockchain, we often hear the expressions public key and private
    key. These are commonly known as asymmetric encryption, which is an improvement
    over the previous symmetric encryption (using the username and password). We use
    the e-mail encryption model to briefly introduce the public key, which is for
    everyone to use. You can publish by e-mail and let others download through the
    site. In fact, the public key is used to encrypt/verify the seal. The private
    key belongs to you only, and you must be very careful to keep it, preferably with
    a password. The private key is used to decrypt/sign and is owned by the individual.[4](#Afn_4)
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/45-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-20: Public and private keys in Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: In the Bitcoin system, the private key is essentially an array of 32 bytes.
    Both the public key and the address are generated based on the private key. With
    the private key, the public key and address can be generated, and the Bitcoin
    on the corresponding address can be spent. To spend via Bitcoin using a private
    key is to sign the unspent transactions to which it corresponds.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/46-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-21: Using the public key and private key to complete a transaction.'
  prefs: []
  type: TYPE_NORMAL
- en: In Blockchain, the public key and the private key are used for identity identification.
    Let’s assume that there are two people in Blockchain, Tom and Jerry. If Tom wants
    to prove that he is really himself, he only needs to use the private key to sign
    the file and send it to Jerry. And then Jerry uses the public key to verify the
    signature of the file. If the verification succeeds, it proves that this file
    must be encrypted by Tom with a private key. As Tom’s private key can only be
    held by Tom, it can verify that Tom is really Tom. In the Blockchain system, the
    public key and the private key can also ensure the security of peer-to-peer information
    delivery in distributed networks. In the Blockchain information transfer, encryption
    and decryption of both public and private keys of information delivery are often
    unpaired.
  prefs: []
  type: TYPE_NORMAL
- en: For senders, the private key is used to sign the information, and the information
    receiver’s public key is used to encrypt the information. For the information
    receiver, the sender’s public key is used to verify the sender’s identity, and
    the private key is used to decrypt the encrypted message.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/47-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-22: Timestamp in Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: D. The Timestamp
  prefs: []
  type: TYPE_NORMAL
- en: The timestamp in Blockchain exists in the block from the moment the block is
    generated. It corresponds to the authentication of each transaction, proving its
    authenticity. Timestamps are written directly in Blockchain, and the blocks that
    have been generated in Blockchain cannot be tampered with, because once tampered
    with, the generated hash value changes and becomes an invalid datum. Each timestamp
    will also include the previous timestamp in its random hash. This process is repeated,
    sequentially linked, and finally produces a complete chain.
  prefs: []
  type: TYPE_NORMAL
- en: E. Merkle Tree Structure
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain uses the Merkle tree’s data structure to store the values of all
    the leaf nodes and uses that as a basis for generating a uniform hash value. Merkle
    tree leaf nodes store hash value of data information, while non-leaf nodes store
    hash value of the combination of all leaf nodes below them.[5](#Afn_5)
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/48-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-23: Merkle tree structure in Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, the change of any one datum in the block will lead to the change
    of the Merkle tree structure. Merkle tree structure can significantly reduce the
    amount of data computation in the transaction information verification comparison,
    for all we have to do is to validate the uniform hash value generated by the Merkle
    tree structure.
  prefs: []
  type: TYPE_NORMAL
- en: When speaking of the Bitcoin virus, we have talked about several core concepts
    and definitions of Blockchain, but how does it work? To solve this problem, we
    have to start talking about Bitcoin, at which point many people’s first reaction
    is to bring up Bitcoin virus. To approach the topic of the Bitcoin virus incident,
    we must first talk about what exactly Bitcoin is and its characteristics, describing
    what the whole world knows. Remember the fear of being dominated by Bitcoins?
  prefs: []
  type: TYPE_NORMAL
- en: On that day, when you woke up in the morning, you found an ugly red frame pop
    up on the screen. You were so excited because, finally, you did not need to write
    essays.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/49-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-24: Bitcoin virus invasion.'
  prefs: []
  type: TYPE_NORMAL
- en: On May 12, 2017, a trivial incident occurred online. Documents in many schools
    and hospitals were locked up by a ransomware worm called “EternalBlue” (also known
    as WannaCry). It stated that if you want to see information, you need to pay.
    Not too much, 300 Bitcoins. At first glance, someone may think that it is only
    300, so few. Actually, the price of a Bitcoin is almost equal to 10,000 Chinese
    yuan in China, because the Bitcoin platform is under regulation in China and therefore
    cannot be withdrawn. The price in other countries is even higher. Of course, for
    individual users, it is not necessary to give so much money; after all, not everyone
    has over 300 million yuan.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/50-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-25: Bitcoins are required to unlock.'
  prefs: []
  type: TYPE_NORMAL
- en: Hackers want everyone to pay in Bitcoins, but that is not really the problem
    with Bitcoin. Bitcoin is a coin, lying quietly aside, waking up in the morning
    to find itself in the headlines. Till May 16, 2017, more than 300,000 users in
    over 150 countries have been “persecuted.” Moreover, it is said that the “EternalBlue”
    virus has been upgraded to version 2.0, which is not limited by the domain name,
    with higher dissemination.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/51-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-26: “EternalBlue.”'
  prefs: []
  type: TYPE_NORMAL
- en: So, what is the Bitcoin virus? It can be regarded as a magical virus, a mixture
    of two things—the encryption algorithm blackmail virus and the “EternalBlue” hacking
    tool. The “EternalBlue” hacking tool is responsible for entering people’s computers
    without a click, and then the encryption algorithm blackmail virus encrypts your
    files before blackmail. Where does the Bitcoin virus come from? The encryption
    algorithm blackmail virus is actually an “old friend.” Cryptolocker, the world’s
    first recorded ransomware, was born in 1989 as a program that uses cryptographic
    algorithms to blackmail money. The virus maker was apprehended in a few days.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/51-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-27: The maker of the Cryptolocker virus was caught.'
  prefs: []
  type: TYPE_NORMAL
- en: In fact, Cryptolocker is very simple to solve at the beginning, because it uses
    a symmetric encryption algorithm, which is cracked easily by a reverse program.
    However, the ransomware virus, like Wallet and Onion, currently uses an asymmetric
    encryption algorithm. The encryption and decryption processes of asymmetric encryption
    algorithm use two different keys, so simply reversing the program is not feasible,
    which we will explain in detail later. However, this time the hacker not only
    improved the ransomware worm, but also equipped it with a “good companion”—the
    “EternalBlue” hacking tool—which can directly occupy your computer without your
    clicking on any link. There is also the beautiful legend of the “EternalBlue”
    virus, which is said to have been used by the National Security Agency to steal
    information from other countries and is in the “arsenal of the United States.”
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/52-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-28: The irreversible charateristics of asymmetric cryptographic algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: The U.S. National Security Agency has a hacker organization called “Equation
    Organization,” which is responsible for classified works for the U.S. government
    that cannot be cracked by reverse programs.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/53-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-29: The Legend of the “U.S. Arsenal.”'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/53-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-30: The Legend of the “Shadow Brokers.”'
  prefs: []
  type: TYPE_NORMAL
- en: Later, the organization became known because of the world-famous “Stuxnet” incident
    in the Iran nuclear test and “PRISM” incidents. Subsequently, a hacker group called
    “Shadow Brokers” cracked the “arsenal of the United States.” They held auctions
    online, selling these “weapons” with money, but no one was interested. Then, they
    launched crowdfunding, wanting to make a profit from these “weapons,” but still
    no one paid attention. Subsequently, on April 14, 2017, they released the “weapons”
    directly. Since then, the “EternalBlue” hacking tool and the encryption algorithm
    blackmail virus became “lethal weapons.”
  prefs: []
  type: TYPE_NORMAL
- en: Indeed, this is just a beautiful legend, and the NSA did not admit it. Therefore,
    there are differing opinions about where “EternalBlue” comes from, and there is
    no practical proof. When can the virus be cracked? First of all, the “EternalBlue”
    hacking tool attacks Windows (Microsoft’s operating system) loopholes, which means
    that as long as you update with Windows patches and turn on the active defense
    of the firewall, this tool does not have the soil to survive.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/54-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-31: Upgrading the firewall.'
  prefs: []
  type: TYPE_NORMAL
- en: However, Windows always has new loopholes. Maybe the hacker equips the virus
    with a tool to attack a new loophole, giving birth to a variety of viruses, such
    as “EternalRed,” “EternalYellow,” or the like. As we know, ransomware virus uses
    asymmetric encryption algorithms for encryption. Its most prominent feature is
    that it cannot be tampered with or reversed. The encryption and decryption processes
    use two different keys.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/55-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-32: Hard to crack an asymmetric encryption algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/55-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-33: Standing on the shoulders of giants.'
  prefs: []
  type: TYPE_NORMAL
- en: Now, the computer cannot complete the amount of back-calculation required, because
    the cost is too high. Thus, the hottest Blockchain technology in the world is
    using asymmetric encryption algorithms. That is to say, hackers design passwords
    on the basis of the most advanced technology of the times. It is not easy for
    us to crack them.
  prefs: []
  type: TYPE_NORMAL
- en: Recall how the well-known “Panda burning incense” virus was finally cracked.
    The hacker was caught and forced to write a program to crack it. This outcome
    remains the norm. The most likely solution is to catch the hacker and force him
    or her to hand over the key. After we enter the key, we can unblock it.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/56-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-34: The hacker hands over the key.'
  prefs: []
  type: TYPE_NORMAL
- en: When and how will the Bitcoin hacker be caught? These questions involve a third
    question, which is why do hackers require payment in Bitcoins? The answer is that
    it is easy to get away with because of the anonymity of Bitcoin. Bitcoin is an
    online virtual currency that can circulate with anonymity, which makes it easier
    for hackers to hide their identity. You do not need to know who the other person
    is; a Bitcoin address alone allows you to realize point-to-point transfer. Another
    reason hackers choose Bitcoin is that Bitcoins are recognized around the world
    and can be circulated globally. Bitcoin accounts for the largest share of digital
    money. It has many “fans” around the world. Many countries recognize the legal
    status of Bitcoin, and some large companies even accept Bitcoin payments.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/57-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-35: Bitcoin’s internationality.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/57-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-36: Bitcoin transaction records are publicly available.'
  prefs: []
  type: TYPE_NORMAL
- en: However, it is not so easy for hackers to escape from the arm of the law because
    one of the characteristics of Bitcoin is that it can’t be compromised. All records
    cannot be tampered with and are publicly available. Once the address released
    by the hacker receives Bitcoins, a record is added to the ledger and everyone’s
    ledger updates simultaneously. Everyone can find this record. The transfer of
    this address and cash withdrawal records are also verifiable. As long as the hacker
    conducts operations requiring interaction with realities such as withdrawal, it
    will undoubtedly reveal clues.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, in most cases, Bitcoin business is not 100 percent anonymous. Transferring
    Bitcoins is similar to an author publishing his work under a pen name. If an author’s
    pseudonym is associated with his identity, anything he has ever written is also
    associated. For individuals, the anonymity of Bitcoin is related to your wallet
    that receives Bitcoins. Every transaction involving this address is permanently
    stored in this Blockchain. If your address is related to your real identity, then
    every transaction will be related to you. Many countries are now monitoring the
    Bitcoin trading platform, and transactions require multiple real-name authentications.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/58-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-37: Bitcoin is not 100 percent anonymous.'
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, as long as any clue is found about the true information concerning,
    and consequently the identity of, the hacker, then he or she will be very likely
    to get caught.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/59-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-38: Multiple real-name authentication.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/59-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-39: Solution one: searching.'
  prefs: []
  type: TYPE_NORMAL
- en: HOW TO PREVENT THE “ETERNALBLUE” VIRUS
  prefs: []
  type: TYPE_NORMAL
- en: 'Solution One: Searching'
  prefs: []
  type: TYPE_NORMAL
- en: Now, open any of your browsers, input “how to prevent Bitcoin virus” in the
    input box, and you will see overwhelming solutions pop out. You can click any
    one of them to read; they all read the same. You simply cut off the Internet,
    set a firewall, block port 445, and update the Windows patches. I recommend that
    you get into the habit of opening up your firewall in the long run, though the
    Windows firewall pops out from time to time. Security is paramount.
  prefs: []
  type: TYPE_NORMAL
- en: 'Solution Two: Fighting Fire with Fire'
  prefs: []
  type: TYPE_NORMAL
- en: 'What should we do if it happens again? You can try this: What the hacker tries
    to encrypt are our important files, the suffixes of which are doc (documents),
    xls (spreadsheets), ppt (presentations), psd (image files), etc. The hacker will
    not encrypt the videos and seed files in some unpopular formats. Therefore, in
    addition to backing up important files a few more times, we can also make them
    into compression packages and change them into an unpopular format like .modv.
    Of course, this cannot make the important files entirely immune to destruction.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/60-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-40: Solution two: fire with fire.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Solution Three: Rob His Job'
  prefs: []
  type: TYPE_NORMAL
- en: 'The best part of this move is that you can get the hackers out of the way.
    This applies to programmers who can write a “virus program” with asymmetric encryption
    to encrypt all the files in personal computers. They can input the password each
    time before seeing the files, since the password is known only by themselves.
    It is a little messy, but it works: “It is mine; you can find no way to get to
    it.”'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/61-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-41: Solution three: rob his job.'
  prefs: []
  type: TYPE_NORMAL
- en: The last thing to remind you of is that in China, Bitcoins cannot be withdrawn.
    Therefore, you should consider whether to pay ransoms prudently. After all, we
    cannot ensure there is no second invasion after the payment. Facing the virus,
    we should keep calm.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/61-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-42: Failure to unlock after paying the ransom.'
  prefs: []
  type: TYPE_NORMAL
- en: Since I work in the Blockchain and Bitcoin industry, from the moment the virus
    broke out, I have received a lot of phone calls from relatives asking questions
    like “I heard that you study the virus, are you running away?” During the workdays,
    I am always being asked, “Please share your opinions, when can the manipulator
    be caught?”
  prefs: []
  type: TYPE_NORMAL
- en: The reason why hackers use Bitcoin for ransom is that it has features such as
    anonymity and decentralization that can help them to hide their identity. But
    I always hold the opinion that technology itself is innocent, and neither Bitcoin
    nor Blockchain should take the responsibility.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/62-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-43: Technology itself is innocent.'
  prefs: []
  type: TYPE_NORMAL
- en: The Workflow of Bitcoin
  prefs: []
  type: TYPE_NORMAL
- en: As [Fig. 2-44](#fig2_44) shows, in Blockchain, all the nodes go back up to the
    source, which is also the first block of Blockchain—“Genesis block.”
  prefs: []
  type: TYPE_NORMAL
- en: After the creation of “Genesis block,” users of Bitcoin keep “solving the problem.”
    By calculating, they try to get the numerical solution that meets the specific
    SHA-256 hash values.
  prefs: []
  type: TYPE_NORMAL
- en: This process is called “Bitcoin mining.”
  prefs: []
  type: TYPE_NORMAL
- en: No matter which user gets the numerical solution meeting the requirements first,
    it will be broadcast through the network. Then, other nodes will receive the information
    and validate it. Once it is validated, other nodes will stop calculating and add
    the new block after the previous one.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/63-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-44: The workflow of Bitcoin.'
  prefs: []
  type: TYPE_NORMAL
- en: More and more users join the Blockchain system of Bitcoin, and more and more
    hash values are found. In the process of repetition, new blocks are continuously
    generated and validated. Finally, a main chain is formed. In the meantime, the
    difficulty of the hash algorithm is adjusted to control the time spent by users
    in getting the solutions.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/63-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-45: Figuring out the numerical solution to meet hash values.'
  prefs: []
  type: TYPE_NORMAL
- en: In the actual trading process of Bitcoin, assuming that user A and user B are
    going to make a transaction, the block with which broadcasts to all the users
    in the Blockchain allowing them to validate it. Once the transaction is validated,
    this block will have a timestamp and be added into the main chain of Blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/64-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-46: Using a timestamp.'
  prefs: []
  type: TYPE_NORMAL
- en: The essence of Blockchain is a public mutual validating accounting system, which
    records all transactions of all accounts. Each change of any account will be recorded
    in the general ledger. All the users have a complete ledger with which they can
    independently calculate all the accounts as well as the current balance of everyone.[6](#Afn_6)
  prefs: []
  type: TYPE_NORMAL
- en: Since all the statistics are transparent, everyone can check the source code.
    In this way, people will trust the decentralized system without worrying about
    any hidden conspiracies.
  prefs: []
  type: TYPE_NORMAL
- en: BITCOIN HARD FORK
  prefs: []
  type: TYPE_NORMAL
- en: Since it was born in 2009, Bitcoin’s market cap has climbed to tens of billions
    of US dollars, and many people are crazy about it (please note that according
    to China’s policy, Bitcoin is not currency). Recently, some predict that Bitcoin
    may even plummet when a fork becomes ineluctable.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/65-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-47: Is a Bitcoin fork inevitable?'
  prefs: []
  type: TYPE_NORMAL
- en: Satoshi’s Decision
  prefs: []
  type: TYPE_NORMAL
- en: Back to 2009, when Satoshi was projecting Bitcoin, the data at hand were limited,
    so he decided the capacity of one block to be 1M (megabyte). However, one transaction
    occupies 250 bytes and even more. Some transactions even need 500 bytes. Apparently,
    the capacity is far from enough.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s do the math together:'
  prefs: []
  type: TYPE_NORMAL
- en: One block’s size is 1M, 1M=1,024KB=1,048,576B.
  prefs: []
  type: TYPE_NORMAL
- en: Then the number of transactions that one block can hold is 1,048,576÷250 ≈ 4,194.3.
  prefs: []
  type: TYPE_NORMAL
- en: The time to verify one block is 10 minutes, 10 minutes= 600 seconds.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, the number of transactions that can be verified per second is 4,194.3÷600
    ≈ 7.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/66-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-48: 1M size is apparently not enough.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/66-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-49: The blocks need scaling.'
  prefs: []
  type: TYPE_NORMAL
- en: Every block is only able to verify seven or fewer transactions per second, which
    will undoubtedly lead to the congestion of transactions and thus low verification
    speed. Once one transaction has finished, it has to wait in a long queue to be
    verified. One day, the congestion will reach its limit and cause the whole system
    to break down.
  prefs: []
  type: TYPE_NORMAL
- en: Different Scaling Plans
  prefs: []
  type: TYPE_NORMAL
- en: How should we deal with the problem? Start to change!
  prefs: []
  type: TYPE_NORMAL
- en: How to change? Nowhere can we find Satoshi! Then to whom should we turn? Satoshi
    has entrusted the maintenance of Bitcoin system to five geeks!
  prefs: []
  type: TYPE_NORMAL
- en: Then again, how to change?
  prefs: []
  type: TYPE_NORMAL
- en: 'Listen to me: we should scale the block size to 2M.'
  prefs: []
  type: TYPE_NORMAL
- en: No, it should be 20M.
  prefs: []
  type: TYPE_NORMAL
- en: Many people put forward their own scaling plan on behalf of their interest groups.
  prefs: []
  type: TYPE_NORMAL
- en: '1.   Bitcoin Classic: The maximum of this field should be scaled to 2M, and
    in the future, it is planned to take the median of the first 2,016 blocks and
    multiply it by a predetermined multiple to determine the upper limit of the size
    of the next blocks.'
  prefs: []
  type: TYPE_NORMAL
- en: '2.   Bitcoin XT: The maximum should be 20M and doubled every two years until
    the upper limit reaches 8.3G (Gbyte).'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/67-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-50: Different scaling plans.'
  prefs: []
  type: TYPE_NORMAL
- en: '3.   Bitcoin Unlimited: The maximum can be any number—even infinite—and the
    mining pool should determine its size.'
  prefs: []
  type: TYPE_NORMAL
- en: No agreement has yet to be reached because each group believes their plan is
    the best. What should we do now? If we can create an upgraded version of Bitcoin
    and everyone agrees to join the new system, then there will be no need to fork.
    However, how should we get everyone to agree to upgrade?
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/68-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-51: Disagreement on scaling plans will lead to a fork.'
  prefs: []
  type: TYPE_NORMAL
- en: Different opinions and ideas have given rise to a variety of scaling plans,
    and those plans cannot be unified. Thus, a Bitcoin fork becomes inevitable. In
    fact, in the future, the proposed size may grow even larger.
  prefs: []
  type: TYPE_NORMAL
- en: HARD FORK AND SOFT FORK
  prefs: []
  type: TYPE_NORMAL
- en: What is the difference between a hard fork and a soft fork? To put it simply,
    it is the difference in compatibility. A soft fork is temporary, and a hard fork
    is permanent. When permanent divergence occurs on Blockchain after new consensus
    is released, some nonupgraded nodes cannot verify the upgraded blocks—then a hard
    fork happens.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/69-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-52: Structure diagram of a hard fork.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the definition of a hard fork: the situation where a parallel chain
    is added to the old chain after changes happen to Bitcoin’s block format or transaction
    format, and the nonupgraded nodes refuse to verify the blocks that are created
    and verified by the upgraded nodes.[7](#Afn_7)'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/69-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-53: What is a hard fork?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the characteristics of a hard fork:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   No forward compatibility, and the previous version will be forced to upgrade.
  prefs: []
  type: TYPE_NORMAL
- en: '2.   There will be two parallel chains: the old one and the new one.'
  prefs: []
  type: TYPE_NORMAL
- en: 3.   The nodes need to agree to fork at a certain point in time, and those that
    disagree will remain on the old chain.[8](#Afn_8)
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/70-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-54: The characteristics of a hard fork.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When a new consensus is launched, a temporary fork may occur because the nonupgraded
    nodes will create illegal blocks, since they do not fully understand the new consensus.
    Thus, the definition of a soft fork: when the data structure of Bitcoin transactions
    changes, the nonupgraded nodes can verify the blocks produced by the upgraded
    nodes, and the upgraded nodes can also verify the blocks produced by the nodes
    that have not been upgraded.[9](#Afn_9)'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/71-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-57: The characteristics of a soft fork.'
  prefs: []
  type: TYPE_NORMAL
- en: INTERESTING EXAMPLES
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take the restoration of a palace as an example. Suppose there is a Bitcoin
    kingdom on an isolated island, and the palace of this kingdom has withstood many
    years’ erosion and started to appear dilapidated. Some ministers of the court
    suggest the king tear down the palace and rebuild, while some believe repair and
    restoration can make the palace look new. The two groups argue with each other,
    and neither can persuade the other, which leads to a fork.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/72-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-58: The example of a Bitcoin kingdom.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/72-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-59: Example to illustrate a hard fork.'
  prefs: []
  type: TYPE_NORMAL
- en: When will a hard fork occur? Because the two groups cannot reach an agreement,
    they decide to implement their plan separately. Those who propose to rebuild the
    palace hire workers to build anew, and those who insist on restoration keep the
    old part of the palace. This situation can be compared to the hard fork in Bitcoin’s
    world when a new chain splits from the old chain at a certain point in time, and
    these two chains are not compatible with each other.
  prefs: []
  type: TYPE_NORMAL
- en: What will happen when a soft fork occurs? Let’s get back to the Bitcoin kingdom.
    To prevent the argument between the two groups from reaching an impasse, they
    agree to compromise. Both sides can do what they wish to the palace and admit
    the legality of each other’s practice. Similarly, in Bitcoin’s world, when a soft
    fork occurs, the nonupgraded nodes can stick to the old rules, while the upgraded
    nodes will start to adopt the new ones. For example, after Segwit proposed by
    Bitcoin Core, no new coins were produced.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/73-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-60: Illustration of a soft fork.'
  prefs: []
  type: TYPE_NORMAL
- en: WHAT IS THE INFLUENCE OF A FORK?
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s have a look at a recent, successful fork. In July 2016, the Ethereum
    development team forcibly transferred all funds of The DAO (Distributed Autonomous
    Organization) and its sub-DAOs to a specific refund contract in Block 192,000
    by modifying the code of Ethereum Software. The address thus “recaptured” the
    ethernet currency of the DAO contract controlled by the hacker. After that, two
    chains were formed, one for the ETC (original chain), and the other for the new
    ETH (new chain). Then a hard fork happened!
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/74-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-61: Ethereum’s hard fork.'
  prefs: []
  type: TYPE_NORMAL
- en: 'It had a massive influence on miners: mining can be easier for them after the
    fork, but the price of coins will be more unpredictable because of the uncertainty
    in the market afterward.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/75-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-62: The impact on miners.'
  prefs: []
  type: TYPE_NORMAL
- en: A Hard Fork’s Impact on the Bitcoin Industrial Chain
  prefs: []
  type: TYPE_NORMAL
- en: From a technical point of view, the main problem with a hard fork is that it
    requires all users to move to a new Blockchain with different rules. In order
    to maintain the brand value of Bitcoin and people’s faith in Bitcoin, Bitcoin’s
    supporters are opposed to hard forks. If a hard fork really happens, it may set
    off a cyberwar and a consensus war.
  prefs: []
  type: TYPE_NORMAL
- en: A Hard Fork’s Impact on Bitcoin’s Price
  prefs: []
  type: TYPE_NORMAL
- en: The market determines the price fluctuation and outlook of Bitcoin. Theoretically
    speaking, Bitcoin prices will first undergo a slump after a hard fork.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/75-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-63: The impact on an industrial chain.'
  prefs: []
  type: TYPE_NORMAL
- en: Both Bitcoin and the new coin occurring after the fork will return to a normal
    level. The discussion of a Bitcoin fork shows no sign of ending. Maybe this is
    precisely the glamour of decentralized Bitcoin—the diversity.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/76-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-64: The impact on Bitcoin’s price.'
  prefs: []
  type: TYPE_NORMAL
- en: THE WORKING PROCESS OF BLOCKCHAIN
  prefs: []
  type: TYPE_NORMAL
- en: How does Blockchain work?
  prefs: []
  type: TYPE_NORMAL
- en: As [Fig. 2-65](#fig2_65) shows, assume that A and B are going to have a transaction.
    A launches a request of setting up a new block, and the block will be broadcast
    to all the users in the network. After validated by all the users, it will be
    added to the main chain, which saves permanent and transparent transaction records
    that can be checked by every user. Actually, the Blockchain technology is a distributed
    database in which accounting is done and maintained by all the nodes rather than
    controlled by individuals or centralized subjects. Not a single node can tamper
    the ledger.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/77-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-65: The working process of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: If you are going to tamper with a record, you need to control more than 51 percent
    of the nodes or computing power of the whole network at the same time. It is almost
    impossible, since there are an infinite amount of nodes, and new ones are added
    all the time in Blockchain. What is more, the cost of tampering is so high that
    nearly no one can afford it.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/78-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-66: The ledger cannot be compromised.'
  prefs: []
  type: TYPE_NORMAL
- en: Four Major Features of Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: 'After numerous accounting, the Blockchain becomes a reliable public ledger
    with enormous capacity, which has the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/78-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-67: Features of Blockchain: decentralized.'
  prefs: []
  type: TYPE_NORMAL
- en: '1.   Decentralized: In a decentralized financial system, there is no intermediary,
    and all nodes have equal rights and duties, so that the overall operation of the
    system will not be affected by the shutdown of any one node.'
  prefs: []
  type: TYPE_NORMAL
- en: '2.   Detrust: Thanks to the transparent operation of the database and system,
    all the nodes can make transactions without issues of trust. Within the rules
    and time limitations of the system, the nodes cannot deceive one another.'
  prefs: []
  type: TYPE_NORMAL
- en: '3.   Collectively maintained: All the nodes have a maintenance function, which
    means all the users participate in maintaining the system.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/79-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-68: Blockchain’s characteristics: detrust.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/79-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-69: Blockchain’s characteristics: collective maintenance.'
  prefs: []
  type: TYPE_NORMAL
- en: '4.   Reliable database: Each node in the system has the latest copy of the
    complete database. It is invalid to modify the database of a single node because
    the system will automatically make comparisons and take the data most commonly
    occurring as the real ones.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/80-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-70: Features of Blockchain: reliable database.'
  prefs: []
  type: TYPE_NORMAL
- en: BLOCKCHAIN’S UNDERLYING STRUCTURE
  prefs: []
  type: TYPE_NORMAL
- en: A Model Framework of Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: The model framework of Blockchain is repeatedly discussed, and people who first
    get into the industry commonly have questions about its composition. We will demonstrate
    the framework through the most comprehensive and easiest explanation derived from
    large amounts of materials. There are six layers of the model framework of Blockchain”
    data layer, network layer, consensus layer, neuron layer, contract layer, and
    application layer. Each layer performs a core function, and by cooperating with
    one another, these layers achieve a decentralized trust mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: A. Data Layer
  prefs: []
  type: TYPE_NORMAL
- en: The data layer mainly represents the physical attributes of Blockchain technology.
    The first node that the technologists who designed the Blockchain system created
    was genesis block, then blocks of the same form under the same rules connect together
    to be a parent Blockchain following a chained structure. As operation duration
    increases, new blocks are added to the parent Blockchain after being verified,
    and the parent Blockchain continues to grow longer.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/81-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-71: A model framework of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Each block is supported by many technologies such as time-stamping technology,
    which can ensure that it connects with the other blocks in chronological order,
    and hash function, which in turn ensures there will be no tampering with that
    transaction record.
  prefs: []
  type: TYPE_NORMAL
- en: B. Network Layer
  prefs: []
  type: TYPE_NORMAL
- en: The main function of the network layer is to realize the information communication
    among the nodes in the Blockchain network. Blockchain in nature is a P2P (point
    to point) network. Every node can both receive and produce information. Nodes
    achieve communication by jointly maintaining a common Blockchain. Within a Blockchain
    network, every node can create a new block, and after the creation, it will broadcast
    to other nodes, which will perform a verification of the new block. With successful
    verification from over 51 percent of the users within the whole Blockchain network,
    this new block can be added to the parent Blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/82-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-72: The network layer of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: C. Consensus Layer
  prefs: []
  type: TYPE_NORMAL
- en: A consensus layer can help highly dispersed nodes within a decentralized system
    achieve efficient consensus about the effectiveness of Blockchain data. Common
    consensus mechanisms in Blockchain include proof-of-work algorithm, proof-of-stake
    algorithm, and delegated proof-of-stake consensus, which will be the focus in
    the following chapters.
  prefs: []
  type: TYPE_NORMAL
- en: D. Neuron Layer
  prefs: []
  type: TYPE_NORMAL
- en: The main function of the neuron layer is to provide activation measures, encouraging
    nodes to participate in the safety verification of Blockchain. Let’s take Bitcoin,
    for example; it has two reward mechanisms. When the number of Bitcoins reaches
    21 million, new blocks will no longer generate Bitcoins, at which point the reward
    mechanism will mainly involve fees that are taken off from every transaction.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/83-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-73: The neuron layer of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: E. Contract Layer
  prefs: []
  type: TYPE_NORMAL
- en: 'The contract layer mainly includes various kinds of script code, algorithm
    mechanisms, and smart contracts. Let’s take Bitcoins, for example: they are programmable
    currency, and the script code encapsulated in the contract layer stipulates the
    transaction mode and various details during the transaction process.'
  prefs: []
  type: TYPE_NORMAL
- en: F. Application Layer
  prefs: []
  type: TYPE_NORMAL
- en: The application layer encapsulates various application scenarios and cases of
    Blockchain, such as; OKLink, a cross-border payment platform based on Blockchain,
    as well as other various applications that we will talk about later in the application
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: BASIC TYPES OF BLOCKCHAIN
  prefs: []
  type: TYPE_NORMAL
- en: Public Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: Public Blockchain allows everyone around the world to read, create, acquire
    verification of transactions, and participate in the consensus process, which
    decides on the exact blocks that can be added to Blockchain and makes the current
    status clear.[10](#Afn_10)
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/84-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-74: Public Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Features of Public Blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   Protects users from the influence of developers.
  prefs: []
  type: TYPE_NORMAL
- en: In a public Blockchain, application developers have no right to interfere with
    users’ activities so that the Blockchain can protect its users.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Low access threshold.
  prefs: []
  type: TYPE_NORMAL
- en: All can have the access as long as he or she owns a computer that connects to
    the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   All data is open by default.
  prefs: []
  type: TYPE_NORMAL
- en: Every participant in a public Blockchain can access all transaction records
    in the distributed ledger.
  prefs: []
  type: TYPE_NORMAL
- en: Private Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: Private Blockchain refers to a Blockchain with its writing access belonging
    to only one organization, aiming to restrict read access and open access.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/85-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-75: Private Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Features of Private Blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   High transaction velocity.
  prefs: []
  type: TYPE_NORMAL
- en: There are fewer nodes in a private Blockchain, and with a high level of trust,
    not every node is needed to verify a transaction. Thus, the transaction velocity
    of a private Blockchain is much higher than that of a public Blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Provides better protection for privacy.
  prefs: []
  type: TYPE_NORMAL
- en: Data in a private Blockchain will not go public and will not be obtained by
    any individual who has access to the network.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Transaction costs can be greatly reduced, even to zero.
  prefs: []
  type: TYPE_NORMAL
- en: In a private Blockchain, transactions can be achieved free of charge or at least
    at very low costs. If a physical organization controls and deals with all transactions,
    then it will no longer need to charge for its operations.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Protect basic products from damage.
  prefs: []
  type: TYPE_NORMAL
- en: By using a private Blockchain, banks and traditional financial organizations
    can ensure their vested interests and protect their original ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Consortium Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: A consortium Blockchain refers to a Blockchain that has its consensus process
    controlled by preselected nodes. For example, for a consortium Blockchain consisting
    of fifteen financial organizations, each organization operates a node, and to
    make every block validated, verification from over half of the consortium, which
    is eight, is needed. This type of Blockchain may allow everyone to read or can
    be subjected to participants’ hybrid routes.[11](#Afn_11)
  prefs: []
  type: TYPE_NORMAL
- en: Consortium Blockchain is regarded as partially decentralized, and the Blockchain
    project R3 CEV can be seen as a form of consortium Blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/87-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-76: Consortium Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Other Classifications
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s return to other classifications of Blockchain: permission chain, hybrid
    chain, and complex chain. Permission chain refers to a Blockchain system that
    requires each node to perform verification. Both private Blockchain and public
    Blockchain belong to permission chain. With the increasing development of Blockchain
    technology, its technical framework will not simply consist of private and public
    Blockchains, and the distinction between the two will be less apparent. Thus,
    gradually, the concept of complex chain and hybrid chain have been debated.'
  prefs: []
  type: TYPE_NORMAL
- en: Development of Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the viewpoints of Melanie Swan, founder of the Institute for Blockchain
    Studies, there are three stages and fields regarding the development of Blockchain
    technology: Blockchain 1.0, Blockchain 2.0, and Blockchain 3.0.[12](#Afn_12)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain 1.0: Programmable currency represented by Bitcoin. It is more like
    innovation of a digital currency field, such as a system for currency transfer,
    cashing, and payment.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain 2.0: Programmable finance based on Blockchain. It is more about
    innovations in contracts (especially business contracts) and transactions, including
    stocks, securities, futures, loans, clearing, and settlement, as well as the so-called
    smart contracts.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain 3.0: Application of Blockchain in other industries. It refers to
    changes in man’s organizational forms, including health, science, culture, as
    well as justice and voting based on Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/88-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-77: The development of Blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Consensus Mechanism of Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: 'Before consensus mechanism, let us take a look at two other introductory problems:
    the two-army problem and Byzantine failures.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem One: The Two-Army Problem'
  prefs: []
  type: TYPE_NORMAL
- en: 'Speaking of this, a popular explanation on the Internet is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Two armies far apart need to convey information to each other. The blue army
    sends a messenger to tell the red army: “If you dare, take out the Italian cannons!”
    Upon receipt of this information, the red army sends a messenger to tell the blue
    army: “Copy that!” Then the blue army sends a messenger to the red army again:
    “We know that you have got it.” And the red army sends a messenger again: “We
    know you know we got the information.” The blue army sends a messenger again:
    “We know you know we know you have the information.” And then … there is no end.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/89-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-78: The two-army problem.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem Two: Byzantine Failures'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is an old problem, and the details are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: In military actions, The Byzantine Roman Empire decides whether to attack or
    retreat according to generals’ votes. That is to say, if most of the generals
    decide to attack, the army will rush up. However, if spies are hiding in the army
    (defecting generals may vote inversely intentionally, or the herald changes the
    order without authorization), then how to make sure that the result can honestly
    reflect the will of loyal generals?[13](#Afn_13)
  prefs: []
  type: TYPE_NORMAL
- en: Let us explain it further with details.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/90-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-79: Byzantine failures.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Long, long ago, a strong empire named Byzantine had extremely powerful armies.
    There were ten small six of them launched offensives at the same time so that
    they would have the chance to win, or else they would be defeated. Here comes
    the problem: in ancient times, communication between armies depended entirely
    on people. Once there was a spy in a national army, it didn’t matter whether it
    was the general or the signalman who gave the orders; the other nine countries
    might receive false information, resulting in failure. If you were the king of
    one of those small countries, how could you ensure more than five countries would
    fight alongside you? After all, if you were not careful enough, you might lose
    the country.'
  prefs: []
  type: TYPE_NORMAL
- en: These problems are why we need to reach consensus. There are various consensus
    mechanisms in Blockchain. None of them is perfect, so none of them can be applied
    to all scenarios. Below, we will go over different consensus mechanisms discussed
    by Mr. Zhang in his article “Consensus mechanism on blockchain.” We selected nine
    kinds of consensus mechanisms with comparatively specific features to make a brief
    introduction. The common consensus mechanisms include nine types, including, most
    significantly, Proof of Work, Proof of State, and Delegated Proof of Stake.
  prefs: []
  type: TYPE_NORMAL
- en: 'A: PROOF OF WORK'
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work (PoW) can usually only be proved from the results because monitoring
    the work process is cumbersome and inefficient.
  prefs: []
  type: TYPE_NORMAL
- en: When Bitcoin generates blocks, PoW is employed. The hash of a matching block
    consists of N preleading zeros. The number of zeros depends on the difficulty
    of the network. To get a reasonable block hash value requires a lot of tests and
    calculations, and the calculation time depends on the machine’s hash operation
    speed. When a node provides a reasonable block hash value, it indicates that the
    node has indeed gone through a large number of calculations; of course, this does
    not give the absolute number of calculations, because finding a reasonable hash
    value is a probabilistic event. When a node occupies a computing power of n percent
    of the entire network, then the node has a n percent probability of finding the
    block hash.
  prefs: []
  type: TYPE_NORMAL
- en: PoW relies on machines to conduct mathematical operations and then obtain the
    right to record. The operations consume immense resources and have high consensus
    mechanism and weak supervision. Meanwhile, each consensus needs the whole network
    to participate in calculating and has a relatively low efficiency and performance
    ratio, as well as a fault-tolerance of allowing 50 percent of the nodes in the
    entire Internet to be in error.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of PoW: Completely decentralized; free access to nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages of PoW: Currently, Bitcoin has attracted most of the global computing
    power; other Blockchain applications using the PoW consensus can hardly obtain
    the same computing power to protect their own security. Also, mining causes much
    waste of resources, and the time to reach consensus is relatively long.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The projects using PoW: Bitcoin, the first three stages of Ethereum—Frontier,
    Homestead, and Metropolis. The fourth stage of Ethereum, Serenity, will use the
    PoS.'
  prefs: []
  type: TYPE_NORMAL
- en: B. PROOF OF STAKE
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake (PoS) was first proposed by the “Quantum Mechanic” at the 2011
    Bitcoin Forum’s Lecture and was later implemented by Peercoin (DOT) and NXT (Futures)
    with different ideas.
  prefs: []
  type: TYPE_NORMAL
- en: The main idea of PoS is that the difficulty of acquiring recording rights for
    nodes is inversely proportional to the rights and benefits held by nodes. Compared
    with PoW, it reduces certain resource consumption caused by mathematical operations.
    The performance has been correspondingly improved. But based on hashing, the regulation
    on competing for the recording right is still weak. The fault tolerance of PoS
    is the same as PoW. It is an upgrade of PoW, which reduces the difficulty of mining
    in proportion to time and to tokens occupied by each node and thus speeds up the
    process of finding random numbers.
  prefs: []
  type: TYPE_NORMAL
- en: In PoW, a user may use $1,000 to buy a computer, join the network to mine, create
    a new block, and then get rewarded. In the PoS, users can purchase equivalent
    tokens for $1,000 and put these tokens as deposits into the PoS mechanism. Users
    thereby have the chance to create new blocks and get rewards.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/93-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-80: PoS Random Selected Algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: In general, there is a collection of coin holders in this system. Holders put
    tokens into the PoS mechanism, and then they become verifiers. For the first block
    in Blockchain, the PoS algorithm randomly selects one among the verifiers (the
    verifier’s weight is based on the number of tokens they invest). For example,
    the chance for a verifier investing 10,000 tokens is 10 times as that of the one
    investing 1,000 tokens, which gives him the right to create the next block. Within
    a certain time, if the verifier has not yet generated a block, a second verifier
    is instead selected to generate a new block. Like PoW, PoS chooses the longest
    link.
  prefs: []
  type: TYPE_NORMAL
- en: With economies of scale (referring to the phenomenon of increasing economic
    efficiency due to the expansion of production scale) disappearing, the risk of
    centralization is reduced. The tokens worth $10 million bring a return that is
    exactly 10 times the value of tokens worth of $1 million, and no one will receive
    disproportional additional rewards for the ability to afford large-scale production
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of PoS: It somehow shortens the time for reaching consensus and
    no longer needs to consume enormous energy to mine.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages of PoS: Mining is still needed without eradicating the deadly
    flaw in commercial applications, and any confirmation is only probabilistic rather
    than deterministic. Theoretically, there may be other attacks, for example, Ethereum’s
    DAO attack causing Ethereum to fork and the ETC to appear, which in fact proved
    the failure of this hard fork.'
  prefs: []
  type: TYPE_NORMAL
- en: C. DELEGATED PROOF OF STATE
  prefs: []
  type: TYPE_NORMAL
- en: The BitShares community first raised the idea of the DPoS mechanism. The main
    difference between DPoS and PoS is that the node elects several delegates, who
    verify and record transactions, but its compliance and supervision, performance,
    resource consumption, and fault tolerance are similar to those of PoS. Similar
    to board voting, the token holders elect and entrust a certain number of nodes
    to verify and record transactions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The working principle of DPoS is as follows: Each shareholder has a corresponding
    influence in proportion to his percentages of shareholding, and the result of
    51 percent of shareholder voting will be irreversible and binding. The challenge
    is to achieve “51 percent approval” in a timely and efficient method. To achieve
    this goal, each shareholder can entrust his vote to a delegate. The top 100 delegates
    with the most votes generate blocks according to the established schedule. Each
    delegate is assigned to a certain time to generate a block.'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/95-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-81: The working principle of DPoS.'
  prefs: []
  type: TYPE_NORMAL
- en: All delegates will receive 10 percent of the transaction fee that is equivalent
    to an average block. If an average block takes 100 shares as a transaction fee,
    one delegate can receive one share as the reward.
  prefs: []
  type: TYPE_NORMAL
- en: Some delegates may fail to broadcast their blocks promptly due to the network
    latency, which will result in a fork in Blockchain. However, this is unlikely
    to happen, because the delegate who generates the block can establish a direct
    connection with the delegates of the block before and after. Establishing this
    direct connection with the delegate behind you (and possibly the one after you)
    will ensure that you get paid.
  prefs: []
  type: TYPE_NORMAL
- en: Under the DPoS’s voting mode, a new block can be generated every thirty seconds.
    In normal network conditions, the possibility of a fork in Blockchain is extremely
    small, and even if it happens, it can be resolved in a few minutes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The basic steps to perform this mode are:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   Become a delegate. To become a delegate, you must register your public
    key on the Internet and get a 32-bit unique identifier. This identifier is quoted
    by the “head” of each transaction’s data.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Keep the nodes honest. There will be a monitoring service in the system,
    which will calculate the behavior of each node in real time, which is equivalent
    to an automated error correction mechanism. Let me give an example. If a node
    does not produce a new block as expected, then it is considered that this node
    automatically gives up its right to produce the block, so the next node generates
    a new block.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Delegates represent integrity. Each wallet will display a status indicator
    to let users know how their delegates perform. If they miss too many blocks, the
    system will recommend that the user replace them with new ones. If any delegate
    is found to have issued an invalid block, then all standard wallets will ask to
    select a new delegate before each wallet makes further transactions.
  prefs: []
  type: TYPE_NORMAL
- en: 4.   Attack resistance. For attack resistance, the power obtained by the top
    100 delegates is the same, namely, each delegate has an equal voting right. Thus,
    it is impossible to obtain more than 1 percent of the votes and concentrate the
    power on a single delegate. With only 100 delegates, it is not difficult to imagine
    an attacker who could perform “denial of service” attacks on the delegates whose
    turn is to generate the block. Fortunately, because the identity of each delegate
    is the public key instead of the IP address, the threat of this particular attack
    can be easily mitigated. This will make it more difficult to determine the attack
    target of DDoS (Distributed Denial of Service). The potential connections between
    delegates will make it more difficult to hinder the block-generating process.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/97-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-82: The voting pattern of DPoS.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of DPoS: The number of nodes participating in verification and recording
    is significantly reduced, and second-level consensus verification is achieved.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages of DPoS: The entire consensus mechanism relies on tokens, but
    many commercial applications do not require tokens.'
  prefs: []
  type: TYPE_NORMAL
- en: D. BETTING CONSENSUS
  prefs: []
  type: TYPE_NORMAL
- en: Betting Consensus is a brand-new concept introduced by the consensus mechanism
    of next-generation Ethereum Casper, which belongs to PoS. Casper’s consensus is
    reached based on blocks instead of chains like PoS.
  prefs: []
  type: TYPE_NORMAL
- en: 'To prevent verifiers from offering different bets in different fields, we have
    another simple but strict rule: if you bet the same numbers twice, or you submit
    a bet that Casper can’t process according to the protocol, you will lose all your
    deposits. This is how Casper differs from a traditional PoS punishment system.
    In this way, illegal nodes maliciously attacking can’t get transaction fees and
    will risk having their deposits confiscated.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The verifiers of Casper protocol should complete two activities: block generating
    and betting:'
  prefs: []
  type: TYPE_NORMAL
- en: Block generating is a process independent from other events. Verifiers collect
    transactions, and when it’s their turn to generate a block, they generate the
    block, sign, and send it to the network. The betting is more complicated. Currently,
    Casper’s default verifier strategy is designed to imitate the Byzantine Fault
    Tolerance, to observe how other verifiers bet, take the value at the 33 percent
    point, and move a step farther to 0 or 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'The client verifies the current situation with the following process: First,
    they download all the blocks and bets, then opinions are formed using the algorithm
    mentioned above but not published; they simply observe different heights in the
    sequence. If the chance of one block is over 0.5, they process it. Otherwise,
    they skip it. The situation after all blocks are processed is displayed as the
    “current situation.” The client can also give some objective opinions on the “final
    verification.” If the opinion by all blocks before height k is over 99.999 percent
    or below 0.0001 percent, the client can see that the first k clients are finally
    verified.'
  prefs: []
  type: TYPE_NORMAL
- en: E. RIPPLE CONSENSUS
  prefs: []
  type: TYPE_NORMAL
- en: The Ripple Consensus algorithm enables a group of nodes to reach a consensus
    based on a special list of initial nodes. The special list of initial nodes is
    like a club. To accept a new member, 51 percent of the members of the club must
    pass it. The consensus follows the “51 percent power” of these core members, and
    outsiders have no influence. Since the club starts from centralization, it will
    always be centralized, and if it starts to corrupt, shareholders can do nothing.
    Like Bitcoin and Peercoin, the Ripple system separates shareholders from their
    voting rights, so it is more centralized than other systems.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/99-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-83: Ripple Consensus.'
  prefs: []
  type: TYPE_NORMAL
- en: F. POOL
  prefs: []
  type: TYPE_NORMAL
- en: 'Based on the traditional distributed consistency technique and data verification
    mechanism, Pool is the consensus mechanism widely used in the Bitcoin industry
    today. Its pros and cons are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages: It can work without tokens. Based on sophisticated distributed
    consistency algorithm (Pasox, Raft, etc.), it can achieve second-level consensus
    verification.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages: The level of decentralization is weaker than Bitcoin and is
    more suitable for a centralized business pattern with various participants.'
  prefs: []
  type: TYPE_NORMAL
- en: G. PRACTICAL BYZANTINE FAULT TOLERANCE
  prefs: []
  type: TYPE_NORMAL
- en: For distributed calculation, different computers try to reach consensus by exchanging
    information. Sometimes, the coordinator or some members in the system may exchange
    incorrect information due to system error. For a Byzantine Generals Problem, based
    on the numbers of the computers in error, there won’t be definite answers for
    a possible resolution, but there will be ways to verify the efficiency of a mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/100-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-84: Byzantine Fault Tolerance.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The possible resolution: under the condition of N ≥ 3F + 1, consistency is
    achievable (N is the total number of computers; F is the total number of fault
    computers). After information is exchanged between computers, each computer lists
    all the information it gets, then the result obtained by most computers is taken
    as the resolution.'
  prefs: []
  type: TYPE_NORMAL
- en: Practical Byzantine Fault Tolerance (PBFT) was created by Castro and Liskov
    in 1999 and is the first widely applied Byzantine Fault Tolerance Algorithm. If
    2/3 of the nodes in the system function normally, the consistency can be ensured.
  prefs: []
  type: TYPE_NORMAL
- en: 'The overall process of the practical Byzantine Fault Tolerance algorithm is
    as follows: The client sends a request to the masternode to invoke a service operation,
    such as “<REQUEST, o, t, c>,” where client c requests to execute operation o,
    and the timestamp t is used to guarantee the client’s request will only be executed
    once. Each message sent from the replica node to the client contains the current
    view number for the client to trace, so the current masternode number can be further
    deduced. The client sends a request to its own masternode via a P2P message, and
    then the masternode automatically broadcasts the request to all backup nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: View numbers are consecutively numbered integers. The masternode is calculated
    by the formula p = v mod | R|, where v is the view number, p is the copy number,
    and |R| is the number of replica sets.
  prefs: []
  type: TYPE_NORMAL
- en: The response from the replica to the client is “<REPLY,v,t,c,i,r>,” where v
    is the view number, t is the time-stamp, i is the number of the replica, and r
    is the result of the request execution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The masternode broadcasts the request to other replicas and then begins performing
    tasks in three stages:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   Prepreparation stage. The masternode assigns a sequence number, n, to the
    received request and then sends a preprepared message to all backup nodes. The
    format of the prepared message is “<<PRE-PREPARE,v,n,d>,m>,” where v is the view
    number, m is the request message sent by the client, and d is the summary of the
    request message m.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Preparation stage. If backup node i accepts the preprepared message, it
    enters the preparation stage. While preparing, the node sends a preparation message
    “<PREPARE,v,n,d,i>” to all replica nodes and writes the preprepared message and
    the preparation message in its own log.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Confirmation stage. When the “(m, v, n, i)” condition is true, replica
    i broadcasts “<COM-MIT, v, n, D(m), i>” to other replica nodes and then enters
    the confirmation stage. All replicas execute the request and send the result back
    to the client. The client needs to wait for different replicas to send back the
    same result as the final result of the entire operation.
  prefs: []
  type: TYPE_NORMAL
- en: If the client does not receive a reply by a certain time, the request will be
    broadcast to all replica nodes; if the request has already been processed at the
    replica node, the replica will resend the execution result to the client. If the
    request is not processed at the replica node, the replica node will forward the
    request to the masternode; if the masternode does not broadcast the request, then
    it is considered to be invalid. If there are enough replica nodes that think the
    masternode fails, a view change will be triggered.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 2-85](#fig2_85) displays the normal execution process of the algorithm
    when an invalid masternode does not exist. In the figure, 0 is the masternode,
    replica 3 is the invalid node, and c is the client:'
  prefs: []
  type: TYPE_NORMAL
- en: '![images](../Images/103-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig. 2-85: The algorithm when a masternode is valid.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The practical Byzantine Fault Tolerance is a consensus mechanism that adopts
    “permitted voting and minority subordination” to elect leaders and keep books.
    This consensus mechanism allows Byzantine Fault Tolerance and the participation
    of strong supervisory nodes and has authority rating capability, higher performance,
    and lower energy consumption. During each round of voting, nodes in the entire
    network elect the leaders, allowing 33 percent of the nodes to do evil, namely,
    33 percent fault tolerance. Because it is suitable for the application scenario
    of the consortium Blockchain, the Practical Byzantine Fault Tolerance mechanism
    and its improved algorithm are currently the most widely used consensus algorithms
    for consortium Blockchain. The improved algorithm is optimized in the following
    ways: it modifies the requirements of the underlying network topology and uses
    P2P networks, it can adjust the number of nodes, and it reduces the number of
    messages used by the protocol.'
  prefs: []
  type: TYPE_NORMAL
- en: H. DELEGATED BYZANTINE FAULT TOLERANCE
  prefs: []
  type: TYPE_NORMAL
- en: 'In April 2016, Antshares released a consensus algorithm white paper, describing
    a universal consensus mechanism—Delegated Byzantine Fault Tolerance—and proposing
    an improved Byzantine Fault Tolerance algorithm that can be applied to Blockchain
    systems. Based on the Practical Byzantine Fault Tolerance algorithm, the Delegated
    Byzantine Fault Tolerance algorithm offers the following improvements:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.   Improves the request response pattern of the C/S (client/server) to the
    P2P network-suited equal nodes pattern.
  prefs: []
  type: TYPE_NORMAL
- en: 2.   Improves the static node participating in consensus into a consensus participation
    node that can access and withdraw dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: 3.   Designs and generates a voting system for nodes participating in consensus
    based on the proportion of equity ownership and decides the nodes participating
    in consensus by voting.
  prefs: []
  type: TYPE_NORMAL
- en: 4.   Introduces the digital certificates in Blockchain and solves the problem
    of verifying the accounting node’s authentic identity during the voting.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of DBFT: Has professionalized bookkeepers, tolerance to any types
    of faults, multipeople cooperative bookkeeping, finality of each block, no forks,
    and reliable algorithm with strict mathematical proof.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages of DBFT: When 1/3 or more of the bookkeepers stop working, the
    system will be unable to provide services. When 1/3 or more of the bookkeepers
    commit a crime, and the other bookkeepers are segmented into two Internet islands,
    the criminal bookkeepers can utilize the forks in the system, but leave cryptographic
    evidence.'
  prefs: []
  type: TYPE_NORMAL
- en: To sum up, the core of DBFT ensures the system’s finality to the maximum extent
    and makes Blockchain suitable for real-world financial applications.
  prefs: []
  type: TYPE_NORMAL
- en: I. PAXOS ALGORITHM
  prefs: []
  type: TYPE_NORMAL
- en: 'Paxos Algorithm is a traditional distributed consistency algorithm. It’s a
    consensus mechanism based on leader election: it has leader nodes with absolute
    authority, the participation of strong regulation nodes, high performance, and
    low resource consumption. All nodes usually have offline accessing mechanisms,
    but malicious nodes are not allowed during the election, so there is no fault
    tolerance.'
  prefs: []
  type: TYPE_NORMAL
- en: _____________
  prefs: []
  type: TYPE_NORMAL
- en: '[1](#Bfn_1)     “How to explain Blockchain to your stupid roommate?” [EB/OL].
    (2016–08–08) [2017–05–18]. [http://mt.sohu.com/20160808/n463044051.shtml](http://mt.sohu.com/20160808/n463044051.shtml).'
  prefs: []
  type: TYPE_NORMAL
- en: '[2](#Bfn_2)     YANG Xiaochen, ZHANG Ming, “Bitcoin: theory, characteristic
    and vision” [J], Financial Review, 2014(2).'
  prefs: []
  type: TYPE_NORMAL
- en: '[3](#Bfn_3)     TANG Wenjian, LV Wen, “How Blockchain redefine the world,”
    [EB/OL]. (2017–02–24) [2017–05–18]. [http://www.jianshu.com/p/89275ffca97b](http://www.jianshu.com/p/89275ffca97b).'
  prefs: []
  type: TYPE_NORMAL
- en: '[4](#Bfn_4)     Mosquito eats frog (nickname), “Public and Private Key” [EB/OL].
    (2013–01–09) [2017–05–18]. [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[5](#Bfn_5)     Mosquito eats frog (nickname), “Public and Private Key” [EB/OL].
    (2013–01–09) [2017–05–18]. [http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html](http://www.cnblogs.com/wenzichiqingwa/archive/2013/01/09/2853188.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[6](#Bfn_6)     BTSX Investment White Paper V1.1 [EB/OL]. (2014–09–16) [2017–05–18].[http://www.docin.com/p–924681871.html](http://www.docin.com/p–924681871.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[7](#Bfn_7)     “Bitcoin technical note: what is consensus, fork, and compatibility?”
    [EB/OL]. (2016–10–11) [2017–05–18]. [http://business.sohu.com/20161011/n469963760.shtml](http://business.sohu.com/20161011/n469963760.shtml).'
  prefs: []
  type: TYPE_NORMAL
- en: '[8](#Bfn_8)     “Hard fork scaling has the risk of split while soft fork does
    not” [EB/OL]. (2016–10–09) [2017–05–18]. [http://8btc.com/thread-40509-1-1.html](http://8btc.com/thread-40509-1-1.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[9](#Bfn_9)     “The growing pains of Bitcoin: solution to the problem of congestion
    or thoroughly split?” [EB/OL]. (2017–03–21) [2017–05–18]. [http://forex.cngold.org/c/2017–03–21/c4886602_2.html](http://forex.cngold.org/c/2017–03–21/c4886602_2.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[10](#Bfn_10)   “A comprehensive introduction to Blockchain: public Blockchain
    vs private Blockchain” [EB/OL]. (2016–08–09) [2017–05–18]. [http://www.weiyangx.com/199778.html](http://www.weiyangx.com/199778.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[11](#Bfn_11)   Huang Butian. “Forms of Blockchain.” [EB/OL]. [2017–05–18].
    [https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html](https://wenku.baidu.com/view/43d83e1b9ec3d5bbfc0a74be.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[12](#Bfn_12)   “Blockchain comes, bound to overturn our future life” [EB/OL].
    (2016–04–20) [2017–05–18]. [http://mt.sohu.com/20160420/n445253975.shtml](http://mt.sohu.com/20160420/n445253975.shtml).'
  prefs: []
  type: TYPE_NORMAL
- en: '[13](#Bfn_13)   Data Sunshine, “On Blockchain from the Technical Perspective”
    [EB/OL]. (2016–10–17) [2017–05–18]. [http://sanwen.net/a/unmoipo.html](http://sanwen.net/a/unmoipo.html).'
  prefs: []
  type: TYPE_NORMAL
