- en: '![](index-1_1.png)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![](index-1_1.png)'
- en: '**Blockchain Consensus**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**区块链共识**'
- en: '**An Introduction to Classical,**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**经典简介，**'
- en: '**Blockchain, and Quantum**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**区块链和量子**'
- en: '**Consensus Protocols**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**共识协议**'
- en: '**Imran Bashir**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**Imran Bashir**'
- en: '***Blockchain Consensus: An Introduction to Classical, Blockchain, and Quantum***'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链共识: 经典、区块链和量子介绍***'
- en: '***Consensus Protocols***'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***共识协议***'
- en: Imran Bashir
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Imran Bashir
- en: London, UK
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 位于英国伦敦
- en: 'ISBN-13 (pbk): 978-1-4842-8178-9'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ISBN-13（平装版）：978-1-4842-8178-9
- en: 'ISBN-13 (electronic): 978-1-4842-8179-6'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ISBN-13（电子版）：978-1-4842-8179-6
- en: '[https://doi.org/10.1007/978-1-4842-8179-6](https://doi.org/10.1007/978-1-4842-8179-6)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://doi.org/10.1007/978-1-4842-8179-6](https://doi.org/10.1007/978-1-4842-8179-6)'
- en: Copyright © 2022 by Imran Bashir
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 版权所有 © 2022 by Imran Bashir
- en: This work is subject to copyright. All rights are reserved by the Publisher,
    whether the whole or part of the material is concerned, specifically the rights
    of translation, reprinting, reuse of illustrations, recitation, broadcasting,
    reproduction on microfilms or in any other physical way, and transmission or information
    storage and retrieval, electronic adaptation, computer software, or by similar
    or dissimilar methodology now known or hereafter developed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本作品受版权保护。出版商保留全部权利，无论是整体还是部分材料，特别是翻译、重印、插图重用、吟诵、广播、微缩胶片复制、或者以其他任何物理方式、信息传输和检索、电子适应、计算机软件，或者通过现在已知或今后开发的类似或不同方法进行的一样或不同的方法。
- en: Trademarked names, logos, and images may appear in this book. Rather than use
    a trademark symbol with every occurrence of a trademarked name, logo, or image
    we use the names, logos, and images only in an editorial fashion and to the benefit
    of the trademark owner, with no intention of infringement of the trademark.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中可能会出现注册商标名称、商标或图像。我们使用注册商标名称、商标或图像时，不会在每次出现时使用商标符号，而是仅以编者方式使用这些名称、商标或图像，以造福商标所有者，无意侵犯商标权。
- en: The use in this publication of trade names, trademarks, service marks, and similar
    terms, even if they are not identified as such, is not to be taken as an expression
    of opinion as to whether or not they are subject to proprietary rights.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的商标名称、商标、服务标记和类似术语，即使未明确标识为这种标志，也不应被视为对它们是否受专有权利的意见表达。
- en: While the advice and information in this book are believed to be true and accurate
    at the date of publication, neither the authors nor the editors nor the publisher
    can accept any legal responsibility for any errors or omissions that may be made.
    The publisher makes no warranty, express or implied, with respect to the material
    contained herein.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '尽管本书中的建议和信息被认为在出版日期真实和准确，但作者、编辑和出版商均不能对可能出现的任何错误或遗漏承担任何法律责任。出版商对此处所含材料不做明示或暗示的保证。  '
- en: 'Managing Director, Apress Media LLC: Welmoed Spahr'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Apress Media LLC 的董事总经理：Welmoed Spahr
- en: 'Acquisitions Editor: Aditee Mirashi'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 采编编辑：Aditee Mirashi
- en: 'Development Editor: Laura Berendson'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 开发编辑：Laura Berendson
- en: 'Coordinating Editor: Aditee Mirashi'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 协调编辑：Aditee Mirashi
- en: Cover designed by eStudioCalamar
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 封面设计：eStudioCalamar
- en: Cover image designed by Freepik (www.freepik.com)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 封面图片设计者：Freepik（www.freepik.com）
- en: Distributed to the book trade worldwide by Springer Science+Business Media New
    York, 1 New York Plaza, Suite 4600, New York, NY 10004-1562, USA. Phone 1-800-SPRINGER,
    fax (201) 348-4505, e-mail orders-ny@springer-sbm.com, or visit www.springeronline.com.
    Apress Media, LLC is a California LLC and the sole member (owner) is Springer
    Science + Business Media Finance Inc (SSBM Finance Inc). SSBM Finance Inc is a
    **Delaware** corporation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Springer Science+Business Media New York 全球图书贸易配送地点为美国纽约州纽约市10004-1562号新约克广场4600号套房。电话
    1-800-SPRINGER，传真 (201) 348-4505，邮箱 orders-ny@springer-sbm.com，或访问 www.springeronline.com。Apress
    Media, LLC 是加利福尼亚州的有限责任公司，唯一成员（所有者）是 Springer Science + Business Media Finance
    Inc（SSBM Finance Inc）。SSBM Finance Inc 是**特拉华**州的一家公司。
- en: For information on translations, please e-mail booktranslations@springernature.com;
    for reprint, paperback, or audio rights, please e-mail bookpermissions@springernature.com.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 关于翻译的信息，请发送邮件至 booktranslations@springernature.com；关于重印、平装版或音频版权，请发送邮件至 bookpermissions@springernature.com。
- en: Apress titles may be purchased in bulk for academic, corporate, or promotional
    use. eBook versions and licenses are also available for most titles. For more
    information, reference our Print and eBook Bulk Sales web page at http://www.apress.com/bulk-sales.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Apress 的图书可供学术、企业或推广用途大量购买。大多数图书也有电子书版本和许可证可用。更多信息，请参考我们的印刷和电子书大量销售网页，网址为 http://www.apress.com/bulk-sales。
- en: Any source code or other supplementary material referenced by the author in
    this book is available to readers on GitHub (github.com/apress). For more detailed
    information, please visit http://www.apress.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者在本书中引用的任何源代码或其他补充材料均可在 GitHub（github.com/apress）上供读者阅读。有关更详细的信息，请访问 http://www.apress.
- en: com/source- code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 源码。
- en: Printed on acid-free paper
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无酸纸印刷
- en: '![](index-4_1.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](index-4_1.jpg)'
- en: '*This book is dedicated to my father, the most affectionate,*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*本书献给我最慈爱的父亲，*'
- en: '*selfless, and hard-working person I’ve ever known.*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*我所认识的最无私、最努力的人。*'
- en: '*If you are stuck at a research problem, rigorously read*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你在研究问题上遇到困难，请严格阅读*'
- en: '*all relevant literature, you will find the answer.*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*所有相关的文献，你将找到答案。*'
- en: '*—Scientist Bashir Ahmed Khan*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*—科学家巴希尔·艾哈迈德·汗*'
- en: '**Table of Contents**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录**'
- en: 'About the Author �����������������������������������������������������������������������������������������������������xv
    About the Technical Reviewer �������������������������������������������������������������������������������xvii
    Acknowledgments ��������������������������������������������������������������������������������������������������xix
    Introduction ������������������������������������������������������������������������������������������������������������xxi
    Chapter 1: [Introduction���������������������������������������������������������������������������������������������
    1](https://doi.org/10.1007/978-1-4842-8179-6_1)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 关于作者 **xv** 关于技术审阅者 **xvii** 致谢 **xix** 导言 **xxi** 第一章：[介绍](https://doi.org/10.1007/978-1-4842-8179-6_1)
    **1**
- en: '[Distributed Systems ����������������������������������������������������������������������������������������������������������������������
    1](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec1)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式系统](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec1) **1**'
- en: '[Characteristics ������������������������������������������������������������������������������������������������������������������������
    2](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec2)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[特征](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec2) **2**'
- en: '[Why Build Distributed Systems �����������������������������������������������������������������������������������������������
    4](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec3)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[为什么构建分布式系统](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec3) **4**'
- en: '[Challenges �������������������������������������������������������������������������������������������������������������������������������
    7](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec10)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[挑战](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec10) **7**'
- en: '[Parallel vs� Distributed vs� Concurrency ��������������������������������������������������������������������������������
    10](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec18)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[并行 vs 分布式 vs 并发](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec18) **10**'
- en: '[Centralized vs� Decentralized vs� Distributed ������������������������������������������������������������������������
    10](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec19)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[集中 vs 分散 vs 分布式](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec19) **10**'
- en: '[Distributed Algorithm �������������������������������������������������������������������������������������������������������������
    12](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec20)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式算法](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec20) **12**'
- en: '[Elements of Distributed Computing/Pertinent Terms/Concepts ��������������������������������������������
    14](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec21)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式计算的元素/相关术语/概念](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec21) **14**'
- en: '[Types of Distributed Systems ������������������������������������������������������������������������������������������������
    19](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec28)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式系统的类型](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec28) **19**'
- en: '[Software Architecture Models �����������������������������������������������������������������������������������������������
    19](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec29)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[软件架构模型](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec29) 19'
- en: '[Distributed System Model �����������������������������������������������������������������������������������������������������
    25](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec34)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式系统模型](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec34) 25'
- en: '[Synchrony and Timing �����������������������������������������������������������������������������������������������������������
    31](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec57)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[同步和时间](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec57) 31'
- en: '[Time, Clocks, and Order ���������������������������������������������������������������������������������������������������������
    37](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec68)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[时间、时钟和顺序](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec68) 37'
- en: '[Physical Clocks ����������������������������������������������������������������������������������������������������������������������
    39](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec69)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[物理时钟](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec69) 39'
- en: '[Happens-Before Relationship and Causality �������������������������������������������������������������������������
    50](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec86)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[事件发生在之前的关系和因果关系](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec86) 50'
- en: '[CAP Theorem �������������������������������������������������������������������������������������������������������������������������������
    61](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec105)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[CAP 定理](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec105) 61'
- en: '[Consistency ���������������������������������������������������������������������������������������������������������������������������
    61](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec106)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[一致性](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec106) 61'
- en: '[Availability �����������������������������������������������������������������������������������������������������������������������������
    61](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec107)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[可用性](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec107) 61'
- en: '[Partition Tolerance �����������������������������������������������������������������������������������������������������������������
    61](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec108)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[分区容错性](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec108) 61'
- en: v
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: v
- en: Table of ConTenTs
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Cryptography in Distributed Systems �����������������������������������������������������������������������������������������
    63](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec109)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式系统中的密码学](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec109) 63'
- en: '[Summary�������������������������������������������������������������������������������������������������������������������������������������
    64](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec110)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[摘要](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec110) 64'
- en: '[Bibliography ��������������������������������������������������������������������������������������������������������������������������������
    65](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec111)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_1#Sec111) 65'
- en: '[Chapter 2: Cryptography ����������������������������������������������������������������������������������������
    67](https://doi.org/10.1007/978-1-4842-8179-6_2)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章：密码学](https://doi.org/10.1007/978-1-4842-8179-6_2) 67'
- en: '[Introduction ���������������������������������������������������������������������������������������������������������������������������������
    67](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec1)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[介绍](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec1) 67'
- en: '[A Typical Cryptosystem ���������������������������������������������������������������������������������������������������������������
    68](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec2)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[典型的密码系统](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec2) 68'
- en: '[Cryptographic Primitives �������������������������������������������������������������������������������������������������������������
    70](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec3)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[密码基元](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec3) 70'
- en: '[Symmetric Cryptography ������������������������������������������������������������������������������������������������������������
    70](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec4)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[对称加密](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec4) 70'
- en: '[Stream Ciphers ����������������������������������������������������������������������������������������������������������������������
    71](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec5)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[流密码](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec5) 71'
- en: '[Block Ciphers ������������������������������������������������������������������������������������������������������������������������
    73](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec6)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[分组密码](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec6) 73'
- en: '[Advanced Encryption Standard ���������������������������������������������������������������������������������������������
    77](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec13)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[高级加密标准](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec13) 77'
- en: '[Some Basic Mathematics �����������������������������������������������������������������������������������������������������������
    79](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec14)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[一些基本数学](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec14) 79'
- en: '[Prime �������������������������������������������������������������������������������������������������������������������������������������
    79](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec15)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[素数](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec15) 79'
- en: '[Modular Arithmetic ����������������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec16)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[模运算（模算术）](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec16) 80'
- en: '[Group �������������������������������������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec17)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[群](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec17) 80'
- en: '[Abelian Group ������������������������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec18)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[阿贝尔群](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec18) 80'
- en: '[Field ���������������������������������������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec19)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[域](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec19) 80'
- en: '[Finite Field (Galois Field) �������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec20)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[有限域（伽罗瓦域）](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec20) 80'
- en: '[Prime Fields ���������������������������������������������������������������������������������������������������������������������������
    80](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec21)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[素域](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec21) 80'
- en: '[Generator �������������������������������������������������������������������������������������������������������������������������������
    81](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec22)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[生成器](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec22) 81'
- en: '[Public Key Cryptography �������������������������������������������������������������������������������������������������������������
    81](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec23)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[公钥密码学](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec23)'
- en: '[Diffie-Hellman Key Exchange ������������������������������������������������������������������������������������������������
    82](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec24)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[Diffie-Hellman密钥交换](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec24)'
- en: '[Digital Signatures ������������������������������������������������������������������������������������������������������������������
    85](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec25)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[数字签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec25)'
- en: '[RSA ����������������������������������������������������������������������������������������������������������������������������������������
    85](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec28)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[RSA](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec28)'
- en: '[Elliptic Curve Cryptography ���������������������������������������������������������������������������������������������������
    88](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec32)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[椭圆曲线密码学](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec32)'
- en: '[Digital Signatures ������������������������������������������������������������������������������������������������������������������������
    94](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec37)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[数字签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec37)'
- en: '[Authenticity ���������������������������������������������������������������������������������������������������������������������������
    94](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec38)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[真实性](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec38)'
- en: '[Unforgeability (Nonrepudiation) ���������������������������������������������������������������������������������������������
    94](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec39)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[不可伪造性(不可否认性)](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec39)'
- en: '[Nonreusability �����������������������������������������������������������������������������������������������������������������������
    95](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec40)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[不可复用性](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec40)'
- en: '[ECDSA Signatures �����������������������������������������������������������������������������������������������������������������
    96](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec41)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[ECDSA签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec41)'
- en: vi
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: vi
- en: Table of ConTenTs
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Multisignatures ����������������������������������������������������������������������������������������������������������������������
    97](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec42)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[多重签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec42)'
- en: '[Threshold Signatures ������������������������������������������������������������������������������������������������������������
    98](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec43)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[阈值签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec43)'
- en: '[Aggregate Signatures ������������������������������������������������������������������������������������������������������������
    99](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec44)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚合签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec44)'
- en: '[Ring Signatures �������������������������������������������������������������������������������������������������������������������
    100](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec45)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[环签名](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec45)'
- en: '[Hash Functions �������������������������������������������������������������������������������������������������������������������������
    101](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec46)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[散列函数](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec46)'
- en: '[Preimage Resistance �����������������������������������������������������������������������������������������������������������
    101](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec47)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[前像阻力 101](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec47)'
- en: '[Second Preimage Resistance ����������������������������������������������������������������������������������������������
    101](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec48)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二前像阻力 101](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec48)'
- en: '[Collision Resistance ������������������������������������������������������������������������������������������������������������
    102](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec49)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[碰撞阻力 102](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec49)'
- en: '[Design of Secure Hash Algorithms (SHA) ����������������������������������������������������������������������������
    103](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec50)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[安全哈希算法（SHA）的设计 103](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec50)'
- en: '[Design of SHA-3 (Keccak) ���������������������������������������������������������������������������������������������������
    105](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec54)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[SHA-3（Keccak）的设计 105](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec54)'
- en: '[Message Authentication Codes �������������������������������������������������������������������������������������������������
    107](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec55)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[消息认证码 107](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec55)'
- en: '[Hash-Based MACs (HMACs) ������������������������������������������������������������������������������������������������
    108](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec56)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于哈希的消息认证码（HMAC） 108](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec56)'
- en: '[Verifiable Delay Functions���������������������������������������������������������������������������������������������������������
    109](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec57)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[可验证延迟函数 109](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec57)'
- en: '[Verifiable Random Functions ����������������������������������������������������������������������������������������������������
    110](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec58)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[可验证随机函数 110](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec58)'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    111](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec59)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[摘要 111](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec59)'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    111](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec60)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考书目 111](https://doi.org/10.1007/978-1-4842-8179-6_2#Sec60)'
- en: '[Chapter 3: Distributed Consensus ������������������������������������������������������������������������
    113](https://doi.org/10.1007/978-1-4842-8179-6_3)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章：分布式一致性 113](https://doi.org/10.1007/978-1-4842-8179-6_3)'
- en: '[Broadcast Primitives �����������������������������������������������������������������������������������������������������������������
    113](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec1)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[广播原语 113](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec1)'
- en: '[Best-Effort Broadcast ����������������������������������������������������������������������������������������������������������
    115](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec2)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[尽最大努力广播 115](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec2)'
- en: '[Reliable Broadcast���������������������������������������������������������������������������������������������������������������
    116](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec6)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[可靠广播 116](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec6)'
- en: '[Uniform Reliable Broadcast �������������������������������������������������������������������������������������������������
    117](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec10)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[一致可靠广播 117](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec10)'
- en: '[FIFO Reliable Broadcast ������������������������������������������������������������������������������������������������������
    118](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec12)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[FIFO可靠广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec12)'
- en: '[Causal Reliable Broadcast ���������������������������������������������������������������������������������������������������
    119](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec14)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[因果可靠广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec14)'
- en: '[Total Order Reliable Broadcast or Atomic Reliable Broadcast ���������������������������������������������
    119](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec15)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[总序可靠广播或原子可靠广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec15)'
- en: '[FIFO Total Order Broadcast ��������������������������������������������������������������������������������������������������
    120](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec20)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[FIFO总序广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec20)'
- en: '[Relationship Between Broadcasts and Consensus �������������������������������������������������������������
    122](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec23)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[广播与共识之间的关系](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec23)'
- en: '[Agreement ��������������������������������������������������������������������������������������������������������������������������������
    123](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec24)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[协议](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec24)'
- en: '[Reliable Broadcast���������������������������������������������������������������������������������������������������������������
    123](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec25)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[可靠广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec25)'
- en: '[Total Order Broadcast ����������������������������������������������������������������������������������������������������������
    124](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec26)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[总序广播](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec26)'
- en: '[The Byzantine Agreement Problem �������������������������������������������������������������������������������������
    124](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec27)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[拜占庭协议问题](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec27)'
- en: vii
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 七
- en: Table of ConTenTs
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[System Models �������������������������������������������������������������������������������������������������������������������������
    128](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec31)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[系统模型](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec31)'
- en: '[Distributed System ��������������������������������������������������������������������������������������������������������������
    128](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec32)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[分布式系统](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec32)'
- en: '[Timing Model/Synchrony �����������������������������������������������������������������������������������������������������
    129](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec33)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[时序模型/同步性](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec33)'
- en: '[Process Failures ������������������������������������������������������������������������������������������������������������������
    130](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec34)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[进程故障](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec34)'
- en: '[Channel Reliability ���������������������������������������������������������������������������������������������������������������
    131](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec35)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[信道可靠性](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec35)'
- en: '[History ���������������������������������������������������������������������������������������������������������������������������������������
    131](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec36)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[历史](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec36)'
- en: '[Two Generals’ Problem �������������������������������������������������������������������������������������������������������������
    132](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec37)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[两将军问题](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec37)'
- en: '[Byzantine Generals Problem �����������������������������������������������������������������������������������������������������
    133](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec38)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[拜占庭将军问题 133](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec38)'
- en: '[Replication ��������������������������������������������������������������������������������������������������������������������������������
    135](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec39)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[复制 135](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec39)'
- en: '[Active Replication ����������������������������������������������������������������������������������������������������������������
    137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec40)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[主动复制 137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec40)'
- en: '[Passive Replication �������������������������������������������������������������������������������������������������������������
    137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec41)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[被动复制 137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec41)'
- en: '[Pros and Cons����������������������������������������������������������������������������������������������������������������������
    137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec42)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[优点和缺点 137](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec42)'
- en: '[Primary Backup Replication ������������������������������������������������������������������������������������������������
    138](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec43)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[主要备份复制 138](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec43)'
- en: '[Chain Replication �����������������������������������������������������������������������������������������������������������������
    139](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec44)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[链式复制 139](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec44)'
- en: '[Fundamental Results �����������������������������������������������������������������������������������������������������������
    147](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec55)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[基本结果 147](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec55)'
- en: '[Quorums������������������������������������������������������������������������������������������������������������������������������������
    160](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec83)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[仲裁 160](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec83)'
- en: '[Crash Fault–Tolerant Quorums ��������������������������������������������������������������������������������������������
    161](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec84)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[崩溃容错法定代表人 161](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec84)'
- en: '[Byzantine Quorums �������������������������������������������������������������������������������������������������������������
    162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec85)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[拜占庭仲裁 162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec85)'
- en: '[Read and Write Quorums �����������������������������������������������������������������������������������������������������
    162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec86)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[读写仲裁 162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec86)'
- en: '[Where Are We Now ��������������������������������������������������������������������������������������������������������������������
    162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec87)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[我们现在在哪里 162](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec87)'
- en: '[Classical Consensus ������������������������������������������������������������������������������������������������������������
    163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec88)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[经典共识 163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec88)'
- en: '[Nakamoto and Post-Nakamoto Consensus �������������������������������������������������������������������������
    163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec89)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[中本聪和后中本聪共识 163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec89)'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec90)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[总结 163](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec90)'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    164](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec91)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_3#Sec91) 164'
- en: '[Chapter 4: Blockchain ������������������������������������������������������������������������������������������
    167](https://doi.org/10.1007/978-1-4842-8179-6_4)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章：区块链](https://doi.org/10.1007/978-1-4842-8179-6_4) 167'
- en: '[What Is Blockchain��������������������������������������������������������������������������������������������������������������������
    167](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec1)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链是什么](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec1) 167'
- en: '[Layman’s Definition �������������������������������������������������������������������������������������������������������������
    167](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec2)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[通俗的定义](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec2) 167'
- en: '[Technical Definition �������������������������������������������������������������������������������������������������������������
    168](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec3)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '[技术定义](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec3) 168'
- en: '[Background �������������������������������������������������������������������������������������������������������������������������������
    168](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec4)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[背景](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec4) 168'
- en: '[Digital Cash Creation Attempts ��������������������������������������������������������������������������������������������
    168](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec5)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[数字现金的创建尝试](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec5) 168'
- en: '[Benefits of Blockchain ��������������������������������������������������������������������������������������������������������������
    170](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec7)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链的好处](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec7) 170'
- en: viii
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: viii
- en: Table of ConTenTs
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Types of Blockchain ������������������������������������������������������������������������������������������������������������������
    172](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec8)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链的类型](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec8) 172'
- en: '[Blockchain Is a Distributed System ������������������������������������������������������������������������������������������
    174](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec9)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链是分布式系统](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec9) 174'
- en: '[CAP and Permissionless Blockchain �����������������������������������������������������������������������������������
    174](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec10)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[CAP和无许可的区块链](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec10) 174'
- en: '[CAP and Permissioned Blockchain ��������������������������������������������������������������������������������������
    174](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec11)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[CAP和许可的区块链](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec11) 174'
- en: '[Blockchain Ledger Abstraction ��������������������������������������������������������������������������������������������
    175](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec12)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链分布账本的抽象](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec12) 175'
- en: '[How Blockchain Works��������������������������������������������������������������������������������������������������������������
    178](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec24)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链是如何运作的](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec24) 178'
- en: '[Anatomy of a Blockchain ����������������������������������������������������������������������������������������������������������
    179](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec25)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链的解剖](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec25) 179'
- en: '[Block ������������������������������������������������������������������������������������������������������������������������������������
    180](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec26)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec26) 180'
- en: '[Platforms �����������������������������������������������������������������������������������������������������������������������������������
    181](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec27)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[平台](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec27) 181'
- en: '[Bitcoin ���������������������������������������������������������������������������������������������������������������������������������
    181](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec28)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[比特币](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec28) 181'
- en: '[Ethereum �����������������������������������������������������������������������������������������������������������������������������������
    192](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec38)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec38) 192'
- en: '[Ethereum Network ���������������������������������������������������������������������������������������������������������������
    192](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec39)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊网络](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec39) 192'
- en: '[Cryptography in Ethereum ���������������������������������������������������������������������������������������������������
    196](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec40)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊中的密码学](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec40) 196'
- en: '[Transactions and Executions �����������������������������������������������������������������������������������������������
    197](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec42)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[交易和执行](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec42) 197'
- en: '[Blocks and Blockchain ��������������������������������������������������������������������������������������������������������
    199](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec43)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块和区块链](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec43) 199'
- en: '[Mining in Ethereum �������������������������������������������������������������������������������������������������������������
    201](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec48)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊中的挖矿](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec48) 201'
- en: '[Ethereum Virtual Machine and Smart Contracts �����������������������������������������������������������������
    202](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec49)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊虚拟机和智能合约](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec49) 202'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    203](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec50)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[总结](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec50) 203'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    204](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec51)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_4#Sec51) 204'
- en: '[Chapter 5: Blockchain Consensus ������������������������������������������������������������������������
    207](https://doi.org/10.1007/978-1-4842-8179-6_5)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章：区块链共识](https://doi.org/10.1007/978-1-4842-8179-6_5) 207'
- en: '[Background �������������������������������������������������������������������������������������������������������������������������������
    208](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec1)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[背景](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec1) 208'
- en: '[Blockchain Consensus ��������������������������������������������������������������������������������������������������������������
    210](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec2)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链共识](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec2) 210'
- en: '[Traditional BFT ���������������������������������������������������������������������������������������������������������������������
    210](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec3)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[传统 BFT](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec3) 210'
- en: '[Nakamoto Consensus ����������������������������������������������������������������������������������������������������������
    211](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec11)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[中本聪共识](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec11) 211'
- en: '[System Model ���������������������������������������������������������������������������������������������������������������������������
    213](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec19)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[System Model 系统模型 213](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec19)'
- en: '[Public Blockchain System Model (Permissionless) �������������������������������������������������������������
    213](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec20)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[Public Blockchain System Model (Permissionless) 公共区块链系统模型（无需许可） 213](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec20)'
- en: '[Consortium Blockchain System Model (Permissioned) �������������������������������������������������������
    214](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec21)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[Consortium Blockchain System Model (Permissioned) 联合块链系统模型（许可的） 214](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec21)'
- en: '[First Blockchain Consensus ������������������������������������������������������������������������������������������������������
    214](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec22)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[First Blockchain Consensus 第一次区块链共识 214](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec22)'
- en: '[How PoW Works ������������������������������������������������������������������������������������������������������������������
    216](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec23)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '[How PoW Works 工作量证明的工作原理 216](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec23)'
- en: '[Pedagogical Explanation of PoW �����������������������������������������������������������������������������������������
    217](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec24)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pedagogical Explanation of PoW 工作量证明的教学解释 217](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec24)'
- en: '[PoW Formula �����������������������������������������������������������������������������������������������������������������������
    221](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec25)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[PoW Formula 工作量证明公式 221](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec25)'
- en: ix
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: ix
- en: Table of ConTenTs
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Similarities Between PoW and Traditional BFT ��������������������������������������������������������������������
    237](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec39)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '[Similarities Between PoW and Traditional BFT 工作量证明与传统BFT的相似之处 237](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec39)'
- en: '[PoW As State Machine Replication ��������������������������������������������������������������������������������������
    238](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec43)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[PoW As State Machine Replication 工作量证明作为状态机复制 238](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec43)'
- en: '[PoW Concerns ���������������������������������������������������������������������������������������������������������������������
    251](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec57)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[PoW Concerns 工作量证明的关注 251](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec57)'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    256](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec68)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[Summary 总结 256](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec68)'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    256](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec69)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[Bibliography 参考文献 256](https://doi.org/10.1007/978-1-4842-8179-6_5#Sec69)'
- en: '[Chapter 6: Early Protocols ������������������������������������������������������������������������������������
    259](https://doi.org/10.1007/978-1-4842-8179-6_6)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[Chapter 6: Early Protocols 第六章：早期协议 259](https://doi.org/10.1007/978-1-4842-8179-6_6)'
- en: '[Introduction �������������������������������������������������������������������������������������������������������������������������������
    259](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec1)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[Introduction 引言 259](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec1)'
- en: '[Distributed Transactions �����������������������������������������������������������������������������������������������������������
    262](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec2)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[Distributed Transactions 分布式事务 262](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec2)'
- en: '[Two-Phase Commit��������������������������������������������������������������������������������������������������������������
    263](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec3)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '[Two-Phase Commit 两阶段提交 263](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec3)'
- en: '[Three-Phase Commit �����������������������������������������������������������������������������������������������������������
    266](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec4)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 三阶段提交在 266 页
- en: '[Oral Message Algorithm ������������������������������������������������������������������������������������������������������������
    268](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec5)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 口头消息算法在 268 页
- en: '[Signed Message Solution to Byzantine Generals Problem ��������������������������������������������������
    272](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec6)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭将军问题中的签名消息解决方案在 272 页
- en: '[DLS Protocols Under Partial Synchrony ������������������������������������������������������������������������������������
    275](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec7)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 部分同步下的 DLS 协议在 275 页
- en: '[Ben-Or Algorithms ���������������������������������������������������������������������������������������������������������������������
    278](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec8)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ben-Or 算法](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec8)的 278 页'
- en: '[Consensus Using Failure Detectors �������������������������������������������������������������������������������������
    284](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec9)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 使用故障探测器的一致性在 284 页
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    287](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec10)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要在 287 页
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    287](https://doi.org/10.1007/978-1-4842-8179-6_6#Sec11)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献在 287 页
- en: '[Chapter 7: Classical Consensus ����������������������������������������������������������������������������
    291](https://doi.org/10.1007/978-1-4842-8179-6_7)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 第 7 章：经典一致性在 291 页
- en: '[Viewstamped Replication����������������������������������������������������������������������������������������������������������
    291](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec1)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 基于视图的复制在 291 页
- en: '[Protocol Steps ���������������������������������������������������������������������������������������������������������������������
    293](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec2)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 协议步骤在 293 页
- en: '[View Change ������������������������������������������������������������������������������������������������������������������������
    294](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec3)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 视图更改在 294 页
- en: '[Paxos ����������������������������������������������������������������������������������������������������������������������������������������
    296](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec4)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Paxos 在 296 页
- en: '[Failure Scenarios �����������������������������������������������������������������������������������������������������������������
    301](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec5)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 失败场景在 301 页
- en: '[Safety and Liveness ������������������������������������������������������������������������������������������������������������
    304](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec6)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性和活性在 304 页
- en: '[In Practice����������������������������������������������������������������������������������������������������������������������������
    305](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec7)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中在 305 页
- en: '[Variants �������������������������������������������������������������������������������������������������������������������������������
    305](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec8)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[变体](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec8) 305'
- en: '[Multi-Paxos �������������������������������������������������������������������������������������������������������������������������
    306](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec9)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '[Multi-Paxos](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec9) 306'
- en: '[RAFT ������������������������������������������������������������������������������������������������������������������������������������������
    308](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec10)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[RAFT](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec10) 308'
- en: '[Leader Election ��������������������������������������������������������������������������������������������������������������������
    310](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec11)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[Leader 选举](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec11) 310'
- en: '[Log Replication ��������������������������������������������������������������������������������������������������������������������
    311](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec12)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[日志复制](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec12) 311'
- en: '[Guarantees and Correctness �����������������������������������������������������������������������������������������������
    314](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec13)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[保证和正确性](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec13) 314'
- en: x
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: x
- en: Table of ConTenTs
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[PBFT ������������������������������������������������������������������������������������������������������������������������������������������
    315](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec14)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[PBFT](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec14) 315'
- en: '[Certificates in PBFT �������������������������������������������������������������������������������������������������������������
    319](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec15)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[PBFT 中的证书](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec15) 319'
- en: '[PBFT Advantages and Disadvantages ���������������������������������������������������������������������������������
    323](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec19)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[PBFT 的优势和劣势](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec19) 323'
- en: '[Safety and Liveness ������������������������������������������������������������������������������������������������������������
    324](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec22)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[安全性和存活性](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec22) 324'
- en: '[Blockchain and Classical Consensus ����������������������������������������������������������������������������������������
    327](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec25)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[区块链和经典共识](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec25) 327'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    328](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec26)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[摘要](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec26) 328'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    328](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec27)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_7#Sec27) 328'
- en: '[Chapter 8: Blockchain Age Protocols �������������������������������������������������������������������
    331](https://doi.org/10.1007/978-1-4842-8179-6_8)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 8 章：区块链时代协议](https://doi.org/10.1007/978-1-4842-8179-6_8) 331'
- en: '[Introduction �������������������������������������������������������������������������������������������������������������������������������
    331](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec1)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[介绍](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec1) 331'
- en: '[Proof of Stake ���������������������������������������������������������������������������������������������������������������������������
    333](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec2)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[权益证明 333](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec2)'
- en: '[Chain-Based PoS �����������������������������������������������������������������������������������������������������������������
    335](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec3)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于链的 PoS 335](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec3)'
- en: '[Committee-Based PoS ���������������������������������������������������������������������������������������������������������
    335](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec4)'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于委员会的 PoS 335](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec4)'
- en: '[BFT-Based PoS ��������������������������������������������������������������������������������������������������������������������
    336](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec5)'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于 BFT 的 PoS 336](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec5)'
- en: '[Delegated PoS ���������������������������������������������������������������������������������������������������������������������
    337](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec6)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '[委托 PoS 337](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec6)'
- en: '[Liquid PoS ����������������������������������������������������������������������������������������������������������������������������
    337](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec7)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[Liquid PoS 337](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec7)'
- en: '[Attacks���������������������������������������������������������������������������������������������������������������������������������
    338](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec8)'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '[攻击 338](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec8)'
- en: '[Ethereum’s Proof of Work ���������������������������������������������������������������������������������������������������������
    339](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec12)'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊的工作证明 339](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec12)'
- en: '[Solana ���������������������������������������������������������������������������������������������������������������������������������������
    342](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec13)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[Solana 342](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec13)'
- en: '[Proof of History ��������������������������������������������������������������������������������������������������������������������
    343](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec14)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '[历史证明 343](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec14)'
- en: '[Tendermint ��������������������������������������������������������������������������������������������������������������������������������
    347](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec15)'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[Tendermint 347](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec15)'
- en: '[HotStuff �������������������������������������������������������������������������������������������������������������������������������������
    353](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec16)'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '[HotStuff 353](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec16)'
- en: '[Linear View Change �������������������������������������������������������������������������������������������������������������
    353](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec17)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '[线性视图变换 353](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec17)'
- en: '[Optimistic Responsiveness ��������������������������������������������������������������������������������������������������
    354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec18)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '[乐观响应 354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec18)'
- en: '[Chain Quality �����������������������������������������������������������������������������������������������������������������������
    354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec19)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '[链质量 354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec19)'
- en: '[Hidden Lock �������������������������������������������������������������������������������������������������������������������������
    354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec20)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[隐藏锁 354](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec20)'
- en: '[Pacemaker ��������������������������������������������������������������������������������������������������������������������������
    355](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec21)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[传导起搏器 355](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec21)'
- en: '[Better Participant Organization Topology ����������������������������������������������������������������������������
    355](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec22)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[更好的参与者组织拓扑结构 355](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec22)'
- en: '[Polkadot ������������������������������������������������������������������������������������������������������������������������������������
    359](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec29)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '[Polkadot 359](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec29)'
- en: '[Consensus in Polkadot ��������������������������������������������������������������������������������������������������������
    361](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec30)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '[Polkadot中的共识 361](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec30)'
- en: xi
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: xi
- en: Table of ConTenTs
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Ethereum 2 ��������������������������������������������������������������������������������������������������������������������������������
    368](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec44)'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[以太坊2 368](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec44)'
- en: '[Casper ���������������������������������������������������������������������������������������������������������������������������������
    370](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec45)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[Casper 370](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec45)'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    374](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec47)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[摘要 374](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec47)'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    375](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec48)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献 375](https://doi.org/10.1007/978-1-4842-8179-6_8#Sec48)'
- en: '[Chapter 9: Quantum Consensus����������������������������������������������������������������������������
    377](https://doi.org/10.1007/978-1-4842-8179-6_9)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章: 量子共识 377](https://doi.org/10.1007/978-1-4842-8179-6_9)'
- en: '[Introduction �������������������������������������������������������������������������������������������������������������������������������
    377](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec1)'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[介绍 377](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec1)'
- en: '[What Is a Quantum Computer? �������������������������������������������������������������������������������������������������
    378](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec2)'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[什么是量子计算机? 378](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec2)'
- en: '[Qubit ������������������������������������������������������������������������������������������������������������������������������������
    380](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec3)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子位 380](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec3)'
- en: '[Superposition ����������������������������������������������������������������������������������������������������������������������
    382](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec4)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[叠加 382](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec4)'
- en: '[Entanglement ����������������������������������������������������������������������������������������������������������������������
    382](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec5)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '[纠缠 382](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec5)'
- en: '[Quantum Gates �������������������������������������������������������������������������������������������������������������������������
    384](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec8)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子逻辑门 ������� 384](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec8)'
- en: '[Hadamard ����������������������������������������������������������������������������������������������������������������������������
    384](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec9)'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '[Hadamard ����� 384](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec9)'
- en: '[T�������������������������������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec10)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[T����������������������������� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec10)'
- en: '[CNOT ������������������������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec11)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[CNOT ��������� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec11)'
- en: '[Toffoli (CCNOT) ���������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec12)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[Toffoli (CCNOT) ������� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec12)'
- en: '[Z�������������������������������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec13)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '[Z ������� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec13)'
- en: '[NOT ��������������������������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec14)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[NOT ���� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec14)'
- en: '[Swap Gate ���������������������������������������������������������������������������������������������������������������������������
    385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec15)'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[交换门 ������� 385](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec15)'
- en: '[Measurement ����������������������������������������������������������������������������������������������������������������������
    386](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec16)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '[测量 ������ 386](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec16)'
- en: '[Quantum Circuits ����������������������������������������������������������������������������������������������������������������������
    386](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec17)'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子电路 ������������ 386](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec17)'
- en: '[Teleportation Circuit ������������������������������������������������������������������������������������������������������������
    387](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec18)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '[传送电路 ������� 387](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec18)'
- en: '[GHZ Circuit ���������������������������������������������������������������������������������������������������������������������������
    387](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec19)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[GHZ 电路 ������� 387](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec19)'
- en: '[W State Circuit ���������������������������������������������������������������������������������������������������������������������
    388](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec20)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[W 状态电路 ���� 388](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec20)'
- en: '[Quantum Algorithms �����������������������������������������������������������������������������������������������������������������
    388](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec21)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子算法 ����������� 388](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec21)'
- en: '[Quantum Computational Complexity �����������������������������������������������������������������������������������������
    389](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec22)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子计算复杂性 ������� 389](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec22)'
- en: '[P – Polynomial ���������������������������������������������������������������������������������������������������������������������
    391](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec23)'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '[P – 多项式时间复杂度](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec23) - 391'
- en: '[NP – Nondeterministic Polynomial ��������������������������������������������������������������������������������������
    391](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec24)'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[NP – 非确定性多项式](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec24) - 391'
- en: '[BPP – Bounded Error Probabilistic Polynomial Time �����������������������������������������������������������
    391](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec25)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[BPP – 有界错误概率多项式时间](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec25) - 391'
- en: '[BQP – Bounded Error Quantum Polynomial Time ����������������������������������������������������������������
    392](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec26)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[BQP – 有界错误量子多项式时间](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec26) - 392'
- en: '[PSPACE – Polynomial Space �����������������������������������������������������������������������������������������������
    392](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec27)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '[PSPACE – 多项式空间](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec27) - 392'
- en: xii
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: xii
- en: Table of ConTenTs
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Other Quantum Systems �����������������������������������������������������������������������������������������������������������
    393](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec28)'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[其他量子系统](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec28) - 393'
- en: '[Quantum Networks ��������������������������������������������������������������������������������������������������������������
    393](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec29)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子网络](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec29) - 393'
- en: '[Quantum Internet ����������������������������������������������������������������������������������������������������������������
    393](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec30)'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子互联网](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec30) - 393'
- en: '[Quantum Distributed Systems – Distributed Quantum Computing �������������������������������������
    394](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec31)'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子分布式系统 - 分布式量子计算](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec31) - 394'
- en: '[Quantum Blockchain �����������������������������������������������������������������������������������������������������������
    395](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec32)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子区块链](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec32) - 395'
- en: '[Quantum Cryptography��������������������������������������������������������������������������������������������������������
    396](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec33)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子密码学](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec33) - 396'
- en: '[Quantum Consensus �����������������������������������������������������������������������������������������������������������������
    398](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec34)'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子共识](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec34) - 398'
- en: '[Fast Quantum Byzantine Agreement �����������������������������������������������������������������������������������
    399](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec35)'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '[快速量子拜占庭协商](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec35) - 399'
- en: '[How to Refute FLP Impossibility ������������������������������������������������������������������������������������������
    401](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec36)'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何反驳FLP不可能性定理](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec36) - 401'
- en: '[Enhanced Distributed Consensus ����������������������������������������������������������������������������������������
    403](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec37)'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '[增强分布式共识](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec37) - 403'
- en: '[Quantum Leader Election and Consensus ���������������������������������������������������������������������������
    405](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec38)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[量子领袖选举与共识](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec38) - 405'
- en: '[Other Algorithms ������������������������������������������������������������������������������������������������������������������
    406](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec39)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[其他算法](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec39) 406'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    407](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec40)'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[总结](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec40) 407'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    408](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec41)'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_9#Sec41) 408'
- en: '[Chapter 10: Conclusion �����������������������������������������������������������������������������������������
    411](https://doi.org/10.1007/978-1-4842-8179-6_10)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章：结论](https://doi.org/10.1007/978-1-4842-8179-6_10) 411'
- en: '[Introduction �������������������������������������������������������������������������������������������������������������������������������
    411](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec1)'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '[简介](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec1) 411'
- en: '[Other Protocols �������������������������������������������������������������������������������������������������������������������������
    411](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec2)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '[其他协议](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec2) 411'
- en: '[PoET�������������������������������������������������������������������������������������������������������������������������������������
    412](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec3)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '[PoET](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec3) 412'
- en: '[Proof of Authority �����������������������������������������������������������������������������������������������������������������
    413](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec4)'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[权威证明](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec4) 413'
- en: '[HoneyBadger BFT ����������������������������������������������������������������������������������������������������������������
    413](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec5)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '[HoneyBadger BFT](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec5) 413'
- en: '[Avalanche ����������������������������������������������������������������������������������������������������������������������������
    415](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec6)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '[雪崩协议](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec6) 415'
- en: '[DAG-Based Consensus Protocols ����������������������������������������������������������������������������������������
    415](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec7)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于DAG的共识协议](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec7) 415'
- en: '[Ebb-and-Flow Protocols ������������������������������������������������������������������������������������������������������
    416](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec10)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[涨潮协议](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec10) 416'
- en: '[Formal Verification ��������������������������������������������������������������������������������������������������������������������
    417](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec11)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '[形式验证](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec11) 417'
- en: '[Impossibility Results �����������������������������������������������������������������������������������������������������������������
    420](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec12)'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[不可能结果](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec12) 420'
- en: '[Complexity and Performance ����������������������������������������������������������������������������������������������������
    422](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec13)'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '[复杂性和性能](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec13) 422'
- en: '[Message Complexity �����������������������������������������������������������������������������������������������������������
    422](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec14)'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '[消息复杂性](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec14)'
- en: '[Communication Complexity (Bit Complexity) �����������������������������������������������������������������������
    422](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec15)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '[通信复杂性（比特复杂性）](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec15)'
- en: '[Time Complexity ������������������������������������������������������������������������������������������������������������������
    423](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec16)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[时间复杂性](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec16)'
- en: '[Space Complexity ����������������������������������������������������������������������������������������������������������������
    423](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec17)'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '[空间复杂性](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec17)'
- en: xiii
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: xiii
- en: Table of ConTenTs
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '[Comparison of Protocols �����������������������������������������������������������������������������������������������������������
    424](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec18)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[协议比较](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec18)'
- en: '[Network Model ��������������������������������������������������������������������������������������������������������������������
    426](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec19)'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '[网络模型](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec19)'
- en: '[Research Directions ������������������������������������������������������������������������������������������������������������������
    428](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec25)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[研究方向](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec25)'
- en: '[Summary�����������������������������������������������������������������������������������������������������������������������������������
    430](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec26)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '[摘要](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec26)'
- en: '[Bibliography ������������������������������������������������������������������������������������������������������������������������������
    430](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec27)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[参考文献](https://doi.org/10.1007/978-1-4842-8179-6_10#Sec27)'
- en: Index ���������������������������������������������������������������������������������������������������������������������
    431
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 索引
- en: xiv
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: xiv
- en: '![](index-15_1.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](index-15_1.jpg)'
- en: '**About the Author**'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于作者**'
- en: '**Imran Bashir** has an MSc in information security from Royal'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '**Imran Bashir**拥有伦敦大学霍洛威的信息安全硕士学位，'
- en: Holloway, University of London. He has a background in
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 霍洛威大学。他在
- en: software development, solution architecture, infrastructure
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发、解决方案架构、基础设施
- en: management, information security, and IT service
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 管理，信息安全和IT服务
- en: management. His current focus is on the latest technologies
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 管理。他目前专注于最新技术
- en: such as the blockchain and quantum computing. He is
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 例如区块链和量子计算。他
- en: a member of the Institute of Electrical and Electronics
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 电子与电气工程师学会(IEEE)的成员。
- en: Engineers (IEEE) and the British Computer Society (BCS).
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 工程师学会(IEEE)和英国计算机学会(BCS)的成员。
- en: His book on blockchain technology, *Mastering Blockchain*,
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 他关于区块链技术的著作，*《掌握区块链》*，
- en: is a widely accepted standard text on the subject. He has worked in various
    senior
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 是这个领域中被广泛接受的标准文本。他曾在各个高级
- en: technical roles for different organizations worldwide. Currently, he is working
    as a
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在世界各地的不同组织中担任技术角色。目前，他正在
- en: researcher in London, UK.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 研究员，居住在英国伦敦。
- en: xv
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: xv
- en: '![](index-16_1.jpg)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![](index-16_1.jpg)'
- en: '**About the Technical Reviewer**'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于技术审阅员**'
- en: '**Prasanth Sahoo** is a thought leader, an adjunct professor, a'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '**Prasanth Sahoo**是一位思想领袖，兼职教授，'
- en: technical speaker, and a full-time practitioner in blockchain,
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 技术演讲者，并且是区块链的全职从业者，
- en: DevOps, cloud, and Agile, working for PDI Software.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 从事PDI Software公司的DevOps、云和敏捷工作。
- en: He was awarded the “Blockchain and Cloud Expert of
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 他被授予“区块链与云专家
- en: the Year Award 2019” from TCS Global Community
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 2019年获得TCS全球社区“年度奖”
- en: for his knowledge share within academic services to
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 以及在学术服务中分享知识而受到表彰
- en: the community. He is passionate about driving digital
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 社区。他对推动数字
- en: technology initiatives by handling various community
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 通过处理各种社区驱动数字
- en: initiatives through coaching, mentoring, and grooming
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 通过辅导，指导和培养进行各种社区
- en: techniques.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 技术。
- en: xvii
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: XVII
- en: '**Acknowledgments**'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '**鸣谢**'
- en: This book would not have been possible without help from many people. First,
    I would
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 没有许多人的帮助，这本书将不会可能完成。首先，我要
- en: like to thank Aditee Mirashi from Apress for her time, patience, and dedication
    to this
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 想要感谢Apress的Aditee Mirashi进行付出的时间，耐心和对这个项目的奉献
- en: project.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 项目。
- en: Over the years, I have gone through many books, papers, online resources, and
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我阅读了许多书籍，论文，在线资源和
- en: lectures from experts and academics in this field to learn about this subject.
    I want to
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 来自这个领域的专家和学者的讲座。我想
- en: thank all those researchers and engineers who have shared their knowledge. I
    also want
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢所有分享知识的研究人员和工程师。我也想
- en: to thank the reviewers whose suggestions have improved this book greatly.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢那些提出了建议并极大改善了这本书的评论者。
- en: I want to thank my wife and children for their support and bearing with me when
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我要感谢我的妻子和孩子们的支持并忍受我
- en: I was busy writing during weekends, which I was supposed to spend with them.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 我在周末写作，而我应该用它们度过
- en: Finally, I want to thank my father, my beacon of light. He sacrificed everything
    for
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我要感谢我的父亲，我的明灯。他为
- en: me, guided me at every step in life, and empowered me to achieve the best in
    life. Thank
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 我，在生活的每一步引导着我，并赋予我在生活中取得最好成绩的力量。谢谢
- en: you, Dad! He motivated me to write this book and suggested that I publish it
    in 2022\.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 你，爸爸！他鼓励我写这本书，并建议我在2022年出版。
- en: And my mother, whose unconditional love for me has no bounds. Thank you Ammi!
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 还有我的母亲，她对我的无条件爱是无止境的。谢谢你，阿米！
- en: xix
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: XIX
- en: '**Introduction**'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: This book is an introduction to distributed consensus and its use in the blockchain.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是分布式共识及其在区块链中的应用的介绍。
- en: It covers classical protocols, blockchain age protocols that emerged after Bitcoin,
    and
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 它涵盖了经典协议，比特币之后出现的区块链时代协议
- en: quantum protocols. Many enthusiasts have come from different backgrounds into
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 量子协议。许多热衷者来自不同的背景
- en: the blockchain world and may not have traditional distributed systems experience.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链世界，可能没有传统的分布式系统经验。
- en: This book fills that knowledge gap. It introduces classical protocols and foundations
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书弥补了这一知识空白。它介绍了经典协议和基础
- en: of distributed consensus so that a solid foundation is built to understand the
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式共识的基础，以便建立对
- en: research on blockchain consensus. Many other people have come from traditional
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链共识的研究。还有许多其他人来自传统
- en: distributed systems backgrounds, either developers or theorists. Still, they
    may lack the understanding of blockchain and relevant concepts such as Bitcoin
    and Ethereum. This
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统背景的倡议者。但是，他们可能缺乏对区块链和相关概念的理解，如比特币和以太坊。这
- en: book will fill that gap too.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书也将填补这一空白。
- en: Moreover, as quantum computing will impact almost everything in the future,
    I have
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于量子计算将在未来几乎影响所有领域，我已经
- en: also covered how quantum computing can help build quantum consensus algorithms.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 还介绍了量子计算如何帮助构建量子共识算法。
- en: A clear advantage can be realized in the efficiency and security of consensus
    algorithms
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 可以意识到共识算法的效率和安全性的明显优势
- en: by using quantum computing. Therefore, an entire chapter is dedicated to quantum
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 通过量子计算。因此，有一整章专门讨论量子
- en: consensus.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 共识。
- en: This book is for everyone who wants to understand this fascinating world of
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书适用于希望了解这个迷人世界的每个人
- en: blockchain consensus and distributed consensus in general. A basic understanding
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链共识和一般分布式共识。基本理解
- en: of computer science is all that's required to fully benefit from this book.
    This book can also serve as a study resource for a one-semester course on blockchain
    and distributed
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机科学就是这本书全面畅销所必需的。这本书还可以作为区块链和分布式一学期课程的学习资源
- en: consensus.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 共识。
- en: The book starts with a basic introduction to what distributed consensus is and
    covers
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先介绍了分布式共识的基本概念，并涵盖
- en: fundamental ideas such as causality, time, and various distributed system models.
    Then
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 基本概念，如因果关系，时间和各种分布式系统模型。然后
- en: to build the foundation for understanding the security aspects of blockchain
    consensus,
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 以建立理解区块链共识安全方面的基础，
- en: an introduction to cryptography is provided. Then a detailed introduction to
    distributed
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 提供对密码学的介绍。然后对分布式进行了详细介绍
- en: consensus is presented. Next, an introduction to the blockchain is given, which
    gives a
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 提出共识。接下来，介绍了区块链，这给出了一个
- en: solid understanding of what a blockchain is and how it is fundamentally a distributed
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 对区块链是什么以及它如何从根本上是一个分布的
- en: system. We then discuss blockchain consensus, focusing on the first cryptocurrency
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 系统。然后我们讨论区块链共识，重点放在第一个加密货币上
- en: blockchain, Bitcoin, and how it achieves its security and distributed consensus
    goals.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链、比特币以及它是如何实现其安全和分布式共识目标的。
- en: Starting from Chapt[er 6](https://doi.org/10.1007/978-1-4842-8179-6_6) is an
    introduction to early protocols covering classical work like the Byzantine generals
    problem and its various solutions. After this, classical
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 从第六章开始，介绍了早期协议，涵盖了像拜占庭将军问题以及它的各种解决方案。之后，经典
- en: xxi
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: xxi
- en: InTroduCTIon
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 引言
- en: protocols such as Paxos, DLS, and PBFT are covered. Next, the blockchain protocols
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 如Paxos、DLS和PBFT等协议。接下来，介绍了区块链协议
- en: such as ETHASH, Tendermint, GRANDPA, BABE, HotStuff, and Casper are introduced.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如ETHASH、Tendermint、GRANDPA、BABE、HotStuff和Casper等协议。
- en: These protocols are the latest in the research on blockchain consensus mechanisms.
    Of
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 这些协议是区块链共识机制研究的最新成果。即使
- en: course, we cannot cover everything due to the vastness of the subject. Still,
    this chapter dedicated to blockchain consensus introduces all those protocols
    which are state of
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，由于主题的广泛性，我们不可能覆盖一切。但是，这一章专门讨论了区块链共识，介绍了所有那些协议，这些协议都是目前
- en: the art and in use in mainstream blockchain platforms, such as Polkadot, Ethereum,
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 艺术和使用在主流区块链平台上，如Polkadot、Ethereum、
- en: and Cosmos.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 和 Cosmos。
- en: The next chapter is another exciting topic, quantum consensus. With the advent
    of
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章是另一个令人兴奋的话题，量子共识。随着量子计算的出现
- en: quantum computing, it has been realized that quantum computing can significantly
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算，人们意识到量子计算可以显着提高
- en: enhance the classical distributed consensus results. Even results such as FLP
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 增强经典分布式共识结果。甚至结果如FLP
- en: impossibility might be possible to refute using quantum properties like superposition
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 不可能可能可以用量子性质（如叠加）来反驳
- en: and entanglement.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 以及纠缠。
- en: Finally, the last chapter summarizes what we have learned in the book, introduces
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，最后一章总结了我们在书中所学的内容，介绍
- en: some exotic protocols, and suggests some research directions.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 一些奇特的协议，并提出一些研究方向。
- en: As this book focuses on the foundations of the blockchain and consensus, I believe
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书主要关注区块链和共识的基础，我相信
- en: that this book will serve as a great learning resource for all enthusiasts who
    want to learn about the blockchain and blockchain consensus. Furthermore, I hope
    that this book will
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将成为所有希望了解区块链和区块链共识的爱好者的绝佳学习资源。此外，我希望本书将
- en: serve technologists, researchers, students, developers, and indeed anyone who
    wants to
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 为技术人员、研究人员、学生、开发人员乃至任何想了解
- en: know about this fascinating subject well for many years to come.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，对这个迷人的主题有所了解。
- en: xxii
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: xxii
- en: '**CHAPTER 1**'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1章**'
- en: '**Introduction**'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: In this chapter, we explore the foundations of distributed computing. First,
    we will
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了分布式计算的基础。首先，我们将
- en: answer the questions about a distributed system, its fundamental abstractions,
    system
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 回答有关分布式系统、其基本抽象、系统
- en: models, and relevant ideas.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 模型和相关思想。
- en: '**Distributed Systems**'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式系统**'
- en: In the literature, there are many different definitions of distributed systems.
    Still,
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在文献中，关于分布式系统有许多不同的定义。尽管
- en: fundamentally they all address the fact that a distributed system is a collection
    of
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 从根本上，他们都解决了一个分布式系统是一组
- en: computers working together to solve a problem.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机共同解决问题。
- en: 'Some definitions from famous scholars in this field are as follows:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 一些这个领域中著名学者的定义如下：
- en: '*A distributed system is one in which the failure of a computer you didn’t*'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '*分布式系统是指一个由您没有*'
- en: '*even know existed can render your own computer unusable.*'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '*甚至不知道存在的东西可能会导致您自己的计算机无法使用。*'
- en: —Leslie Lamport
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: —Leslie Lamport
- en: '[https://lamport.azurewebsites.net/pubs/distributed-system.txt](https://lamport.azurewebsites.net/pubs/distributed-system.txt)'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://lamport.azurewebsites.net/pubs/distributed-system.txt](https://lamport.azurewebsites.net/pubs/distributed-system.txt)'
- en: '*A distributed system is a collection of autonomous computing elements*'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '*分布式系统是由自主计算元素组成的集合*'
- en: '*that appears to its users as a single coherent system.*'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '*对用户而言呈现为单一的连贯系统。*'
- en: —Tanenbaum
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: —塔能鲍姆
- en: '[www.distributed-systems.net/index.php/books/ds3/](http://www.distributed-systems.net/index.php/books/ds3/)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.distributed-systems.net/index.php/books/ds3/](http://www.distributed-systems.net/index.php/books/ds3/)'
- en: Here is my own attempt!
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我的尝试！
- en: '1'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: © Imran Bashir 2022
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: © Imran Bashir 2022
- en: I. Bashir, *Blockchain Consensus*, [https://doi.org/10.1007/978-1-4842-8179-6_1](https://doi.org/10.1007/978-1-4842-8179-6_1#DOI)
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: I. 巴希尔，*区块链共识*，[https://doi.org/10.1007/978-1-4842-8179-6_1](https://doi.org/10.1007/978-1-4842-8179-6_1#DOI)
- en: Chapter 1 IntroduCtIon
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: A distributed system is a collection of autonomous computers that collaborate
    with
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统是一组自治计算机，相互协作
- en: each other on a message-passing network to achieve a common goal.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 它们通过消息传递网络相互合作来实现共同的目标。
- en: Usually, this problem is not solvable by a single computer, or the distributed
    system
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这个问题无法由单个计算机或分布式系统来解决。
- en: is inherently distributed such as a social media application.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 例如社交媒体应用程序等固有地分布式。
- en: Some everyday examples of distributed systems are Google, Facebook, Twitter,
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 一些日常的分布式系统示例包括 Google，Facebook，Twitter，
- en: Amazon, and the World Wide Web. Another class of recently emerged and popular
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊，以及万维网。另一个最近出现并流行的类别是
- en: distributed systems is blockchain or distributed ledgers, which we will cover
    in
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链或分布式分类帐，我们将详细介绍
- en: Chapt[er 4\.](https://doi.org/10.1007/978-1-4842-8179-6_4)
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 第[4\.]()章
- en: In this chapter, we lay the foundations and look at the distributed systems
    in general,
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们奠定基础，总体来看分布式系统，
- en: their characteristics and properties, motivations, and system models that help
    reason
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的特征和属性，动机以及有助于推理的系统模型
- en: about the properties of a distributed system.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 关于分布式系统的属性。
- en: While distributed systems can be quite complex and usually have to address many
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管分布式系统可能非常复杂，并且通常必须解决许多
- en: design aspects, including process design, messages (interaction between processes),
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 设计方面，包括进程设计，消息（进程间的交互），
- en: performance, security, and event management, a core problem is consensus.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 性能，安全性和事件管理，其中一个核心问题是共识。
- en: Consensus is a fundamental problem in distributed systems where despite some
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 共识是分布式系统中的一个基本问题，尽管存在一些
- en: failures in the system, the processes within the distributed system always agree
    to the
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中的故障，分布式系统内的进程始终同意
- en: state of the system. We will do more of this in Chapt[er 3](https://doi.org/10.1007/978-1-4842-8179-6_3).
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的状态。我们将在第[3](https://doi.org/10.1007/978-1-4842-8179-6_3)章更详细地讨论这个问题。
- en: In the first chapter, we will lay the foundation of distributed systems and
    build an
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一章中，我们将奠定分布式系统的基础，并构建一个
- en: intuition about what they are and how they work. After this, we will cover cryptography,
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 关于它们是什么以及如何工作的直觉。之后，我们将涉及加密学，
- en: blockchain, and consensus, which will provide a solid foundation to then move
    on and
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链和共识，这将为我们提供一个坚实的基础，然后继续和
- en: read the rest of the chapters, covering more in-depth topics such as consensus
    protocols, design and implementation, and some latest research on quantum consensus.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读其余章节，覆盖更深入的主题，如共识协议，设计与实施，以及有关量子共识的一些最新研究。
- en: But first, let’s have a closer look at the distributed system foundations and
    discuss
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们更近距离地看看分布式系统的基础并讨论
- en: what characteristics a distributed system has.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 一个分布式系统具有哪些特性。
- en: '**Characteristics**'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性**'
- en: 'What makes a system distributed? Here are some fundamental properties:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 使得一个系统是分布式的？以下是一些基本属性：
- en: 1\. No global physical clocks
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 没有全球物理时钟
- en: 2\. Autonomous processors/independent processors/
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 自治处理器/独立处理器/
- en: indepedently failing
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 独立失败
- en: 3\. No global shared common memory
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 没有全局共享的公共存储器
- en: '2'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: Chapter 1 IntroduCtIon
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: 4\. Heterogeneous
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 异构
- en: 5\. Coherent
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 5. 连贯
- en: 6\. Concurrency/concurrent operation
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 6. 并发/并行操作
- en: No global physical clock implies that the system is distributed in nature and
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 没有全球物理时钟意味着系统的本质是分布式的
- en: asynchronous. The computers or nodes in a distributed system are independent
    with
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 异步。分布式系统中的计算机或节点是相互独立的，
- en: their own memory, processor, and operating system. These systems do not have
    a global
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 它们各自拥有自己的存储器、处理器和操作系统。这些系统没有全局的
- en: shared clock as a source of time for the entire system, which makes the notion
    of time
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 共享时钟作为整个系统的时间源，使得时间的概念
- en: tricky in distributed systems, and we will shortly see how to overcome this
    limitation.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中是非常棘手的，我们很快将看到如何克服这一限制。
- en: The fact that there is no global shared memory implies that the only way processes
    can
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个原因我们想要构建一个分布式系统。最
- en: communicate with each other is by consuming messages sent over a network using
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 节点）到达并添加到节点的局部知识。
- en: channels or links.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 它的状态，并且除非来自其他
- en: All processes or computers or nodes in a distributed system are independent,
    with
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的并发性与要求有关
- en: their own operating system, memory, and processor. There is no global shared
    memory
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 自己的操作系统、内存和处理器。没有全局共享内存
- en: in a distributed system, which implies that each processor has its own memory
    and
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 通过消耗通过网络发送的消息来相互通信
- en: its own view of its state and has limited local knowledge unless a message from
    other
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: CPU、磁盘、等等。
- en: node(s) arrives and adds to the local knowledge of the node.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性是分布计算中研究和研究的重要领域之一，我们将很快更详细地看一下容错的上下文。
- en: Distributed systems are usually heterogeneous with multiple different types
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 分布系统通常是异构的，具有多种不同类型
- en: of computers with different architecture and processors. Such a setup can include
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 单一的一体化系统。这个概念被称为分布透明度。
- en: commodity computers, high-end servers, IoT devices, mobile devices, and virtually
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: • 资源共享
- en: any device or "thing" that runs the distributed algorithm to solve a common
    problem (achieve a common goal) the distributed system has been designed for.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 任何运行分布式算法以解决分布式系统设计的共同问题（实现共同目标）的设备或"事物"。
- en: Distributed systems are also coherent. This feature abstracts away all minute
    details
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 由不同架构和处理器的计算机组成。这样的设置可能包括
- en: of the dispersed structure of a distributed system, and to an end user, it appears
    as a
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的分散结构，对于最终用户来说，这看起来像是一个
- en: single cohesive system. This concept is known as distribution transparency.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 他们之间的关系。
- en: Concurrency in a distributed system is concerned with the requirement
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机。然后，当它失败时，除非重新启动它或者如果它开发了重大故障，则别无选择。然而，在分布式系统中有多个节点
- en: that the distributed algorithm should run concurrently on all processors in
    the
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 通道或连接的消息。
- en: distributed system.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有全局共享内存的事实，那么进程之间唯一的方式
- en: Figur[e 1-1 sho](#p23)ws a generic model of a distributed system.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 图1-1显示了分布式系统的通用模型。
- en: '3'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: '![](index-23_1.png)'
  id: totrans-497
  prefs: []
  type: TYPE_IMG
  zh: '![](index-23_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: '***Figure 1-1\.** A distributed system*'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-1.* 分布式系统**'
- en: There are several reasons why we would want to build a distributed system. The
    most
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个分布式系统中，所有进程、计算机或节点都是独立的
- en: common reason is scalability. For example, imagine you have a single server
    serving 100
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分别看看这些原因中的每一个。
- en: users a day; when the number of users grows, the usual method is to scale vertically
    by
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。
- en: adding more powerful hardware, for example, faster CPU, more RAM, bigger hard
    disk,
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 添加更强大的硬件，例如更快的CPU、更多的RAM、更大的硬盘，
- en: etc., but in some scenarios, you can only go so much vertically, and at some
    point, you
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 等等，但在某些情况下，你只能纵向发展到一定程度，到了某个时候，你
- en: have to scale horizontally by adding more computers and somehow distributing
    the load
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 必须通过添加更多的计算机并以某种方式分配负载来实现横向扩展
- en: between them.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法应该在所有处理器上同时运行
- en: '**Why Build Distributed Systems**'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统也是连贯的。此功能抽象出所有细节
- en: 'In the following, we introduce some motivations behind building distributed
    systems:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '接下来，我们介绍构建分布式系统背后的一些动机:'
- en: • Reliability
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么构建分布式系统**'
- en: • Performance
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: • 性能
- en: • Resource sharing
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: • 可靠性
- en: • Inherently distributed
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 商品计算机、高端服务器、物联网设备、移动设备，以及几乎
- en: Let’s have a look at each one of these reasons separately.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 用户一天；当用户数量增长时，通常的方法是通过垂直扩展
- en: '4'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '4'
- en: Chapter 1 IntroduCtIon
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: '**Reliability**'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '**可靠性**'
- en: Reliability is a key advantage of distributed systems. Imagine if you have a
    single
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性是分布式系统的一个关键优势。想象如果你只有一个单独的
- en: computer. Then, when it fails, there is no choice but to reboot it or get a
    new one if it had developed a significant fault. However, there are multiple nodes
    in distributed systems
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中，这意味着每个处理器都有自己的内存和
- en: in a system that allows a distributed system to tolerate faults up to a level.
    Thus, even if some computers fail in a distributed network, the distributed system
    keeps functioning.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个允许分布式系统容忍故障的系统中。因此，即使在分布式网络中某些计算机出现故障，分布式系统仍然可以正常运行。
- en: Reliability is one of the significant areas of study and research in distributed
    computing, and we will look at it in more detail in the context of fault tolerance
    shortly.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: • 本质上是分布式的
- en: Reliability encompasses several aspects including availability, integrity, and
    fault
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性包括可用性、完整性和故障
- en: 'tolerance:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 容错性：
- en: • **Availability** simply means that when a request is made by a client,
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: • **可用性** 意味着当客户提出请求时，
- en: the distributed system should always be available.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统应始终可用。
- en: • **Integrity** ensures that the state of the distributed system should
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: • **完整性** 确保分布式系统的状态应
- en: always be in stable and consistent state.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 总是保持稳定和一致的状态。
- en: • **Fault tolerance** enables a distributed system to function even in case
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: • **容错性** 使分布式系统能够在
- en: of some failures.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些故障。
- en: '**Performance**'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '**性能**'
- en: In distributed systems, better performance can be achieved naturally. For example,
    in
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中，可以自然地实现更好的性能。例如，在
- en: the case of a cluster of computers working together, better performance can
    be achieved
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 在一组计算机集群中，可以实现更好的性能
- en: by parallelizing the computation. Also, in a geographically dispersed distributed
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 通过并行化计算。此外，在地理上分散的分布式
- en: network, clients (users) accessing nodes can get data from the node which is
    closer to
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 网络，访问节点的客户（用户）可以从更接近的节点获取数据
- en: their geographic region, which results in quicker data access. For example,
    in the case
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 他们所在的地理区域，这导致了更快的数据访问。例如，在这种情况下
- en: of Internet file download, a mirror that is closer to your geographic region
    will provide much better download speed as compared to the one that might be in
    another continent.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网文件下载时，和你地理区域更近的一个镜像将比其他大陆的镜像提供更好的下载速度。
- en: Performance of a distributed system generally encompasses two facets,
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的性能通常包括两个方面，
- en: responsiveness and throughput.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 响应性和吞吐量。
- en: '**Responsiveness**'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '**响应性**'
- en: This property guarantees that the system is reasonably responsive, and users
    can get
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性保证系统有合理的响应性，用户可以得到
- en: adequate response from the distributed system.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的充分响应。
- en: '5'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '5'
- en: Chapter 1 IntroduCtIon
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介CuCTIon
- en: '**Throughput**'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '**吞吐量**'
- en: Throughput of a distributed system is another measure by which the performance
    of
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的吞吐量是另一种衡量其性能的方法
- en: the distributed system can be judged. Throughput basically captures the rate
    at which
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 可判断分布式系统的性能。吞吐量基本上捕捉数据的速率
- en: processing is done in the system; usually, it is measured in transactions per
    second.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中所做的处理；通常以每秒事务数计量。
- en: As we will see later in Chapter [5, hi](https://doi.org/10.1007/978-1-4842-8179-6_5)gh
    transaction per second rate is quite desirable in blockchain systems (distributed
    ledgers). Quite often, transactions per second or
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将在第 [5，hi](https://doi.org/10.1007/978-1-4842-8179-6_5)gh章中看到的，每秒事务率在区块链系统（分布式分类帐）中非常理想。很多时候，每秒事务数或
- en: queries executed per second are measured for a distributed database as a measure
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 每秒执行的查询被测量为分布式数据库的性能指标
- en: of the performance of the system. Throughput is impacted by different aspects
    of the
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的性能。吞吐量受到不同方面的影响
- en: distributed system, for example, processing speeds, communication network quality,
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统，例如处理速度，通信网络质量，
- en: speed and reliability, and the algorithm. If your hardware is good, but the
    algorithm
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 速度和可靠性，以及算法。如果你的硬件不错，但算法
- en: is designed poorly, then that can also impact the throughput, responsiveness,
    and the
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 设计不当，那也会影响吞吐量，响应性和
- en: overall performance of the system.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的整体性能。
- en: '**Resource Sharing**'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源共享**'
- en: Resources in a distributed system can be shared with other nodes/participants
    in the
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中的资源可以与其他节点/参与者共享
- en: distributed system. Sometimes, there are expensive resources such as a supercomputer,
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。有时，有昂贵的资源，如超级计算机，
- en: a quantum computer, or some industrial grade printer which can be too expensive
    to
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 一个量子计算机，或一些工业级打印机，可能太昂贵
- en: be made available at each site; in that case, resources can be shared via communication
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 应在每个站点中可用；在这种情况下，资源可以通过通信共享
- en: links to other nodes remotely. Another scenario could be where data can be divided
    into
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 远程链接到其他节点。另一个场景可能是数据可以划分为
- en: multiple partitions (shards) to enable quick access.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 多个分区（分片）以实现快速访问。
- en: '**Inherently Distributed**'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '**固有分布**'
- en: There are scenarios where there is no option but to build a distributed system
    because
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些情景是除了构建分布式系统外别无选择，因为
- en: the problem can only be solved by a distributed system. For example, a messaging
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 问题只能通过分布式系统来解决。例如，一个消息传递
- en: system is inherently distributed. Mobile network is inherently by nature distributed.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 系统本质上是分布式的。移动网络的本质是分布式的。
- en: In these and similar use cases, a distributed system is the only one that can
    solve the
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些以及类似情况下，只有分布式系统才能解决
- en: problem; therefore, the system has to be distributed by design.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 问题；因此，系统必须经过设计分布式。
- en: With all these benefits of distributed systems, there are some challenges that
    need to
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 有了所有这些分布式系统的好处，仍然有一些需要解决的挑战
- en: be addressed when building distributed systems. The properties of distributed
    systems
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建分布式系统时需要解决。分布式系统的属性
- en: such as no access to a global clock, asynchrony, and partial failures make designing
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如无法访问全局时钟，异步和部分故障等问题使得设计
- en: reliable distributed systems a difficult task. In the next section, we look
    at some of the primary challenges that should be addressed while building distributed
    systems.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠的分布式系统是一项艰巨的任务。在下一节中，我们将看一些在构建分布式系统时应该解决的主要挑战。
- en: '6'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '6'
- en: Chapter 1 IntroduCtIon
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章引言
- en: '**Challenges**'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: '**挑战**'
- en: Distributed systems are hard to build. There are multiple challenges that need
    to be
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统很难构建。需要解决多个挑战
- en: addressed while designing distributed systems. A collection of some common challenges
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 设计分布式系统时需要解决的一些常见挑战
- en: is presented as follows.
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示呈现。
- en: '**Fault Tolerance**'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '**故障容忍性**'
- en: With more computers and at times 100s of thousands in a data center, for example,
    in
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在数据中心有更多的计算机，有时甚至有成千上万台。
- en: the case of cloud computing, inevitably something somewhere would be failing.
    In other
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算的情况下，无法避免地会有某些东西出现故障。换句话说
- en: words, the probability of failing some part of the distributed system, be it
    a network
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，分布式系统的某一部分出现故障的概率，无论是网络
- en: cable, a processor, or some other hardware, increases with the number of computers.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 电缆，处理器或其他硬件，随着计算机数量的增加。
- en: This aspect of distributed systems requires that even if some parts of the distributed
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的这个方面要求，即使分布式
- en: system fail (usually a certain threshold), the distributed system as a whole
    must keep
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 系统失败（通常是某个阈值时），整个分布式系统必须保持
- en: operating. To this end, there are various problems that are studied in distributed
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 运行。为此，在分布式系统中研究了各种问题
- en: computing under the umbrella of fault tolerance. Fault-tolerant consensus is
    one such
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 容错共识是其中之一
- en: example where the efforts are made to build consensus algorithms that continue
    to run
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建一致性算法，使其能够继续运行的努力正在进行
- en: correctly as specified even in the presence of a threshold of faulty nodes or
    links in a
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 在特定的节点或链路中得以实现，即使有一个故障节点或链路的阈值在系统内
- en: distributed system. We will see more details about that in Chapt[er 3](https://doi.org/10.1007/978-1-4842-8179-6_3).
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。我们将在第[3章](https://doi.org/10.1007/978-1-4842-8179-6_3)详细了解更多细节。
- en: A relevant area of study is **failure detection** which is concerned with the
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 一个相关的研究领域是**故障检测**，它涉及
- en: development of algorithms that attempt to detect faults in a distributed system.
    This is
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试检测分布式系统中故障的算法的开发。这是
- en: especially an area of concern in asynchronous distributed systems where there
    is no
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在异步分布式系统中，这是一个值得关注的问题，因为在那里没有
- en: upper bound on the message delivery times. The problem becomes even more tricky
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传递时间的上界。这个问题变得更加棘手
- en: when there is no way to distinguish between a failed node and a node that is
    simply
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 当无法区分失败的节点和仅仅是
- en: slower and a lost message on the link. Failure detection algorithms give a probabilistic
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 缓慢和链路上的丢失消息。故障检测算法提供概率
- en: indication about the failure of a process. This up or down status of the node
    then can be used to handle that fault.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 关于进程失败的指示。然后可以使用节点的上下状态来处理该故障。
- en: Another area of study is **replication** which provides fault tolerance on the
    principle that if the same data is replicated across multiple nodes in a distributed
    system, then
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个研究领域是**复制**，它提供了故障容忍性，原则是如果相同的数据在分布式系统中的多个节点上进行了复制，那么
- en: even if some nodes go down the data is still available, which helps to keep
    the system
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 即使一些节点宕机，数据仍然可用，这有助于保持系统
- en: stable and continue to meet its specification (guarantees) and remain available
    to the
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定并继续满足其规范（保证），并保持可用性
- en: end users. We will see more about replication in Chapt[er 3\.](https://doi.org/10.1007/978-1-4842-8179-6_3)
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 最终用户。我们将在第[3章](https://doi.org/10.1007/978-1-4842-8179-6_3)详细了解更多关于复制的内容。
- en: '**Security**'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全性**'
- en: Being a distributed system with multiple users using it, out of which some might
    be
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个分布式系统，有多个用户使用它，其中一些可能是
- en: malicious, the security of distributed systems becomes a prime concern. This
    situation
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件的存在使得分布式系统的安全性成为一个主要关注点。这种情况
- en: '7'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: '7'
- en: Chapter 1 IntroduCtIon
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: is even more critical in geographically dispersed distributed systems and open
    systems
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 在地理上分散的分布式系统和开放系统中更加关键，
- en: such as blockchains, for example, Bitcoin blockchain. To this, the fundamental
    science
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，区块链等技术，比如比特币区块链。对于这一点，基础科学
- en: used for providing security in distributed systems is cryptography, which we
    will cover
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 用于在分布式系统中提供安全性的一种方法是密码学，我们将在
- en: in detail in Chapter [2, and w](https://doi.org/10.1007/978-1-4842-8179-6_2)e
    will keep referring to it throughout the book, especially in relation to blockchain
    consensus. Here, we study topics such as cryptography
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 在第[2, and w](https://doi.org/10.1007/978-1-4842-8179-6_2)章，我们将在整本书中都会提到它，特别是关于区块链共识。在这里，我们研究诸如密码学等主题
- en: and address challenges such as authentication, confidentiality, access control,
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 并解决诸如身份验证、机密性、访问控制等挑战，
- en: nonrepudiation, and data integrity.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 否认，和数据完整性。
- en: '**Heterogeneity**'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: '**异构性**'
- en: A distributed system is not necessarily composed of exactly the same hardware
    nodes. It
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 一个分布式系统不一定是由完全相同的硬件节点组成。它
- en: is possible and is called homogenous distributed system, but usually the hardware
    and
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 是可能的，称为同质分布式系统，但通常硬件和
- en: operating systems are different from each other. In this type of scenario, different
    operating systems and hardware can behave differently, leading to synchronization
    complexities.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的操作系统之间是不同的。在这种情况下，不同的操作系统和硬件可以表现出不同的行为，从而导致同步复杂性。
- en: Some nodes might be slow, running a different operating system which could have
    bugs,
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 一些节点可能运行缓慢，使用着有缺陷的不同操作系统，
- en: some might run faster due to better hardware, and some could be resource constrained
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 一些可能由于更好的硬件而运行得更快，而一些可能受到资源约束
- en: as mobile devices or IoT devices. With all these different types of nodes (processes,
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 如移动设备或物联网设备。有了所有这些不同类型的节点（进程，
- en: computers) in a distributed system, it becomes challenging to build a distributed
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机）在一个分布式系统中变得很有挑战性，来构建一个分布式
- en: algorithm that works correctly on all these different types of systems and continues
    to
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 算法在所有这些不同类型的系统上正常工作，并且持续
- en: operate correctly despite the differences in the local operating environment
    of the nodes.
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管节点的本地操作环境存在差异，但它
- en: '**Distribution Transparency**'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布透明性**'
- en: One of the goals of a distributed system is to achieve transparency. It means
    that the
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的一个目标是实现透明性。这意味着
- en: distributed system, no matter how many individual computers and peripherals
    it is
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统，不管它有多少单独的计算机和外围设备
- en: built of, it should appear as a single coherent system to the end user. For
    example,
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 构建的，它应该出现为一个单一的连贯系统对于最终用户来说。例如，
- en: an ecommerce website may have many database servers, firewalls, web servers,
    load
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 电子商务网站可能有许多数据库服务器、防火墙、Web服务器、负载
- en: balancers, and many other elements in their distributed system, but all that
    should be
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 负载均衡器等分布式系统中的许多其他元素，但所有这些都应该
- en: abstracted away from the end user. The end user is not necessarily concerned
    about
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 从最终用户那里抽象出来。最终用户未必关心
- en: these backend "irrelevant" details but only that when they make a request, the
    system responds. In summary, the distributed system is coherent if it behaves
    in accordance
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 这些后端的“无关紧要”的细节，而仅仅是当他们发出请求时，系统做出响应。总之，如果分布式系统的行为符合
- en: with the expectation of the end user, despite its heterogeneous and dispersed
    structure.
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 与最终用户的期望一致，尽管其异构和分散的结构。
- en: For example, think about IPFS, a distributed file system. Even though the files
    are spread and sharded across multiple computers in the IPFS network, to the end
    user all that
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下IPFS，一个分布式文件系统。尽管文件经过分散存储在IPFS网络中的多台计算机上，但对最终用户来说，所有这一切
- en: detail is transparent, and the end user operates on it almost as if they are
    using a local file system. Similar observation can be made about other systems
    such as online email
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 细节是透明的，最终用户几乎像使用本地文件系统一样使用它。关于其他系统，例如在线电子邮件也可以做出类似的观察
- en: platforms and cloud storage services.
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 平台和云存储服务。
- en: '8'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '8'
- en: Chapter 1 IntroduCtIon
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '**Timing and Synchronization**'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间和同步**'
- en: Synchronization is a vital operation of a distributed system to ensure a stable
    global
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 同步是分布式系统的一个重要操作，用来确保一个稳定的全局
- en: state. As each process has its view of time depending on their internal physical
    clocks
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 状态。由于每个进程都有其时间视图，取决于其内部物理时钟
- en: which can drift apart, the time synchronization becomes one of the fundamental
    issues
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会出现分歧，时间同步成为了一个基本问题
- en: to address in designing distributed systems. We will see some more details around
    this
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计分布式系统时需要解决的问题。我们将在我们关于时间、顺序的部分看到更多细节
- en: interesting problem and will explore some solutions in our section on **timing,
    orders,**
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的问题，并探讨一些解决方案。
- en: '**and clocks** in this chapter.'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '**和时间** 在本章中。'
- en: '**Global State**'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '**全局状态**'
- en: As the processes in a distributed system only have knowledge of their local
    states, it
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 由于分布式系统中的进程只知道它们的本地状态，所以
- en: becomes quite a challenge to ascertain the global state of the system. There
    are several
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 变得相当具有挑战性，以确定系统的全局状态。有几个
- en: algorithms that can be used to do that, such as the Chandy-Lamport algorithm.
    We will
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于此目的的算法，如 Chandy-Lamport 算法。我们将
- en: briefly touch upon that shortly.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 很快就会触及到。
- en: '**Concurrency**'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: '**并发**'
- en: Concurrency means multiple processes running at the same time. There is also
    a
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 并发意味着多个进程同时运行。还有一个
- en: distinction made between logical and physical concurrency. Logical concurrency
    refers
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 在逻辑上和物理上并发作了区别。逻辑并发指的是
- en: to the situation when multiple programs are executed in an interleaving manner
    on a
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 情况，当多个程序以交织方式在一个
- en: single processor. Physical concurrency is where program units from the same
    program
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 单个处理器上同时执行。物理并发是来自同一程序的程序单位
- en: execute at the same time on two or more processors.
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个或多个处理器上同时执行。
- en: Distributed systems are ubiquitous. They are in everyday use and have become
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统是无处不在的。它们每天都在使用，并且已经成为
- en: part of our daily routine as a society. Be it the Internet, the World Wide Web,
    Bitcoin,
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 作为我们社会日常生活的一部分。无论是因特网，万维网，比特币，
- en: Ethereum, Google, Facebook, or Twitter, distributed systems are now part of
    our daily
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊，谷歌，Facebook 或 Twitter，分布式系统现在已经成为我们日常生活的一部分
- en: lives. At the core of distributed systems, there are distributed algorithms
    which form the foundation of the processing being performed by the distributed
    system. Each process
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 的核心，分布式系统的基础是分布式算法，这些算法构成了分布系统执行的基础。每个进程
- en: runs the same copy of the algorithm that intends to solve the problem for which
    the
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 运行着相同的算法副本，旨在解决分布式系统的问题
- en: distributed system has been developed, hence the term distributed algorithm.
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的发展，因此有了分布式算法这个术语。
- en: A process can be a computer, an IoT device, or a node in a data center. We abstract
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 进程可以是计算机，物联网设备，或者是数据中心的节点。我们将抽象
- en: these devices and represent these as processes, whereas physically it can be
    any physical computer.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备并将这些表示为进程，然而在物理上它可以是任何物理计算机。
- en: Now let’s see some of the relevant technologies and terminologies.
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看一些相关的技术和术语。
- en: '9'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '9'
- en: Chapter 1 IntroduCtIon
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: '**Parallel vs. Distributed vs. Concurrency**'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '**并行 vs. 分布式 vs. 并发**'
- en: The key difference between a parallel system and a distributed system is that
    parallel
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 并行系统和分布式系统之间的关键区别是并行系统
- en: systems’ primary focus is on high performance, whereas distributed systems are
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的主要重点是高性能，而分布式系统是
- en: concerned with tolerating partial failures. Also, parallel processing systems
    have direct access to a shared memory, whereas in distributed systems all processors
    have their own
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 关注容忍部分故障。此外，并行处理系统可以直接访问共享内存，而在分布式系统中，所有处理器都有它们自己的
- en: local memory.
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 本地内存。
- en: A comparison is shown in Ta[ble 1-1\.](#p29)
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 在[表1-1\.](#p29)中显示了一个比较
- en: '***Table 1-1\.** Parallel vs. distributed systems*'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: '***表1-1\.** 并行 vs. 分布式系统*'
- en: '**Resource/**'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源/**'
- en: '**Parallel**'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '**并行**'
- en: '**Distributed**'
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式**'
- en: '**Property**'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '**属性**'
- en: Memory
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: 内存
- en: Shared memory, a common address
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 共享内存，一个共同的地址
- en: each processor has its own
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 每个处理器都有其自己的
- en: space
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 空间
- en: memory
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: 内存
- en: Coupling
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 耦合
- en: tightly coupled
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: 紧密耦合
- en: Loosely coupled
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 松散耦合
- en: Synchronization
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 同步
- en: through a global shared clock
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个全局共享时钟
- en: through synchronization algorithms
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 通过同步算法
- en: Goal
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: high performance
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 高性能
- en: Scalability
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展性
- en: algorithms
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: 算法
- en: Concurrent
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 并发的
- en: distributed
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式
- en: Messaging
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 通讯
- en: no network, shared memory
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 没有网络，共享内存
- en: Message-passing network
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传递网络
- en: There are some overlapping ideas in the distributed computing, and sometimes
    it
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式计算中存在一些重叠的概念，有时会出现
- en: becomes a bit difficult for beginners to understand. In the next section, I
    will try to clarify some of the pertinent terminology and some ambiguities.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新手来说有点难以理解。在下一节中，我将尝试澄清一些相关术语和一些不明确之处。
- en: '**Centralized vs. Decentralized vs. Distributed**'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: '**集中式 vs. 去中心化 vs. 分布式**'
- en: A centralized system is a typical distributed system where clients connect to
    a central
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 集中式系统是典型的分布式系统，客户端连接到中央
- en: server or a service provider. There is usually an administrator in control of
    the entire
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器或服务提供商。通常有一名管理者控制整个
- en: system. A typical example is the standard client-server architecture, where
    all clients
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 系统。标准的例子是标准的客户端服务器架构，所有客户端
- en: send requests to a central server and receive responses. These systems are usually
    easier to develop and maintain. However, they are not fault tolerant (in the stricter
    sense of
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 发送请求到中央服务器并接收响应。这些系统通常更容易开发和维护。然而，在严格意义上它们不具有容错性（更严格的意义上
- en: client-server where there is only one central server); if the central server
    fails, the clients cannot connect and make requests.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端-服务器架构中，只有一个中央服务器；如果中央服务器失败，客户端就无法连接和发出请求。
- en: '10'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '10'
- en: '![](index-30_1.png)'
  id: totrans-704
  prefs: []
  type: TYPE_IMG
  zh: '![](index-30_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: A decentralized system is where there is no central owner of the system. Instead,
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 去中心化系统是没有系统的中央所有者。相反，
- en: there can be multiple owners in different locations who oversee different parts
    of the
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有多个地点的多个所有者来监视不同部分的
- en: system, or there is no controller as in blockchain systems.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 系统，或者像区块链系统那样没有控制器。
- en: A distributed system compared to a centralized and decentralized system can
    be
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 与集中式和去中心化系统相比，分布式系统可以
- en: thought of as a system where there may or may not be a central controller in
    the system;
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 被认为是系统中可能有也可能没有中央控制器的系统;
- en: however, the resources and nodes are distributed.
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，资源和节点是分布式的。
- en: Figur[e 1-2 sho](#p30)ws a depiction of three types of systems.
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 图[1-2](#p30)显示了三种类型系统的描述。
- en: '***Figure 1-2\.** Centralized vs. decentralized vs. distributed*'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-2\.** 集中式vs. 去中心化vs. 分布式*'
- en: Figur[e 1-2 sho](#p30)ws the traditional view of centralized, decentralized,
    and distributed systems. However, in recent years a slightly different picture
    started to emerge which
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 图[1-2](#p30)展示了传统观点中的集中式、去中心化和分布式系统。然而，近年来出现了一个略有不同的情况
- en: highlights the notion of a system with a central controller and the one with
    no controller at all and where all users participate equally without any dependence
    on a trusted
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 突出了具有中央控制器和没有控制器的系统的概念，以及所有用户都平等参与并且不依赖于可信的
- en: third party. These new types of distributed systems are blockchains, especially
    public
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 第三方。这些新型分布式系统是区块链，尤其是公共的
- en: blockchains, where there is no central controller, such as Bitcoin blockchain.
    We will
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链，没有中央控制器，比如比特币区块链。我们将
- en: cover more on blockchain in Chapter [4 and then thr](https://doi.org/10.1007/978-1-4842-8179-6_4)oughout
    the book. However, let’s now look at Figure [1-3](#p31), which depicts this type
    of architecture and highlights the differences from a control point of view.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第[4](https://doi.org/10.1007/978-1-4842-8179-6_4)章和以后，我们将更加深入地涵盖区块链。然而，现在让我们看一下图[1-3](#p31)，它描述了这种类型的架构，并突出了从控制角度的区别。
- en: '11'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '11'
- en: '![](index-31_1.png)'
  id: totrans-720
  prefs: []
  type: TYPE_IMG
  zh: '![](index-31_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '***Figure 1-3\.** Centralized vs. distributed vs. decentralized*'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-3\.** 集中式vs. 分布式vs. 去中心化*'
- en: Notice that in Figur[e 1-3 the t](#p31)opology of distributed and decentralized
    systems may be the same, but there is a central controller, depicted by a symbolic
    hand on top of the figure. However, in a decentralized system notice that there
    is no hand shown, which
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在图[1-3](#p31)中，分布式和去中心化系统的拓扑结构可能是相同的，但是在图中有一个中央控制器，由图上的一个象征性的手表示。然而，在去中心化系统中，注意到没有显示手，这
- en: depicts there is no single central controller or an authority.
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 描述了没有单一的中央控制器或权威。
- en: So far, we have focused mainly on the architecture of distributed systems and
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们主要关注分布式系统的架构和
- en: generally defined and explored what distributed systems are. Now let’s look
    at the
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 一般定义和探索了分布式系统是什么。现在让我们来看看
- en: most important fundamental element of a distributed system, that is, the distributed
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统最重要的基本元素，即分布式
- en: algorithm that enables a distributed system to do what it is supposed to do.
    It is the
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 使得分布式系统能够做它应该做的事情的算法。它是
- en: algorithm that runs on each node in a distributed system to accomplish a common
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个节点中运行的算法以完成一个共同的
- en: goal. For example, a common goal in a cryptocurrency blockchain is to disallow
    double-
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 目标。例如，在加密货币区块链中的一个常见目标是禁止双重-
- en: spending. The logic to handle that is part of the distributed algorithm that
    runs on
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 开销。处理此逻辑的部分是运行在
- en: each node of the cryptocurrency blockchain, and collectively and collaboratively,
    the
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币区块链的每个节点，并集体协作，
- en: blockchain (the distributed system) accomplishes this task (goal) to avoid double-
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链（分布式系统）实现这个任务（目标）以避免双重-
- en: spending. Don’t worry if some of these terms don’t make sense now; they will
    become
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 开销。如果现在某些术语听起来不合适，不用担心；它们将变得
- en: clear in Chapter [4](https://doi.org/10.1007/978-1-4842-8179-6_4).
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 第[4] 章中明确（https://doi.org/10.1007/978-1-4842-8179-6_4）。
- en: '**Distributed Algorithm**'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式算法**'
- en: A distributed algorithm runs on multiple computers concurrently to accomplish
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 分布算法同时在多台计算机上运行以完成
- en: something in a distributed system. In a distributed system, the same algorithm
    runs on
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中的某个算法。在分布式系统中，相同的算法在
- en: all computers concurrently to achieve a common goal.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 所有计算机并发地以实现一个共同的目标。
- en: '12'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '12'
- en: Chapter 1 IntroduCtIon
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 导言
- en: In contrast with a sequential algorithm where each operation in execution comes
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 与顺序算法相比，每个操作的执行都是
- en: one after another, distributed algorithms are algorithms where the operations
    are
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: 一个接着一个，并发算法是操作
- en: performed concurrently. Concurrent algorithms and concurrency are quite common
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 同时进行。并发算法和并发性在分布式系统中是非常常见的
- en: in computing, for example, multiple threads running simultaneously in a processor,
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算中，例如，多个线程同时在处理器中运行，
- en: multiple applications running in a computer, multicore processors in a computer,
    or
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 多个应用程序在计算机上运行，计算机中的多核处理器，或者
- en: multiple processes running concurrently in a distributed system.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 多个进程在分布式系统中同时运行。
- en: We can define a distributed algorithm as an algorithm that runs concurrently
    on
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以定义分布式算法为同时在多台计算机上运行的算法
- en: multiple machines.
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: 多台机器。
- en: There are several advantages of distributed algorithms, including but not limited
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法有几个优点，包括但不限于
- en: to better performance where some computation can be parallelized to achieve
    higher
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 以更好的性能为目标，可以并行化某些计算以实现更高的
- en: performance as compared to sequential algorithms. In addition, distributed algorithms
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 相对于顺序算法，性能更好。此外，分布式算法
- en: allow for fault tolerance; for example, if a certain threshold (which we will
    explain in
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: 允许容错性；例如，如果达到一定阈值（我们将解释
- en: Chapt[er 3) of no](https://doi.org/10.1007/978-1-4842-8179-6_3)des fails, the
    distributed algorithms continue to operate.
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: Chapt [3] er中的](https://doi.org/10.1007/978-1-4842-8179-6_3)根据由发送失败决定，分布式算法继续运行。
- en: There are message-passing algorithms where processes communicate over
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 有消息传递算法，其中进程通过通信
- en: the network by sending and receiving messages. Another type is shared memory
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 通过发送和接收消息在网络中进行通信。另一种类型是共享内存
- en: distributed algorithms, where the algorithms communicate by reading and writing
    from
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法，其中算法通过从读取和写入来进行通信
- en: shared memory.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 共享内存。
- en: Centralized algorithms execute sequentially, whereas distributed algorithms
    execute
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 集中式算法按顺序执行，而分布式算法执行
- en: concurrently. Centralized algorithms are not usually characterized by failures,
    whereas
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: 同时执行。集中式算法通常不具有失败的特征，而分布式算法具有
- en: distributed algorithms are designed to tolerate various types of failures. Sequential
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法设计以容忍各种类型的故障。顺序
- en: algorithms tend to be more intuitive as they are designed for sequential execution,
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: 算法倾向于更直观，因为它们设计用于顺序执行，
- en: whereas distributed algorithms can be challenging to understand. This is one
    of the
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 而分布式算法可能难以理解。这是其中之一
- en: reasons why the correctness proofs of centralized algorithms are comparatively
    easier to
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: 集中式算法的正确性证明比较容易的原因之一
- en: do and, in most cases, even apparent by observation. This is not the case in
    distributed
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: 做，并且在大多数情况下，甚至通过观察也很明显。这在分布式情况下并非如此。
- en: algorithms, where correctness can be deceiving. A seemingly correct algorithm
    may not
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 算法，其中正确性可能具有欺骗性。一个看似正确的算法可能不会
- en: behave correctly in practice and could be subject to various failures and violations
    of
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中表现正确并可能遭受各种失败和违规
- en: properties. For this purpose, several formal specifications and verification
    techniques
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: 特性。为此，有几种形式化规范和验证技术
- en: are used to ascertain the correctness of distributed algorithms. We will cover
    some
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 用于确定分布式算法的正确性。我们将涵盖一些
- en: of these methods in Chapter [9\. Dis](https://doi.org/10.1007/978-1-4842-8179-6_9)tributed
    algorithms tend to be more challenging to design, debug, and implement as compared
    to sequential algorithms. Moreover,
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法在第[9\.章](https://doi.org/10.1007/978-1-4842-8179-6_9)中讨论。分布式算法相对于顺序算法来说更具挑战性，设计、调试和实施都更具挑战性。此外，
- en: from a complexity measure point of view, it’s generally the measure of the number
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 从复杂度测量的角度来看，通常是以消息的数量来衡量的
- en: of instructions in a sequential centralized algorithm; however, the complexity
    of
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 在顺序集中的算法中指令的复杂性；然而，复杂性
- en: distributed algorithms is measured in the number of messages.
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法的复杂性是以消息的数量来衡量的。
- en: '13'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: '13'
- en: '![](index-33_1.png)'
  id: totrans-775
  prefs: []
  type: TYPE_IMG
  zh: '![](index-33_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章介绍
- en: '**Elements of Distributed Computing/Pertinent Terms/**'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式计算的基本元素/相关术语/**'
- en: '**Concepts**'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: '**概念**'
- en: A distributed system is composed of several elements. We are only interested
    in an
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统由几个元素组成。我们只对一个感兴趣
- en: abstracted view of the system instead of specific hardware or network details.
    The
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象的视角系统而非特定的硬件或网络细节。The
- en: abstracted view allows designers to design and reason about the system under
    some
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象的视角允许设计师在某些情况下设计和理论化关于系统的
- en: assumptions by building a system model. More on that later but let’s first look
    at the
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 通过建立系统模型来进行假设。稍后我们将详细说明，但首先让我们看看
- en: basic elements in a distributed system.
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的基本元素。
- en: A distributed system can be presented as a graph where nodes or processes are
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统可以呈现为一个图，其中节点或流程是
- en: depicted by vertices and communication links are depicted by edges. Some common
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 由顶点表示，通信链接由边表示。一些常见的
- en: topologies are shown in Figur[e 1-4\.](#p33)
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 拓扑结构如图[1-4\.](#p33)所示。
- en: '***Figure 1-4\.** Distributed system topologies depicted as graphs*'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-4\.** 分布式系统拓扑展示为图形*'
- en: A distributed system is usually represented as a graph composed of nodes and
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 分布系统通常被表示为由节点和组成的图
- en: vertices. Nodes represent processes in the network, whereas vertices represent
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点。节点代表网络中的进程，而顶点代表
- en: communication links between the processes. These graphs also show the structural
    view
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: 进程之间的通信链接。这些图还显示了结构化视图
- en: or topology of the network and help to visualize the system.
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 或网络的拓扑，并有助于可视化系统。
- en: A distributed system can have different topologies (structures) and can be presented
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统可以具有不同的拓扑结构（结构）可以被呈现为
- en: as graphs. Common topologies include **ring** which depicts a topology where
    each node has two adjacent nodes. A **tree** structure is acyclic and connected.
    **Clique** is a fully connected graph where all processes are connected to each
    other directly.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 如图表所示。常见的拓扑结构有**环**，它描述了每个节点都有两个相邻节点的拓扑结构。**树**结构是无环且连通的。**圈**是一个全连接图，其中所有流程都直接连接到彼此。
- en: Other elements
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 其他元素
- en: • Processes
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: • 流程
- en: '14'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: '14'
- en: Chapter 1 IntroduCtIon
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章介绍
- en: • Events
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: • 事件
- en: • Executions
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: • 执行
- en: • Links
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: • 链接
- en: • State
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: • 状态
- en: • Global state
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: • 全局状态
- en: • Cuts
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: • 切割
- en: Let’s look at them in detail now.
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们详细看看。
- en: '**Processes**'
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: '**流程**'
- en: A process in a distributed system is a computer that executes the distributed
    algorithm.
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中的一个流程是执行分布式算法的计算机。
- en: It is also called a node. It is an autonomous computer that can fail independently
    and
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: '它也被称为节点。这是一个能独立故障的自主计算机 '
- en: can communicate with other nodes in the distributed network by sending and receiving
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: 可以与分布式网络中的其他节点进行通信，通过发送和接收消息
- en: messages.
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 消息。
- en: '**Events**'
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '**事件**'
- en: An event can be defined as some operation occurring in a process. There can
    occur three
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: 事件可被定义为在一个进程中发生的某种操作。可以发生三种
- en: 'types of events in a process:'
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个过程中发生的不同类型的事件：
- en: '**Internal events** occur when something happens locally in a'
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: '**内部事件**在本地发生时'
- en: process. In other words, a local computation performed by a
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 进程。换句话说，由本地计算执行
- en: process is an internal event.
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: 过程是一个内部事件。
- en: '**Message send** events occur when a process (node) sends a'
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: '**消息发送**事件发生在一个进程（节点）发送消息的时候。'
- en: message out to other nodes.
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 向其他节点发送消息。message out to other nodes.
- en: '**Message receive** events occur when a process (node) receives a'
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: '**消息收到**事件发生在一个进程（节点）接收到'
- en: message.
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 消息。
- en: The diagram shown in Figur[e 1-5](#p35) presents this visually.
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: 在图[1-5](#p35)中呈现了这一点。
- en: '15'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '15'
- en: '![](index-35_1.png)'
  id: totrans-822
  prefs: []
  type: TYPE_IMG
  zh: '![](index-35_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章介绍
- en: '***Figure 1-5\.** Events and processes in a three-node distributed system*'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-5\.** 三节点分布式系统中的事件和进程*'
- en: '**State**'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态**'
- en: The concept of state is critical in distributed systems. You will come across
    this term
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: 状态的概念在分布式系统中至关重要。您将在这个术语中遇到
- en: quite a lot in this book and other texts on distributed systems, especially
    in the context of distributed consensus. Events make up the local state of a node.
    In other words, a state is composed of events (results of events) in a node. Or
    we can say that the contents of the
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书和其他关于分布式系统的文本中会遇到，特别是在分布式一致性的背景下。事件构成了节点的局部状态。换句话说，状态由节点中的事件（事件的结果）组成。或者我们可以说
- en: local memory, storage, and program as a result of events make up the process’s
    state.
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: 本地内存、存储和程序的事件结果构成了进程的状态。
- en: '**Global State**'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '**全局状态**'
- en: The collection of states in all processes and communication links in a distributed
    system is called a **global state**.
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中，所有进程和通信链路中的状态集合称为**全局状态**。
- en: 'This is also known as configuration which can be defined as follows:'
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 这也被称为配置，可以定义如下：
- en: The configuration of a distributed system is composed of states of the processes
    and
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的配置由进程和状态组成
- en: messages in transit.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 在传输中的消息。
- en: '**Execution**'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: '**执行**'
- en: 'An execution in a distributed system is a run or computation of the distributed
    algorithm by a process. There are two types of executions:'
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中的执行是通过一个进程运行或计算分布式算法。有两种类型的执行：
- en: • Synchronous execution
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: • 同步执行
- en: • Asynchronous execution
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: • 异步执行
- en: '16'
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: '16'
- en: '![](index-36_1.png)'
  id: totrans-839
  prefs: []
  type: TYPE_IMG
  zh: '![](index-36_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '**Cuts**'
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: '**切割**'
- en: A cut can be defined as a line joining a single point in time on each process
    line in a
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 可以定义切割为连接分布式系统中每个进程线上某一点时间的一条线。
- en: space-time diagram. Cuts on a space-time diagram can serve as a way of visualizing
    the
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 时空图上的切割可作为可视化
- en: global state (at that cut) of a distributed computation. Also, it serves as
    a way to visualize what set of events occurred before and after the cut, that
    is, in the past or future. All events on the left of the cut are considered **past**,
    and all events on the right side of the cut are said to be **future**. There are
    consistent cuts and inconsistent cuts. If all received messages are sent within
    the elapsed time before the cut, that is, the past, it is called a consistent
    cut. In other words, a cut that obeys causality rules is a consistent cut. An
    inconsistent cut is where a message crosses the cut from the future (right side
    of the cut) to the past (left side of the cut).
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: 全局状态（在该切割处）的分布式计算的整体图景。同时，它还用作可视化图，显示了切割之前和之后发生的事件集，即过去或未来。在切割左侧的所有事件被视为**过去**，切割右侧的所有事件被视为**未来**。有一致切割和不一致切割。如果所有接收的消息在切割之前（即过去）发送，那么称为一致切割。换句话说，遵守因果关系规则的切割称为一致切割。一个不一致的切割是指一个消息从未来（切割右侧）越过切割到过去（切割左侧）的情况。
- en: If a cut crosses over a message from the past to the future, it is a graphical
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个切割越过一条消息，从过去到未来，它就是一个图形化的切割。
- en: representation of messages in transit.
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 在传输中消息的表示。
- en: The diagram shown in Figur[e 1-6](#p36) illustrates this concept, where *C*
    1 is an inconsistent cut and *C* 2 is a consistent cut.
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-6](#p36)**所示的图表说明了这个概念，其中*C* 1 是一个不一致的切割，*C* 2 是一个一致的切割。
- en: '***Figure 1-6\.** A space-time diagram depicting cuts in a distributed system
    execution* Algorithms such as the Chandy-Lamport snapshot algorithm are used to
    create a'
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-6\.** 描绘分布式系统执行中切割的时空图* 诸如Chandy-Lamport快照算法之类的算法用于创建'
- en: consistent cut of a distributed system.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的一致切割。
- en: '17'
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: '17'
- en: Chapter 1 IntroduCtIon
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: Taking a snapshot of a distributed system is helpful in creating a global picture
    of the
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 对分布式系统进行快照有助于创建
- en: system. A snapshot or global snapshot captures the global state of the system
    containing
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的快照。一个快照或全局快照捕获了包含
- en: the local state of each process and the individual state of each communication
    link in the system. Such snapshots are very useful for debugging, checkpointing,
    and monitoring
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中每个进程的局部状态和每个通信链路的个体状态的快照。这样的快照对于调试、检查点和监控
- en: purposes. A simple solution is to synchronize all clocks and create a snapshot
    at a
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 目的非常有帮助。一个简单的解决方法是同步所有时钟并在一个
- en: specific time, but accurate clock synchronization is not possible, and we can
    use
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 特定时间，但无法进行准确的时钟同步，我们可以使用
- en: causality to achieve such an algorithm that gives us a global snapshot.
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 因果性以实现这样一种可以给出全局快照的算法。
- en: Assuming no failures, unidirectional FIFO channels, and existence of a
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: 假设没有故障，单向FIFO通道，以及存在一个
- en: communication path between any two processes in the system, the Chandy-Lamport
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中任意两个进程之间的通信路径，Chandy-Lamport
- en: 'algorithm works as follows:'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: 算法工作如下：
- en: • An initiator process initiating the snapshot algorithm does the
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: • 启动快照算法的发起进程执行
- en: 'following:'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 以下：
- en: • Records its own state
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: • 记录自己的状态
- en: • Sends a marker message (a control message) to all processes
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: • 向所有进程发送标记消息（控制消息）
- en: • Starts recording all incoming messages on its channels
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: • 开始记录其通道上的所有传入消息
- en: '• A process receiving the marker message does the following:'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: • 接收标记消息的进程执行以下操作：
- en: • If it is the first time it sees this message, then it
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: • 如果这是它第一次看到这条消息，则
- en: • Records its own local state
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: • 记录自己的本地状态
- en: • Marks the channel as empty
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: • 将通道标记为空
- en: • Sends out a marker to all processes on its channels
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: • 向其通道上的所有进程发送一个标记
- en: • Starts recording all incoming channels, except the one it had
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: • 开始记录所有传入通道，除了它已经有的那一个
- en: marked empty previously
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 先前标记为空
- en: • If not the first time
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: • 如果不是第一次
- en: • Stops recording
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: • 停止记录
- en: • A snapshot is considered complete, and algorithm terminates, when
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: • 当
- en: each process has received the marker on all its incoming channels.
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: 每个进程都收到了其所有传入通道上的标记。
- en: • The initiator process is now able to build a complete snapshot
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: • 发起进程现在可以构建完整的快照
- en: containing the saved state of each process and all messages.
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 包含每个进程和所有消息的保存状态。
- en: '18'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: '18'
- en: Chapter 1 IntroduCtIon
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: Note that any process can initiate the snapshot, the algorithm does not interfere
    with
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，任何进程都可以启动快照，算法不会干预
- en: the normal operation of the distributed system, and each process records the
    state of
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的正常运行，并且每个进程记录
- en: incoming channels and its own.
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 传入通道及其自身。
- en: '**Types of Distributed Systems**'
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式系统类型**'
- en: There are two types of distributed systems from the communication point of view.
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 从通信角度看，有两种类型的分布式系统。
- en: Shared memory systems are those where all nodes have direct access to the shared
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: 共享内存系统是所有节点都直接访问共享
- en: memory. On the other hand, message-passing systems are those where nodes
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 内存。另一方面，消息传递系统是节点
- en: communicate with each other via passing messages. In other words, nodes send
    and
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: 通过传递消息进行互相通信。换句话说，节点发送和
- en: receive messages using communication links to communicate with each other.
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 使用通信链路相互通信。
- en: Now let’s discuss some software architecture models of distributed systems.
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们讨论一些分布式系统的软件架构模型。
- en: Software architecture models describe the design and structure of the system.
    Software
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: 软件架构模型描述系统的设计和结构。软件
- en: architecture answers questions such as what elements are involved and how they
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 架构回答了哪些元素参与其中以及它们如何运行的问题。
- en: interact with each other. The central focus of the distributed system software
    architecture is processes, and all other elements are built around them.
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 互相交互。分布式系统软件架构的中心焦点是进程，所有其他元素都围绕它们构建。
- en: '**Software Architecture Models**'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件架构模型**'
- en: There are four main software architecture types which include the client-server
    model,
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 有四种主要的软件架构类型，包括客户端-服务器模型，
- en: multiple server model, proxy server model, and peer-to-peer model.
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: 多服务器模式、代理服务器模式和点对点模式。
- en: '**Client-Server**'
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端-服务器**'
- en: This model is a common way to have two processes work together. A process assumes
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模型是让两个进程共同工作的常见方式。一个进程假设
- en: the role of a client, and the other process assumes the role of a server. The
    server receives requests made by the client and responds with a reply. There can
    be multiple client
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 一个进程扮演客户端的角色，另一个进程扮演服务器的角色。服务器接收客户端发出的请求并以回复方式响应。客户端可以是多个。
- en: processes but only a single server process. For example, a classic web client
    and web
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: 进程但只有一个服务器进程。例如，经典的网络客户端和网络
- en: server (browser to a web server) design follows this type of architecture. Figur[e
    1-7](#p39)
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器（浏览器到web服务器）设计遵循这种架构。图[1-7](#p39)
- en: depicts the so-called physical view of this type of architecture.
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 描述这种类型架构的所谓物理视图。
- en: '19'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: '19'
- en: '![](index-39_1.png)'
  id: totrans-904
  prefs: []
  type: TYPE_IMG
  zh: '![](index-39_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: '***Figure 1-7\.** Client-server architecture*'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-7.** 客户端-服务器架构*'
- en: '**Multiserver**'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: '**多服务器**'
- en: A multiserver architecture is where multiple servers work together. In one style
    of
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 多服务器架构是多个服务器共同工作的地方。在一种样式的
- en: architecture, the server in the client-server model can itself become a client
    of another server. For example, if I have made a request from my web browser to
    a web server to
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 架构，客户-服务器模型中的服务器本身可以成为另一个服务器的客户端。例如，如果我从我的网络浏览器向网页服务器发出请求
- en: find prices of different stocks, it is possible that the web server now makes
    a request to the backend database server or, via a web service, requests this
    pricing information from some other server. In this scenario, the web server itself
    has become a client. This type of architecture can be seen as a multiserver architecture.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: 找到不同股票的价格，可能现在网络服务器向后端数据库服务器发出请求，或者通过网络服务，从其他服务器请求这些定价信息。在这种情况下，网页服务器本身已成为客户端。这种类型的架构可以看作是多服务器架构。
- en: Another quite common scenario is where multiple servers act together to provide
    a
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相当常见的情况是多个服务器共同提供
- en: service to a client, for example, multiple database servers providing data to
    a web server.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 为客户端提供服务，例如，多个数据库服务器向网页服务器提供数据。
- en: There are two usual methods to implement such collaborative architecture. The
    first is
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这种协作架构有两种通常的方法。第一种是
- en: '**data partitioning**, and another is **data replication**. Another closely
    related term to data partitioning is **data sharding**.'
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据分区**，另一种是**数据复制**。与数据分区密切相关的另一个术语是**数据分片**。'
- en: Data partition refers to an architecture where data is distributed among the
    nodes
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分区是一种架构，其中数据分布在节点之间
- en: in a distributed system, and each node becomes responsible for its partition
    (section) of the data. Partitioning of data helps to achieve better performance,
    easier administration, load balancing, and better availability. For example, data
    for each department of a
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个分布式系统中，每个节点负责其数据的分区（部分）。数据的分区有助于实现更好的性能，更简单的管理，负载均衡和更好的可用性。例如，每个部门的数据
- en: company can be divided into partitions and stored separately on different local
    servers.
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 公司可以被分成分区并分别存储在不同的本地服务器上。
- en: Another way of looking at it is that if we have a large table with one million
    rows, I might put half a million rows on one server and another half on another
    server. This scheme is
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种看待的方法是，如果我们有一张有一百万行的大表，我可能将五十万行放在一个服务器上，另外一半放在另一个服务器上。这个方案是
- en: '20'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: '20'
- en: '![](index-40_1.png)'
  id: totrans-920
  prefs: []
  type: TYPE_IMG
  zh: '![](index-40_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: called **data sharding** or **horizontal partitioning**, or **horizontal sharding**
    depending on how the sharding is performed.
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 称为**数据分片**或**水平分区**，或者根据分片的执行方式称为**水平分片**。
- en: We can visualize the concept of partitioning in Figur[e 1-8\.](#p40)
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在图[1-8.](#p40)中看到分区的概念
- en: '***Figure 1-8\.** Data partitioning*'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-8.** 数据分区*'
- en: Note that data partitioning shown in Figure [1-8](#p40) is where a large central
    database is partitioned into smaller datasets relevant to each region, and a regional
    server then
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，图[1-8](#p40)中显示的数据分区是一个大型中央数据库被分割成相关的小数据集，然后区域服务器
- en: manages the partition. However, in another type of partitioning, a large table
    can be
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 管理分区。然而，在另一种分区中，一个大表可以
- en: partitioned into different tables, but it remains on the same physical server.
    It is called logical partitioning.
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: 分成不同的表，但它仍然在同一台物理服务器上。这被称为逻辑分区。
- en: A shard is a horizontal partition of data where each shard (fragment) resides
    on a
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 分片是数据的水平分区，其中每个分片（片段）驻留在一个
- en: separate server. One immediate benefit of such an approach is load balancing
    to spread
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: 分离的服务器。这种方法的一个直接好处是负载均衡以分散
- en: the load between servers. This concept is shown in Figure [1-9](#p41).
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器之间的负载。这个概念在图[1-9](#p41)中显示。
- en: '21'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: '21'
- en: '![](index-41_1.jpg)'
  id: totrans-932
  prefs: []
  type: TYPE_IMG
  zh: '![](index-41_1.jpg)'
- en: Chapter 1 IntroduCtIon
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: '***Figure 1-9\.** Sharding*'
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-9.** 分片*'
- en: Data replication refers to an architecture where each node in the distributed
    system
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: 数据复制是指分布系统中的每个节点
- en: holds an identical copy of the data. A typical simple example is that of the
    RAID 0 system; while they are not separate physical servers, the data is replicated
    across two disks,
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有数据的相同副本。一个典型的简单示例是RAID 0系统；虽然它们不是独立的物理服务器，但数据被复制在两个磁盘上，
- en: which makes it a data replication (commonly called mirroring) architecture.
    In another
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得它成为了一种数据复制（通常称为镜像）的架构。在另一个
- en: scenario, a database server might run a replication service to replicate data
    across
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 的场景，数据库服务器可能运行复制服务以在多个服务器之间复制数据
- en: multiple servers. This type of architecture allows for better performance, fault
    tolerance, and higher availability. A specific type of replication and fundamental
    concept in a
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 多个服务器。这种类型的架构允许更好的性能、容错性和更高的可用性。在特定类型的复制和分布式基本概念中，有一种特定类型的복制은복가 없습니다。
- en: distributed system is state machine replication used to build fault-tolerant
    distributed
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统是使用状态机复制构建容错的分布式
- en: systems. We will cover more about this in Chapt[er 3](https://doi.org/10.1007/978-1-4842-8179-6_3).
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: 系统。我们将在第[3章](https://doi.org/10.1007/978-1-4842-8179-6_3)中更多地讨论这个问题。
- en: Figur[e 1-10 sho](#p42)ws multiserver architectures where a variation of the
    client-server model is shown. The server can act as a client to another server.
    This is another
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 图[1-10 sho。](#p42)显示了多服务器架构，其中显示了客户端-服务器模型的变化。服务器可以充当另一个服务器的客户端。这是另一种
- en: approach where multiple servers work together closely to provide a service.
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 一种多个服务器共同紧密合作提供服务的方法。
- en: '22'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: '22'
- en: '![](index-42_1.png)'
  id: totrans-945
  prefs: []
  type: TYPE_IMG
  zh: '![](index-42_1.png)'
- en: '![](index-42_2.png)'
  id: totrans-946
  prefs: []
  type: TYPE_IMG
  zh: '![](index-42_2.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '***Figure 1-10\.** Multiple servers acting together (client-server and multiple
    servers* *coordinating closely/closely coupled servers)*'
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: '**图表 1-10.** 多个服务器共同作用（客户端-服务器和多个服务器*共同紧密协作/紧密耦合的服务器)*'
- en: Another diagram in Figure [1-11 sho](#p42)ws the concept of data replication.
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: 图[1-11 sho](#p42)中的另一个图表显示了数据复制的概念。
- en: '***Figure 1-11\.** Data replication*'
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: '**图表 1-11.** 数据复制'
- en: In summary, replication refers to a practice where a copy of the same data is
    kept on
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，复制是指一种实践，即相同数据的副本被保留在
- en: multiple different nodes, whereas partitioning refers to a practice where data
    is split into smaller subsets, and these smaller subsets are then distributed
    across different nodes.
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: 多个不同的节点，而分区是指将数据分割成较小的子集，然后将这些较小的子集分布到不同的节点中。
- en: '23'
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: '23'
- en: '![](index-43_1.png)'
  id: totrans-954
  prefs: []
  type: TYPE_IMG
  zh: '![](index-43_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '**Proxy Servers**'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: '**代理服务器**'
- en: A proxy server–based architecture allows for intermediation between clients
    and
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: 基于代理服务器的架构允许客户端和中间层之间的交互
- en: backend servers. A proxy server can receive the request from the clients and
    forward
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 后端服务器。代理服务器可以接收客户端的请求并转发
- en: it to the backend servers (most commonly, web servers). In addition, proxy servers
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: 将其转发到后端服务器（最常见的是Web服务器）。此外，代理服务器
- en: can interpret client requests and forward them to the servers after processing
    them.
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: 可以解释客户端的请求并在处理后将其转发到服务器。
- en: This processing can include applying some rules to the request, perhaps anonymizing
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: 此处理包括对请求应用一些规则，也许是匿名化
- en: the request by removing the client’s IP address. From a client’s perspective,
    using
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: 通过删除客户端的IP地址来处理请求。从客户端的角度来看，使用
- en: proxy servers can improve performance by caching. These servers are usually
    used in
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: 代理服务器可以通过缓存提高性能。这些服务器通常用于
- en: enterprise settings where corporate policies and security measures are applied
    to all
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: 企业环境中，所有的企业政策和安全措施都适用
- en: web traffic going in or out of the organization. For example, if some websites
    need to
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: 组织中进出的Web流量。例如，如果某些网站需要
- en: be blocked, administrators can use a proxy server to do just that where all
    requests go
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 被阻止，管理员可以使用代理服务器来实现，所有请求都经过
- en: through the proxy server, and any requests for blocked sites are intercepted,
    logged, and ignored.
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: 通过代理服务器，并且对被阻止的站点的任何请求都会被拦截、记录并被忽略。
- en: The diagram in Figur[e 1-12](#p43) shows a proxy architecture.
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: 图表[1-12](#p43)中显示了一个代理架构。
- en: '***Figure 1-12\.** Proxy architecture – one proxy between servers and clients*'
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
  zh: '**图表 1-12.** 代理架构-服务器和客户端之间的一个代理'
- en: '**Peer to Peer**'
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: '**点对点**'
- en: In the peer-to-peer architecture, the nodes do not have specific client or server
    roles.
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: 在对等架构中，节点没有特定的客户端或服务器角色。
- en: They have equal roles. There is no single client or a server. Instead, each
    node can play either a client or a server role, depending on the situation. The
    fact that all nodes have an equal role resulted in the term "peer."
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: 他们有相同的角色。没有单一的客户端或服务器。相反，每个节点都可以根据情况扮演客户端或服务器的角色。所有节点都有相同的角色导致了术语“对等”的出现。
- en: Peer-to-peer architecture is shown in the diagram in Figure [1-13\.](#p44)
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: 在图表[1-13处](#p44)显示了点对点架构。
- en: '24'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: '24'
- en: '![](index-44_1.png)'
  id: totrans-975
  prefs: []
  type: TYPE_IMG
  zh: '![](index-44_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '***Figure 1-13\.** Peer-to-peer architecture*'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '**图表 1-13.** 点对点架构'
- en: In some scenarios, it is also possible that not all nodes have equal roles;
    some may
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些场景中，也可能并非所有节点都具有相同的角色；个别节点可能
- en: act as servers and clients to each other. Generally, however, all nodes have
    the same role in a peer-to-peer network.
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 作为服务器和客户端相互充当。然而，通常，所有节点在对等网络中具有相同的角色。
- en: Now that we have covered some architectural styles of distributed systems, let’s
    focus
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了一些分布式系统的架构风格，让我们专注于
- en: on a more theoretical side of the distributed system, which focuses on the abstract
    view
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: 关注分布式系统的更理论方面，它专注于抽象视图
- en: of the distributed systems. First, we explore the distributed system model.
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。首先，我们探讨分布式系统模型。
- en: '**Distributed System Model**'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式系统模型**'
- en: A system model allows us to see a distributed system abstractly. It captures
    the
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: 系统模型允许我们以抽象的方式看待分布式系统。它捕捉了
- en: assumptions about the behavior of the distributed system. It will enable us
    to define
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: 关于分布式系统行为的假设。它将使我们能够定义
- en: some properties we expect from our distributed system and then reason about
    them. All
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: 一些我们期望从我们的分布式系统中获得的属性，然后对其进行推理。所有
- en: of this is at an abstract level without worrying about any technology or implementation
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在抽象层面上，不需要担心任何技术或实现问题
- en: details. For example, a communication link abstraction only captures the fact
    that a
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: 详情。例如，通信链路抽象仅仅捕捉到一个
- en: channel allows messages to be communicated/exchanged between processes without
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 通道允许消息在进程之间进行通信/交换，而无需
- en: specifying what it is. From an implementation point of view, it could be a fiber
    optic
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 规定它是什么。从实现的角度来看，它可能是光纤
- en: cable or a wire.
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: 电缆或电线。
- en: We are not concerned with the specifics of the implementation of hardware
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不关心硬件实现的具体细节
- en: technology in a distributed system model. For example, a process is a node that
    performs
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统模型中的技术。例如，一个进程是执行的节点
- en: some events, and we do not concern ourselves with worrying about the exact hardware
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: 一些事件，我们并不关心担心确切的硬件
- en: or computer type.
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 或计算机类型。
- en: In this book, we are interested in the abstracted view of the system rather
    than
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们感兴趣的是系统的抽象视图，而不是
- en: physical infrastructure. Figur[e 1-14](#p45) demonstrates this concept.
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: 物理基础设施。图[1-14](#p45)演示了这个概念。
- en: '25'
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: '25'
- en: '![](index-45_1.png)'
  id: totrans-999
  prefs: []
  type: TYPE_IMG
  zh: '![](index-45_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '***Figure 1-14\.** Physical architecture (left) vs. abstract system model (right)*'
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-14\.** 物理架构（左）与抽象系统模型（右）*'
- en: Now let’s see what the three fundamental abstractions in a distributed system
    are.
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看分布式系统中的三个基本抽象是什么。
- en: Failures characterize all these abstractions. We capture our assumption about
    what fault
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: 失败特征化所有这些抽象。我们捕捉我们对故障的假设
- en: might occur in our system. For example, processes or nodes can crash or act
    maliciously
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: 可能发生在系统中的故障。例如，进程或节点可能崩溃或者行为恶意
- en: in a distributed system. A network can drop messages, or messages can be delayed.
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中。网络可能丢弃消息，或者消息可能被延迟。
- en: Message delays are captured using timing assumptions.
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时间假设来捕捉消息延迟。
- en: So, in summary, when a distributed system model is created, we make some
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总结一下，当创建分布式系统模型时，我们做出一些
- en: assumptions about the behavior of the system. This process includes timing assumptions
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: 对系统行为做出一些假设。这个过程包括时间假设
- en: regarding processes and the network. We also make failure assumptions regarding
    the
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: 关于进程和网络。我们还对
- en: network and the processors, for example, how a process can fail and whether
    it can
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 网络和处理器，例如，一个进程如何可能失败以及是否可以
- en: exhibit arbitrary failures, how an adversary can affect the processors or the
    network, and whether processes can crash or recover after a crash. Is it possible
    that the network links drop messages? In the next section, we discuss all these
    scenarios in detail.
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: 显示任意失败，对对手如何影响处理器或网络的假设，并且进程是否可以崩溃或在崩溃后恢复。网络链路是否可能丢弃消息？在下一节中，我们将详细讨论所有这些场景。
- en: '**Processes**'
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: '**进程**'
- en: A process or node is a fundamental element in a distributed system which runs
    the
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: 进程或节点是分布式系统中的基本元素，它运行
- en: distributed algorithm to achieve that common goal for which the distributed
    system has
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法来实现分布式系统所拥有的共同目标
- en: been designed.
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: 已经设计过。
- en: Now imagine what a process can do in a distributed system. First, let’s think
    about a
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想象一下在分布式系统中一个进程可以做什么。首先，让我们考虑一下
- en: normal scenario. If a process is behaving according to the algorithm without
    any failures, then it is called a correct process or honest process. So, in our
    model we say that a node running correctly is one of the behaviors a node can
    exhibit. What else? Yes, of course, it can fail. If a node fails, we say it’s
    faulty; if not, then it is nonfaulty or correct or honest.
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: 正常情况。如果一个进程按照算法的方式行为，并且没有任何故障，那么它被称为正确的进程或诚实的进程。所以，在我们的模型中，我们说一个节点正确运行是节点可能表现的行为之一。还有什么？是的，当然，它可能会失败。如果一个节点失败，我们说它是有故障的；如果没有，那么它是无故障的或者正确的或诚实的。
- en: '26'
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: '26'
- en: Chapter 1 IntroduCtIon
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章概况
- en: There are different types of failures that can occur in a process, such as
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: 进程中可能会发生不同类型的故障，例如
- en: • Crash-stop
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: • 崩溃停止
- en: • Omission
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: • 省略
- en: • Crash with recovery
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: • 崩溃与恢复
- en: • Eavesdropping
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: • 窃听
- en: • Arbitrary
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: • 任意
- en: '**Crash-Stop Failure**'
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: '**崩溃停止故障**'
- en: Crash-stop faults are where a process crashes and never recovers. This model
    of faults
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
  zh: 崩溃停止故障是指一个进程崩溃后永远不会恢复。这种故障模型
- en: or node behavior captures an irreparable hardware fault, for example, short
    circuit in a
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: 或节点行为捕获了一个不可修复的硬件故障，例如，在一个
- en: motherboard causing failure.
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 主板导致故障。
- en: '**Omission Failure**'
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: '**省略故障**'
- en: Omission failures capture the fault scenarios where a processor fails to send
    a message
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 省略故障捕捉了处理器未能发送消息的故障场景
- en: 'or receive a message. Omission failures are divided into three categories:
    send'
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: 或接收消息。省略故障分为三类：发送
- en: omissions, receive omissions, and general omissions. Send omissions are where
    a
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: 省略，接收省略和一般省略。发送省略是指一个
- en: processor doesn’t send a message out which it was supposed to as per the distributed
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 处理器并没有发送一个它应该发送的消息，根据分布式
- en: algorithm; receive omissions occur when a process does not receive an expected
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: 算法；接收省略发生在进程不接收期望的
- en: message. In practical terms, these omissions arise due to physical faults, memory
    issues, buffer overflows, malicious actions, and network congestions.
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 消息。在实际情况下，这些省略是由于物理故障、内存问题、缓冲区溢出、恶意操作和网络拥堵而引起的。
- en: '**Crash with Recovery**'
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: '**崩溃与恢复**'
- en: A process exhibiting crash with recovery behavior can recover after a crash.
    It captures
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: 表现出崩溃并且具有恢复行为的进程可以在崩溃后恢复。它捕捉
- en: a scenario where a process crashes, loses its in-memory state, but recovers
    and resumes
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: 一个进程崩溃，失去了其内存状态，但恢复并继续
- en: its operation later. This occurrence can be seen as an omission fault too, where
    now the
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后恢复其操作。这种情况也可以看作是省略故障，其中现在
- en: node will not send or receive any messages because it has crashed. In practical
    terms, it can be a temporary intentional restart of a process or reboot after
    some operating system errors. Some examples include resumption of the normal operation
    after rebooting due
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: 节点不会发送或接收任何消息，因为它已经崩溃。实际上，这可以是一个进程的暂时性意外重启或在一些操作系统错误后重新启动。一些例子包括因为重新启动而恢复正常操作
- en: to a blue screen in Windows or kernel panic in Linux.
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows来说就是蓝屏或者对于Linux来说就是内核恐慌。
- en: When a process crashes, it may lose its internal state (called amnesia), making
    a
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个进程崩溃时，它可能会丢失其内部状态（称为健忘症），导致
- en: recovery tricky. However, we can alleviate this problem by keeping stable storage
    (a log) which can help to resume operations from the last known good state. A
    node may also
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复棘手。然而，我们可以通过保持稳定的存储（日志）来缓解这个问题，这可以帮助从上次已知的良好状态恢复操作。节点也可以
- en: '27'
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
  zh: '27'
- en: Chapter 1 IntroduCtIon
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章概况
- en: lose all its state after recovery and must resynchronize with the rest of the
    network. It may also happen that a node is down for a long time and has desynchronized
    with the
  id: totrans-1047
  prefs: []
  type: TYPE_NORMAL
  zh: 在恢复后失去其所有状态，并且必须重新同步其余的网络。也有可能一个节点长时间宕机，并且与网络
- en: rest of the network (other nodes) and has its old view of the state. In that
    case, the node must resynchronize with the network. This situation is especially
    true in blockchain
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: 网络的其他节点）并且拥有其旧视图的状态。在这种情况下，节点必须与网络重新同步。这种情况在区块链中尤其常见
- en: networks such as Bitcoin or Ethereum, where a node might be off the network
    for quite
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如比特币或以太坊之类的网络，一个节点可能会离线一段时间
- en: some time. When it comes back online, it synchronizes again with the rest of
    the nodes
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 一段时间。当它再次上线时，它会再次与其他节点同步
- en: to resume its full normal operation.
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 为了恢复其完全正常的运行。
- en: '**Eavesdropping**'
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: '**窃听**'
- en: In this model, a distributed algorithm may leak confidential information, and
    an
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种模型中，一个分布式算法可能泄漏机密信息，并且一个
- en: adversary can eavesdrop to learn some information from the processes. This model
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可以窃听并从进程中学到一些信息。这个模型
- en: is especially true in untrusted and geographically dispersed environments such
    as
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: 在不受信任且地理分散的环境（如
- en: a blockchain. The usual defense against these attacks is encryption which provides
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链。对抗这些攻击的通常手段是加密，以提供
- en: confidentiality by encrypting the messages.
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
  zh: 通过加密消息来确保机密性。
- en: '**Arbitrary (Byzantine)**'
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: '**任意（拜占庭）**'
- en: A Byzantine process can exhibit any arbitrary behavior. It can deviate from
    the
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭过程可以展示任意行为。他可以背离
- en: algorithm in any possible way. It can be malicious, and it can actively try
    to sabotage
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: 以任何可能的方式修改算法。它可能是恶意的，并且可以积极地试图破坏
- en: the distributed algorithm, selectively omit some messages, or covertly try to
    undermine
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法，有选择地遗漏一些消息，或暗中试图破坏
- en: the distributed algorithm. This type of fault is the most complex and challenging
    in
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法。这种类型的故障是最复杂和具有挑战性的
- en: a distributed algorithm or system. In practical terms, it could be a hacker
    coming up
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式算法或系统。实际上，这可能是黑客的出现
- en: with novel ways to attack the system, a virus or worm on the network, or some
    other
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 以新颖的攻击系统的方式，网络上的病毒或蠕虫，或其他一些
- en: unprecedented attack. There is no restriction on the behavior of a Byzantine
    faulty node; it can do anything.
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: 前所未有的攻击。对拜占庭故障节点的行为没有限制；它可以做任何事情。
- en: A relevant concept is that of the adversary model, where the adversary behavior
    is
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: 一个相关的概念是对手模型，对手行为会受到影响
- en: modelled. We will cover this later in the section “Adversary Model”.
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: 建模。我们稍后将在“对手模型”部分介绍此内容。
- en: Now we look at another aspect of the distributed system model, network.
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们看另一个分布式系统模型的方面，网络。
- en: '**Network**'
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络**'
- en: In a distributed network, links (communication links) are responsible for passing
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式网络中，链路（通信链路）负责传递
- en: messages, that is, take messages from nodes and send to others. Usually, the
    assumption
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: 消息，即，从节点取出消息并发送到其他节点。通常，假设
- en: is a bidirectional point-to-point connection between nodes.
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: 是节点之间的双向点对点连接。
- en: A network partition is a scenario where the network link becomes unavailable
    for
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: 网络分区是网络链接变得不可用的一种场景
- en: some finite time between two groups of nodes. In practice, this could be due
    to a data
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: 两组节点之间有一段有限时间。实际上，这可能是由于数据
- en: '28'
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: '28'
- en: Chapter 1 IntroduCtIon
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章引言
- en: center not speaking to another or an incorrect/unintentional or even intentional/
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: 不会对中心进行传递或不正确/无意的甚至是故意/
- en: malicious firewall rule prohibiting connections from one part of the network
    to another.
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意防火墙规则禁止网络的一部分连接到另一部分。
- en: '**Link Failures**'
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: '**链路失效**'
- en: Links can experience crash failure where a correctly functioning link may stop
    carrying
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: 链路可能出现崩溃故障，其中一个工作正常的链接可能停止携带
- en: messages. Another type of link failure is omission failure, where a link carries
    some
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
  zh: 消息。另一种类型的链路失效是遗漏失效，其中链路携带一些
- en: messages, and some don’t. Finally, Byzantine failures or arbitrary failures
    can occur on
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: 消息，有的成功，有的失败。最后，拜占庭故障或任意故障可能发生在
- en: links where the link can create rogue messages and modify messages and selectively
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: 链路，其中链路可以创建恶意消息并修改消息，以及有选择性地
- en: deliver some messages, and some don’t.
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 发送一些消息，有的成功，有的失败。
- en: With this model, we can divide the communication links into different types
  id: totrans-1085
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此模型，我们可以将通信链接划分为不同的类型
- en: depending on how they fail and deliver the messages.
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: 取决于它们如何失效和传递消息。
- en: Two types of events occur on links (channels), the **send event** where a message
    is
  id: totrans-1087
  prefs: []
  type: TYPE_NORMAL
  zh: 链上发生两种类型的事件（通道），**发送事件**，其中消息被
- en: put on the link and the **deliver event** where the link dispenses a message,
    and a process *delivers* it.
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 放在链接上和**传递事件**，其中链接分发一条消息，进程*传递*它。
- en: '**Fair-Loss Links**'
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: '**公平丢失链接**'
- en: In this abstraction, we capture how messages on this link can be lost, duplicated,
    or
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: 在该抽象中，我们捕捉了此链接上的消息如何丢失，重复或被
- en: reordered. The messages may be lost but eventually delivered if the sender and
    receiver
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: 被重新排序。消息可能会丢失，但最终如果发送方和接收方
- en: process is correct and the sender keeps retransmitting. More formally, the three
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: 过程是正确的，发送者一直在重发。更正式地说，三
- en: properties are as follows.
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: 属性如下。
- en: '**Fair-Loss**'
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: '**公平丢失**'
- en: This property guarantees that the link with this property does not systematically
    drop
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性保证具有此属性的链路不会系统地丢失
- en: every message, which implies that, eventually, delivery of a message to the
    destination
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 每条消息都会被交付，这意味着，最终，消息将被送达目的地
- en: node will be successful even if it takes several retransmissions.
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: 节点将成功，即使经过多次重发。
- en: '**Finite Duplication**'
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: '**有限重复**'
- en: This property ensures that the network does not perform more retransmissions
    than the
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: 这一性质确保网络不会执行比
- en: sender does.
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: 发送者进行。
- en: '**No Creation**'
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: '**无创建**'
- en: This property ensures that the network does not corrupt messages or create messages
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 这一性质确保网络不会损坏消息或创建消息
- en: out of thin air.
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: 凭空而来。
- en: '29'
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: '29'
- en: Chapter 1 IntroduCtIon
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章说明
- en: '**Stubborn Links**'
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: '**顽固链路**'
- en: This abstraction captures the behavior of the link where the link delivers any
    message
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: 这个抽象捕捉了链路的行为，其中链路传递任何消息
- en: sent infinitely many times. The assumption about the processes in this abstraction
    is
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: 无限次发送的。在这个抽象中对进程的假设是
- en: that both sender and receiver processes are correct. This type of link will
    stubbornly try to deliver the message without considering performance. The link
    will just keep trying
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: 保证发送者和接收者进程均正确。这种链路会顽固地尝试传递消息，而不考虑性能。链路将持续尝试
- en: regardless until the message is delivered.
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
  zh: 直到消息被传递为止。
- en: Formally, there are two properties that stubborn links have.
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: 形式上，顽固链路具有两个性质。
- en: '**Stubborn Delivery**'
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: '**顽固传递**'
- en: This property means that if a message m is sent from a correct process p to
    a correct
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 这一性质意味着，如果消息m从正确的进程p发送到正确
- en: process q once, it will be delivered infinitely many times by process q, hence
    the term
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: 过程q，那么过程q将无限次传递，因此称为
- en: '"stubborn"!'
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: '"顽固"!'
- en: '**No Creation**'
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: '**无创建**'
- en: This means that messages are not created out of the blue, and if a message is
    delivered
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着消息不是凭空而来，如果一个消息被传递
- en: by some process, then it must have been sent by a process. Formally, if a process
    q
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过某一进程，那么它必须是由一个进程发送的。形式上，如果一个过程q
- en: delivers a message m sent from process p, then the message m is indeed sent
    from
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
  zh: 发送消息的过程p，那么消息m确实是由
- en: process p to process q.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: 过程p到过程q。
- en: '**Perfect (Reliable) Links**'
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: '**完美（可靠）链路**'
- en: This is the most common type of link. In this link, if a process has sent a
    message, then it will eventually be delivered.
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最常见的一种链路类型。在这种链路中，如果一个进程发送了一条消息，那么它最终会被传递。
- en: In practice, TCP is a reliable link. There are three properties.
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，TCP是一个可靠的链路。存在三个性质。
- en: '**Reliable Delivery**'
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: '**可靠传递**'
- en: If a message m is sent by a correct process p to a correct process q, then m
    is eventually delivered by q.
  id: totrans-1125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正确的过程p向正确的过程q发送了一条消息m，那么m最终会被q传递。
- en: '**No Duplication**'
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: '**无重复**'
- en: A correct process p does not deliver a message m more than once.
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: 正确的过程p不会将消息m传递超过一次。
- en: '30'
  id: totrans-1128
  prefs: []
  type: TYPE_NORMAL
  zh: '30'
- en: Chapter 1 IntroduCtIon
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章说明
- en: '**No Creation**'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: '**无创建**'
- en: This property ensures that messages are not created out of thin air, and if
    they are
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
  zh: 这一性质确保消息不是凭空而来，如果它们是
- en: delivered, they must have been created and sent by a correct process before
    delivering.
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果消息被传递，它们必须是由正确的过程创建并发送过后才能传递。
- en: '**Logged Perfect Links**'
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
  zh: '**记录完美链路**'
- en: This type of link delivers messages into the receiver’s local message log or
    persistent
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的链路将消息传递到接收器的本地消息日志或持久
- en: storage. This is useful in scenarios where the receiver might crash, but we
    need the
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: 存储。这在接收器可能崩溃但我们需要的情况中是有用
- en: message to be safe. In this case, even if the receiver process crashes, the
    message is not lost because it persisted in the local storage.
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: 消息是安全的。在这种情况下，即使接收进程崩溃，消息也不会丢失，因为它在本地存储中持久存在。
- en: '**Authenticated Perfect Links**'
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
  zh: '**认证完美链路**'
- en: This link guarantees that a message m sent from a process p to process q is
    indeed sent
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个链接保证了从过程p发送到过程q的消息m确实被发送
- en: from process p.
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: 从过程p。
- en: '**Arbitrary Links**'
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: '**任意连接**'
- en: In this abstraction, the link can exhibit any behavior. Here, we consider an
    active
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个抽象中，链路可以展示任何行为。在这里，我们考虑一个积极
- en: adversary who has the power to control the messages. This link depicts scenarios
    where
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: 具备有权控制消息的对手。这个链路描绘了这样的场景
- en: an attacker can do malicious actions, modify the messages, replay them, or spoof
    them.
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: 一个攻击者可以进行恶意行为，修改消息，重播消息，伪造消息。
- en: In short, on this link, any attack is possible.
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，这种链路可以进行任何攻击。
- en: In practical terms, this depicts a typical Internet connection where a hacker
    can
  id: totrans-1145
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际中，这描绘了一个典型的互联网连接，黑客可以
- en: eavesdrop, modify, spoof, or replay the messages. But, of course, this could
    also be due
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: 窃听、修改、伪造或重播消息。但是，当然，这也可能是由于
- en: to Internet worms, traffic analyzers, and viruses.
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: 对互联网蠕虫、流量分析仪和病毒。
- en: '**Note** here, we are talking about point-to-point links only; we will introduce'
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**在这里，我们只谈论点对点链路；我们将介绍'
- en: broadcast later in Cha[pter 3\.](https://doi.org/10.1007/978-1-4842-8179-6_3)
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: 之后在第[3\. 章](https://doi.org/10.1007/978-1-4842-8179-6_3)中进行广播
- en: '**Synchrony and Timing**'
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: '**同步和时间**'
- en: In distributed systems, delays and speed assumptions capture the behavior of
    the
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中，延迟和速度假设捕捉了
- en: network.
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: 网络。
- en: In practical terms, delays are almost inevitable in a distributed system, first
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际情况下，延迟在分布式系统中几乎是不可避免的，首先
- en: because of inherent asynchrony, dispersion, and heterogeneity and specific causes
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: 由于固有的异步、分散和异构性以及特定原因
- en: '31'
  id: totrans-1155
  prefs: []
  type: TYPE_NORMAL
  zh: '31'
- en: Chapter 1 IntroduCtIon
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: such as message loss, slow processors, and congestion on the network. Due to
    network
  id: totrans-1157
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如消息丢失、处理器缓慢和网络拥塞等。由于网络
- en: configuration changes, it may also happen that unexpected or new delays are
    introduced
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: 配置更改，还可能会引入意外或新的延迟
- en: in the distributed system.
  id: totrans-1159
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中。
- en: Synchrony assumption in a distributed system is concerned with network delays
    and
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的同步假设涉及网络延迟和
- en: processor delays incurred by slow network links or slow processor speeds.
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: 由于网络链接缓慢或处理器速度慢而产生的处理器延迟。
- en: In practical terms, processors can be slow because of memory exhaustion in the
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际情况下，处理器可能因内存耗尽而变慢
- en: nodes. For example, java programs can pause execution altogether during the
    "stop the world" type of garbage collection. On the other hand, some high-end
    processors are
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
  zh: 节点。例如，java程序在“停止世界”垃圾收集期间可能会完全暂停执行。另一方面，一些高端处理器是
- en: inherently faster than low-end processors on resource-constrained devices. All
    these
  id: totrans-1164
  prefs: []
  type: TYPE_NORMAL
  zh: 固有的更快。所有这些
- en: differences and situations can cause delays in a distributed system.
  id: totrans-1165
  prefs: []
  type: TYPE_NORMAL
  zh: 差异和情况可能导致分布式系统中的延迟。
- en: In the following, we discuss three models of synchrony that capture the timing
  id: totrans-1166
  prefs: []
  type: TYPE_NORMAL
  zh: 以下，我们讨论了捕捉时间的三种同步模型
- en: assumption of distributed systems.
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统的假设。
- en: '**Synchronous**'
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: '**同步**'
- en: A synchronous distributed system has a known upper bound on the time it takes
    for
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 同步分布式系统对消息发送的时间有一个已知的上限
- en: a message to reach a node. This situation is ideal. However, in practice, messages
    can
  id: totrans-1170
  prefs: []
  type: TYPE_NORMAL
  zh: 消息到达节点的时间有一个已知的上限。这种情况很理想。然而，在实际中，消息可能
- en: sometimes be delayed. Even in a perfect network, there are several factors,
    such as
  id: totrans-1171
  prefs: []
  type: TYPE_NORMAL
  zh: 有时可能会被延迟。即使在完美的网络中，也有几个因素，如
- en: network link quality, network latency, message loss, processing speed, or capacity
    of the processors, which can adversely affect the delivery of the message.
  id: totrans-1172
  prefs: []
  type: TYPE_NORMAL
  zh: 网络链接质量、网络延迟、消息丢失、处理速度或处理器的容量，这些都可能对消息的传递产生不利影响。
- en: In practice, synchronous systems exist, for example, a system on a chip (SoC),
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，同步系统存在，例如芯片系统（SoC），
- en: embedded systems, etc.
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统等。
- en: '**Asynchronous**'
  id: totrans-1175
  prefs: []
  type: TYPE_NORMAL
  zh: '**异步**'
- en: Asynchronous distributed systems are on the other end of the spectrum. In this
    model,
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: 异步分布式系统位于光谱的另一端。在这种模型中，
- en: there is no timing assumption made regarding the timing. In other words, there
    is no
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: 至于时间的假设，则没有做出时间的假设。换句话说，没有
- en: upper bound on the time it takes to deliver a message. There can be arbitrarily
    long and
  id: totrans-1178
  prefs: []
  type: TYPE_NORMAL
  zh: 传递消息所需的时间的上限。可能会有任意长的和
- en: unbounded delays in message delivery or processing in a node. The processes
    can run at
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传递或节点中的处理的无限的延迟。进程可以以
- en: different speeds.
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: 不同速度。
- en: Also, a process can arbitrarily pause or delay the execution or can process
    faster
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，进程可以任意暂停或延迟执行，或者可以更快地处理
- en: than other processes. You can probably imagine now that distributed algorithms
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 而其他进程可能更快。现在你可能想象得到分布式算法
- en: designed for such a system can be very robust and resilient. However, many problems
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: 设计得非常健壮和有韧性。然而，许多问题
- en: cannot be solved in an asynchronous distributed system. A whole class of results
    called
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: 无法在异步分布式系统中解决。一整类结果被称为
- en: '"impossibility results" captures the unsolvable problems in distributed systems.
    We will look at impossibility results in more detail later in the chapter and
    then in Chapter [3\.](https://doi.org/10.1007/978-1-4842-8179-6_3)'
  id: totrans-1185
  prefs: []
  type: TYPE_NORMAL
  zh: '"不可能的结果"捕捉了分布式系统中无法解决的问题。我们将在本章稍后和第[3\. 章](https://doi.org/10.1007/978-1-4842-8179-6_3)中更详细地讨论不可能的结果。'
- en: '32'
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: '32'
- en: '![](index-52_1.png)'
  id: totrans-1187
  prefs: []
  type: TYPE_IMG
  zh: '![](index-52_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: As several types of problems cannot be solved in an asynchronous model and the
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在异步模型中有几种类型的问题无法解决，并且
- en: synchronous model is too idealistic, we have to compromise. The compromise is
    called a
  id: totrans-1190
  prefs: []
  type: TYPE_NORMAL
  zh: 同步模型太理想主义，我们必须妥协。这种妥协被称为
- en: partially synchronous network.
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
  zh: 部分同步网络。
- en: '**Partially Synchronous**'
  id: totrans-1192
  prefs: []
  type: TYPE_NORMAL
  zh: '**部分同步**'
- en: A partially synchronous model captures the assumption that the network is primarily
  id: totrans-1193
  prefs: []
  type: TYPE_NORMAL
  zh: A partially synchronous model captures the assumption that the network is primarily
- en: synchronous and well behaved, but it can sometimes behave asynchronously. For
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: synchronous and well behaved, but it can sometimes behave asynchronously. For
- en: example, processing speeds can differ, or network delays can occur, but the
    system
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: example, processing speeds can differ, or network delays can occur, but the
    system
- en: ultimately returns to a synchronous state to resume normal operation.
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
  zh: ultimately returns to a synchronous state to resume normal operation.
- en: Another way to think about this is that the network usually is synchronous but
    can
  id: totrans-1197
  prefs: []
  type: TYPE_NORMAL
  zh: Another way to think about this is that the network usually is synchronous but
    can
- en: unpredictably, for a bounded amount of time, behave asynchronously, but there
    are long
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: unpredictably, for a bounded amount of time, behave asynchronously, but there
    are long
- en: enough periods of synchrony where the system behaves correctly.
  id: totrans-1199
  prefs: []
  type: TYPE_NORMAL
  zh: enough periods of synchrony where the system behaves correctly.
- en: Another way to think about this is that the real systems are synchronous most
    of the
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: Another way to think about this is that the real systems are synchronous most
    of the
- en: time but can behave arbitrarily and unpredictably asynchronous at times. During
    the
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: time but can behave arbitrarily and unpredictably asynchronous at times. During
    the
- en: synchronous period, the system is able to make decisions and terminate.
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
  zh: synchronous period, the system is able to make decisions and terminate.
- en: 'In summary, we can quote Leonardo da Vinci:'
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
  zh: 'In summary, we can quote Leonardo da Vinci:'
- en: '*Time stays long enough for anyone who will use it.*'
  id: totrans-1204
  prefs: []
  type: TYPE_NORMAL
  zh: '*时间足够长，对于任何将使用它的人来说。*'
- en: Figur[e 1-15 sho](#p52)ws how a partially synchronous network behaves.
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: Figur[e 1-15 sho](#p52)ws how a partially synchronous network behaves.
- en: '***Figure 1-15\.** Partially synchronous network*'
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-15\.** 部分同步网络*'
- en: '33'
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: '33'
- en: '![](index-53_1.png)'
  id: totrans-1208
  prefs: []
  type: TYPE_IMG
  zh: '![](index-53_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
  zh: Chapter 1 IntroduCtIon
- en: '**Eventually Synchronous**'
  id: totrans-1210
  prefs: []
  type: TYPE_NORMAL
  zh: '**最终同步**'
- en: In the eventually synchronous version of partial synchrony, the system can be
    initially
  id: totrans-1211
  prefs: []
  type: TYPE_NORMAL
  zh: In the eventually synchronous version of partial synchrony, the system can be
    initially
- en: asynchronous, but there is an unknown time called global stabilization time
    (GST),
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: asynchronous, but there is an unknown time called global stabilization time
    (GST),
- en: unknown to processors, after which the system eventually becomes synchronous.
    Also,
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: unknown to processors, after which the system eventually becomes synchronous.
    Also,
- en: it does not mean that the system will forever remain synchronous after GST.
    That is not
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: it does not mean that the system will forever remain synchronous after GST.
    That is not
- en: possible practically, but the system is synchronous for a long enough period
    after GST to make a decision and terminate.
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
  zh: possible practically, but the system is synchronous for a long enough period
    after GST to make a decision and terminate.
- en: We can visualize the spectrum of synchrony models from asynchronous to
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: We can visualize the spectrum of synchrony models from asynchronous to
- en: synchronous in Figure [1-16\.](#p53)
  id: totrans-1217
  prefs: []
  type: TYPE_NORMAL
  zh: synchronous in Figure [1-16\.](#p53)
- en: '***Figure 1-16\.** Synchrony models in distributed systems*'
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-16\.** 分布式系统中的同步模型*'
- en: Both message delivery delay and relative speed of the processes are taken into
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: Both message delivery delay and relative speed of the processes are taken into
- en: consideration in synchrony models.
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: consideration in synchrony models.
- en: '**Formal Definitions**'
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
  zh: '**正式定义**'
- en: 'Some formal definitions regarding the partial synchrony model are stated as
    follows:'
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 'Some formal definitions regarding the partial synchrony model are stated as
    follows:'
- en: • Delta *Δ* denotes a fixed upper bound on the time required for a
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: • Delta *Δ* denotes a fixed upper bound on the time required for a
- en: message to reach from one processor to another.
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: message to reach from one processor to another.
- en: • Phi *Φ* denotes a fixed upper bound on the relative speed of different
  id: totrans-1225
  prefs: []
  type: TYPE_NORMAL
  zh: • Phi *Φ* denotes a fixed upper bound on the relative speed of different
- en: processors.
  id: totrans-1226
  prefs: []
  type: TYPE_NORMAL
  zh: processors.
- en: • GST is the global stabilization time after which the system behaves
  id: totrans-1227
  prefs: []
  type: TYPE_NORMAL
  zh: • GST is the global stabilization time after which the system behaves
- en: synchronously.
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: synchronously.
- en: With these preceding variables defined, we can define various models of synchrony
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: With these preceding variables defined, we can define various models of synchrony
- en: 'as follows:'
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: 'as follows:'
- en: • Asynchronous systems are those where no fixed upper bounds *Δ* and
  id: totrans-1231
  prefs: []
  type: TYPE_NORMAL
  zh: • Asynchronous systems are those where no fixed upper bounds *Δ* and
- en: '*Φ* exist.'
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: '*Φ* exist.'
- en: '34'
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
  zh: '34'
- en: '![](index-54_1.png)'
  id: totrans-1234
  prefs: []
  type: TYPE_IMG
  zh: '![](index-54_1.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: Chapter 1 IntroduCtIon
- en: • Synchronous systems are those where fixed upper bounds *Δ* and *Φ*
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
  zh: • Synchronous systems are those where fixed upper bounds *Δ* and *Φ*
- en: are known.
  id: totrans-1237
  prefs: []
  type: TYPE_NORMAL
  zh: are known.
- en: 'Partially synchronous systems can be defined in several ways:'
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
  zh: 'Partially synchronous systems can be defined in several ways:'
- en: • Where fixed upper bounds *Δ* and *Φ* exist, but they are not known.
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: • Where fixed upper bounds *Δ* and *Φ* exist, but they are not known.
- en: • Where fixed upper bounds *Δ* and *Φ* are known but hold after some
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: • Where fixed upper bounds *Δ* and *Φ* are known but hold after some
- en: unknown time T. This is the eventually synchronous model. We can
  id: totrans-1241
  prefs: []
  type: TYPE_NORMAL
  zh: unknown time T. This is the eventually synchronous model. We can
- en: say that eventually synchronous model is where fixed upper bounds
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
  zh: say that eventually synchronous model is where fixed upper bounds
- en: '*Δ* and *Φ* are known but only hold after some time, known as GST.'
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: '*Δ* and *Φ* are known but only hold after some time, known as GST.'
- en: • In another variation after GST *Δ* holds for long enough to allow the
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
  zh: • In another variation after GST *Δ* holds for long enough to allow the
- en: protocol to terminate.
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在第[3章中更正式地使用同步模型](https://doi.org/10.1007/978-1-4842-8179-6_3)来绕过FLP和一致性协议。目前，作为基础概念
- en: We will use synchrony models more formally in Chapt[er 3 in the con](https://doi.org/10.1007/978-1-4842-8179-6_3)text
    of circumventing FLP and consensus protocols. For now, as a foundation the concepts
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: 系统及其对分布式系统的影响以及对其产生不利影响
- en: introduced earlier are sufficient.
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 推车原先是足够的。
- en: Figur[e 1-17 sho](#p54)ws synchronous vs. asynchronous communication using a
    space-time diagram.
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
  zh: 图[1-17 sho](#p54)ws 使用时空图表展示同步与异步通信。
- en: '***Figure 1-17\.** Synchronous and asynchronous system*'
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: '**阈值对手**'
- en: Now that we have discussed the synchrony model, let’s now turn our attention
    to the
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: 影响它们。
- en: adversary model, which allows us to make assumptions about the effect of adversary
    on
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: 进行假设。
- en: a distributed system. In this model, we model how an adversary can behave and
    what
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可以做的事情。但是，如果假定对手是一个全能的，可以做任何事情并控制
- en: powers an adversary may have in order to adversely influence the distributed
    system.
  id: totrans-1253
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里简要讨论这些类型。
- en: '35'
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
  zh: '35'
- en: Chapter 1 IntroduCtIon
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，假设有一个外部实体已经腐化了
- en: '**Adversary Model**'
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
  zh: 对手模型，允许我们对对手对
- en: In addition to assumptions about synchrony and timing in a distributed system
    model,
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在分布式系统模型中关于同步性和时间的假设之外，
- en: there is another model where assumptions about the power of the adversary and
    how
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: 对对分布式系统产生不利影响。
- en: it can adversely affect the distributed system are made. This is an important
    model
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能会对分布式系统产生不利影响。这是一个重要的模型
- en: which allows a distributed system designer to reason about different properties
    of the
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许分布式系统设计人员推理出不同的属性
- en: distributed system while facing the adversary. For example, a distributed algorithm
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-17\.** 同步和异步系统*'
- en: is guaranteed to work correctly only if less than half of the nodes are controlled
    by a
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
  zh: 协议来终止。
- en: malicious adversary. Therefore, adversary models are usually modelled with a
    limit to
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意对手。因此，对手模型通常被建模为一个限制
- en: what an adversary can do. But, if an adversary is assumed to be all-powerful
    who can do
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: anything and control all nodes and communication links, then there is no guarantee
    that
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: 指定网络中可以破坏的进程数量的限制。
- en: the system will ever work correctly.
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
  zh: 系统永远只有大于一半的节点由一个控制
- en: Adversary models can be divided into different types depending on the distributed
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: 任何和控制所有节点和通信链路，那么就不能保证
- en: system and the influence they can have on the distributed system and adversely
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。在这个模型中，我们模拟了对手的行为以及
- en: affect them.
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: 对手模型可以根据分布式系统的不同类型分为不同的类型
- en: In this model, it is assumed there is an external entity that has corrupted
    the
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: 面对对手的分布式系统。例如，一个分布式算法
- en: processes and can control and coordinate faulty processes’ actions. This entity
    is called an adversary. Note that there is a slight difference compared to the
    failure model here
  id: totrans-1271
  prefs: []
  type: TYPE_NORMAL
  zh: 过程，并能够控制和协调有错误的过程的行动。这个实体被称为对手。请注意，与故障模型相比，在这里有一些微小的区别
- en: because, in the failure model, the nodes can fail for all sorts of reasons,
    but no external entity is assumed to take control of processes.
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: '**对手模型**'
- en: Adversaries can affect a distributed system in several ways. A system designer
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了同步模型，现在让我们转向
- en: using an adversary model considers factors such as the **type of corruption**,
    **time** **of corruption**, and **extent of corruption** (how many processes simultaneously).
    In addition, **computational power** available to the adversary, **visibility**,
    and **adaptability** of the adversary are also considered. The adversary model
    also allows designers to
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对手模型考虑因素，如**破坏类型**、**破坏时间**以及**破坏程度**（同时有多少个进程）。此外，对手可用的**计算能力**、**可见性**以及**适应性**也被考虑进去。对手模型还允许设计人员
- en: specify to what limit the number of processes in a network can be corrupted.
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: 因为在故障模型中，节点可以因各种原因出现故障，但不假定有外部实体接管进程。
- en: We will briefly discuss these types here.
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值对手是分布式系统中标准和广泛使用的模型。在这个模型中，系统中总共有故障进程的数量受到限制。
- en: '**Threshold Adversary**'
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有另一个模型，假设了对手的力量以及如何
- en: A threshold adversary is a standard and widely used model in distributed systems.
    In this model, there is a limit imposed on the number of overall faulty processes
    in the system.
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可以以几种方式影响分布式系统。一个系统设计者
- en: In other words, there is a fixed upper bound f on the number of faulty processes
    in the
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，在故障进程的数量上有一个固定的上界 f
- en: network. This model is also called the global adversary model. Many different
    algorithms
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: 网络。这个模型也被称为全局对手模型。许多不同的算法
- en: have been developed under this assumption. Almost all of the consensus protocols
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些假设下开发出来的。几乎所有的共识协议
- en: work under at least the threshold adversary model where it is assumed that an
    adversary
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: 在至少假设了阈值对手模型的情况下工作
- en: '36'
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: '36'
- en: Chapter 1 IntroduCtIon
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章引言
- en: can control up to f number of nodes in a network. For example, in the Paxos
    protocol
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
  zh: 可以控制多达 f 个节点。例如，在 Paxos 协议中
- en: discussed in Chapt[er 7, c](https://doi.org/10.1007/978-1-4842-8179-6_7)lassical
    consensus algorithms achieve consensus under the assumption that an adversary
    can control less than half of the total number of nodes in
  id: totrans-1286
  prefs: []
  type: TYPE_NORMAL
  zh: 在第[7, c](https://doi.org/10.1007/978-1-4842-8179-6_7)章讨论的经典共识算法在假设对手可以控制不到总节点数的一半的情况下达成共识
- en: the network.
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: 网络。
- en: '**Dynamic Adversary**'
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: '**动态对手**'
- en: Also called adaptive adversary, in this model the adversary can corrupt processes
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中也被称为自适应对手，对手可以腐化进程
- en: anytime during the execution of the protocol. Also, the faulty process then
    remains faulty until the execution ends.
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: 在协议执行期间的任何时候。此外，故障的进程在执行结束之前仍然是有故障的。
- en: '**Static Adversary**'
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: '**静态对手**'
- en: This type of adversary is able to perform its adversarial activities such as
    corrupting
  id: totrans-1292
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的对手能够执行其敌对活动，如腐化
- en: processes only before the protocol is executed.
  id: totrans-1293
  prefs: []
  type: TYPE_NORMAL
  zh: 协议执行之前只在进程之间。
- en: '**Passive Adversary**'
  id: totrans-1294
  prefs: []
  type: TYPE_NORMAL
  zh: '**被动对手**'
- en: This type of adversary does not actively try to sabotage the system; however,
    it can learn some information about the system while running the protocol. Thus,
    it can be called a
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的对手并不积极地试图破坏系统；然而，它可以在运行协议时学到一些关于系统的信息。因此，它可以被称为
- en: semi-honest adversary.
  id: totrans-1296
  prefs: []
  type: TYPE_NORMAL
  zh: 半诚实对手。
- en: 'An adversary can cause faults under two models: the crash failure model and
    the'
  id: totrans-1297
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可以在两种模型下引起故障：崩溃故障模型和
- en: Byzantine failure model.
  id: totrans-1298
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭故障模型。
- en: In the crash failure model, the adversary can stop a process from executing
    the
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: 在崩溃故障模型中，对手可以阻止进程执行
- en: protocol it has control over anytime during the execution.
  id: totrans-1300
  prefs: []
  type: TYPE_NORMAL
  zh: 协议在执行期间随时控制。
- en: In the Byzantine failure model, the adversary has complete control over the
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: 在拜占庭故障模型中，对手对
- en: corrupted process and can control it to deviate arbitrarily from the protocol.
    Protocols
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: 腐败的进程拥有完全控制权，并且可以控制它任意地从协议中偏离。协议
- en: that work under these assumptions and tolerate such faults are called crash
    fault–
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些假设下工作并容忍这种故障的协议称为崩溃故障
- en: tolerant protocols (CFT) or Byzantine fault–tolerant protocols (BFT), respectively.
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
  zh: 容错协议（CFT）或拜占庭容错协议（BFT）。分别。
- en: '**Time, Clocks, and Order**'
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间，时钟和顺序**'
- en: Time plays a critical role in distributed systems. Almost always, there is a
    need to
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: 时间在分布式系统中起着至关重要的作用。几乎总是需要
- en: measure time. For example, timestamps are required in log files in a distributed
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: 测量时间。例如，在分布式系统的日志文件中需要时间戳
- en: system to show when a particular event occurred. From a security point of view,
    audit
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: 系统以显示特定事件发生的时间。从安全性的角度来看，审计要求
- en: timestamps are needed to indicate when a specific operation occurred, for example,
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳需要指示何时发生特定操作，例如，
- en: when a specific user logged in to the system. In operating systems, timing is
    required
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: 当特定用户登录系统时。在操作系统中，需要时间
- en: '37'
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: '37'
- en: '![](index-57_1.png)'
  id: totrans-1312
  prefs: []
  type: TYPE_IMG
  zh: '![](index-57_1.png)'
- en: '![](index-57_2.png)'
  id: totrans-1313
  prefs: []
  type: TYPE_IMG
  zh: '![](index-57_2.png)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: for scheduling internal events. All these use cases and countless other computer
    and
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
  zh: 用于安排内部事件。所有这些用例以及无数其他的计算机和
- en: distributed systems operations require some notion of time.
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统操作需要一定的时间概念。
- en: The notion of time in distributed systems is tricky. Events shown in Figur[e
    1-18](#p57) need to be ordered for a distributed system to be reasonably useful.
    Ordering of events in a
  id: totrans-1317
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中的时间概念很棘手。图[e 1-18](#p57)中显示的事件需要被排序，以使分布式系统变得合理有用。分布系统中事件的排序要求
- en: distributed system is one of the fundamental and critical requirements. As there
    is no
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统是基本且关键的要求。由于没有
- en: global shared clock in distributed systems, the ordering of events becomes a
    challenging
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统的全局共享时钟中，事件的排序变得具有挑战性
- en: problem. To this end, the main concern here is to accomplish the correct order
    of
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: 问题。为此，这里的主要关注点是完成正确的顺序
- en: events in the system. We have this notion of time in our daily lives where we
    can say that something happened before something else. For example, if I sat an
    exam and the results
  id: totrans-1321
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中的事件。在日常生活中，我们对时间有这样的概念，我们可以说某事发生在另一件事之前。例如，如果我参加了考试，而结果
- en: came out a week later, we can say confidently that the exam must have occurred
    or
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: 基于内部物理时钟和外部时间源的时间同步。
- en: happened before the results came out. We can visualize this relationship in
    the diagram
  id: totrans-1323
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个星期后出来，我们可以确定说这个考试一定发生了或者
- en: in Figure [1-19](#p57).
  id: totrans-1324
  prefs: []
  type: TYPE_NORMAL
  zh: 见图[1-19](#p57)。
- en: '***Figure 1-18\.** Events and processes in a three-node distributed system*'
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: 万国码。图[1-20](#p58)展示了从左到右的石英晶体的自然形式，组件形式，以及在外壳内部
- en: '***Figure 1-19\.** Exam happened before the result – a happened-before relation*'
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: '38'
  id: totrans-1327
  prefs: []
  type: TYPE_NORMAL
  zh: 温度，和外壳。最常见的频率是32768赫兹，这几乎是
- en: '![](index-58_1.jpg)'
  id: totrans-1328
  prefs: []
  type: TYPE_IMG
  zh: '![](index-58_1.jpg)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: '![](index-59_1.jpg)'
- en: Usually, we are familiar with the physical clock, that is, our typical day-to-day
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们熟悉的是物理钟，也就是我们日常的典型物理
- en: understanding and the notion of time where I can say something like I will meet
    you at 3
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: 电场暴露于高温时，时钟可能比在
- en: PM today, or the football match is at 11 AM tomorrow. This notion of time is
    what we are
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-19\.** 结果出来之前发生的考试 - 一个先于的关系*'
- en: familiar with. Moreover, physical clocks can be used in distributed systems,
    and several
  id: totrans-1333
  prefs: []
  type: TYPE_NORMAL
  zh: 下午，或者明天上午11点是足球比赛。这种时间的概念是我们
- en: algorithms are used to synchronize time across all nodes in a distributed system.
    These
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: 算法用于在分布式系统中同步所有节点的时间。这些
- en: algorithms can synchronize clocks in a distributed system using message passing.
  id: totrans-1335
  prefs: []
  type: TYPE_NORMAL
  zh: 制造差异，外壳和操作环境等多种因素会影响
- en: Let’s first have a look at the physical clocks and see some algorithms that
    can be used
  id: totrans-1336
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看物理钟，并了解可以用于的一些算法
- en: for time synchronization based on internal physical clocks and external time
    source.
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉的。而且，物理钟可以用于分布式系统，并且一些
- en: '**Physical Clocks**'
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: 基于石英的时钟通常对于一般用途来说足够精确。但是，
- en: Physical clocks are in everyday use. Now prevalent digital clocks are based
    on quartz
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: 物理钟在日常生活中被广泛使用。如今流行的数字钟是基于石英（quartz）的。
- en: crystal, whereas traditional mechanical clocks are based on spring mechanisms
    or
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: '39'
- en: pendulums. Digital clocks, from wristwatches to clocks on a computer motherboard,
  id: totrans-1341
  prefs: []
  type: TYPE_NORMAL
  zh: （太冷、太热）都会影响石英晶体的运行。通常，电子设备在
- en: make use of quartz crystals. In practice, an oscillator circuit regulated by
    a quartz crystal is used to generate an accurate frequency. When the electric
    field is applied to a quartz crystal, it bends and starts to resonate at a frequency
    depending upon its size, cut,
  id: totrans-1342
  prefs: []
  type: TYPE_NORMAL
  zh: 振荡器电路。
- en: temperature, and housing. The most common frequency is 32768 Hz which is almost
  id: totrans-1343
  prefs: []
  type: TYPE_NORMAL
  zh: 算法可以通过消息传递同步分布式系统中的时钟。
- en: universally used in quartz-based clocks. Figur[e 1-20](#p58) shows, from left
    to right, a quartz crystal in a natural form, in a component form, and inside
    a casing with additional
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
  zh: 温度会减慢时钟的运行速度。想象一下，一个电子设备在
- en: oscillator circuitry.
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
  zh: 晶体，而传统的机械钟基于弹簧机制或者
- en: '***Figure 1-20\.** A quartz crystal in a natural form (left), in a component
    form*'
  id: totrans-1346
  prefs: []
  type: TYPE_NORMAL
  zh: '38'
- en: '*(middle), and in a circuit (right)*'
  id: totrans-1347
  prefs: []
  type: TYPE_NORMAL
  zh: '*(中)，以及电路（右）*'
- en: '39'
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 正常的优越条件。由于时钟运行得更快或更慢导致的这种差异称为漂移。漂移是以百万分之一（ppm）计量。
- en: '![](index-59_1.jpg)'
  id: totrans-1349
  prefs: []
  type: TYPE_IMG
  zh: '***图1-18\.** 三节点分布式系统中的事件和进程*'
- en: Chapter 1 IntroduCtIon
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: 理解和时间概念，我可以说像我会在下午3点见你
- en: Quartz-based clocks are usually accurate enough for general-purpose use. However,
  id: totrans-1351
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 引言
- en: several factors such as manufacturing differences, casing, and operating environment
  id: totrans-1352
  prefs: []
  type: TYPE_NORMAL
  zh: 使用石英晶体。实际上，由石英晶体调节的振荡器电路用于生成精确的频率。当电场施加在石英晶体上时，它弯曲并开始以取决于其大小、切割，
- en: (too cold, too hot) impact the operation of a quartz crystal. Usually, too low
    or high a
  id: totrans-1353
  prefs: []
  type: TYPE_NORMAL
  zh: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - - - - - - - - - - - - - - - - - - - - - -'
- en: temperature can slow down the clock. Imagine if an electronic device operating
    in the
  id: totrans-1354
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-20\.** 石英晶体的自然形式（左），组件形式*'
- en: field is exposed to high temperatures; the clock can run slower than a clock
    working in
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: 摆动钟。从手表到计算机主板上的时钟，数字时钟都是
- en: normal favorable conditions. This difference caused by the clock running faster
    or slower is called drift. Drift is measured in parts per million (ppm) units.
  id: totrans-1356
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理时钟**'
- en: In almost all quartz clocks, the frequency of the quartz crystal is 32,768 kHz
    due to its cut and size and how it is manufactured. This is a specific cut and
    size which looks like a tuning fork, due to which the frequency produced is always
    32,768 Hertz. I decided to do
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有石英钟的频率都是32,768千赫，因为它的切割和大小以及它的制造方式。这是一个特定的切割和大小，看起来像一个音叉，因此产生的频率总是32,768赫兹。我决定做
- en: a small experiment with my oscilloscope and an old clock lying around to demonstrate
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
  zh: 一个小实验，用我的示波器和一个随便找到的旧时钟来演示
- en: this fact.
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: 这个事实。
- en: Here are the results! Figur[e 1-21 sho](#p59)ws a quartz crystal in a clock
    circuit producing exactly 32,768 Hertz at normal room temperature, shown on the
    oscilloscope screen.
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
  zh: '这就是结果！图1-21 显(示 #p59)了在普通室温下时钟电路中产生32,768赫兹的石英晶体，显示在示波器屏幕上。'
- en: '***Figure 1-21\.** Quartz crystal clock measured using an oscilloscope*'
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-21\.** 使用示波器测量的石英晶体时钟*'
- en: In Figur[e 1-21](#p59), the probes from the oscilloscope are connected to the
    quartz crystal component on the clock circuit, and the waveform is shown on the
    oscilloscope screen.
  id: totrans-1362
  prefs: []
  type: TYPE_NORMAL
  zh: 在图1-21(#p59)中，示波器的探头连接到时钟电路上的石英晶体组件，并且波形显示在示波器屏幕上。
- en: Also, the frequency is displayed at the right bottom of the oscilloscope screen,
    which
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: 而且频率显示在示波器屏幕的右下角，这
- en: reads 32.7680KHz.
  id: totrans-1364
  prefs: []
  type: TYPE_NORMAL
  zh: 读取32.7680千赫。
- en: '40'
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: '40'
- en: Chapter 1 IntroduCtIon
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: '**Clock Skew vs. Drift**'
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
  zh: '**钟差与漂移**'
- en: Due to environmental factors such as temperature and manufacturing differences,
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: 由于环境因素，如温度和制造差异，
- en: quartz crystal clocks can slow down, resulting in skew and drift. The immediate
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: 石英晶体时钟可能会变慢，导致偏移和漂移。立即
- en: difference between the time shown by two clocks is called their skew, whereas
    the rate at which two clocks count time differently is called drift. Note that
    the difference between physical clocks between nodes in a heterogeneous distributed
    system may be even more
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: 两个时钟显示的时间差称为它们的偏移，而两个时钟计时速度不同的速率称为漂移。请注意，异构分布系统节点之间的物理时钟之间的差异甚至可能更大
- en: significant than homogenous distributed systems where hardware, OS, and architecture
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是异构分布系统，硬件、操作系统和架构
- en: are the same for all nodes.
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有节点来说都是一样的。
- en: Generally, it is expected that roughly a drift of one second over 11 days can
    develop,
  id: totrans-1373
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，预期大约11天内会产生一秒的漂移，
- en: which over time can lead to an observable and significant difference. Imagine
    two
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，可以导致明显可观的差异。想象两个
- en: servers running in a data center with no clock synchronization mechanism and
    are
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器在数据中心中运行,没有时钟同步机制，并且
- en: only dependent on their internal quartz clock. In a month, they will be running
    two
  id: totrans-1376
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅取决于它们的内部石英钟。一个月内，它们将运行两个
- en: to three seconds apart from each other. All time-dependent operations will run
    three
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 相隔三秒。所有依赖时间的操作都将运行三
- en: seconds apart, and over time this will continue to worsen. For example, a batch
    job that
  id: totrans-1378
  prefs: []
  type: TYPE_NORMAL
  zh: 相隔几秒，随着时间的推移，这种情况将继续恶化。例如，一个批处理作业
- en: is supposed to start at 11 AM will begin at 11 + 3 seconds in a month. This
    situation can cause issues with time-dependent jobs, can cause security issues,
    and can impact time-sensitive operations, and software may fail or depict an arbitrary
    behavior. A much more
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: 应该在上午11点开始在一个月内会在上午11点加3秒开始。这种情况可能会导致依赖时间的作业出现问题，可能会导致安全问题，并可能影响时间敏感的操作，软件可能会失败或表现出任意行为。一个更
- en: accurate clock than a quartz clock is an atomic clock.
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
  zh: 比石英钟更精确的钟是原子钟。
- en: '**Atomic Clocks**'
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: '**原子钟**'
- en: Atomic clocks are based on the quantum mechanical properties of atoms. Atoms
    such
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
  zh: 原子钟基于原子的量子力学性质。像这样的原子
- en: as cesium or rubidium and mercury are used, and resonant frequencies (oscillations)
    of
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: 像铯或铷和汞这样的原子被用来，以及共振频率（振荡）
- en: atoms are used to record accurate and precise times.
  id: totrans-1384
  prefs: []
  type: TYPE_NORMAL
  zh: 原子被用来记录精确和准确的时间。
- en: Our notion of time is based on astronomical observations such as changing seasons
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对时间的概念是基于天文观察，比如季节变化
- en: and the Earth’s rotation. The higher the oscillation, the higher the frequency
    and the
  id: totrans-1386
  prefs: []
  type: TYPE_NORMAL
  zh: 和地球的旋转。振动越高，频率越高，并且
- en: more precise the time. This is the principle on which atomic clocks work and
    produce
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: 更精确的时间。这是原子钟工作和产生的原则
- en: highly precise time.
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: 高度精确的时间。
- en: In 1967, the unit of time was defined as a second of “the duration of 9,192,631,770
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: 在1967年，时间单位被定义为“9,192,631,770秒的持续时间
- en: periods of the radiation corresponding to the transition between the two hyperfine
    levels of the ground state of the caesium-133 atom.” In other words, oscillation
    of cesium atoms between two energy states exactly 9,192,631,770 times under controlled
    environment
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: 辐射周期对应于铯-133原子的基态的两个超精细能级之间的跃迁。”换句话说，在受控环境下铯原子在两个能级之间振荡恰好9,192,631,770次
- en: defines a true second. An atomic clock is shown in Figur[e 1-22\.](#p61)
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了一个真正的秒。原子钟如图[1-22\.](#p61)
- en: '41'
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: '41'
- en: '![](index-61_1.jpg)'
  id: totrans-1393
  prefs: []
  type: TYPE_IMG
  zh: '![](index-61_1.jpg)'
- en: Chapter 1 IntroduCtIon
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: '***Figure 1-22\.** Cesium-based atomic clocks: image from [https://nara.](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)*'
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: '***图1-22\.** 基于铯的原子钟：图片来源于 [https://nara.](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)*'
- en: '[*getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-*](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)'
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
  zh: '[*getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-*](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)'
- en: '[*observatory-provide-the-basis-for-29fa0c*](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)'
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: '[*observatory-provide-the-basis-for-29fa0c*](https://nara.getarchive.net/media/cesium-beam-atomic-clocks-at-the-us-naval-observatory-provide-the-basis-for-29fa0c)'
- en: Now imagine a scenario where we discover a clock skew and see that one clock
    is
  id: totrans-1398
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想象一个场景，我们发现了时钟偏差，并且看到一个时钟
- en: running behind ten seconds. We can usually and simply advance it to ten seconds
    to
  id: totrans-1399
  prefs: []
  type: TYPE_NORMAL
  zh: 落后于十秒。我们通常可以简单地将它提前十秒钟
- en: make the clock accurate again. It is not ideal but not as bad as the clock skew,
    where we may discover a clock to run ten seconds behind. What can we do in that
    case? Can we
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: 使时钟再次准确化。这并不完美，但不像时钟偏差那么糟糕，比如我们可能发现时钟跑慢了十秒钟。在这种情况下我们可以做什么？我们能否
- en: simply push it back to ten seconds? It is not a very good idea because we can
    then run
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: 只是把它推回十秒钟？这不是一个很好的主意，因为我们可以让
- en: into situations where it would appear that a message is received before we sent
    it.
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: 进入一些看起来我们收到消息之前已经发送消息的情况。
- en: To address clock skews and drifts, we can synchronize clocks with a trusted
    and
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决时钟偏差和偏移，我们可以与受信任和
- en: accurate time source.
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: 准确的时间来源。
- en: You might be wondering why there is such a requirement for more and more precise
  id: totrans-1405
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你会想知道为什么需要越来越精确的时钟要求
- en: clocks and sources of time. Quartz clocks are good enough for day-to-day use;
    then
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: 时钟和时间来源。石英钟对于日常使用已经足够了；然后
- en: we saw GPS as a more accurate time source, and then we saw atomic clocks that
    are
  id: totrans-1407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为GPS是更准确的时间来源，然后我们看到了原子钟，它们
- en: even more accurate and can drift only a second in about 300 million years! [1
    B](#p61)ut why do we need such highly accurate clocks? The answer is that for
    day-to-day use, it doesn’t
  id: totrans-1408
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确，并且在大约3亿年内只能偏移一秒钟！[1 B](#p61)但我们为什么需要如此精确的时钟？答案是对于日常使用来说，它并不
- en: matter. If the time on my wristwatch is a few seconds different from other clocks,
    it’s
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
  zh: matter. 如果我手表上的时间与其他时钟相差几秒钟，那
- en: not a problem. If my post on a social media site has a timestamp that is a few
    seconds
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: 不是问题。如果我在社交媒体上发表的帖子的时间戳差几秒钟
- en: 1 [www.nist.gov/si-redefinition/second/second-present](http://www.nist.gov/si-redefinition/second/second-present)
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 1 [www.nist.gov/si-redefinition/second/second-present](http://www.nist.gov/si-redefinition/second/second-present)
- en: '42'
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
  zh: '42'
- en: Chapter 1 IntroduCtIon
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: apart from the exact time I posted it, perhaps that is not an issue. Of course,
    as long
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我发布的确切时间，也许这并不是问题。当然，只要
- en: as the sequence is maintained, the timestamp is acceptable within a few seconds.
    But
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
  zh: 只要序列保持，时间戳在几秒钟内是可以接受的。但是
- en: the situation changes in many other practical scenarios and distributed systems.
    For
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多其他实际场景和分布式系统中，情况会发生变化。对于
- en: example, high-frequency trading systems require (by regulation MiFID II) that
    the
  id: totrans-1417
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，高频交易系统需要（根据MiFID II法规）要求
- en: mechanism format the timestamp on messages in the trading system in microseconds
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 机制格式化交易系统中的消息时间戳为微秒
- en: and be accurate within 100 microseconds. From a clock synchronization point
    of view,
  id: totrans-1419
  prefs: []
  type: TYPE_NORMAL
  zh: 并且在约100微秒的范围内保持精确。从时钟同步的角度来看，
- en: only 100 microseconds divergence is allowed from UTC. While such requirements
    are
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: 只允许与世界协调时间（UTC）偏差100微秒。虽然这样的要求是
- en: essential for the proper functioning and regulation of the trading systems,
    they also
  id: totrans-1421
  prefs: []
  type: TYPE_NORMAL
  zh: 对于交易系统的正常运行和监管至关重要，它们也
- en: pose technical challenges. In such scenarios, the choice of source of accurate
    time,
  id: totrans-1422
  prefs: []
  type: TYPE_NORMAL
  zh: 提出技术挑战。在这种情况下，准确时间来源的选择，
- en: choice of synchronization algorithms, and handling of skews and drifts become
    of prime
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
  zh: 同步算法的选择和偏移和漂移的处理成为关键
- en: importance.
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: 重要性。
- en: 'You can see specific MiFID requirements here as a reference:'
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以作为参考在这里看到具体的MiFID要求：
- en: '[https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-](https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-annex_en.pdf)'
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-](https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-annex_en.pdf)'
- en: '[annex_en.pdf](https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-annex_en.pdf)'
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: '[附件英文.pdf](https://ec.europa.eu/finance/securities/docs/isd/mifid/rts/160607-rts-25-annex_en.pdf)'
- en: There are other applications of atomic clocks in defense, geology, astronomy,
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
  zh: 历史地方。
- en: navigation, and many others.
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: 导航等等。
- en: Recently, Sapphire clocks have been developed, which are much more precise than
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，开发出了蓝宝石时钟，它比
- en: even cesium-based atomic clocks. It is so precise that it can lose or gain a
    second in three billion years.
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至是基于铯的原子钟。它是如此精确，以至于在三十亿年内可能会失去或获得一秒。
- en: Usually, there are two ways in which time is represented in computers. One is
    epoch
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，计算机中有两种以表示时间的方式。一种是纪元
- en: time, also called Unix time, which is defined as the number of seconds elapsed
    since
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 时间，也称为Unix时间，它定义为自1970年1月1日以来经过的秒数。
- en: January 1, 1970\. Another common timestamp format is ISO8601, which defines
    a date
  id: totrans-1434
  prefs: []
  type: TYPE_NORMAL
  zh: 1970年1月1日。另一种常见的时间戳格式是ISO8601，它定义了一个日期
- en: and time format standard.
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: 以及时间格式标准。
- en: '**Synchronization Algorithms for Physical Clocks**'
  id: totrans-1436
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理时钟的同步算法**'
- en: 'There are two methods to synchronize clocks:'
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以同步时钟：
- en: 1\. External synchronization
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 外部同步
- en: 2\. Internal synchronization
  id: totrans-1439
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 内部同步
- en: In the external clock synchronization method, there is an external and authoritative
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: 在外部时钟同步方法中，有一个外部和权威的
- en: source of time to which nodes in a distributed system synchronize with.
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: 时间来源，分布式系统中的节点与其同步。
- en: In the internal synchronization method, clocks in nodes (processes) are
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部同步方法中，节点（进程）中的时钟是
- en: synchronized with one another.
  id: totrans-1443
  prefs: []
  type: TYPE_NORMAL
  zh: 互相同步。
- en: '43'
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: '43'
- en: Chapter 1 IntroduCtIon
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 词序
- en: '**NTP**'
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络时间协议（NTP）**'
- en: The network time protocol (NTP) allows clients to synchronize with UTC. In NTP,
    servers
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
  zh: 网络时间协议（NTP）允许客户端与世界协调时间（UTC）同步。在NTP中，服务器
- en: are organized in so-called strata, where stratum 1 servers (primary time servers)
    are
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: 组织成所谓的地层，地层1服务器（主时间服务器）位于
- en: directly connected to an accurate time source in stratum 0, for example, GPS
    or atomic
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
  zh: 直接连接到准确的时间来源，例如GPS或原子钟
- en: clock. Stratum 2 servers synchronize with stratum 1 servers over the network,
    and
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: 时钟。第2级服务器通过网络与第1级服务器同步，而
- en: stratum 2 servers synchronize with stratum 3 servers. This type of architecture
    provides
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
  zh: 第2级服务器与第3级服务器同步。这种架构提供
- en: a reliable, secure, and scalable protocol. Reliability comes from the use of
    redundant
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可靠，安全和可扩展的协议。可靠性来自冗余使用
- en: servers and paths. Security is provided by utilizing appropriate authentication
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器和路径。安全性通过使用恰当的认证来提供
- en: mechanisms, and scalability is characterized by NTP’s ability to serve a large
    number
  id: totrans-1454
  prefs: []
  type: TYPE_NORMAL
  zh: 机制，以及NTP提供大量数字的能力。
- en: of clients. While NTP is an efficient and robust protocol, inherent network
    latency,
  id: totrans-1455
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端。尽管NTP是一种高效和健壮的协议，固有的网络延迟，
- en: misconfigurations in the protocol setup, network misconfigurations that may
    block the
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: 在协议设置中的错误配置，可能会阻止网络的
- en: NTP protocol, and several other factors can still cause clocks to drift.
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: NTP协议，以及其他若干因素仍可能导致时钟漂移。
- en: '**GPS As a Time Source**'
  id: totrans-1458
  prefs: []
  type: TYPE_NORMAL
  zh: '**GPS作为时间来源**'
- en: A GPS receiver can be used as an accurate source of time. All 31 GPS satellites
    have
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: GPS接收机可用作准确的时间来源。所有31个GPS卫星都有
- en: atomic clocks on board, which produce precise time. These satellites broadcast
    their
  id: totrans-1460
  prefs: []
  type: TYPE_NORMAL
  zh: 其中搭载的原子钟可以产生精准时间。这些卫星广播它们的
- en: location and time, where GPS receivers receive and calculate time and position
    on earth
  id: totrans-1461
  prefs: []
  type: TYPE_NORMAL
  zh: 位置和时间，在这里GPS接收机接收并计算时间和位置
- en: after applying some corrections for environmental factors and time dilation.
    Remember,
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用一些校正措施后，以纠正环境因素和时间膨胀。记住，
- en: time runs slightly faster on GPS satellites than objects on the earth’s surface
    due to
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: GPS卫星上的时间略快于地球表面上的物体，因为由于
- en: relativity. Other relativity-related effects include time dilation, gravitational
    frequency shift, and eccentricity effects. All these errors are handled, and many
    other corrections are made before an accurate time is displayed on the GPS receiver.
    While the GPS as a
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: 相对论。其他与相对论相关的效应包括时间膨胀，引力频率变化和偏心效应。所有这些错误都会被处理，并在准确时间显示在GPS接收器上之前进行许多其他的修正。虽然GPS作为一个
- en: source of precise time is highly accurate, the inherent latency introduced even
    after the existence of correct and accurate time at the GPS receiver in the network
    can lead to drift and skew of clocks over time. There is a need to introduce some
    clock synchronization
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 精确的时间来源是非常准确的，即使GPS接收器中存在完全正确和准确的时间，网络中引入的固有延迟随着时间的推移可能导致时钟的漂移和偏斜。有必要引入一些时钟同步
- en: algorithms to address this limitation.
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: 算法来解决这个限制。
- en: A combination of atomic clocks and GPS is used in Google’s spanner (Google’s
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: Google的spanner（Google的
- en: globally distributed database) for handling timing uncertainties.
  id: totrans-1468
  prefs: []
  type: TYPE_NORMAL
  zh: 具有处理时间不确定性的全球分布式数据库）。
- en: However, note that even with all the efforts, the clocks cannot be perfectly
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，请注意，即使付出了所有努力，时钟也不能完美
- en: synchronized, which is good enough for most applications. However, these very
    accurate
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: 同步，这对于大多数应用程序来说已经足够了。但是，这些非常准确的
- en: clocks are still not enough to capture the causality relationship between events
    in a
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: 时钟仍不足以捕捉分布式系统中事件之间的因果关系。
- en: distributed system. The causality relationship between events and the fundamental
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。事件之间的因果关系和基本
- en: monotonicity property can be accurately captured by logical clocks.
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑时钟可以准确捕捉单调性属性。
- en: '44'
  id: totrans-1474
  prefs: []
  type: TYPE_NORMAL
  zh: '44'
- en: Chapter 1 IntroduCtIon
  id: totrans-1475
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章 介绍
- en: In distributed systems, even if each process has a local clock and is synchronized
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中，即使每个进程都有一个本地时钟并且同步
- en: with some global clock source, there is still a chance that each local processor
    would see the time differently. The clocks can drift over time, the processors
    can experience bugs, or there can be an inherent drift, for example, quartz clocks
    or GPS systems, making it
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一些全局时钟源，仍然存在每个本地处理器可能看到不同时间的可能性。时钟可以随着时间漂移，处理器可能会遇到bug，或者可能存在固有漂移，例如石英时钟或GPS系统，使
- en: challenging to handle time in a distributed system.
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中处理时间是具有挑战性的。
- en: Imagine a distributed system with some nodes in the orbit and some in other
  id: totrans-1479
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个分布式系统，其中一些节点位于轨道上，另一些节点位于其他地方
- en: geographical locations on earth, and they all agree to use UTC. The physical
    clocks in
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: 地理位置，并且他们都同意使用UTC。物理时钟中
- en: satellites or ISS will run at a different rate, and skew is inevitable. The
    core limitation in depending on physical clocks is that even if trying to synchronize
    them perfectly,
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: 卫星或ISS会以不同的速度运行，并且偏差是不可避免的。依赖物理时钟的核心局限性在于，即使试图完美同步它们，
- en: timestamps will be slightly apart. However, these physical clocks cannot (should
    not)
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳会稍微有所不同。但是，这些物理时钟不能（不应该）
- en: be used to establish the order of events in a distributed system because it
    is difficult to accurately find out the global order of events based on timestamps
    in different nodes.
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于建立分布式系统中事件顺序的原因是很难准确找到基于不同节点时间戳的全局事件顺序。
- en: Physical clocks are not very suitable for distributed systems because they can
  id: totrans-1484
  prefs: []
  type: TYPE_NORMAL
  zh: 物理时钟并不非常适合分布式系统，因为它们可能会
- en: drift apart. Even with one universal source, such as the atomic clock through
    NTP,
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: 远离。即使有一个统一的源，比如通过NTP的原子钟，
- en: they can still drift and desynchronize over time with the source. Even a difference
    of a
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
  zh: 他们还可能随着时间偏离和脱步源。即使差异为一个
- en: second can sometimes cause a big issue. In addition, there can be software bugs
    in the
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: 秒有时可能会造成大问题。此外，软件中可能存在bug
- en: implementation that can cause unintentional consequences. For example, let’s
    look at
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会导致意外后果的实现。例如，让我们看看
- en: a famous bug, the leap second bug that is a cause of significant disruption
    of Internet
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: 一个著名的bug是跳秒bug，这是导致互联网显著中断的原因。
- en: services.
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: 服务。
- en: '**UTC Time**'
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: '**UTC时间**'
- en: UTC time is a time standard used around the world. There are two sources of
    time that
  id: totrans-1492
  prefs: []
  type: TYPE_NORMAL
  zh: UTC时间是全球使用的时间标准。时间有两个来源
- en: 'are used to make up coordinated universal time (UTC):'
  id: totrans-1493
  prefs: []
  type: TYPE_NORMAL
  zh: 用于组成协调世界时（UTC）的原子钟和GPS：
- en: • International atomic time (TAI)
  id: totrans-1494
  prefs: []
  type: TYPE_NORMAL
  zh: •国际原子时间（TAI）
- en: • TAI is based on around 400 atomic clocks around the world. A
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: •TAI基于全球约400台原子钟。一个
- en: combined and weighted output from all these atomic clocks is
  id: totrans-1496
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些原子钟的组合和加权输出
- en: produced. This is extremely accurate where they only deviate one
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: 产生。这是极其准确的，只有一次偏差
- en: second in around 100 million years!
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: 大约在1亿年后！
- en: • Astronomical time
  id: totrans-1499
  prefs: []
  type: TYPE_NORMAL
  zh: • 天文时间
- en: • This time is based on astronomical observations, that is, the
  id: totrans-1500
  prefs: []
  type: TYPE_NORMAL
  zh: • 这个时间是基于天文观测，也就是，
- en: rotation of the Earth.
  id: totrans-1501
  prefs: []
  type: TYPE_NORMAL
  zh: 地球自转
- en: '45'
  id: totrans-1502
  prefs: []
  type: TYPE_NORMAL
  zh: '45'
- en: Chapter 1 IntroduCtIon
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍性
- en: While TAI is highly accurate, it doesn’t consider the Earth’s rotation, that
    is, the
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管国际原子时非常精确，但它不考虑地球的自转，也就是
- en: astronomically observed time that determines the true length of the day. Earth’s
    rotation is not constant. It is occasionally faster and is slowing down overall.
    Therefore, days are not exactly 24 hours. The impact on Earth’s rotation is due
    to celestial bodies such as
  id: totrans-1505
  prefs: []
  type: TYPE_NORMAL
  zh: 天文观测的时间决定了一天的真实长度。地球的自转不是恒定的。它偶尔会加快，总体上却在减慢。因此，一天不完全是24小时。地球自转的影响是由宇宙体（比如
- en: the moon, tides, and other environmental factors. Therefore, UTC is kept in
    constant
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: 月亮、潮汐和其他环境因素。因此，协调世界时保持在不断
- en: comparison with the astronomical time, and any difference is added to UTC. This
  id: totrans-1507
  prefs: []
  type: TYPE_NORMAL
  zh: 与天文时间进行比较，并将任何差异添加到UTC。这
- en: difference is added in the form of leap second; before the difference between
    TAI and
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
  zh: 差别是以跳秒的形式加入；在国际原子时和
- en: astronomical time reaches 0.9, a leap second is added to the UTC. This is the
    practice
  id: totrans-1509
  prefs: []
  type: TYPE_NORMAL
  zh: 天文时间达到0.9时，会向UTC添加一个跳秒。这是一种惯例
- en: since 1972\.
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: 自1972年以来。
- en: OK, this seems like a reasonable solution to keep both times synced; however,
  id: totrans-1511
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这似乎是一个合理的解决方案来保持两个时间同步；然而
- en: computers don’t seem to handle this situation well. Unix systems use Unix time
    (epoch),
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机似乎无法很好地处理这种情况。Unix系统使用Unix时间（纪元），
- en: simply the number of seconds elapsed since January 1, 1970\. When a leap second
    is
  id: totrans-1513
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地说，自1970年1月1日以来经过的秒数。当加入一个跳秒时
- en: 'added, this is how the clock looks like: in a normal case, it is observed that
    after 23:59:59, there is 00:00:00\. However, adding a leap second seems as if
    after 23:59:59, there is'
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
  zh: 添加，时钟看起来像这样：在正常情况下，观察到23:59:59之后，出现了00:00:00。然而，加入一个跳秒似乎意味着23:59:59之后有
- en: 23:59:60 and then 00:00:00\. In other words, 23:59:59 happens twice. When Unix
    time
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
  zh: 23:59:60然后是00:00:00。换句话说，23:59:59发生两次。当Unix时间
- en: deals with this addition of an extra second, it can produce arbitrary behavior.
    In the past, when a leap second is added, servers across the Internet experienced
    issues and services
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: 处理额外增加的一秒会导致任意行为。过去，当加入一个跳秒时，整个互联网上的服务器都出现了问题，并且服务
- en: as critical as airline booking systems were disrupted.
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
  zh: 此举至关重要，因为航空公司预订系统受到了干扰。
- en: A technique called "leap smear" has been developed, which allows for the gradual
    addition of a few milliseconds over a day to address this issue of sudden addition
    and
  id: totrans-1518
  prefs: []
  type: TYPE_NORMAL
  zh: 已经开发了一种称为“跳秒涂抹”的技术，可以在一天内逐渐增加几毫秒，以解决这种突然增加和
- en: problem associated with this sudden one-second additional.
  id: totrans-1519
  prefs: []
  type: TYPE_NORMAL
  zh: 与此突然增加一个秒的问题。
- en: OK, so far, we have seen that UTC and astronomical time are synced by adding
    a leap
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，到目前为止，我们已经看到UTC和天文时间通过增加一个跳秒同步。
- en: second. With the "leap second smear" technique, we can gradually add a leap
    second over time, which alleviates some of the issues associated with sudden additional
    leap
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
  zh: 秒。通过“跳秒涂抹”技术，我们可以逐渐增加一个跳秒，从而缓解一些突然额外的跳秒
- en: second. There are also calls to abolish this ritual altogether. However, so
    far, we see
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 秒。也有呼吁要彻底废除这一传统。然而，到目前为止，我们认为
- en: adding a leap second as a reasonable solution, and it seems to work somewhat
    OK. We
  id: totrans-1523
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个跳秒是一个合理的解决方案，似乎运行得还算顺利。我们
- en: just add a leap second when the Earth’s rotation slows down, but what if the
    Earth is
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: 当地球自转减慢时仅仅添加一个跳秒，但是如果地球
- en: spinning faster? In 2020, the Earth indeed spun faster, during the pandemic,
    for whatever reason. Now the question is, do we remove one second from UTC? In
    other words,
  id: totrans-1525
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转得更快？在2020年，地球确实在疫情期间旋转得更快，原因不明。现在的问题是，我们要从世界协调时间（UTC）中删除一秒吗？换句话说，
- en: introduce the negative leap second! This situation can pose some more challenges
    –
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍负跳秒！这种情况可能会带来一些更多的挑战 -
- en: perhaps even more demanding to address as compared to adding a leap second.
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
  zh: 也许甚至要比加入一个跳秒更棘手。
- en: The question is, what to do about this, ignore this? What algorithm can help
    to
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，怎么办，应该忽略吗？有什么算法可以帮助解决
- en: remove one second and introduce a negative leap second?
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一秒并引入负跳秒？
- en: So far, it is suggested that simply skip 23:59:59, that is, go from 23:59:58
    to 00:00:00
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，建议的是简单地跳过23:59:59，也就是，从23:59:58跳到00:00:00
- en: directly. It is expected that this is easier to deal with as compared to adding
    a leap
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
  zh: 直接。预计这比添加一个闰年更容易
- en: '46'
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: '46'
- en: Chapter 1 IntroduCtIon
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: second. Perhaps, a solution is unnecessary because we may ignore the Earth spinning
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: 第二。也许，解决方案是不必要的，因为我们可以忽略地球的自转
- en: faster or slower altogether and abolish the leap second adjustment practice,
    either
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: 全部变快或变慢，彻底废除闰秒调整的做法，或者
- en: negative or positive. It is not ideal, but we might do that to avoid issues
    and ambiguity associated with handling leap seconds, especially adding leap seconds!
    At the time of
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: 负或正。这不是理想的，但为了避免处理闰秒的问题和模棱两可，我们可能会这样做！在
- en: writing, this is an open question.
  id: totrans-1537
  prefs: []
  type: TYPE_NORMAL
  zh: 写作，这是一个开放的问题。
- en: 'Some more info are found her[e: https://fanf.dreamwidth.org/133823.html](https://fanf.dreamwidth.org/133823.html)'
  id: totrans-1538
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些信息在这里找到：[https://fanf.dreamwidth.org/133823.html](https://fanf.dreamwidth.org/133823.html)
- en: (negative leap second) and [www.eecis.udel.edu/~mills/leap.html](https://www.eecis.udel.edu/~mills/leap.html).
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: （负闰秒）和[www.eecis.udel.edu/~mills/leap.html](https://www.eecis.udel.edu/~mills/leap.html)。
- en: To avoid limitations and problems associated with physical clocks and
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免与物理时钟相关的限制和问题，并
- en: synchronization, for distributed systems, we can use logical clocks, which have
    no
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: 同步，对于分布式系统，我们可以使用逻辑时钟，它没有
- en: correlation with physical clocks but are a way to order the events in a distributed
    system.
  id: totrans-1542
  prefs: []
  type: TYPE_NORMAL
  zh: 与物理时钟相关联，但是可以对分布式系统中的事件进行排序的一种方式。
- en: Although, as we have seen, ordering of events and a causal relationship is an
    essential
  id: totrans-1543
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管，正如我们所见，事件的排序和因果关系是一个重要的
- en: requirement in distributed systems, logical clocks play a vital role in ensuring
    this in
  id: totrans-1544
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式系统中的要求，逻辑钟在确保这一点中起着至关重要的作用
- en: distributed systems.
  id: totrans-1545
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统。
- en: From a distributed system point of view, we learned earlier that the notion
    of global
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: 从分布式系统的角度来看，我们之前学到的全局概念
- en: state is very important, which allows us to observe the state of a distributed
    system
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
  zh: 状态非常重要，这使我们能够观察到分布系统的状态
- en: and helps to snapshot or checkpoint. Thus, time plays a vital role here because
    if time
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: 并且有助于快照或检查点。因此，时间在这里起着重要的作用，因为如果时间
- en: is not uniform across the system (each processor running at a different time),
    and we
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统中不均匀（每个处理器以不同的时间运行），而且我们
- en: try to read states from all different processors and links in a system, it will
    result in an inconsistent state.
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从系统中的所有不同处理器和链接中读取状态，结果将是不一致的状态。
- en: '**Types of Physical Clocks**'
  id: totrans-1551
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理时钟的类型**'
- en: 'Physical clocks can be divided into two categories:'
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: 物理时钟分为两类：
- en: 1\. Time-of-day clocks
  id: totrans-1553
  prefs: []
  type: TYPE_NORMAL
  zh: 1。天时钟
- en: 2\. Monotonic clocks
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: 2。单调时钟
- en: Time-of-day clocks are characterized by the representation of time since a fixed
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: 天时钟的特点是自固定时间以来的时间表示
- en: point in time. For example, Unix time that is calculated from January 1, 1970
    is an
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: 时间点进行同步进行调整。例如，Unix时间是从1970年1月1日计算的
- en: example of a time-of-day clock. The time can be adjusted via synchronization
    to a
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，每天的时间表钟的一个例子。时间可以通过与一个
- en: time source and can move backward or forward. However, moving the time backward
  id: totrans-1558
  prefs: []
  type: TYPE_NORMAL
  zh: 时间来源，并且可以向后或向前移动。然而，将时间向后移动
- en: is not a good idea. Such a scenario can lead to situations where, for example,
    it would
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: 不是一个好主意。这种情况可能导致，例如，会
- en: appear that a message is received before it was sent. This issue can happen
    due to the
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来一条消息在发送之前收到。这个问题可能是由于
- en: timestamp being adjusted and moving backward in time due to adjustments made
    by
  id: totrans-1561
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳是否被调整并由于由
- en: the synchronization algorithms, for example, NTP.
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
  zh: 同步算法，例如，NTP。
- en: As the time always increases, time shouldn’t go backward; we need monotonic
  id: totrans-1563
  prefs: []
  type: TYPE_NORMAL
  zh: 由于时间总是在增加，时间不应该后退；我们需要单调
- en: clocks to handle such scenarios.
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
  zh: 时钟来处理这样的情况。
- en: '47'
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
  zh: '47'
- en: Chapter 1 IntroduCtIon
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章介绍
- en: With physical clocks, it is almost impossible to provide causality. Even if
    time
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
  zh: 使用物理时钟，几乎不可能提供因果关系。即使时间
- en: synchronization services are used, there is still a chance that the timestamp
    of one
  id: totrans-1568
  prefs: []
  type: TYPE_NORMAL
  zh: 使用同步服务时，仍然存在一种可能性，即一个
- en: process differs from another just enough to impact the order of events adversely.
  id: totrans-1569
  prefs: []
  type: TYPE_NORMAL
  zh: 进程不同的足以影响事件顺序的程度。
- en: Thus, the ordering of events is a fundamental requirement in distributed systems.
    To
  id: totrans-1570
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，事件的排序是分布式系统中的一个基本要求。要
- en: fully understand the nature of this ordering requirement, we use a formal notion
    of
  id: totrans-1571
  prefs: []
  type: TYPE_NORMAL
  zh: 完全理解这种排序要求的性质，我们使用一个正式的概念
- en: something called "happens-before relationship."
  id: totrans-1572
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个叫做“发生关系”的东西。
- en: Just before we introduce the happens-before relationship and causality, let
    us clarify
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们介绍happens-before关系和因果关系之前，让我们澄清一下
