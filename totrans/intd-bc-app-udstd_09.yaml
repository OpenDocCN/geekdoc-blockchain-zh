- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022J. T. GeorgeIntroducing Blockchain Applications[https://doi.org/10.1007/978-1-4842-7480-4_9](https://doi.org/10.1007/978-1-4842-7480-4_9)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家许可给APress Media, LLC，隶属于Springer Nature 2022J. T. George介绍区块链应用[https://doi.org/10.1007/978-1-4842-7480-4_9](https://doi.org/10.1007/978-1-4842-7480-4_9)
- en: 9. Real-Time Systems
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9. 实时系统
- en: Joseph Thachil George^([1](#Aff2)  )(1)Rome, Italy
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Joseph Thachil George^([1](#Aff2)  )(1)罗马，意大利
- en: A distributed real-time system (DRTS) is made up of self-contained computing
    nodes that are linked together by a real-time network. These nodes work together
    to achieve a common goal within predetermined time limits. For a variety of reasons,
    distributed real-time systems are required.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式实时系统（DRTS）由通过实时网络连接在一起的自包含计算节点组成。这些节点共同努力在预定的时间限制内实现共同的目标。由于各种原因，需要分布式实时系统。
- en: Any real-time computer control system must be able to measure the time between
    events in real time and react to a stimulus in a predetermined real-time interval.
    This chapter discusses some of the implications of including this real-time metric
    in real-time distributed systems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 任何实时计算机控制系统必须能够实时测量事件之间的时间，并在预定的实时间隔内对刺激做出反应。本章讨论了将这个实时度量包含在实时分布式系统中的一些影响。
- en: The term “real-time system” refers to a system that is subjected to real-time
    constraints, i.e., the response must be guaranteed within a certain time restriction,
    or the system must satisfy a specific deadline. Examples include flight control
    systems, real-time monitoring systems, and so on.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “实时系统”一词指的是受实时约束的系统，即响应必须在一定时间限制内得到保证，或者系统必须满足特定的截止日期。例子包括飞行控制系统、实时监控系统等。
- en: 9.1 Understanding Real-Time Systems
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.1 理解实时系统
- en: Real-time systems with timing constraints are characterized as either hard or
    soft. *Hard real-time systems* are incapable of missing a deadline. The implications
    of missing the deadline might be disastrous. If tardiness increases, the utility
    of a hard real-time system’s result declines abruptly, and it may even become
    negative. Tardiness refers to how late a real-time system does a task in comparison
    to its deadline. One example of a hard real-time system is a flight controller
    system.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 具有时间约束的实时系统分为硬实时系统和软实时系统两种。*硬实时系统*不能错过截止日期。错过截止日期的后果可能是灾难性的。如果延迟增加，硬实时系统结果的效用会急剧下降，甚至可能变为负值。延迟是指实时系统完成任务相对于截止日期的迟延时间。飞行控制系统就是硬实时系统的一个例子。
- en: '*Soft real-time systems* *,* on the other hand, can occasionally miss deadlines
    with a low enough chance to be acceptable. There are no negative consequences
    to missing the deadline. With increasing delay, the utility of a soft real-time
    system’s result rapidly reduces. Telephone switches are an example of a soft real-time
    system.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*软实时系统*，另一方面，偶尔可能会错过截止时间，但错过的概率足够低以至于是可以接受的。错过截止时间没有负面后果。随着延迟增加，软实时系统结果的效用会迅速降低。电话交换机是软实时系统的一个例子。'
- en: 9.2 Real-Time System Reference Model
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.2 实时系统参考模型
- en: 'Three components characterize this reference model:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个参考模型由三个组成部分特征化：
- en: '**A** **workload model** **:** This identifies the applications that the system
    supports.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个工作量模型：** 识别系统支持的应用程序。'
- en: '**A** **resource model** **:** This describes the resources that the program
    has access to.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源模型：** 描述程序可以访问的资源。'
- en: '**Algorithms:** They describe how the software application will use resources.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**算法：** 描述软件应用程序如何使用资源。'
- en: 'Real-time system terms include:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 实时系统术语包括：
- en: '**Job:** A tiny task that can be assigned to a processor and may or may not
    necessitate the use of resources.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务：** 一个可以分配给处理器的小任务，可能需要使用资源，也可能不需要。'
- en: '**Task:** A collection of related jobs that work together to offer system functionality.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务：** 一组相关的任务，共同工作以提供系统功能。'
- en: '**A** **work’s release time job** **:** The point at which the job is ready
    to be executed.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个工作的发布时间任务：** 任务准备执行的时间点。'
- en: '**Job execution time** **:** This is the time it takes for a job to complete
    its execution.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务执行时间：** 任务完成执行所需的时间。'
- en: '**Job deadline** **:** This is the deadline by which a job must be completed.
    There are two types of deadlines: absolute and relative deadlines. (A job’s **relative
    deadline** is the maximum permissible response time. A job’s **absolute deadline**
    is the sum of its relative deadline and its release time.)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务截止时间：** 这是任务必须完成的最后期限。有两种类型的截止时间：绝对截止时间和相对截止时间。（任务的**相对截止时间**是允许的最长响应时间。任务的**绝对截止时间**是其相对截止时间和发布时间的总和。）'
- en: '**Job response time** **:** This is the time from when the time a job is released
    to the time it is completed.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务响应时间：** 这是从任务发布到任务完成的时间。'
- en: '**Active resources** **:** Another name for processors, these are required
    for the successful completion of a task. In order to execute and progress toward
    completion, a job requires one or more processors. Computers and transmission
    links are two examples.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动资源：** 处理器的另一个名称，这些资源对于任务成功完成是必需的。为了执行并向完成进展，一个任务需要一个或多个处理器。计算机和传输链路是两个例子。'
- en: '**Passive resources** **:** During the execution of a job, a resource may or
    may not be required. Memory and mutex are two examples. Also called resources.
    If two resources may be used interchangeably, they are identical; otherwise, they
    are heterogeneous.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**被动资源** **:** 在作业执行期间，可能需要或不需要资源。内存和互斥量是两个例子。也称为资源。如果两个资源可以互换使用，则它们是相同的；否则，它们是异构的。'
- en: Figure [9-1](#Fig1) depicts the key distinctions between hard and soft real-time
    systems. Hard real-time systems have response time requirements of milliseconds
    or less, which if not reached, can result in disaster. Soft real-time systems,
    on the other hand, have higher and less rigorous reaction times. Peak-load performance
    in a harsh real-time system must be expected and not breach specified deadlines.
    A degraded function at a rarely occurring peak load can be accepted in a soft
    real-time system. In all circumstances, a hard real-time system must remain synchronized
    with the state of the environment.![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig1_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig1_HTML.jpg)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [9-1](#Fig1) 描述了硬实时系统与软实时系统之间的关键区别。硬实时系统具有毫秒或更短的响应时间要求，如果未达到这些要求，可能会导致灾难。另一方面，软实时系统具有更高且不太严格的反应时间。在严格实时系统中，必须预期峰值负载性能，并且不能违反指定的截止时间。在软实时系统中，可以接受在罕见的峰值负载时出现降级功能。在所有情况下，硬实时系统必须与环境状态保持同步。![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig1_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig1_HTML.jpg)
- en: Figure 9-1
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9-1
- en: Hard real-time versus soft real-time systems
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 硬实时与软实时系统
- en: 9.2.1 Fail-Safe vs. Fail-Operational Systems
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.2.1 故障安全 vs. 故障操作系统
- en: If there is a good state in the environment that can be reached in the event
    of a system failure, the system is considered fail-safe. One example is a train
    signaling system.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在系统故障时可以达到良好状态，则系统被认为是故障安全的。一个例子是火车信号系统。
- en: High error-detection coverage is required in a fail-safe application. The application’s
    failure safety is a feature. A system must be fail-operational if the application
    does not provide for the identification of a safe state, and such systems, such
    as a flight control systems on airplanes, must remain operational in the event
    of a failure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障安全应用程序中需要高错误检测覆盖率。应用程序的故障安全性是一个特征。如果应用程序没有提供安全状态的识别，则系统必须是故障操作的，并且在发生故障时，这些系统（例如飞机上的飞行控制系统）必须保持运行。
- en: 9.2.2 Guaranteed Timeliness vs. Best Effort Systems
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.2.2 保证及时性 vs. 最佳尽力系统
- en: Even if there is a malfunction, the computer system must deliver a minimal level
    of service.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 即使存在故障，计算机系统也必须提供最低水平的服务。
- en: 9.3 RT System Categorization
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.3 实时系统分类
- en: 'On the basis of the requirements from the outside, consider these categories:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 根据外部需求，考虑以下类别：
- en: Soft real-time vs. hard real-time
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时软件与硬实时软件
- en: Fail-safe vs. fail-operational
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故障安全 vs. 故障操作
- en: Timeliness guaranteed vs. best effort
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保证及时性 vs. 最佳尽力
- en: Adequacy of resources
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源的充足性
- en: Time triggered vs. event triggered
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于时间的触发与基于事件的触发
- en: If the temporal accuracy can be proved by analytical reasoning (within the stipulated
    load- and fault-hypotheses), a system implementation guarantees assured timeliness.
    If such an intellectual case for temporal correctness cannot be presented, a system
    implementation is best effort.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可以通过分析推理（在规定的负载和故障假设范围内）证明时间精确性，则系统实施将保证及时性。如果无法提出时间正确性的知识性论据，则系统实施将尽力而为。
- en: Even within the defined load- and fault assumptions, the temporal validation
    of best effort systems relies on probabilistic considerations. Guaranteed timeliness
    should be the foundation of hard real-time systems.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在定义的负载和故障假设范围内，对于最佳努力系统的时间验证也依赖于概率考虑。保证及时性应该是硬实时系统的基础。
- en: 9.3.1 Resource Adequacy
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3.1 资源充足
- en: A system’s processing resources must be capable of managing the stated peak
    load and fault scenario if it is to deliver assured timeliness. There have been
    several applications in the past where resource adequacy was thought to be prohibitively
    expensive.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个系统的处理资源必须能够处理所述的最大负载和故障场景，才能保证及时性。过去有几种应用程序认为资源充足是不可承受的昂贵开支。
- en: Because hardware costs are falling, implementing resource-appropriate designs
    is becoming more cost-effective. In challenging real-time applications, resource-adequate
    designs are the only option.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于硬件成本在下降，实施资源适当的设计变得更加具有成本效益。在具有挑战性的实时应用中，资源充足的设计是唯一的选择。
- en: 9.3.2 Predictability in Rare Event Situations
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3.2 罕见事件情况下的可预测性
- en: A rare event is a significant occurrence that seldomly occurs throughout the
    course of a system’s lifespan, such as a burst pipe in a nuclear reactor. A uncommon
    event can result in a slew of associated service requests (e.g., an alarm shower).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 罕见事件是系统寿命中极少发生的重要事件，比如核反应堆中的爆管。罕见事件可能会导致一系列相关的服务请求（例如，报警器激活）。
- en: The value of a system in a number of applications is dependent on predictable
    performance in uncommon event scenarios, such as a flight control system. Workload
    testing, in most circumstances, will not address the uncommon occurrence scenario.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多应用程序中，系统的价值取决于在罕见事件场景下的可预测性能，例如飞行控制系统。大多数情况下，工作负载测试不会解决罕见事件场景。
- en: 9.3.3 The State and Event
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3.3 状态和事件
- en: '![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig2_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig2_HTML.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig2_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig2_HTML.jpg)'
- en: Figure 9-2
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9-2
- en: State event
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 状态事件
- en: A *state* is a condition that lasts a specific amount of time in real time,
    such as a part of the timeline. An instantaneous occurrence is referred to as
    an *event*. See Figure [9-2](#Fig2).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*状态* 是实时中持续一定时间的条件，例如时间轴的一部分。瞬时发生称为 *事件*。见图 [9-2](#Fig2)。'
- en: State information describes the characteristics of states at the observation
    site (itself an event). The change in the qualities of the states immediately
    before and after the occurrence of the event, as well as an estimate of the moment
    in time when the event occurred, is provided by event information.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 状态信息描述了观察站点（本身是一个事件）的状态特征。提供了事件信息，即事件发生前后状态特性的变化，以及事件发生的时间估计。
- en: 9.3.4 Time Triggered vs. Event Triggered Systems
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3.4 时间触发与事件触发系统
- en: The control signals in a real-time system are said to be event triggered (ET)
    if they are obtained purely from the occurrence of events, such as the completion
    of a task, the reception of a message, or the incidence of an external interrupt.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 实时系统中的控制信号如果纯粹是从事件发生（例如任务完成、消息接收或外部中断发生）中获取的，则称为事件触发（ET）的。
- en: A real-time system is time triggered (TT) if the control indicators, such as
    message sending and receiving, are generated purely from the development of a
    (global) notion of time.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果控制指示器（例如消息发送和接收）纯粹是从时间（全局时间）的发展中生成的，则实时系统是时间触发（TT）的。
- en: 9.4 Temporal Requirements
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.4 时间要求
- en: For real-time systems, the data pieces that the operator sees must be accurate
    in terms of time. The greatest real-time gap between a stimulus and a reaction
    must be determined and limited. Even though it’s a rare occurrence, the temporal
    behavior should also be predictable. See Figure [9-3](#Fig3).![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig3_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig3_HTML.jpg)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于实时系统，操作员看到的数据片段在时间上必须准确。必须确定和限制刺激和反应之间的最大实时间隙。尽管这是一种罕见的情况，但时间行为也应该是可预测的。请参见图[9-3](#Fig3)。![../images/520777_1_En_9_Chapter/520777_1_En_9_Fig3_HTML.jpg](../images/520777_1_En_9_Chapter/520777_1_En_9_Fig3_HTML.jpg)
- en: Figure 9-3
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图9-3
- en: Temporal parameters associated with real-time data
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 与实时数据相关的时间参数
- en: 9.5 Classification of the Scheduling Algorithm
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.5 调度算法的分类
- en: 9.5.1 Hard Real-Time and Soft Real-Time Scheduling
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.1 硬实时和软实时调度
- en: In hard RT systems  , the deadline of critical tasks must be guaranteed in advance
    in all possible ways and with anticipatable scenarios. This requires careful design
    of the system resources. If you are designing a soft real-time system instead,
    you can accept a low-cost scheduler design.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在硬实时系统中，必须通过各种可能的方式提前保证关键任务的截止日期，并考虑可预见的情况。这需要仔细设计系统资源。如果您正在设计软实时系统，您可以接受低成本的调度器设计。
- en: 9.5.2 Dynamic and Static Schedulers
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.2 动态和静态调度程序
- en: A scheduler is called dynamic (online) if it bases its running decisions on
    the basis of current requests. Dynamic schedulers  are therefore flexible and
    adapt with the evolution of the system. A scheduler is called static (pre-runtime)
    if decisions are made before its scheduler is running and cannot be changed. This
    requires a profound and complete knowledge of the task to be performed (maximum
    execution time, priorities, mutual exclusion constraints, deadlines, etc.). Such
    a scheduler has a low cost in phase execution precisely because no decision calculations
    are made.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果调度器根据当前请求进行运行决策，则称其为动态（在线）调度器。因此，动态调度器具有灵活性，并随着系统的演变而适应。如果在调度器运行之前就做出决定并且不能更改，则称调度器为静态（预运行）。这需要对要执行的任务有深入完整的了解（最大执行时间、优先级、互斥约束、截止时间等）。这样的调度器在执行阶段的成本低，因为不需要进行决策计算。
- en: 9.5.3 Scheduler With/Without Preemption
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.3 具有/不具有抢占的调度器
- en: In schedulers with preemption, a task can be interrupted following the request
    of a higher priority task. However, the preemption is authorized if some assertions
    are not violated (see mutual exclusion). In non-preemptive schedulers, tasks are
    not interrupted until their completion.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有抢占的调度器中，任务可以在更高优先级任务的请求下被中断。然而，只有在不违反某些断言的情况下（见互斥）才会授权抢占。在非抢占调度器中，任务直到完成才不会被中断。
- en: 9.5.4 Static Scheduling
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.4 静态调度
- en: In static scheduling  , the order of execution of tasks is calculated offline.
    Static scheduling is typical in time-triggered applications and with periodic
    tasks.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在静态调度中，任务的执行顺序是离线计算的。静态调度在时间触发应用程序和周期性任务中很典型。
- en: 9.5.5 Dynamic Scheduling
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.5 动态调度
- en: Dynamic schedulers  determine which task is to be executed when an event arrives,
    based on the current state of the system. The various dynamic scheduling algorithms
    differ according to the assumptions that are made.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 动态调度器根据系统当前状态确定事件到达时要执行的任务。不同的动态调度算法根据所做的假设而不同。
- en: 9.5.6 Independent Task Scheduling
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.5.6 独立任务调度
- en: This category assumes that the tasks do not have any dependencies (e.g. mutual
    exclusion).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这一类别假设任务没有任何依赖关系（例如互斥）。
- en: 9.6 Review Questions
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.6 复习问题
- en: '1.'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: “A distributed real-time system (DRTS) is made up of self-contained computational
    nodes linked by a real-time network.” Is this statement correct or incorrect?
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “分布式实时系统（DRTS）由实时网络连接的独立计算节点组成。”这个说法正确吗？
- en: 2.Which of the following describes a hard real-time system?
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2.以下哪项描述了硬实时系统？
- en: a.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: Can miss its deadline on a regular basis with a low possibility.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可能会定期错过截止时间，但概率很低。
- en: b.
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: Can miss its deadline from time to time, with a reasonable chance of doing so.
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 偶尔会错过截止时间，但有合理的机会这样做。
- en: c.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: Can occasionally miss its deadline due to some unacceptably low probability,
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于某些不可接受的低概率，偶尔会错过其截止时间，
- en: d.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: Can miss its deadline from time to time, but with a low probability.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有时会错过截止日期，但概率很低。
- en: 3.Which of the following statements is correct for *state*?
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3.关于*状态*的以下哪种说法是正确的？
- en: a.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: A state is a condition that lasts for a certain amount of time in real time.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态是在实时中持续一段时间的状态。
- en: b.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: A state is a condition that lasts for a non-real time span.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态是持续一段非实时时间的条件。
- en: c.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: A state is a condition that does not last for a period of time.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态是不持续一段时间的状态。
- en: d.
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: A state is an unpredictably changing condition that lasts for a period of time.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态是不可预测地变化的条件，持续一段时间。
- en: 4.Which of the following statements about an *event* is correct?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4.关于*事件*的以下哪种说法是正确的？
- en: a.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: An event is a happening that occurs in a particular state.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事件是发生在特定状态下的事件。
- en: b.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: An event is a one-time non-occurrence.
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事件是一次性的非发生。
- en: c.
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: An event is a one-time occurrence.
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事件是一次发生。
- en: d.
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: All of these.
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有这些。
- en: '5.Three pieces define a reference model:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5.三个部分定义了一个参考模型：
- en: a.
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: Workload model
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工作负载模型
- en: b.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: Resource model
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 资源模型
- en: c.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: Algorithm
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 算法
- en: Is this statement correct or incorrect?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这个说法正确吗？
- en: 9.7 Review Answers
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.7 复习答案
- en: '1.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Answer: Correct. A distributed real-time system (DRTS) is made up of self-contained
    computational nodes linked by a real-time network and consists of autonomous computing
    nodes connected by a real-time network. The nodes in such a system cooperate to
    achieve a common goal within specified deadlines.'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：正确。分布式实时系统（DRTS）由通过实时网络链接的自包含计算节点组成，并由实时网络连接的自主计算节点组成。这样的系统中的节点合作以在指定的截止日期内实现共同目标。
- en: '2.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Answer: D, Can miss its deadline from time to time, but with a low probability.'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：D，有时会错过截止日期，但概率很低。
- en: '3.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Answer: A, A *state* is a condition that lasts for a certain amount of time
    in real time.'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：A，*状态*是在实时中持续一段时间的条件。
- en: '4.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'Answer: C, An *event* is a one-time occurrence.'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：C，*事件*是一次发生。
- en: '5.'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: 'Answer: Correct. The main parts of the RT system model are the workload model,
    the resource model, and algorithms.'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：正确。RT系统模型的主要部分是工作负载模型、资源模型和算法。
- en: 9.8 Summary
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.8 总结
- en: This chapter explained the time management of distributed systems. In addition,
    soft real-time and hard real-time systems were discussed, which illustrate the
    reference models. In order to implement a distributed system, it is necessary
    to understand this time management system. Scheduling algorithms are also an important
    concept of distributed systems, so the next chapter explains dynamic and static
    scheduling algorithms in the distributed system.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了分布式系统的时间管理。此外，还讨论了软实时和硬实时系统，这些系统说明了参考模型。为了实现分布式系统，有必要了解这个时间管理系统。调度算法也是分布式系统的重要概念，因此下一章将解释分布式系统中的动态和静态调度算法。
