- en: Elad ElromThe Blockchain DeveloperA Practical Guide for Designing, Implementing,
    Publishing, Testing, and Securing Distributed Blockchain-based Projects![../images/475651_1_En_BookFrontmatter_Figa_HTML.png](../images/475651_1_En_BookFrontmatter_Figa_HTML.png)Elad ElromNew
    York, NY, USAISBN 978-1-4842-4846-1e-ISBN 978-1-4842-4847-8[https://doi.org/10.1007/978-1-4842-4847-8](https://doi.org/10.1007/978-1-4842-4847-8)©
    Elad Elrom 2019This work is subject to copyright. All rights are reserved by the
    Publisher, whether the whole or part of the material is concerned, specifically
    the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting,
    reproduction on microfilms or in any other physical way, and transmission or information
    storage and retrieval, electronic adaptation, computer software, or by similar
    or dissimilar methodology now known or hereafter developed.Trademarked names,
    logos, and images may appear in this book. Rather than use a trademark symbol
    with every occurrence of a trademarked name, logo, or image we use the names,
    logos, and images only in an editorial fashion and to the benefit of the trademark
    owner, with no intention of infringement of the trademark. The use in this publication
    of trade names, trademarks, service marks, and similar terms, even if they are
    not identified as such, is not to be taken as an expression of opinion as to whether
    or not they are subject to proprietary rights.While the advice and information
    in this book are believed to be true and accurate at the date of publication,
    neither the authors nor the editors nor the publisher can accept any legal responsibility
    for any errors or omissions that may be made. The publisher makes no warranty,
    express or implied, with respect to the material contained herein.Distributed
    to the book trade worldwide by Springer Science+Business Media New York, 233 Spring
    Street, 6th Floor, New York, NY 10013\. Phone 1-800-SPRINGER, fax (201) 348-4505,
    e-mail orders-ny@springer-sbm.com, or visit www.springeronline.com. Apress Media,
    LLC is a California LLC and the sole member (owner) is Springer Science + Business
    Media Finance Inc (SSBM Finance Inc). SSBM Finance Inc is a Delaware corporation.
  prefs: []
  type: TYPE_NORMAL
- en: '*I would like to dedicate this book to my children, Romi Scarlett Elrom and
    Ariel Rocco Elrom. Have solid boundaries, and don’t allow anyone to dictate what
    you cannot achieve or cannot do. I love you very much and will always be there
    for you.*'
  prefs: []
  type: TYPE_NORMAL
- en: Table of Contents
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Chapter 1:​ Blockchain Basics](475651_1_En_1_Chapter.xhtml) 1[Introduction
    to Cryptoeconomics](475651_1_En_1_Chapter.xhtml#Sec1) 2[Ig-pay Atin-lay](475651_1_En_1_Chapter.xhtml#Sec2)
    3[Blockchain Explained](475651_1_En_1_Chapter.xhtml#Sec7) 8[Blocks + Chain =​
    Blockchain](475651_1_En_1_Chapter.xhtml#Sec8) 9[Cryptomining by Cryptominers](475651_1_En_1_Chapter.xhtml#Sec12)
    13[Cryptocurrency Wallet](475651_1_En_1_Chapter.xhtml#Sec13) 13[Cryptocurrencies​
    Overload](475651_1_En_1_Chapter.xhtml#Sec14) 13[Bitcoin Digital Cash](475651_1_En_1_Chapter.xhtml#Sec15)
    14[Tokens](475651_1_En_1_Chapter.xhtml#Sec16) 15[Alternative Cryptocurrency Coins
    (Altcoins)](475651_1_En_1_Chapter.xhtml#Sec17) 15[Blockchain P2P Network](475651_1_En_1_Chapter.xhtml#Sec18)
    17[Consensus Mechanism](475651_1_En_1_Chapter.xhtml#Sec19) 18[Proof of Work, Proof
    of Stake, and Delegated Proof of Stake](475651_1_En_1_Chapter.xhtml#Sec20) 19[Mining
    Layer](475651_1_En_1_Chapter.xhtml#Sec24) 27[Propagation Layer](475651_1_En_1_Chapter.xhtml#Sec25)
    28[Semantic Layer](475651_1_En_1_Chapter.xhtml#Sec26) 28[Application Layer](475651_1_En_1_Chapter.xhtml#Sec27)
    29[Summary](475651_1_En_1_Chapter.xhtml#Sec28) 30[Chapter 2:​ Blockchain Nodes](475651_1_En_2_Chapter.xhtml)
    31[Running a Blockchain Node](475651_1_En_2_Chapter.xhtml#Sec1) 31[Create a Bitcoin
    Miner](475651_1_En_2_Chapter.xhtml#Sec2) 32[Create a NEO Bookkeeping Node](475651_1_En_2_Chapter.xhtml#Sec3)
    36[Create an EOS Block Producer](475651_1_En_2_Chapter.xhtml#Sec10) 49[Bitcoin
    Core API](475651_1_En_2_Chapter.xhtml#Sec14) 52[Serialized Blocks](475651_1_En_2_Chapter.xhtml#Sec15)
    61[Block Header](475651_1_En_2_Chapter.xhtml#Sec16) 63[Block Version](475651_1_En_2_Chapter.xhtml#Sec17)
    65[Bitcoin Wallet](475651_1_En_2_Chapter.xhtml#Sec23) 71[Summary](475651_1_En_2_Chapter.xhtml#Sec24)
    72[Chapter 3:​ Creating Your Own Blockchain](475651_1_En_3_Chapter.xhtml) 73[Creating
    a Basic P2P Network](475651_1_En_3_Chapter.xhtml#Sec1) 74[Creating Genesis Block
    and Sharing Blocks](475651_1_En_3_Chapter.xhtml#Sec2) 86[Registering Miners and
    Creating New Blocks](475651_1_En_3_Chapter.xhtml#Sec3) 94[Storing Blocks in LevelDB](475651_1_En_3_Chapter.xhtml#Sec4)
    101[Creating a Blockchain Wallet](475651_1_En_3_Chapter.xhtml#Sec5) 105[Creating
    an API](475651_1_En_3_Chapter.xhtml#Sec6) 109[Creating a Command-Line Interface](475651_1_En_3_Chapter.xhtml#Sec7)
    113[Where to Go from Here](475651_1_En_3_Chapter.xhtml#Sec8) 118[Summary](475651_1_En_3_Chapter.xhtml#Sec9)
    119[Chapter 4:​ Bitcoin Wallets and Transactions](475651_1_En_4_Chapter.xhtml)
    121[Bitcoin Core RPC Resources](475651_1_En_4_Chapter.xhtml#Sec1) 121[Bitcoin
    Wallet](475651_1_En_4_Chapter.xhtml#Sec2) 123[Create a Legacy Wallet Address and
    Retrieve Private Keys](475651_1_En_4_Chapter.xhtml#Sec3) 124[Pay to Witness a
    Public Key Hash (P2WPKH):​ SegWit Soft Fork](475651_1_En_4_Chapter.xhtml#Sec4)
    126[Elliptic Curve Digital Signature Algorithm](475651_1_En_4_Chapter.xhtml#Sec5)
    127[Transactions](475651_1_En_4_Chapter.xhtml#Sec6) 129[Simple Command](475651_1_En_4_Chapter.xhtml#Sec7)
    130[Testnet](475651_1_En_4_Chapter.xhtml#Sec8) 132[Viewing Transactions on Block
    Explorer](475651_1_En_4_Chapter.xhtml#Sec9) 134[Sending Testnet Coins via the
    Bitcoin Core Wallet GUI](475651_1_En_4_Chapter.xhtml#Sec10) 137[Generating Raw
    Transactions with One Output](475651_1_En_4_Chapter.xhtml#Sec12) 149[Transactions
    that Require Multisignature](475651_1_En_4_Chapter.xhtml#Sec13) 157[Setting Electrum
    with a Multisignature Wallet](475651_1_En_4_Chapter.xhtml#Sec14) 157[Replaceable
    Transactions and Locktime](475651_1_En_4_Chapter.xhtml#Sec15) 166[Bitcoin Colored
    Coins](475651_1_En_4_Chapter.xhtml#Sec16) 167[Sending a Transaction with OP_​RETURN](475651_1_En_4_Chapter.xhtml#Sec17)
    167[Bitcoin’s Colored Coins](475651_1_En_4_Chapter.xhtml#Sec18) 170[Summary](475651_1_En_4_Chapter.xhtml#Sec19)
    171[Chapter 5:​ Ethereum Wallets and Smart Contracts](475651_1_En_5_Chapter.xhtml)
    173[Ganache Simulated Full-Node Client](475651_1_En_5_Chapter.xhtml#Sec1) 177[Install
    Ganache](475651_1_En_5_Chapter.xhtml#Sec2) 177[Ganache CLI:​ Listen to Port](475651_1_En_5_Chapter.xhtml#Sec3)
    178[IntelliJ IDEA Plugin for Solidity](475651_1_En_5_Chapter.xhtml#Sec4) 178[Truffle
    Suite](475651_1_En_5_Chapter.xhtml#Sec5) 179[Create Your Smart Contracts](475651_1_En_5_Chapter.xhtml#Sec6)
    181[Connect Truffle to the Ganache Network](475651_1_En_5_Chapter.xhtml#Sec7)
    183[“Hello, World” Smart Contract](475651_1_En_5_Chapter.xhtml#Sec8) 184[“MD5SmartContract​”
    Smart Contract](475651_1_En_5_Chapter.xhtml#Sec9) 186[Create Truffle Migration
    Files for Your Smart Contract Deployment](475651_1_En_5_Chapter.xhtml#Sec10) 187[Compile
    Your Smart Contract with Truffle](475651_1_En_5_Chapter.xhtml#Sec11) 188[Deploy
    the Smart Contract to Your Development Network](475651_1_En_5_Chapter.xhtml#Sec12)
    189[Truffle Console](475651_1_En_5_Chapter.xhtml#Sec13) 190[Interact with Your
    Smart Contract via the Truffle CLI](475651_1_En_5_Chapter.xhtml#Sec14) 191[Compile
    with Remix](475651_1_En_5_Chapter.xhtml#Sec15) 193[Private Ethereum Blockchain
    with Geth](475651_1_En_5_Chapter.xhtml#Sec16) 195[Initialized Geth Private Blockchain](475651_1_En_5_Chapter.xhtml#Sec17)
    195[Geth Console](475651_1_En_5_Chapter.xhtml#Sec18) 197[Mine Ethereum for Your
    Private Testnet](475651_1_En_5_Chapter.xhtml#Sec19) 198[Deploy Remix to Geth](475651_1_En_5_Chapter.xhtml#Sec20)
    199[Deploy Truffle to Geth](475651_1_En_5_Chapter.xhtml#Sec21) 200[Useful Commands
    in Geth](475651_1_En_5_Chapter.xhtml#Sec22) 201[Connect the Mist Ethereum Wallet
    to Your Private Network](475651_1_En_5_Chapter.xhtml#Sec23) 202[Others to Interact
    with Your Smart Contract](475651_1_En_5_Chapter.xhtml#Sec24) 203[MetaMask](475651_1_En_5_Chapter.xhtml#Sec25)
    206[Public Testnet](475651_1_En_5_Chapter.xhtml#Sec26) 209[Syncing Blocks](475651_1_En_5_Chapter.xhtml#Sec27)
    209[Public Testnet Faucet](475651_1_En_5_Chapter.xhtml#Sec28) 210[Ethereum Mainnet](475651_1_En_5_Chapter.xhtml#Sec29)
    211[Recommended Tools for Smart Contracts](475651_1_En_5_Chapter.xhtml#Sec30)
    211[Summary](475651_1_En_5_Chapter.xhtml#Sec31) 211[Chapter 6:​ EOS.​IO Wallets
    and Smart Contracts](475651_1_En_6_Chapter.xhtml) 213[Setting Up a Testnet Environment](475651_1_En_6_Chapter.xhtml#Sec1)
    216[Install EOS.​IO](475651_1_En_6_Chapter.xhtml#Sec2) 216[Install EOSIO.​CDT](475651_1_En_6_Chapter.xhtml#Sec3)
    218[Build EOS.​IO](475651_1_En_6_Chapter.xhtml#Sec4) 220[keosd and nodeos Configuration
    Files](475651_1_En_6_Chapter.xhtml#Sec5) 220[Create and Manage a Wallet with cleos](475651_1_En_6_Chapter.xhtml#Sec6)
    221[EOS.​IO Wallets](475651_1_En_6_Chapter.xhtml#Sec7) 222[Delete and Back Up
    Wallets](475651_1_En_6_Chapter.xhtml#Sec8) 223[EOS.​IO Wallet with Custom Name](475651_1_En_6_Chapter.xhtml#Sec9)
    223[EOS.​IO:​ Open, Lock, and Unlock a Wallet](475651_1_En_6_Chapter.xhtml#Sec10)
    224[Generating EOS.​IO Keys](475651_1_En_6_Chapter.xhtml#Sec11) 224[Spin Up a
    node with nodeos](475651_1_En_6_Chapter.xhtml#Sec12) 227[Re-spin Up a Testnet
    Local node (nodeos)](475651_1_En_6_Chapter.xhtml#Sec13) 229[EOS.​IO Accounts](475651_1_En_6_Chapter.xhtml#Sec14)
    230[Wallets, Keys, and Accounts:​ Complete Commands](475651_1_En_6_Chapter.xhtml#Sec15)
    233[Custom, Single Signature (Single-Sig), and Multisignature (Multisig)](475651_1_En_6_Chapter.xhtml#Sec16)
    234[“HelloWorld” Smart Contract](475651_1_En_6_Chapter.xhtml#Sec17) 234[“HelloWorld”
    Smart Contract Accounts](475651_1_En_6_Chapter.xhtml#Sec18) 234[“HelloWorld” C++
    Code](475651_1_En_6_Chapter.xhtml#Sec19) 235[Smart Contract IDE](475651_1_En_6_Chapter.xhtml#Sec20)
    237[Compile a Contract and Generate an ABI](475651_1_En_6_Chapter.xhtml#Sec21)
    238[Ricardian Contracts](475651_1_En_6_Chapter.xhtml#Sec22) 238[Deploy a Contract](475651_1_En_6_Chapter.xhtml#Sec23)
    240[Interact with a Smart Contract Action](475651_1_En_6_Chapter.xhtml#Sec24)
    241[Smart Contact Tokens](475651_1_En_6_Chapter.xhtml#Sec25) 241[Create Accounts](475651_1_En_6_Chapter.xhtml#Sec26)
    241[Compile wasm with the Latest eosio.​token Code](475651_1_En_6_Chapter.xhtml#Sec27)
    242[Deploy eosio.​token](475651_1_En_6_Chapter.xhtml#Sec28) 242[Create the EOS.​IO
    Token](475651_1_En_6_Chapter.xhtml#Sec29) 243[Issue Tokens](475651_1_En_6_Chapter.xhtml#Sec30)
    244[Transfer Tokens](475651_1_En_6_Chapter.xhtml#Sec31) 244[Connecting to a Public
    Testnet Block Producer](475651_1_En_6_Chapter.xhtml#Sec32) 245[Buy Resource Allocation
    on the Public Testnet Block Producer](475651_1_En_6_Chapter.xhtml#Sec33) 248[Publish
    Your HelloWorld Contract on the Public Testnet](475651_1_En_6_Chapter.xhtml#Sec34)
    250[Connecting to Mainnet](475651_1_En_6_Chapter.xhtml#Sec35) 251[Resource Allocation
    Explained](475651_1_En_6_Chapter.xhtml#Sec36) 253[Buy RAM on Mainnet](475651_1_En_6_Chapter.xhtml#Sec37)
    253[Create an EOS.​IO Account on Mainnet](475651_1_En_6_Chapter.xhtml#Sec38) 254[Change
    Your Account’s Public and Private Keys](475651_1_En_6_Chapter.xhtml#Sec39) 254[CPU
    and Bandwidth Allocations](475651_1_En_6_Chapter.xhtml#Sec40) 255[Where to Go
    from Here](475651_1_En_6_Chapter.xhtml#Sec41) 255[Summary](475651_1_En_6_Chapter.xhtml#Sec42)
    255[Chapter 7:​ NEO Blockchain and Smart Contracts](475651_1_En_7_Chapter.xhtml)
    257[NEO’s High-Level Blockchain Architecture](475651_1_En_7_Chapter.xhtml#Sec1)
    258[What Is NEO’s Smart Economy?​](475651_1_En_7_Chapter.xhtml#Sec2) 260[Setting
    Up Your Local Environment](475651_1_En_7_Chapter.xhtml#Sec3) 262[Xcode 10.​2](475651_1_En_7_Chapter.xhtml#Sec4)
    263[Install Visual Studio 2017 IDE](475651_1_En_7_Chapter.xhtml#Sec5) 263[Install
    .​NET Core](475651_1_En_7_Chapter.xhtml#Sec6) 264[Download NeoCompiler and Generate
    neon.​dll](475651_1_En_7_Chapter.xhtml#Sec8) 267[neo-cli to Generate a NEO Node](475651_1_En_7_Chapter.xhtml#Sec9)
    269[Create a Local NEO Private Testnet](475651_1_En_7_Chapter.xhtml#Sec11) 271[Python
    3.​6](475651_1_En_7_Chapter.xhtml#Sec12) 272[Install neo-python](475651_1_En_7_Chapter.xhtml#Sec13)
    273[Install neo-privatenet-docker](475651_1_En_7_Chapter.xhtml#Sec14) 275[Start
    a Network and Claim Initial NEO and Gas](475651_1_En_7_Chapter.xhtml#Sec15) 275[Bootstrapping
    the Testnet](475651_1_En_7_Chapter.xhtml#Sec16) 277[Start NEO Bash](475651_1_En_7_Chapter.xhtml#Sec17)
    277[Potential Problems During Installation](475651_1_En_7_Chapter.xhtml#Sec18)
    279[NEO “Hello, World”](475651_1_En_7_Chapter.xhtml#Sec22) 281[Building the NeoContract
    Framework:​ Neo.​SmartContract.​Framework.​dll](475651_1_En_7_Chapter.xhtml#Sec23)
    282[Create a NEO “Hello, World” Project](475651_1_En_7_Chapter.xhtml#Sec24) 284[Coding
    the NEO “Hello, World” Smart Contract in C#](475651_1_En_7_Chapter.xhtml#Sec25)
    287[Coding the NEO “Hello, World” Smart Contract in Python](475651_1_En_7_Chapter.xhtml#Sec26)
    288[Compiling Your Smart Contracts to .​avm](475651_1_En_7_Chapter.xhtml#Sec27)
    289[Publish a Smart Contract on a Private Testnet](475651_1_En_7_Chapter.xhtml#Sec28)
    290[Publishing to Mainnet](475651_1_En_7_Chapter.xhtml#Sec29) 292[Bootstrapping
    to Mainnet](475651_1_En_7_Chapter.xhtml#Sec30) 292[Installing the neo-gui Client](475651_1_En_7_Chapter.xhtml#Sec31)
    292[Ethereum vs.​ EOS vs.​ NEO:​ Smart Contracts Developer Perspective Showdown](475651_1_En_7_Chapter.xhtml#Sec32)
    292[Where to Go from Here](475651_1_En_7_Chapter.xhtml#Sec33) 297[Summary](475651_1_En_7_Chapter.xhtml#Sec34)
    298[Chapter 8:​ Hyperledger](475651_1_En_8_Chapter.xhtml) 299[Hyperledger Overview](475651_1_En_8_Chapter.xhtml#Sec1)
    300[Understanding Hyperledger Fabric](475651_1_En_8_Chapter.xhtml#Sec2) 304[Installing
    Hyperledger Fabric and Composer](475651_1_En_8_Chapter.xhtml#Sec3) 308[Prerequisites](475651_1_En_8_Chapter.xhtml#Sec4)
    309[Installing VSCode with Hyperledger Composer Extension](475651_1_En_8_Chapter.xhtml#Sec9)
    313[Spinning Off a Local Hyperledger Fabric Business Network](475651_1_En_8_Chapter.xhtml#Sec14)
    322[Hyperledger Composer](475651_1_En_8_Chapter.xhtml#Sec18) 325[“Hello, World”
    with Playground](475651_1_En_8_Chapter.xhtml#Sec19) 326[Deploying a Business Network](475651_1_En_8_Chapter.xhtml#Sec20)
    327[Business Network Archive (.​bna)](475651_1_En_8_Chapter.xhtml#Sec21) 328[Adding
    the Model File](475651_1_En_8_Chapter.xhtml#Sec22) 329[Adding Chaincode](475651_1_En_8_Chapter.xhtml#Sec23)
    331[Creating an Asset](475651_1_En_8_Chapter.xhtml#Sec24) 331[Access Control](475651_1_En_8_Chapter.xhtml#Sec25)
    332[Testing the Model](475651_1_En_8_Chapter.xhtml#Sec26) 333[Importing/​Exporting
    the Model](475651_1_En_8_Chapter.xhtml#Sec27) 334[Playground Online](475651_1_En_8_Chapter.xhtml#Sec28)
    336[Deploying on a Local Hyperledger Fabric Network](475651_1_En_8_Chapter.xhtml#Sec30)
    340[Running the “hello-network” Network](475651_1_En_8_Chapter.xhtml#Sec31) 341[Starting
    the “hello-network” Business Network and Admin Card](475651_1_En_8_Chapter.xhtml#Sec32)
    341[Importing a Business Card](475651_1_En_8_Chapter.xhtml#Sec33) 342[Where to
    Go from Here](475651_1_En_8_Chapter.xhtml#Sec34) 343[Error Troubleshooting](475651_1_En_8_Chapter.xhtml#Sec35)
    344[Composer Runtime Install Error or Card Not Found](475651_1_En_8_Chapter.xhtml#Sec36)
    344[Docker Unauthorized Authentication Required Error](475651_1_En_8_Chapter.xhtml#Sec37)
    345[Docker Container Conflicting Errors](475651_1_En_8_Chapter.xhtml#Sec38) 345[Mismatch
    and Cleanup](475651_1_En_8_Chapter.xhtml#Sec39) 346[Summary](475651_1_En_8_Chapter.xhtml#Sec40)
    347[Chapter 9:​ Build Dapps with Angular:​ Part I](475651_1_En_9_Chapter.xhtml)
    349[What Is a Dapp?​](475651_1_En_9_Chapter.xhtml#Sec1) 350[Dapp Classification](475651_1_En_9_Chapter.xhtml#Sec2)
    352[Dapp Projects](475651_1_En_9_Chapter.xhtml#Sec3) 353[How Do You Create Your
    Own Dapp?​](475651_1_En_9_Chapter.xhtml#Sec4) 354[Why Angular?​](475651_1_En_9_Chapter.xhtml#Sec10)
    357[Creating an Angular Dapp](475651_1_En_9_Chapter.xhtml#Sec11) 359[Styling an
    Angular App](475651_1_En_9_Chapter.xhtml#Sec20) 376[Creating Content](475651_1_En_9_Chapter.xhtml#Sec26)
    382[Summary](475651_1_En_9_Chapter.xhtml#Sec31) 394[Chapter 10:​ Build Dapps with
    Angular:​ Part II](475651_1_En_10_Chapter.xhtml) 395[Transfer a Smart Contract](475651_1_En_10_Chapter.xhtml#Sec1)
    396[Create a Smart Contract](475651_1_En_10_Chapter.xhtml#Sec2) 398[Create the
    Truffle Development Network](475651_1_En_10_Chapter.xhtml#Sec3) 400[Deploy the
    Smart Contract](475651_1_En_10_Chapter.xhtml#Sec4) 401[Link with the Ethereum
    Network](475651_1_En_10_Chapter.xhtml#Sec8) 406[Transfer Service](475651_1_En_10_Chapter.xhtml#Sec9)
    407[Connect to MetaMask](475651_1_En_10_Chapter.xhtml#Sec10) 413[Test Your Dapp
    Functionality](475651_1_En_10_Chapter.xhtml#Sec11) 417[Where to Go from Here](475651_1_En_10_Chapter.xhtml#Sec12)
    417[Summary](475651_1_En_10_Chapter.xhtml#Sec13) 418[Chapter 11:​ Security and
    Compliance](475651_1_En_11_Chapter.xhtml) 419[Security and Compliance Readiness](475651_1_En_11_Chapter.xhtml#Sec1)
    421[Security Readiness](475651_1_En_11_Chapter.xhtml#Sec2) 421[Compliance Readiness](475651_1_En_11_Chapter.xhtml#Sec3)
    423[Readiness Recommendations](475651_1_En_11_Chapter.xhtml#Sec6) 427[Common Blockchain
    Attacks](475651_1_En_11_Chapter.xhtml#Sec7) 431[Wallet Cyberattacks](475651_1_En_11_Chapter.xhtml#Sec8)
    431[Blockchain Network Attacks](475651_1_En_11_Chapter.xhtml#Sec17) 437[Platform
    Attack](475651_1_En_11_Chapter.xhtml#Sec28) 444[Development Cycle](475651_1_En_11_Chapter.xhtml#Sec37)
    456[Design and Coding](475651_1_En_11_Chapter.xhtml#Sec38) 457[Discovery, Audit,
    and Test](475651_1_En_11_Chapter.xhtml#Sec39) 457[Discovery](475651_1_En_11_Chapter.xhtml#Sec40)
    458[Audit](475651_1_En_11_Chapter.xhtml#Sec41) 458[Test](475651_1_En_11_Chapter.xhtml#Sec44)
    459[Readiness Assessment](475651_1_En_11_Chapter.xhtml#Sec46) 464[Release](475651_1_En_11_Chapter.xhtml#Sec48)
    465[Where to Go from Here](475651_1_En_11_Chapter.xhtml#Sec49) 465[Summary](475651_1_En_11_Chapter.xhtml#Sec50)
    466[Chapter 12:​ Blockchain Beyond Crypto](475651_1_En_12_Chapter.xhtml) 467[Harnessing
    Blockchain](475651_1_En_12_Chapter.xhtml#Sec1) 468[Coins](475651_1_En_12_Chapter.xhtml#Sec2)
    469[Tokens](475651_1_En_12_Chapter.xhtml#Sec3) 470[Ledgers](475651_1_En_12_Chapter.xhtml#Sec4)
    472[Smart Contracts and Dapps](475651_1_En_12_Chapter.xhtml#Sec5) 473[Decentralization​
    of Industries and Verticals](475651_1_En_12_Chapter.xhtml#Sec6) 474[Financial](475651_1_En_12_Chapter.xhtml#Sec7)
    475[Cybersecurity](475651_1_En_12_Chapter.xhtml#Sec8) 478[Real Estate](475651_1_En_12_Chapter.xhtml#Sec9)
    481[Mobile](475651_1_En_12_Chapter.xhtml#Sec10) 483[Supply Chain](475651_1_En_12_Chapter.xhtml#Sec11)
    485[Encrypted Messaging](475651_1_En_12_Chapter.xhtml#Sec12) 487[Elections and
    Voting](475651_1_En_12_Chapter.xhtml#Sec13) 487[Marketing](475651_1_En_12_Chapter.xhtml#Sec14)
    488[Healthcare](475651_1_En_12_Chapter.xhtml#Sec15) 490[Gaming](475651_1_En_12_Chapter.xhtml#Sec16)
    494[Music](475651_1_En_12_Chapter.xhtml#Sec17) 495[Where to Go from Here](475651_1_En_12_Chapter.xhtml#Sec18)
    500[Summary](475651_1_En_12_Chapter.xhtml#Sec19) 500[Index](475651_1_En_BookBackmatter_OnlinePDF.xhtml#Ind1)
    503'
  prefs: []
  type: TYPE_NORMAL
- en: About the Author and About the Technical Reviewer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: About the Author
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Elad Elrom![../images/475651_1_En_BookFrontmatter_Figb_HTML.jpg](../images/475651_1_En_BookFrontmatter_Figb_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: is a coder, technical lead, and technical writer. As a writer, he has co-authored
    four technical books. Elad has consulted for a variety of clients, from large
    corporations, such as HBO, Viacom, NBC Universal, and Weight Watchers, to smaller
    startups. Aside from coding, Elad is a certified PADI dive instructor and an accomplished
    certified pilot. You can contact him at elad.ny@gmail.com .
  prefs: []
  type: TYPE_NORMAL
- en: About the Technical Reviewer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nishith Pathak![../images/475651_1_En_BookFrontmatter_Figc_HTML.png](../images/475651_1_En_BookFrontmatter_Figc_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: is India’s first Artificial Intelligence (AI) Most Valuable Professional (MVP),
    a Microsoft Regional Director (RD), a lead architect, a speaker, an AI thinker,
    an innovator, and a strategist. Nishith’s expertise lies in helping Fortune 100
    companies design and architect next-generation solutions that incorporate AI,
    machine learning, cognitive services, blockchain, and many more. He sits on several
    technical advisory boards across the globe and is the author of multiple books
    on AI and blockchain. Nishith has played a PAN account enterprise architect role
    where he was responsible for everything from the overall architecture to the design
    in multiple projects. He is an internationally acclaimed speaker on technologies
    such as AI and blockchain and regularly speaks at various technical conferences.
  prefs: []
  type: TYPE_NORMAL
- en: For his expertise on artificial intelligence, Microsoft awarded him the first
    Most Valuable Professional in the Artificial Intelligence category. Globally,
    he is among 19 MVPs on AI, recognized by Microsoft for their sheer expertise in
    AI. He has also been awarded the Microsoft Regional Director award, bestowed upon
    150 of the world’s top technology visionaries chosen specifically for their proven
    cross-platform expertise. Nishith is currently working on key areas such as artificial
    intelligence, machine learning, cognitive computing, blockchain, Internet of Things,
    and cloud computing; he helps companies architect solutions based on these technologies.
  prefs: []
  type: TYPE_NORMAL
- en: He can be contacted at NisPathak@GMail.com or found on LinkedIn ( [https://www.linkedin.com/in/nishithpathak/](https://www.linkedin.com/in/nishithpathak/)
    ), Twitter ( [http://twitter.com/nispathak](http://twitter.com/nispathak) ), or
    Microsoft ( [https://rd.microsoft.com/en-us/nishith-pathak](https://rd.microsoft.com/en-us/nishith-pathak)
    ).
  prefs: []
  type: TYPE_NORMAL
