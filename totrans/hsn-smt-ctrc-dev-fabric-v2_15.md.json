["```\ngit clone https://github.com/bcgov/von-network\ncd von-network\n```", "```\n./manage build\n./manage up\n```", "```\ngit clone https://github.com/hyperledger/aries-cloudagent-python\ncd aries-cloudagent-python/demo\n```", "```\n./run_demo faber\n```", "```\ncd aries-cloudagent-python/demo\n./run_demo alice\n```", "```\nInvitation response:\n  {\n    \"their_label\": \"Faber.Agent\",\n    \"invitation_key\": \"BLpHqGjjqPJ9NXz9wni8FVmcF74ue3LsXJBeyKV6ubTX\",\n    \"request_id\": \"9b289bdb-7bd5-4804-baf1-794e66a70d60\",\n    \"initiator\": \"external\",\n    \"created_at\": \"2020-09-01 17:31:22.905350Z\",\n    \"accept\": \"auto\",\n    \"my_did\": \"MytrhNXxvaK3f5NX5ztFim\",\n    \"updated_at\": \"2020-09-01 17:31:22.920279Z\",\n    \"routing_state\": \"none\",\n    \"invitation_mode\": \"once\",\n    \"connection_id\": \"b4bddaea-f158-4910-825f-32acd0fc1ed0\",\n    \"state\": \"request\"\n  }\n\nAlice      | Connected\nConnect duration: 0.21s\n```", "```\nFaber | Connected\n    (1) Issue Credential\n    (2) Send Proof Request\n    (3) Send Message\n    (T) Toggle tracing on credential/proof exchange\n    (X) Exit?\n[1/2/3/T/X]\n```", "```\nAlice | Connected\n   (1) Send Message\n   (2) Input New Invitation\n   (X) Exit?\n```", "```\n[1/2/3/T/X] 1\n\n#13 Issue credential offer to X\nFaber      | Credential: state = offer_sent, credential_exchange_id = 97a2124b-6464-4761-a7b0-\n62fbc0236433\nFaber      | Credential: state = request_received, credential_exchange_id = 97a2124b-6464-4761-a7b0-\n62fbc0236433\n\n#17 Issue credential to X\nFaber      | Credential: state = credential_issued, credential_exchange_id = 97a2124b-6464-4761-a7b0-\n62fbc0236433\nFaber      | Credential: state = credential_acked, credential_exchange_id = 97a2124b-6464-4761-a7b0-\n62fbc0236433\n```", "```\nAlice      | Credential: state = offer_received , credential_exchange_id = e9bd52c1-364a-407d-b95b-\n0e1bc1593c0a\n\n#15 After receiving credential offer, send credential request\nAlice      | Credential: state = request_sent , credential_exchange_id = e9bd52c1-364a-407d-b95b-\n0e1bc1593c0a\nAlice      | Credential: state = credential_received , credential_exchange_id = e9bd52c1-364a-407d-\nb95b-0e1bc1593c0a\nAlice      | Credential: state = credential_acked , credential_exchange_id = e9bd52c1-364a-407d-b95b-\n0e1bc1593c0a\nAlice      | Stored credential b0030596-b025-4e95-804d-fcc6404c1788 in wallet\n\n#18.1 Stored credential b0030596-b025-4e95-804d-fcc6404c1788 in wallet\n```", "```\n[1/2/3/T/X] 2\n#20 Request proof of degree from alice\nFaber      | Presentation: state = request_sent , presentation_exchange_id = 6d8b4157-254f-45f2-8f52-\nca86f2ab536a\nFaber      | Presentation: state = presentation_received , presentation_exchange_id = 6d8b4157-254f-\n45f2-8f52-ca86f2ab536a\n\n#27 Process the proof provided by X\n\n#28 Check if proof is valid\nFaber      | Presentation: state = verified , presentation_exchange_id = 6d8b4157-254f-45f2-8f52-\nca86f2ab536a\nFaber      | Proof = true\n```", "```\nPresentation: state = request_received , presentation_exchange_id = b6675e49-1ddd-4edf-872d-\ne667fcf155f7\n\n#24 Query for credentials in the wallet that satisfy the proof request\n\n#25 Generate the proof\n\n#26 Send the proof to X\nPresentation: state = presentation_sent , presentation_exchange_id = b6675e49-1ddd-4edf-872d-\ne667fcf155f7\nPresentation: state = presentation_acked , presentation_exchange_id = b6675e49-1ddd-4edf-872d-\ne667fcf155f7\n```", "```\ngit clone *https://github.com/PegaSysEng/besu-sample-networks.git*\ncd besu-sample-networks\n```", "```\n./run.sh\n```", "```\nubuntu@ip-172-31-72-58:~/besu-sample-networks$ sudo ./run.sh\n*************************************\nSample Network for Besu at latest\n*************************************\nStart network\n--------------------\nStarting network...\nminernode uses an image, skipping\nâ€¦.\n*************************************\nSample Network for Besu at latest\n*************************************\nList endpoints and services\n----------------------------------\n              Name                             Command                       State                                            Ports\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------\nbesu-sample-networks_bootnode_1     /opt/besu/bootnode_start.s ...   Up (health: starting)   0.0.0.0:30303->30303/tcp, 0.0.0.0:30303->30303/udp, 8545/tcp, 8546/tcp,\n                                                                                             8547/tcp\nbesu-sample-networks_explorer_1     /docker-entrypoint.sh ngin ...   Up                      0.0.0.0:25000->80/tcp\nbesu-sample-networks_grafana_1      /run.sh                          Up                      0.0.0.0:3000->3000/tcp\nbesu-sample-networks_minernode_1    /opt/besu/node_start.sh -- ...   Up (health: starting)   30303/tcp, 8545/tcp, 8546/tcp, 8547/tcp\nbesu-sample-networks_node_1         /opt/besu/node_start.sh -- ...   Up (health: starting)   30303/tcp, 8545/tcp, 8546/tcp, 8547/tcp\nbesu-sample-networks_prometheus_1   /bin/prometheus --config.f ...   Up                      0.0.0.0:9090->9090/tcp\nbesu-sample-networks_rpcnode_1      /opt/besu/node_start.sh -- ...   Up (health: starting)   30303/tcp, 0.0.0.0:8545->8545/tcp, 8546/tcp, 8547/tcp\n```", "```\n****************************************************************\nJSON-RPC HTTP service endpoint      : http://localhost:8545\nJSON-RPC WebSocket service endpoint : ws://localhost:8546\nGraphQL HTTP service endpoint       : http://localhost:8547\nWeb block explorer address          : http://localhost:25000/\nPrometheus address                  : http://localhost:9090/graph\nGrafana address             : http://localhost:3000/d/XE4V0WGZz/besu-\noverview?orgId=1&refresh=10s&from=now-30m&to=now&var-system=All\n****************************************************************\n```", "```\n~/besu-sample-networks$ curl -X POST --data \n'{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\":[],\"id\":1}' http://3.237.17.164:8545\n```", "```\n{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : \"0x3\"\n}\n```", "```\n    Account 1 (Miner Coinbase Account)\n    Address: 0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\n    Private key : 0x8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63\n    Initial balance : 0xad78ebc5ac6200000 (200000000000000000000 in decimal)\n    Account 2\n    Address: 0x627306090abaB3A6e1400e9345bC60c78a8BEf57\n    Private key : 0xc87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3\n    Initial balance : 0x90000000000000000000000 (2785365088392105618523029504 in decimal)\n    Account 3\n    Address: 0xf17f52151EbEF6C7334FAD080c5704D77216b732\n    Private key : 0xae6ae8e5ccbfb04590405997ee2d52d2b330726137b875053c36d94e974d162f\n    Initial balance : 0x90000000000000000000000 (2785365088392105618523029504 in decimal)\n    ```", "```\nnpm install -g truffle\n```", "```\n~/besu-sample-networks/pet-shop$ ls\nDockerfile      box-img-sm.png  contracts   node_modules       package.json  test\nbox-img-lg.png  bs-config.json  migrations  package-lock.json  src           truffle-config.js\n```", "```\n ~/besu-sample-networks$ sudo ./run-dapp.sh\n```", "```\n~/besu-sample-networks$ sudo ./remove.sh\n```", "```\n    message Agent {\n        string org_id = 1;\n        string public_key = 2;\n        bool active = 3;\n        repeated string roles = 4;\n        repeated KeyValueEntry metadata = 5;\n    }\n\n    message KeyValueEntry {\n      string key = 1;\n      string value = 2;\n    }\n```", "```\nmessage PikePayload {\n        enum Action {\n            ACTION_UNSET = 0;\n\n            CREATE_AGENT = 1;\n            UPDATE_AGENT = 2;\n\n            CREATE_ORGANIZATION = 4;\n            UPDATE_ORGANIZATION = 5;\n        }\n\n        Action action = 1;\n\n        CreateAgentAction create_agent = 2;\n        UpdateAgentAction update_agent = 3;\n\n        CreateOrganizationAction create_org = 4;\n        UpdateOrganizationAction update_org = 5;\n    }\n```"]