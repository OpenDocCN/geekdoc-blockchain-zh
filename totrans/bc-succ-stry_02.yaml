- en: Chapter 2\. Blockchain Building Blocks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vitalik Buterin was only 19 years old when he changed the world.
  prefs: []
  type: TYPE_NORMAL
- en: 'Vitalik was born in Russia, and his parents emigrated to Canada when he was
    six. It was clear that Vitalik was a child prodigy: educators quickly recognized
    his remarkable talents and moved him into a class for gifted children, where he
    excelled in math, programming, and economics.'
  prefs: []
  type: TYPE_NORMAL
- en: As a teen, the young Vitalik was introduced to bitcoin by his father, a computer
    programmer. While Vitalik was fascinated by the technology, he saw bitcoin not
    as an end in itself but as a means to an end. What if you could develop applications
    on top of bitcoin—essentially turning bitcoin itself into a platform?
  prefs: []
  type: TYPE_NORMAL
- en: Vitalik proposed a new kind of scripting language that could be built on top
    of bitcoin. (As an analogy, think of this like Android scripting languages, which
    make it easier for developers to create Android apps.) He was young and inexperienced,
    so his idea didn’t get much traction among bitcoin’s core developers, who were
    now the “old guard.” So Vitalik built the project himself.
  prefs: []
  type: TYPE_NORMAL
- en: Like Satoshi before him, the young developer described his idea in a whitepaper.^([1](ch02.html#ch01fn9))
    He described his project, announced in 2013, as a general blockchain platform
    with a simple scripting language that would allow developers to rapidly create
    new blockchain apps. The platform would come with its own built-in units of value,
    its own *digital currency*.
  prefs: []
  type: TYPE_NORMAL
- en: Also like Satoshi, Vitalik attracted a small team of developers around his idea,
    and they helped him prototype and launch the platform. The project quickly attracted
    a network of volunteers who were willing to build the network because (as with
    bitcoin) they were rewarded with small units of value for hosting nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Vitalik called the project *Ethereum*, named after ether, the hypothetical invisible
    substance that permeates the universe.^([2](ch02.html#ch01fn10)) The unit of value—the
    “money” that developers paid to use the network—was called *Ether*. (These terms
    would quickly become confused, and today *Ethereum* is commonly used for both
    the network and the unit of value.)
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum was a big step forward for blockchain, because it allowed for a common
    set of development standards, which meant a faster time to market. It was almost
    *too* successful because it made it easy for anyone to create blockchain-based
    units of value that could be bought and sold by digital traders.
  prefs: []
  type: TYPE_NORMAL
- en: Just as the internet made it easy for anyone to publish information (whether
    true or not), this new invention made it easy for anyone to create new units of
    value (whether valuable or not). In a sense, it allowed people to “print money.”
    As you shall see, this was both a blessing and a curse.
  prefs: []
  type: TYPE_NORMAL
- en: History will remember Vitalik, along with Satoshi, as one of the founders of
    blockchain. Today, Ethereum is the second-largest blockchain project behind bitcoin,
    and it serves as a terrific case study for the building blocks of a successful
    blockchain project.
  prefs: []
  type: TYPE_NORMAL
- en: But like Satoshi before him, Vitalik could not have foreseen how his blockchain
    project would change the world. (You can’t always predict where a blockchain project
    will go.) To understand the next part of our story, let’s see how blockchain pumps
    blood into the body.
  prefs: []
  type: TYPE_NORMAL
- en: 'Decentralized Ledger Technology: The Beating Heart of Blockchain'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s return to our accounting ledger, in which Alice has now transferred one
    unit of Ethereum to Bob, who transfers it to Carol, who transfers it to Devansh
    ([Figure 2-1](#alicecomma_bobcomma_carolcomma_and_d)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Alice, Bob, Carol, and Devansh as we’d represent them in an accounting ledger](assets/bcss_0201.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2-1\. Alice, Bob, Carol, and Devansh as we’d represent them in an accounting
    ledger
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: First imagine that we record this information into a local Excel spreadsheet.
    It’s now stored on one copy, one computer, as illustrated in [Figure 2-2](#a_sequence_of_eth_transactionscomma_as).
  prefs: []
  type: TYPE_NORMAL
- en: '![A sequence of ETH transactions, as recorded in an Excel sheet](assets/bcss_0202.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2-2\. A sequence of ETH transactions, as recorded in an Excel sheet
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Next, imagine that we copy the information out of Excel and into a Google Sheet:
    it’s now shared across hundreds of network nodes, across a cloud computing cluster,
    as shown in [Figure 2-3](#alice_transfers_one_eth_to_bobcomma_a). Compare the
    Excel file (one copy, one computer) to the Google Sheet (one copy, many computers).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Alice transfers one ETH to Bob, as recorded in a Google sheet](assets/bcss_0203.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2-3\. Alice transfers one ETH to Bob, as recorded in a Google sheet
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Blockchain takes it one step further: many copies, many computers, as demonstrated
    in [Figure 2-4](#alice_transfers_one_eth_to_bobcomma_as).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Alice transfers one ETH to Bob, as recorded on a blockchain](assets/bcss_0204.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2-4\. Alice transfers one ETH to Bob, as recorded on a blockchain
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Look again at Figures [2-3](#alice_transfers_one_eth_to_bobcomma_a) and [2-4](#alice_transfers_one_eth_to_bobcomma_as)
    to engrave in your mind how **decentralized ledger technology** (DLT) is different
    from cloud computing.  Even though a Google Sheet is spread across multiple servers,
    it’s still centralized, since Google owns the servers.  Blockchain is decentralized,
    meaning the users run the servers.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Decentralized ledger technology**: The beating heart of blockchain. It allows
    us to keep all the transactions synchronized, across a distributed network of
    computers.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To be clear: there’s only one ledger, but that ledger is not stored in any
    one central location. Rather, identical copies exist on every node—a copy on every
    computer.'
  prefs: []
  type: TYPE_NORMAL
- en: Compare again Figures [2-3](#alice_transfers_one_eth_to_bobcomma_a) and [2-4](#alice_transfers_one_eth_to_bobcomma_as)
    to lock this model in your mind. It’s a big deal. DLT is the beating heart of
    blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '*DLT* is often defined as *distributed* ledger technology, and sometimes confused
    with blockchain itself. *Distributed*, however, refers only to copies of the same
    ledger being stored on different computers (like cloud computing).'
  prefs: []
  type: TYPE_NORMAL
- en: We define DLT as *decentralized* ledger technology to show that the ledger is
    not only distributed, but also isn’t bound by any central authority. The power
    to *maintain* the ledger is decentralized across nodes. This definition of DLT
    more accurately describes the “beating heart of blockchain.”
  prefs: []
  type: TYPE_NORMAL
- en: The remarkable thing about DLT is that we can keep all these distributed copies
    *synchronized*, anywhere in the world, while making multiple transactions per
    second. (Think about how difficult it is to just schedule lunch with friends.)
  prefs: []
  type: TYPE_NORMAL
- en: 'What’s more, we synchronize all of these copies in a way that is trusted, timestamped,
    and auditable. Let’s unpack each of these terms:'
  prefs: []
  type: TYPE_NORMAL
- en: The decentralized ledger is *trusted* because it was arrived at through consensus
    (more on this shortly), with no central party being able to alter the data. A
    centralized Google Sheet could be altered by Google, but a decentralized ledger
    can’t be altered by a central company or institution. (Like the internet, no single
    organization “owns” it.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The decentralized ledger is *timestamped* by creating *blocks*—a single record
    of data, like an entry on our accounting ledger—that ensures the proper sequence
    of transactions. Noting the time a transaction was made keeps the system safe
    and secure: when we pay someone in Ethereum at 12:02, we know when that Ethereum
    landed in the recipient’s wallet.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The decentralized ledger is *auditable* because it’s transparent: as with a
    Google Sheet, we can all look back in time and see the complete sequence of transactions.
    Unlike cash, which is truly anonymous, a digital ledger leaves a trail whenever
    we make a transaction. The parties can still be anonymous, but their transaction
    is broadcast in broad daylight.^([3](ch02.html#ch01fn11))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'That said, is DLT right for you? For most enterprise technology managers, a
    shared centralized database is a better solution: it’s faster, cheaper, and easier
    to deploy. Blockchain technology is better when you need to share “money” (or
    units of value) across a global network of participants: in other words, when
    you need to *share the wealth*.'
  prefs: []
  type: TYPE_NORMAL
- en: DLT is how we circulate value into the Internet of Value, in the same way that
    the heart pumps blood into the body. It’s the technology behind blockchain, the
    organ that keeps the ecosystem vibrant and healthy.
  prefs: []
  type: TYPE_NORMAL
- en: Over the next four years after Ethereum was launched, that heart began to beat
    faster and faster. Then things exploded.
  prefs: []
  type: TYPE_NORMAL
- en: Nodes and Miners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ethereum—like the entire blockchain market—was going insane.
  prefs: []
  type: TYPE_NORMAL
- en: Because people could create their own tokens on top of Ethereum (the platform),
    the price of Ethereum (the asset) began to skyrocket. At the beginning of 2017,
    a single ETH was $10; a year later, that same ETH was $1,000.
  prefs: []
  type: TYPE_NORMAL
- en: As the price shot into the ether, so did the number of *miners* (people contributing
    their computers to the network). This, in turn, grew network capacity, so even
    more projects could launch on Ethereum, making even more money for the Ethereum
    ecosystem. More people meant more decentralization, which meant more security
    (fewer points of failure), which made the network even more valuable. It was the
    same virtuous circle that powered the early growth of bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: 'The increasing price radically increased the number of nodes, as more people
    joined their computers to the network. These nodes served a few key roles:'
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining copies of the ledger
  prefs: []
  type: TYPE_NORMAL
- en: Like teens sharing an NSYNC album on Napster, many nodes host the ledger, constantly
    staying in sync. Because the ledger can become quite large over time, some nodes
    host only a part of the ledger.
  prefs: []
  type: TYPE_NORMAL
- en: Validating transactions
  prefs: []
  type: TYPE_NORMAL
- en: Through the process of consensus (coming up next), the nodes are constantly
    coming to “agreement” on which transaction blocks are valid, and then recording
    valid blocks on the blockchain (i.e., writing a timestamped block of data to the
    distributed ledger).
  prefs: []
  type: TYPE_NORMAL
- en: Mining
  prefs: []
  type: TYPE_NORMAL
- en: Broadly speaking, miners are dedicated computers that use specialized hardware
    and software to run a blockchain network, receiving a reward in the form of bitcoin
    or other digital assets for generating new transaction blocks. Users set up a
    *mining rig*—a custom-built computer—and earn rewards for hosting a node in the
    network.^([4](ch02.html#ch01fn12))
  prefs: []
  type: TYPE_NORMAL
- en: 'This concept of *nodes* and *miners* is critical. At their outset, all blockchains
    face a “chicken-or-egg problem”: without users, you don’t have a blockchain, but
    without a blockchain, you can’t attract users. The blockchain isn’t centralized:
    you can’t just spin up a cluster of servers. It’s decentralized: you have to convince
    users to build the network.'
  prefs: []
  type: TYPE_NORMAL
- en: So how do you kickstart a blockchain? You mine it.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Mining**: Let’s expand our definition from [Chapter 1](ch01.html#one_what_is_blockchainquestion_mark)
    to include the process of earning rewards (usually in the form of coins or tokens)
    by contributing computing power to the network.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Users want a reward for participating in your blockchain: again, the perception
    of value. The term **mining** is now used generically to mean any reward for hosting
    a node in the network.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is another reason we think of blockchain as the Internet of Value: your
    value (your digital assets, commonly called *coins* or *tokens*) is typically
    used to reward your miners for participating in the network.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is how we solve the chicken-or-egg problem: we pay off the chickens.'
  prefs: []
  type: TYPE_NORMAL
- en: The Consensus Algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We reject: kings, presidents, and voting. We believe in: rough consensus and
    running code.^([5](ch02.html#ch01fn13))'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Dave Clark, Internet Engineering Task Force
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Now you understand that blockchain uses a distributed ledger (a massive shared
    database), which is maintained through nodes and miners (a global network), who
    are rewarded with tokens (your custom currency, or units of value). This is how
    blockchains are built in real life.
  prefs: []
  type: TYPE_NORMAL
- en: But with transactions simultaneously happening all over the globe, how do we
    keep all this synchronized? We call this *consensus*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consensus (also called the **consensus algorithm**, or **consensus protocol**)
    is the process through which all the nodes reach agreement on a transaction. *We
    don’t mean that humans are manually agreeing on each transaction.* Quite the opposite:
    as Dave Clark points out, consensus is not voting. Consensus is happening behind
    the scenes, in code: machines agreeing with machines.'
  prefs: []
  type: TYPE_NORMAL
- en: Consensus currently comes in several flavors, which we cover next. (If this
    section gets too technical for your taste, you can skim the sentences in italics
    and skip ahead to [Chapter 3](ch03.html#three_how_to_build_a_successful_blockch).)
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Consensus protocol**: The algorithm that computers use to automatically “agree”
    with one another.'
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Proof of Work* (*PoW*) is the original consensus protocol used by bitcoin.
    In this method, computer nodes solve increasingly complex mathematical problems
    for the right to validate transactions (i.e., approve them to be written as a
    new block of data). As the complexity increases, so does the processing power
    required to solve those problems.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The computers providing that processing power are not only increasingly expensive
    to build but increasingly expensive to run: computing power requires electrical
    power. The idea is that this challenging mathematical “work” further justifies
    the value of the bitcoin, because it uses real processing power and real electricity.'
  prefs: []
  type: TYPE_NORMAL
- en: In fact, a common criticism is that bitcoin uses *too much* electricity. According
    to *The Economist*, the total energy consumption used by the bitcoin network alone
    could power Ireland!^([6](ch02.html#ch01fn14)) This massive energy draw is the
    reason that blockchain developers are experimenting with alternative consensus
    mechanisms.
  prefs: []
  type: TYPE_NORMAL
- en: In the early days, anyone with a home computer could mine bitcoin. Then it specialized
    into custom mining rigs, then warehouses of mining rigs, then enormous server
    farms located near cheap energy sources. As it became more competitive for individual
    miners to make any money, they began joining together in huge profit-sharing collectives,
    or *mining pools*. Many of these pools further consolidated into companies that
    now control large chunks of the bitcoin network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consensus is a funny thing. As power consolidates among competing mining companies,
    we end up with something like an oligopoly, with a handful of enormous players
    controlling most of the mining power: exactly the problem that a decentralized
    network is trying to solve.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We call this problem the **Consensus Paradox**: a decentralized consensus algorithm
    tends to become more centralized as it becomes more widely adopted.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Consensus Paradox**: As a decentralized consensus mechanism becomes more
    widely adopted, it tends to become more centralized.'
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most common alternative to Proof of Work is *Proof of Stake* (*PoS*), in
    which nodes have mining power proportional to the number of tokens they own. For
    example, in Ethereum 2.0,^([7](ch02.html#ch01fn15)) which is built on PoS, someone
    who owned 1% of all the Ethereum could validate (or approve) a maximum of 1% of
    all the transactions.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Proof of Stake** (**PoS**): A consensus mechanism, whereby users have to
    prove their stake in the network in order to validate (or *mine*) new tokens.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Proof of Stake’s huge advantage is that it uses far less electricity: rather
    than everyone “competing” for rewards, we just distribute the rewards proportionally
    to who owns the tokens.'
  prefs: []
  type: TYPE_NORMAL
- en: 'But here again we run into the Consensus Paradox: under this scheme, the rich
    get richer, while the poor get poorer. Like the Monopoly player who’s developed
    hotels on the most valuable properties, the wealthiest token holders get proportionally
    more of the benefits.'
  prefs: []
  type: TYPE_NORMAL
- en: 'PoS does, however, create an enormous incentive for players to ensure the integrity
    of the system: the more blockchain tokens you own in a PoS system, the more you
    want that blockchain to succeed. Nobody wants the Monopoly game to end early if
    they’re winning.'
  prefs: []
  type: TYPE_NORMAL
- en: Experimental Consensus Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Consensus Paradox is one of the most interesting problems in blockchain,
    so a host of new consensus algorithms are in the works, such as Delegated Proof
    of Stake, Tangle, and Hashgraph. It’s a difficult problem: how do you get thousands
    of independent nodes to continually stay in agreement? Each solution has its own
    strengths and weaknesses.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, blockchain presents challenges that are both technical and
    financial. Ethereum got it right on both fronts: a good consensus protocol (technical),
    with built-in incentives for nodes and miners (financial).'
  prefs: []
  type: TYPE_NORMAL
- en: We’re seeing that blockchain—the Internet of Value—has many moving parts. When
    we build a blockchain, we’re not just building a technological system; we’re building
    an economic system ([Figure 2-5](#blockchain_sits_at_the_intersection_of)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Blockchain sits at the intersection of technology and economics. Let’s call
    it “techonomics.”](assets/bcss_0207.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2-5\. Blockchain sits at the intersection of technology and economics.
    Let’s call it “techonomics.”
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Indeed, it’s helpful to think of blockchain as a new discipline that sits at
    the intersection of money and technology. This requires new skills. A traditional
    network admin will not understand how to create economic incentives, just as a
    traditional economist will not be able to understand consensus protocols.
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, we encourage enterprise blockchain leaders to begin training in “tokenomics”:
    the art/science of designing tokenized digital assets. This will lead to a new
    job position, the **tokenomist**, who understands economic principles as well
    as blockchain technology. In the job market of the future, tokenomists—both literally
    and figuratively—are going to mint money.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '**Tokenomist**: Part economist, part blockchain guru—starting salary is $200,000
    annually (but you can pay it in tokens).'
  prefs: []
  type: TYPE_NORMAL
- en: '^([1](ch02.html#ch01fn9-marker)) Vitalik Buterin, “Ethereum White Paper: A
    Next Generation Smart Contract and Decentralized Application Platform,” [Ethereum.org](http://Ethereum.org),
    2013, *[*http://blockchainlab.com/pdf/Ethereum_white_paper-a_next_generation_smart_contract_and_decentralized_application_platform-vitalik-buterin.pdf*](http://blockchainlab.com/pdf/Ethereum_white_paper-a_next_generation_smart_contract_and_decentralized_application_platform-vitalik-buterin.pdf)*.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch02.html#ch01fn10-marker)) Rugbyowl, “So Where Did the Name Ethereum
    Come From?” Ethereum Community Forum, March 20, 2014, *[*https://forum.ethereum.org/discussion/655/so-where-did-the-name-ethereum-come-from*](https://forum.ethereum.org/discussion/655/so-where-did-the-name-ethereum-come-from)*.
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](ch02.html#ch01fn11-marker)) “Is Cryptocurrency Money Laundering a Real
    Threat?” AML RightSource, January 15, 2019, [*https://www.amlrightsource.com/news/posts/cryptocurrency-money-laundering-red-flags*](https://www.amlrightsource.com/news/posts/cryptocurrency-money-laundering-red-flags).
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](ch02.html#ch01fn12-marker)) This further illustrates why we define DLT
    as decentralized ledger technology. *Distributed* refers only to the nodes that
    maintain identical copies of the same ledger. *Decentralized* refers to the nodes
    that also perform mining and validate transactions.
  prefs: []
  type: TYPE_NORMAL
- en: '^([5](ch02.html#ch01fn13-marker)) A. L. Russell, “‘Rough Consensus and Running
    Code’ and the Internet-OSI Standards War,” *IEEE Annals of the History of Computing*
    28, no. 3 (2006): 48–61, [*https://doi.org/10.1109/mahc.2006.42*](https://doi.org/10.1109/mahc.2006.42).'
  prefs: []
  type: TYPE_NORMAL
- en: ^([6](ch02.html#ch01fn14-marker)) “Why Bitcoin Uses so Much Energy,” *The Economist*,
    July 9, 2018, *[*https://www.economist.com/the-economist-explains/2018/07/09/why-bitcoin-uses-so-much-energy*](https://www.economist.com/the-economist-explains/2018/07/09/why-bitcoin-uses-so-much-energy)*.
  prefs: []
  type: TYPE_NORMAL
- en: ^([7](ch02.html#ch01fn15-marker)) “Ethereum 2.0 Specs,” GitHub, Sept. 3, 2019,
    *[*https://github.com/ethereum/eth2.0-specs*](https://github.com/ethereum/eth2.0-specs)*.
  prefs: []
  type: TYPE_NORMAL
