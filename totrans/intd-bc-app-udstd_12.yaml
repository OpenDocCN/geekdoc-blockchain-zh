- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022J. T. GeorgeIntroducing Blockchain Applications[https://doi.org/10.1007/978-1-4842-7480-4_12](https://doi.org/10.1007/978-1-4842-7480-4_12)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家许可给 APress Media, LLC，属于 Springer Nature 2022。J. T. George 介绍区块链应用[https://doi.org/10.1007/978-1-4842-7480-4_12](https://doi.org/10.1007/978-1-4842-7480-4_12)
- en: 12. BLOCKLY 4SOS
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12. BLOCKLY 4SOS
- en: Joseph Thachil George^([1](#Aff2)  )(1)Rome, Italy
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Joseph Thachil George^([1](#Aff2)  )(1)意大利罗马
- en: BLOCKLY is a library that allows you to make block programming apps. Even if
    users do not really know a programming language, block programming allows them
    to construct scripts and programs using graphic blocks. In a drag-and-drop editor,
    BLOCKLY includes all you need to define and render blocks. Each block represents
    a single line of code that may be stacked and converted into code with ease. It
    can be used to let users personalize elements of the app and add actions to them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: BLOCKLY 是一个允许您制作块编程应用的库。即使用户实际上不了解编程语言，块编程也允许他们使用图形块构建脚本和程序。在拖放编辑器中，BLOCKLY
    包括定义和渲染块所需的所有内容。每个块代表一行代码，可以轻松堆叠并转换为代码。它可用于让用户个性化应用程序的元素并向其添加动作。
- en: 12.1 SOS Modeling
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.1 SOS 建模
- en: While using this tool  , it generates a standard SoS-block called ex-abundant
    block, to illustrate. The left-side toolbox contains all of the blocks required
    to build an SoS design. This conceptual model will assist the SoS designer. Furthermore,
    every exported block in BLOCKLY is connected to a perspective block, so all blocks
    connected to the communication point of view may be found under the Toolkit’s
    Communication category.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用该工具时，它会生成一个名为 ex-abundant block 的标准 SoS 块，以作说明。左侧的工具箱包含构建 SoS 设计所需的所有块。这个概念模型将协助
    SoS 设计者。此外，BLOCKLY 中的每个导出块都连接到一个透视块，因此所有连接到视角的通信点的块都可以在 Toolkit 的通信类别下找到。
- en: Users must click and drag blocks from the flyout or toolbox to generate new
    blocks in BLOCKLY. An API for BLOCKLY was designed with the goal of improving
    usability and accuracy. The Field Dropdown() provides a list of appropriate blocks
    that may be linked to a certain block, making it easy for the users to build blocks.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 用户必须从 flyout 或工具箱中点击并拖动块，以在 BLOCKLY 中生成新的块。为了提高可用性和准确性，为 BLOCKLY 设计了一个 API。Field
    Dropdown() 提供了一个适当的块列表，可以与某个块链接，使用户轻松构建块。
- en: 'After adding a Technique block, the tool displays how to add the other appropriate
    blocks: fault predicting, failure prevention, failure elimination, and failure
    tolerance. The Technique block is an abstraction block in profile, and the four
    blocks above inherit it.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 添加 Technique 块后，该工具会显示如何添加其他适当的块：故障预测、故障预防、故障排除和故障容忍。Technique 块是一个在 profile
    中的抽象块，上述四个块都继承了它。
- en: 'A block can have three phases, as shown:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个块可以有三个阶段，如下所示：
- en: A compressed view
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 压缩视图
- en: A partially compressed view
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部分压缩视图
- en: An uncompressed view
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未压缩的视图
- en: By decreasing the amount of blocks on the screen, a compressed display enables
    the user to see the current editing block (see Figure [12-1](#Fig1)). The person
    can choose to just view the stated attributes since a partially-collapsed block
    only reveals the non-empty features of a block. Use Full View/Uncompressed View
    to examine all of a block’s attributes. The user may flip between the three viewpoints
    by clicking on the block twice. See Figure [12-2](#Fig2).![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig1_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig1_HTML.jpg)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过减少屏幕上的块数量，压缩显示使用户可以看到当前编辑的块（参见图 [12-1](#Fig1)）。用户可以选择仅查看指定的属性，因为部分折叠的块仅显示块的非空特性。使用全视图/未压缩视图来检查块的所有属性。用户可以通过两次单击块来在三个视点之间切换。参见图
    [12-2](#Fig2)。
- en: Figure 12-1
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-1
- en: SysML imported to BLOCKLY
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SysML 导入到 BLOCKLY
- en: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig2_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig2_HTML.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig2_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig2_HTML.jpg)'
- en: Figure 12-2
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-2
- en: Using a dropdown menu, the users can add blocks
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以使用下拉菜单添加块
- en: In addition, as illustrated in Figures [12-3](#Fig3) and [12-4](#Fig4), characteristics
    linked to selected building blocks can be shown for each block. This is accomplished
    by placing a mutator button on the upper-left side of each block.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如图 [12-3](#Fig3) 和 [12-4](#Fig4) 所示，可以显示与所选构建块相关联的特性。通过在每个块的左上角放置一个突变按钮来实现这一点。
- en: The supporting facility uses a freely accessible open source plug-in called
    Type-Indicator 5 to create an intuitive modeling environment. This plugin highlights
    all the blocks that are compatible (in yellow) with the current block as it is
    being moved (block cs4).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 支持设施使用一个名为 Type-Indicator 5 的免费开源插件创建直观的建模环境。此插件在移动当前块时突出显示所有与当前块兼容的块（以黄色显示）（块
    cs4）。
- en: The traceability of requirements must be examined and managed in an SoS project,
    therefore requirements management is critical. The needs may be broken down into
    categories based on points of view and building components, such as architecture,
    communication, and reliability.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SoS 项目中必须检查和管理需求的可追溯性，因此需求管理至关重要。需求可以根据观点和构建组件（如架构、通信和可靠性）的要点分解成不同类别。
- en: As a result, full traceability is provided since each building block satisfies
    the collection of criteria that it fulfills, and each building block of requirements
    controls the collection of building blocks that maintains it. To make the design
    more obvious, BLOCKLY allows you to add comments to blocks.![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig3_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig3_HTML.jpg)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，提供了完整的可追溯性，因为每个构件块都满足其满足的一系列标准，并且每个需求构件块都控制着维护其的构件块集合。为了使设计更加明显，BLOCKLY 允许您向块添加注释。
- en: Figure 12-3
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-3
- en: 'A block can be viewed in three different ways: collapsed, partially collapsed,
    and uncollapsed'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 块可以以三种不同的方式查看：折叠、部分折叠和未折叠
- en: An example of constraint usage is shown in Figure [12-4](#Fig4). Constraints
    can be utilized to find unusual twists that could be prone to an emerging stage
    in SoS. You can get these situations by using proper query in the models. When
    working with big models, it might be difficult to see the whole SoS, necessitating
    the use of specialized views.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 约束使用示例如图 [12-4](#Fig4) 所示。约束可用于查找可能在 SoS 的新阶段中容易出现的异常变化。您可以通过在模型中使用适当的查询来获取这些情况。当处理大型模型时，可能很难看到整个
    SoS，需要使用专门的视图。
- en: Instead of using lines to display connection between blocks, BLOCKLY uses *collapse*
    methods  to disguise the complexity of an SoS model. The model query is used to
    look for blocks that meet a set of requirements.![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig4_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig4_HTML.jpg)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: BLOCKLY 使用 *折叠* 方法来隐藏 SoS 模型的复杂性，而不是使用线来显示块之间的连接。模型查询用于查找满足一组要求的块。
- en: Figure 12-4
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-4
- en: A block’s building-blocks could be activated or disabled
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 块的构建块可以被激活或禁用
- en: It may also be used to see a model in a conventional perspective (such as showing
    the relationship between blocks and other blocks via lines).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 它还可以用于以传统视角查看模型（例如通过线显示块与其他块之间的关系）。
- en: To query a certain model, a user can right-click the working space and select
    Show Query Diagram. In the query diagram, the user can create filters for querying
    the model.^([1](#Fn1))
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要查询特定模型，用户可以右键单击工作空间并选择显示查询图。在查询图中，用户可以为查询模型创建过滤器。^([1](#Fn1))
- en: Returning true, for example, indicates that no filtration is necessary (i.e.,
    shows all the blocks for the model depicted in Figure [12-5](#Fig5)). This query
    generates the graph in Figure [12-5](#Fig5), which highlights all blocks of type
    RUMI using the filter:¹
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 true，例如，表示不需要过滤（即在图 [12-5](#Fig5) 中显示模型的所有块）。该查询生成图 [12-5](#Fig5)，突出显示使用过滤器的所有
    RUMI 类型的块：
- en: '*return b. of type == RUMI*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*return b. of type == RUMI*'
- en: Model querying assists in the visualization of custom SoS views and can help
    discover design problems.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 模型查询有助于可视化自定义 SoS 视图，并有助于发现设计问题。
- en: Adding a new connection to a block is a simple process. Using connections to
    existing blocks is one approach to constructing an SoS. Creating connections/links
    can let you reuse an available block, but it’s not the same as copying and pasting
    a block into BLOCKLY. The connected blocks are referenced via links. For example,
    on a workspace, CSs can be formed and only connections can be joined to the SoS
    block, as illustrated in Figure [12-5](#Fig5).![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig5_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig5_HTML.jpg)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 向块添加新连接是一个简单的过程。使用连接到现有块的连接是构建 SoS 的一种方法。创建连接/链接可以让您重用可用的块，但这与将块复制并粘贴到 BLOCKLY
    中不同。连接的块通过链接引用。例如，在工作区上，CSs 可以形成，只能连接到 SoS 块，如图 [12-5](#Fig5) 所示。![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig5_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig5_HTML.jpg)
- en: Figure 12-5
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-5
- en: Filtered view of SoS
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SoS 的过滤视图
- en: The modular SoS grouping enables the modularization of the design by allowing
    suitable blocks to be grouped together. For example, as illustrated in Figure
    [12-6](#Fig6), all CSs can be clustered together. The group block aids in the
    division of the model into useful groups.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 模块化的 SoS 分组可通过允许合适的块被组合在一起来实现设计的模块化。例如，如图 [12-6](#Fig6) 所示，所有 CSs 可以被聚集在一起。组块有助于将模型划分为有用的组。
- en: Whenever a group’s block is mentioned, the group name is also included to distinguish
    it from other blocks with similar titles.![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig6_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig6_HTML.jpg)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每当提及到一个组的块时，组名也会包含在内，以区别于具有类似标题的其他块。![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig6_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig6_HTML.jpg)
- en: Figure 12-6
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-6
- en: Type Indicator cs4 plug-ins are shown with in yellow
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 类型指示器 cs4 插件以黄色显示
- en: 12.2 Environment for SoS Behavior Simulation
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境为 SoS 行为模拟
- en: Behaviors  can be introduced to any block after a static model has been created.
    The user can add a behavior by right-clicking the affected block and selecting
    Add Behavior. The Python programming language may be used to write behaviors,
    which represents the code that will be performed throughout the simulation ( as
    seen in Figure [12-7](#Fig7)).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建静态模型后，可以向任何块引入行为。用户可以通过右键单击受影响的块并选择“添加行为”来添加行为。Python 编程语言可用于编写行为，它代表了整个仿真期间将执行的代码（如图
    [12-7](#Fig7) 所示）。
- en: The titles of the init, start, and run functions can be specified, and they
    are performed during startup, block startup, and simulation execution, respectively.
    A service block’s run function has a specific understanding and is presented as
    a TCP-IP server.¹
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 可以指定 init、start 和 run 函数的标题，并且它们分别在启动时、块启动时和仿真执行时执行。服务块的 run 函数具有特定的理解，并被表示为
    TCP-IP 服务器。¹
- en: All the behavior code created for all the blocks is merged into a single file
    during code generation. XML and Code generation The model may be produced to XML
    and code for simulating after it has been imported by clicking the necessary buttons
    on the tool’s top-right side.¹
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 所有为各个区块创建的行为代码在代码生成期间合并到单个文件中。XML 和代码生成模型可能会被生产到 XML，并在通过工具右上角的必要按钮点击导入后进行模拟。¹
- en: The following format is used to generate unique object names for all blocks:<blocktype>
    <blockname> <blockid>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下格式用于为所有区块生成唯一对象名称：<blocktype> <blockname> <blockid>
- en: '**Components of a simulator**. The simulator is a collection of Python scripts
    that are used to run the designer’s intended scenarios. The simulator’s main components
    are the object initializer, directory, activity diagrams, GUI, program execution
    sequence diagram, log generation, and clock.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟器的组成部分**。模拟器是一组用于运行设计师预期情景的 Python 脚本。模拟器的主要组成部分包括对象初始化器、目录、活动图、GUI、程序执行顺序图、日志生成和时钟。'
- en: '**Initializer for objects**. The simulation uses the constructor of every block
    described in the model to initialize it. Individual inputs are treated as texts,
    numbers, or objects, whereas many inputs are treated as an array.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象初始化器**。模拟使用模型中描述的每个区块的构造函数来初始化它。单个输入被视为文本、数字或对象，而多个输入被视为数组。'
- en: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig7_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig7_HTML.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig7_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig7_HTML.jpg)'
- en: Figure 12-7
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-7
- en: Blocks linked to requirements management are an example of such blocks
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 与需求管理相关联的区块是这样的区块的一个示例
- en: A member named “cardinality” may be found in some blocks such as CS or Wrapper
    or CPS. It specifies the number of items that will be simulated. This is accomplished
    by using Python’s deep_copy() method  on the original object. Every instance is
    given a unique ID ranging from 1 to *n,* where *n* is the model’s cardinality.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在某些区块中找到一个名为“基数”的成员，例如 CS 或包装器或 CPS。它指定将要模拟的项目数量。这是通过在原始对象上使用 Python 的 deep_copy()
    方法来完成的。每个实例被赋予一个从 1 到 *n* 的唯一 ID，其中 *n* 是模型的基数。
- en: For example, the following model generates an SoS called My_SoS with 200 CSs
    named cs_1. Every CS will have an instance ID property that ranges from 1 to 200.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下模型生成了一个名为 My_SoS 的 SoS，其中包含 200 个名为 cs_1 的 CS。每个 CS 都将具有从 1 到 200 的实例 ID
    属性。
- en: One of the key components of the simulator is the log. It is a service that
    keeps track of the services provided by the various CSs in an SoS. CSs utilize
    it to do analysis for a certain service.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟器的关键组成部分之一是日志。它是一个服务，用于跟踪 SoS 中各个 CS 提供的服务。CS 利用它来对某种服务进行分析。
- en: The registry is applied as a TCP-IP server in the simulator, allowing CSs to
    add, remove, and update their own relevant details.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注册表在模拟器中被应用为 TCP-IP 服务器，允许 CS 添加、删除和更新其自身的相关详细信息。
- en: The capacity to perform simulation on several linked computer systems sequence
    diagram sets is made possible by having a known common register. Related blocks
    for sequence diagrams assist in the creation of unambiguous sequence diagrams
    that may be immediately translated to code. The simulation replicates the sequence
    created by the user in the case of diagrams.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在多个链接的计算机系统序列图集上执行模拟的能力是通过具有已知的公共寄存器来实现的。用于序列图的相关块有助于创建明确的序列图，这些序列图可以立即转换为代码。在图的情况下，模拟复制了用户创建的序列。
- en: As a result, when the simulator has been launched and initialized, the code
    created from the sequence diagram (see Figure [12-8](#Fig8)) is run instantly.
    To simulate a situation, a sequence diagram is joined to the model (see Figure
    [12-9](#Fig9)); the sequence diagram is constructed with the support structure
    tool.![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig8_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig8_HTML.jpg)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，当模拟器已启动并初始化时，从序列图创建的代码（参见图[12-8](#Fig8)）会立即运行。为了模拟一种情况，一个序列图被加入到模型中（参见图[12-9](#Fig9)）；序列图是用支持结构工具构建的。![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig8_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig8_HTML.jpg)
- en: Figure 12-8
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-8
- en: Each block can fulfill certain criteria
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 每个块都可以满足特定的标准
- en: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig9_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig9_HTML.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig9_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig9_HTML.jpg)'
- en: Figure 12-9
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-9
- en: An illustration of a constraint in which the validity of the member variable
    m is checked
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 描述了一个约束的插图，在这个约束中，成员变量m的有效性被检查
- en: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig10_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig10_HTML.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig10_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig10_HTML.jpg)'
- en: Figure 12-10
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-10
- en: Using constraints to detect emergence in a model
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用约束在模型中检测出现
- en: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig11_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig11_HTML.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![../images/520777_1_En_12_Chapter/520777_1_En_12_Fig11_HTML.jpg](../images/520777_1_En_12_Chapter/520777_1_En_12_Fig11_HTML.jpg)'
- en: Figure 12-11
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-11
- en: Result of the “return true” query
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: “return true”查询的结果
- en: 12.3 Review Questions
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.3 复习问题
- en: '1.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: “BLOCKLY is a library for creating applications with blocks. Users can utilize
    visual blocks to construct scripts and programs in block programming.” Is this
    statement correct or incorrect?
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “BLOCKLY是一个用于创建带有块的应用程序的库。用户可以使用可视块构建块编程中的脚本和程序。”这个说法正确吗？
- en: 2.Which of the following describes BLOCKLY 4SoS ?
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2.以下哪项描述了BLOCKLY 4SoS？
- en: a.
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: Each block represents a portion of code that can be layered and converted into
    a metamodel with ease.
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个块代表了一部分代码，可以堆叠并轻松转换为元模型。
- en: b.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: Each block represents a portion of code that could be stacked and converted
    into an algorithm with ease.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个块代表了一部分可以被堆叠并轻松转换为算法的代码。
- en: c.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: Each block represents a coding chunk that can be readily stacked and translated.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个块代表一个可随时堆叠和转换的编码块。
- en: d.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: All the above.
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以上全部。
- en: 3.Which of the following statements is correct for *simulator* components?
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3.以下哪种描述是关于 *模拟器* 组件的正确？
- en: a.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: A simulator is a collection of Python programs that are used to run the designer’s
    intended scenarios.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个模拟器是一组用于运行设计者预期情景的Python程序集合。
- en: b.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: A simulator is a collection of programs designed to carry out the designer’s
    planned scenarios.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模拟器是一组旨在执行设计者计划情景的程序集合。
- en: c.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: A simulator is a collection of Java applications that are used to run the scenarios
    that the designer has prepared.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个模拟器是一组用于运行设计者准备的情景的Java应用程序集合。
- en: d.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: None of the above.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以上都不是。
- en: 4.Which of the following statements is correct for *event* ?
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4.以下哪种描述是关于 *事件* 的正确？
- en: a.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: a.
- en: BLOCKLY comes with everything you need to create and render blocks in a drag-and-drop
    editor.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: BLOCKLY 包含了创建和在拖放式编辑器中呈现块所需的一切。
- en: b.
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: b.
- en: BLOCKLY comes with everything you need to define and display blocks.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: BLOCKLY 包含了定义和显示块所需的一切。
- en: c.
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: c.
- en: BLOCKLY comes with everything you need to create and render blocks in an editor.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: BLOCKLY 包含了创建和在编辑器中呈现块所需的一切。
- en: d.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: d.
- en: All of these.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以上全部。
- en: '5.'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: “Requirements management is a crucial component of the SoS architecture, since
    it allows for the viewing and monitoring of requirement traceability. The perspective
    and building blocks can be used to split requirements.” Is this statement correct
    or incorrect?
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “需求管理是SoS架构的关键组成部分，因为它允许查看和监控需求的可追溯性。透视图和构建块可用于拆分需求。” 这个说法正确还是错误？
- en: 12.4 Review Answers
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.4 复习答案
- en: '1.'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Answer: Correct, BLOCKLY is a library for developing block-based apps. In block
    programming, users can use visual blocks to create scripts and programs.'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：正确，BLOCKLY 是一个用于开发基于块的应用程序的库。在块编程中，用户可以使用可视块来创建脚本和程序。
- en: '2.'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Answer: C, Every block represents a coding chunk that could be readily stacked
    and translated.'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：C，每个块代表一个可随时堆叠和转换的编码块。
- en: '3.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Answer: B, A simulator is a collection of programs designed to carry out the
    designer’s planned scenarios'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：B，一个模拟器是一组旨在执行设计者计划情景的程序集合
- en: '4.'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'Answer: A, BLOCKLY comes with everything you need to create and render blocks
    in a drag-and-drop editor.'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：A，BLOCKLY 包含了创建和在拖放式编辑器中呈现块所需的一切。
- en: '5.'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: 'Answer: Correct, because it enables for the viewing and monitoring of requirement
    traceability, requirements management is a critical component of the SoS design.
    To divide needs, the viewpoint and building blocks can be employed.'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案：正确，因为它使得能够查看和监控需求的可追溯性，需求管理是SoS设计的关键组成部分。为了分割需求，可以使用视角和构建块。
- en: 12.5 Summary
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.5 总结
- en: This chapter explained the BLOCKLY 4SOS tool. It is a system-of-systems modeling,
    validation, querying, and simulation tool.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了 BLOCKLY 4SOS 工具。它是一个系统级建模、验证、查询和模拟工具。
- en: The goal of the AMADEOS supporting facility is to make designing SoS with the
    AMADEOS ideas and the BLOCKLY tool simple and intuitive. This tool is very helpful
    when designing a distributed system (a cyber-physical system).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: AMADEOS 支持工具的目标是利用 AMADEOS 的理念和 BLOCKLY 工具来简化和直观地设计 SoS。在设计分布式系统（一个网络物理系统）时，这个工具非常有帮助。
- en: The next chapter outlines the first project of cyber-physical systems with the
    help of Kilobots.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章概述了利用 Kilobots 的帮助完成的第一个网络物理系统项目。
