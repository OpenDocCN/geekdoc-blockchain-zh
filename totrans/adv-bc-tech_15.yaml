- en: © The Author(s), under exclusive license to Springer Nature Switzerland AG 2022Y.
    Maleh et al. (eds.)Advances in Blockchain Technology for Cyber Physical SystemsInternet
    of ThingsTechnology, Communications and Computing[https://doi.org/10.1007/978-3-030-93646-4_15](https://doi.org/10.1007/978-3-030-93646-4_15)
  prefs: []
  type: TYPE_NORMAL
- en: Applying Advanced Wireless Network Cluster-Tree Topology to Optimize Covid-19
    Sanitary Passport Blockchain-Based Security in a Constrained IoT Platform
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Sanaa El Aidi^([1](#Aff7)  ), Fatima Zahra Hamza^([1](#Aff7) [ ](#ContactOfAuthor2)),
    Siham Beloualid^([1](#Aff7)), Abderrahim Bajit^([1](#Aff7)), Habiba Chaoui^([1](#Aff7))
    and Ahmed Tamtaoui^([2](#Aff8) [ ](#ContactOfAuthor6))(1)Laboratory of Advanced
    Systems Engineering (ISA), National School of Applied Sciences, Ibn Tofail University,
    Kenitra, Morocco(2)National Institute of Posts and Telecommunications (INPT-Rabat),
    SC Department, Mohammed V University, Rabat, MoroccoFatima Zahra HamzaEmail: [fatimazahra.hamza@uit.ac.ma](mailto:fatimazahra.hamza@uit.ac.ma)Ahmed TamtaouiEmail:
    [tamtaoui@inpt.ac.ma](mailto:tamtaoui@inpt.ac.ma)KeywordsAT2 blockchainCoAPCoAP
    clientCoAP *server* IoTPythonMicrocontrollerAESSHA256Artificial intelligenceCluster
    tree'
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: IoT is a group of infrastructures linking several connected objects that perform
    one or more functions and communicate through the Internet. IoT allows managing
    the communication between objects and the transport and the access of data [[1](#CR1)].
    IoT is a network that must guarantee communication between objects while respecting
    security and confidentiality requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure this security and fight against cyberattacks, blockchain is one of
    several solutions proposed to protect data. Blockchain is a storage technology
    that contains all the information communicated between several users. It ensures
    the three main requirements of security: (1) confidentiality, i.e., only the user
    can read the message; (2) integrity, ensuring that the message is received as
    it is; and (3) availability, services are available to the user.'
  prefs: []
  type: TYPE_NORMAL
- en: BC uses a public key as the user’s identity. It allows a sender to designate
    a recipient. Each exchange is accompanied by a key that cannot be modified or
    deleted to prevent any external disruption of the system. BC then offers a high
    level of confidentiality [[2](#CR2)].
  prefs: []
  type: TYPE_NORMAL
- en: The particularity of blockchain is how all transactions form a chain. Each node
    of the IoT network has a strong cryptography that guarantees a secure exchange
    with other nodes and allows for regular monitoring and security updates of the
    system. The blockchain transparently records all transactions so that the source
    of the error can be identified in case of an incident and the system can immediately
    solve the problem.
  prefs: []
  type: TYPE_NORMAL
- en: The blockchain is then a database that manages the link between several nodes
    in a peer-to-peer (P2P) network. The P2P function allows for direct communication
    between several peers. A node can create a transaction signed with a private key
    to guarantee the identity of the owner. It can execute a transaction, transmit
    or receive it, and create new blocks and validate transactions [[3](#CR3)].
  prefs: []
  type: TYPE_NORMAL
- en: 'The consensus of all nodes must verify each transaction. Several consensus
    algorithms ensure that transactions are reliable and that the rules are respected.
    There are two common algorithms: the proof of work (PoW) that uses the hash function,
    which is a function that requires great power to calculate the probability of
    finding a unique signature for the validation of the transaction. And the second
    algorithm is the proof of participation (PoP) which ensures that distributed nodes
    validate the solution found by the miners before the latter can add a new block
    to the blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Consensus algorithms are notoriously difficult and require a lot of computation
    and verification time. However, several kinds of research show that consensus
    is not really necessary to implement a decentralized asset transfer system using
    asynchronous trustworthy transfers (AT2) [[4](#CR4)]. AT2 can be used to validate
    transactions either by using the quorum in the case of an authorized or small
    unauthorized network, in which the quorum checks if the action is correct to validate
    it, or by randomly selecting the viewpoint of a specific number of nodes in the
    case of a worldwide unauthorized network.
  prefs: []
  type: TYPE_NORMAL
- en: 'During the covid-19 health crisis, impacts of the crisis were very strong,
    and several organizational changes were developed: lockdowns and deconfinement
    telecommuting, travel restrictions, and others.'
  prefs: []
  type: TYPE_NORMAL
- en: Many organizations were challenged to adjust very quickly to the emergency.
    And for this, the use of communication technologies was and will remain important
    for maintaining “normal” life between people. The virus pushed several researchers
    and decision-makers to find a solution to keep the social aspect between people,
    live their daily lives in the same way as before the covid-19, and protect their
    lives through several rules such as social distancing, wearing the mask, and vaccination.
  prefs: []
  type: TYPE_NORMAL
- en: Several innovations and adaptations are then deployed during the crisis. The
    blockchain is then used to secure a large part of these innovations. We quote
    the project [[5](#CR5)], which proposed a solution to decrease the propagation
    of covid-19 by tracing the trajectories of patients and their relatives. Securing
    the privacy of patients was developed through a blockchain platform that protects
    the user’s spatiotemporal information.
  prefs: []
  type: TYPE_NORMAL
- en: A team from Nirma University in India has proposed a solution [[6](#CR6)] to
    monitor the social distance between people using artificial intelligence. Using
    static CCTV cameras and lens-equipped drones, the proposed system uses fast convolutional
    region-based neural networks (RCNN) and “Only Look Once” (YOLO) models to recognize
    objects (e.g., people) in real time. It is also possible to calculate the distance
    between two people using an efficient Euclidean-based method. The physical layer
    and administrative services can exchange data reliably and securely with the advent
    of blockchain technology. Payment of fines for social distance violations can
    also be made using a blockchain-powered wallet. Blockchain is also used to secure
    the platform to pay the fine in case of noncompliance with the distancing rule.
    The problem of security of patient data of the pandemic was a challenge to governments.
    A research was done in this direction to clarify benefits of using blockchain
    to secure information sharing between people and government accurately and validly,
    as well as contact tracing [[7](#CR7)–[9](#CR9)].
  prefs: []
  type: TYPE_NORMAL
- en: In this work, we implemented a smart, synchronized, and secure medical IoT platform
    that monitors a public area using a set of tests. The people in place must present
    their vaccination QR code. A first test is performed to read this QR code. If
    the code is validated, we perform a second test to validate the person’s identity
    corresponding to the vaccination code using the facial recognition algorithm.
    In the positive case, the person will be able to access the public area. Citizens
    who are still not vaccinated must present a negative PCR test not exceeding 48 h.
    We then perform two verification tests, one test to read the barcode of the PCR
    test and a second test for facial recognition of its carrier. In the situation
    where a person is presented with neither his vaccination certificate nor a PCR
    test, we develop a strategy of three tests with three IoT nodes.
  prefs: []
  type: TYPE_NORMAL
- en: The first test is to measure the temperature of the citizen. If it exceeds 37
    degrees and/or the citizen exceeds the time, access to the public area is denied.
    We move on to the third node in the case where the temperature is below 38 degrees.
    This node consists of identifying the client IoT object by radio frequency identification
    (RFID), and it then determines the identity of the citizen and his health information.
    If the citizen exceeds the specified time or the information provided is wrong,
    then access is denied. If the result of the third node is positive, we move on
    to the last node, which is based on the principle of facial recognition. This
    node verifies that the system has used the citizen’s photo to recognize his face
    and identity to access the public area.
  prefs: []
  type: TYPE_NORMAL
- en: Our platform utilizes the InterPlanetary File System (IPFS) as its core system
    to store secured data and distribute it to other nodes. In the IPFS, initializing
    the repository generated public/private keys and formed a local folder that hosted
    the IPFS configuration and stored repository objects from a node. The node ID
    was made by using a hash of its public key. Peers were restricted to a private
    IPFS network prepared for the process of distributing files between peers automatically.
    Peers can access a published file on IPFS to keep in the local copy [[10](#CR10),
    [11](#CR11)] (Fig. [1](#Fig1)).![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: Intelligent and secure static/dynamic medical IoT platform
  prefs: []
  type: TYPE_NORMAL
- en: 2 Sanitary Passport Blockchain-Based IoT Platform
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our work consists of securing the transfer and storage of data, and for the
    transfer, we started by securing the TLS communication using the RSA-SHA256 encryption
    algorithm, and we also added a security layer on the CoAP protocol using the RSA/AES-SHA256
    algorithm to analyze the traffic and see the best in terms of execution, memory
    occupation, and energy consumption, and for data storage security, we used the
    AT2 (asynchronous trustworthy transfers) blockchain technology which is a class
    of non-consensus algorithms, and we used IPFS as a central system to store the
    secured data and distribute it to other nodes in a P2P network.
  prefs: []
  type: TYPE_NORMAL
- en: Medical IoT Applicative Protocols MQTT/CoAP
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: From the studies already done, it has been found that IoT platforms are vulnerable
    to attacks from the network system, and especially for healthcare platforms that
    require better security to ensure confidentiality and data integrity and protect
    the privacy of patients. For this reason, we thought of adding a security layer
    on IoT communication protocols such as MQTT and CoAP.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to select the best IoT communication protocol according to different
    criteria, we compared the following two protocols:'
  prefs: []
  type: TYPE_NORMAL
- en: The MQTT protocol is defined as a communication protocol based on the publish-subscribe
    architecture using the TCP/IP protocol. It uses three types of quality of service
    to ensure a better quality of sending/receiving messages. We define the first
    type of quality-of-service QoS0 which is used to send the message only once and
    without acknowledgment of receipt. The second type of QoS is QoS1 which allows
    to send the message at least once until the MQTT broker acknowledges its reception.
    The third type of QoS is QoS2 which sends a message while ensuring that the message
    is received only once, thus avoiding duplicates [[12](#CR12)–[14](#CR14)].
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The CoAP protocol is a lightweight protocol that uses the UDP protocol and is
    based on the REST architecture that provides *get*, *post*, *put*, and *delete*
    methods. It uses a 4-byte header, which is appropriate for restricted nodes [[15](#CR15),
    [16](#CR16)].
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this work, we used CoAP protocol because it consumes less power, energy,
    resource, bandwidth, and latency comparing to MQTT and HTTP protocols (Fig. [2](#Fig2)).![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig2_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 2
  prefs: []
  type: TYPE_NORMAL
- en: Diagram sequence of the secured CoAP IoT client’s *payload*
  prefs: []
  type: TYPE_NORMAL
- en: Medical IoT Protocol Payload Security
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are several encryption algorithms to guarantee the five pillars of security
    using symmetric and asymmetric encryption such as RSA, Digital Signature Algorithm
    (DSA), AES, Triple Data Encryption Algorithm (3DES), Elliptic-curve cryptography
    (ECC), Elliptic Curve Integrated Encryption Scheme (ECIES), and SHA. For our work,
    we have opted for the use of RSA and AES combined with SHA256 [[17](#CR17), [18](#CR18)].
  prefs: []
  type: TYPE_NORMAL
- en: In our platform, we encrypted data with three types of encryption algorithms
    RSA, RSA, and AES, to see the impact of each algorithm on the platform. The first
    algorithm, AES, is a symmetric key algorithm in which the sender and receiver
    share a common key, used to encrypt the message. And we used the RSA algorithm
    which is based on two keys, public and private key. The public key is used to
    encrypt messages, and the private key is also derived from these same two prime
    numbers, and this key is used to decrypt the message, and finally, we have used
    the AES algorithm [[19](#CR19)].
  prefs: []
  type: TYPE_NORMAL
- en: 'We have also secured the TLS connection by the RSA algorithm with SHA256, TLS
    [[20](#CR20)] is a security protocol of the transport layer, it is used to provide
    and ensure secure channels for end-to-end communications, and this protocol works
    in two phases: the first phase is based on the key agreement, the two parties
    negotiate and agree on a set of encryption algorithms, and then a cryptographic
    protocol of key exchange is used to perform mutual authentication and to establish
    a shared session key. In the second phase, the agreed session key performs an
    authenticated encryption [[21](#CR21)].'
  prefs: []
  type: TYPE_NORMAL
- en: Medical IoT Network Topologies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Our Medical IoT platform is developed on the cluster topology, which is a mix
    between advantages of the mesh topology for the reliability of the communication
    and benefits of star which is fast and provides less memory consumption.
  prefs: []
  type: TYPE_NORMAL
- en: '*Cluster tree* is a case of tree topology where the parent and its child are
    named cluster. The relationship between nodes is not equal due to the existence
    of a parent-child relationship. Cluster tree is structured as a tree with the
    top node, other parent nodes are redirectors, and the end of the tree is end devices.
    The cluster-tree network has the advantage of easy addition of nodes, making it
    capable of expansion and bringing together the benefits of star and mesh topologies.
    The cluster-tree structure allows the network to predict the delay time of data
    exchanges, and the coordinator has a global monitoring of the system and can have
    the status of all nodes in the network [[22](#CR22), [23](#CR23)].'
  prefs: []
  type: TYPE_NORMAL
- en: '*Mesh topology* is a topology in which each computer and network device is
    interconnected. The advantage of this topology is that nearby nodes consume less
    energy and the network is easy to add and remove devices. In case of failure,
    the structure of this topology allows it to go to other nodes, and the system
    continues to work. The disadvantage of this topology is that it is more complex
    and requires a higher overhead, which increases the cost of installation and generally
    takes longer [[24](#CR24)].'
  prefs: []
  type: TYPE_NORMAL
- en: '*Star topology* consists of a coordinator and nodes. Nodes communicate with
    each other through the coordinator. The advantage of this topology is that it
    is easy to install and the data transmission time is short since only the part
    between the primary node and the wires can communicate. It is also efficient in
    fault detection because each device requires only one port and no collision can
    occur. The connection between nodes is thus easy and does not require a large
    number of cables. But the major problem is that the exchange between nodes depends
    on the coordinator, which involves a lot of resources and regular maintenance.
    In case of a malfunction of the coordinator, the whole network will stop working,
    so the reliability of communication is lower [[25](#CR25), [26](#CR26)].'
  prefs: []
  type: TYPE_NORMAL
- en: '*Tree topology* consists of a coordinator and the routers and end nodes called
    child. Each child can only communicate with its parent router or core node. This
    is a combination of the star and mesh topology. The advantage of tree is that
    if one node goes down, other nodes can continue to operate unaffected. However,
    the child cannot exchange with the network if the parent is disconnected. The
    size of the connecting cables between nodes increases with the length of the network,
    making the system more complex to maintain and very limited and increasing the
    cost of installing the network [[27](#CR27), [28](#CR28)].'
  prefs: []
  type: TYPE_NORMAL
- en: Medical IoT Blockchain-Based Data Storage Security
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The development of this platform is based on various topologies (star, tree,
    mesh, cluster tree) depending on the type of area (urban, tourist, industrial,
    sports, commercial, etc.). We also used two kinds of security to secure the information:
    connection security and payload security. For connection security, we used SSL,
    and for payload security, we used RSA/AES-SHA256 encryption algorithms to provide
    better security regarding execution time, memory space occupation, and energy
    consumed. As for data storage, blockchain is used to make information decentralized
    because it works to gather information in blocks. Our platform relies primarily
    on CoAP communication protocol, and the application model of IoT CoAP server is
    implemented in python environment using FastAPI framework. The python application
    manages the AT2 blockchain and the IPFS P2P network, adds and retrieves the files
    from the IPFS private network, encrypts the content of the files, and exposes
    its functionalities through REST services, as seen in Fig. [1](#Fig1). The front
    end presents IoT client node and IoT Web client, which communicate with the backend
    using MQTT or CoAP protocol; the back end contains RESTful services that provide
    interoperability between computer systems on the Internet. RESTful Web services
    allow the requesting systems to access and manipulate textual representations
    of Web resources by using a predefined set of stateless operations. Also, the
    backend includes the repositories, which uses both AT2 bridge and IPFS APIs to
    communicate with the blockchain and the P2P network, respectively, and it exposes
    the application functionalities through RESTful Web services; lastly, the P2P
    network contains AT2 blockchain and IPFS network, which are deployed to Azure
    cloud properly secured and served with HTTPS using traffic [[29](#CR29)].'
  prefs: []
  type: TYPE_NORMAL
- en: A peer-to-peer (P2P) network is a collection of nodes that share files with
    each other. Each node in this network has the same priority level and performs
    the same tasks as other nodes [[7](#CR7)]. This type of network does not contain
    a central node that manages the sending and receiving of data, so each node can
    act as both a server and a client depending on other nodes [[8](#CR8)].
  prefs: []
  type: TYPE_NORMAL
- en: To ensure data security for our platform, blockchain technology was used, which
    is considered an open and distributed ledger that can record transactions between
    two parties in an efficient, transparent, verifiable, and permanent manner, and
    this technology serves to create trust between different entities where trust
    is nonexistent or unproven. As a result, these entities are willing to engage
    in transactions involving the sharing of data that they might not otherwise have
    done or that they would have required an intermediary to do so, so the elimination
    of a third party in data exchange transactions promotes the security and privacy
    of the participants. This principle of data decentralization allows data to be
    shared within an ecosystem of companies where no single entity is exclusively
    responsible [[7](#CR7)], and blockchain offers better security because it creates
    an unalterable record of transactions with end-to-end encryption, which excludes
    fraud and unauthorized activities. In addition, blockchain data is stored on a
    network of computers, making it virtually impossible to hack. Furthermore, blockchain
    can address privacy concerns better than traditional computer systems by anonymizing
    data and requiring permissions to limit access.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain technology will allow us to save file sharing transactions and their
    details securely, authentically, fastly, and inexpensively. In our proposed secured
    medical IoT platform, we have used the AT2 (asynchronous trustworthy transfers)
    blockchain, a class of consensus-less algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The objective of this work is to apply a security layer on our platform by using
    encryption algorithms such as RSA/AES/SHA256 as well as see the impact each topology
    has on our platform, in addition to implementing the best communication protocol
    that matches best the needs of the platform. Therefore, figures show comparative
    results of implementing CoAP protocol in our platform regarding execution time
    and memory occupation. We adopted the cluster-*tree* topology for the proper functioning
    of our platform and also apply RSA and AES encryption methods to finally adopt
    the one that conserves as much energy as it can and is very hard to crack.![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig3a_HTML.png)![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig3b_HTML.png)![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig3c_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 3
  prefs: []
  type: TYPE_NORMAL
- en: Average execution time for all scenarios
  prefs: []
  type: TYPE_NORMAL
- en: According to the previous results, we noticed that MQTT does not support message
    labeling, which forces clients to know the type and format of the message sent
    in advance to establish communication. Unlike the CoAP protocol, which provides
    default support and offers built-in message handling, nodes can connect. MQTT
    is also known for its faster execution time than CoAP. MQTT runs on TCP, based
    on connection establishment and closure, which increases overhead and causes high
    memory usage. On the other hand, CoAP uses the UDP protocol, which works based
    on fire and forget, reducing the size of the message and, therefore, the memory
    used. The results also showed that CoAP requires less energy and thus consumes
    less resources compared to MQTT.
  prefs: []
  type: TYPE_NORMAL
- en: For security, we opted for CoAP because MQTT is a protocol that supports the
    lowest level of security based on a username and password. At the same time, CoAP
    uses multiple encryptions and authentication methods.
  prefs: []
  type: TYPE_NORMAL
- en: From these results (Figs. [3](#Fig3) and [4](#Fig4); Tables [1](#Tab1), [2](#Tab2),
    and [3](#Tab3)), we can observe that this consumption is because of RSA being
    an asymmetric algorithm that uses two large keys for encryption and decryption
    (public and private key), which allows it to offer great security and makes it
    very robust and strong against any attack. However, this does not make it suitable
    for our platform due to its high resource consumption. As for AES, it is a symmetrical
    algorithm that uses only one key for encryption and decryption, which is why it
    consumes much fewer resources than RSA (Tables [1](#Tab1), [2](#Tab2), and [3](#Tab3))
    and is the most recommended for IoT platforms because it is reliable in terms
    of communication, rapidity, and data security.Table 1
  prefs: []
  type: TYPE_NORMAL
- en: Time consumption and RAM occupation of the first scenario
  prefs: []
  type: TYPE_NORMAL
- en: '|   | Star | Tree | Mesh | Cluster |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Time (s) | RSA | 10.13 | 17.46 | 20.12 | 12.47 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 6.71 | 7.72 | 9.56 | 7.70 |'
  prefs: []
  type: TYPE_TB
- en: '| RAM (Mb) | RSA | 244.6 | 249.4 | 268.0 | 251.0 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 222.3 | 225.6 | 237.4 | 230.2 |'
  prefs: []
  type: TYPE_TB
- en: Table 2
  prefs: []
  type: TYPE_NORMAL
- en: Time consumption and RAM occupation of the second scenario
  prefs: []
  type: TYPE_NORMAL
- en: '|   | Star | Tree | Mesh | Cluster |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Time (s) | RSA | 13.38 | 17.46 | 21.38 | 14.91 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 6.42 | 7.92 | 9.76 | 7.71 |'
  prefs: []
  type: TYPE_TB
- en: '| RAM (Mb) | RSA | 189.3 | 179.5 | 207.5 | 199.5 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 162.9 | 167.3 | 175.1 | 171.1 |'
  prefs: []
  type: TYPE_TB
- en: Table 3
  prefs: []
  type: TYPE_NORMAL
- en: Time consumption and RAM occupation of the third scenario
  prefs: []
  type: TYPE_NORMAL
- en: '|   | Star | Tree | Mesh | Cluster |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Time (s) | RSA | 11.93 | 15.72 | 18.95 | 11.89 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 7.07 | 7.52 | 8.51 | 7.61 |'
  prefs: []
  type: TYPE_TB
- en: '| RAM (Mb) | RSA | 200.7 | 204.8 | 219.0 | 208.7 |'
  prefs: []
  type: TYPE_TB
- en: '| AES | 173.9 | 179.4 | 190.0 | 181.9 |'
  prefs: []
  type: TYPE_TB
- en: When it comes to security algorithms RSA and AES, AES is considered secure.
    The size of the AES key is nearly 256 bits, while RSA has only 112 bits of security,
    which makes AES stronger against attacks. The advantage of AES is that it is faster
    in processing and more powerful. RSA is an asymmetric algorithm, so it uses both
    encryption and decryption keys, while AES is a symmetric algorithm and uses only
    one key.
  prefs: []
  type: TYPE_NORMAL
- en: AES is a symmetric algorithm that uses only one key for encryption and decryption,
    and that is exactly why it is greatly less consuming than RSA. We also found that
    AES can be implemented in both hardware and software. It uses higher length key
    sizes such as 128, 192, and 256 bits for encryption. Hence, it makes the AES algorithm
    more robust against hacking, and for 128 bit, about 2128 attempts are needed to
    break. This makes it very difficult to hack it; as a result, it is a very safe
    protocol.
  prefs: []
  type: TYPE_NORMAL
- en: 4 Conclusion and Perspectives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This developed platform will enable us to minimize the spread of covid-19 by
    controlling citizens’ access to public areas and keeping in mind that there are
    three types of citizens: the vaccinated ones, the ones with the PCR test, and
    the ones with only an RFID tag. The platform relies on the Constrained Application
    Protocol to ensure reliable communication between nodes, and it also relies on
    cluster-tree topology as the main network topology. To further secure the communication
    between nodes, we opted for the AES-SHA256 cryptography algorithm to encrypt the
    data and information exchanged.'
  prefs: []
  type: TYPE_NORMAL
- en: In future work, we will implement other security methods such as ECIES and discuss
    radio frequency protocols such as 6LoWPAN, Zigbee, and LoRa, which are known for
    their efficiency in IoT networks.![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig4a_HTML.png)![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig4b_HTML.png)![](../images/513458_1_En_15_Chapter/513458_1_En_15_Fig4c_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 4
  prefs: []
  type: TYPE_NORMAL
- en: Average memory occupation for all scenarios
  prefs: []
  type: TYPE_NORMAL
