- en: © Elad Elrom 2019Elad ElromThe Blockchain Developer[https://doi.org/10.1007/978-1-4842-4847-8_1](https://doi.org/10.1007/978-1-4842-4847-8_1)
  prefs: []
  type: TYPE_NORMAL
- en: 1. Blockchain Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Elad Elrom^([1](#Aff2) )(1)New York, NY, USAThis chapter will serve as your
    ground school before you “take off” toward development. It will introduce basic
    concepts that will help you to understand the blockchain technology. This chapter
    is split into four parts.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Cryptoeconomics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain Explained
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptocurrencies Overload
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain P2P Network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To understand cryptoeconomics, you first need to understand concepts such as
    encryption and decryption, private-public keys, cryptography, digital assets,
    cryptography, and cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: Once you understand these basic concepts, I will cover blockchain. I will cover
    the pieces that make up an individual blockchain, such as blocks, and how the
    blocks are linked together, as well as the problems with blockchain such as double
    spending. I will also explain cryptomining, cryptominers, and cryptocurrency wallets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, I will cover the different types of cryptocurrencies: bitcoin, tokens,
    and alternative cryptocurrency coins (altcoins).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Last, I will cover the P2P network that is used with the blockchain technology
    and the different layers that make up the network: consensus layer, miner layer,
    propagation layer, semantic layer, and application layer.'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Cryptoeconomics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The world of crypto is full of technical jargon that can confuse even the savviest
    technology ninja. Bitcoin introduced the concept of cryptoeconomics and paved
    the way for the creation of many blockchain platforms. Before we dive deep into
    how a blockchain works, let’s understand what cryptoeconomics is and the underlying
    concepts behind a blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Verbal communication is based on selecting words to describe a message you want
    to convey. However, sometimes you want to communicate with only certain people
    while excluding others. A good example is during wartime; a commander communicates
    with soldiers stationed on the front line while ensuring the enemy is unable to
    listen. The commander could use encryption for this communication.
  prefs: []
  type: TYPE_NORMAL
- en: Electronically speaking, today all shopping sites offer their merchandise over
    an encryption protocol, called Secure Sockets Layer (SSL), that can protect your
    personal information from hackers. Video encryption and decryption are common
    to ensure the delivery of video to authorized members only, and on personal computers,
    people often use encryption to back up and protect files and passwords.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, as a developer, you likely sent encrypted messages and also decrypt
    incoming messages with the help of libraries as all programming languages offer
    string encryption and decryption functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let’s look at some definitions:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Encryption* : Encryption is a process of converting your message into code
    so that only authorized parties can access it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Decryption* : Decryption is reversing the encryption process so that the message
    can be converted to the original message.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Cryptography* : This is using the techniques of encryption and decryption
    to send and receive messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Cryptocurrency* : This is using cryptography the same way as the earlier SSL
    or video example but specifically to fit the needs of a digital asset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *digital asset* can be anything of value, such as the combination to your
    home safe, a secret password, a list, a message, electronic cash, a document,
    a photo, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '*Cryptoeconomics* : This is the combination of cryptography and economics to
    provide a platform to pass digital assets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For further clarification, let’s look at these terms in more detail and apply
    them to the topics I will be covering in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Ig-pay Atin-lay
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To begin, let’s go back in time. Have you ever spoken as a child in Pig Latin?
    The secret Pig Latin language is simple. You take off the first letter of the
    word you want to say and then move the letter to the end of the word, as well
    as add the sound “ay.”
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: “Pig” become “ig-pay.”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Latin” becomes “atin-lay.”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What we just have done is encryption. Then to understand the words we have encrypted,
    we need to work backward.
  prefs: []
  type: TYPE_NORMAL
- en: “Ig-pay” becomes “pig” by removing “ay” from the end and taking the last letter
    and putting it as the first letter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Similarly, “atin-lay” becomes “Latin.”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What we have just done is decryption. Children are able to use these techniques
    to encrypt and decrypt words in a simple form of cryptography.
  prefs: []
  type: TYPE_NORMAL
- en: Encryption/Decryption
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Encryption enables you to pass messages between specific parties in a secure
    manner so excluded parties will not understand them. Throughout history, there
    was a need to be able to send secret messages between parties. One party sends
    an encrypted message at one place, and then the other party is able to receive
    and decrypt the message elsewhere.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, encryption was used a lot during World War I (WWI) and World War II
    (WWII). The Nazis used a machine called Enigma to encrypt and decrypt messages
    (see Figure [1-1](#Fig1)). The Allies figured out a way to break the Nazi Enigma
    machine’s secret code and decrypt the messages. This is believed to have shortened
    WWII by years.![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig1_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig1_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-1
  prefs: []
  type: TYPE_NORMAL
- en: 'Enigma machine. Photo credit: wikimedia.org.'
  prefs: []
  type: TYPE_NORMAL
- en: Encryption and decryption went from pure Army usage to public usage by way of
    the development of the Data Encryption Standard (DES) by IBM in 1970 and the invention
    of key cryptography in 1976\. In fact, in the past, cryptography and encryption
    were synonymous.
  prefs: []
  type: TYPE_NORMAL
- en: Encryption + Decryption = Cryptography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As mentioned, cryptography  is the process of using the techniques of encryption
    and decryption. The word *cryptography* came from the Greek word *kryptos*, which
    means hidden or secret.
  prefs: []
  type: TYPE_NORMAL
- en: In the Pig Latin language example, I described how you can encrypt and decrypt
    words. That technique of removing the first letter and adding it to the end with
    “ay,” and then vice versa, is cryptography. Without knowledge of the technique,
    you wouldn’t be able to understand the Pig Latin language.
  prefs: []
  type: TYPE_NORMAL
- en: Most people are probably smart enough to figure out the secret Pig Latin language
    as it’s simple in nature; however, a complex encryption example would be a different
    story.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, going back to the WWII Enigma machine, the Nazis were passing
    messages over the air. The Allies were capable of receiving these messages (the
    messages were the “public keys”), but without a way to decode them (the “private
    keys”), it was not enough. It took a scientist named Turing and others five-and-a-half
    months to decrypt the Nazi’s secret messages.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A cryptographic *key* can be used to encrypt a message. The encrypted message
    can then be decrypted only by using the second key (a private key) that is known
    only to the recipient.
  prefs: []
  type: TYPE_NORMAL
- en: Turing’s contribution was to automate a machine that was capable of figuring
    out different settings the Nazis made in their Enigma machine so they could decrypt
    messages In other words, it automated the process of searching for the private
    key. That machine was called *bombe*.
  prefs: []
  type: TYPE_NORMAL
- en: Digital Assets + Cryptography = Cryptocurrency
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Cryptocurrency  is a digital asset designed so that electronic cash is able
    to be exchanged using strong cryptography (encryption and decryption) to ensure
    the security of funds, transactions, and the creation of new funds.
  prefs: []
  type: TYPE_NORMAL
- en: The cryptography’s private key mechanism must be strong enough that it would
    be almost impossible (in other words, take too much time and effort) to figure
    out. Otherwise, all users could potentially lose their electronic cash if the
    cryptography could be figured out within a few months such as with the Enigma
    machine.
  prefs: []
  type: TYPE_NORMAL
- en: An example of cryptocurrency is bitcoin. Although bitcoin was not the first
    cryptocurrency invented, it’s generally considered the first successful cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bitcoin’s success is attributed to the following characteristics: no one can
    break the public-private key, it’s distributed without a controlled government,
    it’s publicly available, and it’s published as open source code.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Bitcoin was invented in 2008 by Satoshi Nakamotoi with the publication of a
    white paper called “Bitcoin: A Peer-to-Peer Electronic Cash System” ( [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)
    ). The actual complete open source software was released a year later in 2009
    ( [https://github.com/bitcoin/bitcoin](https://github.com/bitcoin/bitcoin) ).'
  prefs: []
  type: TYPE_NORMAL
- en: Cryptography + Economics = Cryptoeconomics
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Cryptoeconomics is the combination of cryptography and economics to provide
    a platform that gives an incentive to maintain the platform, its scalability,
    and its security; in addition, it is absent of central or local government control.
    In other words, it’s *decentralized*. The network is made up of a collection of
    multiple computers instead of one central computer.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Decentralized is the opposite of central control; it means without central or
    local government control.
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin is able to achieve cryptoeconomics’ goals by using the private-public
    key concepts; cryptography and cryptographic hashing functions are used indirectly.
    In fact, the relation between cryptography and cryptocurrency is indirect not
    just for bitcoin but for most cryptocurrency out there.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, cryptography is used in bitcoin in other ways such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin uses private keys (bitcoin calls these *digital signatures*) with the
    help of an algorithm function (called the ECDSA elliptic curve) to prove ownership.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hashing algorithms are used for holding the structure of the database ledger
    data (or blockchain) via a hash generator called SHA256.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The hashing algorithms are used to generate math puzzles that a computer tries
    to solve for a prize. Once the puzzle is solved, the computer is selected to help
    handle the transactions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hashing algorithms are also used to generate account addresses.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is the concept of Merkle trees (covered in the next chapter), which use
    the hashing keys of large data in small pieces. This is useful for lightweight
    wallets that are needed on constrained hardware devices such as mobile devices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bitcoin does not gather identity information for its users; however, the transactions
    are public, meaning that all the information is transmitted and available online.
    Think of the Enigma example again; this means that anyone can intercept the messages
    transmitted. However, without the private key, no one can decrypt the messages.
  prefs: []
  type: TYPE_NORMAL
- en: Since the release of bitcoin in 2009, there are many other platforms that use
    different types of privacy for sending information in a secure manner and that
    use encryption for more portions of the process so that less information is public.
    Platforms such as Monero and Zcash use anonymity via cryptography even for messaging
    a transaction’s details.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Explained
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As I mentioned, bitcoin was the first successful open source digital cash. Blockchain
    is the core technology, or the heart behind bitcoin and in fact behind all cryptocurrency
    platforms.
  prefs: []
  type: TYPE_NORMAL
- en: But what is blockchain?
  prefs: []
  type: TYPE_NORMAL
- en: In short, a *blockchain* is a shared digital ledger. Think of a database that
    instead of storing all the database entries on one computer it stores the data
    on multiple computers. A fancier definition would be that a blockchain is a decentralized
    and distributed global ledger.
  prefs: []
  type: TYPE_NORMAL
- en: Blocks + Chain = Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each block contains records and transactions; these blocks are shared across
    multiple computers and should not be altered absent an agreement (consensus) of
    the entire network. The network is ruled according to a specific policy. The computers
    are connected on one network and called *peers* or *nodes*  .
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What is blockchain? A *blockchain* is a digital decentralized (no financial
    institutions involved) and distributed ledger. In layperson’s terms, it is a database
    that stores records and transactions on multiple computers without one controlling
    party and according to an agreed policy. The data that is stored is a block, and
    the blocks are linked (chained) together to form a blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Linked Blocks
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A blockchain consists of a collection of data (a *block*) linked to the previous
    block. How are they linked? A block contains data, and each block references the
    block preceding it, so they are linked just as a chain link would be connected
    to the chain link before it. Take a look at Figure [1-2](#Fig2); as you can see,
    each block is referencing the previous block.![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig2_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig2_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-2
  prefs: []
  type: TYPE_NORMAL
- en: Blocks chained together
  prefs: []
  type: TYPE_NORMAL
- en: So, a blockchain contains blocks, which hold records of transactions. The private
    keys are held by the owner to show proof of ownership (this is the digital signature),
    so no one without the private key can decrypt the string and claim ownership.
    This combination of public keys and private keys represents the electronic cash.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Peers form a network of nodes, so throughout this book, you may see the word
    *peer* or *node*. These words are synonymous for the purpose of this book.
  prefs: []
  type: TYPE_NORMAL
- en: As I said, digital assets can be anything—a music file, video file, electronic
    document, and so on. In cryptocurrency, a digital asset is represented as electronic
    cash; you can think of the public key as your bank account and routing number
    and the private key as the actual cash in your account. Yes, you can share your
    bank’s information with others, but the funds will stay in your account. To claim
    your cash, you need to prove ownership. You go to the bank and show a form of
    ID and prove it’s you by a way of signature; only then can you get your money
    out of your account. A similar process happens with cryptocurrency. There is a
    public address that represents your account, and only the owner holds the private
    key to prove ownership.
  prefs: []
  type: TYPE_NORMAL
- en: Double Spending Problem
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A digital signature (public keys and private keys) securely ensures a party’s
    identity is kept private and electronic cash is stored.
  prefs: []
  type: TYPE_NORMAL
- en: This concept of a private-public key combo enables you to encrypt and decrypt
    strings and keep a string safe, just as you saw with the Enigma machine. However,
    it is still not enough to solve the biggest problem of digital currency—double
    spending.
  prefs: []
  type: TYPE_NORMAL
- en: When you use fiat money (a paper money made legal by a government) such as U.S.
    dollars or euros, the paper is inconvertible, which means that once you gave the
    paper away, you cannot spend it again. In cryptocurrency, what happens if you
    prove ownership and send your digital asset twice at the exact same time? This
    could lead to *double spending*.
  prefs: []
  type: TYPE_NORMAL
- en: Hackers can try to reproduce digital assets as well as potentially double spend
    them, which cryptocurrency had to solve before it could be used as a digital currency.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Double spending* is the risk that digital currency can be spent twice because
    the digital signature could be reproduced and one could prove ownership and send
    a digital asset twice at the same time.'
  prefs: []
  type: TYPE_NORMAL
- en: Blocks that hold keys are not enough to provide security and solve the double-spending
    potential issue to form a digital currency.
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin  solves this problem by creating a network of computers and proving
    that no attempts of double spending have occurred. This is done by having all
    the computers on the network aware of every transaction. All the transactions
    are shared with all the computers in the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Double Spending Solution: P2P Network'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In cryptocurrency, using a peer-to-peer network provided the solution to solve
    the double-spending problem.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*P2P networking* is a distributed application architecture that splits the
    tasks that need to be performed between different peers, with each peer having
    the same privilege. Together the peers create a P2P network of nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: Any computer that is connected on the network is called a *peer*. The peer can
    be any computer that meets the network requirements such as a laptop, mobile device,
    or server. The computers are connected to each other on the Internet via a P2P
    network protocol and form a network of nodes.
  prefs: []
  type: TYPE_NORMAL
- en: The P2P network protocol is not new. It has been used extensively on the Web
    for years now, from downloading files via Kazaa or LimeWire networks to having
    video chats via Skype.
  prefs: []
  type: TYPE_NORMAL
- en: As I mentioned, bitcoin was the first viable cryptocurrency, and it solved the
    double spending issue as well as allows electronic cash to be stored without going
    through financial institutions by utilizing P2P to form the blockchain protocol.
  prefs: []
  type: TYPE_NORMAL
- en: '*“A purely peer-to-peer version of electronic cash would allow online payments
    to be sent directly from one party to another without going through a financial
    institution.”*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '—Satoshi Nakamoto, *Bitcoin: A Peer-to-Peer Electronic Cash System*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Cryptomining by Cryptominers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As noted, each computer that holds a copy of the shared ledger and is connected
    to the P2P network is a peer. A peer can help to add records and verify transactions.
    The process is called *cryptocurrency mining* or *cryptomining*  , and the peer
    that helps record and verify the transactions is called a *cryptominer* or a *miner*  for
    short.
  prefs: []
  type: TYPE_NORMAL
- en: Each miner helps to verify and add transactions to the blockchain digital ledger.
    The miners are often rewarded with a fee for the work, and to stay competitive
    with other miners, the miner usually needs a computer with specialized hardware.
  prefs: []
  type: TYPE_NORMAL
- en: Cryptocurrency Wallet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I covered what the public keys and private keys are and how they are used to
    encrypt and decrypt strings. The strings are digital currency or cryptocurrency,
    and the keys represent digital money.
  prefs: []
  type: TYPE_NORMAL
- en: A *cryptocurrency wallet* stores one or multiple public key and private key
    combinations and is used to receive or spend cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: A good analogy is to think of a wallet like your bank account. Cryptocurrency
    can be created by getting a reward by doing the miner work, or it can be purchased.
    I will expand on wallets later in the book.
  prefs: []
  type: TYPE_NORMAL
- en: Cryptocurrencies Overload
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before diving deeper into the blockchain P2P network, you should know that another
    concept that can cause confusion is the difference between coins and tokens. According
    to Coinmarketcap.com, at the time of writing, there are 1,833 listed cryptocurrencies
    with a market cap of $200 billion.
  prefs: []
  type: TYPE_NORMAL
- en: Many of these coins will surely disappear in the years to come as they offer
    little value, and these projects will be terminated because of a lack of interest
    or being a scam.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be confusing and intimidating, and most people don’t understand the
    concept of bitcoin, let alone the large number of coins and tokens out there.
    To help understand these concepts, let’s break down cryptocurrencies into three
    types: bitcoin, tokens, and alternative cryptocurrency coins (altcoins). See Figure
    [1-3](#Fig3).![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig3_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig3_HTML.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Cryptocurrency coins and tokens. Photo credit: blog.citowise.com.'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin Digital Cash
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bitcoin was the first successful implementation of a decentralized distributed
    digital currency. There are 21 million coins in total. The coins replace a traditional
    fiat currency.
  prefs: []
  type: TYPE_NORMAL
- en: Tokens
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tokens  are a decentralized product offering. It is another option similar to
    an initial public offering (IPO) or crowdfunding. The tokens can be created anywhere
    in the world and delivered via Ethereum, EOS, or another capable blockchain platform.
    Tokens are usually created and distributed to the public via an initial coin offering
    (ICO).
  prefs: []
  type: TYPE_NORMAL
- en: Tokens stand for a utility or an asset that usually sits on top of a native
    blockchain. It can represent any digital asset including loyalty points, cryptocurrencies,
    or any good or commodity with individual units that are an interchangeable, fungible,
    or tradable asset. You can create a token using an existing blockchain template
    such as the Ethereum platform, or you can create your own tokens on an existing
    native blockchain and issue your own tokens. You can utilize smart contracts to
    simplify the process of creating tokens, as will be discussed in later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Smart contracts are programmable code that runs on its own without the need
    for third parties. For instance, Solidity is a contact-oriented programming language
    and can be deployed on multiple blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: Alternative Cryptocurrency Coins (Altcoins)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Alternative cryptocurrency coins (*altcoins* for short) are coins that are derived
    from bitcoin core source code by forking it (soft fork or hard fork). Examples
    are litecoin (which was a fork of the bitcoin core client), dogecoin (dogecoin
    1.10 is a complete rebuild based on the bitcoin 0.11 build), bitcoinX, bitcoin
    cash, and bitcoin gold. In fact, at the time of writing, there are 26 altcoins.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Hard forks are backward incompatible because the changes split the network code
    into two—the P2P network with the original code and the new P2P network running
    the new code. Soft forks are backward compatible, meaning that previously valid
    blocks/transactions become invalid, and old nodes recognize new blocks as valid.
    This forking happens often when there is a disagreement of developers regarding
    a direction. For instance, some developers would like to implement changes that
    other developers disagree with or a major fix is needed to be implemented.
  prefs: []
  type: TYPE_NORMAL
- en: Litecoin was a fork of the bitcoin’s core client. Litecoin changed the time
    of blocks being sent from 10 minutes to 2.5 minutes, enabling transactions to
    be transferred quickly and more efficiently than bitcoin. Litecoin can then continue
    and add features as it’s not relying on bitcoin’s code anymore. For instance,
    in the future, litecoin will enable atomic swap, allowing people to convert Litecoin
    to bitcoin via smart contracts without involving an exchange. However, changes
    in the bitcoin core will require manual implementation to have these changes included
    in litecoin.
  prefs: []
  type: TYPE_NORMAL
- en: With that said, many will argue that Litecoin and many of these altcoins don’t
    offer enough value to survive and are made with the purpose of enriching the developers
    who created the fork. Only time will tell.
  prefs: []
  type: TYPE_NORMAL
- en: EOS  is another good example of altcoins. This time, the altcoin is turning
    into a token, as upon its release the EOS company issued Ethereum tokens, but
    as EOS is building its own blockchain platform, it is replacing the Ethereum token
    with its own EOS tokens.
  prefs: []
  type: TYPE_NORMAL
- en: In a nutshell, the main difference between altcoins and tokens is in their structure.
    An altcoin is its own currency like bitcoin or Litecoin, with its own dedicated
    network blockchain and need for miners. Tokens such as Ethereum tokens operate
    on top of an existing blockchain, which provides the token and the infrastructure
    (such as Ethereum) for the creation of a decentralized application (dapp). An
    example of an Ethereum token is the binance token (BNB).
  prefs: []
  type: TYPE_NORMAL
- en: In regard to Ethereum tokens, Ethereum offers the creation of different token
    standards or Ethereum Request for Comments (ERCs) such as ERC-20, ERC-223, or
    ERC-777\. In the BNB token example, ERC-20 was used. These standards differ and
    will be discussed in more detail in later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain P2P Network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that you have a better understanding of the key concepts, you can dive deeper
    into understanding how a blockchain uses a P2P network to solve the double spending
    issue as well as exclude financial institutions.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you will see how the cryptocurrency P2P network works. You
    will explore different blockchains policies specifically and the P2P network in
    general by breaking the P2P network into five layers.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miner layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Propagation layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Semantic layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The overview here will pave the way for the next chapters where you will be
    utilizing the bitcoin core API to configure and run a peer. This fundamental understanding
    can help you understand how any blockchain network works by utilizing different
    policies such as NEO and EOS.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus Mechanism
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In a traditional centralized system such as a bank, there is a master computer
    that is trusted with the ledger of transactions. The bank can obviously trust
    its own computer, and therefore it has no problem being the one responsible for
    the security and integrity of the master computer.
  prefs: []
  type: TYPE_NORMAL
- en: When you are dealing with untrusted peers sharing a ledger, there is a need
    to place rules that will ensure security and provide integrity of the ledger to
    prevent double spending and other potential hacker attacks. These rules and agreements
    are called a *consensus mechanism* .
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A consensus mechanism is an agreement needed for the network to operate properly
    even in the event of a failure. It needs to be able to achieve agreement on the
    data of the network within the distributed P2P network.
  prefs: []
  type: TYPE_NORMAL
- en: The blockchain is not just one master computer and aims to work globally. It
    achieves integrity with a consensus of the data by all the computers connected
    on the network. A distributed consensus means that a pool of peers, geographically
    apart, agree in a decentralized manner, instead of one master computer (centralized).
    Instead of regulations, there are rules that are usually set in an open source
    environment instead of being set by a government entity.
  prefs: []
  type: TYPE_NORMAL
- en: The P2P network enables a ledger. To achieve this goal in a secure way, the
    P2P network stores the digital ledger rules and security. The consensus mechanism
    provides not only the rules but also the incentives to do the work of storing
    the data and creating transactions by giving the reward to miners.
  prefs: []
  type: TYPE_NORMAL
- en: The P2P network works globally using an Internet connection and is able to provide
    a platform to achieve a globally distributed consensus mechanism. In cryptocurrencies,
    the consensus/agreement is on whether the blocks are valid or not. If a block
    is valid, the block will be added to the blockchain. If a block is invalid, it
    will be rejected from being added to the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: That’s where a consensus policy comes into play. Most of the peers in the network
    hold the same blocks in their validated best blockchain and follow the same rules
    (consensus rules); that’s how blockchain ensures security. The most difficult
    to re-create chain is known as the *best blockchain* (more about this concept
    later in the chapter).
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work, Proof of Stake, and Delegated Proof of Stake
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As the blockchain gained popularity, many consensus mechanisms policies were
    created. The first one was created by bitcoin, and many others were built to solve
    problems that exist in other mechanisms. In the following sections, I will discuss
    a few popular ones.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of work (PoW)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proof of stake (PoS)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delegated proof of stake (DPoS)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to these three, there are many other consensus mechanisms that are
    not covered in this book, such as proof of importance, proof of elapsed time (PoET)  ,
    proof of authority (PoA), proof of burn, proof of capacity, proof of activity,
    and so on. Feel free to explore these on your own; each has its pros and cons
    and fits different needs.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: PoW is the first and most popular mechanism; it’s used by bitcoin and Ethereum,
    which are the most popular cryptocurrencies at the time of writing. PoW is achieved
    by having a network of miners and presenting the miners with a mathematical problem.
    When miners solve a problem, they are rewarded with a cryptocurrency. The reward
    is the proof of the “work” done, and that’s where the name comes from.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ethereum’s development community is looking to move from PoW to PoS or ProgPoW
    (reduced ASICs’ hash rate benefit mechanism).
  prefs: []
  type: TYPE_NORMAL
- en: PoW determines what peer does the work by the amount of computer power (*hash
    rate*) and allocates the work as a percentage so it’s fair. PoW does not trust
    any peer on the network individually, but the network trusts all of them as a
    collective network.
  prefs: []
  type: TYPE_NORMAL
- en: This does not mean that one miner competes against another miner. A network
    of miners (called a *pool*) can compete against another pool of miners for the
    job. The higher hash rate the pool has, the more chances it has to get the “work.”
  prefs: []
  type: TYPE_NORMAL
- en: As covered previously, cryptocurrencies are decentralized and work without one
    trusted computer in charge of the ledger. The PoW is the mechanism that ensures
    data integrity and discourages malicious attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The proof of work (PoW) is the mathematical puzzle the miner needs to solve.
    A miner needs to find a solution to a complex mathematical problem to become the
    leader and be able to create the next best block to be added to the blockchain.
    The more miners that exist in the network, the more complex the mathematical difficulty
    that needs to be solved. For bitcoin, only one block is added every ten minutes
    with only one winner, so the competition is fierce. Solving a problem puts the
    chips in the computer to work, which consume electricity and produce heat. Think
    of your computer running an intensive video game that includes lots of media or
    your computer processing a video for production.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also use this online resource, which connects to a bitcoin peer and
    does all sort of calculations to figure out the next difficulty: [https://bitcoinwisdom.com/bitcoin/difficulty](https://bitcoinwisdom.com/bitcoin/difficulty)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: This information is useful for figuring out mining profitability. At the time
    of writing, bitcoin shows 5 trillion as the difficulty rate, with an estimated
    next difficulty increase of +3.74% and a total hash rate of 43 trillion GH/s.
    It also shows that one block takes 9.9 minutes to create, and it generates about
    25 bitcoins. A quick calculation shows that if every 10 minutes we get a block
    the data size of 4.2 MB per year, then 80 bytes of data per block ∗ 6 hours ∗
    24 hours ∗ 365 days = 4.2 MB of data per year.
  prefs: []
  type: TYPE_NORMAL
- en: Having a block created every ten minutes is a limiting factor, and the number
    of transactions that can be included in each block is limited. That creates a
    scalability issue that other consensus mechanisms tried to improve on.
  prefs: []
  type: TYPE_NORMAL
- en: To summarize, each miner is racing to solve the same problem; once the problem
    is solved, the process restarts. This problem is a mathematical puzzle known as
    the *proof-of-work problem*, and the reward is given to the first miner who solves
    the problem. Then the verified transactions are stored in the public ledger.
  prefs: []
  type: TYPE_NORMAL
- en: This PoW is not without its own disadvantages; this type of algorithm can create
    all sorts of problems in today’s world. For instance, if one mining pool controls
    more than 51 percent of the total mining power, the entire blockchain security
    is at risk as you have one central collective not much different than having one
    computer. A DDOS attack against the network can put the entire trustworthiness
    of the network at risk.
  prefs: []
  type: TYPE_NORMAL
- en: This actually happened and is not just a theory. At the time of writing, bitcoin
    gold, a forked version of bitcoin, has suffered a DDOS attack.
  prefs: []
  type: TYPE_NORMAL
- en: A distributed denial-of-service (DDoS) attack happens when multiple systems
    are attacking a target’s system resource/bandwidth.
  prefs: []
  type: TYPE_NORMAL
- en: On PoW, as the difficulty goes up, that means less profit. Less profit results
    in less incentive to mine coins. Ethereum cryptocurrency is facing a problem of
    reduced miners in the network, and in 2018 Ethereum had to plan a “difficulty
    bomb,” which reduced the difficulty (raising profit for miners), as well as switch
    from PoW to PoS to increase scalability.
  prefs: []
  type: TYPE_NORMAL
- en: How is an attack is achieved? A pool that accounts for 51 percent of the network’s
    hashing power is able to create its own block and post it faster than the main
    blockchain updates. The block holds 51 percent of the network and is able to double
    spend coins by removing transactions after spending so that the coins are not
    taken from the originating wallet. This threat is real. At the time of writing,
    Bitmain, a mining company, controls more than 40 percent of the total bitcoin’s
    hash rate.
  prefs: []
  type: TYPE_NORMAL
- en: Many view PoW as unsustainable and insufficient because of the amount of electricity
    a miner uses and the slow transaction speed compared to other algorithms. To put
    things in perspective, bitcoin’s current estimated annual electricity consumption
    is about 60 to 73 terawatt hour (TWh) per year. That’s a similar amount of electricity
    that it takes to power Switzerland in a year; imagine multiple coins becoming
    as popular as bitcoin utilizing PoW.
  prefs: []
  type: TYPE_NORMAL
- en: Read more about PoW in the bitcoin white paper at [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)
    written by Satoshi Nakamoto.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: PoS was created by Sunny King and Scott Nadal in 2012 as an alternative to solve
    the PoW cons mentioned earlier.
  prefs: []
  type: TYPE_NORMAL
- en: PoS relies on how many coins a peer holds. The peer needs to stake the number
    of coins it wants to mine.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of hashing power, we have stake power, and there is no dependency on
    energy consumption because there is no puzzle to solve. PoS provides a similar
    hashing block scheme to bitcoin’s PoW, but it limits the number of peers. This
    provides the needed security yet lowers the cost and power consumption. A network
    fee is provided to peers instead of giving a reward for solving a mathematical
    puzzle as in PoW.
  prefs: []
  type: TYPE_NORMAL
- en: PoS determines what peer does the work by the size of the stake the peer holds.
    This achieves a distributed consensus at less energy and less cost. DDOS attacks
    and frauds are still possible. However, attackers cannot transact more digital
    currency than they are staking. Otherwise, they would lose their deposits, so
    the chances are lower for an attack. Keep in mind that attackers can stake other
    people coins and won’t care to lose these coins as they are not theirs, so there
    are still ways for a DDOS attack.
  prefs: []
  type: TYPE_NORMAL
- en: Any peer can participate in the mining process by staking coins in order to
    validate a new transaction. To become a miner, there are two options; you can
    stake your coins to be used by a trustworthy node (but you can lose your coin
    via a fraud of the PoS network by the node), or you can submit a full node to
    be selected as a miner. Decentralization is limited as only a few miners can hold
    most of the coins and have majority control. For the work, each miner gets selected
    randomly; it’s not based on solving a puzzle. Take a look at Table [1-1](#Tab1),
    which compares PoW and PoS.Table 1-1
  prefs: []
  type: TYPE_NORMAL
- en: PoW vs. PoS
  prefs: []
  type: TYPE_NORMAL
- en: '| Category | PoW | PoS |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Generating new blocks | First miner to solve problem selected based on hashing
    power | Random selection based on stake power (how many coins a peer holds) |'
  prefs: []
  type: TYPE_TB
- en: '| Reward | Block reward | Network fees |'
  prefs: []
  type: TYPE_TB
- en: '| Energy and resource consumption | ASIC miner and large footprint | Little
    resource and low energy consumption |'
  prefs: []
  type: TYPE_TB
- en: You can set a staking wallet that holds the coins you need for the PoS. Your
    coins can earn a return annually in some blockchain networks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a list of some popular cryptocurrency coins that use PoS:'
  prefs: []
  type: TYPE_NORMAL
- en: '***Dash***: You need 1,000 units to be a master node. It gives an annual return
    of approximately 7.5 percent per year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***NEO***: Staking wallets return approximately 5.5 percent per year. There’s
    no need to mine; you get gas coins just by holding coins.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Others***: LSK, PIVX, NAV, RDD, BEAN, Linda, DCR, NEBL, OK, STRAT.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although some coins provide annual returns, keep in mind that in case the coin
    market cap stays stable, a single coin will be worth less over time, as new coins
    are generated. By staking a wallet, the hold (HODL) wallet’s value is less affected
    as you get more coins to maintain your wallet value. Similar to how a bank gives
    you an X% interest rate and the inflation is X%, your balance shows more funds,
    but realistically you own the same amount of money.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: HODL is a slang term coined in association with cryptocurrency to describe holding
    cryptocurrency disregarding price fluctuation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s examine NEO as an example. You won’t need to mine NEO to get a reward.
    You will get gas coin just for holding coins as a reward for help with staking
    transactions. You can calculate how much gas coin you will receive by using this
    URL: [https://neotogas.com/](https://neotogas.com/) . At the time of writing,
    if you purchase five NEO coins and hold them for a year, you will get 0.4799 gas
    coins (currently at a price of $7.73) by placing them in staking wallets. See
    Figure [1-4](#Fig4).![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig4_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig4_HTML.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-4
  prefs: []
  type: TYPE_NORMAL
- en: Neotogas.com gas staking calculation
  prefs: []
  type: TYPE_NORMAL
- en: 'I encourage you to read the white paper about PoS here: [https://peercoin.net/assets/paper/peercoin-paper.pdf](https://peercoin.net/assets/paper/peercoin-paper.pdf)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: Delegated Proof of Stake
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Delegated proof of stake is a census algorithm method invented by Dan Larimer
    discussed in the white paper at [https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md](https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md)
    . DPoS is aimed at improving PoS cons by providing a democracy instead of the
    random process of selecting a miner.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In DPoS, the miners are called *block producers*.
  prefs: []
  type: TYPE_NORMAL
- en: DPoS achieves a technological democracy by splitting the process of mining into
    two parts.
  prefs: []
  type: TYPE_NORMAL
- en: '**Election**: When electing a group of block producers, there are only 21 block
    producers instead of unlimited as with PoW.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scheduling production**: Each one of the 21 block producers takes turns to
    produce a block every 3 seconds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The election process provides a technological democracy and ensures stakeholders
    are in control because large stakeholders have the most to lose if a network fails.
  prefs: []
  type: TYPE_NORMAL
- en: Each block producer  takes a turn at producing a block, and the longest possible
    chain gets adopted (just like in PoW). Take a look at a normal operation, as shown
    in Figure [1-5](#Fig5). You’ll see that each peer 1 through 3 gets its turn to
    produce the longest chain block. Anytime an honest peer node sees a valid strictly
    longer chain, it will switch from its current fork to the longer one.![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig5_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig5_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-5
  prefs: []
  type: TYPE_NORMAL
- en: DPoS normal operation
  prefs: []
  type: TYPE_NORMAL
- en: DPoS is able to continue and function even when most of the producers fail.
    Figure [1-6](#Fig6) shows a minority fork, where peer 2 only gets to post the
    longest chain once during a cycle. During a fail process, the community can vote
    and replace a failed peer producer, in this case peer 1, or peer producers until
    the network resumes to normal operation.![../images/475651_1_En_1_Chapter/475651_1_En_1_Fig6_HTML.jpg](../images/475651_1_En_1_Chapter/475651_1_En_1_Fig6_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-6
  prefs: []
  type: TYPE_NORMAL
- en: DPoS minority fork
  prefs: []
  type: TYPE_NORMAL
- en: 'This white paper describes in detail this process and how blocks are being
    produced and the rules to handle fail chains: https://steemit.com/dpos/@dantheman/dpos-consensus-algorithm-this-missing-white-paper.'
  prefs: []
  type: TYPE_NORMAL
- en: Setting a community of block producers and staked users who agree to these sets
    of rules gives the efficiency of PoS with the decentralized way that PoW operates.
    DPoS uses the power of stakeholders to approve voting of the consensus algorithm
    rules such as incentive fees, block intervals, forks, and transaction sizes.
  prefs: []
  type: TYPE_NORMAL
- en: These rules can be fine-tuned by the elected delegates. This type of consensus
    can decrease the transaction time significantly (1 second versus 10 minutes for
    PoW). Further, the consensus protocol is designed to protect all the participants
    against unwanted interference of a group of nodes as possible in POW. Examples
    of popular DPOS blockchains are Bitshares, Steem, and EOS.
  prefs: []
  type: TYPE_NORMAL
- en: Mining Layer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What the miners are doing behind the scenes on networks could be described as
    competition to do the blockchain’s work, which is really doing the network bookkeeping.
    For bitcoin and most coins out there that utilize PoW, each peer needs to hold
    the entire public ledger, which holds a record of all the transactions that were
    ever conducted. PoW miners are based on computing power and pools, while other
    networks take into account other considerations  .
  prefs: []
  type: TYPE_NORMAL
- en: For bitcoin, transactions must be validated by the miners who check the ledger,
    ensure the sender is not transferring funds it doesn’t have, and only then add
    the transaction to the ledger. Finally, to ensure protection from hackers, the
    miners seal these transactions behind multiple layers of computational work, requiring
    too much work for a hacker to possibly achieve. This service is rewarded by providing
    bitcoins as a fee to the miner.
  prefs: []
  type: TYPE_NORMAL
- en: For bitcoin, the size of each batch of coins drops by half about every four
    years; around 2140 (unless a faster calculation than SHA2 is discovered), it will
    be cut to zero, and the total number of bitcoins in circulation will be 21 million.
  prefs: []
  type: TYPE_NORMAL
- en: Propagation Layer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The propagation layer  is responsible for deciding how the shared ledger and
    the blocks are transmitted on the P2P network. This layer is described in detail
    in the blockchain white papers.
  prefs: []
  type: TYPE_NORMAL
- en: Each of the peers can transmit a new transaction to other nodes on the network.
    This architecture allows nodes to communicate indirectly. For instance, you can
    send a transaction affecting two wallets without each wallet being connected directly
    to each other.
  prefs: []
  type: TYPE_NORMAL
- en: Any node that receives a valid transaction it has not seen before will immediately
    forward it to all other nodes to which it is connected. This is a propagation
    technique known as *flooding*. Thus, the transaction rapidly propagates out across
    the P2P network, reaching a large percentage of the nodes within seconds.
  prefs: []
  type: TYPE_NORMAL
- en: Semantic Layer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The semantic layer  takes care of how new blocks relate to previous blocks and
    provides the protocol for verifying the consensus rules.
  prefs: []
  type: TYPE_NORMAL
- en: As you have seen, there are different types of consensus mechanisms based on
    how many trusted machines are connected, staking, speed, hashing power, and more,
    but they do work similarly to how new blocks are related with previous blocks
    to ensure security. Every blockchain has specifications. In this layer, transactions
    happen where coins/tokens are transferred between accounts. I discussed the best
    block chain and how each block contains data, and a chain of blocks has each block
    referencing the block preceding it. The consensus in the blockchain holds the
    same blocks in their validated best block chain and follows the same rules (consensus
    rules). That’s how a blockchain ensures security.
  prefs: []
  type: TYPE_NORMAL
- en: Application Layer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This layer takes care of deploying applications on top of the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, dapps, smart contracts, exchanges, and sites that provide information
    about a blockchain are applications built on top of blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: For the application layer  , the blockchain needs to expose APIs. Different
    blockchains are similar as they all provide a way for a client to communicate
    with the network.
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin offers a full node, which is currently about 27 GB and includes a fully
    enforced node and all the rules of the blockchain. That is needed for mining as
    well as ensuring the peer you run that gets connected to the application layer
    is synced with the latest blocks.
  prefs: []
  type: TYPE_NORMAL
- en: These full nodes contribute to the functionality of the P2P network and help
    support the network and its security.
  prefs: []
  type: TYPE_NORMAL
- en: It’s common for a blockchain to also offer a “light” node version. In fact,
    the bitcoin light client is referencing a trusted full node’s copy of the blockchain.
    The light client allows users to interact with the bitcoin’s blockchain and makes
    and confirms transactions without committing the large 27 GB disk space, which
    helps less capable devices such as mobile.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to understand that a light client is trustworthy and does not
    include all the consensus rules. A full node is trustless and will reject blocks
    that violate consensus rules, even if all the other nodes on the network recognize
    the transaction as valid.
  prefs: []
  type: TYPE_NORMAL
- en: I used NEO as an example of a popular PoS blockchain. NEO also provides NEO-CLI,
    which includes an API that supports a consensus function that can be used for
    the application layer.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, EOS delegated proof of stake provides a full-node and light-node
    option. You will start noticing that although there are many blockchain options
    out there, there are many similarities in the way the blockchain is implemented.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, I laid the foundations and explained basic concepts regarding
    blockchain; I explained concepts such as encryption and decryption, cryptography,
    digital assets, cryptography, and cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: 'I covered the pieces that make up a blockchain, including blocks, double spending,
    cryptocurrency, cryptomining, cryptominers, and cryptocurrency wallets. I covered
    different types of cryptocurrencies: bitcoin, tokens, and altcoins.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, I covered the blockchain P2P network and the different layers that
    make up the network: consensus layer, miner layer, propagation layer, semantic
    layer, and application layer. You also learned about the peer-to-peer network
    core logic and proof of work (PoW), proof of stake (PoS), and delegated proof
    of stake blockchain (DPOS).'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I introduced many terms that will be useful throughout this
    book such as digital asset, public and private keys, decentralized, double spending,
    smart contracts, and HODL.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will install and learn about the bitcoin core API as
    well as learn how to create a full peer in different blockchains. This will enable
    you to access the blockchain P2P network and even be able to understand and create
    peers that can act as miners.
  prefs: []
  type: TYPE_NORMAL
