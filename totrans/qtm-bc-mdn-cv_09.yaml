- en: '© The Author(s), under exclusive license to Springer Nature Switzerland AG 2022A.
    Kumar et al. (eds.)Quantum and Blockchain for Modern Computing Systems: Vision
    and AdvancementsLecture Notes on Data Engineering and Communications Technologies133[https://doi.org/10.1007/978-3-031-04613-1_9](https://doi.org/10.1007/978-3-031-04613-1_9)'
  prefs: []
  type: TYPE_NORMAL
- en: Quantum Solutions to Possible Challenges of Blockchain Technology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nivedita Dey^([1](#Aff5) [ ](#ContactOfAuthor1)), Mrityunjay Ghosh^([2](#Aff6) [ ](#ContactOfAuthor2))
    and Amlan Chakrabarti^([3](#Aff7) [ ](#ContactOfAuthor3))(1)QRDLab, University
    of Calcutta, Kolkata, India(2)HCL Technologies, University of Calcutta, Kolkata,
    India(3)University of Calcutta, Kolkata, IndiaNivedita DeyEmail: [mail.dnivedita@gmail.com](mailto:mail.dnivedita@gmail.com)Mrityunjay Ghosh (Corresponding
    author)Email: [g.mrityunjay@gmail.com](mailto:g.mrityunjay@gmail.com)Amlan ChakrabartiEmail:
    [acakcs@caluniv.ac.in](mailto:acakcs@caluniv.ac.in)'
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the recent advent of quantum computing, the security of current blockchain
    cryptosystems can be compromised to a greater extent. Quantum algorithms such
    as Shor’s large integer factorization algorithm and Grover’s unstructured database
    search algorithm can offer exponential and quadratic speedup, respectively, in
    comparison to their classical counterparts. This can put threats on both public-key
    or asymmetric key cryptosystems and hash functions, which necessarily demands
    to migrate from classical cryptography to quantum-secure cryptography. This work
    first studies current and future classical state-of-the-art blockchain scalability
    and security primitives. The relevant quantum-safe blockchain cryptosystem initiatives
    which have been taken by Bitcoin, Ethereum, Corda, etc. are stated and compared
    with respect to key sizes, hash length, execution time, computational overhead,
    and energy efficiency. Moreover, the work aims to provide the different ways where
    quantum-aided solutions can overcome the challenges in blockchain technology and
    enhance scalability, security, and performance in the post-quantum era. Though
    quantum information itself is in the Noisy Intermediate Scale Quantum (NISQ) era
    and not yet developed to a high technology readiness level, this work also covers
    the current challenges and future research direction in the near-term, practical
    realization of post-quantum blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Quantum computing is no longer simply a theoretical notion for businesses; it
    now has a real-world application in creating economic value by effectively solving
    complicated challenges. Conventional security in IT systems is provided by several
    asymmetric key and symmetric key cryptosystems [[1](#CR1)]. Asymmetric key cryptographic
    algorithms like RSA (Rivest Shamir Adleman) encryption, ECDSA (Elliptic Curve
    Digital Signature Algorithm), ECDH (Elliptic Curve Diffe Hellman) algorithm, EdDSA
    (Edwards-curve Digital Signature Algorithm) use mathematical hard problems like
    discrete logarithm problem, large integer factorization problem as underlying
    cryptographic security provider [[2](#CR2)–[4](#CR4)]. On the contrary, symmetric
    key or shared key cryptographic algorithms like DES (Data Encryption Standard),
    TDES (Triple DES), AES (Advanced Encryption Standard) use block cipher techniques
    to generate a symmetric key which can be used for both encryption and decryption
    [[1](#CR1)].
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain and other Distributed Ledger Techniques (DLTs) are novel computational
    data structures that evolve significantly in the last years due to their ability
    to provide secure communications, data privacy, resilience, and transparency.
    Through the use of public-key cryptographic primitives and hash functions, blockchain
    technologies such as Bitcoin, Ethereum, Monero, Ripplecoin, Zcash, and others
    can demonstrate redundancy, transparency, and accountability [[5](#CR5)]. Blockchain
    users leverage public key cryptographic primitives to authenticate transactions
    [[6](#CR6)]. On the other hand, hash functions are introduced to generate digital
    signatures and create blocks that do not necessarily trust each other. The unprecedented
    growth of quantum computing can pose potential threats to classical blockchain
    cryptographic primitives. Shor’s factorization algorithm can break asymmetric
    encryption with twice as many logical qubits as the key size, which necessarily
    means to achieve a 112-bit security level using a 2048-bit RSA key, a 4096-qubit
    quantum computer is sufficient enough. Similarly, on the other hand, breaking
    AES-128 encryption key will be eventually reduced to breaking a 64-bit symmetric
    encryption key. This is achieved by Grover’s unstructured database search algorithm,
    which can reduce the brute force attack time to its square root [[7](#CR7), [8](#CR8)].
    Possible quantum threats in the near-term quantum era lead to the development
    of some quantum-resistant cryptographic algorithms which quantum computers can
    not break in the near future. Post-Quantum Cryptography (PQC) deals with devising
    quantum-resistant algorithms. Some of the most promising PQC areas include hash-based
    cryptography, code-based cryptography, lattice-based cryptography, and multivariate-quadratic-equations
    cryptography [[7](#CR7)]. These Post Quantum Cryptographic algorithms are not
    well suited for classical blockchain technology due to several disadvantages in
    practical implementation. Decryption latency, massive consumption of computational
    resources, and increased key size are few challenges that can hinder blockchain
    performance. In this work, both the scalability and security issues associated
    with classical blockchain have been analyzed. The organization of the work is
    given below.
  prefs: []
  type: TYPE_NORMAL
- en: Section [2](#Sec2) begins with the operational principles of blockchain technology
    and its components including block, chain, network and several consensus mechanisms.
    In Sect. [3](#Sec3), different scalability aspects of blockchain both from an
    existing standpoint and future standpoint are discussed. Consequently, in the
    next section it is shown that how quantum advantage can be exploited to solve
    scalability issues in blockchain techniques. In order to analyze the same, several
    research use cases have been identified from blockchain-aided fintech applications
    like supercharged data analyses, speed of calculation, reduction in the number
    of false-positive cases in fraud detection, and Monte-Carlo simulation where quantum
    computation can be applied. In order to guide researchers on the requirement of
    developing quantum-resistant blockchain applications, Sects. [5](#Sec24) and [6](#Sec29)
    provide a broad view on potential threats offered by quantum algorithms like Shor’s
    and Grover’s algorithm on current cryptographic primitives used by blockchain.
    Furthermore, Sects. [7](#Sec32) and [8](#Sec37) shed light on the most relevant
    post-quantum cryptographic initiatives taken for both generic quantum-resistant
    cryptography and specific blockchain based post-quantum initiatives respectively.
    These two sections also include the vulnerabilities of five blockchain cryptocurrencies
    like Bitcoin, Ethereum, Litecoin, Monero, and Zcash in near—term quantum era.
    In Sect. [9](#Sec52), an extended study on feasibility of quantum attacks on these
    DLTs has also been done. Since there are challenges associated with post-quantum
    blockchain, the work has been concluded by discussing the challenges and future
    research direction towards the development of reliable blockchain security primitives
    in Sect. [10](#Sec58) followed by a conclusion section.
  prefs: []
  type: TYPE_NORMAL
- en: 2 Blockchain and Distributed Ledger Techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A blockchain, or any distributed ledger technology (DLT), is a database that
    is consensually shared, synchronized and replicated among a group of users. The
    phrase ‘distributed ledger’ refers to each node or party on a blockchain network
    copying and storing transaction data. Pre-defined distributed ledger rules address
    concerns like coherence and database conflicts automatically. A distributed ledger’s
    properties include peer-to-peer network functioning, decentralization in transaction
    data storage, support for consensus-based transactions, and tamper resistance.
    This makes a DLT to be programmable, secure, anonymous, unanimous, distributed,
    time-stamped, and immutable as shown in Fig. [1](#Fig1). The core parts of a blockchain
    consist of a block, a chain, a network, and a blockchain consensus mechanism.
    Block consists of a list of transactions, which are recorded periodically. Transactions
    represent any type of virtual activity taking place in a blockchain database.
    Block-specific rules are associated with the block itself at the time of network
    creation. Each block can set its size or the maximum cardinal number of transactions
    allowed to be stored within a block according to pre-defined rules.![](../images/516210_1_En_9_Chapter/516210_1_En_9_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: The properties of distributed ledger technology
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/516210_1_En_9_Chapter/516210_1_En_9_Fig2_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 2
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain technology in Bitcoin crypto-currency
  prefs: []
  type: TYPE_NORMAL
- en: The chaining of blocks is necessary whenever a block reaches its maximum limit
    in terms of the number of transactions. Then chaining or linking of blocks is
    done through hashing to establish connection between the preceding block and the
    next block. The previous block’s hash value is placed into the next block. Thus
    each block has an impact on the next block through cryptographic hashing. This
    has been shown in Fig. [2](#Fig2). Hash is a data-processing method that takes
    a changeable string of data as input and outputs a fixed-length value. This hashing
    scheme is vital to generate small transaction data that can be easily validated
    and distributed to other nodes. Repeating a hash function on an unaltered block
    of data will always result in the same hash output. This can be further understood
    from Table [1](#Tab1), where small variations in the spelling of the word “National
    Archives” have led to different output values when a Secure Hash Algorithm (SHA—256)
    is applied. Merkle tree is an extension of a simple hash algorithm where multiple
    hash values. The single hashed output, known as Merkle root, can represent multiple
    hashes [[9](#CR9)].Table 1
  prefs: []
  type: TYPE_NORMAL
- en: Different hash value generation (of 256—bit) by Secure Hash Algorithm for slight
    alterations in the spelling of the word “National Archives”.
  prefs: []
  type: TYPE_NORMAL
- en: '| Text variable string entry value | Hash value |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| “National Archives” | 6429799b9af2d91cbf915cb0290f3a50281193a977b3457d63e4541cc5788c5b
    |'
  prefs: []
  type: TYPE_TB
- en: '| “National Archives” | d926fe7e72d09b249701dbcde2dad0ccb9b4bb653e053e461a67bbb951dcae0b
    |'
  prefs: []
  type: TYPE_TB
- en: '| (an extra space incorporated) |   |'
  prefs: []
  type: TYPE_TB
- en: '| “Nati0nal Archives” | 5f2d570fc940d5f8de89310db43f789fdd99f51e89c021e1a50acb7a6fe2cf83
    |'
  prefs: []
  type: TYPE_TB
- en: '![](../images/516210_1_En_9_Chapter/516210_1_En_9_Fig3_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 3
  prefs: []
  type: TYPE_NORMAL
- en: Flow of a transaction in blockchain technology
  prefs: []
  type: TYPE_NORMAL
- en: A blockchain network consists of nodes or blocks, each of which contains a record
    of all transactions. Each node in a blockchain network is equiprobable to be trusted,
    and once a node solves a cryptographic puzzle (a mathematically hard problem),
    it is permissible to add the next block to the blockchain in exchange for a performance
    bonus. This technique is known as mining, and the node to solve the puzzle is
    known as miners [[10](#CR10)].Table 2
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain consensus mechanisms
  prefs: []
  type: TYPE_NORMAL
- en: '| Mechanism | Operational principle |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of work | Miners solve complicated mathematical puzzles to receive
    a block as reward. Difficulty level for puzzles is determined by the mining speed
    |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of stake | Uses randomized process for selecting the node who will
    get chance to add a block. A new block is more likely to be created by the user
    who has the largest stake or has owned bitcoin for the longest time. It is a less
    energy-intensive method than Proof of Work |'
  prefs: []
  type: TYPE_TB
- en: '| Delegated proof of stake | Users stake their coins to vote for a specific
    number of delegates in a stake-weighted voting mechanism. The delegate with highest
    number of votes is favoured to create a new block. It is one of the fastest consensus
    mechanisms for blockchain |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of capacity | Users use digital storage to store the solutions for
    cryptographic puzzles. User with minimum storage capacity gets the chance to create
    a new block |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of Elapsed time | Uses amount of time spent by the users to choose
    producer of the new block. Each user is assigned with a random waiting time. The
    user with minimum waiting time gets chance to create the next block |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of authority | Personal identities of the validators of the network
    are kept at stake. Only validator nodes are allowed to create new blocks. It is
    a modified version of Proof of Stake |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of activity | It is a combination of Proof of Work (blocks with mining
    reward address and header information) and Proof of Stake (use of header information
    to choose validators randomly) |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of identity | Cryptographic evidence to ensure integrity and authenticity
    of created data by attaching an user’s private key to a given transaction. Only
    an identified user can create a block in the network |'
  prefs: []
  type: TYPE_TB
- en: The blockchain consensus mechanism is the set of rules that govern the process
    of validating transactions to be entered into the blockchain by the nodes, as
    shown in Fig. [3](#Fig3). These rules are established at the time of blockchain
    creation. In case of a situation when both the parties want to initiate communication
    without knowing or trusting each other, in order to agree on the inclusion of
    transactions into the blockchain, a consensus mechanism is built in. This can
    resolve Byzantine Generals Problem [[11](#CR11)]. To support authenticity and
    immutability of transaction records, each blockchain has its own consensus method
    based on the type of active transactions it works with. Proof of Work (PoW), Proof
    of Stake (PoS), and delegated Proof of Stake (dPoS) are several well-known consensus
    mechanisms [[7](#CR7)]. Proof of Capacity, Proof of Elapsed Time, Proof of Authority,
    Proof of Activity, and Proof of Identity are some of the other consensus procedures.
    Table [2](#Tab2) represents the basic operational principles of all these consensus
    mechanisms. The process of finding a single reliable consensus mechanism is increasingly
    complex due to the nascency of the underlying platform. But, integrating blockchain
    technology with business applications requires information about all these mechanisms.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Scalability Aspects of Classical Blockchain
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The thrive for achieving scalability in a blockchain is limitless, as adoption
    of blockchain is often bottlenecked due to the lack of a scalable solution. Bitcoin
    can handle 4.6 TPS (Transactions Per Second); Visa, on the other hand, can handle
    1,700 TPS on average from over 150 million TPD (Transactions Per Day) [[6](#CR6)].
    Blockchain-based systems move at a slower rate. The slow transaction speed of
    blockchain is a major concern for enterprises that rely on high-performance legacy
    transaction processing systems. Just to add a number for the percentage of adoption
    of blockchain by organizations, it is close to around 44% based on a survey performed
    by Tata Communications.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Blockchain Scalability from Existing Standpoint
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Uncontrolled delays during transfers, excessive fees on the Bitcoin network,
    and congestion-uncontrolled traffic on the Ethereum blockchain network, on which
    thousands of decentralized transactions are conducted, can all be attributed to
    scalability concerns in blockchain [[12](#CR12), [13](#CR13)].
  prefs: []
  type: TYPE_NORMAL
- en: 3.1.1 Blockchain Scalability Metric
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Blockchain transaction speed is a function of average block size and average
    transaction size. Mathematically, the transaction speed of a blockchain network
    can be visualized as,![$$\begin{aligned} BC = AB / AT \end{aligned}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_Equ1.png)(1)where
    BC is Block Capacity (in terms of transaction count), AB is Average Size of Block
    (in Bytes) and AT is Average Size of Transaction (in Bytes).
  prefs: []
  type: TYPE_NORMAL
- en: 3.1.2 Market Incompetency of Bitcoin TPS
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Block size of Bitcoin is hard-cored at 1 million bytes (8.388608 megabits),
    and its average transaction size is approximately 3040 bits. This results in approximately
    2759.12 transactions fitting into one of Bitcoin’s blocks and a TPS of only 4.6\.
    The Bitcoin community has already attempted to enhance blockchain scalability
    by altering blockchain parameters. For this purpose, the metrics chosen were block
    size (in bytes, to be increased to increase TPS) and block generation time (in
    seconds, to be reduced in value by altering the complexity of the hashing puzzle).
    To achieve speedup in TPS like Visa, Bitcoin would require to increase its block
    size to 377.5 million bytes, which is 377.5x of default block size in Bitcoin
    [[6](#CR6)]. Keeping the block generation time of 10 min and average transaction
    size of 380 bytes(same as default) could ideally give a TPS of 1736\. Nevertheless,
    in effect, this speedup is unlikely to attain since a new block must be broadcast
    to every other node on the Bitcoin network, which involves a propagation delay
    or relay time. In a Bitcoin network comprising of 10,198 nodes, approximately
    14 s are required to transmit 99% of the block size of 1 million bytes across
    peers. Alternatively, if the block creation time is shorter than 14 s, a new block
    will be generated before the majority of current blocks receive an old block.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1.3 SegWit—Flow Control in Blocks of Blockchain
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: SegWit or Segregated Witness aims at providing a solution to scalability issues
    of the Bitcoin network. It believes that the witness portion of any transaction
    should be kept separate from the actual transaction. The actual transaction is
    the base transaction data that covers how bitcoins are moving, where they are
    being moved to, and how they are being accessed. But, the “witness” part comprises
    a bit of code with cryptographic signature data to prove that the owner of bitcoin
    is interested in spending the bitcoin. This prevents the denial-of-service actions
    and helps to achieve non-repudiation. The SegWit soft fork approach aids in increasing
    block size without requiring changes to core code, but the real challenge of scalability
    is in blockchain value propositions. The high propagation time of transactions
    can lead to significant security issues like double-spend attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '**Double-Spend Attack in Blockchain** The computational power of a decentralized
    proof-of-work system is the cumulative sum of the individual computational power
    of the nodes. Increased computational power increases the likelihood of winning
    the mining reward for each newly created block, creating an incentive or bias
    among nodes in mining pools. If a collection can achieve 51% hashing power, it
    can effectively overturn network transactions and create a double-spend attack.
    Bitcoin fork ‘Bitcoin Gold’ (BTG) was hit by such an attack in 2018 and again
    in 2020 at the cost of around $72,000 worth of BTG [[14](#CR14)].'
  prefs: []
  type: TYPE_NORMAL
- en: 3.2 Future Classical Approaches to Solve Scalability
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The inapplicability of a classical approach to solving the scalability issues
    of blockchain in cross-cryptocurrency platforms is a major concern. Another challenge
    lies in understanding the assumptions to be made for achieving trade-off among
    multiple scalability parameters.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.1 Batch Processing of Multiple Transactions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Batch processing is the process of condensing multiple transactions into a single
    transaction record in order to reduce the size of the transaction record. This
    allows for even more transactions for every block, resulting in a single batch
    payment for all transactions. Here, instead of complete information of all the
    transactions, the first transaction information is stored entirely. For the rest
    of the transactions, only a fraction of the data is stored. This approach helps
    reduce the amount of transaction data (in bytes) to be stored and the payment
    cost. But, often, there is a limitation in creating batches of different transactions
    from different wallets. Moreover, this approach does not provide privacy as details
    of other transactions in a batch are open.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.2 Bitcoin Cash—Hard Bitcoin
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Bitcoin Cash is a Bitcoin hard fork that was created as an alternative to Bitcoin
    in order to add value propositions in terms of transaction speed. The primary
    motivator of Bitcoin Cash is to increase the default block size of 1 million bytes
    (as used in Bitcoin) to 8 million bytes, which can speed up the whole transaction
    processing system and provide a TPS 8x of the default. But, this is a temporary
    solution to meet the global benchmark and compete in transacting space. Additionally,
    it might not be adaptable for other blockchain networks.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.3 Lightning Network for Reserved Bitcoin Transactions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The lightning network facilitates instant processing of reserved transactions
    and promotes micro-transacting. The payment channel created on a lightning network
    does not run transactions through a Bitcoin blockchain rather, it considers them
    as reserved and charges no additional transaction fee. This method allows users
    to retrieve their bitcoins from the blockchain and transact privately with another
    party. However, the lightning network has limitations in that it only works with
    Bitcoin-core-based blockchains such as Bitcoin Cash, Dogecoin, Digibyte, Litecoin,
    and etc. [[15](#CR15)].
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.4 BloXroute—Blockchain-Agnostic On-Chain Solution
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Unlike off-chain transactions, which take the value outside of the blockchain,
    an on-chain transaction is considered valid only if the blockchain is modified
    to reflect the transaction on a public ledger. On the other hand, blockchain-agnosticism
    refers to a single platform that allows operation from different underlying blockchain
    technologies. BloXroute is a startup focusing on BDN (Blockchain Distributed Network)
    while inspired by the concept of CDN (Content Delivery Network). A content delivery
    network is a spatially distributed network comprising of proxy servers and data
    centers. The primary goal of a CDN is to deliver content to end users at a greater
    incidence using a technique known as replication. CDNs provide web content services
    by utilizing content from other servers and directing it to users from the proximity
    data center. Though BDN is still in the conceptual phase, it can refer us in the
    right direction for addressing blockchain’s scalability issue in the future.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.5 EOS—Scalability Through Delegated PoS (Proof-of-Stake)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: EOS is a blockchain project which provides high-end theoretical scalability
    using delegated PoS. The enormous amount of electricity used in Bitcoin is due
    to the PoW (Proof-of-Work) algorithm used as a consensus mechanism to secure Bitcoin
    blockchain. The PoW algorithm functions by claiming all blockchain nodes to solve
    a cryptographic puzzle. Miners solve this puzzle, and the miner who solves it
    first receives the miner reward. As per digiconomists, “Bitcoin miners alone use
    about 54 Twh of electricity, enough to power 5 million households in the US or
    even power the entire country of New Zealand” People with improved facilities
    in terms of both equipment quality and quantity are rewarded more in PoW. The
    better the hash rate, the more probable it is to create a block and receive the
    mining award. Miners frequently form mining pools in which they combine their
    hashing power and distribute the reward evenly among all participants of the pool.
    The above-mentioned issues of PoW open up the requirement of a new consensus mechanism,
    known as Proof-of-Stake (PoS). PoS employs an election process to select a node
    at random to validate the next block. The selection of validators is not entirely
    random; instead, to become a validator, a node must deposit a certain amount of
    coins as a stake into the network. There is a linear relationship between stake
    size and the likelihood of a validator forging the next block. Unlike Bitcoin,
    EOS relies on a democratically elected pool of 21 validators to attain a faster
    consensus. This does come at the cost of decentralization, as to take control
    of EOS consensus mechanism, one only needs to gain control of more than 50% of
    the producers (11 nodes out of 21). Delegated PoS is the key part of delivering
    the revolutionary speed (millions of TPS) and efficiency that EOS promises to
    give.
  prefs: []
  type: TYPE_NORMAL
- en: 4 Quantum-aid to Classical Blockchain
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Technological advancements of blockchain and other Distributed Ledger Techniques
    (DLTs) promise to provide significant advantages to applications seeking transparency,
    redundancy, and accountability. Actual adoption of these emerging technologies
    requires incorporating cost-effective, fast, QoS-enabled, secure, and scalable
    design. Moreover, the computational latency of blockchain platforms causes slow
    transaction speed, so quantum computing principles might provide significant speedup
    and scalability in transaction processing and accelerating the mining process.
  prefs: []
  type: TYPE_NORMAL
- en: 4.1 Quantum Offers Unprecedented Growth in Computing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Quantum computing exhibits non-determinism by taking the advantage of laws of
    quantum mechanics found in bewilder random nature and represents a fundamental
    change from classical information processing. It exploits the “weirdness” of quantum
    mechanical phenomena (probabilistic nature of computation, theory of superposition
    and entanglement) to create machines far more powerful than even today’s available
    High Performance Computers. Today’s classical, transistor-based machines utilize
    classical bits, 0 and 1 to represent an information. In quantum setting, particles
    do normally exist as several mathematical possibilities rather than one actual
    object in absence of any observation. Quantum computers would not only be just
    able to provide exponential speed-up over its classical counterpart, rather their
    fundamental working principles would allow tackling complex computing tasks that
    aren’t even implementable for existing machines.
  prefs: []
  type: TYPE_NORMAL
- en: 4.1.1 Qubit
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A qubit, also known as a quantum bit, is the smallest unit of information in
    quantum computing. It is the quantum version of the classical bit, which can be
    physically realized as a coherent coexistence of both 0 and 1, unlike either of
    the states in classical computation. Qubit measurement might destroy the coherence
    and irrevocably cause disturbance in the superposition state. A linear superposition
    of two orthonormal basis states can be used to represent the quantum state of
    a qubit. A superposition state vector in 2*n* dimensional Hilbert space can represent
    a multi-qubit (*n*-qubit) system.
  prefs: []
  type: TYPE_NORMAL
- en: 4.1.2 Quantum Superposition
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Quantum superposition refers to the simultaneous existence of a quantum particle
    as mathematical possibilities described by a wave function rather than one actual
    object. Mathematically, it corresponds to a property of solutions to the Schrodinger’s
    equation where any linear combination of solutions is another solution. In quantum
    information processing, ![$$ \left| {0} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq1.png)
    and ![$$ \left| {1} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq2.png)
    are the Dirac notation for the pure quantum states, which will always give the
    result 0 and 1 respectively when converted to classical logic by a measurement.
    Then a quantum state ![$$\alpha \left| {0} \right\rangle + \beta \left| {1} \right\rangle
    $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq3.png) will be
    superposition of linear states ![$$ \left| {0} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq4.png)
    and ![$$ \left| {1} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq5.png)
    with complex numbers ![$$\alpha $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq6.png)
    and ![$$\beta $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq7.png)
    as coefficient representing how much ![$$ \left| {0} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq8.png)
    and ![$$ \left| {1} \right\rangle $$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq9.png)
    go into each configuration [[16](#CR16)]. This notion of coexistence in multiple
    states holds true only under the absence of observation.
  prefs: []
  type: TYPE_NORMAL
- en: 4.1.3 Quantum Entanglement
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Even more surprising than superposition, Einstein’s theory of “Spooky action
    at a distance” in “EPR (Einstein—Podolsky—Rosen) paradox” opens up a new dimension
    of quantum mechanics interpretation, known as entanglement. Quantum theory predicts
    that two entangled entities might have correlated fates, as the measurement on
    one entity leads instantaneously to a correlated result. Before the measurement,
    the outcome of a quantum experiment is unknown, but the correlation between the
    outcomes prior to obtaining the actual outcome is fully deterministic. Once one
    outcome of the entangled pair is obtained, there remains no uncertainty about
    the outcome of the other.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2 Quantum Advantage in Blockchain Scalability
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Quantum mechanical principles mentioned above can provide substantial speed-up
    over classical computing [[17](#CR17)]. Since blockchain platform is rigorously
    used in multiple fintech applications, four use cases of fintech applications
    have been analyzed where quantum invasion can be made to provide computational
    advantage.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.1 Supercharged Data Analyses
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Unlocking blockchain’s potential to manage Internet of Things (IOT) devices
    will help understand the huge volume of data generated and processed by multiple
    transactions. This analysis primarily helps in decision-making systems where consistency,
    autonomicity and processing delays can be adjusted. Predictive analytics in blockchain
    technology enables trackability of the provenance of items along the supply chain.
    Lack of sufficient data leads to inaccurate predictions, and available classical
    systems with classical bits are less efficient in processing a massive volume
    of data. Exploiting quantum mechanical principles like quantum parallelism can
    provide a significant speedup in supercharged data analyses. Better utilization
    of a quantum-enabled analytical model using blockchain data of a particular organization
    enables identifying potential return on investment (ROI) sources.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.2 Greater Calculation Speed
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Limited block size and difficulty of proof of work of bitcoin consensus protocol
    lead to a bottleneck in transaction processing capacity [[18](#CR18)]. Operations
    like duplicate record keeping, third-party validations, etc., constitute limited
    transparency and causes slow data verification. Classical solutions to use a better
    machine or faster communication links can provide enhanced throughput in transaction
    processing speed, but to a limited extent (around 5x). Upon the availability of
    fault-tolerant quantum computers, in the future, the quantum era will provide
    noiseless qubits for enhanced processing speed, accuracy, and a faster mode of
    communication using quantum networks. This mode of immediate execution of transactions
    will incur low computational complexity and reduced resource overhead.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.3 Reduced False-Positive in Fraud Detection
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Classical fraud detection models mainly rely on interpreting past payment methods
    for assigning risk scores and detecting fraud payment transactions. Despite the
    advent of artificial intelligence and machine learning algorithms, classical intelligent
    systems cannot adapt themselves in processing real-time dynamic data on per event-by-event
    basis. This leads to unfiltered false-positive cases, which can drastically affect
    resource overhead and speed of fraud investigation, resulting in a significant
    impact on profitability and customer experience. One of the possible solutions
    to drive down the false positives is the calculation speed and optimality in choosing
    the data points. This can enhance the accuracy and adaptability of the fraud alert
    investigations. Quantum machine learning has the potential to achieve significant
    speedup over classical machine learning models. If more data points are fed into
    the training model, re-adjustment of fraud detection rules and models to match
    the perceived level of risk will be enhanced.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2.4 Efficient Monte-Carlo Simulation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The cryptocurrency market is still volatile as it is decentralized, open, and
    highly accessible. Monte Carlo simulation and time series analysis are essential
    for forecasting future risk and return associated with cryptocurrencies for a
    selected time period. The classical Monte Carlo algorithm is computationally less
    efficient under simulation performed over many variables bounded to different
    constraints. The process incurs huge time overhead, and approximating a solution
    will involve many computations. If conditions and parameters put into the model
    are poor and unfiltered, the simulation outcome will be poor. By estimating the
    expected output value of an arbitrarily defined randomized function, quantum algorithms
    can accelerate and achieve quadratic speedup over classical Monte Carlo algorithms
    in a very general context.
  prefs: []
  type: TYPE_NORMAL
- en: 5 Shor’s Algorithm—Threats on Classical Public-Key Blockchain Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Shor’s algorithm is a polynomial-time quantum algorithm for large integer factorization.
    Developed in 1994 by Peter Shor, it is able to find prime factors of any integer.
    The efficiency of Shor’s algorithm is due to the efficiency of QFT (Quantum Fourier
    Transform), QPE (Quantum Phase Estimation) and modular exponentiation by repeated
    squaring. Shor’s algorithm is able to break classical cryptographic schemes like
    RSA, ECDSA, EdDSA as these algorithms inherently rely on the mathematical hardness
    of prime factorization and discrete logarithmic problems. Shor’s algorithm is
    able to provide exponential speed-up over the best-known classical algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 RSA (Rivest Shamir Adleman) Algorithm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In RSA, a user sends his or her public key to the server and requests confidential
    information. The server encrypts the data or the plain text with user’s public
    key and returns the encrypted data referred as cipher text. The user decrypts
    the data after receiving it with his or her private key. For creating and encrypting
    blockchain wallets, blockchains use an algorithm similar to that of RSA [[19](#CR19)].
    A pair of public address-private key is generated whenever a cryptocurrency wallet
    is created. The user’s public address is used to receive cryptocurrencies and
    check respective blockchain balances [[20](#CR20)]. On the other hand, the user’s
    private key is used in conjunction with the public key to access and spend the
    user’s crypto. Mathematically, RSA uses a one-way trapdoor function where public
    information is two large prime numbers whose product is used as the modulus for
    encryption and decryption. The intractability lies in the mathematical hardness
    to calculate back the factors of such a large integer. But this was true until,
    Peter Shor invented a novel quantum algorithm for large integer factorization
    using Quantum Fourier Transform (QFT) and Quantum Phase Estimation (QPE) in 1994\.
    A quantum computer with 4096 logical qubits can break a 2048-bit key RSA encryption
    in significantly less amount of time in comparison to the classical counterpart
    [[19](#CR19)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 ECC (Elliptic Curve Cryptography) and ECDSA (Elliptic Curve Digital Signature
    Algorithm)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Elliptic curve-based algorithmic subroutines are used as standards for generating
    wallet keys and signing transactions. To generate the public key, ECDSA generates
    a private key from 256-bit random seed [[3](#CR3), [21](#CR21)]. Classically,
    it is very difficult to find the random value for a given generated public key.
    The randomly generated private key is used to sign transactions, and the public
    key is used to prove that a private key has been used. Shor’s algorithm, on the
    other hand, can reverse the private key for any public address and gain control
    of a person’s wallet. Though from a cryptographic primitive “security-level” (in
    terms of bits or the number of operations that an attacker must adhere to in order
    to compromise the underlying system’s security) point of view, ECDSA provides
    a better security level than RSA. A 224-bit sized public key ECDSA provides a
    112-bit security level. In RSA, on the other hand, a 2048-bit public key is required
    to achieve the same 112-bit security level. But, with respect to post-quantum
    resistance, ECDSA is under more threat than conventional RSA [[4](#CR4), [19](#CR19)].
    According to research insights, “RSA 2048-bit keys require around 4096 qubits
    (5.2 trillion tofolli quantum gates) to be defeated, whereas ECDSA 256-bit keys
    require only 2330 qubits (126 billion tofolli quantum gates)” [[3](#CR3)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 ECDH (Elliptic Curve Diffe Hellman) Algorithm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ECDH protocol is a key agreement platform that enables two parties to establish
    a shared secret over an unsecured network. This term is used in the context of
    blockchain technology by having the bitcoin receiver publish some ECDH-information
    which is to be used by the sender for calculating a shared secret [[22](#CR22)].
    This shared secret is the bitcoin address, also referred to as a stealth address,
    reusable payment codes, reusable address, or paynyms to which a sender sends his
    money [[22](#CR22)]. The receiver calculates the corresponding private key to
    gain access to the money. The underlying cryptographic hardness for the key exchange
    protocol relies on the mathematics of Discrete Logarithm Problem (DLT). The objective
    is to determine a unique integer that can be the order of the generator element
    of a finite cyclic group. DLP appears to be extremely computationally hard for
    general elliptic curves, as the best known classical algorithms for DLP on elliptic
    curves are generic algorithms with run time complexity exponential to the number
    of bits required for describing the problem. Modified Shor’s algorithm for DLP
    can theoretically achieve exponential speedup to break the ‘thought to be’ irreversible
    and intractable one-way function.
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 DSA (Digital Signature Algorithm)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Digital signatures are used to ensure the integrity of a file or a message in
    the blockchain system in order to confirm non-repudiation (post-denial) of information.
    However, due to inadequate diversity in industrial settings, currently available
    cryptosystems are likely to be subjected to quantum computer-aided attacks. The
    degree of security provided by Classical Digital Signature (CDS) schemes rely
    on intractability and complexity of large integer factorization and discrete logarithmic
    problem. This makes the system to be no longer quantum-safe in the near-term era
    [[23](#CR23)].
  prefs: []
  type: TYPE_NORMAL
- en: 6 Grover’s Algorithm—Threats on Classical Blockchain Techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Grover’s algorithm is able to demonstrate superior speed searching capability
    over classical computer. It shows quadratic speed-up to solve unstructured database
    search problem using a technique called quantum amplitude amplification. But,
    the biggest advantage lies in the fact that it can serve as a general trick or
    as a subroutine to solve a variety of other complex algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 Faster Detection of Hash Collision
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Blockchain focuses on the calculation of hash functions to offer security against
    the alteration of previous blocks, thereby ensuring block integrity. Underlying
    distributed architecture demands massive computational effort in recomputing a
    chain of blocks, finding a hash collision with existing hash and modifying a single
    block are of extreme challenge [[24](#CR24)]. However, Grover’s algorithm can
    specifically solve the problem of obtaining the pre-image of a function value
    that was previously difficult to invert [[25](#CR25), [26](#CR26)]. Given a hash
    value (signature) and a hash function as input to the quantum computer, Grover’s
    algorithm can give us the original data on which the hash was applied in quadratically
    smaller number of efforts. This allows more efficient and accelerated generation
    of hash collisions rather than brute-force search [[8](#CR8)]. Hence, it provides
    a feasible speedup in detecting hash collisions, which can be utilized for block
    replacement without jeopardizing the blockchain integrity—this can lead to a serious
    security threat to classical blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 6.1.1 Recreation of Entire Blockchain
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Grover’s can speed up the generation of nonces to an extent where the entire
    chain of records can be recreated with consistently modified hashes. A classical
    attack necessitates using linear-time brute-force search, which involves the whole
    hash space until a match is found with the known hash value [[26](#CR26)]. This
    potentially causes vulnerabilities in the system as inserting a modified block
    will remain unspotted as it will not negatively affect the sequential consistency
    of blocks.
  prefs: []
  type: TYPE_NORMAL
- en: 7 Post-Quantum Initiatives for Quantum-Resistant Cryptography
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The goal of post-quantum cryptography is to address the issues of quantum threats
    posed by super powerful quantum computers by developing new methods of protecting
    data and communications. Pre-quantum and post-quantum security level of different
    classical cryptographic algorithms including both hash—function based techniques
    and encryption techniques are shown in Tables [3](#Tab3) and [4](#Tab4) respectively.
    This in turn necessitates devising strategies for implementing quantum-resistant
    encryption. Preparing to plan ahead of time will reduce system outages and offer
    flexibility in adapting to deployment flaws. The following section covers four
    major post—quantum initiatives that have been taken by scientists and researchers
    all over the world to contribute for quantum—resistant cryptographic solutions.Table
    3
  prefs: []
  type: TYPE_NORMAL
- en: Hash-function based algorithms under quantum threat
  prefs: []
  type: TYPE_NORMAL
- en: '| Classical Algorithm | Current security level (bits) | Post-quantum security
    level (bits) | Quantum algorithm causing threat | DLTs under threat |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| SHA-256 (Secure Hash Algorithm) | 256 | 128 | Grover | Bitcoin, Ethereum,
    Dash, Monero, Litecoin, Zeash, Ripple, NXT, Byteball [[27](#CR27)] |'
  prefs: []
  type: TYPE_TB
- en: '| Keccak-256 | 256 | 128 | Grover | Ethereum, Monero, Bytecoin |'
  prefs: []
  type: TYPE_TB
- en: '| Keccak-384 | 384 | 192 | Grover | IOTA [[28](#CR28)] |'
  prefs: []
  type: TYPE_TB
- en: '| Keccak-512 | 512 | 256 | Grover | Ethereum |'
  prefs: []
  type: TYPE_TB
- en: '| Scrypt | 256 | 128 | Grover | Litecoin, NXT |'
  prefs: []
  type: TYPE_TB
- en: '| RIPEMD 160 (RIPE Message Digest) | 160 | 80 | Grover | Bitcoin, Ethereum,
    Monero, Litecoin, Ripple, Bytecoin |'
  prefs: []
  type: TYPE_TB
- en: '| SHA-3 256 | 256 | 128 | Grover | – |'
  prefs: []
  type: TYPE_TB
- en: Table 4
  prefs: []
  type: TYPE_NORMAL
- en: Asymmetric and symmetric encryption algorithms under quantum threat
  prefs: []
  type: TYPE_NORMAL
- en: '| Classical Algorithm | Current security level (bits) | Post-quantum security
    level (bits) | Quantum algorithm causing threat | DLTs under threat |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ECDSA | 128 | Broken | Shor | Bitcoin, Ethereum, Dash, Litecoin, Zeash, Ripple,
    Byteball |'
  prefs: []
  type: TYPE_TB
- en: '| RSA-1024 | 80 | Broken | Shor | – |'
  prefs: []
  type: TYPE_TB
- en: '| RSA-2048 | 112 | Broken | Shor | – |'
  prefs: []
  type: TYPE_TB
- en: '| RSA-3072 | 128 | Broken | Shor | – |'
  prefs: []
  type: TYPE_TB
- en: '| AES-128 | 128 | 64 | Grover | – |'
  prefs: []
  type: TYPE_TB
- en: '| AES-256 | 256 | 128 | Grover | – |'
  prefs: []
  type: TYPE_TB
- en: 7.1 PQCrypto
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is one of the initiatives that allows users to migrate from classical cryptography
    to quantum-resistant cryptography or post-quantum cryptography so that they remain
    secure for the long term against attacks from quantum computers. The primary aim
    of PQ Crypto is to devise a portfolio of public-key cryptosystems in post-quantum
    era with (i) improved speed, (ii) enhanced security, (iii) adaptability to several
    performance challenges of IoT, Cloud, and mobile devices, etc. [[29](#CR29)].
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 SAFEcrypto
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The word SAFEcrypto stands for Secure Architectures of Future Emerging Cryptography.
    Its primary aim is to provide robust, physically secure solutions for future IOT
    applications in the quantum era [[30](#CR30)]. Underlying mathematical source
    to provide computational hardness is based on lattice-based cryptographic primitives
    to increase the security of digital signatures, authentication schemes, public
    key encryption, attribute-based encryption (ABE) and identity-based encryption
    (IBE), etc. Since post-quantum initiatives require low power consumption and real-time
    performance, SAFEcrypto aims to achieve 10x speed up throughout for real-time
    application scenarios and 5x reduction in amount of energy consumed for low power
    and embedded mobile applications. The algorithmic optimization and improved design
    using lattice-based cryptographic schemes can enhance the performance of both
    resource-constrained and real-time internet applications.
  prefs: []
  type: TYPE_NORMAL
- en: 7.3 CryptoMathCREST
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This post-quantum initiative is a part of the CREST funding program, which is
    managed by the Japan Science and Technology Agency (JST). The main aim behind
    this initiative is to analyze the mathematical formulations and their variations
    underlying modeling of the security of a next-generation cryptosystem.
  prefs: []
  type: TYPE_NORMAL
- en: The novel mathematical techniques emerged as research outcome will serve as
    the basis of the construction of new cryptographic protocols. The four key research
    areas of CREST Crypto Math project comprising of 25 mathematicians and four postdocs
    involve investigation of the security model in industry applications, evaluation
    of security and efficiency of post-quantum cryptography, study on mathematical
    object and reduction map used in cryptography, and exploration of theoretical
    background for quantum technology and quantum information theory [[31](#CR31)].
  prefs: []
  type: TYPE_NORMAL
- en: 7.4 Post Quantum Standardization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Post quantum cryptography standardization is a program hosted by NIST to update
    their standards where Post-quantum cryptography (PQC) or quantum resistant algorithms
    (QRAs) can be incorporated. Symmetric key cryptographic primitives like Advanced
    Encryption Standard (AES), Data Encryption Standard (DES) are comparatively easy
    to modify in a way that helps them increase their security level (in terms of
    bits) and become quantum resistant [[32](#CR32)]. So, the primary focus of the
    NIST PQC initiative is on public-key cryptographic primitives like digital signature
    and Key encapsulation mechanisms (KEMs), currently, NIST initiated a call for
    proposals is in round three out of the expected four rounds. The call for proposals
    and timeline of NIST Post Quantum Cryptography Standardization project has been
    depicted in Fig. [4](#Fig4) [[33](#CR33)–[35](#CR35)]. These post-quantum cryptographic
    initiatives can have a diverse range of security applications [[36](#CR36)–[38](#CR38)].
    The more precise post-quantum initiative designed for blockchain includes Bitcoin
    Post Quantum, Ethereum 3.0, and quantum-resistant cryptosystem for Abelian platform
    and PQC for Corda blockchain to name a significant one [[39](#CR39)]. In the next
    section, all these four post-quantum initiatives, including their operational
    principle, pros and cons, relevance with respect to current blockchain technology,
    and underlying challenges in implementation will be discussed [[40](#CR40), [41](#CR41)].
    The timeline for NIST standardization project is summarized below in Fig. [4](#Fig4)
    [[42](#CR42), [43](#CR43)].![](../images/516210_1_En_9_Chapter/516210_1_En_9_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 4
  prefs: []
  type: TYPE_NORMAL
- en: Timeline for NIST standardization project
  prefs: []
  type: TYPE_NORMAL
- en: 8 Post Quantum Initiatives on Blockchain
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Classical cryptographic primitives used in blockchain technologies are under
    threat due to quantum computers. In order to overcome the cryptographic challenges
    in classical blockchain, several post-quantum cryptographic initiatives have already
    been taken [[44](#CR44)]. The main aim behind these initiatives and their relevance
    with respect to classical security systems are specified as follows.
  prefs: []
  type: TYPE_NORMAL
- en: 8.1 Bitcoin Post-Quantum
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Post quantum initiative specific to Bitcoin blockchain technology will comprise
    of the operational principle of Bitcoin security, its vulnerability in post-quantum
    era and how hash based PQC scheme can be used to make classical Bitcoin quantum-safe.
  prefs: []
  type: TYPE_NORMAL
- en: 8.1.1 Bitcoin Security Primitive/Operational Principle
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The security of decentralized digital cryptocurrency, Bitcoin is based on the
    ECDSA and Proof of work (PoW) algorithms, which authorize the payer and prevent
    double-spending [[45](#CR45)]. Bitcoins are transferred between users via transactions
    from one address to another, where the address represents the hash of the receiver’s
    public key, which is revealed when the transaction is distributed over the bitcoin
    network [[4](#CR4)]. The amount of bitcoin owned is determined by the private
    key ownership associated with the given public key. The digital signature used
    to sign the transaction shows the proof of ownership.
  prefs: []
  type: TYPE_NORMAL
- en: 8.1.2 Quantum-Threat to Bitcoin Security
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The strength of ECDSA is based on a discrete logarithm problem, which is vulnerable
    to Shor’s algorithm [[46](#CR46)]. The corresponding private key can be calculated
    using a quantum computer whenever a public key is disclosed in the network. A
    new transaction can be forged with a valid digital signature. But, the process
    of searching the pre-image of the hash is still computationally complex, even
    in a quantum computer. Quadratic speedup of Grover’s algorithm will not put significant
    speedup on hash functions of appropriate length.
  prefs: []
  type: TYPE_NORMAL
- en: 8.1.3 Quantum-Safe Hash-Based Cryptography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'High security, adequate signature length, and admissible key generation time
    allow the extended Merkle Signature Scheme (XMSS) to be used as a quantum-safe
    digital signature scheme in the PQC era [[47](#CR47)]. To achieve a post-quantum
    security level, at least 256-bit hashes (as used in P2WSH, Pay-to-Witness-Script-Hash)
    must be to provide 128-bit collision resistance. XMSS digital signature scheme
    combined with RFC 8391 can naturally resist side-channel attacks and guarantees
    security against quantum attacks by providing 128-bit post-quantum security level
    (256-bit hash) [[48](#CR48)]. (iv) Usability and relevance to current blockchain:
    The number of signatures required to find an authentication path from a given
    XMSS tree is an exponential determinant of the height of the tree. An increase
    in the height of the XMSS tree will imply more transactions to be signed (2h =
    1024, 1048576 for h = 10, 20 respectively). On a modern classical computer, this
    can consume time ranging from less than a second (h = 10) to about 10 min (h =
    20) despite being quantum-safe [[48](#CR48), [49](#CR49)]. Moreover, as per Bitcoin
    Post—Quantum (BPQ) consensus, the most prominent approach is to generate both
    XMSS key and a quantum-safe address. However, BPQ approach discovered so far is
    impractical for blockchain applications as XMSS is computationally slow [[50](#CR50),
    [51](#CR51)].'
  prefs: []
  type: TYPE_NORMAL
- en: 8.2 Ethereum 3.0
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to understand the post quantum initiative of Ethereum, first the classical
    security primitive used in Ethereum followed by the vulnerabilities caused by
    classical cryptographic algorithms on Ethereum have been discussed. Then the details
    of quantum—safe cryptographic primitive to enhance Ethereum security has been
    considered along with its usability and relevance with respect to current blockchain
    scenario.
  prefs: []
  type: TYPE_NORMAL
- en: 8.2.1 Ethereum Security Primitive/Operational Principle
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Ethereum uses zero-knowledge (ZK) proof technologies, enabling one party to
    prove his knowledge to another party without actually conveying the information
    itself [[52](#CR52), [53](#CR53)]. This privacy-enhancing technique allows Ethereum
    to be a scaling technology as the amount of information transfer between users
    will be significantly reduced, and proofs can be verified at a much faster rate
    [[52](#CR52), [54](#CR54)].
  prefs: []
  type: TYPE_NORMAL
- en: 8.2.2 Quantum Threat to Ethereum Security
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Ethereum cryptocurrency relies on ZK-SNARK (Zero-Knowledge Succinct Non—Interactive
    Argument of Knowledge) technique [[55](#CR55), [56](#CR56)]. Although the technique
    is non—interactive, meaning code can be run or deployed autonomously, it requires
    a trusted setup. Trusted setup architecture requires key creation to generate
    and verify proofs for private transactions. The secrets which are used to generate
    these keys can be used to forge transactions unless destroyed. The underlying
    cryptographic primitive used for ZK-SNARK is another disadvantage of Ethereum
    technology as it primarily relies on elliptic curve cryptography. This can put
    threats on Ethereum security as obtaining the discrete logarithm of the elliptic
    curve chosen randomly for a given publicly known basis will not remain infeasible
    upon the availability of a full-scale quantum computer.
  prefs: []
  type: TYPE_NORMAL
- en: 8.2.3 Quantum-safe Cryptographic Primitive (ZK—STARKS)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: ZK-STARK (Zero-Knowledge Scalable Transparent Argument of Knowledge) is the
    post-quantum initiative of Ethereum 3.0, where post-quantum security can be achieved
    using quantum-resistant hash functions [[25](#CR25), [57](#CR57)]. Additionally,
    the requirement of trusted set-up architecture is no longer there in the utilization
    of ZK-STARK in the network. This helps to remove the vulnerability of the trusted
    parties compromising overall system privacy. The advantage of STARK can be realized
    on improved scalability and enhanced privacy [[56](#CR56)]. It can perform bulk
    computations and storage off-chain allowing exponential scaleup of blockchain
    infrastructure without losing computational integrity.
  prefs: []
  type: TYPE_NORMAL
- en: 8.2.4 Usability and Relevance to Current Blockchain
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Although issues like the requirement of trusted setup architecture and quantum
    attacks on elliptic curve algorithms, technology like ZK—SNARK has a faster adoption
    rate over quantum-resistant ZK—STARKS [[48](#CR48)]. Reasons behind the lower
    acceptance rate of ZK—STARKS are lack of developer libraries, published code,
    projects, and developers currently available to work on that technology. Moreover,
    the development of quantum computers in terms of more availability of noise-free
    qubits to perform those quantum attacks is also in its nascency and far costlier
    for the end-user concerning the current scenario.
  prefs: []
  type: TYPE_NORMAL
- en: 8.3 Abelian
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Abelian is one of the several PQC platforms that leverages on lattice based
    cryptographic schemes to provide accountable privacy. Abelian initiative permits
    auditing of private transactions by different regulatory authorities in order
    to serve diverse consortium applications. The primary aim of this initiative is
    to design, develop, deploy and run a fully operational platform under quantum—resistant
    blockchain scheme.
  prefs: []
  type: TYPE_NORMAL
- en: 8.3.1 Blockchain Privacy Primitive/Operational Principle
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Data privacy has always been one of the major challenges in near-term blockchain
    applications. Cryptographic tools can preserve privacy in the case of both permission-based
    and permission-less applications. The applications like Fully Homomorphic Encryption
    (FHE), Multiparty Computation (MPC), Functional Encryption (FE), Searchable Encryption
    (SE) have several challenges and computational complexities associated with them
    [[58](#CR58)]. FHE seems to be the universal solution provider to any blockchain
    privacy issue but is not implementable in the near future. MPC technique is highly
    complex and inefficient in terms of computation and communication though they
    can provide privacy and verifiability in distributed computing platforms. FE and
    SE techniques lack theoretical research to devise compelling use cases and more
    efficient schemes for large datasets without compromising security.Table 5
  prefs: []
  type: TYPE_NORMAL
- en: Privacy perspective of major cryptocurrencies
  prefs: []
  type: TYPE_NORMAL
- en: '| Bitcoin | (a) Pseudonym from privacy concern |'
  prefs: []
  type: TYPE_TB
- en: '| (b) Wallet addresses and personal information of wallet holders are kept
    independently |'
  prefs: []
  type: TYPE_TB
- en: '| (c) Basic privacy level |'
  prefs: []
  type: TYPE_TB
- en: '| (d) Transactions are traceable as all transactions are recorded on the public
    ledger |'
  prefs: []
  type: TYPE_TB
- en: '| (e) Threat: if a graph can be built to represent all wallet addresses as
    nodes and all transactions as edges, the complete view of the bitcoin system can
    be obtained from a single bitcoin full node through graph analytics |'
  prefs: []
  type: TYPE_TB
- en: '| Dash | (a) Improvement over Bitcoin using privacy-centric master nodes to
    weaker the traceability |'
  prefs: []
  type: TYPE_TB
- en: '| (b) By combining the inputs and outputs of individual transactions with the
    inputs and outputs of other transactions, the ‘mixing technique’ is used to obscure
    the link between the inputs and outputs of individual transactions |'
  prefs: []
  type: TYPE_TB
- en: '| CryptoNote | (a) Improvement over both Bitcoin and Dash |'
  prefs: []
  type: TYPE_TB
- en: '| (b) The originator’s identity is concealed by using a ring signature |'
  prefs: []
  type: TYPE_TB
- en: '| (c) Applies Diffe—Hellman key exchange protocol to hide recipient’s identity
    |'
  prefs: []
  type: TYPE_TB
- en: '| Zerocoin | (a) Breaks Linkage between individual transactions to improve
    privacy |'
  prefs: []
  type: TYPE_TB
- en: '| Monero | (a) Combines techniques from both Dash and CryptoNote to hide each
    transaction amount |'
  prefs: []
  type: TYPE_TB
- en: '| (b) Applies Zero—knowledge range proof to ensure that the originator cannot
    overspend any amount |'
  prefs: []
  type: TYPE_TB
- en: '| (c) One of the cryptocurrency techniques considered to be providing full
    privacy |'
  prefs: []
  type: TYPE_TB
- en: '| Zerocash | (a) Breaks linkage between transactions |'
  prefs: []
  type: TYPE_TB
- en: '| (b) Can hide the identity of the user, thus providing anonymity |'
  prefs: []
  type: TYPE_TB
- en: '| (c) Applies Zero-Knowledge SNARKs to cover up each transaction amount |'
  prefs: []
  type: TYPE_TB
- en: '| (d) Another cryptocurrency technique to provide full privacy |'
  prefs: []
  type: TYPE_TB
- en: 8.3.2 Privacy Perspective of Major Cryptocurrencies
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The existing cryptocurrencies can provide dual privacy due to their ability
    to keep anonymity of originator and recipient of each transaction while simultaneously
    hiding each transaction amount. But these techniques cannot offer any solution
    that can be quantum-safe and, at the same time, can provide privacy with accountability.
    The privacy perspective of major cryptocurrencies has been shown in Table [5](#Tab5).
  prefs: []
  type: TYPE_NORMAL
- en: 8.3.3 Quantum-safe Abelian Cryptocoin (ABE)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: ABE is designed to build an efficient and quantum-safe privacy coin, which uses
    lattice-based cryptographic constructions to provide accountability. Users of
    ABE are allowed to choose the privacy level for each of their transactions. Its
    basic privacy level is comparable to bitcoin, while the full privacy level is
    compared to Monero or Zerocash. Along with these two privacy levels, ABE allows
    users to pick a designated authority who can link the current transaction with
    the immediately previous transaction and simultaneously crack the actual transaction
    amount. Cryptographic primitives of ABE are based on the intractability of lattice
    structure-based hard problems, namely Short Integer Solutions (SIS) and Learning
    with Errors (LWE). These schemes used in ABE are supported by rigorous proofs
    of post-quantum security, thus providing a practical and scalable solution with
    an enhanced privacy perspective.
  prefs: []
  type: TYPE_NORMAL
- en: 8.4 Corda
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Corda is probably the most cryptographically agile DLT technique that allows
    users to choose between multiple signing key types [[59](#CR59)]. These key-types
    include both the techniques which are (a) not quantum-safe like RSA, ECDSA, EdDSA
    (Edwards-curve Digital Signature Algorithm), and (b) quantum-safe like SPHINCS
    (post-quantum stateless hash-based signature scheme) [[2](#CR2), [19](#CR19)].
    SPHINCS-256 is a high-security scheme with a signing rate of hundreds of messages
    per second on a modern 4-core Intel CPU of 3.5 GHz capacity [[3](#CR3), [4](#CR4)].
    SPHINCS provides signatures of size 328 Kb and both public keys, private keys
    of size 8 Kb each. Conventional cryptographic hash function-based signature schemes
    are stateful, meaning they must record information (state of the system) after
    processing every signature [[60](#CR60)]. In general, these hash-based signature
    schemes take a secret key as input and the message itself can prpduce a signature
    and an updated secret key as output [[26](#CR26)]. In case there is any failure
    while updating or copying the key from one device to another, the system’s overall
    security is susceptible to disintegration. Unlike these schemes, SPHINCS is a
    method to apply randomized tree-based stateless signatures. This can provide long-term
    ![$$2^{128}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq10.png)
    security, which is resistant to any quantum attack in the near term future. Moreover,
    this signature scheme is also practical as it can provide a real-time acceptable
    trade-off between speed and signature size.
  prefs: []
  type: TYPE_NORMAL
- en: 9 Feasibility of Quantum Attack on Blockchain DLTs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The underlying dependencies of the cryptographic schemes and lack of quantum-resistant
    algorithms make current blockchain DLTs vulnerable to several attacks made by
    quantum computers. Hence, it is necessary to understand the current level of vulnerability
    that can be exploited upon availability of near-term quantum computers and the
    required number of computational metrics (in terms of qubit count, gate fidelity,
    qubit noise, underlying physical machine description) to execute those quantum
    attacks [[61](#CR61), [62](#CR62)]. The conceptual and operational viability of
    several quantum attacks on blockchain technologies will be discussed in the next
    section.
  prefs: []
  type: TYPE_NORMAL
- en: 9.1 Bitcoin
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bitcoin incorporates Hashcash as underlying consensus mechanism, which was intended
    to combat Denial of Service (DoS) attacks on email systems. This enables the potential
    sender to send an email only after solving a computationally hard problem. A potential
    miner in Hashcash must compute a SHA-256 hash value for the header and a randomly
    chosen number. This random number is a significant parameter to measure the computational
    complexity of the mathematical hard problem which is to be solved. The transaction
    mechanism of Bitcoin incorporates an ECDSA authentication protocol to demonstrate
    authority, proprietorship, transaction immutability, and guaranteed non-repudiation
    on token usage. The Elliptic curve being employed is secp256-k1 [[63](#CR63)–[65](#CR65)].
    This signature is composed of two values, namely S and R, where R corresponds
    to the x coordinate of an elliptic curve point and the subsequent other fraction
    of the signature (S) can be obtained as follows:![$$\begin{aligned} S=K-1 ( SHA256
    (M) + dA.R )mod\ p \end{aligned}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_Equ2.png)(2)where,
  prefs: []
  type: TYPE_NORMAL
- en: K = temporarily chosen private key.
  prefs: []
  type: TYPE_NORMAL
- en: dA = private key for signing.
  prefs: []
  type: TYPE_NORMAL
- en: p = Order (prime) of the elliptic field.
  prefs: []
  type: TYPE_NORMAL
- en: SHA256 (M) = Output of the message M when SHA-256 hash algorithm is applied
    [[66](#CR66)].
  prefs: []
  type: TYPE_NORMAL
- en: With its quadratic speed up, Grover’s algorithm can operate PoW much faster
    compared to conventional miners. If an attacker can produce PoW equivalent to
    the rest of the network combined (more than 50%) Another source of vulnerability
    is the use of ECDSA scheme for transactions. A classical computer can solve the
    hardness of the ECDSA scheme in *O*(2*n*) complexity, which provides computational
    overhead. Shor’s algorithm can perform the same computation exponentially faster
    than the classical counterpart [[46](#CR46)]. The hard mathematical problem underlying
    ECDSA is the discrete logarithm problem, which Shor’s algorithm can solve on a
    quantum computer in ![$$n^3 log (n) log log (n)$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq11.png)
    time, which is of ![$$O (n^3)$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq12.png)
    complexity. Moreover, an effective quantum attack can be made on Bitcoin when
    a public key and a signed transaction have already been broadcasted to the network,
    and the objective is to find the corresponding private key. A quantum computer
    can speed up the process of signing a new transaction with the private key. This
    will help an illegitimate user to impersonate as the key owner and place that
    illegitimate transaction before the original transaction on the blockchain. Thus,
    the original transaction can be stolen, and the newly generated Unspent Transaction
    Output (UTXO) can be directed into an account, thus leading to the existence of
    a parallel blockchain. It has been experimentally shown that a quantum computer
    with 4,85,550 qubits operating with a clock frequency of 10GHz is able to solve
    the problem in 30 min [[67](#CR67)].
  prefs: []
  type: TYPE_NORMAL
- en: 9.2 Ethereum
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ethereum is primarily intended to facilitate the adoption of smart contracts
    and decentralized applications, with each transaction adding or subtracting Ether
    from a user’s account. The earlier consensus mechanism of Ethereum is Ethtlash,
    a PoW which incorporates only single round of SHA-3 hashing to be used [[50](#CR50)].
    The power of a miner is determined by the amount of stake held by a miner in terms
    of Ether. Ethereum, like Bitcoin, employs an ECDSA variant in which the primary
    public key associated with a user account is kept unrevealed to the network. Instead,
    the public key can be retrieved from transaction signature of another user using
    the public key recovery technique. EthHash is vulnerable to be attacked by a quantum
    computer due to Grover’s algorithm. The difficulty value for a successful attack
    on Ethereum can be described as follows:![$$\begin{aligned} D = (H_r * B)/2^{32}
    \end{aligned}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_Equ3.png)(3)where
    D = Difficulty of the PoW mechanism
  prefs: []
  type: TYPE_NORMAL
- en: '![$$H_r$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq13.png)
    = Hash rate of the network'
  prefs: []
  type: TYPE_NORMAL
- en: B = Block generation time of the blockchain
  prefs: []
  type: TYPE_NORMAL
- en: In classical system, for ![$$B=16$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq14.png)
    sec and ![$$H_r=18*10^{3}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq15.png)
    H/sec, the difficulty value ![$$D=670552$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq16.png).
    On the contrary, the equivalent estimated hash rate on a quantum device with operating
    frequency S is ![$$0.04 * S\sqrt{D}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq17.png)
    [[68](#CR68)]. This enables a quantum computer to perform a 51% attack with only
    a clock speed of 5THz. Because of its similarity to ECDSA, Ethereum is also vulnerable
    to Shor’s algorithm. Ethereum has a substantially accelerated transaction data
    processing time (TPS) than Bitcoin, which is advantageous. Unlike UTXO model,
    Ethereum incorporates account-based transaction model which involves reuse of
    addresses. But this causes Ethereum to be significantly more susceptible to quantum
    attacks as the process of binding the user with the respective transaction by
    the account itself causes deterioration of the overall privacy of the network.
    All outgoing transactions in Ethereum must be signed with a single public key/private
    key pair associated with the account. A quantum adversary can obtain the public
    key and determine the private key at significantly faster rate by employing Shor’s
    algorithm [[46](#CR46)]. This can expose the entire account balance after completion
    of a single transaction processing.
  prefs: []
  type: TYPE_NORMAL
- en: 9.3 Litecoin
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Litecoin is designed to have much faster transaction processing speed than Bitcoin.
    To increase TPS, Litecoin employs a different PoW system known as Scrypt, which
    consumes significantly less hashing power than Bitcoin [[69](#CR69), [70](#CR70)].
    (Hashing rate of approximately ![$$46*10^6$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq18.png)
    TH/sec for Bitcoin and 298 TH/sec for Litecoin) [[71](#CR71), [72](#CR72)]. As
    a result, Litecoin prioritizes the intensive use of RAM on mining nodes over the
    intensive use of processing power [[73](#CR73)]. But, since Litecoin is a project
    fork of Bitcoin, it is also potentially vulnerable to quantum attacks. The signature
    scheme used in Litecoin is also secp-256k1 elliptic curve of ECDSA, which makes
    it vulnerable to Shor’s algorithm [[63](#CR63)]. Moreover, the PoW of Scrypt is
    also vulnerable to be attacked by a quantum computer due to Grover’s algorithm.
    The difficulty value for a successful attack on Litecoin can be described as follows:![$$\begin{aligned}
    D = ( 32*10^{13}*150)/2^{32}= 11175870 \end{aligned}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_Equ4.png)(4)The
    current hash rate of Litecoin being ![$$3.2*10^2$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq19.png)
    TH/sec allows a quantum computer to attack the current hash rate while operating
    with a clock frequency of ![$$2.4*10^{12}$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq20.png)
    cycles/sec [[72](#CR72)]. Due to its relatively short block time and bit faster
    throughput than Bitcoin, Litecoin seems to have a slight advantage in resisting
    quantum attacks. However, a lower hash rate caused by a reduction in the block
    reward to complete a given PoW may make the system more vulnerable and susceptible
    to quantum attack.
  prefs: []
  type: TYPE_NORMAL
- en: 9.4 Monero
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Monero is one of the blockchain cryptocurrencies which aims to provide privacy
    by obfuscating both user identity and the transaction amount through Pedersen
    Commitments and Range Proofs. CryptoNight V8 PoW scheme of Monero is memory—intensive
    process enabling slow memory access at random intervals [[74](#CR74)]. Monero
    employs EdDSA as a signing algorithm, which is based on the Twisted Edwards curve
    Ed25519 [[75](#CR75)]. Like ECDSA, the signature scheme of Monero also depends
    on the mathematical hardness of discrete logarithm problems for enforcing its
    security and thus can be thought of to be unsafe in near—term quantum era Shor’s
    algorithm [[46](#CR46)]. Moreover, Monero is able to provide transaction anonymity
    by incorporating the use of ring signatures, stealth addresses, and ring confidential
    transactions [[76](#CR76), [77](#CR77)]. Bulletproof is the current zero-knowledge
    proof mechanism used in Monero to ensure the balance of transactions. The use
    of this mechanism helps Monero be efficient in terms of less computational overhead
    and less space required on the blockchain [[78](#CR78)]. Monero recently switched
    its consensus algorithm framework from CryptoNight V8 to RandomX [[79](#CR79)].
    RandomX scheme is designed to handle execution of random programs using a special
    instruction set comprising of integer arithmetic, floating-point arithmetic, and
    branch instructions. Monero is slightly more resilient to quantum attacks as the
    information regarding the amount that is to be tansfered in a target transaction
    is not revealed to the attacker. This privacy provides additional security to
    Monero by making it less attractive security to Monero by making it less attractive
    for quantum attacks. It should be noted further that RandomX is still thought
    to be safe from quantum attacks as no known vulnerabilities have been obtained
    so far.
  prefs: []
  type: TYPE_NORMAL
- en: 9.5 Zcash
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Zcash is a privacy-based blockchain that allows transactions between both public
    and private accounts. Zcash transactions rely on ZK-SNARK which works on trusted
    set- up architecture to demonstrate the fairness of a transaction being sent.
    Equihash is the PoW scheme under Zcash, which relies on a generalized birthday
    problem [[80](#CR80)]. Like Monero, Zcash is also implemented using EdDSA as a
    signing algorithm and employing elliptic curve Ed25519 [[63](#CR63), [75](#CR75),
    [81](#CR81)]. This signature scheme is also based on the hardness of discrete
    logarithm problems, making it susceptible to quantum attack by Shor’s algorithm.
    Moreover, there is a quantum algorithm developed by Grassi et al. that can solve
    the generalized birthday problem or the K-xor problem in ![$$O(2^{n/(2 + log2k
    )})$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq21.png) compared
    to the best known classical algorithm known as Wagner’s algorithm with a computational
    complexity of ![$$O(2^{n/(1 + log2k )})$$](../images/516210_1_En_9_Chapter/516210_1_En_9_Chapter_TeX_IEq22.png)
    [[82](#CR82)]. This quantum algorithm demonstrates a significant advantage in
    terms of time and space complexity and, consequently, can lead to a quantum 51%
    attack against the system. Quantum attacks can be made to generate Zcash tokens
    infinitely if the attacker can possess the global private key using Shor’s algorithm.
    If tokens can be created at will and the token creation can be kept unrevealed
    to the rest of the network through obfuscation, the overall security and the network
    performance can be drastically affected. Hence, it can be concluded that Zcash
    is more vulnerable than existing blockchain technologies due to its low resilience
    to quantum computing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 10 Realization of Post—Quantum Block and Future Research Direction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Post-quantum blockchain techniques do not use quantum mechanical principles
    to exploit computational speedup. Rather, they are advancements made on classical
    computation so that current cryptographic primitives used in blockchain can be
    made resistant to future quantum computing attacks. Researchers have been putting
    a lot of effort into discovering new post-quantum schemes that can be realized
    in the near-term future and provide a practical, scalable solution for implementation.
    This transition of blockchain from pre-quantum to post-quantum era needs to attain
    certain objectives for their successful integration. Primary challenges involved
    while devising any new research in this field can be described as follows.
  prefs: []
  type: TYPE_NORMAL
- en: 10.1 Key Size and Signature Size
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Post-quantum cryptosystems claim to offer more security level over existing
    classical standpoint. Increasing the number of bits used in cryptographic keys
    and signatures can improve security, but this can have a significant impact on
    the overall performance of the blockchain network. To achieve a 128—bit quantum
    security level, required key sizes are 2,688—bit for a public key, 384—bit for
    a private key, and 120 KB for the signature. This would necessarily require the
    storage of a massive amount of information and thus incorporating huge computational
    overhead. As a consequence, research is required to devise new techniques that
    provide a trade-off between attained level of security and performance of the
    blockchain system.
  prefs: []
  type: TYPE_NORMAL
- en: 10.2 Key Generation Rate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Multiple messages can be signed with the same key in pre-quantum blockchain
    schemes. However, if the security level must be increased, the number of messages
    that can be signed with the same key must be limited. High speed key generation
    relies on pseudo-random number generators (PRNGs), which depend on the mathematical
    properties of a complex algorithm to generate the keys. These keys do not provide
    enough entropy and are not inherently random, leading to statistically correlated
    keys. An alternative approach relies on true hardware-based random number generators
    (HRNGs), which can generate true random bits using properties of classical physics.
    Though these hardware-based RNGs offer sufficient entropy, their key generation
    rate is not sufficient for an increase in demand. Recently, researchers are working
    on quantum-based RNGs, which can exploit the properties of quantum mechanical
    phenomena to generate true random bits. Thorough research is required to focus
    on the trade-off between key generation mechanism and rate of key generation for
    improved efficiency of the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 10.3 Blockchain Compliance Issues
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Multiple post-quantum blockchain initiatives have been taken, and the research
    is still in progress. Hence, constant monitoring of the standard post-quantum
    schemes that are being approved should be made by the researchers and developers
    to avoid any compliance issues.
  prefs: []
  type: TYPE_NORMAL
- en: 10.4 Incompatibility Issue with Existing Hardware
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Post-quantum cryptosystems are highly computationally intensive, as they incorporate
    large computation overhead to increase system security. But, this overhead requires
    a huge computational resource with increased processing power. This makes the
    post-quantum schemes less scalable and hence, less practical to be implemented.
    Research is required to resolve this classical hardware incompatibility so that
    a trade-off can be obtained between overall security and computational complexity.
  prefs: []
  type: TYPE_NORMAL
- en: 10.5 Ciphertext Overhead
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Post-quantum cryptosystems are supposed to generate large Ciphertext so that
    their deciphering can be made complex. But, this puts a lot of overhead on the
    overall performance of the resource-constrained embedded systems. Quantum computing
    can be one of the potential solutions to reduce the Ciphertext overhead. Quantum
    parallelism through quantum superposition can be exploited to prepare a quantum
    state space where classical data can be encoded in qubits rather than in bits
    as shown in Fig. [5](#Fig5). However, this brings another challenge: segregating
    the quantum computation part from the classical computational part [[62](#CR62)].
    If a quantum hybrid system can be incorporated in the post-quantum blockchain,
    it can aid overall system improvements in terms of security and computational
    speed.![](../images/516210_1_En_9_Chapter/516210_1_En_9_Fig5_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5
  prefs: []
  type: TYPE_NORMAL
- en: Proposed block diagram for quantum-enabled compression technique
  prefs: []
  type: TYPE_NORMAL
- en: 11 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Despite the nascency of technological advancements in quantum computing, it
    has attracted researchers and developers to keep their eye on potential advantages
    and threats by quantum computers in blockchain and other DLTs. In this work, the
    existing and future scalability aspects of classical blockchain technologies have
    been discussed. The potential benefits to serve blockchain-aided fintech applications
    offered by quantum computing have been analyzed so that use cases of blockchain
    performance in real-world applications can be enhanced further. The impact of
    Grover’s algorithm and Shor’s algorithm in posing threats to classical blockchain
    security primitives have been analyzed. For this purpose, the most relevant blockchain
    DLTs like Bitcoin, Ethereum, Litecoin, Monero, Zcash have been reviewed. Their
    areas of vulnerabilities to be attacked by real quantum computers have been analyzed
    in detail. In addition, post-quantum initiatives for quantum-resistant cryptography
    and specific post-quantum initiatives on blockchain have been studied with respect
    to their operational principle, possible quantum threat, quantum-safe cryptographic
    primitive, and relevance of those schemes in the current blockchain scenario.
    This work also includes the challenges and potential research directions in realizing
    post-quantum blockchain and utilizing quantum technology. Thus, the work can provide
    useful guidance to the research areas of quantum computing and blockchain technology
    and, moreover, in understanding a few possible quantum invasions in post-quantum
    blockchain to devise new quantum-resistant blockchain techniques.
  prefs: []
  type: TYPE_NORMAL
