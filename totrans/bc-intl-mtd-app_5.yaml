- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2021Z.
    Zheng et al. (eds.)Blockchain Intelligence[https://doi.org/10.1007/978-981-16-0127-9_5](https://doi.org/10.1007/978-981-16-0127-9_5)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: ©作者（们），在独家授权下 Springer Nature新加坡私人有限公司. 2021郑子豪等人（编辑）区块链智能[https://doi.org/10.1007/978-981-16-0127-9_5](https://doi.org/10.1007/978-981-16-0127-9_5)
- en: 5. Misbehavior Detection on Blockchain Data
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 区块链数据的不良行为检测
- en: 'Weili Chen^([1](#Aff4) [ ](#ContactOfAuthor1)), Jiahui Cui^([1](#Aff4) [ ](#ContactOfAuthor2)),
    Xiongfeng Guo^([2](#Aff5) [ ](#ContactOfAuthor3)), Zhiguang Chen^([3](#Aff6) [ ](#ContactOfAuthor4))
    and Yutong Lu^([3](#Aff6) [ ](#ContactOfAuthor5))(1)School of Data and Computer
    Science, Sun Yat-sen University, Guangzhou, China(2)School of Data and Computer
    Science, National Engineering Research Center of Digital Life, Sun Yat-sen University,
    Guangzhou, China(3)School of Data and Computer Science, National Supercomputer
    Center in Guangzhou, Sun Yat-sen University, Guangzhou, ChinaWeili ChenEmail:
    [chenwli28@mail.sysu.edu.cn](mailto:chenwli28@mail.sysu.edu.cn)Jiahui CuiEmail:
    [cuijh6@mail2.sysu.edu.cn](mailto:cuijh6@mail2.sysu.edu.cn)Xiongfeng GuoEmail:
    [guoxf6@mail2.sysu.edu.cn](mailto:guoxf6@mail2.sysu.edu.cn)Zhiguang Chen (Corresponding
    author)Email: [zhiguang.chen@nscc-gz.cn](mailto:zhiguang.chen@nscc-gz.cn)Yutong LuEmail:
    [yutong.lu@nscc-gz.cn](mailto:yutong.lu@nscc-gz.cn)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 陈伟利^([1](#Aff4) [ ](#ContactOfAuthor1))，崔佳慧^([1](#Aff4) [ ](#ContactOfAuthor2))，郭雄风^([2](#Aff5)
    [ ](#ContactOfAuthor3))，陈志光^([3](#Aff6) [ ](#ContactOfAuthor4))和陆宇通^([3](#Aff6)
    [ ](#ContactOfAuthor5))（1）中山大学数据科学与计算机学院，广州，中国（2）中山大学数字生活国家工程研究中心，广州，中国（3）中山大学广州国家超级计算中心，广州，中国陈伟利电子邮件：chenwli28@mail.sysu.edu.cn崔佳慧电子邮件：cuijh6@mail2.sysu.edu.cn郭雄风电子邮件：guoxf6@mail2.sysu.edu.cn陈志光（通讯作者）电子邮件：zhiguang.chen@nscc-gz.cn陆宇通电子邮件：yutong.lu@nscc-gz.cn
- en: Abstract
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: The prevalence of misbehaviors has resulted in considerable financial loss and
    thus has undermined public reputation of cryptocurrency, leading to hindrance
    to the progress of blockchain technology. To attack on this problem, this chapter
    discussed about several types of misbehaviors on blockchain and data mining as
    an approach for identification of misbehavior on blockchain. Two practical data
    mining models aiming at detecting Ponzi schemes and phishing scams on Ethereum
    are proposed and detailed evaluations are conducted.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 不良行为的普遍性导致了巨大的经济损失，从而破坏了加密货币的公众声誉，阻碍了区块链技术的发展。为了解决这个问题，本章讨论了几种在区块链上的不良行为类型和数据挖掘作为一种识别区块链上不良行为的手段。提出了两个针对以太坊上庞氏骗局和网络钓鱼诈骗的实用数据挖掘模型，并进行了详细的评估。
- en: 5.1 Overview
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.1 概述
- en: Financial security has always been a hotspot in real-world currency system.
    While blockchain technology is bringing more and more cryptocurrencies with increasing
    market capitalization, it also attracts various scams due to its financial nature.
    With the proliferation of scams in the ecosystem, identification of these misbehaviors
    has been a matter of significance.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 金融安全一直是现实世界中货币系统的热点。随着区块链技术带来越来越多市值不断攀升的加密货币，其金融属性也吸引了各种骗局。由于生态系统中骗局的泛滥，识别这些不良行为已成为一个重要问题。
- en: A recent research (Vasek and Moore [2015](#CR67)) has identified four types
    of scams in Bitcoin and found that $11 million worth of Bitcoin has been contributed
    to the scams, with at most $4 million back to the victims. However, scams in the
    Bitcoin ecosystem may just be the tip of the iceberg, because there are many other
    cryptocurrencies and a wide range of other illegal activities including money
    laundering (Moser et al. [2013](#CR53)), gambling (Tasca et al. [2018](#CR66)),
    and black marketing (Christin [2013](#CR20)). These misbehaviors in the ecosystem
    may hinder users’ acceptance and use of blockchain technology, and further hinder
    the development of the technology.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的研究（Vasek和Moore [2015](#CR67)）在比特币中确定了四种骗局类型，并发现有价值1100万美元的比特币被用于骗局，最多只有400万美元退还给受害者。然而，比特币生态系统中的骗局可能只是冰山一角，因为还有许多其他加密货币和包括洗钱（Moser等人[2013](#CR53)）、赌博（Tasca等人[2018](#CR66)）和黑市交易（Christin
    [2013](#CR20)）在内的广泛的其他非法活动。这些生态系统中的不良行为可能会阻碍用户接受和使用区块链技术，进而阻碍该技术的发展。
- en: 'In the field of misbehavior detection in blockchain, various approaches have
    been proposed for money laundering, phishing detection, and so on. The prime questions
    of misbehavior detection are: What types of misbehaviors are there on blockchain
    ecosystem? How do these misbehaviors work on blockchain? According to the report
    of *Chainalysis*, misbehaviors on blockchain are mainly divided into six categories:^([1](#Fn1))'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链行为检测领域，已经提出了各种方法用于洗钱、钓鱼检测等。行为检测的主要问题是：区块链生态系统中存在哪些不良行为？这些不良行为如何在区块链上运作？根据*Chainalysis*的报告，区块链上的不良行为主要分为六类：^([1](#Fn1))
- en: '**Money Laundering:** Money laundering in Bitcoin, which is based on the anonymity
    of Bitcoin, aims to conceal the original address of illegal gains. However, Bitcoin
    does not provide true anonymity because transactions are designed to involve pseudonymous
    addresses that allow researchers to link all transactions from a particular user
    all together. With better customer identification being encouraged by major Bitcoin
    exchanges, the mixing services (Bonneau et al. [2014](#CR7)) for Bitcoin has become
    an essential technology for money laundering.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**洗钱：** 基于比特币的匿名性的洗钱，旨在隐藏非法收益的原始地址。然而，比特币并不提供真正的匿名性，因为交易被设计成涉及允许研究人员将来自特定用户的全部交易链接在一起的真名地址。随着主要比特币交易所鼓励更好的客户识别，比特币的混合服务（Bonneau
    等人.[2014](#CR7)）已经成为洗钱的必要技术。'
- en: '**Scams:** Another consequence coming with the anonymity of cryptocurrencies
    is the proliferation of scams. The report from *Chainalysis* has identified six
    types of scams on cryptocurrency ecosystem: fake token sale, Ponzi scheme, phishing
    scam, reported investment scam, blackmail, and fake mixer, where the Ponzi scheme
    contributes to the vast majority of scam revenue.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**诈骗：** 随着加密货币的匿名性，诈骗行为也日益猖獗。来自*Chainalysis*的报告已经确定了加密货币生态系统中的六种诈骗类型：假币销售、庞氏骗局、钓鱼诈骗、报告的投资诈骗、敲诈和假混合器，其中庞氏骗局诈骗收入占绝大部分。'
- en: '**Ransomware:** With the prevalence of Ransomware as a Service (RaaS), hackers
    with less sophisticated hacking skills are able to conduct ransomware by using
    ransomware technology developed by other hackers. However, it is difficult to
    estimate the number of ransoms with blockchain analysis, since many companies
    prefer to pay ransom without reporting in consideration of their share market.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**勒索软件：** 随着勒索软件即服务（RaaS）的普及，技术不那么先进的黑客也能够利用其他黑客开发的勒索软件技术进行勒索软件攻击。然而，通过区块链分析很难估计勒索金额，因为许多公司出于对股价的考虑，更愿意支付赎金而不上报。'
- en: '**Hacks:** More and more cryptocurrency hacks have occurred in recent years.
    Yet the $534 million Coincheck hack and the $473 Mt.Gox hack still account for
    the major portion of the gross financial loss. Hackers on blockchain are getting
    more sophisticated with increased use of mixing services and complicated scam
    strategies.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**黑客攻击：** 近年来发生了越来越多的加密货币黑客攻击。然而，Coincheck的5.34亿美元攻击和Mt.Gox的4.73亿美元攻击仍然占据了总经济损失的大部分。随着混合服务的增加和复杂的诈骗策略，区块链上的黑客技术正在变得更为复杂。'
- en: '**Darknet Market:** The financial nature of cryptocurrency inevitably attracts
    darknet markets. While shops specializing in drugs account for the main part,
    other illegal categories including stolen credit card information and child sexual
    abuse material also exist in darknet market based on blockchain.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**暗网市场：** 加密货币的金融性质不可避免地吸引了暗网市场。虽然毒品商店占据了主要部分，但基于区块链的暗网市场上也存在其他非法类别，包括被盗的信用卡信息和儿童性虐待材料。'
- en: '**Terroism Financing:** Terrorism financing based on cryptocurrency is presenting
    new challenges to authorities due to the decentralized and semi-anonymous nature
    of blockchain technology. Agents are not able to ban such transactions because
    there are no centralized authorities on blockchain. Besides, tracking the origins
    is also facing difficulty due to money laundering services.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恐怖主义融资：** 基于区块链技术的去中心化和半匿名性质，恐怖主义融资给当局带来了新的挑战。代理商无法禁止此类交易，因为区块链上没有集中当局。此外，由于洗钱服务，追踪起源也面临困难。'
- en: For national authorities, blockchain technology is very new and its decentralized,
    semi-anonymous nature makes legal system hard to cover cryptocurrency ecosystem.
    Therefore, identification of these misbehaviors is facing great difficulty.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于国家当局来说，区块链技术非常新颖，其去中心化、半匿名的性质使得法律体系难以覆盖加密货币生态系统。因此，识别这些不良行为面临很大困难。
- en: To attack this critical challenge, diverse methods have been raised for different
    problems. Among these methods, we are most interested in employing data mining
    methods to encounter scam identification, and in this chapter we propose two approaches
    aiming at detecting Ponzi schemes and phishing schemes in blockchain ecosystem.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这一关键挑战，已经提出了各种不同的方法来应对不同的问题。在这些方法中，我们最感兴趣的是利用数据挖掘方法来识别诈骗行为，在本章中，我们提出了两种针对区块链生态系统中庞氏骗局和网络钓鱼骗局检测的方法。
- en: 'The rest of this chapter is organized as follows: Sect. [5.2](#Sec2) introduces
    data analysis as an approach for misbehavior detection in blockchain. Section
    [5.3](#Sec6) presents our achievement in recognizing Ponzi schemes on Ethereum.
    Section [5.4](#Sec23) shows an approach for phishing scam detection on Ethereum,
    and Sect. [5.5](#Sec39) concludes this chapter.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分组织如下：第[5.2](#Sec2)节介绍了作为一种区块链中不当行为检测方法的数据分析。第[5.3](#Sec6)节展示了我们在以太坊上识别庞氏骗局方面的成果。第[5.4](#Sec23)节展示了一种基于以太坊的网络钓鱼骗局检测方法，第[5.5](#Sec39)节对本章进行了总结。
- en: 5.2 Data Analysis on Blockchain
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.2 区块链上的数据分析
- en: Nonetheless, the decentralized and anonymous nature of cryptocurrency makes
    the ecosystem rampant with crimes and has resulted in considerable financial loss
    for victims. But on the other hand, its transparent nature also distinguishes
    it from traditional forms of cash, which allows employing data mining methods
    on blockchain.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，加密货币的去中心化和匿名特性使得整个生态系统充斥着犯罪行为，给受害者带来了相当大的经济损失。但另一方面，其透明性也让它与传统货币形式区分开来，这使得我们可以利用数据挖掘方法对区块链进行分析。
- en: 'Data originated in blockchain can be roughly divided into two categories: on-chain
    data and off-chain data. The former refers to transactions recorded in blockchain
    ledger which is publicly accessible. The off-chain data usually refers to market
    parameters including trade prices and transaction records in major exchanges.
    Based on different analysis tools, the data analysis methods can be categorized
    into three groups: complex network analysis, data mining approach, and statistical
    methods.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的数据大致可以分为两类：链上数据和链下数据。前者指的是记录在区块链账本中的、可以向公众公开的交易数据。链下数据通常指的是包括主要交易所的交易价格和交易记录在内的市场参数。根据不同的分析工具，数据分析方法可以分为三组：复杂网络分析、数据挖掘方法和统计方法。
- en: 5.2.1 Analysis Based on Complex Network
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.2.1 基于复杂网络的分析
- en: 'Since the majority of data recorded on blockchain are transaction data, on-chain
    analysis methods are mainly interested in transactions. Among these studies, modeling
    the transactions into a graph database and studying the network with complex network
    technologies is the main approach (Chan and Olmsted [2017](#CR10); Lischke and
    Fabian [2016](#CR44)). There are various researches based on Bitcoin such as Bitcoin
    address study (Fleder et al. [2015](#CR27)) and tracking Bitcoin user activity
    using community detection (Remy et al. [2018](#CR61)). Things are more complicated
    on Ethereum due to the introduction of smart contracts: transaction could involve
    both users and smart contracts (Chen et al. [2018a](#CR15)).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于记录在区块链上的大部分数据都是交易数据，因此链上分析方法主要关注交易。在这些研究中，将交易模型化为图形数据库，并使用复杂网络技术研究网络是主要方法（Chan和Olmsted
    [2017](#CR10)；Lischke和Fabian [2016](#CR44)）。基于比特币的研究有很多，例如比特币地址研究（Fleder等人[2015](#CR27)）和利用社区检测跟踪比特币用户活动（Remy等人[2018](#CR61)）。由于智能合约的引入，以太坊的情况更为复杂：交易可能涉及用户和智能合约（Chen等人[2018a](#CR15)）。
- en: 5.2.2 Analysis Based on Data Mining Methods
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.2.2 基于数据挖掘方法的分析
- en: The rapidly increasing number of blockchain users and the publicly accessible
    characteristic are providing an unprecedented platform for data analysis. A clustering
    model considering both off-chain information and on-chain information has been
    proposed for Bitcoin addresses association (Ermilov et al. [2017](#CR26)). The
    effectiveness of various address clustering methods are evaluated in (Harrigan
    and Fretter [2016](#CR30)), and a modular framework is presented to visualize
    complex information extracted from the Bitcoin network (Spagnuolo et al. [2014](#CR64)).
    Trade analysis on blockchain is another attracting point for investors. There
    are several Bitcoin price prediction models constructed by using recursive neural
    network (RNN) and long short-term memory (LSTM) with common features extracted
    from on-chain information and off-chain information (Jang and Lee [2017](#CR33);
    McNally et al. [2018](#CR48)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链用户的迅速增加和公开可访问的特点为数据分析提供了一个前所未有的平台。已经提出了一个同时考虑离链信息和链上信息的聚类模型，用于比特币地址关联（Ermilov等人[2017](#CR26)）。在（Harrigan和Fretter[2016](#CR30)）中评估了各种地址聚类方法的有效性，并提出了一个模块化框架，用于可视化从比特币网络中提取的复杂信息（Spagnuolo等人[2014](#CR64)）。区块链上的交易分析对投资者具有吸引力。已经使用从链上信息和离链信息中提取的常见特征构建了几种比特币价格预测模型，这些模型基于递归神经网络（RNN）和长短期记忆（LSTM）（Jang和Lee[2017](#CR33)；McNally等人[2018](#CR48)）。
- en: 5.2.3 Analysis Based on Statistic Tools
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.2.3 基于统计工具的分析
- en: The trading price of cryptocurrency of the off-chain information is of great
    significance. Time-series analysis is widely used in this area since the prices
    are directly presented in time series. Among aspects relating to trading price,
    detecting the determinants of it have aroused wide interests. Thus, manifold models
    have been introduced to study the main drivers, including VSM model (Georgoula
    et al. [2015](#CR29)), VECM model (Ciaian et al. [2016](#CR21)), ARDL method (Bouoiyour
    and Selmi [2015](#CR8)), wavelet coherence analysis (Kristoufek [2014](#CR43)),
    Copula method (Osterrieder et al. [2017](#CR57)), and so on.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 离链信息下的加密货币交易价格具有重要意义。由于价格直接以时间序列呈现，时间序列分析在此领域中被广泛使用。与交易价格相关的方面，检测其决定因素引起了广泛关注。因此，已经引入了多种模型来研究主要驱动因素，包括VSM模型（Georgoula等人[2015](#CR29)）、VECM模型（Ciaian等人[2016](#CR21)）、ARDL方法（Bouoiyour和Selmi[2015](#CR8)）、小波相干分析（Kristoufek[2014](#CR43)）、Copula方法（Osterrieder等人[2017](#CR57)）等。
- en: Still, blockchain supervision based on data analysis methods inevitably encounters
    obstacles due to decentralization and anonymity services. Unlike centralized system,
    we are not able to control the validation of transactions, nor could we easily
    track the origins of illegal behavior. But at least with proper tools, the publicly
    accessible blockchain ledger could provide us with unique insights into criminal
    patterns on blockchain.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于去中心化和匿名服务的存在，基于数据分析方法的区块链监管不可避免地遇到障碍。与集中式系统不同，我们无法控制交易的验证，也无法轻易追踪非法行为的源头。但是，至少通过适当的工具，公开可访问的区块链账本可以为我们提供有关区块链上犯罪模式的独特见解。
- en: '5.3 Case Study: Ponzi Scheme Detection'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.3 案例研究：庞氏骗局检测
- en: 5.3.1 Ponzi Scheme on Ethereum
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.1 以太坊上的庞氏骗局
- en: Among the many projects developed with the exploitation of blockchain technology,
    Ethereum is one of the most vigorous platforms. Ethereum is an open-source and
    decentralized platform with *Ether* as the cryptocurrency generated by Ethereum
    miners. A Turing-complete virtual machine, Ethereum Virtual Machine (EVM), is
    provided by Ethereum to execute *smart contracts*. A smart contract is a script
    released by Ethereum users which will be automatically executed by EVM when some
    preset conditions are met (Buterin [2014](#CR9); Szabo [1996](#CR65)), i.e., receiving
    a message call. The execution of smart contracts does not rely on trusted authorities
    and cannot be modified. Smart contracts can be applied in various domains including
    IoT, a collaboration of decentralized organizations, and even in criminal scenes
    (Christidis and Devetsikiotis [2016](#CR19); Juels et al. [2016](#CR34); Norta
    [2015](#CR56)). Blockchain platforms that support smart contracts are called the
    second-generation blockchain (CoinDesk [2017](#CR22)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在众多利用区块链技术开发的项目中，以太坊是最具活力的平台之一。以太坊是一个开源的去中心化平台，通过以太坊矿工生成的加密货币——以太币。以太坊提供了一个图灵完备的虚拟机——以太坊虚拟机（EVM），用于执行智能合约。智能合约是以太坊用户发布的脚本，当某些预设条件满足时，由EVM自动执行（Buterin[2014](#CR9);
    Szabo[1996](#CR65)），即，接收一个消息调用。智能合约的执行不依赖于可信的权威，也无法被修改。智能合约可以应用于各种领域，包括物联网、去中心化组织的合作，甚至可以在犯罪场景中使用（Christidis和Devetsikiotis[2016](#CR19);
    Juels等[2016](#CR34); Norta[2015](#CR56)）。支持智能合约的区块链平台被称为第二代区块链（CoinDesk[2017](#CR22)）。
- en: Any newborn technology inevitably contains vulnerabilities that can be exploited
    by adversary scams. For example, the development of email introduces a proliferation
    of spams. Blockchain, as a newly-introduced technology, also attracts considerable
    types of scams due to its decentralized, anonymous characteristics and the lack
    of regulation. Among the scams, a classic fraud, Ponzi scheme, also has its implementation
    on blockchain (Bartoletti et al. [2020](#CR6); Vasek and Moore [2015](#CR67)).
    Named after a notorious fraudster and carried out in the 1920s for the first time,
    the Ponzi scheme is a fraudulent investment operation that lures investors and
    generates profits for proceeding investors with funds from recent investors, instead
    of legitimate business activities or profits of financial trading (Wikipedia [2017](#CR69)).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 任何新生技术都不可避免地存在可以被对手诈骗利用的漏洞。例如，电子邮件的发展导致了垃圾邮件的泛滥。作为一种新兴技术，区块链也因其去中心化、匿名特性以及监管的缺失而吸引了相当数量的诈骗类型。在这些诈骗中，一种经典的欺诈形式——庞氏骗局，也在区块链上有了实施（Bartoletti等[2020](#CR6);
    Vasek和Moore[2015](#CR67)）。庞氏骗局以一个臭名昭著的欺诈犯的名字命名，最早在1920年代实施，它是一种欺诈性的投资操作，通过最近投资者的资金来吸引投资者并给早期投资者带来利润，而不是通过合法的商业活动或金融交易的利润（Wikipedia[2017](#CR69)）。
- en: The truth is that most of the people will lose their investment in Ponzi schemes,
    leading to the prohibition of Ponzi schemes in many countries. When it comes to
    blockchain technology, Ponzi schemes are making a considerable profit from those
    impulsive investors who want to participate in the blockchain technology and speculate
    in the blockchain marketing, yet with little knowledge of how the blockchain works
    (Stan Higgins [2015](#CR31); Keirns [2017](#CR37); MORRIS [2017](#CR52)). A recent
    study has found that more than 7 million USD has been collected during the period
    from September 2, 2013 to September 9, 2014 by a variety of scams in Bitcoin (Vasek
    and Moore [2015](#CR67)).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，大多数人会在庞氏骗局中失去他们的投资，这导致了许多国家禁止庞氏骗局。当涉及到区块链技术时，庞氏骗局正在从那些想要参与区块链技术、在区块链市场中投机的冲动投资者那里获得相当的利润，而这些投资者对区块链如何运作的了解却很少（Stan
    Higgins[2015](#CR31); Keirns[2017](#CR37); MORRIS[2017](#CR52)）。最近的研究发现，从2013年9月2日至2014年9月9日，各种比特币诈骗在一段时间内筹集了超过700万美元（Vasek和Moore[2015](#CR67)）。
- en: 'In the field of Ethereum, many of the Ponzi schemes are concealed beneath *smart
    contracts* (Bartoletti et al. [2020](#CR6)). In other words, they are implemented
    as smart contracts deploying on Ethereum. These Ponzi schemes are referred to
    as *smart* Ponzi schemes and the corresponding smart contract *Ponzi scheme contract*.
    Among various implementations of Ponzi schemes, one focal property of Ponzi schemes
    is the need for continuous and long-term investment from victims. In that sense,
    a smart contract is an ideal approach to implementing Ponzi schemes. Once a smart
    contract is released on the Ethereum, it cannot be terminated by authorities and
    will permanently run on Ethereum. Most importantly, the promoter of a Ponzi scheme
    contract stays somewhat anonymous due to the semi-anonymity of blockchain technology.
    Figure [5.1](#Fig1) displays the propaganda picture of a typical smart Ponzi scheme.
    The propaganda words are as the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太坊领域，许多庞氏骗局都隐藏在*智能合约*之下（Bartoletti等人[2020](#CR6))。换句话说，它们是以太坊上部署的智能合约实现的。这些庞氏骗局被称为*智能*庞氏骗局，相应的智能合约被称为*庞氏骗局合约*。在庞氏骗局的各种实现中，庞氏骗局的一个关键属性是需要受害者持续和长期的投资。从这个意义上说，智能合约是实现庞氏骗局的一种理想方法。一旦智能合约在以太坊上发布，当局无法终止它，它将永久运行在以太坊上。最重要的是，由于区块链技术的半匿名性，庞氏骗局的推广者保持某种匿名性。图[5.1](#Fig1)展示了典型智能庞氏骗局的海报。海报上的文字如下：
- en: Hello! My name is Rubixi! I’m new & verified pyramid smart contract on the Ethereum
    blockchain. When you send me 1 Ether, I will multiply the amount and send it back
    to your address when the balance is sufficient. My multiplier factor is dynamic
    (**min. x1.2 max. x3**), thus my payouts are accelerated and **guaranteed** for
    months to come![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig1_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig1_HTML.png)
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你好！我的名字是Rubixi！我是新审核过的以太坊区块链上的金字塔智能合约。当你给我1个以太坊时，当余额充足时，我会将金额翻倍并发送到你的地址。我的乘数因子是动态的（**最小x1.2，最大x3**），因此我的支付速度加快，**保证**在未来几个月内支付！[../images/506524_1_En_5_Chapter/506524_1_En_5_Fig1_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig1_HTML.png)
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Fig. 5.1
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 图5.1
- en: ''
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The propaganda picture of a smart Ponzi scheme (Rubixi). (Source: [https://​bitcoindtalk.​org/​index.​php?​topic=​1400536.​0](https://bitcoindtalk.org/index.php?topic=1400536.0))'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 智能庞氏骗局（Rubixi）的宣传图片。（来源：[https://​bitcoindtalk.​org/​index.​php?​topic=​1400536.​0](https://bitcoindtalk.org/index.php?topic=1400536.0))
- en: According to the slogan, this smart contract looks pretty profitable and the
    payback period seems to be guaranteed. However, the real situation is far from
    the description. Through manual inspection, we found that 112 participants have
    joined the contract, while only 22 participants have gained revenue. Among them,
    the two participants with the highest profits received more than 40% of the benefits,
    and one of them was the creator of the contract. Unfortunately, most participants
    did not receive the promised profit.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 根据口号，这个智能合约看起来相当有利可图，回报期似乎是有保证的。然而，实际情况远非如此描述。通过手动检查，我们发现有112个参与者加入了该合约，而只有22个参与者获得了收益。其中，盈利最高的两个参与者获得了超过40%的收益，其中一个是合约的创建者。不幸的是，大多数参与者没有收到承诺的利润。
- en: The above example shows a successful Ponzi scheme instance and demonstrates
    the importance of detecting smart Ponzi schemes. Although some users clearly know
    the possible loss of participating in the Ponzi scheme (Moore et al. [2012](#CR51);
    Neisius and Clayton [2014](#CR55)), automated Ponzi scheme detection is still
    of great significance for the following reasons. (1) It is difficult for some
    people to understand how the blockchain works, which makes it a challenge for
    them to distinguish fraudulent on the blockchain. (2) For national authorities,
    blockchain technology is very new to them, which puts the blockchain in a gray
    area of a certain legal system (Elwell et al. [2013](#CR25)) and, to some extent,
    condones the development of scams. Therefore, developing automated smart Ponzi
    scheme detection technologies is a critical task.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例展示了一个成功的庞氏骗局的实例，并说明了检测智能庞氏骗局的重要性。尽管一些用户明确知道参与庞氏骗局可能会损失（Moore等人[2012](#CR51);
    Neisius和Clayton[2014](#CR55))，但自动检测庞氏骗局仍然具有重要意义，原因如下。（1）有些人难以理解区块链是如何工作的，这使得他们难以区分区块链上的欺诈行为。（2）对于国家当局来说，区块链技术非常新颖，这使得区块链处于某种法律体系的灰色区域（Elwell等人[2013](#CR25))，在一定程度上，纵容了诈骗的发展。因此，开发自动智能庞氏骗局检测技术是一项关键任务。
- en: 'Due to the semi-anonymous nature of the blockchain, detecting Ponzi scheme
    contracts on Ethereum is not an easy task. A Ponzi scheme contract is composed
    of the corresponding source code, so it is possible to manually check the contract
    code to determine whether it is a Ponzi scheme contract. However, difficulty also
    comes with this approach. That is, Ethereum does not require the creator of the
    smart contract to disclose the source code. In other words, only bytecode is necessary
    for a smart contract to release on Ethereum. In fact, among more than one million
    contracts running on Ethereum, there are only less than four thousand having verified
    source codes.^([2](#Fn2)) This makes it unrealistic to detect Ponzi scheme contracts
    from source code. Thus a variety of questions are raised: How many Ponzi scheme
    contracts are there on Ethereum? What are their characteristics? How much damage
    did they cause? To answer these questions, the first and foremost step is to answer
    the following question: How to detect Ponzi scam contracts without source codes?'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块链的半匿名性质，检测以太坊上的庞氏骗局合约并非易事。庞氏骗局合约由相应的源代码组成，因此可以手动检查合约代码以确定它是否是庞氏骗局合约。然而，这种方法也带来了困难。那就是，以太坊不需要智能合约的创建者披露源代码。换句话说，智能合约在以太坊上发布只需要字节码。实际上，在以太坊上运行的超过一百万个合约中，只有不到四千个拥有验证过的源代码。^([2](#Fn2))
    这使得从源代码检测庞氏骗局合约变得不切实际。因此，提出了各种各样的问题：以太坊上有多少庞氏骗局合约？它们的特点是什么？它们造成了多少损失？为了回答这些问题，首要的步骤是回答以下问题：如何在没有源代码的情况下检测庞氏骗局合约？
- en: In this book, we define the smart Ponzi scheme detection problem as a classification
    problem. In order to build an effective classification model, adequate smart contracts
    with *labels* and effective features excluding source code features are needed.
    Figure [5.2](#Fig2) illustrates the overall framework of the approach proposed
    in this book. As is shown, firstly 3071 verified smart contracts including normal
    transactions, fired transactions, and source codes are downloaded. Then the source
    codes are compiled to bytecodes which are publicly accessible on Ethereum. Besides,
    the bytecodes are disassembled to operation codes (see Sect. [5.3.2](#Sec8) for
    detailed information). Next, we extract account features from recorded transactions
    and code features from operational codes. In the end, an XGBoost classification
    model based on these features is proposed.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig2_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig2_HTML.png)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将智能庞氏骗局检测问题定义为一个分类问题。为了建立一个有效的分类模型，需要有足够的带有*标签*的有效特征的智能合约，这些特征不包括源代码特征。图[5.2](#Fig2)展示了本书提出的方法的总体框架。如图所示，首先下载了3071个经过验证的智能合约，包括正常交易、触发交易和源代码。然后将源代码编译成字节码，这些字节码在以太坊上是公开可访问的。此外，字节码被反汇编成操作码（详细信息见
    Sect. [5.3.2](#Sec8)）。接下来，我们从记录的交易中提取账户特征，从操作码中提取代码特征。最后，基于这些特征提出了一个XGBoost分类模型。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig2_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig2_HTML.png)
- en: Fig. 5.2
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2
- en: The framework of smart Ponzi schemes detection
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 智能庞氏骗局检测框架
- en: 'A key contribution of this section is an experimental validation of the feasibility
    of detecting smart Ponzi schemes at the moment of its creation. Because we extracted
    code features from operation codes which are publicly accessible after the contract
    deployed. This result is of great significance because by using the model we can:
    (1) detect smart Ponzi schemes even if the source codes are intentionally hidden;
    (2) detect smart Ponzi schemes before it causes any damage; and (3) build a risk
    warning platform based on it.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的一个关键贡献是对在合约创建时刻检测智能庞氏骗局的可行性进行了实验验证。因为我们从公开可访问的操作码中提取了代码特征。这一结果具有重要意义，因为通过使用该模型，我们可以：(1)即使源代码被故意隐藏也能检测出智能庞氏骗局；(2)在它造成任何损害之前检测出智能庞氏骗局；(3)基于它建立一个风险预警平台。
- en: 5.3.2 Ethereum and Smart Contracts
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.2 以太坊和智能合约
- en: Since the Ethereum platform and its state transaction mechanism have already
    been introduced in Chap. [2](506524_1_En_2_Chapter.xhtml), this section briefly
    introduces the source code snippet of a Ponzi scheme contract. Besides, operation
    code, the mnemonic form of bytecode and the main source of features in our model,
    is introduced.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于已经在第2章中介绍了以太坊平台及其状态交易机制，因此本节简要介绍了Ponzi计划合约的源代码片段。此外，操作码，字节码的助记形式和我们模型中的主要功能来源也得到了介绍。
- en: 5.3.2.1 A Source Code Snippet of a Smart Ponzi Scheme
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.2.1 一个智能Ponzi计划的源代码片段
- en: Generally, the smart contracts on Ethereum are written in high-level languages.
    Among the various high-level languages, *Solidity* is a contract-oriented, widely-used
    language, which plays a significant role in the Ethereum platform.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，以太坊上的智能合约是用高级语言编写的。在各种高级语言中，*Solidity*是一种面向合约的广泛使用的语言，在以太坊平台上起着重要的作用。
- en: Listing 5.1 The simplified Rubixi![../images/506524_1_En_5_Chapter/506524_1_En_5_Figc_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figc_HTML.png)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 清单5.1 简化的Rubixi![../images/506524_1_En_5_Chapter/506524_1_En_5_Figc_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figc_HTML.png)
- en: 'In order to better understand how to distinguish a Ponzi scheme from the solidity
    source code, we extracted the main part of the Rubixi contract code (Listing [5.1](#FPar1)),
    which determines that this contract is implementing the function of the Ponzi
    scheme. Generally speaking, a smart contract contains two components: function
    and data structure. The function can be called by transaction or message call
    from other accounts and contracts. The data structure is the part of the smart
    contract that stores data and may be updated at any time during the execution
    of the contract.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解如何区分Ponzi计划和稳固的源代码，我们提取了Rubixi合约代码的主要部分（清单[5.1](#FPar1)），它确定了这个合约正在实现Ponzi计划的函数。一般来说，智能合约包含两个组件：函数和数据结构。函数可以通过其他账户或合约的交易或消息调用。数据结构是存储智能合约数据的部分，在合约执行期间可能随时更新。
- en: Consider the contract source code of RUBIXI; lines 2-11 are data definitions,
    which are used to describe the current state of the contract. For example, the
    variable *balance* describes the current balance of the contract, and the data
    structure *Participant* describes the investment and addresses of investors participating
    in the Ponzi scheme. The function on line 14 runs only once when the contract
    is created.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑RUBIXI合约的源代码；第2-11行是数据定义，用于描述合约的当前状态。例如，变量*balance*描述合约当前的余额，数据结构*Participant*描述参与Ponzi计划的投资者的地址和余额。第14行的函数在合约创建时只运行一次。
- en: 'The function with no name in line 17, containing only a function call to *addPayout*,
    is called the *fallback function*. The *fallback function* is only called when
    an account transfers some Ethers without data to the contract address. *addPayout*,
    defined in line 19, is the core part implementing the main logic of Ponzi schemes:
    (1) Record the addresses and investments of the investors (lines 21–22); (2) calculate
    fees (line 28); (3) pay to previous investors when the contract balance meets
    certain conditions (lines 29–34).'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 第17行无名的函数，只包含对*addPayout*的函数调用，被称为*fallback函数*。*fallback函数*仅在账户向合约地址传输一些以太币而不带数据时调用。第19行定义的*addPayout*是实现Ponzi计划主要逻辑的核心部分：（1）记录投资者的地址和投资（第21-22行）；（2）计算费用（第28行）；（3）当合约余额满足某些条件时向之前的投资者支付（第29-34行）。
- en: The array *participants* defined in line 12 records all the investors in order,
    including address (*msg.sender*) and payment (*payout=msg.value *pyramidMultiplier)/100*).
    Note that the propagated high profit (see Fig. [5.1](#Fig1)) is controlled by
    the variable *pyramidMultiplier*, which was first set to 300 (line 6), but then
    reduced to 200 (line 23) from the 10th participant and 150 (line 25) from the
    25th participant. Obviously, to attract early participants, the contract owner
    promised a higher profit for them. It is worth mentioning that *pyramidMultiplier*
    should be set to above 100 for the promised profit of participants.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第12行定义的数组*participants*记录了所有投资者的顺序，包括地址(*msg.sender*)和支付(*payout=msg.value *pyramidMultiplier)/100*)。请注意，传播的高利润（见图[5.1](#Fig1)）由变量*pyramidMultiplier*控制，最初在第6行设置为300，但从第10个参与者减少到200（第23行），从第25个参与者减少到150（第25行）。显然，为了吸引早期参与者，合约所有者承诺给他们更高的利润。值得注意的是，*pyramidMultiplier*应该设置为超过100，以保证参与者的利润。
- en: Taking fees from participants is the main purpose of operating a Ponzi scheme.
    It can be seen clearly from the code snippet that Rubixi charges every investment
    10%, and the fees are collected by calling the function *collectAllFees* in line
    37\. The while loop from line 29 to line 34 tries to pay all the previous participants
    by their investment order until the balance is not enough. This piece of code
    clearly shows the logic of the contract payment, which obviously can be identified
    as a Ponzi scheme.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从代码片段中可以清楚地看出，Rubixi对每个投资收取10%的费用，收费是通过在第37行调用函数*collectAllFees*来实现的。从第29行到第34行的while循环试图按照投资顺序支付所有前一个参与者，直到余额不足。这段代码清楚地显示了合约支付的逻辑，这显然可以被识别为庞氏骗局。
- en: 'As seen from the code snippet, two kinds of transactions may occur to a smart
    contract: normal transactions and fired transactions. These transactions are publicly
    available and can be downloaded from ethereum.io^([3](#Fn3)) using the provided
    API.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如代码片段所示，智能合约可能发生两种交易：普通交易和已触发交易。这些交易是公开的，可以通过提供的API从ethereum.io^([3](#Fn3))下载。
- en: 5.3.2.2 Deploy a Contract
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.2.2 部署合约
- en: 'As mentioned above, an Ethereum contract is a series of “Ethereum virtual machine
    code” or “EVM code” residing in the Ethereum blockchain. We call this *bytecode*
    of a contract. In order to write smart contracts conveniently, a high-level language
    is used (e.g., the *Solidity* language). Thus, to deploy a contract, the first
    thing to do is to compile the source code into EVM bytecode. The EVM bytecode
    is composed of a series of bytes. Each byte is an operation. For human readable,
    each operation corresponds with a mnemonic form. For example, the mnemonic form
    of EVM bytecode 0x10 is LT, which means less-than comparison. We call LT and such
    mnemonic form of EVM bytecode as *opcode*. The appendix of Ethereum yellow paper
    (Wood [2014](#CR70)) contains a complete list of the EVM bytecode and its mnemonic
    form, i.e., opcode. A disassembler^([4](#Fn4)) can be used to get the operation
    code of a contract from bytecode. Operation code consist of a series of *opcode*
    and *operand*. For example, the first five rows of the operation code in Rubixi
    are: *PUSH1 0x60; PUSH1 0x40; MSTORE; CALLDATASIZE; ISZERO*. *PUSH1* is an opcode,
    and *0x40* is an operand.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，以太坊合约是一系列“以太坊虚拟机代码”或“EVM代码”的集合，这些代码存储在以太坊区块链上。我们称这个合约的*bytecode*。为了方便编写智能合约，使用了一种高级语言（例如*Solidity*语言）。因此，要部署合约，首先要将源代码编译成EVM
    bytecode。EVM bytecode由一系列字节组成。每个字节都是一个操作。为了人类可读性，每个操作都与一个助记词相对应。例如，EVM bytecode
    0x10的助记词形式是LT，这意味着小于比较。我们称LT以及这样的EVM bytecode为*opcode*。以太坊黄皮书附录（Wood [2014](#CR70)）包含EVM
    bytecode及其助记词形式的完整列表，即opcode。可以使用反汇编器^([4](#Fn4))从bytecode获取合约的操作码。操作码由一系列*opcode*和*操作数*组成。例如，Rubixi的操作码的前五行是：*PUSH1
    0x60; PUSH1 0x40; MSTORE; CALLDATASIZE; ISZERO*。*PUSH1*是一个操作码，*0x40*是一个操作数。
- en: To make the contract callable from other accounts, the bytecode of a smart contract
    should be deployed in the main Ethereum network. A special transaction targeted
    to the zero-account (the account with the address 0) creates a new contract. The
    bytecode of the contract provides as the payload of that transaction and will
    be executed; the result will be stored in the code field of the new contract account
    and be record permanently on the blockchain until the contract being killed by
    the creator. The address of the new contract will return to the creator, which
    can then be shared with the others.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使合约能够从其他账户调用，智能合约的bytecode应该部署在以太坊主网络上。针对零账户（地址为0的账户）的特殊交易创建一个新的合约。合约的bytecode作为该交易的负载，并将被执行；执行结果将存储在新合约账户的代码字段中，并永久记录在区块链上，直到合约被创建者杀死。新合约的地址将返回给创建者，然后可以与其他人分享。
- en: 5.3.3 Data, Feature Extraction, and Classification Model
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.3 数据、特征提取和分类模型
- en: In order to establish an effective model to detect smart Ponzi schemes, 1382
    verified smart contracts were collected from the website [http://​etherscan.​io](http://etherscan.io).
    Reported by a previous study (Bartoletti et al. [2020](#CR6)), these smart contracts
    were inspected manually to check whether it is a smart Ponzi scheme or not. We
    recheck the results and tidy them as ground truth data in our model. Specifically,
    131 Ponzi scheme contracts and 1251 non-Ponzi scheme contracts were collected.
    To establish the model, we downloaded the corresponding data and extracted two
    categories of features from the data. This section provides an overview of the
    data and features. The feature extraction method is also introduced.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了建立一个有效的智能庞氏骗局检测模型，从网站 [http://etherscan.io](http://etherscan.io) 收集了1382个经过验证的智能合同。根据之前的研究（Bartoletti等人[2020](#CR6)），这些智能合同经过手工检查，以确定其是否为智能庞氏骗局。我们重新检查了结果并将它们整理为我们模型中的真实数据。具体来说，收集了131个庞氏骗局合同和1251个非庞氏骗局合同。为了建立模型，我们下载了相应数据并从数据中提取了两个类别的特征。本节提供了数据和特征的概述。还介绍了特征提取方法。
- en: 5.3.3.1 Data
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.3.1 数据
- en: Figure [5.2](#Fig2) illustrates the collection process of the two kinds of data
    stored on the Ethereum platform, including transactions and source codes. The
    transaction data contain normal transactions and fired transactions in form of
    JSON files. All these data were collected through the APIs provided by etherscan.io.^([5](#Fn5))
    Please visit our website^([6](#Fn6)) for more detailed information. It is worth
    noting that only the last 10000 transactions can be downloaded due to the limitation
    of ethescan.io. However, this limitation has only a little influence to our study
    and was ignored.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [5.2](#Fig2) 说明了存储在以太坊平台上的两种数据的收集过程，包括交易和源代码。交易数据包含正常交易和以JSON文件形式触发的交易。所有这些数据都是通过etherscan.io提供的API收集的。^([5](#Fn5))
    请访问我们的网站^([6](#Fn6)) 以获取更详细的信息。值得注意的是，由于ethescan.io的限制，只能下载最后10000笔交易。然而，这个限制对我们研究的影响很小，被忽略了。
- en: Analyzing the source code of smart contracts is able to make a considerable
    contribution to detecting the functions implemented by the contract. However,
    on Ethereum, open-source code is not compulsory, although it is suggested for
    public inspection. In order to build a practical Ponzi scheme detection model,
    we only rely on the publicly accessible bytecode stored on the Ethereum blockchain.
    For labeled smart contracts, we first compile the source code to bytecode through
    an Ethereum local client. Then disassemble tool is leveraged to get the operation
    code. Finally, we extract the opcodes from the operation code and count their
    occurrences.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 分析智能合同的源代码能够对检测合同实施的功能做出相当大的贡献。然而，在以太坊上，开源代码不是强制性的，尽管建议进行公共审查。为了建立一个实用的庞氏骗局检测模型，我们只依赖存储在以太坊区块链上的公开可访问的字节码。对于标记的智能合同，我们首先通过以太坊本地客户端将源代码编译成字节码。然后利用反汇编工具获取操作代码。最后，我们从操作代码中提取操作码并计算它们的出现次数。
- en: 5.3.3.2 Account Features
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.3.2 账户特征
- en: 'Due to the fraudulent nature of the Ponzi scheme contract, some characteristics
    can be used to identify these contracts. There are at least three characteristics
    that distinguish Ponzi scheme contracts from common smart contracts: (1) The Ponzi
    scheme contracts always send Ethers to the accounts that have invested in it.
    (2) Among the participants, some accounts will receive more payment than the investment,
    such as the creator of the contract. (3) The balance of the contract may always
    be in a low range because the Ponzi scheme is trying to maintain the impression
    of fast and high returns to attract new investors.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于庞氏骗局合同的欺诈性质，一些特征可以用来识别这些合同。至少有三个特征可以将庞氏骗局合同与常见的智能合同区分开来：(1) 庞氏骗局合同总是向已经投资的账户发送以太币。
    (2) 在参与者中，一些账户会收到比投资更多的付款，例如合同的创建者。 (3) 合同的余额可能总是处于较低的范围，因为庞氏骗局试图维持快速和高回报的印象以吸引新投资者。
- en: 'The intrinsic characteristics determine the behaviors of Ponzi schemes, which
    can assist us in detecting Ponzi scheme contracts. One of the representations
    of these behaviors is the Ether flow. We introduce the *Ether flow graph* extracted
    from transaction records to analyze such behavioral characteristics. Different
    from the commonly used cash flow graph, the Ether flow graph is leveraged to represent
    transactions between contracts and participants. These transactions have two directions:
    from participant to contract and from contract to participant. We denote the first
    direction as investment transactions and the second direction as payment transactions
    of the participant. Investment transactions are denoted by red circles and payment
    transactions are denoted by green triangles in the graph. The *x*-axis represents
    the time line, while the *y*-axis represents individual participants. The graph
    presents the transactions that each participant involved along the timeline. The
    corresponding Ether amounts in the transactions are reflected by the size of the
    circles or triangles. The transactions between the contract and a participant
    are arranged in a horizontal line in order of the transactions’ timestamps. Participants
    are ordered by the timestamp of their first transaction with the contract. Thus,
    the 0th participant is usually the creator of the contract. In general, an investment
    transaction should be followed by a payment transaction in normal economic activity,
    but it is not true in a smart Ponzi scheme.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 庞氏骗局的内在特性决定了其行为，这可以帮助我们检测庞氏骗局合约。这些行为的一种表现形式是以太坊流动。我们从交易记录中提取*以太坊流动图*来分析这些行为特征。与常用的现金流动图不同，以太坊流动图用来表示合约与参与者之间的交易。这些交易有两个方向：从参与者到合约和从合约到参与者。我们称第一个方向为投资交易，第二个方向为参与者的支付交易。在图中，投资交易用红色圆圈表示，支付交易用绿色三角形表示。*x*轴代表时间线，而*y*轴代表个体参与者。图展示了每个参与者在时间线上的交易。交易的以太坊金额通过圆圈或三角形的大小反映出来。合约与参与者之间的交易按照交易时间戳的顺序排列在水平线上。参与者按照与合约的第一次交易的时间戳顺序排列。因此，第0个参与者通常是合约的创建者。通常，在正常经济活动中，投资交易应该伴随着支付交易，但在智能庞氏骗局中并非如此。
- en: 'Figures [5.3](#Fig3) and [5.4](#Fig4) display the Ether flow graphs of two
    contracts: Rubixi and LooneyLottery. Rubixi is a typical smart Ponzi scheme and
    LooneyLottery^([7](#Fn7)) is a normal lottery game contract. The Ether flow graph
    of Rubixi contract (Fig. [5.3](#Fig3)) shows that the creator of the contract
    and its very early participants are winners of the game. There are almost 120
    participants involved in the contract, but most payments pertain to the first
    25 lucky participants. Notably, there is an abnormal behavior pertaining to the
    54th participant (presented as a gray-dashed line in the graph), as they sent
    only twice but received payments many times. This abnormal behavior occurs because
    there is a bug in the source code which can be used to change the owner of the
    contract and collect fees (Atzei et al. [2017](#CR4)).![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig3_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig3_HTML.png)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图[5.3](#Fig3)和[5.4](#Fig4)展示了两个合约的以太坊流动图：Rubixi和LooneyLottery。Rubixi是一个典型的智能庞氏骗局，而LooneyLottery^([7](#Fn7))是一个正常的彩票游戏合约。Rubixi合约的以太坊流动图（图[5.3](#Fig3)）显示，合约的创建者和其早期参与者是游戏的赢家。合约中有大约120个参与者，但大部分支付都与前25个幸运的参与者有关。值得注意的是，第54个参与者（在图中以灰色虚线表示）的行为异常，因为他们只发送了两次，但收到了许多支付。这种异常行为是因为源代码中有一个漏洞，可以用来更改合约的拥有者并收取费用（Atzei等人[2017](#CR4)）。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig3_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig3_HTML.png)
- en: Fig. 5.3
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 5.3
- en: The Ether flow graph of Rubixi (a typical Ponzi scheme contract)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的庞氏骗局合约Rubixi的以太坊流动图
- en: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig4_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig4_HTML.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig4_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig4_HTML.png)'
- en: Fig. 5.4
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 5.4
- en: The Ether flow graph of LooneyLottery (a typical non-Ponzi scheme contract)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的非庞氏骗局合约LooneyLottery的以太坊流动图
- en: Significant discrepancy can be found between the two figures. On the one hand,
    there are more participants in Fig. [5.3](#Fig3). However, few interactions can
    be found between these participants and the contract. On the contrast, Fig. [5.4](#Fig4)
    illustrates that the contract involves less participants while there are significantly
    more investments. On the other hand, most payments in Fig. [5.3](#Fig3) pertain
    to the anterior participants but payments in Fig. [5.4](#Fig4) exhibit more randomness.
    These differences can be easily derived by the function of the contract. Thus,
    in turn, the account behavior can be used to classify smart contracts.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数字之间存在显著差异。一方面，图[5.3](#Fig3)中有更多的参与者。然而，这些参与者和合约之间的互动很少。相比之下，图[5.4](#Fig4)显示合约涉及的参与者较少，但投资显著增多。另一方面，图[5.3](#Fig3)中的大部分支付都与前序参与者有关，但图[5.4](#Fig4)中的支付表现出更多随机性。这些差异可以通过合约的函数轻易得出。因此，反过来，账户行为可以用来分类智能合约。
- en: 'Through inspecting the Ether flow graph of Rubixi, we can find that: (1) the
    payment transaction usually occurs after an investment transaction, which indicates
    that the contract usually pays to known accounts; (2) but many investment transactions
    have no followed payment transactions; and (3) some participants have more payment
    transactions than investment transactions. Based on these observations and characteristics,
    we extract seven key features in contracts as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查Rubixi的以太坊流动图，我们可以发现：(1) 支付交易通常在投资交易之后发生，这表明合约通常向已知的账户支付；(2) 但许多投资交易没有跟随的支付交易；(3)
    一些参与者的支付交易多于投资交易。基于这些观察和特点，我们从合约中提取了以下七个关键特征：
- en: '*Known rate (Kr):* the proportion of receivers who have invested before payment.
    A high *Kr* means the contract interact more with accounts already knew. We expect
    with very high Kr of smart Ponzi schemes.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Known rate (Kr):* 支付前已经投资的接收者的比例。*Kr*高意味着合约与已知的账户交互更多。我们期待智能庞氏合约的*Kr*非常高。'
- en: '*Balance (Bal):* the balance of the smart contract.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Balance (Bal):* 智能合约的余额。'
- en: '*N_investment (N_Inv):* the number of investments.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N_investment (N_Inv):* 投资次数。'
- en: '*N_payment (N_pay):* the number of payments.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N_payment (N_pay):* 支付次数。'
- en: '*Difference index (D_ind):* this index is used to measure the difference of
    counts between payment and investment for all participants in a contract. Suppose
    that there are *p* participants pertaining to the contract, *v* is a vector with
    length *p* and *m* [*i*] *and* *n* [*i*] denote the counts of investments and
    payments of the *i*th participant. To calculate the difference index, each element
    of the vector *v* is first computed by *v*[*i*] = *n* [*i*] − *m* [*i*], then!['
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Difference index (D_ind):* 这个指数用于衡量合约中所有参与者支付次数与投资次数的差异。假设合约有关联*p*个参与者，*v*是一个长度为*p*的向量，*m*[*i*]
    和 *n*[*i*] 分别表示第*i*个参与者的投资次数和支付次数。计算差异指数时，向量*v*的每个元素首先通过 *v*[*i*] = *n*[*i*] −
    *m*[*i*] 来计算，然后!['
- en: $$\displaystyle \begin{aligned}D\_ind=\left\{\begin{array}{ll} 0 &amp; if\ v=0\
    or\ p \leq 2;\\ s &amp; otherwise \end{array} \right. \end{aligned}$$
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned}D\_ind=\left\{\begin{array}{ll} 0 &amp; if\ v=0\
    or\ p \leq 2;\\ s &amp; otherwise \end{array} \right. \end{aligned}$$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equa.png)where
    *s* is the skewness of vector *v*. For a smart Ponzi scheme contract, D_ind is
    usually negative, as many participants invest more and receive less.'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equa.png)其中*s*是向量*v*的偏度。对于一个智能庞氏合约，D_ind通常是负的，因为许多参与者投资多而获得少。'
- en: '*Paid rate (Pr):* the proportion of investors who received at least one payment.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Paid rate (Pr):* 收到至少一次支付的投资者比例。'
- en: '*N_maxpay (N_max):* the maximum of counts of payments to participants.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N_maxpay (N_max):* 参与者支付次数的最大值。'
- en: 'Table [5.1](#Tab1) shows three statistics of the extracted features: mean,
    median, and standard deviation (SD). The table contains two parts: the upper part
    is the result of all Ponzi scheme contracts and the bottom part is non-Ponzi scheme
    contracts.Table 5.1'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 表[5.1](#Tab1) 展示了提取特征的三种统计数据：平均值、中位数和标准差（SD）。表格分为两部分：上半部分是所有庞氏合约的结果，下半部分是非庞氏合约的结果。表5.1
- en: Statistics of extracted account features
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 提取的账户特征统计数据
- en: '|   | Kr | Bal | N_inv | N_pay | D_ind | Pr | N_max |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '|   | Kr | Bal | N_inv | N_pay | D_ind | Pr | N_max |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| *Ponzi scheme contracts* |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| *庞氏合约* |'
- en: '| Mean | 0.89 | 4.65 | 56.84 | 92.49 | − 1.04 | 0.62 | 36.12 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| Mean | 0.89 | 4.65 | 56.84 | 92.49 | − 1.04 | 0.62 | 36.12 |'
- en: '| Median | 1.00 | 0.26 | 17.00 | 21.00 | − 0.65 | 0.66 | 11.00 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 中位数 | 1.00 | 0.26 | 17.00 | 21.00 | − 0.65 | 0.66 | 11.00 |'
- en: '| Sd | 0.29 | 15.51 | 119.41 | 204.71 | 1.95 | 0.30 | 94.36 |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| Sd | 0.29 | 15.51 | 119.41 | 204.71 | 1.95 | 0.30 | 94.36 |'
- en: '| *Non-Ponzi scheme contracts* |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| *非庞氏合约* |'
- en: '| Mean | 0.49 | 22319.60 | 653.44 | 540.74 | − 0.51 | 0.43 | 237.95 |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 平均值 | 0.49 | 22319.60 | 653.44 | 540.74 | − 0.51 | 0.43 | 237.95 |'
- en: '| Median | 0.50 | 0.10 | 6.50 | 4.00 | 0.00 | 0.40 | 2.00 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 中位数 | 0.50 | 0.10 | 6.50 | 4.00 | 0.00 | 0.40 | 2.00 |'
- en: '| Sd | 0.43 | 187549.23 | 3986.45 | 2195.42 | 6.05 | 0.41 | 1095.08 |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| Sd | 0.43 | 187549.23 | 3986.45 | 2195.42 | 6.05 | 0.41 | 1095.08 |'
- en: It can be seen from the table that there are significant differences in the
    statistics of these characteristics between Ponzi scheme contracts and non-Ponzi
    scheme contracts. For example, the average value of Known rage (Kr) is 0.89 in
    Ponzi schemes and only 0.49 in non-Ponzi schemes. The high Kr value of Ponzi scheme
    contracts means these contracts always pay to participants who have invested in
    them, which is the characteristic of a typical Ponzi scheme. As for balance (Bal),
    the median of the two contracts are very close, but the difference between standard
    derivation is very significant. The low standard derivation of Ponzi scheme contracts
    on Bal shows that the balance of most Ponzi scheme contracts is very low. On the
    other hand, the high standard derivation of non-Ponzi scheme contracts indicates
    that while the average balance of non-Ponzi scheme contracts is low, some contracts
    have relatively higher balance. Meanwhile, the median of the non-Ponzi scheme
    contracts balance is only 0.1, which means that half of the non-Ponzi scheme contracts
    have a balance less than 0.1\. In fact, many non-Ponzi scheme contracts have zero
    balance.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 从表中可以看出，庞氏合约与非庞氏合约在这些特征的统计上存在显著差异。例如，已知愤怒（Kr）的平均值在庞氏合约中为0.89，在非庞氏合约中仅为0.49。庞氏合约的高Kr值意味着这些合约总是向它们的投资者支付，这是典型庞氏合约的特征。至于余额（Bal），两个合约的中位数非常接近，但标准差的差异非常显著。庞氏合约的低Bal标准差表明，大多数庞氏合约的余额非常低。另一方面，非庞氏合约的高标准差表明，尽管非庞氏合约的平均余额较低，但一些合约的余额相对较高。同时，非庞氏合约余额的中位数仅为0.1，这意味着非庞氏合约中有一半的合约余额低于0.1。实际上，许多非庞氏合约的余额为零。
- en: 5.3.3.3 Code Features
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.3.3 代码特征
- en: Opcodes are significant in analyzing the latent problems of smart contracts,
    because it, to some extent, reflects the logic of smart contracts from the perspective
    of EVM code (Atzei et al. [2017](#CR4); Chen et al. [2017](#CR14)). Therefore,
    we expect that some features extracted from opcodes will be helpful in detecting
    latent Ponzi scheme contracts. In this book, we extracted the opcodes from bytecodes,
    which is publicly available on Ethereum, and counted their occurrence. As a result,
    64 different opcodes are found in the 1382 contracts’ operation codes.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 操作码在分析智能合约的潜在问题时具有重要意义，因为它在一定程度上反映了从EVM代码的角度来看智能合约的逻辑（Atzei等人[2017](#CR4); Chen等人[2017](#CR14)）。因此，我们期望从操作码中提取的一些特征有助于检测潜在的庞氏合约。在这本书中，我们从字节码中提取了操作码，这是在以太坊上公开可用的，并统计了它们的出现次数。结果，在1382个合约的操作码中发现了64个不同的操作码。
- en: Figure [5.5](#Fig5) shows the cloud graphs of opcodes in the aforementioned
    two smart contracts. Three most frequent opcodes, PUSH, DUP, and SWAP, are removed
    to make the graphs more easily seen. This is because EVM is stack-based, these
    opcodes appear frequently in every contract.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig5_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig5_HTML.png)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图[5.5](#Fig5) 展示了前述两个智能合约的操作码云。最常出现的三个操作码，PUSH，DUP和SWAP，被移除以使图形更易见。这是因为EVM是基于堆栈的，这些操作码在每一个合约中频繁出现。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig5_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig5_HTML.png)
- en: Fig. 5.5
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5
- en: The opcode cloud of Rubixi (left) and LooneyLottery (right)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 瑞比希（左）和洛尼彩票（右）的操作码云
- en: 'Although it is almost impossible to judge the type of smart contract by observing
    the word cloud graph of opcode, the word cloud graphs of the two contracts are
    still obviously different. Intuitively, there are at least two significant differences:
    Rubixi’s opcode set contains more judgments, while LooneyLottery’s opcode set
    contains more randomness. In fact, the first difference is obvious, because the
    Rubixi contract contains more JUMPI (7.8%) and the LooneyLottery contract contains
    more JUMP (2.6%). The difference between these instructions is that the former
    is the latter’s conditional version. Finding the second difference requires more
    observation. The LooneyLottery contract contains 4 TIMESTAMPs, and the Rubixi
    contains none. The reason for this difference is that the opcode TIMESTAMP is
    used to obtain the block’s timestamp, which is a commonly used instruction in
    the system to obtain random values. The above analysis shows that the opcode feature
    may be beneficial for detecting Ponzi scheme contracts.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.3.4 Classification Model
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to use the above extracted features to distinguish Ponzi scheme contracts
    from non-Ponzi scheme contracts with high accuracy and low false positives, we
    use a commonly used machine learning algorithm XGBoost, which is proved to perform
    well in many problems (Chen and Guestrin [2016a](#CR12)). This subsection provides
    a simple introduction of XGBoost and its parameters.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'XGBoost is short for “Extreme Gradient Boosting” and is an improved version
    of gradient tree boosting (Friedman [2001](#CR28)).^([8](#Fn8)) Unlike GBM, XGBoost
    introduced two important improvements: regularization and tree pruning. Basically,
    XGBoost provides regularization in the objective function, which is used to avoid
    overfitting in the tree-based model. Meanwhile, it changed the tree pruning method
    from stopping when a negative loss encountered to the post-pruning.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Specifically, suppose there are *N* smart contracts in the dataset {(*x* [*i*],
    *y* [*i*]) | *i* = 1, 2, …, *N*}, where *x* [*i*] ∈ *R* ^(*d*) is the extracted
    features associated with the *i*th smart contract, *y* [*i*] ∈{0, 1} is the classification
    label, such that *y* [*i*] = 1 if and only if the smart contract is a verified
    Ponzi scheme contract. We use XGBoost aiming to minimize the following objective
    function:![
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} Obj(\theta) = L(\theta) + \Omega(\theta), \end{aligned}
    $$
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ1.png)(5.1)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: where *L* is the training loss function and Ω is the regulation term. The training
    loss function measures how predictive the model is on the training data and the
    regulation term penalizes the complexity of the model, which helps to avoid overfitting.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Unlike traditional classification model which directly returns the class label,
    we train a logistic regression model for binary classification, which outputs
    a probability. Any contract with the predicted probability larger than 0.5 is
    considered as a Ponzi scheme contract. The corresponding logistic loss function
    is as follows:![
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \hat{y}_i^{(0)} &amp;= 0 \\ \hat{y}_i^{(1)}
    &amp;= f_1(x_i) = \hat{y}_i^{(0)}+f_1(x_i) \\ \hat{y}_i^{(2)} &amp;= f_1(x_i)
    + f_2(x_i) = \hat{y}_i^{(1)} + f_2(x_i)\\ &amp; \cdots \\ \hat{y}_i^{(t)} &amp;=
    \sum_{k=1}^t f_k(x_i) = \hat{y}_i^{(t-1)} + f_t(x_i). \end{aligned} $$
- en: $$\displaystyle \begin{aligned} L(\theta) = \sum_i[y_i \mathrm{ln}(1+e^{-\hat{y}_i})+
    (1-y_i)\mathrm{ln}(1+e^{\hat{y}_i})]. \end{aligned} $$
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} L(\theta) = \sum_i[y_i \ln(1+e^{-\hat{y}_i})+
    (1-y_i)\ln(1+e^{\hat{y}_i})]. \end{aligned} $$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ2.png)(5.2)As
    for the regulation term, the first thing to do is redefining a tree that is convenient
    to measure the complexity. In XGBoost, a tree is a function that maps an instance
    to a leaf weight. Specifically,!['
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ2.png)(5.2)'
- en: '$$\displaystyle \begin{aligned} f(x) = \omega_{q(x)},\ \ \omega \in R^T,\ q\
    : R^d\rightarrow \ \{1,2,\ldots,T\}, \end{aligned} $$'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: For the learning process, XGBoost introduces *additive training*, which starts
    from constant prediction and adds new function each time as follows:![
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ3.png)(5.3)where
    *ω* is the leaf weight of the tree, *T* is the number of leafs, and *q* stands
    for the tree structure. The complexity of the tree is defined as!['
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: and XGBoost aims to find the best *f* [*t*] to minimize this function at each
    step. To grow the tree, it tries to add the best split of a feature that maximizes
    *gain* on each leaf nodes. XGBoost adopts the post-pruning method
- en: $$\displaystyle \begin{aligned} \Omega(f) = \gamma T + \frac{1}{2} \lambda\sum_{j=1}^T
    \omega_j^2, \end{aligned} $$
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} \Omega(f) = \gamma T + \frac{1}{2} \lambda\sum_{j=1}^T
    \omega_j^2, \end{aligned} $$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ4.png)(5.4)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '$$\displaystyle \begin{aligned} f(x) = \omega_{q(x)},\ \ \omega \in R^T,\ q\
    : R^d\rightarrow \ \{1,2,\ldots,T\}, \end{aligned} $$'
- en: where *γ* and *λ* are parameters of the model.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 对于正则项，首先要重新定义一棵树，使其便于测量复杂度。在XGBoost中，一棵树是一个将实例映射到叶权重的一个函数。具体地，![
- en: To ensemble trees, the objective function is rewritten as follows:![
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: To ensemble trees, the objective function is rewritten as follows:![
- en: $$\displaystyle \begin{aligned} Obj= \sum_{i=1}^n l(y_i,\hat{y}_i) + \sum_{k=1}^K\Omega(f_k),
    \end{aligned} $$
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} Obj= \sum_{i=1}^n l(y_i,\hat{y}_i) + \sum_{k=1}^K\Omega(f_k),
    \end{aligned} $$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ5.png)(5.5)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ5.png)(5.5)'
- en: where ![
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: where ![
- en: $$\hat {y}_i = \sum _{k=1}^K f_k(x_i)$$
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ7.png)(5.7)'
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq1.png), *K*
    is the number of trees.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ6.png)(5.6)'
- en: For the learning process, XGBoost introduces *additive training*, which starts
    from constant prediction and adds new function each time as follows:![
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: $$\hat {y}_i = \sum _{k=1}^K f_k(x_i)$$
- en: $$\displaystyle \begin{aligned} \hat{y}_i^{(0)} &amp;= 0 \\ \hat{y}_i^{(1)}
    &amp;= f_1(x_i) = \hat{y}_i^{(0)}+f_1(x_i) \\ \hat{y}_i^{(2)} &amp;= f_1(x_i)
    + f_2(x_i) = \hat{y}_i^{(1)} + f_2(x_i)\\ &amp; \cdots \\ \hat{y}_i^{(t)} &amp;=
    \sum_{k=1}^t f_k(x_i) = \hat{y}_i^{(t-1)} + f_t(x_i). \end{aligned} $$
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用上述方程，目标函数可以写成![
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ6.png)(5.6)By
    applying the above equations, the objective function can be written as!['
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ4.png)(5.4)'
- en: $$\displaystyle \begin{aligned} Obj^{(t)} = \sum_{i=1}^n l(y_i,\hat{y}_i^{(t-1)}
    + f_t(x_i)) + \Omega(f_t) + constant, \end{aligned} $$
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned} Obj^{(t)} = \sum_{i=1}^n l(y_i,\hat{y}_i^{(t-1)}
    + f_t(x_i)) + \Omega(f_t) + constant, \end{aligned} $$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equ7.png)(5.7)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: where *γ* and *λ* 是模型的参数。
- en: and XGBoost aims to find the best *f* [*t*] to minimize this function at each
    step. To grow the tree, it tries to add the best split of a feature that maximizes
    *gain* on each leaf nodes. XGBoost adopts the post-pruning method, growing a tree
    to maximum depth and then recursively pruning all the leaf splits with negative
    gain.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq1.png), *K*
    是树的数目。'
- en: 5.3.4 Experimental Results and Feature Analysis
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.4 实验结果与特征分析
- en: In this section, we present our experimental results. First, we describe the
    experiment settings and evaluation metrics. Then, the experiments based on the
    comparison of the two categories of extracted features are summarized. Finally,
    we analyze the importance of features.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们展示了我们的实验结果。首先，我们描述了实验设置和评估指标。然后，总结了基于两种提取特征类别比较的实验。最后，我们分析了特征的重要性。
- en: 5.3.4.1 Experiment Setting
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.4.1 实验设置
- en: 'DatasetsIn order to compare the discriminative power of these two types of
    features, we used the following three kinds of features to conduct corresponding
    experiments: account, opcode, and the combination of both. For these three experiments,
    we used fivefold cross-validation to find the best parameters for the model. Then
    we divided the corresponding data into 80% as the training set and 20% as the
    test set, and we used the best parameters found to conduct ten experiments. The
    average result of the experiment is displayed in Table [5.2](#Tab2).Table 5.2'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集为了比较这两种特征的区分能力，我们使用了以下三种特征进行相应实验：账户、操作码以及两者的组合。对于这三种实验，我们使用了五折交叉验证来为模型找到最佳参数。然后我们将相应数据分为80%作为训练集和20%作为测试集，并使用找到的最佳参数进行十次实验。实验的平均结果在表
    [5.2](#Tab2) 中展示。表 5.2
- en: A feature performance comparison
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 特性表现比较
- en: '| Features | Precision | Recall | F-score |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 特征 | 精确度 | 召回率 | F 分数 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Account | 0.74 | 0.32 | 0.44 |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 账户 | 0.74 | 0.32 | 0.44 |'
- en: '| Opcode | 0.90 | 0.80 | 0.84 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 操作码 | 0.90 | 0.80 | 0.84 |'
- en: '| Account + opcode | 0.94 | 0.81 | 0.86 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 账户 + 操作码 | 0.94 | 0.81 | 0.86 |'
- en: Evaluation Metrics
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 评估指标
- en: Different from the commonly used metrics of error rate in classification problems,
    we use three metrics, precision, recall, and F-score, to evaluate the performances
    of the model.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 与分类问题中常用的错误率指标不同，我们使用三个指标，精确度、召回率和 F 分数，来评估模型的表现。
- en: 5.3.4.2 Results Summary
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.4.2 结果总结
- en: Table [5.2](#Tab2) summarizes the performances of the three kinds of features
    in detecting smart Ponzi schemes. Several conclusions can be conducted from the
    table. First of all, surprisingly, the account feature in this experiment is not
    effective. We expect that the account feature will have a good performance because
    in the above analysis we found that the two categories of contracts have significant
    differences in this regard. However, the low recall indicates that the model trained
    with only account features is unable to distinguish Ponzi scheme contracts from
    non-Ponzi scheme contracts. On the contrary, opcode features are very efficient
    in the classification. The reason for this result may be that many smart contracts
    are still experimental, which makes it difficult to detect their type from their
    behavior. In fact, many smart contracts have no transaction records. Another possible
    reason is that, compared to the opcode feature, the number of account features
    is too small. Besides, the corresponding metrics show that a model trained with
    only opcode features can be useful in Ponzi scheme contract detection. Finally,
    the performance of such a model can be improved by combining opcode features with
    account features.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 表 [5.2](#Tab2) 总结了三种特征在检测智能庞氏骗局中的表现。从表中可以得出几个结论。首先，令人惊讶的是，本次实验中的账户特征并不有效。我们本期望账户特征会有良好的表现，因为在上述分析中我们发现两类合约在这方面有显著差异。然而，低召回率表明，仅使用账户特征训练的模型无法将庞氏合约与非庞氏合约区分开来。相反，操作码特征在分类中非常有效。导致这一结果的原因可能是许多智能合约仍然处于实验阶段，这使得从其行为中检测其类型变得困难。实际上，许多智能合约没有交易记录。另一个可能的原因是，与操作码特征相比，账户特征的数量太少。此外，相应的指标显示，仅使用操作码特征训练的模型在庞氏合约检测中是有用的。最后，通过将操作码特征与账户特征结合，可以提高这种模型的性能。
- en: 5.3.4.3 Feature Analysis
  id: totrans-145
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.4.3 特征分析
- en: To further understand the discriminative power of the extracted features, we
    display the ten most significant features in Fig. [5.6](#Fig6). The description
    of opcodes in the graph are summarized in Table [5.3](#Tab3).![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig6_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig6_HTML.png)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步了解提取特征的区分能力，我们在图 [5.6](#Fig6) 中展示了十个最重要的特征。图中的操作码描述总结在表 [5.3](#Tab3) 中。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig6_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig6_HTML.png)
- en: Fig. 5.6
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6
- en: The importance of the ten most significant features
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 十个最重要特征的重要性
- en: Table 5.3
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5.3
- en: Opcode and its description
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Opcode及其描述
- en: '| Opcode | Description |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| Opcode | 描述 |'
- en: '| GASLIMIT | Get the block’s gas limit |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| GASLIMIT | 获取区块的gas限制 |'
- en: '| EXP | Exponential operation. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| EXP | 指数操作。 |'
- en: '| CALLDATALOAD | Get input data of current environment |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| CALLDATALOAD | 获取当前环境的开头数据 |'
- en: '| SLOAD | Load word from storage |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| SLOAD | 从存储中加载单词 |'
- en: '| CALLER | Get caller address |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| CALLER | 获取调用者地址 |'
- en: '| LT | Less-than comparision |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| LT | 小于比较 |'
- en: '| GAS | Get the amount of available gas |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| GAS | 获取可用gas的数量 |'
- en: '| MOD | Modulo remainder operation |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| MOD | 取模余数操作 |'
- en: '| MSTORE | Save word to memory |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| MSTORE | 将单词保存到内存中 |'
- en: It can be seen clearly that the most important feature is GASLIMIT, which is
    an instruction used to obtain the gas limit of a block. In order to better understand
    why GASLIMIT is the most important feature, we first calculated the number of
    smart contracts that use this instruction. We found that 57% of Ponzi scheme contracts
    are using this instruction, while only 4% non-Ponzi scheme contracts are using
    it. Therefore, compared with non-Ponzi scheme contracts, Ponzi scheme contracts
    are more inclined to refer to the gas limit of the block. However, this conclusion
    is somehow against common sense because the Ponzi scheme logic does not need to
    obtain the gas limit of the block. In order to find the real reason, we selected
    the source codes of some Ponzi scheme contracts that use the GASLIMIT instruction
    to find out what kind of source codes will lead to this instruction. As a result,
    we found that these contracts usually use Oracle’s APIs, which results in the
    GASLIMIT opcode.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看出，最重要的特性是GASLIMIT，这是一个用于获取区块gas限制的指令。为了更好地理解为什么GASLIMIT是最重要的特性，我们首先计算了使用此指令的智能合约的数量。我们发现，57%的庞氏骗局合约正在使用这个指令，而只有4%的非庞氏骗局合约在使用它。因此，与非庞氏骗局合约相比，庞氏骗局合约更倾向于参考区块的gas限制。然而，这个结论某种程度上与常识相悖，因为庞氏骗局的逻辑不需要获取区块的gas限制。为了找到真正的原因，我们选择了使用GASLIMIT指令的一些庞氏骗局合约的源代码，以找出什么样的源代码会导致这个指令。结果是，这些合约通常使用Oracle的API，这导致了GASLIMIT
    opcode。
- en: Another opcode worth noting is CALLER, which is an instruction used to get the
    caller’s address. Note that Ponzi scheme contracts need to record the addresses
    of investors in order to pay the money back to them in the future. The rest opcodes
    are mainly related to arithmetic operations.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得注意的opcode是CALLER，这是一个用于获取调用者地址的指令。请注意，庞氏骗局合约需要记录投资者的地址，以便将来向他们支付资金。其余的opcode主要与算术操作相关。
- en: 'In general, these instructions seem to reflect a special type of contract:
    these contracts have more payment transactions, need to remember the address of
    the caller, and are mainly composed of arithmetic calculations. As expected, Ponzi
    scheme contracts belong to this type of contract.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，这些指令似乎反映了一种特殊的合约类型：这些合约有更多的支付交易，需要记住调用者的地址，并且主要由算术计算组成。如预期一样，庞氏骗局合约属于这种类型的合约。
- en: For account features, only one feature (D_ind) is found in the top ten most
    important features. This is not a surprising result, because as analyzed in Sect.
    [5.3.3.2](#Sec13), the difference between Ponzi scheme contracts and non-Ponzi
    scheme contracts is very significant in this feature.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 对于账户特性，只在最重要的十个特性中发现了一个特征（D_ind）。这并不是一个令人惊讶的结果，因为如第[5.3.3.2](#Sec13)节分析，庞氏骗局合约与非庞氏骗局合约在这个特征上的差异非常显著。
- en: 5.3.4.4 Application
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3.4.4 应用
- en: 'In order to estimate the total number of Ponzi scheme contracts on Ethereum,
    a previous study has compared the similarity between their bytecodes to detect
    hidden Ponzi scheme contracts (Ponzi scheme contracts without publicly accessible
    source codes) (Bartoletti et al. [2020](#CR6)). Fifty four hidden Ponzi scheme
    contracts were discovered by the research. In order to verify the reliability
    of our method by comparing with the previous study, we used only code features
    to predict these 54 hidden Ponzi scheme contracts. The results show that 45 of
    54 contracts (83%) are classified as Ponzi scheme contracts by our model. In order
    to understand why the remaining 9 contracts were not recognized by our model,
    we manually checked their transaction records. The findings are as follows:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估计以太坊上庞氏骗局合同的总数，先前的研究已经比较了它们的字节码以检测隐藏的庞氏骗局合同（没有公开可访问源代码的庞氏骗局合同）(Bartoletti等人[2020](#CR6))。研究发现了54个隐藏的庞氏骗局合同。为了通过与先前研究的比较验证我们方法的可靠性，我们只用代码特征来预测这54个隐藏的庞氏骗局合同。结果显示，54个合同中有45个（83%）被我们的模型分类为庞氏骗局合同。为了了解为什么剩下的9个合同没有被我们的模型识别，我们手动检查了它们的交易记录。以下是发现：
- en: Two contracts actually have source codes.^([9](#Fn9)) They refer to the same
    project on github.^([10](#Fn10)) By reading the introduction page and checking
    the source codes, one can find that it is not a smart Ponzi scheme but a kind
    of game. Our model successfully excludes it.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上有两个合同有源代码。^([9](#Fn9))它们指的是github上的同一个项目。^([10](#Fn10))通过阅读简介页面并检查源代码，可以发现它不是一个智能庞氏骗局，而是一种游戏。我们的模型成功地排除了它。
- en: A contract^([11](#Fn11)) interacted with only the creator. Though we cannot
    say that it is not a smart Ponzi scheme, it seems more like a test-transaction-contract
    from the transaction records. Another contract,^([12](#Fn12)) which have 5 successful
    transactions but only one payment to an unacquainted address, is possibly not
    a smart Ponzi scheme as the balance is relatively large and the transaction pattern
    is not conformed to any kind of smart Ponzi schemes summarized in Bartoletti et
    al. ([2020](#CR6)).
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个合同^([11](#Fn11))只与创建者互动。虽然我们不能说它不是一个智能庞氏骗局，但从交易记录来看，它更像是一个测试交易合同。另一个合同，^([12](#Fn12))成功进行了五次交易，但只向一个不熟悉的地址支付了一次，可能是智能庞氏骗局，因为余额相对较大，交易模式不符合Bartoletti等人总结的任何智能庞氏骗局([2020](#CR6))。
- en: A contract,^([13](#Fn13)) which has only one transaction with amount large than
    0 (including normal and fired transactions) and all the fired transactions are
    function call from unknown accounts, cannot be a smart Ponzi scheme. A similar
    situation can be found in another contract.^([14](#Fn14))
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个合同，^([13](#Fn13))只有一个大于0的交易（包括正常和已触发交易），并且所有已触发的交易都是来自未知账户的函数调用，不能是一个智能庞氏骗局。在另一个合同中也可以找到类似的情况。^([14](#Fn14))
- en: The order of payments in the two contracts^([15](#Fn15)) is strange. There are
    only a few participants, but anterior participants receive payments later than
    posteriors, which indicates that they are probably not smart Ponzi schemes.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个合同的支付顺序^([15](#Fn15))很奇怪。参与人数很少，但前一部分参与者比后一部分参与者晚收到支付，这表明它们可能不是智能庞氏骗局。
- en: The last contract,^([16](#Fn16)) which has similar behavior with smart Ponzi
    schemes but more payments than investments, is hard to draw a conclusion.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后一个合同，^([16](#Fn16))其行为与智能庞氏骗局相似，但支付金额超过投资金额，很难得出结论。
- en: These findings indicate that our model can detect Ponzi scheme contracts more
    accurately than comparing the similarity between bytecodes.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这些发现表明，我们的模型可以比比较字节码的相似性更准确地检测到庞氏骗局合同。
- en: In order to estimate the number of Ponzi scheme contracts running on Ethereum,
    we first downloaded all the contracts created before May 7, 2017 (the same date
    range as in (Bartoletti et al. [2020](#CR6))). We obtained 280704 contracts in
    total. According to our proposed model, we extracted the corresponding opcode
    features from the bytecodes of these contracts and then used these features to
    make predictions. Our model found 386 Ponzi scheme contracts (including verified
    ones). Therefore, it is estimated that there may be 434 (386 × *precision* ÷ *recall*)
    Ponzi schemes running on Ethereum, accounting for 0.15% of the total number of
    contracts before May 7, 2017\. Figure [5.7](#Fig7) illustrates the number of Ponzi
    scheme contracts under each score (probabilities) predicted by the model. It can
    be seen that most of the contracts have high scores, indicating that the problem
    may be more serious than expected. In fact, only 191 Ponzi scheme contracts have
    been discovered in recent study (Bartoletti et al. [2020](#CR6)), which is a number
    much smaller than our estimate.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig7_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig7_HTML.png)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估计在以太坊上运行的庞氏骗局合同的数量，我们首先下载了所有在2017年5月7日之前创建的合同（与（Bartoletti 等人 [2020](#CR6)）相同的时间范围）。我们总共获得了280704个合同。根据我们提出的模型，我们从这些合同的字节码中提取了相应的操作码特征，然后使用这些特征进行预测。我们的模型发现了386个庞氏骗局合同（包括验证过的合同）。因此，估计可能有434（386×*精确度*÷*召回率*）个庞氏骗局在以太坊上运行，占2017年5月7日之前总合同数的0.15%。图
    [5.7](#Fig7) 说明了模型预测的每个分数（概率）下庞氏骗局合同的数量。可以看出，大多数合同得分很高，这表明问题可能比预期的更严重。实际上，最近的研究中只发现了191个庞氏骗局合同（Bartoletti
    等人 [2020](#CR6)），这个数字远低于我们的估计。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig7_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig7_HTML.png)
- en: Fig. 5.7
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7
- en: The number of detected smart Ponzi schemes and scores (probability)
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 检测到的智能庞氏骗局数量及分数（概率）
- en: 5.3.5 Related Work
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.5 相关工作
- en: Since the creation of Bitcoin, blockchain technology became a research hotspot.
    Three types of research can be found in the literature. The first type focuses
    on the underlying mechanism. Many consensus mechanisms were proposed, such as
    proof of stake (PoS) (King and Nadal [2012](#CR39)), practical byzantine fault
    tolerance (PBFT) (Hyperledger [2015](#CR32); Mazieres [2015](#CR47)), and ripple
    (Schwartz et al. [2014](#CR63)). Furthermore, some research focused on improving
    the existing mechanism (Decker et al. [2016](#CR24)). The second type discusses
    the application of blockchain technology. Since blockchain technology has many
    favorable characteristics, many applications can be found in finance service (Kondor
    et al. [2016](#CR42); Peters and Panayi [2016](#CR58)), Internet of Things (IoT)
    (Christidis and Devetsikiotis [2016](#CR19); Conoscenti et al. [2016](#CR23)),
    and social services (Namecoin [2014](#CR54)). The last but the most related type
    of work is data mining on blockchain. Thanks to the publicly accessible characteristic,
    blockchain provides an unprecedented opportunity for data analysis to answer various
    questions, for example, usage characteristic (Meiklejohn et al. [2016](#CR49);
    Ron and Shamir [2013](#CR62); Yelowitz and Wilson [2015](#CR71)) , anonymity (Androulaki
    et al. [2013](#CR2); Reid and Harrigan [2013](#CR60)), and economic behavior analysis
    (Kondor et al. [2014a](#CR40),[b](#CR41)). More information can be found in the
    survey (Zheng et al. [2017](#CR73)).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 自比特币诞生以来，区块链技术成为了研究的热点。文献中可以找到三种类型的研究。第一种类型关注于底层机制。提出了许多共识机制，例如权益证明（PoS）（King
    和 Nadal [2012](#CR39)），实用拜占庭容错（PBFT）（Hyperledger [2015](#CR32)；Mazieres [2015](#CR47)），以及
    Ripple（Schwartz 等人 [2014](#CR63)）。此外，一些研究专注于改进现有机制（Decker 等人 [2016](#CR24)）。第二种类型讨论区块链技术的应用。由于区块链技术有许多有利特性，在金融服务（Kondor
    等人 [2016](#CR42)；Peters 和 Panayi [2016](#CR58)）、物联网（IoT）（Christidis 和 Devetsikiotis
    [2016](#CR19)；Conoscenti 等人 [2016](#CR23)）和社会服务（Namecoin [2014](#CR54)）等领域都可以找到许多应用。最后但最相关的一种类型的工作是在区块链上进行数据挖掘。得益于公开可访问的特性，区块链为数据分析提供了前所未有的机会来回答各种问题，例如使用特性（Meiklejohn
    等人 [2016](#CR49)；Ron 和 Shamir [2013](#CR62)；Yelowitz 和 Wilson [2015](#CR71)），匿名性（Androulaki
    等人 [2013](#CR2)；Reid 和 Harrigan [2013](#CR60)），以及经济行为分析（Kondor 等人 [2014a](#CR40)，[b](#CR41)）。更多信息可以在调查报告（Zheng
    等人 [2017](#CR73)）中找到。
- en: With the development of the Internet, online “high-yield” investment program
    (HYIP) has become a typical form of Ponzi schemes. A preliminary analysis was
    provided on economic aspects of it by using data collected from HYIP websites
    (Moore et al. [2012](#CR51)). More detailed research was conducted in (Neisius
    and Clayton [2014](#CR55)), where a model was set out to estimate the turnover
    and profits of HYIPs. Both papers focused on HYIPs which use centralized virtual
    currencies. The creation of blockchain technology makes cryptocurrency an ideal
    currency for scammers. In blockchain, the ledger records every transaction, and
    these transactions can be accessed publicly. Valuable data can thus be obtained
    by researchers to investigate scams on blockchain. Among different scams, Bitcoin
    is the most notable one (Christin [2013](#CR20); Moore and Christin [2013](#CR50);
    Moser et al. [2013](#CR53)). Marie Vasek and Tyler Moore provided an empirical
    analysis of Bitcoin-based scams (Vasek and Moore [2015](#CR67)). They found 32
    HYIPs and estimated more than 4 million USD involved. A recent study focused on
    the economic aspects of smart Ponzi schemes (Bartoletti et al. [2020](#CR6));
    they use *normalized Levenshtein distance* (Yujian and Bo [2017](#CR72)) as a
    measure of similarity between bytecodes to detect hidden smart Ponzi schemes.
    Different from their study, this work focused on finding a verifiable method to
    detect smart Ponzi schemes in bytecodes.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 随着互联网的发展，在线“高收益”投资计划（HYIP）已成为庞氏骗局的典型形式。通过对HYIP网站收集的数据进行分析（Moore等人[2012](#CR51)），提供了初步的经济分析。在（Neisius和Clayton[2014](#CR55)）中进行了更详细的研究，其中提出了一个模型来估算HYIP的营业额和利润。这两篇文章都关注使用集中虚拟货币的HYIP。区块链技术的创建使得加密货币成为骗子理想的货币。在区块链中，账本记录每一笔交易，并且这些交易可以公开访问。研究人员可以因此获得宝贵数据，以调查区块链上的骗局。在不同的骗局中，比特币是最值得注意的是（Christin[2013](#CR20)；Moore和Christin[2013](#CR50)；Moser等人[2013](#CR53)）。Marie
    Vasek和Tyler Moore对基于比特币的骗局进行了实证分析（Vasek和Moore[2015](#CR67)）。他们发现了32个HYIP，并估计有超过400万美元涉及其中。最近的研究关注智能庞氏骗局的经济学方面（Bartoletti等人[2020](#CR6)）；他们使用*归一化Levenshtein距离*（Yujian和Bo[2017](#CR72)）作为字节码之间相似度的度量，以检测隐藏的智能庞氏骗局。与他们的研究不同，这项工作专注于寻找一种可验证的方法，以检测字节码中的智能庞氏骗局。
- en: 5.3.6 Future Work
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.3.6 未来工作
- en: Financial scams based on blockchain and cryptocurrency have become an important
    research problem. With the development of blockchain technology, Ponzi scheme
    is now under the veil of smart contracts. In the future, we are going to further
    this study in three aspects. Firstly, to extend the ground truth data and improve
    the classification model. As the number of smart contracts having source codes
    keep increasing every day, it is possible to extend the ground truth data by manually
    checking the source codes. With more ground truth data, more accurate and credible
    model can be developed. Secondly, to build a unified platform to evaluate and
    score every smart contract for every possible scam. We have noticed that there
    is an open-source project on Github to keep track of all the current Ethereum
    scams.^([17](#Fn17)) However, the website collects data by manual user reports
    and combines them. We are trying to establish a similar website focusing on detecting
    smart contracts by data mining methods. Thirdly, to study other kinds of scams.
    Except for smart Ponzi scheme, many other scams are taking the advantage of blockchain
    technology. It is necessary to study this question to promote the development
    of blockchain technology.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链和加密货币的金融骗局已成为一个重要的研究问题。随着区块链技术的发展，庞氏骗局现在隐藏在智能合约之下。未来，我们将从三个方面进一步研究。首先，扩展真实数据并改进分类模型。随着每天拥有源代码的智能合约数量不断增加，可以通过手动检查源代码来扩展真实数据。拥有更多的真实数据，可以开发出更准确、更可信的模型。其次，建立一个统一的平台，对每一个可能的骗局对每一个智能合约进行评估和打分。我们注意到有一个在Github上的开源项目，用于追踪所有当前的以太坊骗局。[17](#Fn17)然而，该网站通过用户手动报告收集数据并加以整合。我们正在尝试建立一个类似的网站，专注于通过数据挖掘方法检测智能合约。第三，研究其他类型的骗局。除了智能庞氏骗局，许多其他骗局都在利用区块链技术。有必要研究这个问题，以促进区块链技术的发展。
- en: '5.4 Case Study: Phishing Scam Detection'
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.4 案例研究：钓鱼骗局检测
- en: 5.4.1 Phishing Scams on Ethereum
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.1 以太坊上的钓鱼骗局
- en: As for cryptocurrencies based on blockchain technology, financial security plays
    the role of a crucial foundation. However, the rapidly increasing fraud in the
    cryptocurrency system undoubtedly hinders the acceptance of users and the further
    application of blockchain technology, thereby hindering the development of blockchain
    technology. Therefore, identifying such scams becomes an important and urgent
    task, which has attracted great attention from researchers (Bartoletti et al.
    [2020](#CR6); Chen et al. [2018b](#CR16)). Among the many scams, phishing scams
    are a new form of online fraud. It was born with the widespread of online business
    (Liu and Ye [2001](#CR45)) and has now been found in the blockchain system. According
    to *Chainalysis*, more than 50% of cybercrime profits have come from phishing
    scams since 2017.^([18](#Fn18)) The phishing scams on Bee Token ICO^([19](#Fn19))
    has played a well-known role in blockchain scams. The scammers defrauded about
    $1 million in this incident in just 25 h. From this point of view, detecting phishing
    scams on the blockchain is an important and urgent challenge.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 至于基于区块链技术的加密货币，金融安全扮演着关键性的基础角色。然而，加密货币系统中欺诈的快速增长无疑阻碍了用户接受度以及区块链技术的进一步应用，从而阻碍了区块链技术的发展。因此，识别此类骗局变得重要且迫切，这已经吸引了研究者的广泛关注（Bartoletti等人[2020](#CR6)；Chen等人[2018b](#CR16)）。在众多骗局中，钓鱼骗局是一种新的在线欺诈形式。它随着在线业务的普及（Liu和Ye[2001](#CR45)）而诞生，现已发现在区块链系统中。根据*Chainalysis*的数据，自2017年以来，超过50%的网络犯罪利润来自于钓鱼骗局。^([18](#Fn18))Bee
    Token ICO上的钓鱼骗局^([19](#Fn19))在区块链骗局中发挥了众所周知的作用。骗子仅在25小时内就骗走了约100万美元。从这个角度来看，基于区块链的钓鱼骗局的检测是一个重要且迫切的挑战。
- en: The traditional phishing frauds usually create a fake official website, and
    then lure users to log in to obtain the user’s private information, such as passwords.
    Therefore, the main approach to deal with traditional phishing fraud is to identify
    fake websites and warn users before logging in. On the other hand, phishing scams
    deployed on the blockchain have shown various new characteristics. Firstly, the
    cryptocurrency possessed by the user becomes the target of the new phishing scams,
    not private information. Under normal circumstances, phishing scammers will use
    a variety of methods to lure users to transfer money to a particular address,
    as happened in the Bee Token ICO incident. Besides, the cryptocurrency obtained
    from the fraud needs to be cashed out to fiat money through exchanges. Finally,
    all transaction records on the public blockchain are transparent and publicly
    accessible, thus providing a new data basis for detecting phishing fraud.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的钓鱼欺诈通常会创建一个假冒的官方网站，然后诱使用户登录以获取用户的私人信息，比如密码。因此，应对传统钓鱼欺诈的主要方法是识别假冒网站并在用户登录前警告他们。另一方面，基于区块链的钓鱼骗局展现出各种新的特征。首先，用户所拥有的加密货币成为新型钓鱼骗局的攻击目标，而非私人信息。在正常情况下，钓鱼骗子会使用各种方法诱使用户将资金转到一个特定地址，正如Bee
    Token ICO事件所发生的那样。此外，从欺诈中获得的加密货币需要通过交易所兑换成法定货币。最后，公共区块链上的所有交易记录都是透明且公开可查的，从而为检测钓鱼欺诈提供了新的数据基础。
- en: Based on these new characteristics of phishing scams on the blockchain, we propose
    a method to identify phishing scams on the blockchain, based on transaction records
    and machine learning technology. Such a method can be integrated into the blockchain
    wallet (i.e., tools for managing accounts and transactions on the blockchain)
    as a warning function to detect latent phishing scams and warn users before conducting
    transactions with unfamiliar accounts. The overall framework of the method is
    shown in Fig. [5.8](#Fig8), and the Ethereum platform is used to demonstrate the
    effectiveness of our method. In general, we first downloaded the transaction records
    on Ethereum from the Ethereum client Parity and then crawled all the phishing
    account information from Etherscan.io. Then we alleviate the problem of class
    imbalance in the machine learning field based on common sense and some machine
    learning methods. On this basis, we established a transaction graph based on transaction
    records and proposed a graph-based cascade feature extraction method. Next, we
    proposed a Dual-sampling Ensemble framework to detect suspect accounts. Finally,
    we compared the proposed method with other methods to demonstrate the effectiveness
    of our method. The performance of this model is evaluated under different parameters
    and the effectiveness of the features is also discussed.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig8_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig8_HTML.png)
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链上钓鱼诈骗的新特点，我们提出了一种基于交易记录和机器学习技术的区块链钓鱼诈骗识别方法。这种方法可以集成到区块链钱包中（即用于管理区块链上账户和交易的工具）作为一个警告功能，以检测潜在的钓鱼诈骗并警告用户在与其他不熟悉账户进行交易之前。该方法的整体框架如图[5.8](#Fig8)所示，以太坊平台用于展示我们方法的有效性。总的来说，我们首先从以太坊客户端Parity下载了以太坊的交易记录，然后从Etherscan.io抓取了所有的钓鱼账户信息。接着，我们基于常识和一些机器学习方法缓解了机器学习领域中的类不平衡问题。在此基础上，我们根据交易记录建立了交易图，并提出了一种基于图的级联特征提取方法。然后，我们提出了一个双重采样集成框架来检测可疑账户。最后，我们将提出的方法与其他方法进行了比较，以证明我们方法的有效性。在不同的参数下评估了该模型的性能，并讨论了特征的有效性。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig8_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig8_HTML.png)
- en: Fig. 5.8
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 5.8
- en: The framework
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 框架
- en: In summary, we make the following major contributions in this section.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 总结起来，我们在本节做出了以下主要贡献。
- en: We propose a systematic approach to detect phishing scams in the blockchain
    ecosystem, and take Ethereum as an example to verify the effectiveness. The approach
    has good performance, which indicates that our method can be embedded into users’
    cryptocurrency wallets to provide users with a financial risk warning function.
    To accelerate the research in this field and promote the healthy development of
    blockchain technology, all relevant data and code will be released after the book
    is published.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提出了一种系统的方法来检测区块链生态系统中的钓鱼诈骗，并以以太坊为例验证了该方法的有效性。该方法表现良好，这表明我们的方法可以嵌入到用户的加密货币钱包中，为用户提供金融风险警告功能。为了加速这一领域的研究并促进区块链技术的健康发展，本书出版后所有相关数据和代码都将公开发布。
- en: We propose a graph-based cascade feature extraction method, which can conveniently
    extract rich transaction structure information and form a feature set with a good
    classification effect. Besides, it is very scalable and hard to evade according
    to the “six-degree separation” theorem.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提出了一种基于图的级联特征提取方法，该方法可以方便地提取丰富的交易结构信息，并形成一个具有良好分类效果的特征集。此外，根据“六度分割”定理，该方法非常可扩展且难以规避。
- en: We propose a new model integration algorithm, namely the Dual-sampling Ensemble
    algorithm, which can be used for classification problems with a high level of
    class imbalance. The evaluation results show the effectiveness of the algorithm.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提出了一种新的模型集成算法，即双重采样集成算法，该算法可用于处理类不平衡的高层次分类问题。评估结果表明了该算法的有效性。
- en: 5.4.2 Background and Related Work
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.2 背景和相关工作
- en: Blockchain technology is a key support technology for cryptocurrencies such
    as Bitcoin.^([20](#Fn20)) A blockchain can be seen as a common ledger maintained
    between peers that do not need to trust each other (Zheng et al. [2017](#CR73)).
    The number of cryptocurrencies held by the user and transactions on the blockchain
    are recorded in this ledger. In this system, users are represented by a pair of
    public-private key pairs. The public key, which plays the role of an account like
    it is in the banking system, is a representation of the user in the blockchain,
    and is often referred to as an address. (In this chapter, we use the term address
    and account interchangeably.) In blockchain systems, transactions are messages
    sending from one account (the initiator’s address) to another (the receiver’s
    address) (Chen et al. [2018b](#CR16)). Typically, the initiator transfers a certain
    amount of cryptocurrency to the recipient. Transactions that occur over a period
    are packaged into blocks by peers and linked to the previous block through cryptography.
    Each block has a corresponding height (denoted as *blockNumber* in this chapter),
    increasing by 1 from 0\. The block height can be viewed as the time when the transaction
    took place. From this point of view, the height of the block can be regarded as
    the time when the transaction occurs, and the transaction on the block with a
    larger height occurs later than the transaction on the block with a smaller height.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术是比特币等加密货币的关键支持技术。^([20](#Fn20))区块链可以被看作是由不需要相互信任的对等方维护的一个公共账本（Zheng et
    al. [2017](#CR73)）。用户持有的加密货币数量和区块链上的交易记录都保存在这个账本中。在这个系统中，用户由一对公钥和私钥对表示。公钥，像在银行系统中一样，扮演着账户的角色，是用户在区块链上的表示，通常被称为地址。（在本章中，我们交替使用术语地址和账户。）在区块链系统中，交易是从一个账户（发起方的地址）发送到另一个账户（接收方的地址）的消息（Chen
    et al. [2018b](#CR16)）。通常，发起方会将一定数量的加密货币转给接收方。在一段时间内发生的交易会被对等方打包成区块，并通过密码学与前一个区块链接起来。每个区块都有一个对应的高度（在本章中表示为*blockNumber*），从0开始递增1。区块的高度可以被看作是交易发生的时间。从这个角度看，区块的高度可以被视为交易发生的时间，区块高度较大的交易发生在区块高度较小的交易之后。
- en: Generally speaking, the Bitcoin system generates a new block in 10 min, while
    the time in Ethereum is about 15 s. Because of its support for smart contracts
    (Wood [2014](#CR70)), Ethereum is known as the second-generation blockchain technology,
    with *Ether* being the cryptocurrency it maintains. A smart contract is an executable
    script stored on the blockchain. Ethereum provides a Turing-complete virtual machine
    (Ethereum Virtual Machine) to support the execution of these scripts. The smart
    contracts are stored on the blockchain in the form of bytecodes. A smart contract
    starts to run when it receives a message call pointing to the contract address
    and terminates when a given condition is met. In fact, Ethereum has become the
    largest blockchain platform that supports smart contracts, and it is also one
    of the main targets for various cyberattacks against the blockchain.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，比特币系统每10分钟生成一个新块，而以太坊的时间大约是15秒。由于其支持智能合约（Wood [2014](#CR70)），以太坊被称为第二代区块链技术，以太币是其维护的加密货币。智能合约是存储在区块链上的可执行脚本。以太坊提供了一个图灵完备的虚拟机（以太坊虚拟机）来支持这些脚本的执行。智能合约以字节码的形式存储在区块链上。当智能合约接收到指向合约地址的消息调用时开始运行，并在给定条件满足时终止。实际上，以太坊已经成为了最大的支持智能合约的区块链平台，也是各种针对区块链的网络攻击的主要目标之一。
- en: In recent years, with the development of blockchain technology, financial security
    in the blockchain ecosystem has received extensive attention, and the identification
    of various fraudulent behaviors has become a research hotspot. In the Bitcoin
    ecosystem, (Vasek and Moore [2015](#CR67)) present the first empirical analysis
    of Bitcoin-based scams. The authors identify 192 scams and point out that at least
    13,000 distinct victims lost more than $11 million. (Vasek and Moore [2018](#CR68))
    analyze the supply and demand for Bitcoin-based Ponzi schemes, while (Bartoletti
    et al. [2018](#CR5)) establish an address identification model for Ponzi scheme
    in the Bitcoin ecosystem. Besides, (Chen et al. [2019a](#CR17)) show that there
    are market manipulation in the Bitcoin exchange Mt. Gox. In the Ethereum ecosystem,
    on the one hand, people are concerned with the identification of various scams,
    for example, smart Ponzi schemes (Bartoletti et al. [2020](#CR6); Chen et al.
    [2018b](#CR16)). On the other hand, since most smart contracts control certain
    digital assets, ensuring that there are no vulnerabilities in the smart contracts
    is an important part of Ethereum’s financial security (Kalra et al. [2018](#CR35)).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，随着区块链技术的发展，区块链生态系统中的金融安全受到了广泛关注，各种欺诈行为的识别已成为研究热点。在比特币生态系统中，（Vasek和Moore[2015](#CR67)）展示了基于比特币的诈骗行为的首次实证分析。作者确定了192起诈骗行为，并指出至少有13,000名不同的受害者损失了超过1100万美元。（Vasek和Moore[2018](#CR68)）分析了基于比特币的庞氏骗局的供需情况，而（Bartoletti等人[2018](#CR5)）为比特币生态系统中的庞氏骗局建立了一个地址识别模型。此外，（Chen等人[2019a](#CR17)）显示了在比特币交易所Mt.
    Gox中存在市场操纵行为。在以太坊生态系统中，一方面，人们关注各种诈骗行为的识别，例如，智能庞氏骗局（Bartoletti等人[2020](#CR6)；Chen等人[2018b](#CR16)）。另一方面，由于大多数智能合约控制着某些数字资产，确保智能合约中没有漏洞是以太坊金融安全的重要部分（Kalra等人[2018](#CR35)）。
- en: Phishing detection has been extensively studied in the past decades and many
    methods have been proposed (Abdelhamid et al. [2014](#CR1); Khonji et al. [2013](#CR38);
    Zouina and Outtaj [2017](#CR74)). However, there is seldom research on phishing
    fraud identification considering the characteristics of blockchain. Andryukhin
    ([2019](#CR3)) classifies the main types and schemes of phishing attacks on the
    blockchain project and suggests methods of protection against phishing attacks
    from the blockchain project side’s perspective. Unlike them, we are targeting
    the entire blockchain ecosystem and providing users with an early warning against
    phishing scams.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 诈骗检测在过去几十年中得到了广泛研究，并提出了许多方法（Abdelhamid等人[2014](#CR1)；Khonji等人[2013](#CR38)；Zouina和Outtaj[2017](#CR74)）。然而，很少有研究关注考虑区块链特点的诈骗欺诈识别。Andryukhin([2019](#CR3))对针对区块链项目的诈骗攻击的主要类型和方案进行了分类，并从区块链项目侧的角度提出了防范诈骗攻击的方法。与它们不同，我们关注整个区块链生态系统，并向用户提供关于诈骗诈骗的预警。
- en: 5.4.3 Proposed Method
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.3 提出的方法
- en: 'Identifying phishing accounts in the blockchain system faces two challenges:
    (1) we only have transaction records and know little about account functions and
    holder information; and (2) the number of phishing addresses is very few and other
    addresses are huge, identifying such a small group of accounts in the huge account
    set is like looking for a needle in the haystack. (The details of the data are
    described in Sect. [5.4.4](#Sec29).) To meet the challenges, the proposed method
    includes two parts, the cascade feature extraction method and the LightGBM-based
    Dual-sampling Ensemble algorithm.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链系统中识别诈骗账户面临两大挑战：（1）我们仅有的交易记录，对账户功能和持有者信息知之甚少；（2）诈骗地址的数量非常少，其他地址则众多，在庞大的账户集合中识别这样一个小型账户群体，就像是海底捞针。（数据细节在章节[5.4.4](#Sec29)中有描述。）为了应对这些挑战，提出的方法包括两部分，即级联特征提取方法和基于LightGBM的双采样集成算法。
- en: 5.4.3.1 Cascade Feature Extraction Method
  id: totrans-199
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.3.1 级联特征提取方法
- en: 'Since transaction records are the only information we can use, and they give
    the accounts a natural graphical structure, to extract effective features, we
    first construct a transaction graph (TG) based on these transaction records. Specifically,
    *TG* = (*V*, *E*), where *V* is a set of nodes (all the addresses in the dataset)
    and *E* = {(*v* [*i*], *v* [*j*])|*v* [*i*], *v* [*j*] ∈ *V* } is a set of ordered
    edges. Each edge indicates that an address *V* [*i*] transfers a certain amount
    of Ether to another address *V* [*j*]. Each edge has two attributes: *blockNumber*
    and *amount*, representing the time when this edge emerges and the amount of the
    transaction. Please note that there may be multiple edges between two nodes in
    TG, depending on the number of transactions between the two related accounts.
    (We use account, address, and node interchangeably in the following.) Next, we
    introduce the proposed feature extraction method.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 由于交易记录是我们可以使用的唯一信息，而且它们给账户一个自然的图形结构，为了提取有效的特征，我们首先根据这些交易记录构建一个交易图（TG）。具体来说，*TG*=（*V*,
    *E*），其中*V*是一组节点（数据集中的所有地址）和*E*={(*v* [*i*], *v* [*j*])|*v* [*i*], *v* [*j*]∈*V*}是一组有序边。每条边表示一个地址*V*
    [*i*]向另一个地址*V* [*j*]转移了一定数量的以太币。每条边有两个属性：*blockNumber*和*amount*，分别表示这条边出现的时间和交易的金额。请注意，在TG中，两个节点之间可能有多条边，这取决于两个相关账户之间的交易次数。（在以下内容中，我们交替使用账户、地址和节点。）接下来，我们介绍所提出的特征提取方法。
- en: Graph-based features have proven to be very effective in many identification
    problems (Chatzakou et al. [2017](#CR11); Ramalingam and Chinnaiah [2018](#CR59)).
    Thus, we propose a TG-based *cascade feature extraction* method for phishing account
    identification. The idea is as follows. Treat the transaction between accounts
    as a *friend* relationship, to judge the category of an account, we can use not
    only the information of the account, but also the information of its friends,
    even the information of its friends’ friends, and so on. To explain more clearly,
    we first define several keywords related to a node.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 基于图的特征在许多识别问题中已被证明非常有效（Chatzakou等人[2017](#CR11)；Ramalingam和Chinnaiah[2018](#CR59)）。因此，我们提出了一种基于TG的*级联特征提取*方法用于识别诈骗账户。这个想法如下。将账户之间的交易视为一种*朋友*关系，要判断一个账户的类别，我们可以使用不仅仅是该账户的信息，还可以使用其朋友的信息，甚至是其朋友的朋友的信息，等等。为了更清楚地解释，我们首先定义与节点相关的几个关键词。
- en: '*Node data*: Node data is the transaction history of that node. Each transaction
    contains information about the time, direction, and amount of the transaction.
    The transaction time is denoted as *blockNumber*, which is an increasing integer.
    A transaction has two directions: *out* and *in*. The out-transactions of an account
    transfer Ether from the account to other accounts and the in-transactions of an
    account receive Ether from other accounts.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点数据：节点数据是该节点的交易历史。每笔交易包含关于交易时间、方向和金额的信息。交易时间用*blockNumber*表示，这是一个递增的整数。交易有两个方向：*出*和*入*。账户的出交易将以太币从账户转移到其他账户，账户的入交易从其他账户接收以太币。
- en: '*Node features*: Node features are all kinds of information extracted from
    node data. In this chapter, we extract information through various statistical
    methods.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点特征：节点特征是从节点数据中提取的各种信息。在本章中，我们通过各种统计方法提取信息。
- en: '*N-order friend*: A node’s 1-order friend is a node directly connected to the
    node (i.e., there are transactions between them). A node’s n-order friend is a
    node connected to the node with at least n-1 nodes.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N阶朋友*：节点的1阶朋友是与节点直接相连的节点（即它们之间有交易）。节点的N阶朋友是通过至少N-1个节点与节点相连的节点。'
- en: '*N-order features*: The 0-order features of a node is the node features of
    that node. The n-order features are extracted in cascade from the n-order friends.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N阶特征*：节点的0阶特征是该节点的特征。N阶特征是从N阶朋友那里级联提取的。'
- en: To explain how to achieve cascade feature extraction, we show the procedure
    of 2-order features extraction in Fig. [5.9](#Fig9). Suppose we need to compute
    the 2-order features of node *A*, which have 1-order friends *B, C* and 2-order
    friends *D, E, F, G, H*. In the figure, each undirected edge represents one or
    more transactions (regardless of the directions) between two nodes, and the counterparty
    of the 2-order friends is not shown. The procedure is divided into three stages.
    In the first stage, we compute a statistic (i.e., the gray rectangle) for each
    2-order friends by using its node data (i.e., the transaction history). The second
    stage needs to calculate a statistic for each 1-order friend by using the statistics
    computed in the first stage (not the node data of the 1-order friend). Similarly,
    in the last stage, we still calculate a statistic whose input comes from the second
    stage. This approach is very scalable. In fact, by increasing the order and using
    different statistic methods at different stages, we can extract rich information
    about how a node interacts with the entire network. It should be noted that the
    approach we describe here does not take into account the direction of the transaction.
    But, for phishing accounts, in-transactions and out-transactions are significantly
    different in meaning. Therefore, in this chapter, we extract features for two
    different directions respectively.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig9_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig9_HTML.png)
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明如何实现级联特征提取，我们在图5.9中展示了二阶特征提取的过程[5.9](#Fig9)。假设我们需要计算节点*A*的二阶特征，它有1阶朋友*B,
    C*和2阶朋友*D, E, F, G, H*。在图中，每一条无向边代表两个节点之间的一项或多项交易（无论方向如何），2阶朋友的交易对手方未显示。该过程分为三个阶段。在第一阶段，我们通过使用其节点数据（即交易历史）为每个2阶朋友计算一个统计量（即灰色矩形）。第二阶段需要通过使用第一阶段计算的统计量（而不是1阶朋友的节点数据）为每个1阶朋友计算一个统计量。同样，在最后阶段，我们仍然计算一个输入来自第二阶段的统计量。这种方法非常可扩展。事实上，通过增加阶数并在不同阶段使用不同的统计方法，我们可以提取关于节点如何与整个网络交互的丰富信息。需要注意的是，这里描述的方法没有考虑交易的*方向*。但是，对于钓鱼账户，入交易和出交易的意义有显著不同。因此，在本章中，我们分别提取两个不同方向的特征。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig9_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig9_HTML.png)
- en: Fig. 5.9
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 5.9
- en: Example of 2-order feature extraction procedure
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 二阶特征提取过程示例
- en: 'The node features are statistics of its node data. There are two *types* of
    data: transaction amount and transaction times (i.e., *block*Number). In order
    to distinguish the nature of the transaction, statistics are made in different
    *directions* (i.e., *out*-transactions or *in*-transactions). For convenience,
    we name these features as *direction_type_method*. For example, a feature *in_block_std*
    of a node indicates the standard deviation (i.e., the method *sd*) for the transaction
    time (i.e., the type of data *block*) of all in-transactions (i.e., the transaction
    direction *in*). For the transaction time, we compute only the transaction time
    span (denoted as *ptp*) and its standard deviation (denoted as *sd*). For the
    transaction amount, we calculated the sum, the maximum, the minimum, the mean,
    and the standard deviation (i.e., *sd*). In addition, there are statistics unrelated
    to transaction amount: *count*, *unique*, and *unique_ratio*. They represent the
    number of transactions (i.e., *count*), the number of counterparties (i.e., *unique*),
    and the ratio of the two (i.e., *unique*∕*count*). By doing so, we obtained 19
    features (i.e., 2 × 1 × (2 + 5 + 2) + 1).'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 节点特征是节点数据的统计量。数据有两种*类型*：交易金额和交易次数（即*区块*编号）。为了区分交易性质，统计在不同*方向*进行（即*出*交易或*入*交易）。为了方便，我们将这些特征命名为*方向_类型_方法*。例如，一个节点的特征*in_block_std*表示所有入交易（即交易方向*入*）的交易时间（即数据*区块*）的标准差（即方法*sd*）。对于交易时间，我们计算的只是交易时间差（表示为*ptp*）及其标准差（表示为*sd*）。对于交易金额，我们计算了总和、最大值、最小值、平均值和标准差（即*sd*）。此外，还有与交易金额无关的统计量：*计数*、*唯一*和*唯一比率*。它们分别表示交易次数（即*计数*）、交易对手方数（即*唯一*）和两者的比率（即*唯一*∕*计数*）。通过这样做，我们得到了19个特征（即2×1×（2+5+2）+1）。
- en: 'For simplicity, in this study, we extract only 1-order network features. As
    mentioned, the direction of the transaction is important in identifying phishing
    scams. Thus, considering the transaction direction, the 1-order friends of a node
    can be divided into *from* friends and *to* friends. In simple terms, when there
    is a transfer transaction from node *A* to node *B*, we call node *B* a *from*
    friend of node *A* and node *A* a *to* friend of node *B*. Specifically, the 1-order
    network features are named as *friend_direction_statistic2_statistic1*. For example,
    the *from_in_mean_max* feature is calculated as follows: we first compute the
    maximum (i.e., *max*) of the *in*-transaction amounts for each *from* friend.
    Then, we compute the *mean* of all statistics in the previous stage. Similarly,
    to compute *to_out_std_sum*, we first compute the *sum* of all the *out*-transaction
    amounts for each *to* friend. Then, we compute the standard deviation (i.e., *sd*)
    of all statistics in the previous stage. By doing so, we can obtain 200 features
    (i.e., 2 × 2 × 2 × 5 × 5). Please note that we did not take time into account
    in the 1-order network feature extraction.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化，在本研究中，我们只提取了一阶网络特征。如前所述，交易方向在识别钓鱼骗局中很重要。因此，考虑到交易方向，节点的 一阶朋友可以分为*from*朋友和*to*朋友。简单地说，当节点*A*向节点*B*发生转账交易时，我们称节点*B*为节点*A*的*from*朋友，节点*A*为节点*B*的*to*朋友。具体来说，一阶网络特征被命名为*friend_direction_statistic2_statistic1*。例如，*from_in_mean_max*特征的计算如下：首先，我们计算每个*from*朋友的*in*交易额的最大值（即*max*）。然后，我们计算前阶段所有统计量的平均值。同样，为了计算*to_out_std_sum*，我们首先计算每个*to*朋友的*out*交易额的总和。然后，我们计算前阶段所有统计量的标准差（即*sd*）。这样做，我们可以得到200个特征（即2×2×2×5×5）。请注意，我们在一阶网络特征提取中没有考虑时间。
- en: 5.4.3.2 Dual-Sampling Ensemble Method
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.3.2 双重采样集成方法
- en: Identifying phishing scams is essentially establishing a classification model
    of addresses. But the phishing account identification faces a class imbalance
    problem. To build a useful suspect identification model, we propose a Dual-sampling
    Ensemble method, an identification framework integrated with many base models
    trained by sampling examples and features.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 识别钓鱼骗局本质上是建立一个地址分类模型。但钓鱼账户识别面临一个类别不平衡问题。为了建立一个有用的嫌疑人识别模型，我们提出了一种双重采样集成方法，一个集成了许多通过采样示例和特征训练的基础模型的识别框架。
- en: The base models play a central role in the identification framework. Many mature
    classification algorithms can be used as base models, such as logistic regression
    (LR), support vector machine (SVM), and decision tree (DT). Among these models,
    the gradient boosting decision tree (GBDT) obtained good results in many problems.
    There are several different variants of GBDT, including XGBoost (Chen and Guestrin
    [2016b](#CR13)) and LightGBM (Ke et al. [2017](#CR36)), which are widely used
    and generally accepted. In the phishing detection problem, we found that LightGBM
    is more efficient, thus we select it as our base model.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 基础模型在识别框架中扮演着中心角色。许多成熟的多类分类算法可以用作基础模型，如逻辑回归（LR）、支持向量机（SVM）和决策树（DT）。在这些模型中，梯度提升决策树（GBDT）在许多问题中取得了良好的结果。GBDT有几种不同的变体，包括XGBoost（Chen和Guestrin[2016b](#CR13)）和LightGBM（Ke等人[2017](#CR36)），这些方法被广泛使用并普遍认可。在钓鱼检测问题中，我们发现LightGBM更有效，因此我们将其选为我们的基础模型。
- en: Given the supervised training set *X* = {(*x* [*i*], *y* [*i*]), *i* = 1, 2,
    ⋯ , *n*}, LightGBM integrates a number of K regression trees ![
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 给定监督训练集*X*= {(*x* [*i*], *y* [*i*]), *i* = 1, 2, ⋯, *n*}，LightGBM整合了许多K回归树！[
- en: $$f(x)=\frac {1}{K}\sum _{i=1}^Th_i(x) $$
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 公式：$$f(x)=\frac {1}{K}\sum _{i=1}^Th_i(x) $$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq2.png) to approximate
    a certain function *f* ^∗(*x*) that minimizes the expected value of a specific
    loss function *L*(*y*, *f*(*x*)). In each iteration of GBDT, assume that the strong
    learner obtained by the previous iteration is *h* [*t*−1](*x*), the loss function
    is *L*(*f*(*x*), *h* [*t*−1](*x*)), then the aim for the current iteration is
    to find a week learner using CART regression tree model which is denoted as *h*
    [*t*](*x*), to minimize the formula *L*(*f*(*x*), *h* [*t*−1](*x*) + *h* [*t*](*x*)).
    Suppose in iteration *t*, the negative gradient for sample *i* can be represented
    as !['
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq2.png) 以最小化特定损失函数*L*(*y*,
    *f*(*x*)的期望值来逼近某个函数*f* ^∗(*x*)。在GBDT的每次迭代中，假设前一次迭代获得的强学习者是*h* [*t*−1](*x*)，损失函数是*L*(*f*(*x*),
    *h* [*t*−1](*x*)），那么当前迭代的目标是找到一个使用CART回归树模型的弱学习者，表示为*h* [*t*](*x*)，以最小化公式*L*(*f*(*x*),
    *h* [*t*−1](*x*) + *h* [*t*](*x*))。假设在迭代*t*中，样本*i*的负梯度可以表示为!['
- en: $$r_{ti}=\frac {\partial L(y_i,h_{t-1}(x_i))}{\partial h_{t-1}(x_i)}.$$
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: $$r_{ti}=\frac {\partial L(y_i,h_{t-1}(x_i))}{\partial h_{t-1}(x_i)}.$$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq3.png) By using
    the Log-likelihood loss as loss function*L*(*y*, *h*(*x*)) = *log*(1 + *exp*(−*yh*(*x*))),
    where *y* ∈ [−1, 1], we can simplify the negative gradient of sample as below:!['
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_IEq3.png) 使用对数似然损失作为损失函数*L*(*y*,
    *h*(*x*))=*log*(1+*exp*(−*yh*(*x*)))，其中*y*∈[−1, 1]，我们可以简化样本的负梯度如下：!['
- en: $$\displaystyle \begin{aligned}r_{ti}=-\frac{\partial L(y_i,h_{t-1}(x_i))}{\partial
    h_{t-1}(x_i)}=\frac{y_i}{1+exp(y_ih(x_i))},\end{aligned}$$
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: $$\displaystyle \begin{aligned}r_{ti}=-\frac{\partial L(y_i,h_{t-1}(x_i))}{\partial
    h_{t-1}(x_i)}=\frac{y_i}{1+exp(y_ih(x_i))},\end{aligned}$$
- en: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equb.png)'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '](../images/506524_1_En_5_Chapter/506524_1_En_5_Chapter_TeX_Equb.png)'
- en: where *i* = 1, 2, ⋯ , *m*.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*i*=1,2,⋯,*m*.
- en: By using the formula, LightGBM chooses to remove these small gradient samples
    from the training set to make the model pay more attention to those samples which
    cause great loss. This technique is called Gradient-based One-Side Sampling (GOSS)
    (Ke et al. [2017](#CR36)). When constructing the CART regression tree, LightGBM
    binds the mutual exclusion features so that the number of features (the leaves)
    can be greatly reduced.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用该公式，LightGBM选择将这些小的梯度样本从训练集中移除，以使模型更加关注那些造成巨大损失的样本。这项技术被称为基于梯度的单侧采样（GOSS）（Ke等人[2017](#CR36)）。在构建CART回归树时，LightGBM绑定互斥特征，从而大大减少特征（叶子）的数量。
- en: Inspired by *EasyEnsemble* (Liu et al. [2008](#CR46)), we propose a Dual-sampling
    Ensemble algorithm to solve the class imbalance problem in the phishing scam identification.
    The pseudocode is shown in Algorithm [5.1](#FPar2).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 受到*EasyEnsemble*（Liu等人[2008](#CR46)）的启发，我们提出了一种双采样集成算法来解决钓鱼诈骗识别中的类别不平衡问题。伪代码显示在算法[5.1](#FPar2)中。
- en: Algorithm 5.1 The Dual-sampling Ensemble algorithm![../images/506524_1_En_5_Chapter/506524_1_En_5_Figd_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figd_HTML.png)
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 算法5.1 双采样集成算法![../images/506524_1_En_5_Chapter/506524_1_En_5_Figd_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figd_HTML.png)
- en: The idea behind the Dual-sampling Ensemble is simple. Similar to *EasyEnsemble*
    (Liu et al. [2008](#CR46)), we reduce the class imbalance by sampling the majority
    example set (i.e., negative examples). The difference is that we also sample the
    features of the examples in the training set since we can obtain a large number
    of features by using the cascade feature extraction method. This dual-sampling
    method allows the base models to have better heterogeneity.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 双采样集成的背后想法很简单。与*EasyEnsemble*（Liu等人[2008](#CR46)）类似，我们通过采样多数样本来减少类别不平衡（即负样例）。不同的是，由于我们使用级联特征提取方法可以获得大量的特征，所以我们还采样训练集中的样本特征。这种双采样方法使得基础模型具有更好的异质性。
- en: 5.4.4 Data Collection and Preparation
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.4 数据收集与准备
- en: 5.4.4.1 Data Collection
  id: totrans-227
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.4.1 数据收集
- en: We launch an Ethereum client, Parity,^([21](#Fn21)) on our server to download
    the ledger of Ethereum. By using Parity, we obtained all the Ethereum blocks before
    January 3, 2019 (to be exact, from block height 0 to block height 7,000,000).
    By analyzing the transactions obtained, we get 43,783,194 accounts, among which
    1,564,580 accounts controlled by smart contracts.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在服务器上启动以太坊客户端Parity，^([21](#Fn21))以下载以太坊的账本。使用Parity，我们获得了2019年1月3日之前的所有以太坊区块（确切地说，从区块高度0到区块高度7,000,000）。通过分析获得的交易，我们得到43,783,194个账户，其中1,564,580个账户由智能合约控制。
- en: One of the most important tasks in establishing a phishing scam identification
    model is to find enough phishing account examples. Fortunately, etherscan.io provides
    several tags for Ethereum addresses, and by crawling the website, we obtain all
    the addresses labeled with Phishing.^([22](#Fn22)) These addresses are used in
    some verified phishing scams. In this way, we obtain 1,683 phishing addresses.
    We call these phishing addresses as *positive* examples and the rest as *negative*
    examples.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 建立钓鱼诈骗识别模型最重要的任务之一是找到足够的钓鱼账户示例。幸运的是，ethereumscan.io为以太坊地址提供了几个标签，通过爬取该网站，我们获得了所有被标记为Phishing的地址。（^([22](#Fn22))这些地址被用于一些已验证的钓鱼诈骗中。这样，我们获得了1683个钓鱼地址。我们将这些钓鱼地址称为*正*例，其余的称为*负*例。
- en: 5.4.4.2 Data Cleaning
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.4.2 数据清洗
- en: After getting all the data, we found that the class was very imbalanced. The
    class imbalance ratio, i.e., the ratio of the size of the majority class (negative
    examples) to minority class (positive examples), exceeds 26,000\. Given that some
    addresses are not phishing addresses, we recommend that some obvious negative
    examples (i.e., non-phishing addresses) be eliminated before model training in
    order to build a more effective model. To this end, we (1) filter transaction
    records involving a smart contract address, (2) eliminate addresses with less
    than 10 or more than 1000 transaction records, and (3) ignore all transactions
    that appear before block height 2 million.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 获取所有数据后，我们发现类非常不平衡。类不平衡率，即多数类（负例）的大小与少数类（正例）的比例，超过了26000。考虑到一些地址不是钓鱼地址，我们建议在模型训练之前删除一些明显的负例（即非钓鱼地址），以建立更有效的模型。为此，我们（1）过滤涉及智能合约地址的交易记录，（2）删除交易记录少于10条或多于1000条的地址，（3）忽略所有在区块高度200万之前的交易。
- en: The above selection method is based on the following facts. First of all, smart
    contracts are usually composed of complex logical structures, so they are not
    very suitable for phishing fraud. According to the data collected, smart contracts
    account for only a small percentage (i.e., 2.6%) of phishing addresses, and these
    accounts are usually related to tokens. Therefore, in this preliminary study,
    we removed the smart contract for simplicity. Second, we expect to learn the transaction
    behavior characteristics of phishing addresses in this research. Under this consideration,
    addresses with too few transaction records are not conducive to our study. On
    the other hand, an address with an excessive number of transactions usually means
    that the account is a cryptocurrency wallet or other type of account. In fact,
    there are more than 70% of accounts which have more than 1000 transaction records,
    but only one account is labeled as a phishing address. Finally, we found that
    all the phishing addresses were active after August 2, 2016\. According to the
    analysis of initial activity time, the possible reason for this phenomenon is
    that in the early stage of Ethereum, there were relatively few phishing scams,
    and even fewer phishing scams were recorded during that period. Therefore, we
    proposed to build the model based on records after block height of 2 million (i.e.,
    2016-08-02). These filtering rules allow the model to focus on learning the characteristics
    of phishing scams.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 上述选择方法基于以下事实。首先，智能合约通常由复杂的逻辑结构组成，因此它们并不非常适合钓鱼欺诈。根据收集的数据，智能合约只占钓鱼地址的一小部分（即2.6%），这些地址通常与代币有关。因此，在这个初步研究中，我们为了简化问题移除了智能合约。其次，我们期望在这个研究中学习钓鱼地址的交易行为特征。在这种考虑下，交易记录太少的地址不利于我们的研究。另一方面，交易记录过多的地址通常意味着该账户是加密货币钱包或其他类型的账户。实际上，超过70%的账户有超过1000条交易记录，但只有一个账户被标记为钓鱼地址。最后，我们发现所有钓鱼地址在2016年8月2日之后都变得活跃。根据初始活动时间的分析，这种现象的可能原因是，在以太坊的早期阶段，钓鱼诈骗相对较少，甚至在那段时间内记录的钓鱼诈骗也较少。因此，我们建议基于200万区块高度（即2016年8月2日）之后的记录建立模型。这些过滤规则使模型能够专注于学习钓鱼诈骗的特征。
- en: 5.4.5 Experiment Result and Analysis
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.5 实验结果与分析
- en: 5.4.5.1 Experiment Settings
  id: totrans-234
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.5.1 实验设置
- en: 'We downloaded all of Ethereum’s transaction data from its inception to January
    3, 2019 (i.e., from block height 0 to block height 7,000,000). By using the filter
    rules in Sect. [5.4.4.2](#Sec31), we ended up with 7,795,044 transaction records.
    There are 534,820 addresses, 323 of which are phishing addresses. The following
    experiments are based on this data set. In order to reflect the effectiveness
    of the model more accurately and avoid the contingency caused by the partitioning
    of train and test sets, the experiment adopts the evaluation method of k-fold
    cross-validation. Specifically, we set the parameter k=5\. To accurately evaluate
    the model, we select four metrics: precision, recall, F1, and AUC, which is commonly
    used in classification problems.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从以太坊创立之初到2019年1月3日下载了所有的交易数据（即从区块高度0到区块高度7,000,000）。通过使用第[5.4.4.2](#Sec31)节中的筛选规则，我们最终得到了7,795,044条交易记录。共有534,820个地址，其中323个是钓鱼地址。以下实验基于此数据集进行。为了更准确地反映模型的有效性，避免训练集和测试集划分引起的变化，实验采用了k折交叉验证的评估方法。具体来说，我们设置参数k=5。为了准确评估模型，我们选择了四个指标：精确度、召回率、F1分数和AUC值，这些指标在分类问题中常用。
- en: 5.4.5.2 Method Comparison
  id: totrans-236
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.5.2 方法比较
- en: In order to verify that our proposed model is more suitable for this problem,
    we compared the single-model LightGBM, Support Vector Machine (SVM), decision
    tree (DT), and their Dual-sampling Ensemble (DE+) models. SVM and DT are considered
    efficient in many classification problems of class imbalance (Chen et al. [2019b](#CR18)).
    Thus, we chose it as the baseline of our model. To compare the performance of
    these methods, we set the feature sampling rate to 70%, and the number of base
    models to 1600 (i.e., balance ensemble). Table [5.4](#Tab4) shows the results.
    As can be seen, in these single-models, SVM performs poorly, LightGBM and DT have
    certain performance, but they are obviously of no practical value. On the contrary,
    after adopting the ensemble strategy, the performance of each model is significantly
    improved, especially LightGBM and DT (i.e., DElightGBM and DEDT). This result
    shows that the ensemble method is a good choice when facing the class imbalance.
    It is worth noting that the proposed model (i.e., DElightGBM) performs well on
    all metrics (i.e., all larger than 0.8). It means that the proposed model can
    be deployed in a real wallet for real-time warnings.Table 5.4
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证我们提出的模型更适合这个问题，我们将单模型LightGBM、支持向量机（SVM）、决策树（DT）及其双重采样集成（DE+）模型进行了比较。SVM和DT在许多分类不平衡问题中被认为是有效的（Chen等人[2019b](#CR18)）。因此，我们将其作为我们模型的基线。为了比较这些方法的表现，我们将特征采样率设置为70%，基础模型数量设置为1600（即平衡集成）。表[5.4](#Tab4)
    显示了结果。可以看出，在这些单模型中，SVM表现较差，LightGBM和DT有一定的表现，但显然没有实际价值。相反，采用集成策略后，每个模型的性能都显著提高，尤其是LightGBM和DT（即DElightGBM和DEDT）。这表明在面对不平衡分类问题时，集成方法是一个很好的选择。值得注意的是，提出的模型（即DElightGBM）在所有指标上表现都很好（即所有指标都大于0.8）。这意味着提出的模型可以部署在真实钱包中进行实时预警。表5.4
- en: The performance comparison
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 性能比较
- en: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Figa_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figa_HTML.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Figa_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figa_HTML.png)'
- en: The bold values give the best performance for each metric
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体值给出了每个指标的最佳性能
- en: 5.4.5.3 Example Sampling Effect Analysis
  id: totrans-241
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.5.3 示例采样效应分析
- en: Evaluating the impact of example sampling on the model is essentially selecting
    the number of base models. Table [5.5](#Tab5) shows the four evaluation metrics
    of the framework DElightGBM with different numbers of base models. (We set the
    feature sampling rate to 70%, and the parameters of each model are randomly selected
    around the optimal parameters.) It can be seen that with the increase in the number
    of base models, all the metrics obtained different degrees of promotion. When
    the number of base models reaches 800 (i.e., half balance ensemble), three metrics
    (i.e., *precision*, *F1*, and *AUC*) reach the maximum. However, the *recall*
    keeps going up, and it reaches its maximum when the number of base models is 1600
    (i.e., balance ensemble). This result indicates that the level of class imbalance
    is a very important factor affecting the performance of base models. From the
    experimental results, half balance ensemble seems to be a good choice. To make
    the model more practical, however, we would prefer to find all potential phishing
    scams (i.e., higher *recall*) at the expense of precision. Therefore, we propose
    the use of the balance ensemble for phishing scam detection.Table 5.5
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 评估示例抽样对模型影响本质上是在选择基本模型的数量。表[5.5](#Tab5)展示了不同基本模型数量下DElightGBM框架的四个评估指标。（我们将特征抽样率设为70%，每个模型的参数围绕最优参数随机选择。）可以看出，随着基本模型数量的增加，所有指标都不同程度地得到了提升。当基本模型数量达到800（即半平衡集成）时，三个指标（即*精确度*、*F1分数*和*ROC
    AUC*)达到最大。然而，*召回率*持续上升，当基本模型数量为1600（即平衡集成）时达到最大值。这一结果表明，类不平衡程度是影响基本模型性能的一个非常重要的因素。从实验结果来看，半平衡集成似乎是一个不错的选择。然而，为了使模型更具实用性，我们更愿意以精确度为代价找到所有潜在的钓鱼骗局（即更高的*召回率*）。因此，我们提出使用平衡集成进行钓鱼骗局检测。表5.5
- en: The effect of example sampling (with LightGBM)
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 示例抽样效果（使用LightGBM）
- en: '| #models | Precision | Recall | F1 | AUC |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| #模型 | 精确度 | 召回率 | F1分数 | ROC AUC |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 1 | 0.0789 | 0.0991 | 0.0879 | 0.549 |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.0789 | 0.0991 | 0.0879 | 0.549 |'
- en: '| 100 | 0.7583 | 0.3993 | 0.5232 | 0.6947 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| 100 | 0.7583 | 0.3993 | 0.5232 | 0.6947 |'
- en: '| 800 | **0**.**9288** | 0.7368 | **0**.**8217** | **0**.**8274** |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| 800 | **0.**9288** | 0.7368 | **0.**8217** | **0.**8274** |'
- en: '| 1000 | 0.826 | 0.7585 | 0.7908 | 0.8206 |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| 1000 | 0.826 | 0.7585 | 0.7908 | 0.8206 |'
- en: '| 1600 | 0.8196 | **0**.**805** | 0.805 | 0.8097 |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| 1600 | 0.8196 | **0.**805** | 0.805 | 0.8097 |'
- en: The bold values give the best performance for each metric
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体值给出了每个指标的最佳性能
- en: 5.4.5.4 Feature Sampling Evaluation
  id: totrans-252
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.5.4 特征抽样评估
- en: Next, we analyze the effect of feature sampling by setting different sampling
    ratios. To eliminate the effect of the number of base models, it is uniformly
    set at 1600\. Table [5.6](#Tab6) shows the evaluation results. In general, the
    feature sampling method has a certain influence on the final results; however,
    as compared with example sampling, its influence is far less significant. From
    the perspective of the most preferred metric, *recall*, 0.8 is the best feature
    sampling ratio. Compared to using all the features (i.e., ratio=1), *recall* improved
    4.24%.Table 5.6
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过设置不同的抽样比例来分析特征抽样的效果。为了消除基本模型数量的影响，统一设置为1600\。表[5.6](#Tab6)展示了评估结果。总的来说，特征抽样方法对最终结果有一定的影响；然而，与示例抽样相比，其影响要小得多。从最偏爱的指标，即*召回率*的角度来看，0.8是最佳的特征抽样比例。与使用所有特征（即比例=1）相比，*召回率*提高了4.24%。表5.6
- en: The effect of feature sampling
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 特征抽样效果
- en: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Figb_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figb_HTML.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![../images/506524_1_En_5_Chapter/506524_1_En_5_Figb_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Figb_HTML.png)'
- en: The bold values give the best performance for each metric
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体值给出了每个指标的最佳性能
- en: These results reveal a noteworthy phenomenon. It is not necessarily correct
    that the more features the model has, the better the performance. On the contrary,
    in the case that we can obtain a large number of features, a certain degree of
    feature sampling is conducive to obtaining a better model. This may be because
    feature sampling can make different base models view the object from different
    angles, so as to obtain better identification.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果揭示了一个值得注意的现象。模型的性能并不一定随着特征数量的增加而更好。相反，在我们可以获得大量特征的情况下，一定程度的特征抽样有助于获得更好的模型。这可能是因为特征抽样可以使不同的基本模型从不同的角度看待对象，从而获得更好的识别。
- en: 5.4.5.5 Feature Analysis
  id: totrans-258
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.4.5.5 特征分析
- en: Since we adopted the method of cascading feature extraction, a large number
    of features were obtained. Figure [5.10](#Fig10) shows the top 15 important features
    in the model. Next, we analyze why some of these features are important.![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig10_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig10_HTML.png)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我们采用了级联特征提取法，获得了大量特征。图[5.10](#Fig10)展示了模型中最重要的15个特征。接下来，我们分析这些特征为何重要。![../images/506524_1_En_5_Chapter/506524_1_En_5_Fig10_HTML.png](../images/506524_1_En_5_Chapter/506524_1_En_5_Fig10_HTML.png)
- en: Fig. 5.10
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 5.10
- en: The top 15 important features
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的15个特征
- en: '*in_block_std* is the standard deviation of *blockNumber* of all *in* transaction
    for a node. This feature reflects the intensity of in-transactions at a certain
    address. If there are a large number of in-transactions in a short period, the
    *blockNumber* of these transactions will be very close to each other, and thus
    the constructed *to_block_std* will be very small. This feature is much more important
    than the others, and its meaning is easy to understand. For a phishing address,
    a natural phenomenon is that the number of in-transactions increased suddenly
    within a period after the phishing began. However, with the phishing scam revealed,
    in-transactions become rare, or even non-existent. This leads to in-transactions
    are concentrated in a small period for a phishing address, and the feature can
    grasp this characteristic very well.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`in_block_std` 是节点所有 `in` 交易 `blockNumber` 的标准差。这一特征反映了特定地址入交易的活动强度。如果在短时间内有大量入交易，这些交易的
    `blockNumber` 将非常接近，从而构建的 `to_block_std` 会非常小。这个特征比其他特征重要得多，其意义也容易理解。对于钓鱼地址，一个自然现象是在钓鱼开始后的一段时间内，入交易数量突然增加。然而，随着钓鱼诈骗的揭露，入交易变得稀少，甚至不存在。这导致钓鱼地址的入交易集中在一段较短的时间内，这个特征能很好地抓住这一特点。'
- en: '*to_out_sum_median* is a typical 1-order network feature. It reflects the overall
    situation (i.e., *sum*) of all the *to* friends’ out-transactions. This feature
    is not as intuitive as the previous one and requires some explanation to understand
    its value. First of all, we can think of the median amount of *out* transaction
    of an address as an indicator of its financial strength. This is not difficult
    to understand, because the large median means that at least half of the address’s
    *out* transaction amounts are large, indicating that its financial strength is
    stronger. Second, for phishing addresses, *to* friends are the victims of the
    phishing scam. Thus, for phishing scams, this feature can be seen as an indication
    of the overall financial strength of all its victims.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_out_sum_median` 是一个典型的1阶网络特征。它反映了所有 `to` 朋友出交易的整体情况（即 *sum*）。这个特征不如前面那个特征直观，需要一些解释来理解它的价值。首先，我们可以将一个地址的出交易中位数视为其财务实力的一个指标。这并不难理解，因为较大的中位数意味着至少有半数的地址出交易金额较大，表明其财务实力较强。其次，对于钓鱼地址，`to`
    朋友是钓鱼诈骗的受害者。因此，对于钓鱼诈骗，这个特征可以被视为所有受害者整体财务实力的一个指标。'
- en: '*from_in_sum_min* is also an 1-order network feature. Different from the previous
    feature, this feature reflects the *in* transaction of the node’s *from* friend.
    It is relatively easy to understand why the feature is important. For phishing
    scams, money laundering is an important part before cashing out. Therefore, the
    *from* friend of the phishing address, which is usually the intermediate address
    used for money laundering, must exhibit behavior characteristics different from
    normal addresses. And, this type of features captures the difference effectively.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_in_sum_min` 也是一个1阶网络特征。与之前的特征不同，这个特征反映了节点的 `from` 朋友的 `in` 交易。理解这个特征为什么重要相对容易。对于钓鱼诈骗，洗钱是提现前的一个重要环节。因此，钓鱼地址的
    `from` 朋友，通常用于洗钱的代理地址，必须表现出与正常地址不同的行为特征。而这种特征有效地捕捉到了这种差异。'
- en: The above analysis of the top three features shows that our feature engineering
    achieves good results, fully mining the characteristics of the node itself and
    different neighbors of the node.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 对前三项重要特征的分析表明，我们的特征工程取得了良好的效果，充分挖掘了节点本身及其不同邻居的特征。
- en: 5.4.6 Conclusion and Future Work
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.4.6 结论与未来工作
- en: In blockchain ecosystems, various scams are rampant, which seriously threaten
    the financial security of users involved. In the future, we are going to further
    this study to other cybercrimes and set up a blockchain scam detection website
    to provide the phishing scam identification service in the form of API. Besides,
    to accelerate the research in this field, all relevant data and code will be released
    after the book is published.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链生态系统中，各种骗局泛滥成灾，严重威胁到了参与用户的金融安全。未来，我们打算将这一研究拓展到其他网络犯罪，并建立一个区块链骗局检测网站，以API的形式提供钓鱼骗局鉴定服务。此外，为了加速这一领域的研究，书籍出版后所有相关数据和代码都将公开发布。
- en: 5.5 Summary
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.5 总结
- en: In this chapter, we focus our attention on misbehavior detection on blockchain.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们重点关注区块链上的不良行为检测。
- en: Specifically, in Sect. [5.3](#Sec6), we propose an approach to detect smart
    Ponzi schemes. Using the manually checked samples and XGBoost, a regression tree
    model based on extracted account features and code features is build. The experimental
    results indicate that the proposed model has high accuracy and can be used to
    detect latent smart Ponzi schemes in practice. The most significance result is
    that using our extracted code features that are publicly accessible in any running
    contract is enough to build a practical model for detecting Ponzi scheme contract
    at the moment of its creation. In addition, we estimate that there are more than
    400 smart Ponzi schemes on Ethereum, which are far more than the previous estimation.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在[5.3](#Sec6)节中，我们提出了一种检测智能庞氏骗局的方法。利用人工检查的样本和XGBoost，基于提取的账户特征和代码特征构建了一个回归树模型。实验结果表明，所提出的模型具有高准确性，可以用于在实践中检测潜在的智能庞氏骗局。最重要的结果是，利用我们提取的代码特征，在任何一个运行中的合约中都是公开可用的，足以在合约创建时刻构建一个实用的庞氏骗局检测模型。此外，我们估计在以太坊上有超过400个智能庞氏骗局，这远远超过了之前的估计。
- en: In Sect. [5.4](#Sec23), we propose a systematic approach to detect phishing
    scams in the Ethereum ecosystem. First of all, by using the Parity client and
    crawl etherscan.io, we collect all transactions of the Ethereum blockchain and
    the labeled phishing addresses. Then, by using this data, we construct a transaction
    graph and propose a graph-based cascade feature extraction method, which helps
    us extract many useful features. Next, based on the extracted features and LightGBM,
    we propose a Dual-sampling Ensemble model to detect phishing suspects. Finally,
    we evaluate the model from many angles, and the results indicate the effectiveness
    of our model.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在[5.4](#Sec23)节中，我们提出了一种系统的方法来检测以太坊生态系统中的钓鱼骗局。首先，通过使用Parity客户端和爬取etherscan.io，我们收集了以太坊区块链上所有的交易和已标记的钓鱼地址。然后，利用这些数据，我们构建了一个交易图，并提出了基于图的级联特征提取方法，这帮助我们提取了许多有用的特征。接下来，基于提取的特征和LightGBM，我们提出了一种双重采样集成模型来检测钓鱼嫌疑人。最后，我们从多个角度评估了该模型，结果表明我们的模型是有效的。
- en: In conclusion, several types of misbehaviors and relating researches are discussed
    in this chapter. Besides, we proposed two data mining models to handle Ponzi scheme
    detection and phishing scam detection on Ethereum along with corresponding experiments.
    Furthermore, evaluation for both of the models is conducted from various angles
    and consistency is found between theoretical results and experimental results.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，本章讨论了几种不良行为及其相关研究。此外，我们还提出了两个数据挖掘模型来处理以太坊上的庞氏骗局检测和钓鱼骗局检测，并进行了相应的实验。此外，对这两个模型进行了多角度评估，发现理论结果与实验结果之间具有一致性。
