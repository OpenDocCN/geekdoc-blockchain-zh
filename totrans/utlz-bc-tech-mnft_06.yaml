- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Mutual Recognition Mechanism Based on DVCS Oracle in the Blockchain Platform:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DVCS Oracle in the Global Supply Chain
  prefs: []
  type: TYPE_NORMAL
- en: Vladimir Nikolaevich Kustov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saint Petersburg State University of Railway Transport of Emperor Alexander
    I, Russia
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Ekaterina Sergeevna Selanteva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New Space of Trade LLC, Russia
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ABSTRACT
  prefs: []
  type: TYPE_NORMAL
- en: The main purpose of this chapter is to present the need to use the mutual recognition
    mechanism (MRM) of electronic signatures based on the DVCS oracle in the blockchain
    platform for the global supply chain. The authors begin their research by comparing
    a single-domain traditional supply chain with a multi-domain global supply chain.
    In the second case, the necessity of using an MRM electronic signature based on
    the DVCS oracle is justified. Various options for constructing MRM are discussed.
    The chapter provides a comparative assessment of the electronic signature validation
    protocols and the rationale for using the DVCS protocol to implement the blockchain
    oracle. As a result, the authors propose to use a well-tested software and hardware
    complex of the Litoria DVCS as a DVCS oracle and illustrate its use with practical
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: “And if blockchain technology becomes a key tool for increasing the progress
    of mankind, then in the future it can become an information platform on the scale
    of the Universe.” (Swan, 2018)
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs: []
  type: TYPE_NORMAL
- en: Over the past thirteen years since the appearance of the first blockchain platform
    and the first Bitcoin cryptocurrency (Satoshi, 2008), many different events have
    occurred. Sometimes they were contradictory, from uncontrollable delight (Swan,
    2018) (Kustov & Stankevich, 2019) to complete rejection and skepticism. Serious
    concerns have been expressed that the blockchain will kill medium and small businesses
    (Chris, 2017). There have also been repeated attempts to reconcile skeptics with
    optimists (Kustov & Stankevich, 2018).
  prefs: []
  type: TYPE_NORMAL
- en: 'However, despite all these contradictions, blockchain technology is dynamically
    developing and embracing more and more new sectors of the economy, sometimes taking
    on a global character. The supply chain is no exception. At the same time, along
    with the positive results of the widespread introduction of blockchain technology,
    its distinctive negative features are increasingly manifested, among which it
    should be mentioned:'
  prefs: []
  type: TYPE_NORMAL
- en: '1\. The widespread use of smart contracts, developed mainly in the Solidity
    language (Dannen, 2018), reveals more and more vulnerabilities in smart contracts
    (Shapiev, 2019) that bring significant financial losses (Report, 2019). These
    vulnerabilities arise for two main reasons:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. insufficiently secure technology for developing smart contracts, which results
    in errors in their development;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. Both insufficient reliability of the source data transmitted to the smart
    contract from the external environment.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Limited supply on the market of reliable hardware and software communication
    tools (that is, oracles) of smart contracts operating in a closed environment,
    with information flows in the surrounding world.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Supply chains from interdepartmental trade turnover, closed within one country,
    everywhere acquire a global character (Kupriyanovsky et al., 2016). Electronic
    document flow is becoming cross-border. The widespread use of electronic signatures
    in the exchange of electronic documents creates many problems in verifying electronic
    signatures made using different cryptographic standards. There is a need to develop
    a secure mechanism for verifying electronic documents before writing them to the
    blockchain platform. In their research, the authors develop the idea of using
    a mutual recognition mechanism for this purpose, the core of which is the DVCS
    oracle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: STATEMENT OF THE RESEARCH TASK
  prefs: []
  type: TYPE_NORMAL
- en: So, the data in supply chains are not always prominent, accessible, or trusted.
    The use of blockchain technology helps to ensure the exchange of secure data with
    supply chain partners using blockchain-based solutions with restricted access
    rights.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, this problem is becoming very relevant. Consumers want guaranteed
    quality, so their participation in supply chains is very demanding. The selection
    of suppliers becomes very careful to ensure a minimum of risks and high transparency
    choice.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, the authors propose conducting a study of ways to reduce disruptions
    in supply chains using a mutual recognition mechanism to increase data reliability
    to assess the possibility of future blockchain applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'The widespread use of blockchain in supply chains, which has begun in recent
    years, provides the following advantages compared to traditional supply chains:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. The transparency of supply chain networks may end with the participants
    closest to you. Thanks to distributed ledger technology, which provides the only
    option for trusted information, blockchain-based solutions give participants a
    clearer picture of all operations in the supply chain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Just a single small error in the operation of the blockchain platform can
    cause many disruptions in the functioning of the supply chain. Blockchain-based
    solutions for the supply chain use smart contracts automatically initiated when
    predefined business conditions are met. It ensures transparency of operations
    in almost real-time and the possibility of an earlier response to detecting an
    exceptional situation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Also, a severe and sometimes tricky problem for the buyer and seller is
    always selecting a new supplier. Blockchain solutions for supply chains can speed
    up this process by using an immutable data record about a new supplier that business
    network participants can trust.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Along with the noted advantages of using blockchain-based supply chains, several
    problems should be noted that require solutions soon:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Insufficient communication of secure blockchain platforms with external
    sources of information using trusted communication channels. The info flows entering
    the blockchain consist of documents and the data's reliability, integrity, and
    authenticity, which is ensured through an electronic signature (ES). In this regard,
    there is an urgent need for trusted validation of an ES before uploading documents
    to the blockchain. This function can be assigned to a special oracle connector
    that confirms the item instance and makes a positive or negative decision based
    on the verification results. The electronic document and the positive receipt
    are recorded in the blockchain if the result of the ES verification is positive.
    If the result is negative, the document is returned to the source along with a
    negative receipt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '2\. There are two classes of supply chains:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. A single-domain (limited by the borders of one state) supply chain (Figure
    1). In such supply chains, the validation function of the ES is often assigned
    to the internal mechanisms of the blockchain. Practice shows insufficient reliability
    and universality of validation mechanisms in this case. In this case, we need
    a separate external secure and proven tool for validating the ES in the form of
    a particular connector - oracle.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. A multi-domain or global supply chain (Figure 2) provides for cross-border
    transportation of goods. The function of validating the ES under the documents,
    in this case, becomes much more complicated and becomes necessary. The fact is
    that different states use different cryptographic standards of the ES, and in
    general, these standards are incompatible, and the use of oracles to validate
    ES becomes necessary.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. There are three main validation protocols. The authors will talk about them
    further. The authors were faced with the task of choosing the most effective of
    them. According to the results of the tests, the DVCS protocol showed the best
    characteristics. The authors suggest using DVCS oracle as a blockchain oracle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Figure 1\. Single-domain supply chain |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f01](i/ch005.f01.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Figure 2\. Multi-domain global supply chain |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f02](i/ch005.f02.png) |'
  prefs: []
  type: TYPE_TB
- en: Let us take a closer look at the description of the functionality of the single-domain
    supply chain.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before sending components to the manufacturer, the supplier provides them with
    the following information in electronic form, recorded in the blockchain in the
    following transactions: Certificate of origin, Batch numbers, and Assembly data.
    Immediately before the transfer of components to the transport organization, the
    supplier records and transmits to it add the following information, which is also
    recorded in the blockchain in the form of transactions: Shipment date, Order number,
    Global Trade Item Number (GTIN), and Stock Keeping Unit (SKU). The transport organization
    adds additional transactions to the blockchain at the delivery stage: Order number,
    Shipment number, Equipment number. Having received the components, the manufacturer
    produces the necessary products and additionally enters its transactions into
    the blockchain: Certificate of origin, Batch numbers, and Assembly data. Processing
    of all information recorded in the blockchain at the stages of component supply
    and production is carried out by the following smart contracts:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Match order, invoice, and shipment;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Quality check;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Pay supplier.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The manufacturer adds the following transactions to the blockchain before sending
    finished products: Shipment date, Order number, GTIN/SKU. At the stage of transportation,
    the transport organization transmits to the additional distributor information
    recorded in the blockchain: Order number, Shipment number, Equipment number.'
  prefs: []
  type: TYPE_NORMAL
- en: 'After receiving the products, the distributor creates transactions: Receive
    date, Storage location, Packaging, GTIN/SKU. The distributor uses smart contracts
    at the stages of delivery receipt of finished products:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Match order, invoice, and shipment;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Quality check;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Update inventory;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4\. Pay manufacturer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, the distributor prepares the goods for shipment to the customer and records
    transactions in the blockchain: Shipment date, Order number, GTIN/SKU. At the
    delivery stage of the goods by the transport organization to the Customer, transactions
    are created: Order number, Shipment number, Equipment number. After receiving
    the goods, the Customer makes and writes transactions to the blockchain: Receive
    date, Order number, Invoice number, Customer ID. At the final stage, the following
    smart contracts are used:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Match order, invoice, shipment;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Update inventory;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Pay distributor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thus, the cycle of the single-domain supply chain is completed. For a multi-domain
    global supply chain, the sequence of recording transactions and executing the
    corresponding smart contracts is identical. However, introducing an additional
    level of mutual recognition mechanism based on the DVCS Oracle solves the problem
    of safe, confidential transmission of information in the cross-border electronic
    document flow.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, the authors believe that the primary purpose of this chapter is to present
    the need to use the Mutual Recognition Mechanism (MRM) of ES based on the DVCS
    Oracle in the blockchain platform for the global supply chain.
  prefs: []
  type: TYPE_NORMAL
- en: LET'S TALK ABOUT ORACLES
  prefs: []
  type: TYPE_NORMAL
- en: Oracles play an essential role in any ecosystem based on blockchain. Oracles
    solve one of the most critical tasks in distributed registry systems - ensuring
    trusted data transfer from the outside world to smart contracts implemented by
    blockchain platforms. Therefore, careful development of the algorithms on which
    the oracles are based is now becoming necessary.
  prefs: []
  type: TYPE_NORMAL
- en: What is a Blockchain Oracle?
  prefs: []
  type: TYPE_NORMAL
- en: Any distributed registry system is always deterministic — transactions are written
    into blocks only in chronological order. The smart contract is executed in the
    blockchain in a closed, protected environment that cannot receive verified data
    from the outside world. Oracles are designed to translate information to a form
    convenient for processing in the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, the oracle provides a trusted transfer of information from the
    outside world to the blockchain. Oracles perform an essential role of a third
    trusted party for smart contracts, providing the possibility of reliable automatic
    fulfillment of the conditions stipulated by the smart contract. In practice, users
    and individual enterprises using smart contracts often have trouble because smart
    contracts are in a closed, trusted space, which requires high-reliability characteristics
    to be unblocked. That is, the work of smart contracts requires a very secure blockchain.
    The technical and financial costs associated with such a blockchain are becoming
    relatively high.
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm implemented in a smart contract must be correctly and accurately
    implemented and consider many contradictory simulations. Developing a smart contract
    becomes a very time-consuming process, which naturally increases the number of
    critical errors. After launching, it is impossible to change the smart contract
    or stop its operation until all the prescribed conditions are met.
  prefs: []
  type: TYPE_NORMAL
- en: However, as far as the outside world is concerned, it is not deterministic like
    the blockchain. One or both parties may probably encounter data transmission errors
    in the blockchain, leading to incorrect execution of the smart contract. Blockchain
    oracle solves the problem of smart contract communication with the outside world
    and ensures their reliable implementation by supplying trusted information from
    the external environment. In this case, the oracle performs the role of an adviser
    who interprets individual critical events in the external environment.
  prefs: []
  type: TYPE_NORMAL
- en: How Does the Oracle Work?
  prefs: []
  type: TYPE_NORMAL
- en: 'When developing blockchain oracles, developers are forced to solve one fundamental
    question: how can information about events occurring in the environment be reliably
    delivered to a smart contract? The developer can use three things for this:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Software or hardware acts as a primary source of data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Request for data transfer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. The Oracle itself or the Oracle Agreement.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The primary source of data is intended to provide the necessary information
    for the oracle. There are many primary sources of data in the Internet of things
    around us that transmit data to oracles. The primary sources of data are very
    diverse. For example, they can be used as:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Transponders of travel documents for the operational management of passenger
    flows in the subway.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. All kinds of meteorological sensors transmit data for predicting emergencies
    as a result of worsening weather conditions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Various trackers for monitoring cargo transportation and much more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A data transfer request is a specially coded message transmitted to the primary
    source of data. In response to the issued request, the smart contract receives
    trusted information for its execution.
  prefs: []
  type: TYPE_NORMAL
- en: The Oracle or Oracle Agreement is a program (unit) or group of programs (units)
    using in the blockchain connections a primary source of data and converting information
    received from direct sources of data into a format convenient for processing in
    the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Types of Oracles
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on their functional purpose, design, and use, oracles can have the
    following types:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Oracle as a program is executed in software format, processing information
    coming from the source online. This type of oracle can transmit to smart contract
    bets on the results of football matches or boxing matches, information from traffic
    cameras about violations of traffic rules for making a smart contract decision
    on the payment of a fine, and so on. Oracles can have many different primary data
    sources, including numerous websites on social networks, which oracles transmit
    to smart contracts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Оracle as the unit. These oracles are designed to transmit information from
    physical devices from the outside world of the so-called Internet of things. These
    include various monitors for monitoring the movement of vehicles, temperature
    sensors, and other weather parameters. Cash tags for tracking the movement of
    goods to manage smart contracts for supply chains. The problems associated with
    such oracles' work ensure high reliability of the data flow of information extracted
    from them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Oracle as an entry into a smart contract. This oracle is programmed as an
    input to a smart contract and contains its executable code directly in the smart
    contract. It is designed to transmit information from the external environment
    when certain conditions are met during the execution of a smart contract. For
    example, to perform an automatic purchase of bitcoins or their immediate sale,
    a smart contract must constantly monitor at what point in time the bitcoin rate
    is to the maximum or minimum. Oracle, as an entry, is always ready to provide
    such information to the smart contract online.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4\. Oracle as an exit. Oracle, as an exit, works in reverse order and transmits
    data to the external environment. Thus, some external smart lock system, having
    received information from the smart contract about a successful (unsuccessful)
    payment, transmitted to it through the oracle as an exit, can connect (close)
    the user access to the resource. Oracle as an exit can also be an integral part
    of a smart contract.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Oracle Agreement. Many event prediction systems use an oracle to predict
    outcomes of situations related to specific events. In such difficult situations,
    it is not enough to use only one oracle. In this regard, many oracles are used,
    the so-called Oracle agreement, the result of their work is summed up according
    to the majority scheme.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6\. DVCS Oracle. Its necessity for the global supply chain has already been
    mentioned in the introduction. Still, it deserves separate detailed consideration,
    and its device will be described later in a separate section.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who Develops Blockchain Oracles?
  prefs: []
  type: TYPE_NORMAL
- en: 'Among the companies involved in the development and implementation of blockchain
    oracles, the authors can specify the following companies:'
  prefs: []
  type: TYPE_NORMAL
- en: • Oraclize — offers secure and “provably honest” data allocated from the pages
    of websites, using the TLSNotary/pagesigner tool developed by this company. This
    tool is a kind of TLS oracle that creates certified cryptographic evidence of
    the authenticity of the data presented by the website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Chainlink is a decentralized, secure oracle network created by the Smart Contract
    company. This oracle network belongs to the oracle agreement type and solves the
    problem of transferring data for smart contracts from the external environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • BNC (BraveNewCoin) — is a company engaged in the study and analysis of cryptocurrency
    exchange rates. This company has put a secure network of fourteen oracles for
    smart contracts working in the Ethereum environment into public access for free.
    Oracles transmit daily updated information about quotes of fourteen major cryptocurrencies
    to smart contracts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • DVCS Oracle — oracle is based on the DVCS protocol of electronic signature
    verification. In many cases, the input data for a smart contract is the result
    of checking an electronic signature or a set of electronic signatures. In this
    case, it is necessary to allocate a trusted third party, the risks of incorrect
    verification of which will be provided, and certificates confirm the correctness
    of the work following current legislation. Gazinformservice LLC is Russia's leading
    developer of DVCS oracles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oracle Security Issues
  prefs: []
  type: TYPE_NORMAL
- en: '1\. All information security problems can be divided according to the data
    compromise points that oracle provides to the blockchain system:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. The input data stream from the oracle to the blockchain is compromised
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. , and the oracle transmission channel to the blockchain is compromised.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'c. The oracle itself is compromised:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: i. Intentionally - the attacker has learned to give out the information he needs
    for the oracle's information.
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ii. Not intentionally (a software error).
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The oracle infrastructure is actively developing, representing a secure communication
    channel of the surrounding digital environment for data delivery to the blockchain.
    This fact makes it possible to solve data transfer problems to the blockchain
    for the rapid execution of smart contracts for various purposes in decentralized
    blockchain networks. However, one should always consider the high risks of using
    false data in the blockchain due to compromising oracles.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a Validation Protocol for Oracle
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, there are three verification protocols most commonly used in practice:
    XML Key Management Specification (XKMS) (XML, 2005), OASIS Digital Signature Service
    (DSS) (OASIS, 2007), Data Validation and Certification Server (DVCS) (Internet,
    2001).'
  prefs: []
  type: TYPE_NORMAL
- en: The authors compared the validation protocols XKMS, OASIS DSS, and DVCS by various
    functional parameters to determine the most effective of the three protocols for
    use as an oracle.
  prefs: []
  type: TYPE_NORMAL
- en: 'This assessment is of practical importance in the context of correlating the
    capabilities of the compared protocols to implement the functions of the TTP,
    enshrined in Article 18.1 of Federal Law No. 63-FZ of 06.04.2011 “On Electronic
    Signature”:'
  prefs: []
  type: TYPE_NORMAL
- en: '1\. A trusted third party provides services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. to confirm the validity of electronic signatures used when signing an electronic
    document, including establishing the facts that the relevant certificates are
    valid at a certain point in time, created and issued by accredited certification
    centers, whose accreditation is right on the date of issue of these certificates;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. to verify the compliance of all qualified certificates used when signing
    an electronic document with the requirements established by this Federal Law and
    other regulatory legal acts adopted following it;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. to verify the credentials of participants in electronic interaction;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: d. to create and sign a receipt with a qualified electronic signature of a trusted
    third party with the result of checking a qualified electronic signature in an
    electronic document with trusted information about the moment of its signing;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: e. data storage, including documentation of operations performed by a trusted
    third party.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. A trusted third party (TTP) ensures the confidentiality, integrity, and
    availability of information during its processing and storage and transmission
    using information and telecommunication technologies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Based on these requirements, to analyze the validation protocols, the authors
    set and evaluated the following tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: • To check the ES under the document;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • To check the validity of the ES Verification Key certificate (SVKC);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • To submit the results of the inspection in the form of a receipt, for use
    it as confirmation of the commission of specific actions with an electronic document
    or SVKC at a fixed time;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • To meet accessibility, integrity, and confidentiality requirements of information
    during its processing and storage and its transmission using information and telecommunication
    technologies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In addition, for the practical use of the protocol, such parameters as a variety
    of options for interacting with the service support for standard transport protocols
    and the ability to check electronic documents of various formats are essential.
    Therefore, authors will include additional parameters in the comparison, according
    to which they will conduct it:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. The type of request to the service.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. The types of transport protocols.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. The types of signatures.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The interaction of legal entities and individuals with government agencies
    and interdepartmental cooperation within the Russian Federation and in international
    formats is mainly regulated by regulations of one level or another. It can be
    determined the following summarizing the requirements for such interaction:'
  prefs: []
  type: TYPE_NORMAL
- en: • The document presentation formats - XML and PDF.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The type of ES used - CMS, XADES, PADES, XMLDSig.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The possibility to validate the ES without receiving the electronic document
    (ED) itself (by hash).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The ability to create and verify the time stamp.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The possibility to create more than one ES in one ED.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The fulfilling request speed to verify one document instance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The development difficulty.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The check result is legally binding.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The protocol possibility to fulfill transboundary trust.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's briefly describe the main distinguishing features of the validation protocols
    under consideration.
  prefs: []
  type: TYPE_NORMAL
- en: XKMS Protocol
  prefs: []
  type: TYPE_NORMAL
- en: 'The XKMS protocol describes the methods of registration, distribution, and
    the ES verification keys used in the XML signature and encryption standards. XKMS
    also formalizes the specifications of XML services: Key Registration (X-CROSS)
    and Key Information (X-KISS). The XKMS protocol is compatible with any public
    key infrastructure, including X.509.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The X-KISS user can pass the XML signature processing tasks <ds: KeyInfo> to
    the XKMS service. The purpose of the protocol development was to reduce the complexity
    of using XML signatures in various applications. Any application that becomes
    a client of the XKMS service becomes free from the syntactic complexity of a basic
    PKI such as PGP, SPKI, or X.509/PKIX.'
  prefs: []
  type: TYPE_NORMAL
- en: X-CRS is a public key information and registration management service. The user
    of this service can create a request to associate some information with his public
    key. Such information may contain the user's ID or name and other data required
    by a specific PKI implementation.
  prefs: []
  type: TYPE_NORMAL
- en: XKMS allows users to authenticate them and confirm ownership of the ES key if
    they are generating a key pair. When developing the key pair, the service ensures
    the transfer of the ES key to users.
  prefs: []
  type: TYPE_NORMAL
- en: XKMS provides tools for registering DSA and RSA keys and defines requirements
    for expanding the protocol's capabilities to use other cryptographic standards,
    for example, based on Elliptic Curve and Diffie-Hellman standards.
  prefs: []
  type: TYPE_NORMAL
- en: XKMS provides opportunities to use different methods of canonicalization while
    complicating its use in development.
  prefs: []
  type: TYPE_NORMAL
- en: XKMS provides the ability to exchange messages. In this case, the messaging
    session consists of a sequence of request-response pairs. Messages are presented
    in a standard template supported by various exchange protocols. However, to ensure
    higher compatibility, XKMS recommends developers to use SOAP over HTTP, although
    the possibility of using other protocols is not excluded.
  prefs: []
  type: TYPE_NORMAL
- en: 'XKMS standardizes three query templates:'
  prefs: []
  type: TYPE_NORMAL
- en: • X-KISS - request to determine or confirm the location;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • X-KRSS - request for registration, revocation, restoration, or renewal;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Connected request - can contain more than one request X-KRSS or X-KISS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'XKMS defines two types of request processing - synchronic and asynchronous:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Synchronic - a response to the request is issued, and the request processing
    ends there.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Asynchronous - the response is not issued immediately, a notification that
    the request has not yet been completed and other responses will be made later.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The disadvantages of the protocol are:'
  prefs: []
  type: TYPE_NORMAL
- en: • high memory requirements when processing large ED;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • when using data represented by containers, additional work is needed;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • low performance;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • cannot create and validate ES in PDF format.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OASIS DSS Protocol
  prefs: []
  type: TYPE_NORMAL
- en: The Organization for the Advancement of Structured Information Standards (OASIS)
    is engaged in the development of structured information standards, contributing
    to the achievement of consensus in the industry and the creation of global standards
    in the field of information security, cloud technologies, energy, IoT, emergencies,
    and other developing technologies.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Digital Signature Service (DSS) developed by OASIS contains the following
    components:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. The Base Module consists of DSS Core Protocols and DSS Elements and Bindings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '2\. OASIS DSS Profiles:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. XML Timestamp Profile;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. ES Gateway Profile
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. The profile of the ES made following German law;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: d. Entity Seal Profile;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: e. Electronic PostMark (EPM) Profile;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: f. Abstract Code-Signing Profile;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: g. J2ME Code Signing Profile;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: h. Asynchronous Process Abstract Profiles;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: i. Advanced ES Profile.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The Base Module provides main elements and protocols supporting specific scenarios
    according to DSS profiles.
  prefs: []
  type: TYPE_NORMAL
- en: Signature and verification protocols are mainly designed to create and verify
    XML or CMS signatures and binary or XML timestamps. These protocols can be extended
    to other signatures and timestamps, for example, PGP signatures.
  prefs: []
  type: TYPE_NORMAL
- en: Optional input data for the signature protocol are the type of signature for
    whom belongs the key are used to sign, for whom belongs the signature is intended,
    which signed and non-signed data to put in the signature.
  prefs: []
  type: TYPE_NORMAL
- en: 'Input data for the verification protocol are: the validity of the signature
    at a certain point in time, additional data required for signature verification
    (certificates, CRLs), requests to the server to obtain information about the signer,
    or the time of signature creation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disadvantages of the protocol:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. OASIS DSS does not allow you to get a report on a multi-signature ED;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. It is not possible to work with PDF signatures.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DVCS Protocol
  prefs: []
  type: TYPE_NORMAL
- en: The DVCS protocol is described in the RFC 3029 “Internet X.509 Public Key Infrastructure
    Data Validation and Certification Server Protocols”, published by the Internet
    Engineering Task Force (IETF).
  prefs: []
  type: TYPE_NORMAL
- en: The document describes the DVCS protocols used for data exchanging. The DVCS
    is the server, so-called a TTP, that can be used to build reliable, trusted verification
    services.
  prefs: []
  type: TYPE_NORMAL
- en: 'RFC3029 uses four classes of certification and validation services:'
  prefs: []
  type: TYPE_NORMAL
- en: • Certificate of Possession of Data (cpd);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Certificate of Claim of Possession of Data without providing it to the service
    (ccpd);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Verification of Signed Document (vsd);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Verification of Public Key Certificates (vpkc).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CPD is a confirmation service that the data submitted for verification belonged
    to their owner before the time of their verification.
  prefs: []
  type: TYPE_NORMAL
- en: CCPD is a service for confirming claims to data ownership, identical to CPD,
    but provided that the owner does not represent the actual data but their hash.
  prefs: []
  type: TYPE_NORMAL
- en: VSD is an ES of ED verification service used to confirm the validity of an ES
    document. This service verifies all ES's of ED by checking the information it
    collects about the certificates of the ES verification keys and their statuses.
    The service checks the algorithmic correctness of all ES's attached to the ED.
    It also verifies the trust of the ED signers by verifying the entire certificates
    chain from the sign holder to the certification authority that released the certificate
    to the DVCS server or the senior root certification authority in the hierarchy.
    Verification of the validity of certificates can be carried out both according
    to the certificate revocation list (CRL) or according to more up-to-date data
    - according to the online certificate status protocol (OCSP) in real-time (Network,
    2013) or by accessing a trusted cervices list (TCL) or another trusted DVCS service.
    Failure to check one ES does not necessarily lead to loss of the check as a whole
    and vice versa. If all ESs are successfully checked, a global error may occur
    if there are not enough ESs in the ED.
  prefs: []
  type: TYPE_NORMAL
- en: A CMS ES can use as a usual ES and a PDF ES because it is founded on a CMS ES.
  prefs: []
  type: TYPE_NORMAL
- en: VPKC is the service intended for verifying the validity of certificates of ES
    verification keys. It is described in RFC 2459 and is used to check the validity
    of certificates at a given time. When checking the certificate of the ES verification
    key, the DVCS checked that the certificate specified in the request is valid and
    defines its revocation status at the indicated time. DVCS validates the entire
    certification path from the certificate issuer to the root certification authority.
    It is also possible to use external information (CRL, OCSP, and DVCS) when checking.
    DVCS employs the default ASN1 coding.
  prefs: []
  type: TYPE_NORMAL
- en: The benefit of the DVCS protocols is that they may be capsulated in one message
    the services for verifying the certificate's validity, the validity of the ES,
    and the time stamp.
  prefs: []
  type: TYPE_NORMAL
- en: The disadvantage is that a user cannot open the verification results with a
    text editor to view and copy information and verify XML signatures.
  prefs: []
  type: TYPE_NORMAL
- en: The downside is that the validation outcomes cannot be open with a word processor
    to look at and backup the information and the impossibility of validating XML
    ES.
  prefs: []
  type: TYPE_NORMAL
- en: As a successfully implemented project, it should be mentioned that the TTP service
    of the Eurasian Economic Commission is efficiently functioning based on the DVCS
    oracle.
  prefs: []
  type: TYPE_NORMAL
- en: Comparative Analysis of Validation Protocols
  prefs: []
  type: TYPE_NORMAL
- en: A comparative overview of the validation protocols DVCS, OASIS DSS, and XKMS
    is given in Table 1\. For visualization, each position is assigned a rating on
    a five-point scale. The significance of “1” is a value that does not allow solving
    problems, and the significance of “5” is a value that will enable solving problems.
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Comparison overview of validation protocols
  prefs: []
  type: TYPE_NORMAL
- en: '| Nº | Comparative Settings | XKMS | OASIS DSS | DVCS |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Type of request |      — verification of XML ES;      — key couple registration
    by the key couple holder |      — creating an ES;      — verification of the validity
    ES of ED;'
  prefs: []
  type: TYPE_NORMAL
- en: — provision of timestamp services |      — cpd;      — ccpd;
  prefs: []
  type: TYPE_NORMAL
- en: — vsd;
  prefs: []
  type: TYPE_NORMAL
- en: — vpkc |
  prefs: []
  type: TYPE_NORMAL
- en: '| Rating |      3 |       4 |       5 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | The transport protocol used | Protocol SOAP via HTTP |     — protocol
    SOAP;     — protocol HTTP POST;'
  prefs: []
  type: TYPE_NORMAL
- en: — protocol TLS |     — protocol HTTP POST     — protocol TLS;
  prefs: []
  type: TYPE_NORMAL
- en: — protocol S/MIME |
  prefs: []
  type: TYPE_NORMAL
- en: '| Rating | 2 |     5 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | The kind of ES that may be checked | XML ES |     — XML ES;     — CMS
    ES'
  prefs: []
  type: TYPE_NORMAL
- en: — Binary Time Stamp ES;
  prefs: []
  type: TYPE_NORMAL
- en: — XML time stamp ES;
  prefs: []
  type: TYPE_NORMAL
- en: — XADES and CADES;
  prefs: []
  type: TYPE_NORMAL
- en: — PGP ES |     — CMS ES;     — PDF ES based on a CMS ES |
  prefs: []
  type: TYPE_NORMAL
- en: '| Rating | 3 | 5 | 4 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | The ability to verify the ES of ED by hash | Absent | Present | Present
    |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 1 | 5 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | The ability to check and generate a timestamp | Absent | Present | Present
    |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 1 | 5 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | The possibility to process more than one ES in a single ED | Present
    and an account is given for every ES | Present, but an account is not given for
    every ES | Present and an account is given for every ES |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 5 | 4 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | The processing speed of the request for verification of the item instance
    |      — Small, XML-format accommodates an abundance of excess data;      — it
    is hard to deal with big files | Depends on the kind of ES (XML or CMS) | Extremely
    high, you may employ an individual ES |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 3 | 4 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | Difficulty of realization | Medium | Medium | Minima |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 4 | 4 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 9 | The juridical power of the check''s results | The ES can sign the check''s
    results. | The ES can sign the check''s results. | The ES can sign the check''s
    results. |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 5 | 5 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | The relevance of the protocol to ensuring cross-border credibility |
    Possibly | Possibly | Present |'
  prefs: []
  type: TYPE_TB
- en: '| Rating | 4 | 4 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '|  | Shortcomings | — a high volume of storage is needed to parse big ED; —
    requires more handling in the way of the data containers;'
  prefs: []
  type: TYPE_NORMAL
- en: — lowly;
  prefs: []
  type: TYPE_NORMAL
- en: — doesn't accept PDF ES | — it is not possible to report for each signature
    in an ED with several signatures; — doesn't accept PDF ES | — it can't be open
    with a word processor to see and back up the info |
  prefs: []
  type: TYPE_NORMAL
- en: '| Medium rating: | 3,1 | 4,5 | 4,9 |'
  prefs: []
  type: TYPE_TB
- en: So, according to those results obtained during the comparison analysis of validation
    protocols, the XKMS turned out to be the most inconvenient to use as an oracle.
    This protocol has a vast number of limitations. The most significant limitation
    is the lack of the possibility of forming a timestamp, and there is also no possibility
    of checking the improved ES. In addition, XKMS is the lowest-performing protocol.
  prefs: []
  type: TYPE_NORMAL
- en: A little more practical for solving ES validation tasks is the OASIS protocol.
    However, the DVCS protocol turned out to be the optimal solution for implementing
    the Oracle prototype. It has the highest performance, higher content of ES validation
    results. Based on this protocol, a global TTP chain can be easily built by somebody
    for their cross-border use. The Russian Federation successfully uses the DVCS
    protocol in both interdepartmental and cross-border electronic interaction. Some
    pilot projects in international formats in cross-border B2B processes have been
    carried out based on the DVCS protocol.
  prefs: []
  type: TYPE_NORMAL
- en: So, according to the results of the expert estimate, it could be concluded the
    DVCS protocol possesses the best characterizations for the solution of the stated
    tasks of creating DVCS oracle.
  prefs: []
  type: TYPE_NORMAL
- en: Technological Solutions to MRM Based on DVCS Oracle
  prefs: []
  type: TYPE_NORMAL
- en: There can be various technological options for cross-border electronic document
    exchange (Kustov & Domrachev, 2011). However, according to the Buy-Ship-Pay model
    (White, 2017), it is proposed to use data that is usually necessary during the
    document's legal function fulfillment to provide interoperability to trade-related
    electronic documents (Table 2).
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Able e-documents attributes used for cross-border paperless trade
    exchange
  prefs: []
  type: TYPE_NORMAL
- en: '| Nº | Attribute type | Description/comments |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Content | An aggregate of at least one of the following attributes is
    the content, the informational essence of a document, which is to be irrespective
    to an expression form – whether paper or electronic one:   1) document type,'
  prefs: []
  type: TYPE_NORMAL
- en: 2) document classification,
  prefs: []
  type: TYPE_NORMAL
- en: 3) document title. |
  prefs: []
  type: TYPE_NORMAL
- en: '| 2 | Document issuer legal'
  prefs: []
  type: TYPE_NORMAL
- en: 'status | An aggregate of the following attributes is the document issuer legal
    status:   1) logotype,'
  prefs: []
  type: TYPE_NORMAL
- en: 2) name of an issuer,
  prefs: []
  type: TYPE_NORMAL
- en: 3) issuer reference data (address, contacts, etc.),
  prefs: []
  type: TYPE_NORMAL
- en: 4) seal impression. |
  prefs: []
  type: TYPE_NORMAL
- en: '| 3 | Signatory status (powers)or signatory position | A brief description
    of signatory powers with their duration is stated. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | Signature | An aggregate of the following attributes is the signature:
      1) issuer‘s signature,'
  prefs: []
  type: TYPE_NORMAL
- en: 2) signature stamp of confirmation,
  prefs: []
  type: TYPE_NORMAL
- en: 3) signature stamp of approval,
  prefs: []
  type: TYPE_NORMAL
- en: 4) visa (clearance / endorsement stamp),
  prefs: []
  type: TYPE_NORMAL
- en: 5) copy certification stamp,
  prefs: []
  type: TYPE_NORMAL
- en: 6) seal of issuing organization. |
  prefs: []
  type: TYPE_NORMAL
- en: '| 5 | Time | A statement of the time point of signing is attached based on
    a trusted time source (the validity aspect). |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | Place | A signing statement (where the signatory expressed their will
    to sign by triggering signing) is optional. If this type of service is not available,
    the attribute place can be considered one of the content attributes. |'
  prefs: []
  type: TYPE_TB
- en: Data models should be built based on international standards and recommendations
    to ensure compatibility with other global systems and applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Standardization and applications of data elements are observed in the following
    documents:'
  prefs: []
  type: TYPE_NORMAL
- en: • Trade data element Directory UN (UNITED, ISO 7372) (Trade, 2005);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The core component is Library UN/CEFACT (CCL) and the technical specifications
    of UN/CEFACT (CCTS) (TBG17, 2020).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Essence of Mutual Recognition
  prefs: []
  type: TYPE_NORMAL
- en: Mutual recognition is the mutual acknowledgment of the truth of trade-related
    information and EDs that are exchanged over borders between a couple of other
    countries (UN, 2016).
  prefs: []
  type: TYPE_NORMAL
- en: The conformity of the subject of electronic communication with the appropriate
    legislative, organization, and technology demands and/or guidelines and regulations
    and/or proceedings is provided by an institutional mechanism that ensures fulfillment
    of the righthand and lawful interest of the subjects of the electronic interoperation.
    (Silanteva & Kustov, 2020).
  prefs: []
  type: TYPE_NORMAL
- en: Following article 8 of the Framework Agreement on the Facilitation of Cross-Border
    Paperless Trade in the Asia-Pacific Region (FA-CPT, 2016) and the Explanatory
    Note to the Framework Agreement on Assistance from One Country to Another, depending
    on national laws, a widely used and legally recognized form of ES is digital signatures
    based on public-key cryptography. The document is signed with an ES using a secret
    key, which is in the exceptional ownership of the signatory and is checked using
    the relevant open key. After carrying out necessary verification, the certifying
    authority issues a DSC (Digital Signature Certificate) and acts to confirm the
    public key as a trust binding. In most countries, papers signed with the application
    of DSC, issued by a licensed certifying authority, are legitimately accepted.
    Nevertheless, a certifying authority acknowledged in one country may not be recognized
    in the other, which causes difficulties in a cross-border paperless transaction.
    Consequently, the certifying authorities must guarantee an essentially equal degree
    of safety.
  prefs: []
  type: TYPE_NORMAL
- en: 'The test of an essentially equal degree of safety is taken from article 12,
    paragraph 3, of the UNCITRAL Model Law on Electronic Signatures (UNCITRAL, 2001).
    It indicates for parties that information and papers will be acknowledged when
    they ensure a degree of safety identical to, though not similar to, the degree
    of security of the recognizers. The parties should mutually agree upon an essentially
    equal degree of protection. Let''s define the factors that could be taken into
    account when evaluating the degree of safety (Methodology, 2017):'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Availability of financial and man resources and funds of trusted services
    provider;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Reliability of used equipment and program systems;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Security and vulnerability of the algorithm and/or mechanism used for the
    ES;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4\. Procedures for handling ES certificate, certificate request, and storing
    corresponding records;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. The ability of subscribers and/or relied upon parties to access the information;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6\. The regularity and scope of inspections conducted by an autonomous authority;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7\. Needs, benefits, and challenges of mutual recognition.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Green Corridor Project between Russia and the EU
  prefs: []
  type: TYPE_NORMAL
- en: Green Corridor Project is based on the use of Trusted Third Party (ITU-T, 2002).
    The customs authorities of the EU countries want to be sure that the goods exported
    from the EAEU be imported into the EU in the same form in which they left the
    territory of the EAEU. An available option is to send an export declaration with
    a note on the export of goods from the EAEU.
  prefs: []
  type: TYPE_NORMAL
- en: The customs representative receives the relevant export declarations from the
    customers and sends them in electronic form (XML format) through the information
    integrator to the customs office before the vehicle arrives at the point where
    the cargo will carry out the customs clearance cargo be carried out.
  prefs: []
  type: TYPE_NORMAL
- en: When checking the import declaration, the customs inspector contains the information
    in the import declaration with the data from the export declaration. In case of
    their compliance, customs clearance and release of goods take place in a simplified
    form for a minimum period.
  prefs: []
  type: TYPE_NORMAL
- en: To realize the project is used customs control tower (CCT) (Figure 3).
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 3\. Customs control tower (CCT) |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f03](i/ch005.f03.png) |'
  prefs: []
  type: TYPE_TB
- en: CCT is designed to integrate customs systems of different countries to monitor
    customs operations and use data to process import, export, and transit procedures.
    It is a highly automated system for exchanging data and documents on a blockchain
    platform between all participants in the supply chain, including government and
    supervisory authorities. The DVCS oracle mechanism verifies all data entering
    the blockchain. Integration of data received from participants of foreign economic
    activity with data of transport management systems (TMS) and warehouse complexes
    is carried out only after verification of electronic signatures by DVCS oracle.
    Thus, trusted CCT data allows you to control the supply chain using all modes
    of transport entirely. The system can be connected to other platforms using Application
    Programming Interface (API), Electronic Data Interchange (EDI), and two-way automation
    and control. CCT will provide direct interaction with local customs software in
    all European countries and around the world. Figure 4 presents an existing process
    of document exchange.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 4\. The Standard scheme of interaction |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f04](i/ch005.f04.png) |'
  prefs: []
  type: TYPE_TB
- en: The proposed scheme of interaction (Figure 5) supports the one-time provision
    of information and documents. This MRM provides smooth and transparent cross-border
    electronic data and e-documents exchange.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 5\. Proposed MRM based on DVCS oracle for interaction |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f05](i/ch005.f05.png) |'
  prefs: []
  type: TYPE_TB
- en: 'The following way should conduct realization of mutual recognition mechanism:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Creation and submission to the customs authorities of the Russian Federation
    of a transit/export declaration by the sender or his customs representative in
    the Russian Federation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Transfer the export declaration in XML format to the information integrator
    to verify the integrity of the digital signature, thereby DVCS oracle. If necessary,
    transfer other formalized documents for verification and confirmation of the EDS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Verification of the validity of the ES of the customs authority of the Russian
    Federation by the information integrator.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4\. Transfer data to the EU customs authorities (set “export declaration in
    XML + receipt with the results of the ES check” issued by DVCS oracle).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Transfer the export declaration in XML to the Customs Control Tower for
    subsequent transmission to the customs representative in the EU.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6\. If necessary, add to the information exchange data about the electronic
    navigation seal placed on the container or cargo compartment of the vehicle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7\. Processing information in the Customs Control Tower and transferring it
    to the EU unit for import/transit declaration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8\. Submission of the import/transit declaration by the recipient or their customs
    representative in the EU.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 9\. The EU Customs Authority compares the information specified in the export
    declaration and the import/transit declaration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 10\. The EU Customs authority decides on the release/transit of goods; the Customs
    Control Tower and the customs representative receive this information.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 11\. In case of refusal to release/transit – standard forms of control are applied
    (request additional documents, inspection, and sampling).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This MRM allows minimizing customs risks and simplified customs clearance. The
    green corridor project is based on the principle of one-time information provision
    about products and provides transparency for the entire supply chain and traceability
    of goods.
  prefs: []
  type: TYPE_NORMAL
- en: Software Package Litoria DVCS Oracle
  prefs: []
  type: TYPE_NORMAL
- en: The software package Litoria DVCS Oracle (SP Litoria DVCS Oracle) (Software,
    2017) checks the ES and the validity of the ES verification key certificate. SP
    Litoria DVCS Oracle enables the user to make a check request, parse such a request,
    and create an answer containing the check result.
  prefs: []
  type: TYPE_NORMAL
- en: The main task of SP Litoria DVCS Oracle is to offer ES check service for interagency
    and international data exchange of participants in the conditions of ensuring
    the integrity and reliability of ED’s and their ES’s. (Software, 2013).
  prefs: []
  type: TYPE_NORMAL
- en: 'The following functions are implemented in the SP Litoria DVCS Oracle:'
  prefs: []
  type: TYPE_NORMAL
- en: '1\. Creation of all DVCS requests (following RFC3029) To perform this task:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. Certification of Possession of Data (cpd);
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. Certification of Claim of Possession of Data without providing it to the
    service (ccpd);
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. Verification of Signed Document (vsd);
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: d. Verification of Public Key Certificates (vpkc).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Verification of every contained information in the query.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '3\. Creation:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. timestamps,
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. DVC answers and their analyses conform to the RFC 3029.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '4\. Archive and store in memory:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. user’s data,
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. serial numbers creation to DVC-receipts,
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. audit of log file events on the SP Litoria DOCS Oracle authentication server
    includes the event's kind, time, and date.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '5\. Providing the designer with program tools that ease the creation of customer
    apps, such as:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a. customer service SDK DVCS is a program component, including libraries (C#
    and C++) that are used when creating apps using the functionality of the service
    DVCS;
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. Customer service SDK TSP is a program component including libraries (C# and
    C++) used to create apps using the timestamps following RFC3161.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'During the development of the SP, the following regulatory documents were used:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. RFC3029 “Internet X.509 Public Key Infrastructure Data Validation and Certification
    Server Protocols (DVCS)”;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. RFC3161 “Internet X.509 Public Key Infrastructure Time-Stamp Protocol (TSP)
    “;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. RFC6960 “Internet X.509 Public Key Infrastructure Online Certificate Status
    Protocol – OCSP”.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following components are included in the PC:'
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Authentication Service (DVCS);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Time Stamp Service (TSP);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6\. SDK client for DVCS service;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7\. SDK client for TSP service;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8\. Administrator automated workplace.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The block diagram of the interaction of the SP Litoria DVCS Oracle components
    is illustrated in Figure 6.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 6\. The block diagram of the interaction of the SP Litoria DVCS oracle
    components |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8697-6.ch005.f06](i/ch005.f06.png) |'
  prefs: []
  type: TYPE_TB
- en: 'The main component of the SP Litoria DVCS Oracle is the web authentication
    service, which operates on the authentication server platform, and performs:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Processing DVCS requests following RFC 3029 (VSD, VPKC, CPD, CPD).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Formation of DVCS responses based on the results obtained during authentication.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. Construction of DVC receipts using electronically signed DVCS responses.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4\. Search and issue of DVC receipts generated for previously received DVCS
    requests.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Forming and sending a request to the time stamp server.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CONCLUSION
  prefs: []
  type: TYPE_NORMAL
- en: 'The chapter begins with a review of the principles of building traditional
    supply chains using blockchain technology. These supply chains are built according
    to a four-level scheme, including the following levels: physical flows, information
    flows, a blockchain platform, and the level of smart contracts. The authors substantiate
    the need for an additional MRM to ensure secure cross-border interchange of lawfully
    relevant ED''s. The authors propose a theoretical model for the design of the
    MRM based on the DVCS Oracle.'
  prefs: []
  type: TYPE_NORMAL
- en: Mutual recognition based on the principles proposed by the authors will provide
    an uninterrupted, transparent, and trusted environment for the cross-border interchange
    of information and papers in e-form. The introduction of MRM will assist in easing
    interaction and ensuring confidence between parties involved in ED-interchange
    in global supply chains.
  prefs: []
  type: TYPE_NORMAL
- en: Mutual acknowledgment considering the varying technological, legislative, and
    administrative circumstances in different countries poses considerable challenges
    that could be surmounted by establishing confidence that would guarantee the cross-border
    interchange of information and paper in e-form between countries. A TTP whose
    role is performed by a DVCS oracle creates this trust. MRM based on DVCS oracle
    allows you to verify electronic data interchanged among countries whenever the
    PKI uses various, conflicting cryptographic standards.
  prefs: []
  type: TYPE_NORMAL
- en: The paramount need for mutual recognition is to develop an opportunity to interchange
    trade-related information and paper in e-form over borders among various countries
    with varying technological approaches and within other jurisdictions. MRM, presented
    by the Green Corridor project, allows you to overcome all obstacles and provide
    uninterrupted data exchange.
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs: []
  type: TYPE_NORMAL
- en: 'Chris, J. S. (2017). Who will be killed by blockchain: 4 small business areas
    that will soon disappear. https://incrussia.ru/understand/kogo-ubet-blokchejn-4-sfery-malogo-biznesa-kotorye-skoro-ischeznut/'
  prefs: []
  type: TYPE_NORMAL
- en: Dannen, K. (2018). Introduction to Ethereum and Solidity . Samizdat.
  prefs: []
  type: TYPE_NORMAL
- en: Framework Agreement on Facilitation of Cross-Border Paperless Trade in Asia
    and the Pacific (FA-CPT). (2016). Economic and Social Commission for Asia and
    the Pacific, E/ESCAP/RES/72/4.
  prefs: []
  type: TYPE_NORMAL
- en: 'Internet, X. (2001). 509 Public Key Infrastructure. Data Validation and Certification
    Server Protocols. Network Working Group Request for Comments: 3029\. https://www.ipa.go.jp/security/rfc/RFC3029EN.html'
  prefs: []
  type: TYPE_NORMAL
- en: ITU-T. (2002). Recommendation X.842 information technology security techniques
    guidelines for the use and management of trusted third party services. https://www.itu.int/rec/T-REC-X.842
  prefs: []
  type: TYPE_NORMAL
- en: Kupriyanovsky, V., Namiot, D., & Sinyagov, S. (2016). Cyber-physical systems
    as a base for the digital economy. International Journal of Open Information Technologies,
    4(2), 18-25.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kustov, V. N., & Domrachev, A. A. (2011). Transboundary Trust Space as a Component
    of an International E-Commerce Soft-Infrastructure. APEC PROJECT Supply Chain
    Connectivity: e-Commerce as the Main Driver and Integration Too, 85-96.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kustov, V. N., & Silanteva, E. S. (2020). Mutual recognition mechanism of legally
    significant e-documents and data in the cross-border document flow. Journal of
    Physics: Conference Series , 1703(1), 012011\. doi:10.1088/1742-6596/1703/1/012011'
  prefs: []
  type: TYPE_NORMAL
- en: Kustov, V. N., & Stankevich, T. L. (2018). Once Again, about Blockchain Technology.
    J. Intellectual Technologies on Transport , (3), 38–46.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kustov, V. N., & Stankevich, T. L. (2018). Blockchain Prospects: a Dialogue
    between a Skeptic and an Optimist. Bulletin of Scientific Conferences, 1(37),
    77-84.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kustov, V. N., & Stankevich, T. L. (2019). Blockchain Technology: a Story of
    Ingenious Simplicity or Enlightened Thinking. How to protect yourself from blockchain?
    J. Information Protection, 2(86), 11-18.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Methodology of formation of transboundary trust environment and the requirements
    for its creation, functioning and development. (2017). XXIII International Conference
    on Soft Computing and Measurement (SCM''2020) Journal of Physics: Conference Series.
    https://www.unescap.org/resources/methodology-formation-transboundary-trustenvironment-and-requirements-its-creation-0/'
  prefs: []
  type: TYPE_NORMAL
- en: Network Working Group. (2013). Request for Comments 6960 Internet X.509 Public
    Key Infrastructure Online Certificate Status Protocol – OCSP. https://tools.ietf.org/html/rfc6960/
  prefs: []
  type: TYPE_NORMAL
- en: OASIS Digital Signature Services eXtended (DSS-X) TC. (2007). https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss-x
  prefs: []
  type: TYPE_NORMAL
- en: Report of the company Positive Technologies. (2019). Initial Coin Offering.
    Threats to information security. https://www.ptsecurity.com/upload/corporate/ru-ru/analytics/ICO-Threats-rus.pdf
  prefs: []
  type: TYPE_NORMAL
- en: Satoshi, N. (2008). Bitcoin. A Peer-to-Peer Electronic Cash System. https://bitcoin.org/bitcoin.pdf
  prefs: []
  type: TYPE_NORMAL
- en: Shapiev, M. M. (2019). Vulnerabilities of smart contracts and ways of their
    exploitation. Scientific Electronic Journal “Meridian”, 10(28), 1-5.
  prefs: []
  type: TYPE_NORMAL
- en: 'Silanteva, E. S., & Kustov, V. N. (2020). Technological aspects of the trust
    in the cross-border paperless exchange . Journal of Physics: Conference Series
    , 1703(1), 012049\. doi:10.1088/1742-6596/1703/1/012049'
  prefs: []
  type: TYPE_NORMAL
- en: Software Electronic Signatures and Infrastructures (ESI) Policy requirements
    for certification authorities issuing public-key certificates. (2013). https://www.etsi.org/deliver/etsi_ts/102000_102099/102042/02.04.01_60/ts_102042v020401
    p.pdf
  prefs: []
  type: TYPE_NORMAL
- en: 'Swan, M. (2018). Blockchain: The scheme of a new economy. Olymp-Business Publishing
    House.'
  prefs: []
  type: TYPE_NORMAL
- en: TBG17 CCL (Core Component Library). (2020). Submission Guidelines and Procedures.
    UN/CEFACT/TBG17/N004 Draft Version 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: The software package “Trusted Third Party Services “Litoria DVCS.” (2017). Program
    Description, 72410666.00044-01 13 01, 36 p.
  prefs: []
  type: TYPE_NORMAL
- en: Trade data element Directory (TDED) UNTDED. (2005). ISO 7372:2005, Vol. 1 Data
    Elements.
  prefs: []
  type: TYPE_NORMAL
- en: UN ESCAP. (2016). Framework Agreement on Facilitation of Cross-border Paperless
    Trade in Asia and the Pacific. https://treaties.un.org/doc/source/docs/ESCAP_RES_72_4-E.pdf
  prefs: []
  type: TYPE_NORMAL
- en: UNCITRAL. (2001). Model Law on Electronic Signatures. https://uncitral.un.org/en/texts/ecommerce/modellaw/electronic_signatures/
  prefs: []
  type: TYPE_NORMAL
- en: White Paper on a Reference Data Model. (2017). Centre for Trade Facilitation
    and Electronic Business, Twenty-third session.
  prefs: []
  type: TYPE_NORMAL
- en: XML Key Management Specification (XKMS 2.0). (2005). Version 2.0 W3C Recommendation.
    https://www.w3.org/TR/xkms2/
  prefs: []
  type: TYPE_NORMAL
