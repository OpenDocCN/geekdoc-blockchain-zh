- en: 'Chapter 1: JavaScript for BeginnersBefore you can begin learning how to code,
    there are some Prerequisites. You have to at least have a basic knowledge of HTML
    and CSS.HTML stands for Hypertext Markup language. It is not considered a programming
    language. Like its name suggests, it is a Markup language that is used when structuring
    a web page. At its core, it is a very simple language that incorporates the elements
    applied to text to give it a distinct meaning. You can use these elements to wrap,
    markup or enclose components on your page and make them look or act a particular
    way. It can determine whether the text in your document comes in the form of a
    paragraph, has bullet points or comes in the form of a table. It can also embed
    pictures and videos onto your page.When you go on to any website, a number of
    files are dished out to you. At a rudimentary level your website will present
    you with an HTML page and a script.js page. The HTML page is the bare bones of
    the web page. It tells the browser what to show and where everything goes. So
    if there needs to be a title at the top, a paragraph in the middle and a picture
    at the bottom, the HTML file is responsible for relaying that information to the
    browser. This is all well and good but it’s very limiting because the page will
    always be static and the data cannot change. That’s where JavaScript comes in.
    JavaScript is able to manipulate the appearance of the website by accessing the
    DOM. DOM stands for Document Object Model. It tells JavaScript what is on the
    page and then allows it to make changes to elements of the page. DOM makes it
    easier to read, access and obtain the content of an HTML document. If we break
    it down even further, the Document is the HTML file, the object is the tags and
    elements within the HTML file and the Model is the Layout or structure. Without
    DOM, JavaScript would not have a perception of any of the elements on a web page
    and would therefore not be able to change or manipulate them. The DOM information
    is available through an API. API stands for Application Programming Interface.
    It basically gives JavaScript an opening to control things on the HTML page. The
    API acts as the go between for JavaScript and HTML.HTML syntax is simply the way
    HTML is written. HTML elements are structured a certain way; they are made up
    of the opening tag, the content and the closing tag. The opening tag is where
    the element commences. Visually, it is the name of the element wrapped in opening
    and closing angle brackets. For example, when your element is a paragraph, the
    opening tag would look like this:  <p>. The content of the element goes in the
    middle, in this case, it would be the text in the paragraph. The closing tag marks
    where the element ends. It is similar to the opening tag, but it has a forward
    slash after the first bracket. In this case it would look like this:  </p>. If
    you forget to insert the forward slash or fail to include the closing tag altogether,
    you may not achieve the desired results.Elements are split into two categories,
    namely: Block level and inline elements. Block-level elements create blocks that
    you can actually see on a page, they take up the full width of a web page by creating
    a line break. Inline elements take up only as much as they need and are able to
    add content to a page without any line breaks.CSS or Cascading Style Sheets is
    a styling language used for describing the appearance of a document written in
    HTML. It is used in the formatting and layout of web pages. It is basically responsible
    for making your web page look really good. CSS syntax is pretty straightforward.
    The first part of the syntax is the selector, it is followed by opening and closing
    curly brackets. The brackets are used to show the start and the end of the style
    that is going to be applied to the selector. It can look something like this:
    selector { property1: value;}. Property refers to color, size or length, while
    value refers to the text or image the property is being applied to.SyntaxIn order
    to execute JavaScript, we have to put statements inside of script HTML tags on
    a web page. For example: <script> JavaScript code </script>. The script tags are
    made up of two properties:➔       LanguageDefines the scripting language you are
    working with. The value will always be JavaScript.➔       TypeStipulates the scripting
    language being used and should always be set to ‘text/javascript’.Your segment
    will look like this:<script language = “javascript” type = “text/javascript”>
    JavaScript code </script>  (JavaScript - Syntax, n.d.)You have complete freedom
    to use spaces, tabs and newlines in your program, you can also format and indent
    your code in a way that is simple to read and understand for you, but JavaScript
    ignores these things. In JavaScript, simple statements are usually followed by
    a semicolon, but you have the choice to omit it if your statements are written
    on different lines.If your statement looks like this:<script language = “javascript”
    type = “text/javascript”><! - -​var1=20​var2=30// -–></script>  (JavaScript -
    Syntax, n.d.)You can write it without semicolons. When your statement is written
    in a single line format and looks like this:<script language = “javascript” type
    = “text/javascript”><! --​var1=20; var2=30;// -–></script>  (JavaScript - Syntax,
    n.d.)Then you must make use of semicolons.JavaScript is case sensitive, all variables
    and other identifiers must be written in all caps.Comments in JavaScript are used
    to add notes to your code, or deactivate portions of the code without fully removing
    them. We produce comments by putting a forward slash before a single line or adding
    a forward slash followed by an asterisk after several lines. Commenting on code
    is a core feature of a lot of programming languages.Here is an example of how
    to use comments in JavaScript:<script language = “javascript” type = “text/javascript”><!
    --​//comment​/*​*multi-line comment​*multi-line comment line 2​*///-- ></script>  (JavaScript
    - Syntax, n.d.)When a user operates a web page, JavaScript and HTML interact,
    this is called an Event. That means that any and all actions performed on a web
    page are an event. Developers code responses to all events. So if you scroll over
    any of the windows on your browser, and you see the name of the website and web
    address, that is a response to an event. There are many event types, two of them
    being:Onload - The Onload event gets activated when the page loadsOnmouseover
    - Is activated when the cursor moves on or around an elementJavaScript in BrowsersJavaScript
    is supported on all current browsers, but sometimes you may have to manually enable
    or disable it. This is how you manage it on each different browser:Firefox:● Open
    a new tab, select the address bar and then type in: ‘about: config’● The warning
    page will appear, accept the risk and continue● The list of configure options
    will appear in the browser●     Go to the search bar and type in javascript.enabled●
    The toggle will appear and you will be able to switch between disabled and enabled
    as you please.Chrome:● Click on the menu in the top right hand corner●     Click
    on settings● Go down to the end of the page and click on Show advanced settings●
    Go to the privacy section and click on the content settings button● There you
    will find the JavaScript section, you will have the option to either allow or
    disallow sites to run JavaScript.Edge:●     Click the settings and more button●     Select
    settings●     Find the JavaScript section● Choose whether to enable or disable
    JavaScript with the toggleHow to Get Started Writing JavaScriptThere are three
    methods of writing JavaScript. The first, is to write it directly into the Browser.
    This is the easiest way because you don’t need to set anything up and you can
    get started by trying out some simple comments. The downside is that if you refresh
    the page, the code will disappear and you will have to start from scratch. You
    can also only execute one command at a time.If you are developing, you are going
    to need to be able to save your code and execute multiple commands at any given
    time. For that you are going to want to write JavaScript in a simple text file
    and then send it to the browser to execute. Browsers accept files with the extension
    .html. You can create HTML files with Notepad in windows and with Textedit on
    Mac. Once you have written your code into the file, you need to change the format
    to HTML. You can achieve this by selecting the html extension when saving.Even
    though you can write multiple lines of code and include various comments and variables,
    there are some disadvantages to using a simple text editor. You have to be extremely
    meticulous because they don’t help you in writing code. Keywords are not highlighted,
    syntax errors cannot be detected and code completion is completely up to you.Another
    way you can write your code is with Special Code Editors. Special Code Editors
    support various programming languages and have specialized features to help you
    write your code. They highlight different keywords and alert you when there is
    a syntax error. An editor that is available for free online is Visual Studio Code.When
    you are coding, you can put your code anywhere on the file, but the most popular
    way to do it is either in the head or the body. We put script in the head section
    if we want it to run when a user clicks on something. It will look something like
    this:<html><head>​<script type = “text/javascript”>​< ! - -​function sayHello()
    {​alert(“Hi there testing”)​}​//- - >​</script>​</head><body>​<input type = “button”
    onclick = “sayHello()” value = “Say Hello”</body><html>  (JavaScript - Syntax,
    n.d.)That code would produce a button, and once you click on that button there
    would be a pop up that says Hi there testing.Datatypes in JavaScriptData Types
    are the values that are supported by a programming language. In JavaScript you
    will work with six; Numbers, BigInt, Strings, Null, Undefined and Booleans.NumbersBefore
    we can understand the numbers value, we need to have an idea of what ECMAscript
    is. ECMA is a firm that sets standards for technology. ECMAScript is one of those
    standards. ECMAScript carries specifications for scripting languages, numbers
    and BigInt are built into it. JavaScript keeps to the ECMAScript specification.
    This means that when we are actually coding we make use of JavaScript and not
    ECMAScript. The number type is used to represent integer values and floating point
    values. Integers do not have decimal points, and floating numbers do.BigIntBigInt
    is an abbreviation for Big Integer. An integer is a whole number without decimals.
    This data type was created for JavaScript in early 2020 because the number data
    type was limited. When the script encountered numbers higher than 2^53 - 1 they
    tended to lack accuracy thus affecting the efficacy of applications.StringsA string
    is a chain of one or more symbols. It could include anything from letters to numbers.
    Strings are primitive which means they cannot change.NullNull is the value shown
    when there is no object.UndefinedA variable that can’t be identified by its characteristics
    becomes undefined in JavaScript. A lot of people are unsure what the difference
    between Null and Undefined is. Undefined is a variable that has no value, while
    null is an empty value assigned to a variable.BooleansBooleans only have two possible
    values. True or false. Boolean is usually used with conditional statements in
    JavaScript.Once you have a firm grasp on the Syntax and all the jargon, you’ll
    want to turn your attention to programming, because it’s the fun part, but it
    is also going to determine how your apps and websites turn out.'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章：初学者JavaScript在您开始学习编码之前，有一些先决条件。您至少需要对HTML和CSS有基本的了解。HTML代表超文本标记语言。它不被认为是一种编程语言。就像其名字所暗示的那样，它是在构造网页时使用的标记语言。它本质上是一种非常简单的语言，它包含应用于文本的元素，赋予其独特的含义。您可以使用这些元素来包装、标记或包含页面上的组件，并使它们以特定的方式显示或行为。它可以确定您文档中的文本是以段落形式呈现，还是具有项目符号，还是以表格的形式呈现。它还可以将图片和视频嵌入到您的页面中。当您访问任何网站时，会向您提供一些文件。在最基本的层面上，您的网站会向您呈现一个HTML页面和一个script.js页面。
    HTML页面是网页的骨架。 它告诉浏览器要显示什么以及所有内容的位置。 因此，如果需要在顶部有一个标题，在中间有一个段落，在底部有一张图片，HTML文件负责向浏览器传达这些信息。这一切都很好，但它非常有限，因为该页面将始终是静态的，数据无法更改。这就是JavaScript的作用。
    JavaScript能够通过访问DOM来操作网站的外观。 DOM代表文档对象模型。它告诉JavaScript页面上有什么，然后允许它对页面的元素进行更改。
    DOM使阅读、访问和获取HTML文档的内容变得更加容易。如果我们进一步拆分，文档是HTML文件，对象是HTML文件内的标签和元素，模型是布局或结构。 没有DOM，JavaScript将无法感知网页上的任何元素，因此也将无法更改或操纵它们。
    DOM信息可通过API获得。 API代表应用程序编程接口。它基本上为JavaScript提供了控制HTML页面元素的开放接口。 API是JavaScript与HTML之间的桥梁。
    对于HTML语法，它只是HTML的书写方式。 HTML元素有特定的结构； 它们由起始标记、内容和结束标记组成。 起始标记用于标识元素的开始。 从视觉上看，它是用尖括号包围的元素名称。
    例如，当您的元素是一个段落时，起始标记将如下所示：<p>。 元素的内容放在中间，本例中将是段落中的文本。 结束标记标志着元素的结束。 它类似于起始标记，但在第一个尖括号之后有一个斜杠。
    在本例中将类似这样：</p>。 如果忘记插入斜杠或忘记包括结束标记，可能无法获得期望的结果。 元素分为两类，即块级元素和内联元素。 块级元素创建可在页面上实际看到的块，它们通过创建换行来占据整个网页的宽度。
    内联元素只占用其所需的空间，并且能够在不产生换行的情况下向页面添加内容。 CSS或层叠样式表是用于描述HTML文档外观的样式语言。 它用于网页的格式和布局。
    它基本上负责使您的网页看起来非常好。 CSS语法非常简单。 语法的第一部分是选择器，其后是一对大括号。 这对大括号用于显示将应用于选择器的样式的开始和结束。
    它可能如下所示：选择器{属性1：值;}。 属性指的是颜色、大小或长度，而值指的是应用属性的文本或图像。为了执行JavaScript，我们必须将语句放入Web页面上的script
    HTML标记中。 例如：<script> JavaScript代码</ script>。 脚本标记由两个属性组成：语言定义您使用的脚本语言。 值将始终是JavaScript。
    类型规定所使用的脚本语言，应始终设置为'text/javascript'。 您的片段将如下所示： <script language=”javascript”
    type=”text/javascript”> JavaScript代码</script>（JavaScript - Syntax，无日期）您可以完全自由地在程序中使用空格，制表符和换行符，也可以以便于您阅读和理解的简单方式格式化和排列代码，但是JavaScript会忽略这些内容。
    在JavaScript中，简单语句通常后跟一个分号，但如果您的语句写在不同行上，则可以选择省略它。如果您的语句如下所示： <script language=”javascript”
    type=”text/javascript”><! - - var1=20 var2=30 //- –></script>（JavaScript - Syntax，无日期）您可以不使用分号。
    当您的语句以单行格式编写，并且如下所示时：<script language=”javascript” type=”text/javascript”><! --
    var1=20; var2=30;// - –></script>（JavaScript - Syntax，无日期）则必须使用分号。JavaScript区分大小写，所有变量和其他标识符都必须使用大写字母编写。
    JavaScript中的注释用于在代码中添加注释，或者在不完全删除代码的情况下禁用部分代码。 我们通过在单行之前放置一个正斜杠或在多行之后添加一个正斜杠后跟一个星号来创建注释。
    在许多编程语言中，对代码进行注释是一个核心功能。以下是如何在JavaScript中使用注释的示例：<script language=”javascript”
    type=”text/javascript”><! -- //comment /* *multi-line comment *multi-line comment
    line 2 *///-- ></script>（JavaScript - Syntax，无日期）当用户操作网页时，JavaScript和HTML会互动，这称为事件。
    这意味着在网页上执行的任何和所有操作都是事件。 开发人员对所有事件编码响应。 因此，如果您在浏览器上滚动任何窗口，看到网站的名称和网址，那就是对某个事件的响应。
    有许多事件类型，其中两种是：Onload-页面加载时激活的Onmouseover-光标移动到元素上或周围时激活的JavaScript在浏览器中JavaScript受到所有当前浏览器的支持，但有时您可能需要手动启用或禁用它。
    这是您在每个不同浏览器上管理它的方式：Firefox：●打开新选项卡，选择地址栏，然后键入：'about：config'●将出现警告页面，请接受风险并继续●浏览器中将显示配置选项列表●在搜索栏中键入javascript.enabled●开关将出现，并且您可以随意切换启用和禁用Chrome之间：●单击右上角的菜单●单击设置●转到页底，单击显示高级设置●转到隐私部分，并单击内容设置按钮●在那里找到JavaScript部分，您将有选择允许或禁止站点运行JavaScript的选项Edge：●点击“设置和更多”按钮●选择设置●找到JavaScript部分●选择是否启用或禁用JavaScript的开关如何开始编写JavaScript有三种编写JavaScript的方法。首先，是直接将其写入浏览器。
    这是最简单的方法，因为您不需要设置任何东西，可以通过尝试一些简单的命令来开始。 缺点是，如果刷新页面，代码将消失，您将不得不重新开始。 您还只能每次执行一个命令。如果您在开发，那么您需要能够保存代码并在任何给定时间执行多个命令。
    为此，您将希望将JavaScript写在一个简单的文本文件中，然后将其发送到浏览器以执行。 浏览器接受扩展名为.html的文件。 您可以使用Windows上的Notepad和Mac上的Textedit创建HTML文件。
    一旦您把代码写入文件中，您需要将格式更改为HTML。 您可以在保存时选择html扩展名来实现此目标。尽管您可以写多行代码并包括各种注释和变量，但使用简单的文本编辑器也有一些缺点。
    您必须非常细心，因为它们不帮助您编写代码。 关键字没有突出显示，语法错误无法检测，代码完成完全取决于您。您可以编写代码的另一种方法是使用特殊代码编辑器。 特殊代码编辑器支持各种编程语言，并具有专门的功能来帮助您编写代码。
    它们可以突出显示不同的关键字，并在有语法错误时提醒您。 在线免费编辑器是Visual Studio Code。进行编码时，您可以将代码放在文件的任何位置，但最常用的方法是放在head或body中。
    我们将脚本放在head节中，如果我们要在用户点击某些东西时运行它。 它将如下所示：<html><head><script type=”text/javascript”>
    < ! --function sayHello() {alert(“你好，这里是测试”)}- - ></script></head><body><input
    type=”button” onclick=”sayHello()” value=”say hello”></body><html>(JavaScript-Syntax，n.d.)那段代码会生成一个按钮，点击一次该按钮，就会弹出一个对话框，内容为“你好，这里是测试”。”JavaScript中的数据类型数据类型是编程语言支持的值。
    在JavaScript中，您将使用六种数据类型； 数字、BigInt、字符串、Null、未定义和布尔值。数字在了解数字值之前，我们需要对ECMAScript有所了解。
    ECMA是为技术制定标准的公司。 ECMAScript是这些标准之一。 ECMAScript携带脚本语言、数字和BigInt的规范。 JavaScript遵循ECMAScript规范。
    这意味着在实际编码时，我们使用的是JavaScript而不是ECMAScript。数字类型用于表示整数值和浮点值。 整数没有小数点，浮点数有。BigIntBigInt是Big
    Integer的缩写。 整数是没有小数点的整数。 在2020年初为JavaScript创建了这种数据类型，因为数字数据类型受限。 当脚本遇到大于2^53 -
    1的数字时，它们往往缺乏准确性，从而影响应用程序的有效性。字符串字符串是一个或多个符号的串联。 它可以包括任何内容，从字母到数字。 字符串是原始的，这意味着它们无法更改。空值当没有对象时显示NullNull。JavaScript中无法识别其特征的变量化现为空值。
    许多人不确定空值和未定义之间的区别。 未定义是一个没有值的变量，而null是分配给变量的空值。布尔值布尔只有两种可能的值。 真或假。 布尔通常与JavaScript中的条件语句一起使用。一旦您对语法和所有术语有了牢固的掌握，您就会想要把注意力转向编程，因为那是有趣的部分，但它也将决定您的应用程序和网站的最终效果。
