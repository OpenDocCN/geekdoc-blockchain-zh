- en: 4   Legal and Governance Use Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The legal industry will also be transformed and disrupted by blockchain technology
    and the associated scripting language and protocols known as *smart contracts*.
    As we have seen, this technology is already affecting the banking, financial services,
    and payments industries. They implement blockchain to facilitate transactions,
    save on fees, and approach instantaneous clearing of transactions. The fintech
    movement, which has embraced blockchain, is always looking to disrupt traditional
    banking models and the software that supports it to deliver increased convenience,
    efficiency for service consumers, reduced risk, and of course lower cost of operations
    for financial services providers. For too long, lawyers have been slow to adopt
    new technologies. This is all changing; lawyers need to understand how to communicate
    securely and protect their client data. In particular, they need to understand
    blockchain and smart contracts. The New York County Law Association as well as
    many bar associations nationwide provides legal technology education so their
    members can avoid potentially being at odds with the new American Bar Association
    (ABA) rules. ABA Model Rule 1.1, Comment 8 says:'
  prefs: []
  type: TYPE_NORMAL
- en: “To maintain the requisite knowledge and skill, a lawyer should keep abreast
    of changes in the law and its practice, including the benefits and risks associated
    with relevant technology, engage in continuing study and education and comply
    with all continuing legal education requirements to which the lawyer is subject.”
  prefs: []
  type: TYPE_NORMAL
- en: Only recently, in response to demand and new standards, have lawyers started
    to use and rely on computing and communications tools. For example, e-discovery
    software is now a standard used to search email, documents, and other artifacts
    in the litigation discovery process. This process as well as other legal procedures
    would be facilitated with blockchain, which is an immutable and virtually infinite
    log. Blockchain when it is universally accepted will obviate most evidentiary
    issues. One question is how to treat blockchain data as evidence. In the U.S.
    judicial system, the standard for admissibility of evidence turns on whether a
    human has sworn under penalty of perjury that the information is true.
  prefs: []
  type: TYPE_NORMAL
- en: Stand-alone documentary evidence is usually not admitted. It’s hearsay, “an
    out-of-court statement offered to prove the truth of the matter asserted.” For
    example, to submit evidence from government or other sources, we produce the artifact
    and attach an affidavit to attest that the artifact was kept in the usual course
    of business and that the information in the artifact is true, to the best of the
    custodian’s knowledge. Blockchain technology, an immutable log of events, will
    change the evidentiary rules. When we mature the technology both functionally
    and legally, blockchain can create a more efficient documentary evidence standard.
  prefs: []
  type: TYPE_NORMAL
- en: That said, law firms also are relatively weak in terms of information governance.
    Recent data break-ins at large law firms have resulted in stolen client information.
    Blockchain provides for use cases that can secure the information held in large
    law firms, especially contracts and other very confidential information. Futurists
    and technology vendors have already created the vision for how blockchain will
    change the way lawyers operate.
  prefs: []
  type: TYPE_NORMAL
- en: 'To put this in context, Janet Yellen, chair of the U.S. Federal Reserve at
    the time of this writing, recently said: “[blockchain] could have very significant
    implications for the payments system and the conduct of business […]. I think
    innovation using these technologies could be extremely helpful and bring benefits
    to society.” (See [www.thinkconsortium.com/](http://www.thinkconsortium.com/)
    on the topic “Think Consortium Blockchain, 2017 Outlook: Blockchain Impacts on
    Enterprise and Government.”)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *Harvard Business Review* in February 2017 had some thought-provoking insights:'
  prefs: []
  type: TYPE_NORMAL
- en: “Contracts, transactions and the records of them are among the defining structures
    in our economic, legal and political systems. They protect assets and set organizational
    boundaries. They establish and verify identities and chronological events. They
    govern interactions among nations, organizations, communities and individuals.
    They guide managerial and social action. And yet these critical tools and the
    bureaucracies formed to manage them have not kept up with the economy’s digital
    transformation. They’re like a rush-hour gridlock trapping a Formula 1 race car.
    In a digital world, the way we regulate and maintain administrative control has
    to change.” (See [https://hbr.org/2017/01/the-truth-about-blockchain](https://hbr.org/2017/01/the-truth-about-blockchain).)
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Changes the Legal Landscape
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: “Code is law,” as described in Lawrence Lessig’s book *Code and Other Laws of
    Cyberspace*, refers to the idea that computer code has progressively established
    itself as a predominant way to regulate behavior to the same degree as legal code.
    (See updates to these ideas on [http://codev2.cc//](http://codev2.cc//).) With
    the advent of blockchain technology, code is assuming an even stronger role in
    regulating people’s interactions. However, while computer code can enforce rules
    more efficiently than legal code, it also comes with a series of limitations.
    With vast regulatory implications, blockchain applications have already raised
    many legal questions as they offer new capabilities to engage activities in ways
    that don’t fit neatly into existing legal frameworks. Let’s drill down and examine
    blockchain and its varied intersections with the law.
  prefs: []
  type: TYPE_NORMAL
- en: Cryptocurrencies as Legal Tender
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Bitcoin, the world’s most recognizable digital currency, uses encryption techniques
    to regulate the generation of units of currency and verify the transfer of funds,
    operating independently of a central bank. This means that this money has not
    passed through a bank or other financial institution, nor has it been screened
    by any government agency. If you have a major transaction that is normally required
    to be reported, it simply isn’t. This leads to significant challenges, mostly
    concerning government regulators and current laws. As developers, it is important
    to at least be aware of this changing landscape.
  prefs: []
  type: TYPE_NORMAL
- en: 'As of late 2017, lots of new laws and regulations are being proposed and may
    be in place soon. That said, Bitcoin’s “monetary policy” is written into its code:
    New money is mined and issued every 10 minutes. The supply is limited, and a hard
    money rule similar to the gold standard is applied, i.e., the money supply is
    fixed to a commodity and not determined by government. In the United States, bitcoin
    is deemed a commodity as per the Commodity Futures Trading Commission (CFTC) (see
    [www.cftc.gov/](http://www.cftc.gov/)). The CFTC has jurisdiction over local bitcoin
    exchanges. For the first time ever, the CFTC has given permission to a private
    company to exchange and clear any number of cryptocurrency derivatives. The New
    York–based startup LedgerX was granted a derivatives clearing organization (DCO)
    license allowing it to clear and provide custodian services for financial instruments
    backed by bitcoin, ether, and any number of blockchain-based cryptocurrencies.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether or not it’s a currency under certain legislation might determine whether
    bitcoin transactions can be taxed (see [www.irs.gov/pub/irs-drop/n-14-21.pdf](http://www.irs.gov/pub/irs-drop/n-14-21.pdf)).
    When it comes to taxes, the Internal Revenue Service has ruled that bitcoins and
    other “convertible virtual currencies” are “treated as property” and not treated
    as currency. According to the IRS, virtual currencies are property for tax purposes:'
  prefs: []
  type: TYPE_NORMAL
- en: •   There is capital gain or loss when disposing of virtual currency.
  prefs: []
  type: TYPE_NORMAL
- en: •   Income is taxable, even if you are paid in virtual currency.
  prefs: []
  type: TYPE_NORMAL
- en: '•   Spending virtual currency is really two transactions in one: disposing
    of the virtual currency and spending the dollar-equivalent amount.'
  prefs: []
  type: TYPE_NORMAL
- en: •   Business transactions in bitcoin are subject to all the normal rules for
    sales tax, withholding, and information reporting.
  prefs: []
  type: TYPE_NORMAL
- en: 'The IRS definitions around virtual currency are:'
  prefs: []
  type: TYPE_NORMAL
- en: •   “Virtual currency is a digital representation of value that functions as
    a medium of exchange, a unit of account, and/or a store of value.”
  prefs: []
  type: TYPE_NORMAL
- en: •   Virtual currency “does not have legal tender status in any jurisdiction.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “Virtual currency that has an equivalent value in real currency, or that
    acts as a substitute for real currency, is referred to as ‘convertible’ virtual
    currency.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “Bitcoin is one example of a convertible virtual currency.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “Bitcoin can be digitally traded between users and can be purchased for,
    or exchanged into, U.S. dollars, Euros, and other real or virtual currencies.”
  prefs: []
  type: TYPE_NORMAL
- en: 'IRS tax treatment around virtual currency is:'
  prefs: []
  type: TYPE_NORMAL
- en: •   “For federal tax purposes, virtual currency is treated as property. General
    tax principles applicable to property transactions apply to transactions using
    virtual currency.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “A taxpayer who receives virtual currency as payment for goods or services
    must, in computing gross income, include the fair market value of the virtual
    currency, measured in U.S. dollars, as of the date that the virtual currency was
    received.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “Transactions using virtual currency must be reported in U.S. dollars” on
    the tax return.
  prefs: []
  type: TYPE_NORMAL
- en: •   “Taxpayers will be required to determine the fair market value of virtual
    currency in U.S. dollars as of the date of payment or receipt.”
  prefs: []
  type: TYPE_NORMAL
- en: •   “If a virtual currency is listed on an exchange and the exchange rate is
    established by market supply and demand, the fair market value of the virtual
    currency is determined by converting the virtual currency into U.S. dollars …
    at the exchange rate, in a reasonable manner that is consistently applied.”
  prefs: []
  type: TYPE_NORMAL
- en: At the state level, senators in Nevada have unanimously backed a proposal that
    would block local authorities from instituting taxes or fees on blockchain use
    (see [www.coindesk.com/nevada-senators-blockchain-tax-ban/](http://www.coindesk.com/nevada-senators-blockchain-tax-ban/)).
  prefs: []
  type: TYPE_NORMAL
- en: With respect to money laundering and other illegal monetary transactions, Bitcoin’s
    blockchain has remained somewhat resilient to attack, and it supports a robust
    payment system. But this doesn’t mean the people using this technology are always
    upstanding citizens. Blockchain actions are automated and fall outside of human
    legal action. So, despite their incentive structure flaws, mining pools account
    for more than 95 percent of Bitcoin’s computation power. An adversary with a tiny
    amount of computing power and capital can execute an attack against mining pools
    in which a malicious party pays pool members to withhold their solutions from
    their pool operator (see [https://eprint.iacr.org/2017/230.pdf](https://eprint.iacr.org/2017/230.pdf)).
  prefs: []
  type: TYPE_NORMAL
- en: In 2013, regulatory bodies responsible for preventing financial crimes introduced
    new regulations to bring Bitcoin within the scope of its enforcement. In 2013,
    22 Bitcoin companies and investors were subpoenaed by the New York Department
    of Financial Services (NYDFS), culminating in federal agents shutting down their
    operations. The Silk Road (see [https://silkroaddrugs.org/](https://silkroaddrugs.org/))
    also created a “Bitcoin is for criminals” narrative. The Silk Road illegal marketplace
    was accessible only via the “dark web,” an anonymous network that requires specialized
    software to use, such as the Tor browser. As Silk Road grew in popularity, so
    did recognition that bitcoins could be used for illicit activity, and so did the
    government’s interest in it. The government shut down Silk Road and many other
    bitcoin operations.
  prefs: []
  type: TYPE_NORMAL
- en: Lawmakers in West Virginia have deemed it a felony to use bitcoins or other
    cryptocurrencies for money laundering, with an update to the state’s anti–money
    laundering (AML) statutes. The law specifically created a definition for cryptocurrency
    that is recognized as a “monetary instrument” in the state. Striking the right
    balance in these new regulations to promote growth but stifle illegal activity
    is a continuing challenge. See the Uniform Regulation of Virtual-Currency Businesses
    Act ([www.uniformlaws.org/](https://www.uniformlaws.org/)), which will give you
    an idea of how many of these challenges there are.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned, one of the key innovations of Bitcoin and other virtual currencies
    is the ability to transact pseudonymously. Most virtual currency transactions
    do not require the transacting parties to know each other, meet face-to-face,
    or directly interact to exchange value. Florida House Bill 1379 (flsenate.gov/Session/Bill/2017/01379)
    defines virtual currency and prohibits its use in laundering criminal proceeds.
    The bill adds the term “virtual currency” to the definition of “monetary instruments”
    under Florida’s Money Laundering Act. The act defines digital currency as a “medium
    of exchange in electronic or digital format that is not a coin or currency of
    the United States or any other country.” Previously, the act only applied money
    laundering to legacy financial transactions of various types, including bank deposits,
    investments, and wire transfers. The resulting outcome is that criminals using
    cryptocurrencies will be charged with money laundering as well as the underlying
    criminal activity. In most countries, financial services need to comply with rules
    pertaining to “know your customer” (KYC) and AML. Over time, blockchains and various
    new payment networks will not be exempt from such requirements. As such, some
    countries have severely restricted or even banned cryptocurrencies.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain and Privacy Laws
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Blockchain, like any formal ledger, will become the official record for tracking
    the history and validity of transactions and other information. That record will
    effectively be visible to all, even though individual elements of the transactions
    are encrypted and not publicly visible. Here, the division of what information
    is public and what is private on a blockchain is especially interesting.
  prefs: []
  type: TYPE_NORMAL
- en: For example, your passport or other identity information might be securely encrypted,
    but the proof of the validation could be used publicly on a blockchain to prove
    that you are you for purposes of that transaction, without revealing the underlying
    private data. To that end, the startup ObjectTech ([http://objecttechgroup.com](http://objecttechgroup.com))
    provides a digitized passport that incorporates a feature called self-sovereign
    identity for privacy protection, which it claims allows passengers to control
    which parties can view their passport information.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to these typical technology issues, the sale of illegal goods has
    also put a dark cloud over the blockchain cryptocurrency Bitcoin. Public or unpermissioned
    blockchains provide an opportunity for nefarious transactions such as facilitating
    the sale of illegal goods and supporting the ransomware payment model, given the
    anonymous nature of participants. Blockchains could raise challenges where financial
    institutions are forced to comply with certain privacy laws. Some financial organizations
    are required by law to be able to permanently remove data when required to do
    so by a court. As of late 2017, the United States with its patchwork of privacy
    legislation has not determined how blockchain will be regulated. With respect
    to protected health information we are not sure how blockchain technology will
    match with privacy and security rules under the Health Insurance Portability and
    Accountability Act of 1996 (HIPAA/HITECH, U.S. Public Law 104–191). The soon to
    be enacted European privacy “right to be forgotten” laws will also present a challenge.
    Data privacy legislation in Europe as of May 2018 will be dictated by the EU General
    Data Protection Regulation (GDPR). The GDPR’s “right to erasure” presents issues
    that need to be addressed when personal information is stored in blockchain-based
    storage systems like IPFS, which was discussed in [Chapter 3](ch3.xhtml#ch3).
    We will need to consider some of the following issues. Information stored in blockchain
    cannot be altered or deleted once added. Any application will need to address
    how to comply with the data protection principles of accuracy and an individual’s
    right to correct data; see GDPR Rec. 39; Art. 5(1)(e).
  prefs: []
  type: TYPE_NORMAL
- en: “Personal data must be kept in a form that permits identification of data subjects
    for no longer than is necessary for the purposes for which the personal data are
    processed. Personal data may be stored for longer periods insofar as the data
    will be processed solely for archiving purposes in the public interest, or scientific,
    historical, or statistical purposes in accordance with Art. 89(1) and subject
    to the implementation of appropriate safeguards.”
  prefs: []
  type: TYPE_NORMAL
- en: Assuming personal information is encrypted before it is written to a blockchain,
    destroying the key renders the data unreadable. Is this enough to comply with
    the GDPR if the data is technically still there? The destruction of a key as an
    erasure for the purposes of the GDPR should probably suffice so long as the destruction
    is done in accordance with best practices and in an auditable way.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another risk exists where blockchain applications are implemented across multiple
    jurisdictions without a single entity responsible for their operation in any jurisdiction.
    Any application will need to address cross-border data flows, and wider legal
    questions of enforceability, liability, dispute resolution, discovery, and extraterritorial
    application. An amended Rule 41 of the Federal Rules of Criminal Procedure by
    the United States Department of Justice facilitates U.S. law enforcement and intelligence
    agencies to get authorization to hack into Americans computers and electronic
    communications devices. The U.S. has many diplomatic arrangements in place with
    other countries to cooperate in investigations that cross national borders, including
    Mutual Legal Assistance Treaties (MLATs). The new version permits a federal judge
    to approve a single warrant for accessing multiple computers remotely. This amended
    Rule 41 ignores the fact that “remotely” could mean in a different country. This
    clearly has some serious implications for blockchain-based storage services providers
    operating overseas and their customers, as blockchain can be regarded as anonymizing
    technology. This FRCP Rule 41 states:'
  prefs: []
  type: TYPE_NORMAL
- en: FEDERAL RULES OF CRIMINAL PROCEDURE
  prefs: []
  type: TYPE_NORMAL
- en: Rule 41\. Search and Seizure
  prefs: []
  type: TYPE_NORMAL
- en: '(b) Authority to Issue a Warrant. At the request of a federal law enforcement
    officer or an attorney for the government:(6) a magistrate judge with authority
    in any district where activities related to a crime **may have occurred** has
    authority to issue a warrant to use remote access to search electronic storage
    media and to seize or copy electronically stored information located within or
    outside that district, if:'
  prefs: []
  type: TYPE_NORMAL
- en: (A) the district where the media or information is located has been concealed
    through technological means; or
  prefs: []
  type: TYPE_NORMAL
- en: (B) in an investigation of a violation of 18 U.S.C. § 1030(a)(5), the media
    are protected computers that have been damaged without authorization and are located
    in five or more districts.
  prefs: []
  type: TYPE_NORMAL
- en: This rule, effective December 2016, allows law enforcement in the U.S. to circumvent
    probable cause and chain of custody by allowing a federal magistrate judge to
    issue law enforcement a warrant to hack or deploy malware on any number of computers/servers,
    even those tangentially related to their investigations. The only prerequisite
    is that some effort has been taken by the suspected party to obscure the location
    of said computers. Obviously, Tor (“the onion router”) browser users are a prime
    candidate for abuse with this change (see [https://www.torproject.org](https://www.torproject.org)).
    The vague wording and broad application means it could also apply to virtual private
    networks (VPNs), which are the preferred access by banks and businesses to secure
    their critical data. The change is the law enforcement equivalent of a blank check,
    enabling unchecked surveillance to be applied to blockchain-based transactions.
    Tor directs Internet traffic through a free, worldwide, volunteer overlay network
    consisting of more than 7,000 relays to conceal a user’s location and usage from
    anyone conducting network surveillance.
  prefs: []
  type: TYPE_NORMAL
- en: In summation, open source protocols that empower individuals to conduct business
    can be targeted by law enforcement. Blockchain and Bitcoin users should take notice
    and issue with these events. Many parallels can be drawn between the current state
    of Tor and Bitcoin. Rule 41 sets a difficult precedent for what the government
    deems acceptable when it comes to other distributed, open source, privacy enabling
    protocols that it has a vested interest in stopping—namely blockchain. This can
    stunt the growth and evolution of blockchain technologies as businesses must assess
    these risks as part of their implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Legal Ramifications of Blockchain Records
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Owing to its stringent encryption techniques, blockchain will have more legal
    bearing in court. Courts have already begun to evaluate computer-generated information,
    albeit in a limited capacity as evidence. In *United States v. Lizarraga-Tirado*,
    the U.S. Federal Court for the Ninth Circuit analyzed the use of a Google Maps
    entry of a crime scene in an immigration case (see 789 F.3d 1107 [9th Cir. 2015]).
    Federal prosecutors introduced as evidence a Google Maps screenshot with a computer-generated
    GPS “thumbtack” stuck to the alleged scene of the defendant’s apprehension within
    U.S. borders.
  prefs: []
  type: TYPE_NORMAL
- en: Delaware, the corporate-friendly state, has laid the foundation for companies
    doing business there to use blockchain technology for company record-keeping.
    Delaware General Corporation Law (DGCL) marks a key milestone in the Delaware
    Blockchain Initiative to encourage the use of blockchain technology and smart
    contracts in business (see [http://legis.delaware.gov/BillDetail/25730](http://legis.delaware.gov/BillDetail/25730)).
    The Delaware amendments provide for corporations to keep their “books and records”
    on a blockchain or distributed ledger. Sections 219 and 224 of the DGCL would
    be amended to permit the corporation to rely on the contents of a distributed
    ledger itself as the stock ledger. Vermont bill H868 ([http://legislature.vermont.gov/bill/status/2016/H.868](http://legislature.vermont.gov/bill/status/2016/H.868))
    makes records verified through blockchain technology admissible as evidence in
    court. Laws such as this create a kind of legal backing for blockchain-based information.
    In Nevada, a bill has deemed smart contracts and blockchain signatures acceptable
    records under state law. Nevada Senate Bill 398 specifies, “If a law requires
    a record to be in writing, submission of a blockchain which electronically contains
    the record satisfies the law.”
  prefs: []
  type: TYPE_NORMAL
- en: As blockchain ledgers and systems become more common, their possible use in
    cases as evidence and discovery becomes more likely. This means lawyers will need
    to know such records exist as well as how to access and handle that evidence—that
    is, what specific information to request.
  prefs: []
  type: TYPE_NORMAL
- en: As we mentioned earlier, property ownership is obviously an excellent use case
    for a blockchain application. In many developing countries, wealth is created
    through ownership. Unfortunately, one of the most challenging aspects is determining
    who owns a certain piece of land, and disputes often occur when corrupt governments
    or individuals take advantage of the undereducated.
  prefs: []
  type: TYPE_NORMAL
- en: Having a public blockchain ledger would allow everyone to be aware of who owns
    which parcel of land, and it would make the exchange of ownership much easier
    and more equitable. This streamlined proof of ownership would create a better
    base for authentication, and governments could fairly tax individuals and businesses.
    To understand the potential of a blockchain land registry system, analysts argue
    one must first understand how property changes hands. When a purchaser seeks to
    buy property today, he or she must find and secure the title and have the lawful
    owner sign it over. This search has become more difficult. For a large number
    of residential mortgage holders, flawed paperwork, forged signatures, and defects
    in foreclosure and mortgage documents have marred proper documentation of property
    ownership. The resulting situation means that the property no longer has a “good
    title” attached to it and is no longer legally sellable, leaving the prospective
    buyer in many cases with no remedies. These issues are even more pronounced outside
    the United States. For example, in Haiti, natural disasters, forced evacuations,
    and the corruption of dictatorships have made the prospect of figuring out who
    actually owns the land one lives on impossible. This was remedied by an Ethereum-based
    blockchain (see [https://media.consensys.net/how-blockchain-can-help-haiti-recover-b1657b609ad1](https://media.consensys.net/how-blockchain-can-help-haiti-recover-b1657b609ad1)).
    In the Gaza Strip, land speculation is made problematic by conflicting claims
    by both the Israeli government and the Palestinian Authority, as well as the possible
    intervention of third parties. Blockchain can help. The Republic of Georgia teamed
    with the Bitfury Group ([http://bitfury.com](http://bitfury.com)), a provider
    of blockchain infrastructure, to use the Bitcoin blockchain to validate property-related
    transfers, marking the first time a national government used the Bitcoin blockchain
    to validate and secure government actions. Blockchain technology has also be tapped
    to improve land ownership in developing countries. A team of blockchain technology
    pioneers from Ghana, Denmark, and the U.S. launched the Bitland initiative (see
    [http://landing.bitland.world](http://landing.bitland.world)) to establish usable
    land titles and free up trillions of dollars for infrastructure development in
    West Africa. The Bitland initiative will educate the population about technology
    and provide the benefits of documented land ownership to those who don’t have
    it. It will begin in Ghana and expand throughout Africa, with hopes of catapulting
    infrastructure development and strengthening democracy.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Beginning of Autonomous Law: Smart Contract'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A computer scientist, legal scholar, and cryptography expert named Nick Szabo
    is credited for developing the concept of a smart contract. He defined a smart
    contract as “a set of promises, specified in digital form, including protocols
    within which the parties perform on these promises.” (See Nick Szabo, “Smart Contracts:
    Building Blocks for Digital Markets,” 1996, [www.alamut.com/subj/economics/nick_szabo/smartContracts.html](http://www.alamut.com/subj/economics/nick_szabo/smartContracts.html).)'
  prefs: []
  type: TYPE_NORMAL
- en: So, a smart contract is a computerized algorithm (yet another way of describing
    it), which performs the terms of the contract. However, this definition does not
    differentiate smart contracts from some already well-known contractual constructs
    implementing automated performance, such as vending machines.
  prefs: []
  type: TYPE_NORMAL
- en: Vending machines are defined as self-contained automatic machines that dispense
    goods or provide services when coins are inserted or payment by, let’s say, a
    credit card is made. Vending machines are programmed with certain rules and perform
    by these rules.
  prefs: []
  type: TYPE_NORMAL
- en: If there is no principal difference between vending machines and smart contracts,
    then smart contracts are as old as Roman law itself. In the first century CE,
    a Greek engineer and mathematician, Hero of Alexandria, documented the first vending
    machine in the published journal *Pneumatika*. His machine accepted a drachma
    coin and then dispensed holy water (for the mechanical details, see [www.google.com.pg/patents/US95577400](http://www.google.com.pg/patents/US95577400)).
    Fast-forward to the 1980s. We essentially programmed financial smart contracts
    for Merrill Lynch when Paul and I used designated order turnaround (DOT) to perform
    automated program trading—trades frequently executed not by a trader himself but
    by a computer system based on a trading strategy implemented as a COBOL/C/SQL–based
    program. As of 2014, more than 75 percent of the securities traded on stock exchanges
    originated from automated trading system orders. So, smart contracts per se are
    not new.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Evolution
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Most of today’s legal contracts are created using word processing templates
    customized by attorneys and other legal professionals. They contain standardized
    legal languages which specify terms and conditions, e.g., manifest within a Word
    document. They rely on third parties for interpretation and enforcement. This
    process is time consuming and redundant. Moreover, if issues occur, the parties
    to the contract rely on arbitrators and the courts to remedy the situation. This
    is also time consuming, as well as hard to predict and expensive. The solution
    is the smart contract—i.e., a computer program that can carry out the contract.
    It contains code (e.g., Ethereum JavaScript Solidity) that is capable of executing
    the terms and conditions of an agreement. The contract code defines the terms
    and conditions as a set of if/then/else syllogisms in the same way that a legal
    document would. The conditions can be validated and confirmed by RPC calls to
    other smart contracts or initially to “off-chain” oracles. In this way smart contract
    code can then be automatically executed on the blockchain. Smart contracts will
    herald the dawn of new attorney and legal professionals who by necessity will
    need to be versed in both law and computer programming.
  prefs: []
  type: TYPE_NORMAL
- en: For example, a contract that automatically calculates the payments that are
    due and the goods to be delivered between the parties, and then automatically
    arranges for those payments to be made and the goods to be delivered, relies on
    software code (see [Figure 4-1](ch4.xhtml#ch4fig1)). The contract terms are expressed
    in logic statements such as if buyer Joe orders a guitar of a particular brand,
    make, and year, which becomes available via seller Gibson, then Joe’s party pays
    money to Gibson’s party’s bank account, and the guitar is delivered to Joe’s home.
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-1   Smart contract flow**'
  prefs: []
  type: TYPE_NORMAL
- en: As we shall see in the next chapters containing smart contract code examples,
    it is critical not only that the code is developed and tested but also that it
    is written with security checks on the identity of the parties.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Components
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'As the smart contract evolves, there initially will be hybrids built with separate
    components: on the blockchain and off the blockchain. Eventually, as blockchain
    technology becomes mature and widely accepted, smart contracts will be on-blockchain-only
    components.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the possibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: •   Smart contract code, for example, Ethereum Solidity code that is stored,
    verified, and executed on a blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: •   Smart legal contracts written as a specification for using smart contract
    code as a complement or complete substitute for legal contracts.
  prefs: []
  type: TYPE_NORMAL
- en: •   An actual contract may initially be a smart contract and some off-chain
    logic and execution; as the concept evolves it will become a fully blockchain-executed
    smart contract. A very simple contract can be fully automated. Other contracts
    may require both self-executing terms and terms that are outside the software
    code. This is because not all decisions or steps in a contract can be reduced
    to logic statements, especially for complex contracts.
  prefs: []
  type: TYPE_NORMAL
- en: To the dapp programmers, a smart contract is just a well-written program that
    executes the contract, i.e., a contract written in code. They would say all programs
    are really contracts anyway.
  prefs: []
  type: TYPE_NORMAL
- en: To lawyers, the concept of a contract has a different meaning. It requires offer
    and acceptance, consideration, and specific terms and conditions. They are hard
    pressed to believe that code can be law.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Benefits
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Like any new technology, there are benefits and risks to smart contracts. As
    we have seen in [Chapter 1](ch1.xhtml#ch1), the benefit of a distributed blockchain
    is that it provides a more trustworthy ledger than relying on one trusted central
    ledger. With blockchain technology there is more security, traceability, and transparency
    of records and transactions for participants and regulators as well as lower operational
    costs. The combination of smart contracts with blockchain adds certainty, security,
    and resilience. Terms can be verified by independent parties. Moreover, the information
    stored on the blockchain is protected from security threats as it is maintained
    on multiple nodes where more than 51 percent of the nodes would have to be compromised
    before any problematic issue would be manifest.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Challenges
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The success of blockchain, as we’ll cover in [Chapter 9](ch9.xhtml#ch9), will
    depend on whether it can be implemented practically and which applications are
    proper candidates. Briefly, the key deployment risks and challenges are listed
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: •   **Performance**   The computing resources and performance required for transaction
    processing, validation, and fraud detection will determine which banking, financial,
    and payment services it can best be applied to. Currently blockchain is not performant
    enough to handle thousands of transactions per second. It will be relegated to
    asset transfers that are not time dependent, such as buying/selling a highly traded
    and volatile security.
  prefs: []
  type: TYPE_NORMAL
- en: •   **Interoperability**   Ensuring interoperability between different blockchain
    implementations so they can talk to one another. What is the cost to achieve that?
    This will be determined by the alliance groups who will hopefully develop standards.
  prefs: []
  type: TYPE_NORMAL
- en: •   **Scalability**   Each node in the particular blockchain network must know
    about every single transaction that occurs globally, which may create a significant
    drag on the network. The goal is to perform all transactions with a higher efficiency,
    but in a way that doesn’t sacrifice the decentralization and security that the
    network provides.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Risks
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The use of evolving smart contracts and blockchain technologies does create
    a number of potential risks, including governance, deployment, risk management,
    regulatory, and legal. These risks and how they are managed fundamentally underpin
    market confidence in the technology. We will discuss them in more detail in the
    sections that follow. To be effective, blockchain and smart contracts require
    standards, i.e., a set of common rules by which all participants operate, in order
    to ensure accuracy and trustworthiness. The decentralized model poses challenges
    when you need to change the rules, because those changes need to be agreed upon
    and accepted by all participants to function consistently. A governance framework
    will be required to implement and operate blockchain as a legal application and
    needs to take into account oversight and monitoring functions, rule setting, and
    acceptance and change control management. Governance in general will be a requirement
    not only for legal but for all technologies that manage information. This transformation
    to some common rules for information governance is not only critical to blockchain
    but to other pursuits like e-discovery and cybersecurity. Governance standards
    around the blockchain (see [http://hbr.org/2017/04/who-controls-the-blockchain](http://hbr.org/2017/04/who-controls-the-blockchain))
    will contribute to market confidence in the technology and the legal and regulatory
    environment. This will accelerate the adoption and success of the smart contract.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Legal Challenges
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Smart contracts also raise a number of interesting and challenging legal questions.
    For starters, has a legally binding contract been formed? As mentioned, the current
    hybrid nature of a smart contract combined with a traditional nonprogrammed or
    manual contract, e.g., Word document with terms and conditions, creates some new
    issues as to its validity. Whether a smart contract is legally binding will depend
    on a number of factors, including the specific use case, the type of smart contract
    being used, and the applicable law.
  prefs: []
  type: TYPE_NORMAL
- en: As we have seen, some states like Delaware and Arizona have passed legislation
    to recognize the smart contract. Seeking to avoid any legal uncertainty surrounding
    blockchain transactions and smart contracts relating to certain digital assets,
    in 2017 Arizona passed the amended Arizona Electronic Transactions Act (AETA),
    HB 2417, which includes a very specific definition of blockchain technology as
    a “distributed, decentralized, shared and replicated ledger, which may be public
    or private, permissioned or permission less, or driven by tokenized crypto economics
    or token less” and provides that the “data on the ledger is protected with cryptography,
    is immutable and auditable and provides an uncensored truth.” HB 2417 also includes
    a definition of smart contracts as an “event driven program, with state, that
    runs on a distributed, decentralized, shared and replicated ledger that can take
    custody over and instruct transfer of assets on that ledger.” Forward-thinking
    states like Delaware and Arizona enact such legislation to encourage blockchain
    development in their respective states. That said, the electronic nature of smart
    contracts is unlikely to be a barrier to establishing contractual formation in
    many jurisdictions.
  prefs: []
  type: TYPE_NORMAL
- en: The legal requirement of “certainty” might not be satisfied easily, as not all
    smart contracts operate in conjunction with natural language contract terms. How
    will the parties to a smart contract get notice of its terms and conditions? When
    will they get to see those terms prior to or after the smart contract is agreed
    and executed? How will we address those contracts that are required by law to
    be in writing? Is computer code a writing? How do we deal with the formal execution
    requirements for deeds, i.e., in writing and signed by specified individuals/roles?
  prefs: []
  type: TYPE_NORMAL
- en: There is a spectrum of possible smart contract models. On the one hand, there
    are those who promote the “code is contract” approach. On the other hand, there
    are those who see smart contracts as consisting of digitizing the performance
    of business logic, e.g., payment, which is happening today and may or may not
    be associated with a natural language contract. In between these two extremes
    a number of permutations are likely to emerge, including, for example, a “split”
    smart contract model under which natural language contract terms are connected
    to computer code via parameters.
  prefs: []
  type: TYPE_NORMAL
- en: There are jurisdictional variations on whether smart contracts can give rise
    to legally binding contractual relations under the laws of a number of key contracting
    jurisdictions. The answer may vary significantly depending on the jurisdiction.
    Certainty as to what constitutes the contractual terms and whether they are comprehensive
    enough is often a critical factor necessary to establish the formation of a legally
    binding contract in many jurisdictions. Smart contracts that purely digitize a
    process but do not include, or operate in conjunction with, contractual terms
    may not satisfy such requirements.
  prefs: []
  type: TYPE_NORMAL
- en: •   **Enforceability**   Where a smart contract has a legally binding contractual
    effect, the technology within which it is deployed may sometimes give rise to
    problems in relation to legal enforceability. There may be no central administering
    authority to resolve a dispute. Dispute resolution mechanisms could address enforceability
    and jurisdictional variations. Inserting a dispute resolution mechanism into a
    smart contract will be pro forma to address the issues around enforceability and
    jurisdictional variations.
  prefs: []
  type: TYPE_NORMAL
- en: •   **Transparency**   Blockchain can involve a level of transparency. But what
    if the parties don’t want the details divulged? How do you keep parts of the contract
    private and retain the other benefits of blockchain?
  prefs: []
  type: TYPE_NORMAL
- en: •   **Changes** How do you unwind transactions that shouldn’t have happened—for
    example, if there has been duress—or it is a contract that is for some reason
    (or is somewhere) illegal or in breach of regulatory requirements? This has already
    occurred on the Ethereum platform, with a technical “hard fork” response (a split
    in the blockchain where non-upgraded nodes cannot validate blocks created by upgraded
    nodes following new consensus rules).
  prefs: []
  type: TYPE_NORMAL
- en: •   **Coding limitations**   Contracts often deal with the unknown and have
    clauses that aren’t easily reduced to code or that can execute automatically as
    a simple “if this, then that” procedure. Force majeure is a good example. Contracts
    often include concepts of subjective judgment, reasonableness, and acting in good
    faith. These concepts currently cannot be readily translated into logic statements.
    That said, there will be code services that can provide “reasonability” tests,
    which have been used in securities trading for years.
  prefs: []
  type: TYPE_NORMAL
- en: •   **Liability for mistake, error, or fraud**   If something does go wrong
    with the execution of the contract and someone suffers a loss, where do they go
    for recourse? We will need a court system that is tech savvy. The courts have
    started to recognize blockchain not only for cryptocurrency but also for how it
    can improve the administration of law. Just as the courts got technical with e-discovery,
    they will need to be able to work with blockchain evidence.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain as Evidence and Digital Signature
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In addition to the benefits, challenges, and risks, for blockchain applications
    to have bearing in the real world, digital signatures need to be as binding as
    pen and paper, and evidence recorded on blockchains needs to be admissible in
    court. Courts have complex rules of evidence about what information can come in
    and in what format. Right now in most legal systems, blockchain evidence can be
    considered but only with the help of expensive expert witnesses to explain what
    it means. This process would eliminate the potential efficiencies gained through
    use of blockchain technology, and would instead increase court costs and decrease
    access to justice.
  prefs: []
  type: TYPE_NORMAL
- en: Under U.S. Federal Rule of Evidence 901, “[t]o satisfy the requirement of authenticating
    or identifying an item of evidence, the proponent must produce evidence sufficient
    to support a finding that the item is what the proponent claims it is.” This requirement
    is important to ensure litigants do not try to introduce falsified or tampered
    evidence. How does this work in practice? Typically, transaction and other business
    records can be admitted into court proceedings, but a witness typically must testify
    to authenticate the records. For example, if you are involved in a dispute with
    a security exchange over a trade, the exchange could introduce its computer records
    of your account and trades, but one of its techies would need to testify about
    the authenticity of the data. Thus, transaction records generally require a witness
    to explain what the transaction record is, how it is kept or was generated, and
    what it represents.
  prefs: []
  type: TYPE_NORMAL
- en: On the blockchain, if signature data is kept, it is easier to later authenticate
    the transaction record by referring to the digital signature used to validate
    the transaction. This will help meet the evidentiary requirement that the blockchain
    record “is what the proponent claims it is,” i.e., the blockchain receipt for
    the specific transaction. Not all digital signatures are born equal. Sometimes
    there is a good reason to choose one system over another, like avoiding a system
    that has been poorly designed or modified by a surveilling agency (see [https://privacyinternational.org/node/51](https://privacyinternational.org/node/51)).
    But other times it’s completely arbitrary. Governments have set complicated standards
    for digital signatures to give them the same weight as pen and paper (see [https://www.nist.gov/](https://www.nist.gov/)).
    The process of signing electronic documents is full of friction. As discussed
    earlier, the Arizona Electronic Transactions Act (AETA) stipulates that records
    or signatures in electronic form cannot be denied legal effect and enforceability
    based on the fact that they are in electronic form. There is also a Federal E-Sign
    Act(15 U.S.C. § 7001), which generally provides that a signature, contract, or
    other transaction record may not be deemed invalid or unenforceable solely because
    it is in electronic form. It is to be determined whether the federal statute preempts
    AETA. Under AETA electronic records, electronic signatures and smart contract
    terms secured through blockchain technology and governed under U.C.C. Articles
    2, 2A, and 7 will be considered to be in an electronic form and to be an electronic
    signature. The statute also provides that a contract relating to a transaction
    may not be denied legal effect, validity, or enforceability solely because that
    contract contains a “smart contract term.”
  prefs: []
  type: TYPE_NORMAL
- en: The bottom line is that governments are looking to streamline rules of evidence
    to allow blockchain evidence to be deemed admissible without an expert. States
    are leading the way. In addition to Arizona, Vermont passed a bill that creates
    a presumption of admissibility of blockchain records that meet certain requirements.
    Admitted records can be used as evidence of contractual parties or terms, effective
    dates, ownership, money transfers, identity, authenticity of a document, or anything
    else. We can expect to see much more in terms of legal developments in 2018.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Design Example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So we see that smart contract development will require a team of not only Solidity
    and distributed application developers but also business and legal professionals
    knowledgeable in the law and regulation of the blockchain. Let’s design a smart
    contract that is used by affiliate and social media marketing businesses to receive
    compensation for their marketing efforts. They are paid based on campaign performance
    metrics known as CPA and CPC.
  prefs: []
  type: TYPE_NORMAL
- en: CPA (cost per action or cost per acquisition) advertising is performance based
    and is common in the affiliate marketing sector of the business. In this payment
    scheme, the publisher takes all the risk of running the ad, and the advertiser
    pays only for the number of users who complete a transaction, such as a purchase
    or signup. This is the best type of rate to pay for banner advertisements and
    the worst type of rate to charge.
  prefs: []
  type: TYPE_NORMAL
- en: CPC (cost per click) is a payment option that compensates a publisher whenever
    their referred customers click on a link for an advertiser offer. CPC is also
    an Internet-marketing formula used to price banner ads. Some advertisers will
    pay publishers based on the number of clicks a banner gets. We will design a smart
    contract that accesses HitPath performance and payment data so that affiliate
    networks can streamline the entire performance-to-payment cycle for global affiliates
    to reduce friction. HitPath (see [www.hitpath.com/](http://www.hitpath.com/))
    is popular advertising campaign tracking software which maintains a central ledger
    of activity around publishers. [Table 4-1](ch4.xhtml#ch4tab1) depicts a list of
    data rows identifying the publisher, the offer, and whether the hit resulted in
    CPC and CPA. This performance tracking log for HitPath provides the basis for
    payment.
  prefs: []
  type: TYPE_NORMAL
- en: '**TABLE 4-1** **Publisher Performance Tracking Log for HitPath**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](tab4-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will design a smart contract for the marketers to automatically receive compensation—cryptocurrency,
    USD, or tokens deposited in the wallet account—based on social media advertising
    campaigns that result in CPC or CPA. This will be accomplished and verified by
    using an oracle to access the HitPath performance and payment data. An oracle
    is an agent that finds and verifies real-world occurrences (such as HitPath activity)
    and submits this information to be used by our smart contracts. Smart contracts
    contain value and only unlock that value if certain predefined conditions are
    met, for example, if the publisher’s lead generated CPA or CPC. When a particular
    value is reached, such as the end of the month, the smart contract changes its
    state and executes the programmatically predefined algorithms to determine how
    much to compensate the publisher, automatically triggering an event on the blockchain.
    The primary task of oracles is to provide these values to the smart contract in
    a secure and trusted manner. Blockchains cannot access data outside their network
    on their own. So, in short, oracles provide external data and trigger smart contract
    executions when predefined conditions are met. Oracles are part of multisignature
    contracts where, for example, the original trustees sign a contract for future
    release of funds only if certain conditions are met. Before any funds get released
    an oracle has to sign the smart contract as well (see [Figure 4-2](ch4.xhtml#ch4fig2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-2   Advertising smart contract flow**'
  prefs: []
  type: TYPE_NORMAL
- en: We can then take the number of CPA and CPC hits for our tracking period, multiply
    it by the agreed-upon rate, and transfer the payment to the publisher’s address.
    [Figure 4-3](ch4.xhtml#ch4fig3) shows an example contract. We have extrapolated
    the variables from the formal contract language using a web-based user interface.
    [Figure 4-4](ch4.xhtml#ch4fig4) shows the advertising contract header.
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-3   Example contract**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-4   Advertising contract header**'
  prefs: []
  type: TYPE_NORMAL
- en: Is an Advertising Payment Application a Blockchain Fit?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We will look at a practical application of blockchain technologies by designing
    a smart contract for advertisers to be paid in a smart contract automated way
    from scratch. We will lay out a very basic blockchain automated payment contract
    based on the advertising CPA and CPC we discussed earlier. Later, in [Chapters
    10](ch10.xhtml#ch10) and [11](ch11.xhtml#ch11), we will delve in great detail
    into the description and use of the JavaScript and Ethereum tools needed to create,
    build, and deploy an entire application using Ethereum Solidity. That said, not
    all applications are well suited for blockchain. What would be the advantages
    of using blockchain for our advertiser payment application?
  prefs: []
  type: TYPE_NORMAL
- en: •   Cryptographically secure authentication
  prefs: []
  type: TYPE_NORMAL
- en: •   Fast, frictionless, low-fee payments
  prefs: []
  type: TYPE_NORMAL
- en: •   A network with 100 percent uptime
  prefs: []
  type: TYPE_NORMAL
- en: •   Publicly verifiable and guaranteed code transaction execution
  prefs: []
  type: TYPE_NORMAL
- en: 'There are no real disadvantages to using blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: •   The relatively slow blockchain network is not an issue as it is still faster
    than manual billing.
  prefs: []
  type: TYPE_NORMAL
- en: •   The relatively limited transaction rate is not an issue as it is still faster
    than manual billing.
  prefs: []
  type: TYPE_NORMAL
- en: •   Contract code deployment cannot exceed the block gas limit.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a look now at payment applications. Here are some required features:'
  prefs: []
  type: TYPE_NORMAL
- en: •   Frequent payment processing
  prefs: []
  type: TYPE_NORMAL
- en: •   Handle contracts from multiple countries with different currencies
  prefs: []
  type: TYPE_NORMAL
- en: •   Provide verifiable and consistent payment execution
  prefs: []
  type: TYPE_NORMAL
- en: These requirements are much better suited to a blockchain solution. One of the
    issues for advertising payment has been moving money around through wires and
    bank transfers. Network publishers must wait three to five business days to deposit
    or withdraw money from their bank accounts and must trust the advertiser site
    with their banking information. The sites in turn must secure this information,
    take appropriate security measures to protect their sites from hacking, and stay
    in compliance with a series of financial regulations in the various countries
    in which they operate. Additionally, transacting in different countries requires
    supporting a variety of different currencies and banks, all of which contribute
    to the complexity of the operation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using a blockchain solution allows advertisers and publishers to transfer money
    across borders easily for international betting sites and have a guarantee that
    their compensation will be paid out in a timely fashion. So we will need some
    functions to effect the contract:'
  prefs: []
  type: TYPE_NORMAL
- en: •   createContract(…various contract attributes as depicted in [Figure 4-3](ch4.xhtml#ch4fig3)…)
    will create our contract by pulling the variables specified in [Table 4-1](ch4.xhtml#ch4tab1)
    and instantiating, i.e., breathing life into this contract to be referenced as
    contractid.
  prefs: []
  type: TYPE_NORMAL
- en: •   setCPAPaymentResult((uint contractid)constant returns (uint)), setCPCPaymentResult((uint
    contractid)constant returns (uint)) will periodically access the HitPath tracking
    data to determine how many CPA/CPC hits we had during the billing period using
    the rate variables specified in [Figure 4-3](ch4.xhtml#ch4fig3) to calculate the
    payment.
  prefs: []
  type: TYPE_NORMAL
- en: •   payContract(uint contractid) will transfer an amount equal to the payment
    from the advertiser’s address to the publisher’s address and send notifications
    to each party that the transaction has been completed.
  prefs: []
  type: TYPE_NORMAL
- en: Defining Contract Data Structures
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Before we can start coding our contract, we need to define the necessary data
    structures.
  prefs: []
  type: TYPE_NORMAL
- en: 'This structure will house all the variables from our contract. See [Table 4-1](ch4.xhtml#ch4tab1)
    and [Figure 4-3](ch4.xhtml#ch4fig3) for a view of these variables from the contract
    and tracking sources. As we shall see in [Chapter 10](ch10.xhtml#ch10), a variable
    can have data types like string, integer, boolean, the address of a blockchain
    wallet account, an array of all these data types, or other structures. See [Figure
    4-3](ch4.xhtml#ch4fig3) for variables. In Ethereum Solidity, it will look something
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0092-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '![Images](p0093-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Smart Contract Events
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As we shall see in detail later, Solidity events are used to log transaction
    activity to the blockchain. Event logs are less expensive than creating new entries
    in the state tree, so it is a best way to store read-only data. Logs are not accessible
    from within a contract (only variables are), but can be read by external client
    libraries like web3.js (more on this in [Chapter 10](ch10.xhtml#ch10)). Ethereum
    transactions are asynchronous and usually do not mine for 15–30 seconds after
    they have been broadcast to the network. Because of this, transactions cannot
    return values. The only way a transaction can create an output is by modifying
    the state or adding an event log. Client libraries usually parse the logs to determine
    the output of a transaction.
  prefs: []
  type: TYPE_NORMAL
- en: A Solidity event is a schema for logs. Logs are automatically indexed by contract
    address and event type for efficient querying. In addition, Solidity events allow
    you to define three custom indexed fields. Only indexed fields can be queried
    when parsing logs.
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0093-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There is an event associated with each of the major state modifications that
    can occur in our contract. Together, they provide a history of the actions taken
    by the contract on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Functions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Let’s create a list of the functions we will be defining in our application.
    Functions, like variables, can be either public or private. Public functions can
    be accessed by other contracts and client libraries and are listed as part of
    the application binary interface (ABI), which is basically how you call functions
    in a contract and get data back. Private functions are only accessible by other
    functions in the same contract. Web3.js is Ethereum’s JavaScript API to interact
    with the Ethereum node. It contains a host of modules to facilitate blockchain
    functionality.
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0093-03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When we get an ABI, and have saved it in a separate file abi.js, we can load
    it from the application into the abiArray variable. We also need the smart contract
    address, in the advertiserContract variable. We can then get hold of a JavaScript
    instance for the contract:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0094-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once we have our web3 object, we can start calling some APIs to find out what
    is going on in the blockchain, like getting your balance in wei and converting
    it to ether.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, there are constant functions that read from, but do not modify,
    the blockchain. Public constant functions return immediately with their result,
    do not send a transaction to the network, and do not consume any gas when called.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the public functions we will need:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0094-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the contract has been created, we emit a ContractCreated event to log
    the state modification we just made and return a variable to indicate that there
    were no errors. You will probably need some public constant functions such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0094-03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once a number of contracts have been created, we need to be able to identify
    active contracts.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, we will be defining some private functions for our own internal
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0094-04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`getContractById` is a helper function we will use to get a pointer to a specific
    contract.'
  prefs: []
  type: TYPE_NORMAL
- en: '`payContract(uint contract_id) private`'
  prefs: []
  type: TYPE_NORMAL
- en: Constant functions return a value whose type must be specified with the syntax
    above.
  prefs: []
  type: TYPE_NORMAL
- en: 'So our advertiser smart contract will:'
  prefs: []
  type: TYPE_NORMAL
- en: '•   Execute the `createContract` for each publisher we do business with:'
  prefs: []
  type: TYPE_NORMAL
- en: '`createContract(…)`'
  prefs: []
  type: TYPE_NORMAL
- en: '•   Calculate how many CPAs and CPCs occurred for this publisher during the
    current month:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0095-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '•   Compensate each affiliate for CPAs and CPCs that occurred for this publisher
    during the current month:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](p0095-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The application will probably have a web-based front end and will require MetaMask,
    an extension for accessing Ethereum-enabled distributed applications, or dapps
    in your normal Chrome browser. The extension injects the Ethereum web3 API into
    every website’s JavaScript context, so that dapps can read from the blockchain.
    MetaMask also lets the user create and manage their own identities, so when a
    dapp wants to perform a transaction and write to the blockchain, the user gets
    a secure interface to review the transaction before approving or rejecting it
    (see [Figure 4-5](ch4.xhtml#ch4fig5)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-5   Advertising contract oracle flow**'
  prefs: []
  type: TYPE_NORMAL
- en: This smart contract design must be coded to handle the functionality we enumerated
    here. In [Chapters 10](ch10.xhtml#ch10) and [11](ch11.xhtml#ch11), we will detail
    and illustrate an entire application (betting) from the development setup all
    the way to production implementation, with explanations of the coding and execution
    as well as a web-based front end.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contracts in Practice
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As we have seen in the previous sections of this chapter, there is confusion
    about what a smart contract means as well as its enforceability and evolving jurisdictional
    issues. Technologists come up with a programmable component that has the word
    “contract” in its name, and lawyers are intrigued and want to get involved in
    this new form of business and contract execution. Drafting actual standalone contracts
    is not what developers want to do. Developers build platforms and applications
    (see [http://consensys.net/ventures/spokes/](http://consensys.net/ventures/spokes/)
    for an array of existing applications). Smart contracts are just components. The
    traditional work of lawyers who draft contracts will change with widespread adoption
    of smart contracts. The new world where lawyers draft smart contracts will involve
    a team of legal and technology professionals. The makeup of these teams and the
    new contract development life cycle are incubating as we speak.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Autonomous Organizations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A decentralized autonomous organization (DAO), also known as a decentralized
    autonomous corporation (DAC), is an organization that is run through rules encoded
    as smart contracts. A DAO’s financial transaction record and program rules are
    maintained on a blockchain. The concept of a DAO entity is initially introduced
    in a document. There are several examples of this business model (see [http://download.slock.it/public/DAO/WhitePaper.pdf](http://download.slock.it/public/DAO/WhitePaper.pdf)).
    The use of blockchain, smart contracts, and DAOs raises significant legal issues.
    As these blockchain-based technologies become widely used, we will need laws and
    regulations to provide a legal framework within which blockchain can be utilized.
    As developers in this new paradigm, we need to understand these issues so we can
    build compliant blockchain applications. Some developing legal issues are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: •   When servers are decentralized and located around the globe, we will need
    to consider jurisdiction where a breach or failure occurred and then apply cross-border
    laws, which may cause expensive resolutions that undermine blockchain benefits.
  prefs: []
  type: TYPE_NORMAL
- en: •   When the entity is essentially self-governing software engaging in or facilitating
    commerce, what legal status will attach to DAOs? Are they simple corporations
    or something else?
  prefs: []
  type: TYPE_NORMAL
- en: •   What, if any, is the liability of DAOs and their creators? Who or what is
    claimed against in the case of a legal dispute?
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, DAOs render traditional concepts of ownership and liability obsolete.
    However, we consider that this perhaps more futuristic view ignores the reality
    that coding may suffer from errors or hosting platforms may fail. What about the
    impacts of fraud at any point in the DAO’s creation or operation? How will the
    courts and regulators allow the wholesale adoption of technology that bypasses
    established oversight?
  prefs: []
  type: TYPE_NORMAL
- en: On July 25, 2017, the U.S. Securities and Exchange Commission (SEC) issued a
    statement on the regulatory significance of offers and sales of digital assets
    carried out using distributed ledger or blockchain technology (see [http://sec.gov/news/press-release/2017-131](http://sec.gov/news/press-release/2017-131)).
    That statement followed the SEC’s Report of Investigation into the DAO, an unincorporated
    organization designed to issue tokens administered on a distributed ledger that
    would allow the holder to share in the anticipated earnings of the organization.
    The DAO and its structure drew a great deal of attention after a hacker stole
    approximately one-third of its assets.
  prefs: []
  type: TYPE_NORMAL
- en: 'The investigation raised questions regarding the application of U.S. federal
    securities laws to the offer and sale of DAO tokens, including the threshold question
    of whether DAO tokens are securities. Based on the investigation, and under the
    facts presented, the commission determined that DAO tokens are securities under
    the Securities Act of 1933 and the Securities Exchange Act of 1934\. The report
    reiterates these fundamental principles of the U.S. federal securities laws and
    describes their applicability to a new paradigm—virtual organizations or capital-raising
    entities that use distributed ledger or blockchain technology to facilitate capital
    raising and/or investment and the related offer and sale of securities. The automation
    of certain functions through this technology, smart contracts, or computer code
    does not remove conduct from the purview of the U.S. federal securities laws.
    See “Report of Investigation Pursuant to Section 21(a) of the Securities Exchange
    Act of 1934: The DAO,” [https://sec.gov/litigation/investreport/34-81207.pdf](https://sec.gov/litigation/investreport/34-81207.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: DAO and Jurisdiction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A DAO can cross jurisdictional boundaries as the nodes on a blockchain can be
    located in any country in the world. This poses complex jurisdictional issues
    which will require specialized consideration by lawyers versed in each country’s
    law and the relevant contractual relationships. The principles of contract and
    title differ across jurisdictions and therefore identifying the appropriate governing
    law will be a first step in designing and implementing a DAO. In a decentralized
    environment, it will be critical to identify the appropriate set of rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: For starters, every transaction could potentially fall under the jurisdiction
    of the location of every node in the network. This could result in the blockchain
    needing to be compliant with a large number of legal and regulatory regimes. Some
    design constraints need to be identified early to facilitate the development of
    a DAO. In the event a fraudulent or erroneous transaction is made, pinpointing
    its location within the blockchain will be an important security consideration.
  prefs: []
  type: TYPE_NORMAL
- en: The inclusion of an exclusive governing law and jurisdiction clause is therefore
    essential. It should ensure that a DAO member has legal certainty as to the law
    to be applied to determine the rights and obligations of the parties to the agreement
    and which courts will handle any disputes. One vendor, Aragon ([https://blog.aragon.one](https://blog.aragon.one)),
    has developed a DAO arbitration mechanism, which will be fully operational in
    2018 (see [Figure 4-6](ch4.xhtml#ch4fig6)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](fig4-6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 4-6   Aragon arbitration mechanism**'
  prefs: []
  type: TYPE_NORMAL
- en: The Aragon Network Jurisdiction requires an individual who has a dispute to
    open a case and post a bond. The bond will be locked for the period of the arbitration
    process and returned if resolved in favor. If not in favor, the bond will be kept
    as a network reserve. Only applicants who have a legitimate reason for dispute
    will post a bond. In extreme cases, there may be cause to freeze operations of
    the organization—for example, when all stakeholder funds are at risk. Any organization
    shareholder can raise an issue if the company’s contracts are frozen and moved
    to a state of review. When an arbitration begins, five judges will be randomly
    selected from a pool of individuals who have posted a bond indicating their interest
    in serving as a judge. The judges will vote on the final judgment of the case
    for this round. If the applicant is unsatisfied with the ruling of the decentralized
    court, they have the option to elevate the issue to the next realm. This is done
    by posting an even larger bond than before. For this round of court, Aragon uses
    a prediction market where all the judges of the network can take part, providing
    the applicant with a much larger audience.
  prefs: []
  type: TYPE_NORMAL
- en: If the applicant still finds the issue unsatisfactory, there is the supreme
    court of the Aragon Network Jurisdiction composed of the top nine judges by ANJ
    payout—in other words, these are the individuals with the highest ranking in resolving
    Aragon Network Jurisdiction cases. This time the judgment will be final with no
    appeal process. The judges of the previous round will be rewarded or penalized
    according to the ruling of the supreme court. If the supreme court agrees with
    the previous round’s judges, the judges from that round will be rewarded. The
    judges of that round are penalized for a call that was overturned. The Aragon
    Network Jurisdiction purports to provide the tools needed to solve all issues
    that are not accounted for in the smart contract code. It creates an incentive
    for Aragon organizations to join and take part in the network. All parties that
    want to interact with an organization are guaranteed that, in the case of a breach
    of trust not covered by the contract, their issue will be resolved. Also, if a
    bug is discovered that threatens the organization’s existence, it can be stopped
    by opening an arbitration that freezes all activity until the issue is resolved.
  prefs: []
  type: TYPE_NORMAL
- en: DAO Service-Level Liability
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An important aspect of DAO adoption is the willingness of vendors (like Aragon)
    to commit to performance assurances and service-level metrics. This will depend
    on considerations such as the vendor risk/reward profile, the service delivery
    model, and the “multiplication factor” of accepting significant liability for
    multiple customers at the same time. This is likely to mean vendors preferring
    to offer the technology and service on an almost “as is” basis, with a limited
    availability service level, and excluding warranties regarding performance of
    the services, leaving customers without any assurance that the technology will
    function as described or the service be reliable and available. For users who
    are utilizing the service as part of their business, this is unlikely to be an
    acceptable proposal. The balance of performance risk will therefore be a key issue.
  prefs: []
  type: TYPE_NORMAL
- en: DAO Liability for Contract Breach
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The risk to customers of a systemic issue with trading related infrastructure
    such as blockchain could be material if trades are not settled or are settled
    incorrectly. Likewise, the risk relating to security and confidentiality will
    be toward the top of the risk issues for any prospective customer. Blockchain
    poses different risks because of the technology and manner of operations: one
    of the main issues affecting public blockchain is the inability to control and
    stop its functioning. In case of a private blockchain, the lack of control on
    the functioning of the platform does not apply, but whether this would be sufficient
    to trigger a liability of the company managing the platform has not yet been tested.
    So the allocation and attribution of risk and liability in relation to a malfunctioning
    blockchain service must be thought through carefully, not just at the vendor/customer
    level but between all relevant participants, in particular the parties affected
    by the issues.'
  prefs: []
  type: TYPE_NORMAL
- en: DAO and Intellectual Property
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: There is value in the blockchain. The ownership of the intellectual property
    (IP) will form an important consideration. Given the amount of investment and
    the potential financial returns of blockchain technology, vendors will have to
    determine their IP strategy. Vendors will likely want to capitalize on any other
    commercial benefits to be generated from the blockchain, including commercialization
    of the underlying dataset. To the extent the dataset relates to the users, this
    will be a carefully negotiated area. Likewise, what of specific developments or
    solutions that overlay the core, developed to meet a customer’s specific requirements?
    Possible IP options are no different from any other software development agreement
    and are likely to hinge on whether those specific requirements could give a customer
    a competitive edge and/or can be used by the blockchain vendor with another customer
    or by the customer with another blockchain vendor. Depending on the answer to
    these questions, a customer may insist on ownership of such developments or may
    only be willing to license them for the term of the agreement. A customer might
    restrict the vendor’s ability to use such developments in some way based upon
    time, use, recipient, or a combination of all three. An “open innovation” approach
    is prevalent throughout fintech. Financial organizations are working toward a
    viable blockchain proof of concept and are developing a lot of code in-house.
    Traditionally, financial organizations have expected to own the IP in any software
    they develop. However, there appears to be a realization that technology will
    have to be shared in order for real value to be gained.
  prefs: []
  type: TYPE_NORMAL
- en: DAO and Who or What Is Responsible
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: DAOs are essentially online, digital entities that operate through the implementation
    of precoded rules. These entities often need minimal to zero input into their
    operation, and they are used to executing smart contracts and recording activity
    on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Modern legal systems are designed to allow organizations, as well as actual
    people, to participate. Most legal systems do this by giving organizations some
    of the legal powers that real people have—the power to enter into legal contracts,
    to sue, and to be sued. But what legal status will attach to a DAO? Are they simple
    corporations, partnerships, legal entities, legal contracts, or something else?
    Since the DAOs “management” is conducted automatically, legal systems would have
    to decide who is responsible if laws are broken. What, if any, is the liability
    of DAOs and their creators? Who or what is claimed against in the case of a legal
    dispute? Courts and regulators are unlikely to allow the wholesale adoption of
    technology that bypasses established oversight.
  prefs: []
  type: TYPE_NORMAL
- en: DAO Compliance with Financial Services Regulation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Many sourcing arrangements, including the use of certain technology solutions,
    require regulated entities to include in the relevant contracts a series of provisions
    enabling them to exert control, and seek to achieve operational continuity in
    relation to the services to which the contracts relate. With blockchain (as has
    been the case with cloud and certain fintech agreements) this may well be more
    of a challenge.
  prefs: []
  type: TYPE_NORMAL
- en: The DAO and Exiting a Contract
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The need for exit assistance will be determined in large part by the specific
    solution and the extent to which the blockchain vendor holds the customer’s data.
    If the customer does not have its own copy of the data, it will require data migration
    assistance to ensure the vendor is obliged to hand over all such data on expiry
    or termination of the agreement and a complete record of all transactions stored
    on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: DAO Data as Property
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In common law, as a general principle, there is no property right in information
    itself. But while individual items of information do not attract property rights,
    compilations of data may be protected by intellectual property rights. When a
    database of personal information is sold, if a buyer wants to use the personal
    information for a new purpose, to comply with data protection legislation (such
    as the EU’s GDPR) they will have to get consent from the individuals concerned.
  prefs: []
  type: TYPE_NORMAL
- en: DAO and Due Diligence
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Public companies and private investors have already begun to make significant
    capital investments in blockchain technology startups. This trend is likely to
    accelerate as commercial deployments of blockchain technology become a reality.
    Transactional lawyers who are tasked with performing due diligence on the buy
    and/or sell side of these investments need to understand blockchain technology
    and the emerging business models based on the technology. Traditional due diligence
    approaches may need to be adapted. For example, there will be unique issues concerning
    ownership of data residing on decentralized ledgers and intellectual property
    ownership of blockchain-as-a-service offerings operating on open-source blockchain
    technology platforms. These issues will need to be considered in the context of
    the business value proposition and competitive barriers to entry.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By now we see that smart contracts may be the most transformative current blockchain
    component. To that end, Marco Iansiti and Karim Lakhani of Harvard Business School
    offered some revealing insights for business and lawyers in “The Truth About Blockchain,”
    in the *Harvard Business Review*, January–February 2017\. In their view:'
  prefs: []
  type: TYPE_NORMAL
- en: “The implications are fascinating… . If contracts are automated, then what will
    happen to traditional firm structures, processes, and intermediaries like lawyers
    and accountants? … Their roles would all radically change… . [W]e are decades
    away from the widespread adoption of smart contracts… . A tremendous degree of
    coordination and clarity on how smart contracts are designed, verified, implemented,
    and enforced will be required. We believe the institutions responsible for those
    daunting tasks will take a long time to evolve. And the technology challenges—especially
    security—are daunting… . [L]aw firms will have to change to make smart contracts
    viable. They’ll need to develop new expertise in software and blockchain programming.”
  prefs: []
  type: TYPE_NORMAL
- en: In summary, blockchain, the distributed database technology with the capability
    to execute smart contracts, is more than a platform for cryptography. The universe
    of use cases, which we briefly covered, is expanding exponentially. As this technology
    continues generating new possibilities for the way we interact and exchange information,
    it brings forth challenging and complex legal issues and pushes the boundaries
    of existing laws. Our laws will have to adapt to blockchain technology, just as
    they adapted to the Internet, medical technology, e-discovery, and social media.
    There is a huge change before us as lawyers and as developers. We need to embrace
    it and be part of its evolution.
  prefs: []
  type: TYPE_NORMAL
