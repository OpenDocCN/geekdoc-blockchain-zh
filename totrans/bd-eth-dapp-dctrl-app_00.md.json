["```\npragma solidity ^0.4.0;                                          *1*\n\ncontract SimpleCoin {                                            *2*\n\n  mapping (address => uint256) public coinBalance;               *3*\n\n  constructor() public {                                         *4*\n    coinBalance\n [0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C] = 10000;         *5*\n  }\n\n  function transfer(address _to, uint256 _amount) public {       *6*\n    coinBalance[msg.sender] -= _amount;                          *7*\n    coinBalance[_to] += _amount;                                 *8*\n  }\n}\n```", "```\n\"0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB\", 150\n```", "```\n    C:\\program files\\geth> geth console \n    ```", "```\n    C:\\program files\\geth> geth attach ipc:\\\\.\\pipe\\geth.ipc\n    ```", "```\n> web3.version\n```", "```\n{\n  api: \"0.20.1\",\n  ethereum: \"0x3f\",\n  network: \"1\",\n  node: \"Geth/v1.8.13-stable-225171a4/windows-amd64/go1.10.3\",\n  ...\n```", "```\n> web3.version.api\n```", "```\n\"0.20.1\"\n```", "```\n> var apiVersion = web3.version.api\n> var nodeVersion = web3.version.node\n> console.log('Api version: ' + apiVersion)\n> console.log('Node version: ' + nodeVersion)\n```", "```\n> net\n```", "```\n{\n  listening: true,\n  peerCount: 2,\n  version: \"3\",\n  getListening: function(callback),\n  getPeerCount: function(callback),\n  getVersion: function(callback)\n}\n```", "```\n> console.log('this geth instance is listening for network connections : ' +\n     web3.net.listening)\n> console.log('number of peers connected to this geth instance: ' +\n     web3.net.peerCount)\n```", "```\n> admin.nodeInfo\n```", "```\n{\n  enode: \"enode://90946319e42ef4d4670c1d7...,\n  id: \"90946319e42ef4d467...,\n  ip: \"::\",\n  listenAddr: \"[::]:30303\",\n  name: \"Geth/v1.8.13-stable-225171a4/windows-amd64/go1.10.3\",\n  ...\n```", "```\n> admin.peers\n```", "```\n [{\n    caps: [\"eth/62\", \"eth/63\"],\n    id: \"0b64924d478abaf6900ffe...,\n    name: \"Geth/v1.6.1-stable-021c3c28/linux-amd64/go1.8.1\",\n    network: {\n      localAddress: \"192.168.1.108:53557\",\n      remoteAddress: \"136.144.129.222:30303\"\n    },\n...\n```", "```\n> var latestBlockNum = eth.blockNumber\n> console.log('Latest block #: ' + latestBlockNumber)\n```", "```\n> eth.getBlock(latestBlockNum)\n```", "```\n{\n  difficulty: 64344784,\n  extraData: \"0xd7830106078467657...,\n  gasLimit: 4723091,\n  gasUsed: 262264,\n  hash: \"0x8196edb66315b460f0bd4b9bdfa884...,\n  nonce: \"0x2ac78a350ec95787\",\n  number: 1732206,\n...\n```", "```\n> eth.getTransactionFromBlock(latestBlockNum, 0)\n```", "```\n{\n  blockHash: \"0x8196edb66315b460f0bd4b9bdfa88...,\n  blockNumber: 1732206,\n\n  from: \"0x392fd4954de442bb6c4d57f1923b4708642d3408\",\n  gas: 210000,\n  gasPrice: 120000000000,\n  hash: \"0x4eb5ae8d7b7919f92d1dd02fcc407d6...\",\n...\n```", "```\n> eth\n```", "```\n> var amountInWei = 12000000\n> var amountInSzabo = web3.fromWei(amountInWei, 'szabo')\n> console.log(amountInWei + ' Wei is equivalent to '  + amountInSzabo + '\n     szabo')\n12000000 Wei is equivalent to 0.000012 szabo\n```", "```\n> var amountInEther = 12\n> var amountInWei = web3.toWei(amountInEther, 'Ether')\n> console.log(amountInEther + ' Ether is equivalent to '  + amountInWei + '\n      Wei')\n12 Ether is equivalent to 12000000000000000000 Wei\n```", "```\n    C:\\program files\\geth>geth --rpc --rpcapi \"eth,net,web3,personal\"\n    ```", "```\nhttp://localhost:8545\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"web3_clientVersion\\\",\\\"params\\\":[],\\\"id\\\":2\n3} http://localhost:8545\n\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":\"Geth/v1.6.5-stable-cf87713d/windows-\namd64/go1.8.3\"}\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"web3_clientVersion\\\",\\\"params\\\":[],\\\"i\nd\\\":23} http://localhost:8545\n```", "```\n$curl -H \"Content-Type: application/json\" -X POST --data\n'{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":23}'\nhttp://localhost:8545\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"net_listening\\\",\\\"params\\\":[],\\\"id\\\":23}\nhttp://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":true}\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"net_peerCount\\\",\\\"params\\\":[],\\\"id\\\":23}\nhttp://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":\"0x6\"}\n```", "```\n0x4d2            *1*\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_blockNumber\\\",\\\"params\\\":[],\\\"id\\\":23}\nhttp://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":\"0x1a705d\"}\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getBlockByNumber\\\",\\\"params\\\":[\\\"0x1a70\n5d\\\",true],\\\"id\\\":23} http://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":{\"difficulty\":\"0x3e37031\",\"extraData\":\"0xd6\n      83010700846765746885676...\",\"gasLimit\":\"0x47e7c4\",\"gasUsed\":\"0x323db6\",\"\n      hash\":\"0x0d6ae4b07a731834f5ca0d18859...\",...\n\"miner\":\"0x22d1d502356c1c2d...\",\"nonce\":\"0x3b886846920d3c81\",\"number\":\"0x1a70\n      5d\",\"parentHash\":\"0x90fbbacbf8945fb8d4...\"\n...\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getTransactionByBlockNumberAndIndex\\\",\\\n\"params\\\":[\\\"0x1a705d\\\",\\\"0x0\\\"],\\\"id\\\":23} http://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":{\"blockHash\":\"0x0d6ae4b07a731834f5ca0d1885.\n..\",\"blockNumber\":\"0x1a705d\",\"from\":\"0xcaf4a30e5fef5c0a...\",\"gas\":\"0x47b760\",\n\"gasPrice\":\"0x1bf08eb000\",\"hash\":\"0x9acf62392d266086ec8...\"\n...\n```", "```\nC:\\program files\\geth> geth attach ipc:\\\\.\\pipe\\geth.ipc\n\n> miner.setEtherbase(eth.accounts[1])\n```", "```\n> miner.start()\n```", "```\n> miner.stop()\n```", "```\nINFO [09-29|18:08:23] Imported new chain segment               blocks=1\n     txs=20  mgas=4.401   elapsed=25.066ms  mgasps=175.592 number=1732751\n     hash=fa5a62...050eb5\nINFO [09-29|18:08:25] Updated mining threads                   threads=0\nINFO [09-29|18:08:25] Transaction pool price threshold updated\n     price=18000000000\nINFO [09-29|18:08:25] Starting mining operation\nINFO [09-29|18:08:25] Commit new mining work                   number=1732752\n     txs=5   uncles=0 elapsed=7.017ms\nINFO [09-29|18:08:27] Generating DAG in progress               epoch=57\n     percentage=0 elapsed=922.455ms\nINFO [09-29|18:08:28] Generating DAG in progress               epoch=57\n     percentage=1 elapsed=1.846s\nINFO [09-29|18:08:29] Generating DAG in progress               epoch=57\n     percentage=2 elapsed=2.772s\n\nINFO [09-29|18:08:30] Generating DAG in progress               epoch=57\n     percentage=3 elapsed=3.753s\nINFO [09-29|18:08:31] Imported new chain segment               blocks=1\n     txs=0   mgas=0.000   elapsed=6.016ms   mgasps=0.000   number=1732752\n     hash=c98db8...2d044c\nINFO [09-29|18:08:31] Commit new mining work                   number=1732753\n     txs=6   uncles=0 elapsed=22.058ms\nINFO [09-29|18:08:31] Generating DAG in progress               epoch=57\n     percentage=4 elapsed=4.724s\nINFO [09-29|18:08:31] Imported new chain segment               blocks=1\n     txs=5   mgas=3.693   elapsed=21.056ms  mgasps=175.370 number=1732752\n     hash=f4432f...8bae81\n```", "```\n        C:\\program files\\geth>geth account new \n        ```", "```\n        Your new account is locked with a password. Please give a password.\n          Do not forget this password.\n        Passphrase:\n        Repeat passphrase:\n        Address: {47e3d3948f46144afa7df2c1aa67f6b1b1e35cf1}\n        ```", "```\n        C:\\program files\\geth>geth --password passworddirectory/passwordfile\n           account new \n        ```", "```\nC:\\program files\\geth>geth account list \n```", "```\nAccount #0: {edde06bc0e45645e2f105972bdefc220ed37ae10}\n     keystore://C:\\Users\\rober\\AppData\\Roaming\\Ethereum\\keystore\\UTC--2017-\n     06-24T08-49-46.377533700Z--edde06bc0e45645e2f105972bdefc220ed37ae10\nAccount #1: {4e6c30154768b6bc3da693b1b28c6bd14302b578}\n     keystore://C:\\Users\\rober\\AppData\\Roaming\\Ethereum\\keystore\\UTC--2017-\n     06-24T13-26-18.696630000Z--4e6c30154768b6bc3da693b1b28c6bd14302b578\nAccount #2: {70e36be8ab8f6cf66c0c953cf9c63ab63f3fef02}\n     keystore://C:\\Users\\rober\\AppData\\Roaming\\Ethereum\\keystore\\UTC--2017-\n     06-24T18-21-36.890638200Z--70e36be8ab8f6cf66c0c953cf9c63ab63f3fef02\nAccount #3: {c99048e9b98d3fcf8b5f0d5644794b562f9a2ea4}\n     keystore://C:\\Users\\rober\\AppData\\Roaming\\Ethereum\\keystore\\UTC--2017-\n     06-24T18-21-47.794428600Z--c99048e9b98d3fcf8b5f0d5644794b562f9a2ea4\n...\n```", "```\nC:\\program files\\geth>geth account update\n     47e3d3948f46144afa7df2c1aa67f6b1b1e35cf1\n```", "```\nUnlocking account 47e3d3948f46144afa7df2c1aa67f6b1b1e35cf1 | Attempt 1/3\nPassphrase:\nINFO [09-30|08:36:25] Unlocked account\n     address=0x47e3d3948f46144afa7df2c1aa67f6b1b1e35cf1\nPlease give a new password. Do not forget this password.\nPassphrase:\nRepeat passphrase:\n```", "```\n> personal.newAccount()\n```", "```\nPassphrase:\nRepeat passphrase:\n\"0x70ff99d4bc8054b2e09269bcbfdddf8e1ae7d155\"\n```", "```\n> eth.accounts\n```", "```\n[\"0xedde06bc0e45645e2f105972bdefc220ed37ae10\",\n     \"0x4e6c30154768b6bc3da693b1b28c6bd14302b578\",\n     \"0x70e36be8ab8f6cf66c0c953cf9c63ab63f3fef02\",\n     \"0xc99048e9b98d3fcf8b5f0d5644794b562f9a2ea4\", \n...\n```", "```\n> eth.accounts[0]\n```", "```\n\"0xedde06bc0e45645e2f105972bdefc220ed37ae10\"\n```", "```\n> var balanceInWei = eth.getBalance(\n\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\")\n```", "```\n> var balanceInEther = web3.fromWei(balanceInWei, \"Ether\")\n```", "```\n> var balanceAcc1 = eth.getBalance(eth.accounts[1]);\n> var balanceAcc2 = eth.getBalance(eth.accounts[2]);\n> console.log('Balance account 1: ' + balanceAcc1 + '; Balance account 2: ' +\n     balanceAcc2);\nBalance account 1: 1938331059000000000; Balance account 2:\n     1000741600000000000\n```", "```\n> personal.unlockAccount(eth.accounts[1]);\n```", "```\nUnlock account 0x4e6c30154768b6bc3da693b1b28c6bd14302b578\nPassphrase:\ntrue\n```", "```\n> var sender = eth.accounts[1];\n> var recipient = eth.accounts[2];\n> var amount = web3.toWei(0.0025, \"Ether\");\n> eth.sendTransaction({from:sender, to:recipient, value: amount});\n\"0xf1c342c668bcd1d59f3e95cfaf08acc6d7cda8adae02da05ceb76c8c3c137eef\"\n```", "```\n> console.log('Balance account 1: ' + eth.getBalance(eth.accounts[1]) + ';\n      Balance account 2: ' + eth.getBalance(eth.accounts[2]));\nBalance account 1: 1933311059000000000; Balance account 2:\n     1003241600000000000\n```", "```\nC:\\>curl -H \"Content-Type: application/json\" -X POST --data\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_accounts\\\",\\\"params\\\":[],\\\"id\\\":23}\nhttp://localhost:8545\n```", "```\n{\"jsonrpc\":\"2.0\",\"id\":23,\"result\":[\"0xedde06bc0e45645e2f105972bdefc220ed37ae1\n0\",\"0x4e6c30154768b6bc3da693b1b28c6bd14302b578\",\"0x70e36be8ab8f6cf66c0c953cf9\nc63ab63f3fef02\",\"0xc99048e9b98d3fcf8b5f0d5644794b562f9a2ea4\",...\n```", "```\npragma solidity ^0.4.0;   \n\ncontract SimpleCoin {   \n\n  mapping (address => uint256) public coinBalance; \n\n  constructor() public { \n    coinBalance[0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C] = 10000;   \n  }\n\n  function transfer(address _to, uint256 _amount) public { \n    coinBalance[msg.sender] -= _amount;\n    coinBalance[_to] += _amount;\n  }\n}\n```", "```\n  constructor(uint256 _initialSupply) public {\n    coinBalance[msg.sender] = _initialSupply;   \n}\n```", "```\n  function transfer(address _to, uint256 _amount) {\n    require(coinBalance[msg.sender] >= _amount);      *1*\n    require(coinBalance[_to] + _amount >= \n       coinBalance[_to]);                             *2*\n    coinBalance[msg.sender] -= _amount;  \n    coinBalance[_to] += _amount;         \n}\n```", "```\nrequire(coinBalance[msg.sender] > _amount);\n```", "```\nif (coinBalance[msg.sender] < _amount) throw;\n```", "```\nevent Transfer(address indexed from, address indexed to, uint256 value);\n```", "```\n    function transfer(address _to, uint256 _amount) {\n        ...\n\n        emit Transfer(msg.sender, _to, _amount);  \n    }\n```", "```\npragma solidity ^0.4.0;\n\ncontract SimpleCoin {\n    mapping (address => uint256) public coinBalance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor(uint256 _initialSupply) public {\n        coinBalance[msg.sender] = _initialSupply;   \n    }\n\n    function transfer(address _to, uint256 _amount) public {\n        require(coinBalance[msg.sender] > _amount);\n        require(coinBalance[_to] + _amount >= coinBalance[_to] );\n        coinBalance[msg.sender] -= _amount;  \n        coinBalance[_to] += _amount;   \n        emit Transfer(msg.sender, _to, _amount);  \n    }\n}\n```", "```\n\"0xdd870fa1b7c4700f2bd7f44238821c26f7392148\", 150\n```", "```\ntransact to browser/SimpleCoin.sol:SimpleCoin.transfer errored: VM error:\n     invalid opcode.\n  The constructor should be payable if you send value.\n  The execution might have thrown.\n  Debug the transaction to get more information.\n```", "```\n\"0xdd870fa1b7c4700f2bd7f44238821c26f7392148\", 150\n```", "```\n[\n  {\n    \"event\": \"Transfer\",\n    \"args\": [\n      \"0000000000000000000000004b0897b0513fdc7c541b6d9d7e929c4e5364d2db\",\n      \"000000000000000000000000dd870fa1b7c4700f2bd7f44238821c26f7392148\",\n      \"150\"\n    ]\n  }\n]\n```", "```\npragma solidity ^0.4.0;\n\ncontract SimpleCoin {\n    mapping (address => uint256) public coinBalance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor(uint256 _initialSupply) public {\n        coinBalance[msg.sender] = _initialSupply;   \n    }\n\n    function transfer(address _to, uint256 _amount) public {\n        require(coinBalance[msg.sender] > _amount);\n\n        require(coinBalance[_to] + _amount >= coinBalance[_to] );\n        coinBalance[msg.sender] -= _amount;  \n        coinBalance[_to] += _amount;   \n        emit Transfer(msg.sender, _to, _amount);  \n   }\n}\n```", "```\n{\"address\":\"4e6c30154768b6bc3da693b1b28c6bd14302b578\",\"crypto\":{\"cipher\":\"aes\n-128-ctr\",\"ciphertext\":\"bc7569458b99dcbbdcb0cf46402eeb83875baa6302d27e887a6d4\ne2d6e31771f\",\"cipherparams\":{\"iv\":\"f0838a98d39d532e8d96e9f7cc799712\"},\"kdf\":\"\nscrypt\",\"kdfparams\":{\"dklen\":32,\"n\":262144,\"p\":1,\"r\":8,\"salt\":\"fb2dbd4f24553c\n585025417b691ef11784cf6ae90aa412b73e4965ba3d4f2772\"},\"mac\":\"36ba647b1d2ff7a3d\n8ca6b32731593caee920dcc19d14e91915cb98a7a244c2c\"},\"id\":\"32bb1449-60f5-4cd0-\na4d2-4608fa9fc1c3\",\"version\":3}\n```", "```\n\"0x70e36bE8AB8f6Cf66C0C953cF9c63aB63f3FeF02\", 250\n```"]