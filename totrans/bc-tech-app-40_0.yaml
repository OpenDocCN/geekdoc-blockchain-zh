- en: List of acronyms and abbreviations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Acronym**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Meaning**'
  prefs: []
  type: TYPE_NORMAL
- en: ABAC
  prefs: []
  type: TYPE_NORMAL
- en: Attribute-Based Access Control
  prefs: []
  type: TYPE_NORMAL
- en: ABI
  prefs: []
  type: TYPE_NORMAL
- en: Application Binary Interface
  prefs: []
  type: TYPE_NORMAL
- en: AI
  prefs: []
  type: TYPE_NORMAL
- en: Artificial Intelligence
  prefs: []
  type: TYPE_NORMAL
- en: AM
  prefs: []
  type: TYPE_NORMAL
- en: Architecture and Mechanism
  prefs: []
  type: TYPE_NORMAL
- en: AMI
  prefs: []
  type: TYPE_NORMAL
- en: Advanced Metering Infrastructure
  prefs: []
  type: TYPE_NORMAL
- en: ANN
  prefs: []
  type: TYPE_NORMAL
- en: Artificial Neural Network
  prefs: []
  type: TYPE_NORMAL
- en: AR
  prefs: []
  type: TYPE_NORMAL
- en: Augmented Reality
  prefs: []
  type: TYPE_NORMAL
- en: ASIC
  prefs: []
  type: TYPE_NORMAL
- en: Application Specific Integrated Circuit
  prefs: []
  type: TYPE_NORMAL
- en: BaaS
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain-as-a-Service
  prefs: []
  type: TYPE_NORMAL
- en: BC
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: BFT
  prefs: []
  type: TYPE_NORMAL
- en: Byzantine Fault-Tolerant
  prefs: []
  type: TYPE_NORMAL
- en: BGP
  prefs: []
  type: TYPE_NORMAL
- en: Border Gateway Protocol
  prefs: []
  type: TYPE_NORMAL
- en: BTC
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin
  prefs: []
  type: TYPE_NORMAL
- en: CPU
  prefs: []
  type: TYPE_NORMAL
- en: Central Processor Unit
  prefs: []
  type: TYPE_NORMAL
- en: CSS
  prefs: []
  type: TYPE_NORMAL
- en: Common Style Sheet
  prefs: []
  type: TYPE_NORMAL
- en: CWE
  prefs: []
  type: TYPE_NORMAL
- en: Common Software Security Weaknesses
  prefs: []
  type: TYPE_NORMAL
- en: DAC
  prefs: []
  type: TYPE_NORMAL
- en: Discretionary Access Control
  prefs: []
  type: TYPE_NORMAL
- en: DAG
  prefs: []
  type: TYPE_NORMAL
- en: Directed Acyclic Graph
  prefs: []
  type: TYPE_NORMAL
- en: DAO
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Autonomous Organization
  prefs: []
  type: TYPE_NORMAL
- en: DApp
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Application
  prefs: []
  type: TYPE_NORMAL
- en: DDoS
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Denial of Service
  prefs: []
  type: TYPE_NORMAL
- en: DeFi
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Finance
  prefs: []
  type: TYPE_NORMAL
- en: DER
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Energy Resources
  prefs: []
  type: TYPE_NORMAL
- en: DID
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Identifiers
  prefs: []
  type: TYPE_NORMAL
- en: DL
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Ledger
  prefs: []
  type: TYPE_NORMAL
- en: DLT
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Ledger Technology
  prefs: []
  type: TYPE_NORMAL
- en: DoS
  prefs: []
  type: TYPE_NORMAL
- en: Denial of Service
  prefs: []
  type: TYPE_NORMAL
- en: DPoS
  prefs: []
  type: TYPE_NORMAL
- en: Delegated Proof of Stake
  prefs: []
  type: TYPE_NORMAL
- en: DSO
  prefs: []
  type: TYPE_NORMAL
- en: Demand-Side Optimization
  prefs: []
  type: TYPE_NORMAL
- en: EAC
  prefs: []
  type: TYPE_NORMAL
- en: Energy Attribute Certificates
  prefs: []
  type: TYPE_NORMAL
- en: ECO
  prefs: []
  type: TYPE_NORMAL
- en: Ecological
  prefs: []
  type: TYPE_NORMAL
- en: EH/s
  prefs: []
  type: TYPE_NORMAL
- en: Exahash per second
  prefs: []
  type: TYPE_NORMAL
- en: EI
  prefs: []
  type: TYPE_NORMAL
- en: Energy Internet
  prefs: []
  type: TYPE_NORMAL
- en: EIP
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum Improvement Proposal
  prefs: []
  type: TYPE_NORMAL
- en: ENS
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum Name Service
  prefs: []
  type: TYPE_NORMAL
- en: ERC
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum Request for Comments
  prefs: []
  type: TYPE_NORMAL
- en: ESI
  prefs: []
  type: TYPE_NORMAL
- en: Energy Service Interface
  prefs: []
  type: TYPE_NORMAL
- en: ETH
  prefs: []
  type: TYPE_NORMAL
- en: Ether
  prefs: []
  type: TYPE_NORMAL
- en: EVM
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum Virtual Machine
  prefs: []
  type: TYPE_NORMAL
- en: GO
  prefs: []
  type: TYPE_NORMAL
- en: Guarantees of Origin
  prefs: []
  type: TYPE_NORMAL
- en: GPS
  prefs: []
  type: TYPE_NORMAL
- en: Global Positioning System
  prefs: []
  type: TYPE_NORMAL
- en: HHC
  prefs: []
  type: TYPE_NORMAL
- en: Hedera Hashgraph Council
  prefs: []
  type: TYPE_NORMAL
- en: HTML5
  prefs: []
  type: TYPE_NORMAL
- en: Hyper Text Markup Language 5
  prefs: []
  type: TYPE_NORMAL
- en: HTTP
  prefs: []
  type: TYPE_NORMAL
- en: Hyper Text Transfer Protocol
  prefs: []
  type: TYPE_NORMAL
- en: IBAC
  prefs: []
  type: TYPE_NORMAL
- en: Identity-Based Access Control
  prefs: []
  type: TYPE_NORMAL
- en: IBC
  prefs: []
  type: TYPE_NORMAL
- en: Inter-blockchain Communication
  prefs: []
  type: TYPE_NORMAL
- en: IBTF
  prefs: []
  type: TYPE_NORMAL
- en: Istanbul Byzantine Fault-tolerant
  prefs: []
  type: TYPE_NORMAL
- en: ID
  prefs: []
  type: TYPE_NORMAL
- en: Identification; Identity
  prefs: []
  type: TYPE_NORMAL
- en: IDE
  prefs: []
  type: TYPE_NORMAL
- en: Integrated Development Environment
  prefs: []
  type: TYPE_NORMAL
- en: IoT
  prefs: []
  type: TYPE_NORMAL
- en: Internet of Things
  prefs: []
  type: TYPE_NORMAL
- en: IP
  prefs: []
  type: TYPE_NORMAL
- en: Internet Protocol
  prefs: []
  type: TYPE_NORMAL
- en: IPC
  prefs: []
  type: TYPE_NORMAL
- en: Inter-process Communication
  prefs: []
  type: TYPE_NORMAL
- en: IPFS
  prefs: []
  type: TYPE_NORMAL
- en: Inter-planetary File System
  prefs: []
  type: TYPE_NORMAL
- en: IMEI
  prefs: []
  type: TYPE_NORMAL
- en: International Mobile Equipment Identity
  prefs: []
  type: TYPE_NORMAL
- en: JS
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript
  prefs: []
  type: TYPE_NORMAL
- en: JSON
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript Object Notation
  prefs: []
  type: TYPE_NORMAL
- en: JSON-RPC
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript Object Notation-Remote Procedure Call
  prefs: []
  type: TYPE_NORMAL
- en: LTC
  prefs: []
  type: TYPE_NORMAL
- en: Litecoin
  prefs: []
  type: TYPE_NORMAL
- en: M2M
  prefs: []
  type: TYPE_NORMAL
- en: Machine to Machine
  prefs: []
  type: TYPE_NORMAL
- en: MAC
  prefs: []
  type: TYPE_NORMAL
- en: Mandatory Access Control
  prefs: []
  type: TYPE_NORMAL
- en: MI
  prefs: []
  type: TYPE_NORMAL
- en: Machine Interface
  prefs: []
  type: TYPE_NORMAL
- en: NB-IoT
  prefs: []
  type: TYPE_NORMAL
- en: Narrow-Band IoT
  prefs: []
  type: TYPE_NORMAL
- en: OM
  prefs: []
  type: TYPE_NORMAL
- en: Objective and Model
  prefs: []
  type: TYPE_NORMAL
- en: P2P
  prefs: []
  type: TYPE_NORMAL
- en: Peer-to-Peer
  prefs: []
  type: TYPE_NORMAL
- en: PAN
  prefs: []
  type: TYPE_NORMAL
- en: Personal-Area Networks
  prefs: []
  type: TYPE_NORMAL
- en: PEV
  prefs: []
  type: TYPE_NORMAL
- en: Plug-in Electric Vehicle
  prefs: []
  type: TYPE_NORMAL
- en: PoA
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Authority
  prefs: []
  type: TYPE_NORMAL
- en: PoC
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Capacity
  prefs: []
  type: TYPE_NORMAL
- en: PoS
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs: []
  type: TYPE_NORMAL
- en: PoSpace
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Space
  prefs: []
  type: TYPE_NORMAL
- en: PoW
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work
  prefs: []
  type: TYPE_NORMAL
- en: QoS
  prefs: []
  type: TYPE_NORMAL
- en: Quality of Service
  prefs: []
  type: TYPE_NORMAL
- en: RBAC
  prefs: []
  type: TYPE_NORMAL
- en: Role-Based Access Control
  prefs: []
  type: TYPE_NORMAL
- en: REC
  prefs: []
  type: TYPE_NORMAL
- en: Renewable Energy Certificates
  prefs: []
  type: TYPE_NORMAL
- en: RPC
  prefs: []
  type: TYPE_NORMAL
- en: Remote Procedure Call
  prefs: []
  type: TYPE_NORMAL
- en: RWMC
  prefs: []
  type: TYPE_NORMAL
- en: Random Walk Monte Carlo
  prefs: []
  type: TYPE_NORMAL
- en: SCT
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Tunnels
  prefs: []
  type: TYPE_NORMAL
- en: SG
  prefs: []
  type: TYPE_NORMAL
- en: Smart Grid
  prefs: []
  type: TYPE_NORMAL
- en: SHA
  prefs: []
  type: TYPE_NORMAL
- en: Secure Hash Algorithm
  prefs: []
  type: TYPE_NORMAL
- en: SLA
  prefs: []
  type: TYPE_NORMAL
- en: Service-Level Agreement
  prefs: []
  type: TYPE_NORMAL
- en: SSI
  prefs: []
  type: TYPE_NORMAL
- en: Self-Sovereign Identity
  prefs: []
  type: TYPE_NORMAL
- en: SWC
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract Weakness Classification
  prefs: []
  type: TYPE_NORMAL
- en: TC
  prefs: []
  type: TYPE_NORMAL
- en: Town Crier
  prefs: []
  type: TYPE_NORMAL
- en: TCP
  prefs: []
  type: TYPE_NORMAL
- en: Transmission Control Protocol
  prefs: []
  type: TYPE_NORMAL
- en: TEE
  prefs: []
  type: TYPE_NORMAL
- en: Trusted Execution Environment
  prefs: []
  type: TYPE_NORMAL
- en: TLS
  prefs: []
  type: TYPE_NORMAL
- en: Transport Layer Security
  prefs: []
  type: TYPE_NORMAL
- en: tps
  prefs: []
  type: TYPE_NORMAL
- en: Transactions per Second
  prefs: []
  type: TYPE_NORMAL
- en: UP
  prefs: []
  type: TYPE_NORMAL
- en: Universal Protocol
  prefs: []
  type: TYPE_NORMAL
- en: URL
  prefs: []
  type: TYPE_NORMAL
- en: Uniform Resouce Locator
  prefs: []
  type: TYPE_NORMAL
- en: VIN
  prefs: []
  type: TYPE_NORMAL
- en: Vehicles Identification Number
  prefs: []
  type: TYPE_NORMAL
- en: WAN
  prefs: []
  type: TYPE_NORMAL
- en: Wide-Area Networks
  prefs: []
  type: TYPE_NORMAL
- en: WASM
  prefs: []
  type: TYPE_NORMAL
- en: WebAssembly
  prefs: []
  type: TYPE_NORMAL
- en: WebRTC
  prefs: []
  type: TYPE_NORMAL
- en: Web Real-Time Communication
  prefs: []
  type: TYPE_NORMAL
- en: XMR
  prefs: []
  type: TYPE_NORMAL
- en: Monero
  prefs: []
  type: TYPE_NORMAL
- en: XRP
  prefs: []
  type: TYPE_NORMAL
- en: Ripple
  prefs: []
  type: TYPE_NORMAL
- en: ZEC
  prefs: []
  type: TYPE_NORMAL
- en: Zcash
  prefs: []
  type: TYPE_NORMAL
- en: List of notions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Ledger | A book, a list, or other collection of financial accounts and/or
    transactions. |'
  prefs: []
  type: TYPE_TB
- en: '| 51% Attack | A potential attack on a blockchain network, where a single entity
    or organization is able to control the majority of the hash power, potentially
    causing a network disruption. In such a scenario, the attacker would have enough
    mining power to intentionally exclude or modify the ordering of transactions.
    |'
  prefs: []
  type: TYPE_TB
- en: '| 6-blocks Confirmation | A period of time (commonly around 60 min) necessary
    for adding six new blocks behind a solved block that contain some transaction.
    After this period, the transaction is considered confirmed because creating a
    new version of the blockchain that will not contain a given transaction becomes
    too difficult, because too expensive in computing power. |'
  prefs: []
  type: TYPE_TB
- en: '| Altcoins | Cryptocurrencies other than Bitcoin. |'
  prefs: []
  type: TYPE_TB
- en: '| Artificial Neural Networks | A computing system is based on a collection
    of connected units or nodes called artificial neurons, which loosely model the
    neurons in a biological brain. |'
  prefs: []
  type: TYPE_TB
- en: '| Bitcoin | The most popular cryptocurrency, running on a blockchain created
    in January 2009 by an unknown person under the pseudonym Satoshi Nakamoto. |'
  prefs: []
  type: TYPE_TB
- en: '| Bitcoin/Digital Wallet | A software program for holding and trading Bitcoins
    which uses a person’s private key (secret number) to access the person’s public
    Bitcoin address (an identifier of 26–35 alphanumeric characters) and transaction
    signatures that need to be securely stored; the Bitcoin wallet comes in many forms
    – the four main types are desktop, mobile, web, and hardware. |'
  prefs: []
  type: TYPE_TB
- en: '| Blockchain | A distributed ledger consists of a series of transaction blocks
    where each block (except the first and the last) is linked with the previous and
    next block by means of cryptography, making that way an unbreakable chain of blocks.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Blockchain Fork | A situation within the community (of nodes/members of a
    blockchain P2P network) that occurs when in the network exist two or more versions
    of the blockchain (i.e., different nodes may have different versions of the file
    which contains blockchain data). |'
  prefs: []
  type: TYPE_TB
- en: '| Blockchain Mining | A peer-to-peer computer process aimed to secure and verify
    transactions of a given cryptocurrency (such as Bitcoin). |'
  prefs: []
  type: TYPE_TB
- en: '| Border Gateway Protocol | Protocol for routing of IP packets (routing protocol);
    it is a standardized exterior gateway protocol designed to exchange routing and
    reachability information among autonomous systems on the Internet. |'
  prefs: []
  type: TYPE_TB
- en: '| Branch Tip | A tip that represents the last individual transaction in a branch
    tip bundle (see IOTA bundle). |'
  prefs: []
  type: TYPE_TB
- en: '| Byzantine Fault Tolerant System | A system that is tolerant (i.e., resistant)
    to Byzantine Generals Problem; in the strict sense, a BFT system is capable of
    functioning properly as long as the number of corrupted elements is less than
    or equal to two-thirds of the overall number of elements. |'
  prefs: []
  type: TYPE_TB
- en: '| Byzantine Generals Problem | A class of failures where some of the components/elements
    of a system may be corrupted in the sense that they have the symptoms (appearance,
    behavior) that prevent other system’s components from reaching agreement (i.e.,
    consensus) among themselves. |'
  prefs: []
  type: TYPE_TB
- en: '| Car-to-Car Communication | Communication that takes place between vehicles
    with the aim of sharing information that can be used for traffic control or to
    warn drivers of dangers. |'
  prefs: []
  type: TYPE_TB
- en: '| Consensus mechanism | A mechanism (set of rules and protocols) that ensures
    that all participants dispose of identical copies of the distributed database
    files (i.e., of the distributed ledger). |'
  prefs: []
  type: TYPE_TB
- en: '| Coordinator (in the context of Tangle) | A mechanism implemented by IOTA
    Foundation with the aim to protect Tangle against vulnerabilities such double-spending
    (as the Tangle is not fully developed, i.e., the overall number of nodes and hash
    power in the IOTA network are relatively low); the Coordinator mechanism assumes
    the issuance of a milestone transaction every two minutes. |'
  prefs: []
  type: TYPE_TB
- en: '| Cryptocurrency | A digital currency in which encryption techniques are used
    to regulate the generation of units of currency and verify the transfer of funds,
    operating independently of a central authority, i.e., of a central bank; most
    of the cryptocurrencies are based on blockchain technology. |'
  prefs: []
  type: TYPE_TB
- en: '| Cumulative Weight | A metric used within the Random Walk algorithm for tip
    selection in the Tangle; the cumulative weight of a transaction in the Tangle
    is the total number (plus 1) of all transactions which came after, and at the
    same time, approved that transaction directly or indirectly. |'
  prefs: []
  type: TYPE_TB
- en: '| Decentralized Application | A computer application that runs on a decentralized
    computing system. DApps have been popularized by distributed ledger technologies
    such as the Ethereum blockchain; Smart contracts are a key part of DApps. |'
  prefs: []
  type: TYPE_TB
- en: '| Delay Attack | Attack on the Bitcoin’s P2P network that also exploits weaknesses
    of Border Gateway Protocol (similarly as partition attack); in Delay Attack, the
    propagation of blocks towards a victim node is effectively slowed down, that is,
    delayed; the main goal is to keep the victim node uninformed about a new block
    for almost 20 min, which is achieved through a Man-in-the-Middle attack where
    attacker modifies messages from victim node to the victim’s peer node; as the
    victim’s inquiring messages are wrong (due to modifications performed by an attacker),
    the victim node is unable to get from the network the freshest solved block (in
    order to add it on its copy of the blockchain); the victim wastes its computing
    power and time, instead of using it for solving the next block; consequently,
    the victim loses its possible earnings. |'
  prefs: []
  type: TYPE_TB
- en: '| Denial of Service Attacks | A cyber-attack that makes unavailable a host
    (computer, machine, network resource) connected to the Internet; typically accomplished
    by flooding the targeted host with excessive requests with the aim to overload
    the system and prevent legitimate requests from being fulfilled. |'
  prefs: []
  type: TYPE_TB
- en: '| Difficulty | The algorithm implemented within Bitcoin blockchain that regulates
    the level of difficulty for solving the PoW task (block solving), so that in average,
    the frequency of block solving is one block in every 10 min (i.e., 2016 solved
    blocks for 14 days); as a parameter, it is defined as Difficulty = Difficulty_1_target/Target_value,
    showing how many times it is more difficult to find a 256-bit long hash below
    current target value (determined by parameter Target_value) than to find a hash
    below a 256-bit reference target value (determined by parameter difficulty_1_target)
    which has 32 leading zeros. |'
  prefs: []
  type: TYPE_TB
- en: '| Difficulty Target | Name of a 32-bit field in the block header that contains
    parameter Target_value represented via 24-bit mantissa and 8-bit exponent; content
    of this field shown in hexadecimal notation is also known as bits. |'
  prefs: []
  type: TYPE_TB
- en: '| Digital Twin | A digital replica of potential and actual physical assets
    (physical twin), processes, people, places, systems, and devices that can be used
    for various purposes. |'
  prefs: []
  type: TYPE_TB
- en: '| Directed Acyclic Graph | A finite directed graph with no directed cycles.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Distributed Ledger | A consensus of replicated, shared, and synchronized
    digital data geographically spread across multiple sites, countries, or institutions.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Double Hash (or Hash-hash) Algorithm | Generally, double hashing is a computer
    programming technique used to resolve hash collisions by using a secondary hash
    of the key as an offset when a collision occurs; in the Bitcoin blockchain, double-hashing
    is realized through double use of SHA-256 hashing function, that is, f(x) = sha256(sha256(x)).
    |'
  prefs: []
  type: TYPE_TB
- en: '| Double Spending Problem | A potential flaw in a digital cash scheme in which
    the same single digital token can be spent more than once; it appears if two transactions
    (one of which is tricky) are sent into the network using the same private key
    of a fraudulent money sender (a buyer in two different transactions), but sent
    to different receiving addresses (sellers in two different transactions); as two
    transactions propagate through the network, one part of the network will accept
    one transaction and the other part another one. |'
  prefs: []
  type: TYPE_TB
- en: '| Ethash | A PoW mining algorithm implemented by the Ethereum network and Ethereum-based
    cryptocurrencies; like SHA-3, Ethash is a hash function that belongs to the same
    (Keccak) family of hash functions, but differs from SHA-3; Ethash was developed
    with a strong focus on protection from Application Specific Integrated Circuits
    miners, who were primarily mining Bitcoins. |'
  prefs: []
  type: TYPE_TB
- en: '| Ether | Native token (cryptocurrency) of the Ethereum blockchain; initially,
    Ether was not seen as a common digital currency with the main purpose as a means
    of paying goods and services online, but as an incentive mechanism to power the
    Ethereum blockchain. |'
  prefs: []
  type: TYPE_TB
- en: '| Ethereum Blockchain | A decentralized open-source blockchain that features
    smart contract functionality (a project started in 2013 and led by Vitalik Buterin).
    It is the second-largest cryptocurrency platform by market capitalization (behind
    Bitcoin). |'
  prefs: []
  type: TYPE_TB
- en: '| Event (in the context of hashgraph) | A data structure created by a node
    in the hashgraph P2P network at the moment of receiving gossip/synchronization
    message from another (sending) node; it contains a payload (information about
    new transactions and other gossips among nodes learned by sending node from the
    previously received gossip/sync messages), then the timestamp and two hash values
    that refer to two previous events called self-parent and other-parent event. |'
  prefs: []
  type: TYPE_TB
- en: '| Famous Witness (in the context of hashgraph) | A witness of a round that
    is elected as the famous for that round, in a virtual voting procedure performed
    by the witnesses of two (or more) upper rounds; it is the witness that most nodes
    have learned of fairly soon after it was created. |'
  prefs: []
  type: TYPE_TB
- en: '| Fiat currency/Fiat money | A government-issued currency that is not backed
    by a commodity such as gold. |'
  prefs: []
  type: TYPE_TB
- en: '| Genesis/Genesis Event | The very first transaction in the Tangle/IOTA in
    which was created the whole amount of IOTA tokens. |'
  prefs: []
  type: TYPE_TB
- en: '| Gossip Protocol | A procedure or process of computer P2P communication based
    on the way epidemics spread; used by some distributed systems to ensure that data
    is spread to all members of a group; in some ad-hoc networks, gossip protocol
    assumes that members forward received data to their neighbors. |'
  prefs: []
  type: TYPE_TB
- en: '| Guaranteed (or Secured) Block | A block in a blockchain, after which were
    added six or more new blocks, it is considered that blockchain forks cannot exist
    in the blockchain area before the guaranteed block. |'
  prefs: []
  type: TYPE_TB
- en: '| Hash Rate/Power | The number of hash calculations per second a computing
    device is capable of executing. |'
  prefs: []
  type: TYPE_TB
- en: '| Hash Value | A numeric value of a fixed length that uniquely identifies (a
    portion of) data, derived as the result of a hash function applied on the data;
    as the Bitcoin blockchain uses a hash-hash algorithm, i.e., the SHA-256 hash function
    implemented twice on input data (header of a transaction block), a hash value
    (of the header of the previous block in the blockchain) written in the block header
    (of an actual block) is 256 bits long. |'
  prefs: []
  type: TYPE_TB
- en: '| Hashgraph | A permissioned distributed ledger/platform developed by Leemon
    Baird (in 2016) and supported by Hedera hashgraph LLC that applies the hashgraph
    algorithm – a new gossip protocol (logically based on a DAG) that enables a full
    Byzantine fault-tolerant consensus mechanism; besides native cryptocurrency (the
    Hedera token), the platform is designed to provide other services such as file
    storage and smart contracts, i.e., the development of permissionless decentralized
    applications. |'
  prefs: []
  type: TYPE_TB
- en: '| Hedera Hashgraph Council | Governing body aiming at supporting the evolution
    of a stable and decentralized public ledger infrastructure based on the Hashgraph
    consensus algorithm. |'
  prefs: []
  type: TYPE_TB
- en: '| Hedera Hashgraph LLC | A company that launched the Hashgraph project; provides
    a public ledger platform for the project’s support. |'
  prefs: []
  type: TYPE_TB
- en: '| Hidden Tip | A tip that is not yet seen by a node due to the propagating
    delay in the IOTA network. |'
  prefs: []
  type: TYPE_TB
- en: '| Industry 4.0 | A term used as a meaning for the fourth industrial revolution;
    as it is not yet completely defined, it rather denotes a set of emerging technologies
    and tools with a potential to drastically improve various manufacturing processes;
    it also refers to the synergy between traditional industrial processes and digitalization,
    whereby the achieved manufacturing solutions are performed through the intelligent
    networking of machines and processes in the industry with the help of information
    and communication technology. |'
  prefs: []
  type: TYPE_TB
- en: '| Input Transaction (in a bundle) | An individual transaction (in a bundle)
    with the Value field that contains a negative value, meaning that the account
    specified by the field Address is charged with the amount of IOTAs specified in
    the Value field. |'
  prefs: []
  type: TYPE_TB
- en: '| Internet of Things | A system of interrelated computing devices, mechanical
    and digital machines provided with unique identifiers and the ability to transfer
    data over a network without requiring human-to-human or human-to-computer interaction.
    |'
  prefs: []
  type: TYPE_TB
- en: '| IOTA Bundle | A set of several consecutive individual transactions that represent
    one complete transaction in Tangle, whereby each individual transaction in a bundle
    directly approves the previous individual transaction, and all together directly
    approve the same trunk tip – the last individual transaction in another (previous)
    bundle called trunk tip bundle; first individual transaction in a bundle, besides
    trunk tip, also directly approves branch tip – the last individual transaction
    in another (previous) bundle called branch tip bundle. |'
  prefs: []
  type: TYPE_TB
- en: '| Lazy Tip | A tip, i.e., an older transaction in the Tangle selected for approval
    (by the newest transaction), which had already been approved by other old transactions
    that came after. |'
  prefs: []
  type: TYPE_TB
- en: '| LIDAR | A method for measuring distances (ranging) by illuminating the target
    with laser light and measuring the reflection with a sensor. |'
  prefs: []
  type: TYPE_TB
- en: '| Litecoin | A blockchain-based cryptocurrency created and launched by Charlie
    Lee in 2011; it differs from Bitcoins in aspects like faster block generation
    rate and use of script algorithm as PoW, which requires much more memory than
    Bitcoin’s hash-hash PoW algorithm; Litecoin is often mentioned as the silver to
    Bitcoin’s gold. |'
  prefs: []
  type: TYPE_TB
- en: '| Machine to Machine Communication | Direct communication between devices using
    any communications channel, including wired and wireless. |'
  prefs: []
  type: TYPE_TB
- en: '| Man-in-the-Middle Attack | An attack where the attacker secretly relays and
    possibly alters the communications between two parties who believe that they are
    directly communicating with each other. |'
  prefs: []
  type: TYPE_TB
- en: '| Master Shard | Entity (of the Hedera platform) that controls the allocation
    of nodes to different shards. |'
  prefs: []
  type: TYPE_TB
- en: '| Merkle Tree | A hash-based data structure with tree topology, i.e., a generalization
    of the hash list in which each leaf node is a hash of a block of data, and each
    non-leaf node is a hash of its children; Merkle trees typically have a branching
    factor of 2, meaning that each node has up to 2 children. |'
  prefs: []
  type: TYPE_TB
- en: '| Meta Transaction (in a bundle) | An individual transaction (in a bundle)
    with the neutral (zero) value written in the field Value; meta transactions are
    used as extensions of input transactions, usually having the tail parts of the
    input transactions’ signatures. |'
  prefs: []
  type: TYPE_TB
- en: '| Milestone (in the context of Tangle) | A transaction in the Tangle issued
    by the IOTA Foundation as a guarantee that all transactions approved directly
    or indirectly by this transaction are immediately considered as part of the consensus.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Miner | A participant/node in the blockchain’s P2P network involved in the
    blockchain mining process, in which miners try to solve a computationally intensive
    task (typically a mathematical problem or puzzle) in order to gain the opportunity
    to add a new block of transactions to the blockchain, and as a reward, to earn
    a certain amount of cryptocurrency (defined by the applied blockchain algorithm),
    as well as to get the transactions’ fees. |'
  prefs: []
  type: TYPE_TB
- en: '| Mining Pool | A joint group of cryptocurrency miners, who combine their computational
    resources over a network in order to solve a PoW task and add a block of transactions
    to the blockchain; if the pool does the PoW successfully, it is rewarded with
    cryptocurrency tokens; the reward is divided to the miners who contributed according
    to the proportion of each miner’s processing power or work relative to the whole
    group. |'
  prefs: []
  type: TYPE_TB
- en: '| Multi-homing | The practice of connecting a host or a computer network to
    more than one network. Most commonly, it is done to increase reliability or performance.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Node | A participant in the P2P network of a particular blockchain on which
    is run the blockchain’s native coin/cryptocurrency or decentralized application.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Nonce | Abbreviation for the number only used once that blockchain miners
    are solving, i.e., searching for, before adding a new block to the blockchain;
    it is a 32-bit value put in the header of a transaction block (of the Bitcoin
    blockchain) which meets the difficulty level restrictions in the sense that the
    256-bit hash value of the block header (with the nonce included) is small enough,
    i.e., that has a required number of leading binary zeros; for each block, the
    hash value of the block header (containing solved nonce) is put in the header
    of the next block, making that way an unbreakable chain of transaction blocks
    (i.e., blockchain). |'
  prefs: []
  type: TYPE_TB
- en: '| Other-parent Event | The last event created earlier by the hashgraph node,
    which sent a new gossip/sync message (to the node, which then creates a new event).
    |'
  prefs: []
  type: TYPE_TB
- en: '| Output Transaction (in a bundle) | An individual transaction (in a bundle)
    with the Value field that contains a positive value, which represents the amount
    of IOTAs that is to be added to the account specified by the field Address. |'
  prefs: []
  type: TYPE_TB
- en: '| Partition Attack | A type of attack on the Bitcoin’s P2P network in which
    an adversary (e.g., a malicious transit autonomous system on the Internet) exploits
    vulnerabilities of Border Gateway Protocol and performs prefix hijacking of a
    part of the P2P network, i.e., isolates a group of victim nodes (of the Bitcoin’s
    P2P network) in a certain point of the Internet; the consequence is that all blocks
    (and transactions contained within) solved during isolation period by the victim
    nodes will be discarded after the end of isolation because, after that, the blockchain
    version maintained on the victim nodes cannot survive in the whole network (due
    to smaller hash power of victim nodes compared to the rest of the network). |'
  prefs: []
  type: TYPE_TB
- en: '| Peer-to-Peer network | A network of equally privileged nodes (peers) connected
    by means of direct links, all of them participating in a decentralized application.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Permissioned DL | A distributed ledger in which each network participant
    (node) needs permission from a central entity (e.g., owner or administrator of
    the ledger) to access the network and make changes, i.e., to add transactions
    to the ledger. |'
  prefs: []
  type: TYPE_TB
- en: '| Permissionless DL | A distributed ledger without a central owner that controls
    network access, so any participant may join the network and add transactions to
    the ledger if the participant (computer node) runs the relevant software that
    complies with the rules of the applied consensus mechanism. |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of Capacity | See Proof of Space |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of Space  | Also called Proof of Storage or Proof of Capacity; the
    concept originally introduced for showing that one has a legitimate interest in
    service by allocating a sufficient amount of memory or disk space to solve a challenge
    presented by the service provider; it can be used as consensus mechanism as well,
    for achieving distributed consensus among the members/nodes of a cryptocurrency
    blockchain P2P network. |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of Stake | A type of consensus mechanism, i.e., an algorithm for achieving
    distributed consensus (among the members/nodes of a cryptocurrency blockchain
    P2P network) where the winner, i.e., the creator of the next transaction block
    (that is to be added to the blockchain), is chosen among the blockchain community
    members in dependence of the members’ stakes (the amounts of cryptocurrency members
    posses). |'
  prefs: []
  type: TYPE_TB
- en: '| Proof of Work | A type of consensus mechanism, i.e., an algorithm for achieving
    distributed consensus (among the members/nodes of a cryptocurrency blockchain
    P2P network) that requires some work from the service requester, usually meaning
    processing time by a computer while solving a given mathematical problem, a computationally
    intensive puzzle, etc. |'
  prefs: []
  type: TYPE_TB
- en: '| Random Walk Monte Carlo Algorithm | Algorithm for selection of a tip that
    will be approved by a new transaction that should be added to the Tangle. |'
  prefs: []
  type: TYPE_TB
- en: '| Round (in the context of hashgraph) | A part (a portion of events) that the
    hashgraph diagram is divided into as it grows in time. |'
  prefs: []
  type: TYPE_TB
- en: '| Round Created (of an event) | A serial number of the round an event belongs
    to in the hashgraph diagram; round created of an event is calculated as follows:
    if the event strongly sees a supermajority of witnesses of round r, where r is
    the max of the round created of the event’s parents, then the round created of
    the event is r+1 (otherwise, round created of the event is r). |'
  prefs: []
  type: TYPE_TB
- en: '| Round Received (of an event) | A serial number of the first round after an
    event (in the hashgraph diagram) which fulfills the condition that all the famous
    witnesses of that round see this event (not necessarily strongly); in other words,
    if an event is seen by all round n famous witnesses, this event is said to be
    received (by the community of nodes) in round n, i.e., that it has round received
    of n. |'
  prefs: []
  type: TYPE_TB
- en: '| Seeing (in the context of hashgraph) | A situation (in the hashgraph diagram)
    when an event Y is linked with some previous event X via at least one path no
    matter through how many nodes the path passes. |'
  prefs: []
  type: TYPE_TB
- en: '| Segregated Witness Protocol | A protocol upgrade of the Bitcoin blockchain
    that enables protection from transaction malleability and increases the block
    size limit (from 1MB to a little under 4MB) on the blockchain by removing signature
    data from Bitcoin transactions. |'
  prefs: []
  type: TYPE_TB
- en: '| Self-parent Event | The previous event created by the hashgraph node, which
    receives a new gossip/sync message (and creates a new event). |'
  prefs: []
  type: TYPE_TB
- en: '| Shards/Sharding Architecture | The architecture (i.e., the arrangement) of
    the Hedera platform nodes that should enable scalability and continuous decentralization
    of the platform in the future; the architecture assumes the existence of shards
    (partitions, groups) of nodes, where each shard contains a relatively small number
    of nodes. |'
  prefs: []
  type: TYPE_TB
- en: '| Site (in the context of Tangle) | Graph representation of a transaction in
    Tangle (issued by a node of IOTA network). |'
  prefs: []
  type: TYPE_TB
- en: '| Smart Car | In the past, this term denoted a car with advanced electronics;
    now (and in a stricter sense), a smart car is the car that, besides numerous enhancements,
    also possesses a property to be highly interconnected (e.g., via WiFi, Bluetooth,
    4G/5G) and with a certain level of self-driving automation capabilities (from
    assisted driving to the fully autonomous driving). |'
  prefs: []
  type: TYPE_TB
- en: '| Smart Contract | Computer code running on a DLT platform; it executes automatically
    when specific conditions are met; due to the execution on a DLT platform, a smart
    contract runs exactly as programmed (according to the agreed contract terms),
    i.e., there is no chance of being changed, interrupted, censored or interfered
    by any third party; smart contract execution enables the exchange of value. |'
  prefs: []
  type: TYPE_TB
- en: '| Smart Factory | A highly digitalized and connected environment where machinery
    and equipment are able to improve processes through automation and self-optimization.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Smart Manufacturing | This term is practically synonymous with Industry 4.0,
    which gives solutions involving one or more technologies such are: Internet of
    Things, Artificial Intelligence, Augmented Reality, Automation/Robotics, or Additive
    manufacturing/3D printing. |'
  prefs: []
  type: TYPE_TB
- en: '| Solidified Block | A block in a blockchain, after which were added a few
    (i.e., less than 6) new blocks. |'
  prefs: []
  type: TYPE_TB
- en: '| Solidity (programming language) | Programming language for smart contracts;
    initially developed for the execution of smart contracts on the Ethereum platform.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Strongly Seeing (in the context of hashgraph) | A situation (in the hashgraph
    diagram) when an event Y is linked with some previous event X in a way that all
    paths that connect X and Y contain (in whole) a supermajority of nodes (including
    the nodes that created events X and Y). |'
  prefs: []
  type: TYPE_TB
- en: '| Supermajority (in the context of hashgraph) | Any group of hashgraph nodes
    that gathers more than 2/3 of the total number of nodes. |'
  prefs: []
  type: TYPE_TB
- en: '| Sybil Attack | Type of attack where attacker subverts the reputation system
    of network service by creating a large number of pseudonymous identities and uses
    them to gain a disproportionately large influence; named after the subject of
    the book Sybil, a case study of a woman diagnosed with a dissociative identity
    disorder. |'
  prefs: []
  type: TYPE_TB
- en: '| Tangle/IOTA | A distributed ledger project that logically relies on a new
    DAG structure (called Tangle), designed to record and execute transactions between
    machines and devices in the IoT ecosystem, realizing its native token (cryptocurrency)
    called IOTA. |'
  prefs: []
  type: TYPE_TB
- en: '| Target_value | A parameter that represents the upper limit under which the
    256-bit hash value should be found for successful verification of a new block.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Tip | A (relatively new) transaction previously added to the Tangle, which
    is selected to be directly approved by a new transaction. |'
  prefs: []
  type: TYPE_TB
- en: '| TLS Encryption | Abbreviation from Transport Layer Security – a cryptographic
    protocol designed to provide communications security (primarily privacy and data
    integrity) between two or more communicating computer applications over a network;
    TLS operates on top of Transmission Control Protocol. |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction | A sequence of information exchange between communication partners.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction block | A block (i.e., set) of transactions – the basic data
    structure/unit which is linked with other blocks in a series by means of cryptography,
    creating that way a blockchain. |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction Fee (or Miner Fee) | The fee paid (in cryptocurrency) by the
    purchaser within a transaction to a miner who verified this transaction (i.e.,
    who added the transaction onto blockchain); with Bitcoin blockchain, a miner who
    successfully adds a block of transactions to the blockchain gets the fees for
    all transactions in the block. |'
  prefs: []
  type: TYPE_TB
- en: '| Tritt | A digit in balanced ternary logic; can take values from set {+1,
    0, –1}. |'
  prefs: []
  type: TYPE_TB
- en: '| Trunk Tip | A tip that represents the last individual transaction in a trunk
    tip bundle (see IOTA bundle). |'
  prefs: []
  type: TYPE_TB
- en: '| Trustless Truth | A term that denotes the state of a community in which exists
    a general consensus about something (e.g., about the trust in Bitcoin), where
    no one trusts anyone and where (just because of overall distrust) a set of rules
    (or a mechanism like PoW) is imposed to all participants, achieving in that way
    that eventually, everyone is confident about some common thing of interest. |'
  prefs: []
  type: TYPE_TB
- en: '| Tryte | A word of 3 Tritts (in balanced ternary logic); for designation of
    Trytes in IOTA (27 different values) are used 26 uppercase letters “A”, “B”, “C”,
    …, “X”, “Y”, “Z” and symbol “9” (which in balanced ternary logic represents the
    value +1). |'
  prefs: []
  type: TYPE_TB
- en: '| Vehicle-to-Environment (or Vehicle-to-Everything)'
  prefs: []
  type: TYPE_NORMAL
- en: Communication | Passing of information from a vehicle to any entity that may
    affect the vehicle, and vice versa; it is a vehicular communication system that
    incorporates other more specific types of communication as Vehicle-to-Infrastructure,
    Vehicle-to-Network, Vehicle-to-Vehicle, Vehicle-to-Pedestrian, Vehicle-to-Device
    and Vehicle-to-Grid. |
  prefs: []
  type: TYPE_NORMAL
- en: '| Virtual Voting (in the context of hashgraph) | A voting process in which
    the community (i.e., the nodes of hashgraph P2P network) collectively and democratically
    establishes the consensus on the transactions’ order in time; it is called virtual
    because nodes do not really send their votes over the Internet (i.e., the Yes/No
    decisions regarding the so-called famous witnesses), but each node calculates
    what votes other nodes would have sent, based on its knowledge of what other nodes
    know. |'
  prefs: []
  type: TYPE_TB
- en: '| Vote Weighting | An adjustment of virtual voting algorithm realized with
    the aim to enable usage of the algorithm in the community (of members/hashgraph
    nodes) whose members are not equal and where the significance of a member depends
    on the stake (the amount of Hedera’s native tokens) the member possesses; the
    adjustment is made through simple redefinitions of notions of majority, supermajority,
    and median value, whereby the members’ stakes are taken into account. |'
  prefs: []
  type: TYPE_TB
- en: '| Witness of a Round (in the context of hashgraph) | An event (at the beginning
    of a round) that strongly sees a supermajority of witnesses from the previous
    round; witnesses of round 1 are the first events ever created by the corresponding
    nodes. |'
  prefs: []
  type: TYPE_TB
