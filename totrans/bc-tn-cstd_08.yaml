- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2023B. Wu, B. WuBlockchain for Teens[https://doi.org/10.1007/978-1-4842-8808-5_8](https://doi.org/10.1007/978-1-4842-8808-5_8)
  prefs: []
  type: TYPE_NORMAL
- en: '8. Decentralized Finance (DeFi): Reinventing Financial Services'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Brian Wu^([1](#Aff3)  ) and Bridget Wu^([1](#Aff3))(1)Livingston, NJ, USA
  prefs: []
  type: TYPE_NORMAL
- en: The global financial system consists of many institutions, such as banks, insurance
    companies, stock exchanges, and various governmental agencies that regulate these
    institutions. The traditional finance service is centralized. Central authorities
    issue the currency and control the supply and distribution of money that fuels
    the economy. Centralized financial institutions manage the assets and carry out
    transactions through the centralized system to reduce fraud. However, these processes
    also increase complexity within the system and lead to high intermediary costs
    as well as slow transaction times. In addition, these transactions are not fully
    transparent to all parties involved.
  prefs: []
  type: TYPE_NORMAL
- en: Cryptocurrency adoption has accelerated rapidly over recent years, and crypto
    markets that trade digital assets in decentralized networks require no third-party
    intermediary. As a result, the popularity of these markets is reshaping the global
    financial industry.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized finance (DeFi) represents an innovative way to rebuild traditional
    financial services. Financial products are built around public or consortium blockchain
    and smart contracts. Users control their assets and personal data when transacting
    in the DeFi system. As the crypto industry matures, more investment will be going
    toward building DeFi solutions. Subsequently, the global decentralized finance
    market has experienced tremendous growth since 2020\. It is expected to grow at
    a steady compound annual growth rate (CAGR) of 43.8% from 2022 to 2030.
  prefs: []
  type: TYPE_NORMAL
- en: The DeFi ecosystem comprises a wide range of products, including infrastructure,
    decentralized exchanges (DEXs), lending and borrowing, stablecoins, insurance,
    payments, Decentralized Autonomous Organizations (DAO), and custodial services.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this chapter is to introduce you to DeFi. We will provide an overview
    of DeFi’s core concepts and structure, as well as an in-depth look at specific
    products in DeFi, such as decentralized stablecoins (e.g., MakerDAO’s DAI), decentralized
    exchanges (e.g., Uniswap), and decentralized Lending and Borrowing (e.g., Aave).
    Finally, by providing a step-by-step guide to using DeFi products in practice,
    the chapter will help you gain the knowledge needed to make real-world DeFi investments
    and trades.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will help you to understand the following practical topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is decentralized finance (DeFi)?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The structure of DeFi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized stablecoin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized exchanges (DEXs)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized lending and borrowing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized insurance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What Is Decentralized Finance (DeFi)?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Decentralized finance, also known as DeFi, uses cryptocurrency and blockchain
    technology to provide a full spectrum of financial products and services, from
    everyday payment, lending, and borrowing to complicated derivatives and margin
    trading.
  prefs: []
  type: TYPE_NORMAL
- en: Traditional, centralized financial systems control user transactions using their
    centralized services. The services charge a high transaction fee due to third
    parties involved transaction process for facilitating money movement between parties
    and compliance. In 2021, the banking industry earned an estimated $33.4 billion
    in overdraft revenues.
  prefs: []
  type: TYPE_NORMAL
- en: Users have to trust the centralized system to manage their funds. Finance services
    require the customer to provide personal information to verify their identity
    when doing business with banks and other financial institutions. The process is
    due to government regulations that require the bank to perform KYC (Know Your
    Customer) and AML (anti-money laundering) complex compliance. Financial institutions
    use AML to prevent money laundering.
  prefs: []
  type: TYPE_NORMAL
- en: However, increasing banking requirements are adding complexity to protecting
    customer data. As a result, the financial industry had to maintain and upgrade
    its system to make business services functional and ensure customer data is safe
    for implementing new technology.
  prefs: []
  type: TYPE_NORMAL
- en: Because financial institutions are involved in protecting customers’ money and
    highly sensitive personally identifiable information (PII) information, they have
    very high protection standards to take security most seriously. Furthermore, cybercriminals
    typically pick their targets based on maximum impact and profit. The financial
    industry perfectly meets these conditions and has always been a favored target
    for incentivized attacks by cyber attackers.
  prefs: []
  type: TYPE_NORMAL
- en: Modern software systems are typically very complex and involve many computer
    infrastructures, software, and components, such as open source libraries, databases,
    cloud ecosystems, containers, networks, operating systems, etc. Hackers use vulnerability
    search engines, such as Nmap, Ransomware, Trojans, and Worms, to find vulnerable
    computer systems, software, servers, and much more. To keep the highest level
    of data security is often very expensive and challenging, and many financial institutions
    have to tighten their budgets on IT spending.
  prefs: []
  type: TYPE_NORMAL
- en: There are around 44,000 banks and credit unions around the world. Unfortunately,
    not every company can adequately take care of user data for their customers. Today,
    banking and finance data breaches often happen. Therefore, banking and finance
    data breaches often occur.
  prefs: []
  type: TYPE_NORMAL
- en: Cybersecurity risks to the financial system have increased in recent years.
    Figure [8-1](#Fig1) shows financial data breaches from January 2018 to June 2022.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A bar and line graphs present the number of data breaches and affected records
    between January 2018 and April 2022\. The bar graph has the highest peak, at 37
    percent, on October 2020\. The line graph has the highest value at 10 million
    between July 2019 and October 2019.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-1
  prefs: []
  type: TYPE_NORMAL
- en: Financial Data Breaches in January 2018–April 2022
  prefs: []
  type: TYPE_NORMAL
- en: There were 982 financial data breaches from January 2018 to June 2022, and these
    breaches affected around 153 million individual records. Data breaches have increased
    by 13% from 2019 to 2020 and 11% from 2020 to 2021.
  prefs: []
  type: TYPE_NORMAL
- en: In March 2019, more than 100 million Capital One banking customers’ credit card
    information, including *Social Security Numbers,* dates of birth, credit card
    numbers, credit scores, credit limits, and balances, suffered a data breach. As
    a result, the bank has to pay $190 million to settle a class-action lawsuit.
  prefs: []
  type: TYPE_NORMAL
- en: The financial protocols can be defined in smart contracts in DeFi. The financial
    services are running on the decentralized blockchain network, which is available
    to anyone with an Internet connection. There are no traditional centralized authorities,
    intermediaries, and trust mechanisms. Users can maintain full control of their
    assets in a secure digital wallet instead of managing them in a bank. On Nov.
    11, 2022, FTX, “Futures Exchange,” as the second-largest cryptocurrency exchange,
    filed for bankruptcy. The exchange was valued at more than US$30 billion in early
    November 2022\. As a centralized exchange, FTX held users’ wallets and private
    keys and managed user funds. However, the exchanger improperly loaned customer
    funds to Alameda Research which led to problems when FTX ran into its “liquidity
    crisis.” FTX’s collapse reminds investors of ‘Not Your Keys, Not Your Coins’ and
    has spurred a rising interest in decentralized finance platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the transparent nature of public blockchains, data privacy has become
    a rising concern regarding DeFi systems in the blockchain. There are already many
    privacy-focused solutions on the blockchain, including secure Multi-Party Computation
    (MPC), zero-knowledge proofs, federated machine learning, off-chain data storage,
    etc.
  prefs: []
  type: TYPE_NORMAL
- en: DeFi is booming. DeFi’s total value locked or TVL has dramatically grown nearly
    40,000% in the last two years from $601 million at the start of 2020 to $239 billion
    in 2022\. The global financial services market is worth $23.32 trillion, and DeFi
    TVL is 240 billion as of 2021\. DeFi is only 1% of the total global financial
    services market. It is still in the very early stages in this space, with plenty
    of room for innovation. DeFi TVL should continue to increase dramatically in the
    next few years.
  prefs: []
  type: TYPE_NORMAL
- en: The Structure of DeFi
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: DeFi services are built based on layered architecture, which comprises multiple
    layers and the logical separation of components. Each layer’s components communicate
    with another layer’s components to execute its function. Communication happens
    through predefined interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: 'The DeFi ecosystem consists of five different layers, which encompass the followings:
    aggregation, application, protocol, asset, and settlement layers, as shown in
    Figure [8-2](#Fig2).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig2_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A schematic representation of a decentralized finance structure with 5 layers.
    It includes aggregation, application, protocol, asset, and settlement. Each factor
    includes the functions and processes that are involved in the layers.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-2
  prefs: []
  type: TYPE_NORMAL
- en: The structure of DeFi—five layers
  prefs: []
  type: TYPE_NORMAL
- en: 'Layer 1: The Settlement Layer'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The settlement layer provides the foundation for all DeFi transactions—public
    blockchain and its native cryptocurrency form the settlement layer. One example
    of the settlement layer is Ethereum and its native token ether (ETH).
  prefs: []
  type: TYPE_NORMAL
- en: The blockchain transaction data are permanently stored in the network. Therefore,
    any asset ownership state changes will adhere to the network’s consensus mechanisms,
    smart contract conditions, and other rules to ensure that transaction execution
    will only happen in line with established protocols.
  prefs: []
  type: TYPE_NORMAL
- en: Since this layer is principally composed of blockchain and distributed ledger
    technologies for trustless execution, it serves as a settlement layer.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, most DeFi applications are built on the Ethereum network,
    which holds over 25% of all decentralized finance protocols. Ethereum has 35.81
    billion, which is 58% of the $62.32 billion entire DeFi TVL. All EVM-related Defi
    TVL is worth 50.85 billion, which is around 82% of the whole DeFi TVL. Figure
    [8-3](#Fig3) illustrates the blockchains’ top DeFi protocols and TVL.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig3_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A pie chart and 3 D bar graph present the blockchain of DeFi protocols in percent
    and T V L in billions. The data from the pie chart are as follows. Ethereum, 25\.
    Binance, 20\. Polygon, 13\. Fantom, 12\. Avalanche, 11\. Arbitrum, 5\. Cronos
    and solana, 4\. Optimism and hormony, 3\. The bar graph has the highest value,
    about 35, for Ethereum.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-3
  prefs: []
  type: TYPE_NORMAL
- en: Blockchains’ top DeFi protocols and TVL
  prefs: []
  type: TYPE_NORMAL
- en: 'Layer 2: The Asset Layer'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The asset layer sits on top of the settlement layer. This layer consists of
    all tokens, including native protocol token assets like Ether and any additional
    tokens such as ERC-20, NFT, etc., issued on the blockchain. In this layer, it
    is worth mentioning are stablecoins.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Chapter [1](535492_1_En_1_Chapter.xhtml), we learned that the cryptocurrency
    market’s high volatility brings a risk for many financial products and general
    spending. Stablecoins provide investors with a safe harbor to minimize price volatility
    by providing stable value. Their value stays pegged to another less volatile asset,
    usually a popular currency like the US dollar or the British pound. Stablecoins
    act as the medium of exchange and are widely used as currency for daily transactions
    in DeFi. We will discuss more later in the decentralized stablecoin session. Here
    are some popular stablecoins in DeFi: Tether, USD Coin, Binance USD, TrueUSD,
    DAI, and Pax Dollar.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Layer 3: The Protocol Layer'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The protocol layer provides a set of principles and rules in a given industry
    that participants have agreed to follow. The protocols are written in smart contracts
    to govern DeFi transactions and are self-executable in a predefined manner without
    a central authority or third party’s interference. Many DeFi protocols are typically
    governed by decentralized autonomous organizations (DAOs).
  prefs: []
  type: TYPE_NORMAL
- en: A decentralized autonomous organization (DAO) is an organization without centralized
    authority—no CEO, no Board of Directors, no manager to obey or serve, and is the
    autonomy and self-governance model. Decisions get made from the bottom-up and
    distributed across community token holders who participate and cast votes. To
    become token holders, users must purchase cryptocurrency to become a member. All
    votes from the DAO are posted on a blockchain, making all actions auditable. Smart
    contracts establish the DAO’s rules and will automatically execute when a set
    of criteria are met. The entire DAOs process is fully transparent and autonomous.
  prefs: []
  type: TYPE_NORMAL
- en: In 2020, a DeFi lending protocol Aave launched its own governance token toward
    autonomous and decentralized governance. DAO community votes will determine Aave
    Market Policies and Protocol Policies, formalized in Aave Improvement Proposals
    (AIPs). Other DeFi projects have since adapted the model and moving toward DAO.
    The Popular DeFi project use DAO like Uniswap, Maker DAO, BitDAO, Aragon, Decred,
    0X, Dash, Compound, and Curve DAO.
  prefs: []
  type: TYPE_NORMAL
- en: All protocols defined at this layer are highly interoperable, which can be used
    by any Dapp built simultaneously and provide liquidity for the DeFi ecosystem.
    The main protocols in this layer are lending, exchange, insurance, asset management,
    and others. We will provide detailed DeFi use cases in the DeFi Products section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Layer 4: The Application Layer'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The application layer runs user-specific applications that connect to individual
    protocols. These applications serve as DeFi services which typically build Dapps
    to interact with a set of smart contracts functionality on the protocol layer,
    for example, asset management, loan, and insurance applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Level 5: The Aggregation Layer'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As DeFi exponentially grows, the number of new platforms and protocols in the
    DeFi ecosystem appears quickly. Consequently, keeping an eye on all the upcoming
    DeFi products has become increasingly challenging.
  prefs: []
  type: TYPE_NORMAL
- en: The aggregation layer utilizes the application layer to aggregate various applications
    and protocols to provide a broader service and tools and allow users to efficiently
    perform complex tasks by connecting to several protocols and applications. DeFi
    aggregator platforms provide simply a one-stop solution that allows users to use
    a single aggregator dashboard to execute multiple types of DeFi transactions.
    Those aggregator platforms have become very popular among active DeFi users. Around
    20% of decentralized trading volumes were through the DeFi aggregator in mid-2020.
  prefs: []
  type: TYPE_NORMAL
- en: One of the top DeFi aggregator examples is 1inch. It is designed as the price
    aggregator to provide tools that extract price data for various tokens traded
    on decentralized multiple exchanges (DEX). 1inch aggregator uses custom wrapper
    smart contracts that wrap/unwrap tokens at the current exchange rate. Traders
    can explore and trade cryptocurrencies across DEXes. Aggregators support cryptocurrency
    exchange at popular DEXes on Ethereum, Binance Smart Chain, Polygon, Optimistic
    Ethereum, Arbitrum, Avalanche, Gnosis Chain, and many others blockchains. Figure
    [8-4](#Fig4) shows a 1inch aggregator interface.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A pair of screenshots from the 1-inch aggregator interface depict the select
    a token screen with Ethereum and U S dollar coins. The connect wallet option has
    terms and lists the networks and wallets.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-4
  prefs: []
  type: TYPE_NORMAL
- en: 1inch Aggregator Interface
  prefs: []
  type: TYPE_NORMAL
- en: The DeFi product aims to reshape the traditional industry by providing various
    decentralized financial services such as lending, payment, insurance, trading,
    credit, risk, and many other financial products. The products eliminate the centralized
    third-party firms within a permissionless peer-to-peer network. Furthermore, DeFi
    products are designed modularly, enabling applications much freedom to integrate
    these open DeFi services into their products.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Stablecoin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The crypto industry is still in its infancy stage. Compared to the traditional
    global finance market, the liquidity of digital assets is still relatively small.
    Moreover, volatility comes with any emerging market with low liquidity.
  prefs: []
  type: TYPE_NORMAL
- en: All of this led to the rise of stablecoins. A stablecoin is a crypto that aims
    to provide a safe digital asset to maintain stability in value. It is pegging
    the price to other types of money, such as a fiat currency, like the USD or commodity
    money like gold or oil. In the past few years, stablecoins have significantly
    gained popularity, and many stablecoin projects have been launched in the cryptocurrency
    market.
  prefs: []
  type: TYPE_NORMAL
- en: Stablecoin History
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The first stablecoin, bitUSD, was issued back in July 2014\. bitUSD is pegged
    to USD and can be traded freely on BitShares. Another stablecoin, Tether (USDT),
    was launched in October 2014, and Like bitUSD, the tether is also pegged to USD.
    Today, USDT is the stablecoin leading in the market cap.
  prefs: []
  type: TYPE_NORMAL
- en: Figure [8-5](#Fig5) shows a timeline of the launches of primary stablecoins
    in the last few years:![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig5_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A timeline diagram of the launches of major stable coins. The bit U S dollar
    was introduced in 2014, followed by the D A I in 2017, the true U S dollar in
    2018, the B U S D in 2019, the F E I in 2021, and the U S D D in 2022.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-5
  prefs: []
  type: TYPE_NORMAL
- en: Stablecoin Timeline
  prefs: []
  type: TYPE_NORMAL
- en: Types of Stablecoins
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Stablecoins are classified into several types.
  prefs: []
  type: TYPE_NORMAL
- en: Commodity-Collateralized Stablecoins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Commodity-backed stablecoins refer to stablecoins collateralized are backed
    using physical assets like gold, oil, and real estate. The most popular commodity
    collateralized stablecoins are Tether Gold (XAUT) and Paxos Gold (PAXG).
  prefs: []
  type: TYPE_NORMAL
- en: Fiat-Collateralized Stablecoins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Fiat-collateralized stablecoins are pegged to the value of fiat, such as USD,
    EUR, or GBP, which is real money issued by governments. Most often, fiat is USD.
    For example, tether (USDT) and USD Coin (USDC) are examples of fiat-collateralized
    stablecoin.
  prefs: []
  type: TYPE_NORMAL
- en: Crypto-Collateralized Stablecoins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Crypto-collateralized stablecoins refer to stablecoins that are backed by existing
    digital cryptocurrencies such as BTC or ETH. One example is MakerDAO’s stablecoin,
    DAI. DAI is an ERC-20 token pegged to USD with a ratio of 1:1 achieved on-chain
    via smart contracts with incentives. The stablecoins supply is regulated on-chain
    via smart contracts and DAOs.
  prefs: []
  type: TYPE_NORMAL
- en: Noncollateralized Stablecoins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The term noncollateralized stablecoins refer to stablecoins whose price is pegged
    to $1 and not backed by collateral. It typically uses algorithms written in smart
    contracts to control the stabecoins’ money supply and stabilize the price. There
    is no collateral needed to mint coins.
  prefs: []
  type: TYPE_NORMAL
- en: Neutrino USD and USDD are algorithmic crypto-collateralized stablecoins examples.
    All operations, including issuance, collateralization, staking, and reward payouts,
    are transparent and governed by smart contracts and a liquidity pool.
  prefs: []
  type: TYPE_NORMAL
- en: A Deep Dive into Stablecoins—Maker (DAI)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let us look into a popular stablecoins example Maker (DAI), to understand more.
    MakerDAO, a decentralized autonomous organization (DAO), runs in the Ethereum
    blockchain. MakerDAO is the two-token model design—governance token and stablecoin.
    There are three coins in the Maker platform: Maker coin (MKR), Sai (SAI), and
    DAI (DAI).'
  prefs: []
  type: TYPE_NORMAL
- en: The MKR is a governance token used for voting rights on the Maker platform from
    community participants. MKR is not a stablecoin. The second token is a stablecoin
    called DAI. DAI is multi-collateral DAI and is used for payment, collateral, exchange
    for the asset, integration with many protocols, and many others service in the
    DeFi ecosystem. DAI is currently backed by Ether (ETH) and Basic Attention Token
    (BAT). The third token is Sai, which is a single collateral type backing DAI.
    The collateral backed in Sai is ETH only.
  prefs: []
  type: TYPE_NORMAL
- en: How DAI Works
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: DAI currently has a market cap of $6.93 billion and a 6.9 billion DAI supply.
    There is no cap on the total supply of DAI, and supply is managed based on the
    Maker Vault. Before multi-collateral DAI (MCD) was released in November 2019,
    it was called Collateralized Debt Position (CDP).
  prefs: []
  type: TYPE_NORMAL
- en: The Maker Vault is a core smart contracts component in MakerDAO which will create
    DAI after holding the collateral (ether) for the Maker system. Once the borrowed
    DAI is returned, Maker Vault releases locked collateral and burn these DAI.
  prefs: []
  type: TYPE_NORMAL
- en: DAI is over-collateralized to account for, which needs to lock up 150% of the
    value of collateral to handle infamous volatility. For example, if you deposit
    $100 in Ethereum, you will receive $50 in DAI. Assume 1 Ethereum is 1439.685 DAI.
    100 DAI is backed by 0.104 Ether (ETH).
  prefs: []
  type: TYPE_NORMAL
- en: Let us look at an analogy example to understand how Maker Vault manages the
    DAI peg to the dollar.
  prefs: []
  type: TYPE_NORMAL
- en: An investor who wants to borrow DAI creates a Maker Vault and sends ETH into
    the Maker Vault. Maker Vault generates the amount of DAI and locks up these ETH
    collaterals in the form of Pooled Ether (PETH). The amount of DAI created is based
    on how much ether the user has put into the Maker Vault. Generate DAI will deposit
    into the user’s wallet with interest over time, called DAI Saving Rate (DSR).
    Users can freely get their escrowed collateral back at any time. They need to
    pay the DAI plus some of the stability fee (MKR) to the Maker Vault. After that,
    these DAI are burned, and Maker Vault is closed.
  prefs: []
  type: TYPE_NORMAL
- en: Figure [8-6](#Fig6) illustrates the entire Maker Vault flow.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig6_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A flow chart presents the entire maker vault process in 6 steps. It consists
    of deposit 1 E T H, open a vault that gives 1 vault contain 1 E T H and 1439.685
    D A I, redeem and return 1439.685 D A I, burn 1439.685 D A I and return 1 E T
    H, and close a vault that gives 1 vault.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-6
  prefs: []
  type: TYPE_NORMAL
- en: Maker Vault Flow Manager DAI Creation and Burn
  prefs: []
  type: TYPE_NORMAL
- en: When either goes down, or DAI goes up, it could cause the collateral ether value
    held in Maker Vault to be worth less than the amount of DAI’s original backing.
    However, since DAI is created by over-collateralization, Maker protocol will ensure
    Maker Vault holds enough Eth to pay back DAI and liquidates Maker Vault when the
    account becomes too risky. For example, if the market ether price has dropped
    below a certain threshold, the Maker Vault will lock up collateral until the user
    pays back enough DAI or auction off ether to the highest bidder.
  prefs: []
  type: TYPE_NORMAL
- en: Maker (MKR) Coins Supply
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: MakerDAO initially launched with a supply of 1 million MKR tokens. As of September
    2022, the circulating supply of Maker tokens is around 977,631, with a market
    cap of over 737 million USD. The total supply of MKR is a dynamic value depending
    on market price and the overall health of the Maker Protocol’s system. Maker systems
    use complex mechanisms to govern DAI’s stability by issuing and removing MKR.
  prefs: []
  type: TYPE_NORMAL
- en: DAI’s value is secured by collateral like ETH, which is stored in Maker vaults.
    When the ETH market price is down, the value of ETH becomes insufficient to stay
    pegged at $1 with the corresponding amount of DAI. In that case, the Maker Protocol
    automatically triggers the liquidation of the vault.
  prefs: []
  type: TYPE_NORMAL
- en: The Maker Protocol will create new MKR tokens to increase the total supply.
    Then, those new MKR tokens will sell and cover the remaining value loss.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if the collateral price is up, to keep DAI in stable value,
    the Maker Protocol will buy back and burn MKR tokens. In this way, it will decrease
    MKR’s total supply, resulting in excess DAI being auctioned.
  prefs: []
  type: TYPE_NORMAL
- en: The general flow is presented in Figure [8-7](#Fig7).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig7_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A flow diagram of the maker token circulation depicts the maker protocol. It
    includes vault and E T H, which generate more D A I tokens as E T H prices rise
    and buy back and burn, and less D A I tokens as E T H prices fall and mint and
    E T H prices down.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-7
  prefs: []
  type: TYPE_NORMAL
- en: Circulation of MKR Token
  prefs: []
  type: TYPE_NORMAL
- en: MakerDAO’s Governance
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'As we learned, MKR is the governing token of DAI. MKR token holders have voting
    power on any decision in the MakerDAO, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Add a​ ​new​ ​collateral asset ​vault.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adjust risk parameters for existing vaults.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modify​ ​the DAI Savings Rate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trigger Emergency Shutdown.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose the stability fees.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose the Debt Ceilings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setup the set of Oracle Feeds.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upgrade the system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maker Protocol supports the rules for on-chain and off-chain governance.
  prefs: []
  type: TYPE_NORMAL
- en: Everyone, including non-MKR holders, can propose a new governance rule. First,
    the proposal can be discussed informally and voted on off-chain governance in
    the public MakerDAO forum ([https://forum.makerdao.com](https://forum.makerdao.com)).
    Then more formally, vote on the on-chain by MKR holders.
  prefs: []
  type: TYPE_NORMAL
- en: 'The on-chain voting takes two forms: Governance Polls and Executive Votes.
    The on-chain vote can be accessed through the Maker Foundation’s voting portal
    ([https://vote.makerdao.com/](https://vote.makerdao.com/)).'
  prefs: []
  type: TYPE_NORMAL
- en: Governance Polls
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Governance Polls, also known as Proposal Polling, measure the sentiment of
    MKR holders on a proposal. It does not execute on-chain changes. Governance Polls
    must happen before the proposal moves to an executive vote. Here are examples
    proposed in the past:'
  prefs: []
  type: TYPE_NORMAL
- en: Community Greenlight Poll—Cabot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collateral Onboarding Project-based Funding Request (PFR)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ratification Poll for Modify DAI Foundation Core Unit Budget
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oh no, this should not be here
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PPG—Open Market Committee Proposal ![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figa_HTML.png)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A screenshot of the governance poll displays the posted date at the top. The
    text below reads, community greenlight poll, cobot. Signal your support or opposition
    to prioritising onboarding cobot. It has options below for medium impact, greenlight,
    comments, and view details.
  prefs: []
  type: TYPE_NORMAL
- en: Executive Votes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Executive Votes execute technical changes to the Maker Protocol and changes
    to the state of the protocol or the DAO as a whole in the blockchain. Here are
    some examples of an executive Vote in the past:'
  prefs: []
  type: TYPE_NORMAL
- en: Onboarding real-world asset vaults
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parameter changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Core unit budget distributions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MKR vesting transfers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Form consensus on important community goals and targets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collateral onboarding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Voting power is measured by the number of MKR tokens voters own and present.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if 100 MKR holders with 100 MKR vote for Proposal A, while 50 holders
    with 1,000 MKR vote for Proposal B, Proposal B wins because of support from more
    MKR tokens.
  prefs: []
  type: TYPE_NORMAL
- en: Vote on a Proposal
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Next, we will demonstrate how to vote on a proposal in Maker Foundation’s voting
    portal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Get Your MKR Token'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: You can find an exchange to buy, sell and trade MKR, such as Coinbase, Binance,
    Kraken, crypto.com, and others.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Connect to Ethereum Mainnet with Wallet'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Click connect wallet button in Maker Foundation’s voting portal and connect
    to Ethereum by selecting a wallet:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figb_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of connecting to Ethereum Mainnet with Wallet displays the option
    of selecting a wallet along with a welcome back screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Select an Active Vote'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Find an active vote in the voting portal and choose vote options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figc_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the active vote screen displays one specific governance poll,
    your vote section, vote breakdown percentages, and system info.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Review and Submit Your Vote'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figd_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the review and submit your vote screen displays the one specific
    governance poll with your vote and comment boxes, the submit option, and also
    displays the Microsoft notification that contains Ethereum mainnet details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Vote Completed'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fige_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the vote completed screen displays the text reads, you successfully
    voted on 1 poll with that poll details, and the option of sharing all your votes.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Exchanges (DEXs)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Centralized exchanges (CEXs) work similarly to a bank. Both buyers and sellers
    trust these exchange platforms to trade their assets. Users can buy, sell, and
    trade digital assets such as Bitcoin, Ether, or other cryptocurrencies in the
    central wallet of the exchange by paying certain transaction fees, and exchanges
    will control those funds and execution of crypto trades through internal systems.
    Then sign the transaction in the blockchain on the user’s behalf.
  prefs: []
  type: TYPE_NORMAL
- en: Liquidity means how quickly you can exchange an asset for cash without affecting
    its market price. Since centralized exchanges are highly regulated, they attract
    many active users. These users are creating more orders and lead to high trading
    volumes with a faster exchange rate, which means more liquidity.
  prefs: []
  type: TYPE_NORMAL
- en: To create a centralized exchange account, the user must provide a valid government-issued
    ID, banking details, and other personal information. The signup process is part
    of KYC (Know Your Customer) and AML (Anti Money Laundering) practices required
    by regulations. In addition, it helps exchanges determine a customer risk level
    and prevent criminal activity like money laundering and the financing of terrorism.
    Once a centralized exchange verifies and approves identity, the user can deposit
    funds onto the exchange account via wire transfer, ACH transfer, or by depositing
    cryptocurrencies such as Bitcoin or ether. Then, the user may begin trading.
  prefs: []
  type: TYPE_NORMAL
- en: Coinbase, Kraken, Crypto.com, and Binance are the popular centralized exchanges
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: Although centralized exchanges (CEXs) currently *handle the majority* of cryptocurrency
    trading activity, decentralized exchanges (DEXs) are growing in popularity. DEXs
    are the direct opposite of centralized cryptocurrency exchanges, which manage
    token ownership of the exchange and hold user’s private keys. Decentralized exchanges
    (DEXs) are peer-to-peer trading platforms that allow users to keep control of
    their funds and purchase or sell blockchain-based tokens and coin cryptocurrencies
    without an intermediary to control the transaction process. Instead, the user
    controls the wallet’s private keys. DEXs use smart contracts, which define set
    conditions to execute and record every transaction on the blockchain with a low
    transaction fee. Since DEXs do not involve any centralized authority, meaning
    KYC/AM are not required. Anyone can open an account to attend the DeFi ecosystem
    to trade. The transaction is fully anonymous.
  prefs: []
  type: TYPE_NORMAL
- en: Table [8-1](#Tab1) compares the difference between centralized exchanges and
    decentralized centralized exchanges:Table 8-1
  prefs: []
  type: TYPE_NORMAL
- en: Comparing centralized and decentralized exchanges
  prefs: []
  type: TYPE_NORMAL
- en: '|   | CEXs | DEXs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Control | Exchange control funds | User control funds |'
  prefs: []
  type: TYPE_TB
- en: '| Fee | Required. Higher transaction fees | Zero or very minimal fees |'
  prefs: []
  type: TYPE_TB
- en: '| Liquidity | High liquidity | Low liquidity |'
  prefs: []
  type: TYPE_TB
- en: '| Regulation | KYC/AML required | KYC/AML not required |'
  prefs: []
  type: TYPE_TB
- en: '| User identity | Not anonymous | Anonymous |'
  prefs: []
  type: TYPE_TB
- en: '| Usage | Easy to use (even for beginners) | Not user-friendly. Need profession
    knowledge |'
  prefs: []
  type: TYPE_TB
- en: '| Security | Could be hacks and server downtime | No hacks and server downtime
    |'
  prefs: []
  type: TYPE_TB
- en: Type of Decentralized Exchanges
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'DEXs are a foundation of decentralized finance (DeFi), which allow the trading
    of digital assets on automated smart contracts. There are three primary types
    of decentralized exchanges: Automated market makers, Order books DEXs, and DEX
    aggregators described in Figure [8-8](#Fig8).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig8_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: An organizational chart depicts the three types of decentralized exchange. The
    types are automated market makers, order book D E Xs that is further subdivided
    into the on-chain and off-chain order books, and D E X aggregators.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-8
  prefs: []
  type: TYPE_NORMAL
- en: Type of decentralized exchanges
  prefs: []
  type: TYPE_NORMAL
- en: Automated Market Makers (AMMs)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On a traditional exchange platform, a market maker is typically a brokerage
    house, large bank, or institution that will “create the market,” as the name suggests.
    Market makers create liquidity for trading pairs in the market by buying and selling
    securities for their own accounts. Buyers and sellers offer different prices for
    an asset, and market makers always quote two-sided markets for a particular asset.
    They compensate for the difference in the bid-ask spread—the asking price exceeds
    the bid price for an asset in the market by providing purchase and sale solutions
    for investors.
  prefs: []
  type: TYPE_NORMAL
- en: Trader A, Alice, wants to buy 1 BTC at $19,600\. The exchange needs to find
    a Trader B, Bob, willing to sell 1 BTC at Alice’s preferred exchange range, such
    as $19,700\. The centralized exchange will act as a middleman between Alice and
    Bob. The exchange will offer $19,620 to Bob, assuming Bob accepts the offer. The
    exchange will then sell Alice 1 BTC at $19,660\. The exchange will get a profit
    of about $40\. The process is illustrated in Figure [8-9](#Fig9).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig9_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A schematic diagram of the activities of the centralized exchange between Alice
    and Bob. Bob wants to sell 1 B T C for 19,700 dollars, but Alice wants to buy
    it for 19,600 dollars. Alice wants to sell 1 B T C for 19,660 dollars, and Bob
    wants to buy it for 19,620 dollars. The profit from these exchanges is 40 dollars.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-9
  prefs: []
  type: TYPE_NORMAL
- en: Market maker activities
  prefs: []
  type: TYPE_NORMAL
- en: In the case of an automated market maker (AMM), sometimes called proactive market
    maker, a market maker is replaced with autonomous protocols using smart contracts.
    The smart contracts in AMM always keep a quote between two (or more) assets and
    determine the price of digital assets and provide liquidity.
  prefs: []
  type: TYPE_NORMAL
- en: AMM Basic Concepts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compared to CEXs, the number of buyers and sellers in DEXs are still small.
    Therefore, finding enough buyers and sellers to trade assets at matched prices
    will be hard. AMMs are creating liquidity pools to solve this problem. AMMs provide
    a practice called “yield farming” for liquidity providers (LP) to earn bonus yield
    by adding an appropriate balance of assets into a liquidity pool. LP will automatically
    obtain reward tokens, Ethereum-based ERC-20 tokens, known as liquidity provider
    (LP) tokens. These LP tokens represent LP ownership as a pool provider. When LPs
    withdraw deposited funds, LP tokens will return to the DeFi system. The pool will
    charge transaction fees when each trade occurs in the liquidity pool. LP token
    holders will be rewarded proportionately with the liquidity pool’s growth, and
    LP can claim those rewards regularly. For example, if you contribute $100 worth
    of tokens to an AMM DEXs pool (such as Uniswap) with a total market value of $1000,
    you will receive 10% of that pool’s LP tokens.
  prefs: []
  type: TYPE_NORMAL
- en: Asset funds in a liquidity pool are locked in a smart contract. With AMM, traders
    can seamlessly trade their assets in the platform using the liquidity pools without
    needing a centralized market maker. LPs will be rewarded a fraction of the fees
    and incentives on their investments.
  prefs: []
  type: TYPE_NORMAL
- en: There is no seller or buyer on the other side. Instead, an automated algorithm
    determines the price of the tokens in liquidity pools in the AMM smart contract.
    The smart contract algorithm in AMM will be automated and optimized, adjusting
    the price to react to market needs.
  prefs: []
  type: TYPE_NORMAL
- en: What Are the Existing AMM Models?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: AMMs use a mathematical formula to adjust prices algorithmically based on supply
    in liquidity pools to maintain the balance of assets in the liquidity pool. Several
    constant function market makers (CFMMs) are utilized by popular AMM protocols
    such as Uniswap, Bancor, and Curve. The CFMMs include constant product market
    makers, constant sum market makers, and constant mean market makers.
  prefs: []
  type: TYPE_NORMAL
- en: Constant Product Market Maker (CPMM)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: CPMM was popularized by the first AMM-based DEX, Uniswap, Bancor, and the most
    popular AMM in the market. CPMMs are based on the function x*y=k, where x is the
    amount of one token in the liquidity pool, and y is the amount of the other. The
    range of prices for two tokens depends on the available liquidity of each token.
    When the supply of token X increases, the token supply of Y must decrease in order
    to maintain the constant product K, and vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: For example (Uniswap V2), a liquidity poll has 50% DAI and 50% Ether. Assume
    one Ether is $2000 and one DAI is $1\. In the beginning, the liquidity pool has
    9 Ether and 18,000 DAI. In this case, one Ether and 2,000 DAI pair have a total
    value of $4000, which can be calculated as 2000+ 1 * 2000 = 4,000.
  prefs: []
  type: TYPE_NORMAL
- en: A liquidity provider invests 10% of the pool assets—one Ether and 2,000 DAI
    in the pool. After the deposit, the pool has 20,000 DAI and 10 Ether, and each
    token has a 50% amount. The CPMM constant x*y=k is 20,000 * 10 = 200,000.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now a liquidity buyer wants to purchase one Ether. The price for Ether is 2222
    DAI based on the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: (20,000 + x) * (10 -1) = 200,000 → x = 2,222
  prefs: []
  type: TYPE_NORMAL
- en: The buyer will need to pay 2222 DAI to get one Ether. In the end, the pool will
    have 9 Ether and 22,222 DAI.
  prefs: []
  type: TYPE_NORMAL
- en: The process is described in Figure [8-10](#Fig10).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig10_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A flow diagram depicts an example of A M M constant product marketer. The liquidity
    provider deposits 1 ether and 2,000 D A I into the pool, and the liquidity buyer
    purchases 1 ether. The before and after trade calculations are given at the top.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-10
  prefs: []
  type: TYPE_NORMAL
- en: AMM CPMM example
  prefs: []
  type: TYPE_NORMAL
- en: An example of a DEX that uses CPMM is Uniswap V1 and V2 (Uniswap V3 uses a different
    function), Bancor (V1), Sushi Swap, Pancake swap, and other derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: Constant Sum Market Maker (CSMM)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The second variation of constant products is the constant sum market maker (CSMM),
    which holds the sum of the X and Y assets by simply replacing the multiplication
    in Constant Product with addition (x + y = k). The variables can change multiple
    times as long as the sum remains the same constant.
  prefs: []
  type: TYPE_NORMAL
- en: This design makes it easier to predict price, but when one of the token liquidity
    pools is drained, the remaining liquidity is just one asset with no more liquidity
    for traders. As a result, CSMM cannot provide infinite liquidity and is not profitable.
    Therefore, CSMM is seldom used by AMMs.
  prefs: []
  type: TYPE_NORMAL
- en: Constant Mean Market Maker (CMMM)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A constant mean market maker (CMMM) was first introduced by Balancer Protocol
    and allowed investors to work with more than two tokens and maintain an average
    weight outside of 50/50, satisfying the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figf_HTML.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Uppercase pi, with the limit i equals 1 to n, R subscript i to the power of
    w subscript i, equals K.
  prefs: []
  type: TYPE_NORMAL
- en: where R[i] are the reserves of each asset, W is each asset weight, and k is
    for a constant.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the three locked assets example, CMMM utilizes the formula for a liquidity
    pool that would look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: (x *y *z) ^ (1/3) = c
  prefs: []
  type: TYPE_NORMAL
- en: where x, y, and z are chosen tokens, c is a constant product of them.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid Constant Function
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If underlying trading pairs’ prices are almost stable (e.g., two USD-denominated
    stablecoins trading pairs DAI–USDC into Uniswap liquidity pool), constant product
    function may not be the best solution because of the slippage and return is tiny.
    Therefore, curve finance uses the Stableswap Invariant formula, a hybrid of the
    constant product and constant sum formula, and the function is shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figg_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A n to the power of n, summation x subscript i plus D, equals A D subscript
    n to the power of n, plus D to the power of n plus 1 over n powered n pi x subscript
    i.
  prefs: []
  type: TYPE_NORMAL
- en: where x is the reserves for each token, n is the number of stablecoins, D is
    an invariant representing the entire token value in the reserve, A is the amplification
    coefficient, which is a tunable constant that is directly proportional to asset’s
    volatility and the DAO can adjust the value.
  prefs: []
  type: TYPE_NORMAL
- en: In the curve stableswap-paper, there is a comparison amount Stableswap invariant
    with Uniswap (constant-product) and constant price invariants, displayed in Figure
    [8-11](#Fig11).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig11_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A graph compares the stableswap invariant with the uniswap and constant price
    invariants in dollars. The uniwasp curve is plotted through (20, 2), (5, 5), and
    (1, 30). The stableswap curve is plotted through (19, 0), (5, 5), and (0, 30).
    The constant line is plotted through (10, 0), (5, 5), and (0, 10). All data are
    approximate.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-11
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of Stableswap invariant with constant product and constant sum(from
    Curve Stableswap-paper)
  prefs: []
  type: TYPE_NORMAL
- en: The Stableswap invariant acts as a constant sum when the portfolio is balanced
    and provides a better tool for DeFi users to swap stablecoins.
  prefs: []
  type: TYPE_NORMAL
- en: The Limitations of AMM
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'As discussed in the previous section, DEXs often have low liquidity compared
    to CEXs. Therefore, DEXs must attract new users to contribute their assets and
    generate more liquidity. With LPs, the exchange cannot offer trading services.
    Since lower liquidity, AMM often has two main problems: slippage and Impermanent
    loss (IL).'
  prefs: []
  type: TYPE_NORMAL
- en: Slippage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In its simplest term, slippage is the difference between a trade’s expected
    and executed price. Use previous CPMM example (Uniswap V2), the CPMM constant
    x*y=k is 20,000 * 10 = 200,000\. Assume a liquidity buyer wants to purchase three
    Ethers. The price for Ether is 8,571 DAI:'
  prefs: []
  type: TYPE_NORMAL
- en: (20,000 + x) * (10 -3) = 200,000 → x = 8,571
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the actual price of one ETH is 2,000 DAI, but in the AMM, the
    user needs to pay 8,571 DAI for each ETH. In the end, the pool will have 7 Ether
    and 28,571 DAI. This is slippage.
  prefs: []
  type: TYPE_NORMAL
- en: 'If three ETH occupy 30% of the total ETH reserve, then the slip is 42.9%:'
  prefs: []
  type: TYPE_NORMAL
- en: (28,571 -20,000/20,000) → 42.9%.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, no one wants to pay 42.9% more DAI, and even actually, DAI keeps
    the same value as $1.
  prefs: []
  type: TYPE_NORMAL
- en: Impermanent Loss (IL)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'When a user Alice acts as a liquidity provider, she will stake her assets in
    a liquidity pool (i.e., Uniswap V2). Impermanent loss usually happens when the
    market price of these crypto assets changes when Alice wants to withdraw the staking
    tokens from the pool. The liquidity pool automatically adjusts the token value
    based on the formula x*y=k. Therefore, the dollar value of the withdrawal could
    be lower than the dollar value of her deposit. No real losses will happen if Alice
    keeps her stake in the pool. That is why it is called “an impermanent loss.” The
    loss could be reduced or disappear entirely, or even gain profit, depending on
    how the market moves. Let us look at an example as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Alice stake 10 ETH and 20,000 DAI in Uniswap V2 liquidity pool when ETH price
    is $2,000\. The constant product with addition is 200,000 (10 ETH * 20,000 DAI),
    and the total dollar value of tokens she is staking are:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 10 ETH * $2,000 + 20,000 DAI * $1 = $40,000
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now assume the ETH market price changes to 1 ETH = $2,500\. The original tokens
    value will be:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 10 ETH* $2,500 + 20,000 DAI * $1 = $45,000
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Alice wants to calculate the impermanent loss if she withdraws the funds. Assume
    the liquidity pool starts to adjust and rebalance token value. In this case, if
    the pool wants to keep 50% of ETH and 50% of DAI. DAI and ETH will have $22500
    on each. The initial rebalance value will be:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ($20000 + $25000)/2 = $22500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The number of ETH, in this case, will be 22500/2500 = 9 ETH. By applying x*y
    =9 ETH * 22500 DAI = 202,500\. The number is different from the original constant
    of 200,000\. So, the rebalance will continue.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The new distribution of each asset can then be calculated using the following
    formulas:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figh_HTML.jpg)'
  prefs: []
  type: TYPE_IMG
- en: X t equals the root of k over r t. Y t equals the root of K asterisk over r
    t.
  prefs: []
  type: TYPE_NORMAL
- en: Here r is the price between two token assets in the pool, t is the time in which
    r is calculated, and k is the CPMM constant (x*y).
  prefs: []
  type: TYPE_NORMAL
- en: Let us apply these formulae to our example to see how it works. Here r is 2000
    before the ETH price changed and k is 200,000.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figi_HTML.jpg)'
  prefs: []
  type: TYPE_IMG
- en: E T H minus X t 1 equals a root of 200,000 over 2,000 equals 10\. D A I minus
    Y t 1 equals root of 200,000 asterisk 2,000 equals 20,000.
  prefs: []
  type: TYPE_NORMAL
- en: 'We get the same original state of the token pair in the pool—10 ETH and 20,000
    DAI. When the ETH price is changed to $2500 after a few days, the r is 2500\.
    Let us reapply the same formula to do a calculation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figj_HTML.jpg)'
  prefs: []
  type: TYPE_IMG
- en: E T H, X t 2 equals the square root of 200,000 over 2,500 equals 8.94\. D A
    I, Y t 2 equals the square root of 200,000 times 2,500 equals 22,360.68.
  prefs: []
  type: TYPE_NORMAL
- en: 'The formula gave that the pool would contain about 8.94 ETH and about 22,360.68
    DAI. Therefore, we can verify if it is a match to the constant 200,000:'
  prefs: []
  type: TYPE_NORMAL
- en: 8.94 * 22360.68 = 199,904 ≈200,000
  prefs: []
  type: TYPE_NORMAL
- en: 'The new pair of token values are correct. If Alice continues to hold tokens
    in the pool, total DAIs will be $45,000:'
  prefs: []
  type: TYPE_NORMAL
- en: 10* 2500 + 20000 = $45,000
  prefs: []
  type: TYPE_NORMAL
- en: 'The return on the investment gain will be 12.5%:'
  prefs: []
  type: TYPE_NORMAL
- en: 45,000-40,000/40,000 = 12.5%
  prefs: []
  type: TYPE_NORMAL
- en: We can simply earn 5,000 DAI (45,000 – 40,000).
  prefs: []
  type: TYPE_NORMAL
- en: 'Using those data, we can calculate the impermanent loss if Alice withdraws
    the tokens:'
  prefs: []
  type: TYPE_NORMAL
- en: 45,000 - (8.94 * 2,500 + 20,000) = $289.32
  prefs: []
  type: TYPE_NORMAL
- en: 289.32/45,000 = 0.64%
  prefs: []
  type: TYPE_NORMAL
- en: Alice’s impermanent loss is 0.64% and 289.32 DAI.
  prefs: []
  type: TYPE_NORMAL
- en: Figure [8-12](#Fig12) shows a diagram of impermanent loss estimation.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig12_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A graph of impermanent loss in percent against the E T H price in the U S D.
    The y axis displays negative 80.00 to 0.00, and the x axis displays 100 to 500\.
    The curve is plotted through (negative 73, 0), (0, 100), (negative 20, 400), and
    (negative 25, 500). All data are approximate.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-12
  prefs: []
  type: TYPE_NORMAL
- en: Impermanent loss estimation (from Bancor)
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a summary of losses compared to holding from the preceding graph:'
  prefs: []
  type: TYPE_NORMAL
- en: 1.25x price change = 0.6% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.50x price change = 2.0% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.75x price change = 3.8% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2x price change = 5.7% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3x price change = 13.4% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4x price change = 20.0% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5x price change = 25.5% loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From our example, the losses are 0.64% when the price change from $2000 to $2500\.
    There is a 125% change, matching the above graph estimation.
  prefs: []
  type: TYPE_NORMAL
- en: Several solutions to reduce the impact, including carrying out smaller transactions,
    increasing the price slippage tolerance, and greater liquidity.
  prefs: []
  type: TYPE_NORMAL
- en: Order Book Decentralized Exchanges
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'An order book lists buy and sell orders for a specific financial asset based
    on its current list price level. The market price order for an asset is seeking
    the lowest asking/selling price or the highest bidding/buying price. The prices
    are constantly updated, allowing traders to see an asset’s outstanding orders
    in real time. An order book is typically made up of three elements:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Buy orders or Bid (Offer)** – it shows all buy orders made by traders, including
    the purchase amount and the asking price.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sell orders or Ask** – it shows all sell orders made by traders, including
    the sell amount and the bid price.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Orders history** – it shows all buy and sell orders that traders have made
    in the past.'
  prefs: []
  type: TYPE_NORMAL
- en: Figure [8-13](#Fig13) shows the Coinbase CEX and dYdX DEX order book.![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig13_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'A set of two screens display the Coinbase C E X, and d Y d X, D E X order book.
    In addition to an updated price level, it has three components: buy orders also
    known as bids, sell orders or asks, and order history.'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-13
  prefs: []
  type: TYPE_NORMAL
- en: Coinbase CEX and dYdX DEX order book
  prefs: []
  type: TYPE_NORMAL
- en: Currently, there are two types of the order book at DEXs—on-chain and off-chain.
  prefs: []
  type: TYPE_NORMAL
- en: On-Chain Order Books
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: On-chain order books are hosted directly on the underlying blockchain, and every
    operation is done on-chain, including order submissions, updates, and cancellations.
    The blockchain records all order transactions, effectively removing the reliance
    on a centralized party. On the other side, every order is submitted to the blockchain,
    and the transactions will be broadcast to all blockchain validator/miner nodes
    to verify. It makes order book transactions slow and costly. When prices change
    dramatically, traders may need to update their on-chain orders. Because of the
    slow speed, the miner could inspect the order and then manipulate and execute
    their own orders before validating and confirming those transactions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some on-chain order books DEXs examples: ViteX, Demex, Bitshares,
    and Stellar decentralized exchanges. The typical on-chain order book process is
    illustrated in Figure [8-14](#Fig14).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig14_HTML.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: A flow diagram of the typical on-chain order book process between maker and
    taker. The maker and taker deposit funds in the smart contract, and the maker
    places an order in the order book. The taker chooses an order, and finally the
    order is settled in the smart contract.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-14
  prefs: []
  type: TYPE_NORMAL
- en: On-chain order book
  prefs: []
  type: TYPE_NORMAL
- en: The market maker is someone who offers an order to buy or sell, while the taker
    is someone who immediately buys or fills that order.
  prefs: []
  type: TYPE_NORMAL
- en: 'The on-chain process can be described in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Market maker and taker deposit their funds in the smart contract
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maker placed an order in the order book
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Taker then choose an order
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Order is settled in the smart contract
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Off-Chain Order Books
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Off-chain order books are ordered book applications hosted and run outside of
    the blockchain. The order data are also stored in a central entity. Once a two-sided
    order is matched, the off-chain order platform will send a transaction to the
    blockchain smart contract to settle. The advantage of an off-chain order book
    is faster order management with low fees. However, it could be a gap between on-chain
    and off-chain and not a full guarantee that a maker order is still active, which
    could exploit an order execution.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of off-chain order books are dYdX, 0x Protocol, Loopring, AirSwap,
    EtherDelta, IDEX, and Hydro.
  prefs: []
  type: TYPE_NORMAL
- en: The typical off-chain order book process is illustrated in Figure [8-15](#Fig15).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig15_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A flow diagram of the off-chain order book process between maker and taker.
    The maker and taker deposit funds in the smart contract, and the maker places
    an order in the off-chain order book. Then the taker chooses an order, the off-chain
    service runs order matching, and finally the order is settled in the smart contract.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-15
  prefs: []
  type: TYPE_NORMAL
- en: Off-chain order book
  prefs: []
  type: TYPE_NORMAL
- en: 'The off-chain process can be described in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Market maker and Taker deposit their funds in the smart contract
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The maker placed an order in the off-chain order book
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Taker, then take an order
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Off-chain service runs order matching
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '5.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Admin sends the order to the on-chain smart contract and settled transaction
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Decentralized Exchange Aggregators
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DEX aggregators use several different protocols and methods to deal with issues
    associated with liquidity. The platforms have developed tools to aggregate liquidity
    across several centralized and decentralized crypto exchanges. Slippage occurs
    when traders cannot trade crypto at the expected price because of insufficient
    liquidity on one platform. With aggregates liquidity from different DEXs, DEX
    aggregators can efficiently minimize slippage on large orders. Cryptocurrency
    traders can access various trading pools from a single dashboard and pick the
    desired supplier for a specific token swap with optimized fees.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some top DEX Aggregators: 1Inch, ParaSwap, Open Ocean, Orion Protocol,
    and Matcha.'
  prefs: []
  type: TYPE_NORMAL
- en: We have learned lots of theories so far. In the following section, we will delve
    into popular DEXs Uniswap and learn how to create a liquidity pool, staking, and
    swap tokens.
  prefs: []
  type: TYPE_NORMAL
- en: A Deep Dive into the AMM DEXs—Uniswap
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Uniswap is the most popular DEX and AMM. The platform was launched in Nov 2018\.
    v2 was introduced in May 2020, and the current version is v3, launched in May
    2021.
  prefs: []
  type: TYPE_NORMAL
- en: Users of the Uniswap platform can swap any two different ERC-20 tokens seamlessly
    without incurring too much slippage. In addition, the protocol runs on a series
    of smart contracts, making the platform permissionless and trustless. The native
    token of the Uniswap protocol is UNI, and it also acts as a governance token,
    giving the voting right to its token holder for changes to the protocol.
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, UNI is available in the following four liquidity mining pools:'
  prefs: []
  type: TYPE_NORMAL
- en: ETH/USDT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ETH/USDC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ETH/DAI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ETH/WBTC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As of September 2022, there are over 50,000 trading token pairs with individual
    LP tokens for each pool in Uniswap. The Daily trading volume is $1.10b, and the
    Total Valued Locked (TVL) is $12.13b. Uniswap users can participate in the DEXs
    in several ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create new pools –** Uniswap users can use smart contracts to create a pool
    for exchanging new pairs of tokens.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Swap assets via existing markets –** Token swaps in Uniswap allow traders
    directly swap from one ERC-20 token to another ERC-20 token.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Provide liquidity and earn rewards –** By staking the funds on the Uniswap
    platform, LP will reward with UNI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Participate in Uniswap governance –** UNI token holders can govern and vote
    for the change for the Uniswap platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List Your Own Token on Uniswap DEX
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: With the knowledge of AMM we learned, let us convert theory into practice, create
    an ERC-20 token, and list it on Uniswap DEX.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There are a few prerequisites that we must take care of:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an ERC-20 token.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deploy it to the Ethereum network. We will use the Goerli test network.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add deployed ERC token to your MetaMask wallet.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Create an ERC-20 Token
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In Chapter [5](535492_1_En_5_Chapter.xhtml), we have briefly discussed the
    ERC-20 token. There are many ways to create ERC-20 tokens. If you are an experienced
    smart contract developer, you can write your own ERC-20 token. To simplify, we
    will use a popular open source secure smart contract framework, OpenZeppelin,
    to create our ERC-20 token. It is really easy and just needs a few lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1 –** Open Remix IDE in your browser ([https://remix.ethereum.org](https://remix.ethereum.org)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2 –** Create a smart contract named DeFiTeenToken.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3 –** We will import the ERC-20 token contract from OpenZeppelin. The
    ERC-20 token link from OpenZeppelin is here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/OpenZeppelin/openzeppelincontracts/blob/master/contracts/token/ERC20/ERC20.sol](https://github.com/OpenZeppelin/openzeppelincontracts/blob/master/contracts/token/ERC20/ERC20.sol)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4 –** In the contract, we define the initial supply for the DeFiTeenToken,
    when creating a token. The contract name is DeFiTeenToken and the symbol is DFTT.
    “msg.sender” is the person who is currently creating this contract. In our case,
    it will be a selected wallet account address to deploy the DeFiTeenToken contract.'
  prefs: []
  type: TYPE_NORMAL
- en: Here is what our DeFiTeenToken smart contract looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figk_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the decentralized finance token smart contract. It contains
    9 lines of coding, including import, contract D e F i teen token, and constructor.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also get this contract from the book’s GitHub repository—Chapter [8](535492_1_En_8_Chapter.xhtml):'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/Apress/Blockchain-for-Teens.git](https://github.com/Apress/Blockchain-for-Teens.git)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 5 –** Compile the DeFiTeenToken.sol smart contract.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 6 –** Deploy the contract using Remix VM. We enter the initial supply
    as 100,000,000.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figl_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the decentralized finance token displays the deploy and run
    transaction. It contains account, contract, and deploy options on the left and
    a coding screen on the right.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 7 –** Conduct some quick tests under Remix “Deploy and run transactions”
    module.'
  prefs: []
  type: TYPE_NORMAL
- en: 'By clicking name, symbol, and total supply, you should see the related value
    show up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figm_HTML.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot displays the three options, name as decentralized finance teen
    token, symbol as D F T T, total supply as 100000000.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 8 –** Test transfer function. Copy the second account from the Account
    drop-down list. Enter this account address in the transfer function to the input
    field and give the transfer DFTT amount of 1000\. Once the transaction is completed,
    check the second account token by invoking the balanceOf function and entering
    the second account address. You should see the balance of the second account has
    1000 DFTT tokens. The following screen shows the process to test the transfer
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fign_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of three screenshots displays the screen for the multiple wallet accounts,
    transfer 1000 D F T T tokens to the second account, and verify the balance of
    the second account D F T T token is 1000.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 9 –** Now let us deploy the DeFiTeenToken contract to the Goerli test
    network. This time, we enter 1000000000000000000000 (22-digit number) since the
    token unit is 18\. Now it is time to deploy the contract. The Metamask will pop
    up for transaction confirmation. Click the confirm button.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figo_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot of the decentralized finance teen token displays the deploy and
    run transaction screen. It has an account, contract, and deploy screen, as well
    as a meta mask notification on the left and the codes on the right.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'To get the test ETH token using Goerli, you can go to the below addresses to
    request or mine a few tokens:'
  prefs: []
  type: TYPE_NORMAL
- en: (1) [https://goerlifaucet.com/](https://goerlifaucet.com/); (2) [https://goerli-faucet.pk910.de/](https://goerli-faucet.pk910.de/);
    (3) [https://goerlifaucet.com/](https://goerlifaucet.com/)
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 10 –** Once the contract is deployed, you can view the deployed contract
    from Etherscan via the link from MetaMask: activity ➤ contract deployment ➤ view
    on the block explorer. You can also verify the token name, symbol, and total supply
    in Remix IDE. You should see a similar result as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figp_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of three screen displays. 1\. Metamask page highlights contract deployment
    status. 2\. Verify in remix page highlights the transaction name, symbol and total
    supply. 3\. Etherscan for the contract page.
  prefs: []
  type: TYPE_NORMAL
- en: Our deployed DeFiTeenToken address is 0xbc438759cef061b82abafd95be018128cc4693f5,
    the ether scan for this contract URL is
  prefs: []
  type: TYPE_NORMAL
- en: '[https://goerli.etherscan.io/tx/0x242401f79c53764342645058dfa1b05b261deacab2e77267bcde5f0626116f48](https://goerli.etherscan.io/tx/0x242401f79c53764342645058dfa1b05b261deacab2e77267bcde5f0626116f48)'
  prefs: []
  type: TYPE_NORMAL
- en: Since the contract is deployed in a public test network, it is accessible to
    everyone.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 11 –** Import the DFTT token into your MetaMask wallet. Client Asset
    tab in Metamask, select Import tokens. It will ask you to enter the token address.
    You can get the contract address from Etherscan. With entered contract address,
    you click the “Custom Token” button to import the DFTT token.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figq_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screenshot for importing the D F T T token displays the client asset tab in
    Metamask, token address details, and deployment of the D F T T token.
  prefs: []
  type: TYPE_NORMAL
- en: After successfully deploying our DFTT token, it is now time to create a new
    pool in Uniswap DEXs.
  prefs: []
  type: TYPE_NORMAL
- en: Create a New Liquidity Pool in Uniswap
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '**Step 1 –** Go to Uniswap website: [https://app.uniswap.org/#/swap?chain=goerli](https://app.uniswap.org/%2523/swap%253Fchain%253Dgoerli).
    The following screen will appear, and click connect wallet button. It will connect
    you to the Goerli test network.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figr_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screen displays. 1\. The connect wallet button on the Uniswap website
    page is highlighted. 2\. The Goerli test network page displays buttons of cancel,
    and next to cancel or connect with Metamask screen.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2 –** Once connected, Uniswap will pop up a screen and give you an address,
    showing all of your token transactions on the Uniswap platform.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figs_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screen displays the Uniswap platform with an address and list of all token
    transaction details along with connect, disconnect, change and copy address options.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3 –** Select “Create a pool.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4 –** Press the “Select a Token” option.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 5 –** Enter your token’s address in the “Search Name or Address” field
    and select your token from the dropdown.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 6 –** Click on the “import” button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 7 –** An import token pop-up will show up. Ignore the warning. Click
    on the “Import” button.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll see a similar process (from step 3 to step 7) shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figt_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 4 screens display the steps to create a pool. 1\. Create, move, and V 2 liquidity
    options are listed on the pool platform. 2\. Create a pool page has select a token
    option highlighted. 3\. Third screen titled add liquidity has a popup window of
    import token with some details. 4\. Add a liquidity page after selection of import
    token.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 8 –** Enter the required information to create a new pool:'
  prefs: []
  type: TYPE_NORMAL
- en: a.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a fee from 0.05%, 0.3%, and 1%. Let us choose 0.05%.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Define DFTT token price compared to the current ETH price. Enter 0.001, for
    example.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set a price range. Enter min price as 0.00001 ETH and Max price as 1 ETH.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deposit Amount. We will deposit 0.01 ETH in this pool. The Uniswap application
    will automatically calculate the amount of DFTT, which is 0.000000978 DFTT.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: With all information filled, click the “Approve DFTT” button. The Metamask will
    pop up and ask you to confirm the transaction. Click confirm button.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figu_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. Add Liquidity page has the Approve D F T T button
    highlighted. Some other options are select pairs, and deposit options. 2\. The
    Metamask notification screen has transaction fee, some other details, reject and
    confirm buttons.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 9 –** The Uniswap will show a preview page. Click the preview button.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figv_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screen displays the add liquidity page. 0.05% best for stable pairs is highlighted
    in the select pair option, and the deposit amount is filled in. It includes price
    range setting options with minimum and maximum prices, and approve D F T T button.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 10 –** An “Add Liquidity” popup will show up. Click add button to add
    liquidity. Metamask will show confirm popup and click the “confirm” button.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figw_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. E T H / D F T T ranges are displayed along with an
    add button on the add liquidity popup in the page. 2\. The add liquidity page
    has the waiting for confirmation popup, and Metamask notification popup with reject
    and confirm buttons.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 11 –** Once the transaction is successfully mined in the blockchain,
    you should see your new liquidity pool in the Uniswap platform, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figx_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. The Pool page highlights new positions and closed
    positions. 2\. Uniswap page displays D F T T forward slash E T H ranges, price
    range minimum and maximum, current price, etcetera.
  prefs: []
  type: TYPE_NORMAL
- en: Add Liquidity in the Liquidity Pool
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Adding liquidity is very similar to several steps for creating a liquidity
    pool. The entire process is illustrated as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figy_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 5 screens display the steps involved in increasing liquidity. 1\. Increase liquidity
    button is marked. Liquidity, unclaimed fees, etcetera is displayed 2\. Add liquidity
    page with some details, and preview button marked. 3\. Add button marked. 4\.
    Confirm option highlighted. 5\. New liquidity pool page with price details.
  prefs: []
  type: TYPE_NORMAL
- en: Swap Tokens in Uniswap
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '**Step 1 –** Select the Swap tab and choose the token pair. You can search
    and choose from a dropdown of available ERC-20 tokens by entering a token address.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2 –** Enter the token swap amount. For example, we will swap ETH for
    DFTT tokens by 0.01 ETH.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3 –** Review settings and confirm swap.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figz_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of 3 screens display the swap tokens in Uniswap platform. 1\. Select a
    token option is highlighted. 2\. Token swap amount is entered along with the swap
    anyway option. 3\. Confirm swap option is highlighted.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4 –** Confirm and Swap. You can see ETH total amount taken 0.01 from
    the wallet to create a swap.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figaa_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 4 screens display the Swap screen. 1\. Waiting for confirmation popup and the
    Metamask notification page. 2\. A popup, transaction submitted with close button.
    3\. Swap page before 1.232 E T H and after 1.222 E T H is presented.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You can see all recent transaction history from the wallet address. To set up
    the Swap transaction setting, such as Slippage tolerance, etc., you can click
    the top right corner setting icon.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figab_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. Swap setting options, right top corner is presented,
    including slippage tolerance, transaction deadlines and interference settings.
    2\. Account details presented with recent transaction information.
  prefs: []
  type: TYPE_NORMAL
- en: 'With similar steps, you can swap any token in the pool, including popular tokens
    like UNI. Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figac_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 5 screens display the steps to swap tokens in the pool. 1\. Swap option with
    E T H and U N I range. 2\. Confirm swap screen with E T H, U N I, price update
    option, etcetera. 3\. Confirm Swap popup highlights confirm swap button. 4\. Swap
    screen with Metamask notification page with confirm option.
  prefs: []
  type: TYPE_NORMAL
- en: Claim the Reward from the Liquidity Pool
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Finally, let us look at how to claim a review as an LP holder.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1 –** Click on the DEFT/ETH pool, and there is a collect fee button
    in the “Unclaimed fees” panel. We will select WETH as the return. Click the button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2 –** A claim fees popup will show up and click the collect button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3 –** Next, Metamask will ask to confirm the transaction. Click confirm
    button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4 –** It will complete your collection reward.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figad_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 4 screens display the steps to claim the reward. 1\. D F F T forward slash E
    T H pool page highlights collect fee button. 2\. Claim fees page including price
    ranges and collect button. 3\. Metamask notification page with reject and confirm
    buttons.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 5 –** Import the WETH address to your Metamask. The WETH address in
    the Goerli network address is 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\. You
    can retrieve it from the Internet or Etherscan.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 6 –** Now, you will see your claimed reward:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figae_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Two screens display the steps for claimed rewards. 1\. Goerli test network page
    includes options for importing tokens. 2\. The assets are displayed on the Goerli
    test network page with 0.00001 W E T H circled.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Lending and Borrowing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A DeFi lending and borrowing protocol are similar to a traditional lending platform.
    The lending protocol enables lenders to lend their assets to borrowers, and borrowers
    return assets with extra interest fees to lenders. DeFi protocols run on the blockchain,
    eliminating the need for third-party involvement, and lenders and borrowers are
    anonymous.
  prefs: []
  type: TYPE_NORMAL
- en: Because crypto market volatility can suddenly cause collateral assets to drop
    in value, borrowers often must over-collateralize their loans for credit enhancement,
    reducing lenders’ risk. As we have seen in the previous section on stablecoins,
    DAI works by creating a Maker Vault that locks over-collateralized value against
    volatility. Borrowers typically need to put 150% of their collateral against the
    ratio at all times in order to avoid failing to make payments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a list of a few most popular DeFi lending and borrowing platforms:
    Aave, Maker, and Compound.'
  prefs: []
  type: TYPE_NORMAL
- en: We have discussed the Maker protocol in the stablecoin section. In this section,
    we will explore Aave lending and borrowing.
  prefs: []
  type: TYPE_NORMAL
- en: An Overview of the DeFi Lending Platform—Aave
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Aave is a DeFi money market protocol that allows users to lend and borrow cryptocurrencies
    with both variable and stable interest rates without using an intermediary. In
    2017, the original version of Aave was launched as ETHLend. In 2020, ETHLend rebranded
    to become Aave.
  prefs: []
  type: TYPE_NORMAL
- en: Aave Tokens
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Aave has two tokens, the “AAVE” token, and the “aToken.”
  prefs: []
  type: TYPE_NORMAL
- en: AAVE
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The native token in the Aave lending protocol is AAVE, a governance token. Like
    Maker’s governance token, AAVE allows holders to vote on proposals submitted by
    the Aave community.
  prefs: []
  type: TYPE_NORMAL
- en: aToken
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The aToken represents the number of crypto assets supplied or borrowed with
    interest. The value of aToken is pegged to the value of the corresponding supplied
    asset at a 1:1 ratio.
  prefs: []
  type: TYPE_NORMAL
- en: As the Aave liquidity pool continues to grow, the accumulated interest of aTokens
    will increase. aToken holders can claim the staking reward directly to their same
    wallet address or redirect their interest payments to another Ethereum address.
  prefs: []
  type: TYPE_NORMAL
- en: For example, Alice provides one aETH token supply with 5% APY (annual percentage
    yield). Assume 1 ETH is $2000\. The total asset is worth $2000\. After Alice held
    her aETH token for a year, she redeems all of her aETH, assuming the 1 ETH is
    $3000\. The value of aETH will be 1 + 1* 0.05 = 1.05 ETH, convert to dollar will
    be 1.05 * 3000 = $3150\. The return on the investment gain will be 57.5%.
  prefs: []
  type: TYPE_NORMAL
- en: When a lender supplies crypto assets in the liquidity pool, Aave lending pool
    will mint aTokens to user accounts. When the lender decides to withdraw their
    assets, aToken contract will call redeem function with a calculated interest rate,
    return assets to the lender, and burn the related aTokens. The aToken contract
    redemption process is illustrated in Figure [8-16](#Fig16).![](../images/535492_1_En_8_Chapter/535492_1_En_8_Fig16_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A decision-making diagram of tokens in A A V X smart contracts depicts the token
    contract redemption process in blocks, the redeem function calculated at an interest
    rate, and finally the token transfer of asset to the user.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8-16
  prefs: []
  type: TYPE_NORMAL
- en: Redeem an aTokens in AAVX Smart Contracts
  prefs: []
  type: TYPE_NORMAL
- en: How to Deposit on Aave
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Step 1** – Go to the Aave website: [https://aave.com/](https://aave.com/).
    Click on the launch app button. Then select and connect your wallet to the Aave
    platform. In our following step-by-step guild, we will use the USDT token. You
    can purchase USDT from popular crypto exchanges.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figaf_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens display the connect wallet page in the Aave platform. It
    includes browser wallet, Coinbase options, etcetera. The Ethereum market page
    is presented with assets to supply, and assets to borrow options.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2** – Click on the USDT Supply button in the “asset to supply” Panel.
    A popup will ask you to enter the amount to supply. In our example, we use 10
    USDT. The Transaction overview section will give you Supply APY information, which
    is 1.24% for this supply example. Click “approve to continue” button. Confirm
    the Metamask transaction confirmation.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figag_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens display the Ethereum market page presented with supply
    U S D T details. 1\. The supply U S D T popup has an amount 10 entered in it,
    and approve to continue button. 2\. Supply U S D T preview page with Metamask
    notification to confirm.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3** – Once the supply gets approved, “Supply USDT” button will be enabled.
    Click on it once the transaction is completed. An “All done” confirmation window
    will show up. Next, you will be asked to add aToken—aUSDT to your wallet.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figah_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens of Ethereum market. 1\. It displays the supply U S D T
    popup presented with all details, and the supply U S D T option is enabled. 2\.
    All done confirmation window, with some other details is presented.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4** – Add the aUSDT token to your wallet.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figai_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. The Metamask notification page is displayed, along
    with the options to add suggested tokens, and the all done popup with add to wallet
    details and ok close button. 2\. Assets are highlighted with U S D T details in
    Ethereum Mainnet.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 5** – Close the “all done” window and return to the dashboard. The dashboard
    will show the supplied USDT information under the “your supplies” section. A withdraw
    button is enabled for supplied USDT assets:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figaj_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screen displays the dashboard with U S D T information under your supplies
    and assets to supply section. A withdraw button is enabled for supplied U S D
    T assets. A supply button is enabled for assets to supply.
  prefs: []
  type: TYPE_NORMAL
- en: How to Withdraw on Aave
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Step 1** – Continue with the above process. Next, click on Withdraw button
    from supplied USDT asset. Withdraw window will pop up. Enter the amount you want
    to withdraw. Then click on “Withdraw USDT” button. Confirm the Metamask transaction.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2** – Once the transaction has completed, close the “all done” window
    and return to the dashboard. The dashboard will show updated USDT information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figak_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Three screens display the steps to withdraw on Aave. 1\. The withdraw U S D
    T window with the amount entered in the amount column, and the withdraw button
    is chosen. 2\. The withdraw U S D T popup, and Metamask notification with confirmation.
    3\. The all done window with ok close button.
  prefs: []
  type: TYPE_NORMAL
- en: How to Swap on Aave
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Due to its governance structure, the Aave platform treats the USDT, sUSD, and
    SNX tokens as a significant centralization risk. Their counterparty risk is too
    high both in terms of centralization and trust. So USDT as a collateral option
    is disabled in the platform:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figal_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screen displays the Aave platform presented with tether options. It includes
    reserve size, available liquidity and other details in the title bar. Below it
    is the reserve status and configuration supply info with a graph plotting supply
    A P R, and collateral usage circled.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, we will convert centralized USDT stablecoin to Decentralized stablecoin
    DAI. We will use the swap function in Aave.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1** – Click on the “swap” button from supplied USDT asset. A swap window
    will pop up. Enter the amount you want to Swap and select the target swap token.
    In this case, it will be DAI. The page will show the price impact in current market
    conditions and provide an option to select the Max slippage rate. Next, click
    on “approve to continue” button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2** – Once the swap gets approved, the “swap” button will be enabled.
    Click on it once the transaction is completed. An “all done” confirmation window
    will show up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figam_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of three screens. 1\. The Ethereum market page presented with supplies
    and assets to supply options with enabled withdraw and supply buttons, respectively.
    2\. The Swap the U S D T page with price impact and enabled approve button. 3\.
    The all done window.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3** – Close the “all done” window and return to the dashboard. The dashboard
    will show the swapped DAI token with collateral enabled under the “your supplies”
    section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figan_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A screen displays the supplies option presented with D A I and U S D T assets,
    balance, A P Y and collateral details. The D A I asset is enabled with the collateral
    button.
  prefs: []
  type: TYPE_NORMAL
- en: How to Borrow on Aave
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now we have Deposit DAI as collateral, and we can borrow some assets from Aave.
    In this demo, we will borrow BUSD (Binance USD stablecoin):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1** – Click the BUSD “Borrow” button under the “asset to borrow panel.”
    The “Borrow BUSD” window will pop up. Enter the amount you want to borrow for
    BUSD. There is Health factor information on the page. The health factor is a borrower’s
    loan-to-value ratio, representation of your liquidation threshold, or the percentage
    at which a loan is defined as undercollateralized. It uses to measure the risk
    of your fund. The higher the value means safer the state of the funds, and you
    need to keep it above 1.0 to avoid losing funds.'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the “Borrow BUSD” button. Confirm the Metamask transaction.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figao_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of three windows. 1\. The supplies panel enabled with collateral D A I
    asset. 2\. The borrow panel has the borrow and details button in the asset to
    borrow, B U S D. 3\. Borrow B U S D popup has enabled borrow button, and amount
    to borrow option
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2** – Once the borrow transaction is completed, an “all done” confirmation
    window will appear. Next, you will be asked to add the BUSD token to your wallet.
    Add the BUSD to your wallet.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figap_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: A set of two screens. 1\. The screen displays all done window with add to wallet,
    and ok close buttons. 2\. The all done window, and the add B U S D token to the
    wallet option is presented in the Metamask notification window.
  prefs: []
  type: TYPE_NORMAL
- en: How to Repay on Aave
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We just borrowed two BUSD from the Aave platform. In this section, we will demo
    how to pay back BUSD.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1** – In order to pay back the loan, you simply go to the “Your borrowings”
    section of the dashboard and click on the “Repay” button for BUSD.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figaq_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Two screen displays your supplies, and your borrows. The supply screen has withdraw
    and swap button with other details. The borrow screen has repay and borrow buttons
    for B U S D with other details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2** – The “Repay BUSD” window will pop up. Enter the amount you want
    to borrow for BUSD. The page will show your remaining debt and health factor information.
    Next, click on the “approve to continue” button.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3** – Once repay gets approved, the “Repay BUSD” button will be enabled.
    Click on it once the transaction is completed. An “all done” confirmation window
    will show up. Your BUSD is now repaid:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/535492_1_En_8_Chapter/535492_1_En_8_Figar_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: 3 screen displays the steps for repaying B U S D. The 2 screen has the option
    to repay with wallet balance or collateral on the top. Below it the amount can
    be entered, the transaction overview is displayed. The approve to continue, and
    repay B U S D is enabled in the 1 and 2 screens, respectively. The all done screen
    displays the amount repaid.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized Insurance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the real world, insurance is one way to protect your health and prevent the
    loss of valuable assets. It reduces the risk of financial suffering when unexpected
    things happen, such as a car accident, prolonged illness, fire, unemployment,
    injury, or death. Most people that pay for insurance will not suffer a loss, and
    insurance companies bet that an accident happens with a low chance that most people
    who pay for insurance will not suffer a loss. So, the amount they collect from
    individuals will cover the losses of people that have an. Anything left over is
    profit for the insurance companies.
  prefs: []
  type: TYPE_NORMAL
- en: There are many different types of insurance available, such as financial insurance.
    It protects companies against various losses, including property damage, lawsuits,
    data breaches, massive drops in the values of stocks, or a business partner going
    bankrupt.
  prefs: []
  type: TYPE_NORMAL
- en: The exponential growth in DeFi in recent years has been remarkable. As a relatively
    new approach to blockchain-powered finance, DeFi bypasses traditional centralization
    intermediaries and inefficiency. Nevertheless, at the same time, these also come
    with risks. These risks include
  prefs: []
  type: TYPE_NORMAL
- en: '**Smart-contract risk** – DeFi projects are open source and typically build
    on complex smart contracts. Any smart contracts logic errors or bugs may cause
    the software to malfunction. Once contracts are deployed to the public blockchain,
    it is almost impossible to fix errors. Although the governance protocols can upgrade
    the protocol change, it typically takes time to complete the voting process before
    making any changes.'
  prefs: []
  type: TYPE_NORMAL
- en: '**DeFi technology is very new** – DeFi protocol is quite complex, and fully
    understanding smart contract design is typically very challenging for investors.
    Therefore, the risk of DeFi products may not be understood until it happens.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regulatory risk** – DeFi protocols have thrived without KYC and AML regulation.
    However, this also means users miss protection when things go wrong, and there
    are no finance laws enforcing capital reserves for DeFi providers. Also, the government
    might implement regulations of DeFi protocols in the future, which will affect
    DeFi investments.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Private key requirements** – In the blockchain, if you lose your wallet’s
    private key, you lose the funds in it. Therefore, users must secure their wallets
    to protect their cryptocurrency assets.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Impermanent loss** – we have discussed this in the DEXs section. It is caused
    by price volatility between tokens provided to the liquidity pool.'
  prefs: []
  type: TYPE_NORMAL
- en: 'With the DeFi industry’s fast growth and potential risk, they are needed for
    people who want to participate in DeFi while purchasing insurance against many
    of the potential risks they might encounter to protect their assets. Decentralized
    insurance acts as a safety net for the DeFi industry. This industry is still in
    the very early phase and is growing fast and improving its protocols. With decentralized
    insurance, users are not necessarily dealing with a centralized insurance company.
    Instead, a decentralized pool of coverage providers will provide policies by charging
    crypto service fees to protect against certain events. Some coverages are:'
  prefs: []
  type: TYPE_NORMAL
- en: Attacks on DeFi protocols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wallet protection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart contract failures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crypto volatility and the flash crash
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DeFi deposit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Popular DeFi Insurance Platform
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nexus Mutual
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Nexus Mutual is a decentralized insurance platform that creates a mutual risk-sharing
    pool on the Ethereum blockchain. NXM is the native Nexus Mutual token and acts
    as the governance token in Nexus Mutual protocol. The protocol is driven by its
    community of NXM token holders.
  prefs: []
  type: TYPE_NORMAL
- en: 'Every NXM token holder has membership rights. They have the right to do the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: Buy smart contract coverage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deposit funds to the mutual and hold NXM tokens.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Share risk with other members.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Act as a Risk Assessor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Act as a Claims Assessor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Submit governance proposals.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vote on proposals.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The primary Nexus Mutual product is smart contract insurance.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three ways Nexus can protect digital assets:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yield Token Cover** – This cover protects against token de-pegging. De-Peg
    refers to a stablecoin deviating from its intended peg, for example, a stablecoin
    pegged to USD as 1:1\. When its value is lower than $1, the coin is said to be
    “de-pegged.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Protocol Cover** – This cover protects against a protocol hack on a specific
    project.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Custody Cover** – This cover protects halted withdrawals and cuts on an investor’s
    funds stored on centralized exchanges.'
  prefs: []
  type: TYPE_NORMAL
- en: InsurAce Protocol
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: InsurAce is a decentralized multichain protocol that provides insurance services
    for DeFi community members. The InsurAce protocol protects funds against various
    risks.
  prefs: []
  type: TYPE_NORMAL
- en: InsurAce has developed a wide range of cryptocurrency insurance products that
    cover many protocols running on the Ethereum, Binance Chain (BSC), Polygon, and
    Avalanche blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: 'InsurAce protocol provides portfolio-based coverage with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Smart contract vulnerability risk** – Hackers are exploiting vulnerabilities
    in smart contracts to steal funds.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Custodian risk** – Custodians lose at least 20% of their users’ funds because
    of crime, fraud, or similar circumstances or if they freeze withdrawals for at
    least 120 days without providing advanced notice.'
  prefs: []
  type: TYPE_NORMAL
- en: '**IDO event risk** – Hackers steal funds from an IDO platform by exploiting
    vulnerabilities in its smart contract.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stablecoin De-Peg risk** – The price of a stablecoin is below its pegged
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: Etherisc
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Etherisc is a blockchain-based platform for building decentralized insurance
    products. Common infrastructure, product templates, and insurance license-as-a-service
    make it possible for community users to create their own insurance products without
    having to invest the time and money necessary to create them from scratch. Products
    built by the Etherisc community include:'
  prefs: []
  type: TYPE_NORMAL
- en: Crop Insurance
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When government agencies report drought or flood events, smart contract protocol
    triggers automated payouts to farmers with crop insurance through the platform.
  prefs: []
  type: TYPE_NORMAL
- en: FlightDelay Insurance
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: FlightDelay is a decentralized application that runs on the Gnosis Chain Mainnet.
    Smart contracts in the FlightDelay application utilize Chainlink oracle data feeds
    to autonomously issue and payout insurance policies for travelers who experience
    flight delays or cancellations. As a result, automated flight insurance policies
    are now settling faster, provisioning at lower costs because of reduced human
    and technical overhead and are more transparent because of their running on the
    blockchain network.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This chapter is designed to acquaint you with the popular DeFi products in its
    ecosystem, which you should know when involved in DeFi projects or investments.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter started with a discussion on concepts in decentralized finance.
    Then you were introduced to the five different layers of the DeFi services structure.
    Moreover, with a detailed introduction to the decentralized stablecoin, we took
    a deep dive into Maker stablecoin to understand how it works and demonstrates
    how to vote on a proposal in Maker Foundation’s voting portal. Next, in the Decentralized
    exchanges (DEXs) section, we discussed the different types of DEXs, particularly
    for automated market makers (AMMs). We learned many popular concepts in the DeFi
    world, including yield-farming, slippage, impermanent loss, and liquidity pool.
    Later, we also explored the most popular DEX—Uniswap. Finally, we provided a practical
    end-to-end guide to show you how to deploy your own ERC-20 token in the public
    blockchain, create a liquidity pool, add liquidity, swap your custom token, and
    get a staking reward in the Uniswap platform.
  prefs: []
  type: TYPE_NORMAL
- en: In the decentralized lending and borrowing section, we overviewed the most popular
    decentralized lending platform—Aave. Then we demonstrated how to lend, withdraw,
    swap, borrow, and repay crypto assets in the Aave platform.
  prefs: []
  type: TYPE_NORMAL
- en: The chapter also discussed decentralized insurance. The next chapter will be
    our last; we will discuss the future of blockchain.
  prefs: []
  type: TYPE_NORMAL
