- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2022T.
    Dounas, D. Lombardi (eds.)Blockchain for ConstructionBlockchain Technologies[https://doi.org/10.1007/978-981-19-3759-0_1](https://doi.org/10.1007/978-981-19-3759-0_1)
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Technologies in Construction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Theodoros Dounas^([1](#Aff6) [ ](#ContactOfAuthor1)) and Davide Lombardi^([2](#Aff7) [ ](#ContactOfAuthor2))(1)Robert
    Gordon University, Aberdeen, UK(2)Xi’an Jiaotong-Liverpool University, Suzhou,
    ChinaTheodoros Dounas (Corresponding author)Email: [t.dounas@rgu.ac.uk](mailto:t.dounas@rgu.ac.uk)Davide LombardiEmail:
    [davide.lombardi@xjtlu.edu.cn](mailto:davide.lombardi@xjtlu.edu.cn)'
  prefs: []
  type: TYPE_NORMAL
- en: 1 The Purpose of the Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The purpose of this volume is to inform the reader on the state of affairs of
    a new subset of construction informatics, Blockchain (B) and Decentralized Ledger
    Technologies (DLT)s. The initial motivation for writing and editing this volume
    was that we noticed the emergence of a range of ideas as a loose “body of work”,
    produced from a variety of lenses and research stances in the informatics of construction.
    To shape this into a volume for a book, we made an international call for chapters
    and established a system of peer review as the basis of the editorial work we
    subsequently executed with the collaboration of all authors. The book comes out
    at a turning point for the world, and it would have been a cliché to say this,
    however, it is true not just because of the efforts to recuperate from the COVID-19
    global crisis. Construction, as a component of the Architecture—Engineering—Construction
    industry in general faces a series of challenges, which amount to a radical shift
    in business and operating models.
  prefs: []
  type: TYPE_NORMAL
- en: Most readers unfamiliar with Blockchain would suppose that the purpose of B/DLT
    in construction is tied with economics and finance. This is, of course, one of
    the strands of research and industrial application that B/DLT has an impact on,
    however the applications are wider and deeper, involving not only supply chains
    but also the governance of projects, re-shaping the industry landscape and successfully
    enabling new modes of collaboration. On a more fundamental basis, blockchain technologies,
    by creating peer-to-peer economies, have the potential to reshape the manner in
    which we think about resources, the design, and structure of our (circular) economies,
    debt, trust, collectives, and collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: This particular introductory text is placed here to deliver for the lay reader
    a series of definitions that will make the rest of the book accessible, but also
    to speculatively frame exciting ideas about blockchain in construction in a manner
    that positions some of the chapters as answers, and other chapters as questions
    for the community to resolve in the future. This is only true and brave for both
    blockchain in construction and crypto-economics as young fields of practice and
    research.
  prefs: []
  type: TYPE_NORMAL
- en: We would like to thank all authors for their tenacity and efforts to tackle
    important questions in a field that is still young, but highly promising in terms
    of shaping our collective future.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Some definitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 1.2 DLT—Decentralized Ledger Technologies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Distributed ledgers are distributed databases where each participant holds a
    copy of the data (across sites and geographies) and supported by a mechanism to
    synchronize and achieve consensus between these copies. DLTs also offer the feature
    of having the data accessible to multiple parties. The questions arise then of
    the need for a peer-to-peer network between the computing nodes holding the data
    and a consensus mechanism to synchronize the data unto a single version, as DLTs
    do not have a central administrator, in distinction to distributed databases who
    might be subject to a central control. This lack of a central authority is a feature
    rather than a weakness. When a new update to the ledger is needed, all nodes construct
    a transition which is then voted on by the use of a consensus algorithm, i.e.,
    a process by which nodes vote for which update is true and which is not. Security
    is achieved by using public-key cryptography and cryptographic signatures to establish
    identities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consensus mechanisms follow in many cases scenarios of the “Byzantine Generals
    problem” [[1](#CR1)]: a set of actors in a network need a reliable mechanism with
    which to arrive at a single version of the truth, even if some of the participants
    fail or actively undermine the network.'
  prefs: []
  type: TYPE_NORMAL
- en: 1.3 Blockchains
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Blockchains are a special version of distributed ledgers which were invented
    to facilitate the idea behind digital cash in Bitcoin (Nakamoto 2009). In the
    Bitcoin blockchain, Nakamoto introduces a series of features that free the bedrock
    of what we call now a public permissionless blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: Incentives for the computing nodes to stay honest via the awarding of new crypto-tokens
    to the nodes,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The collapse of all transactions at a given moment in a cryptographic hashing
    mechanism called a Merkle tree, where transactions are reduced to a single hash
    by progressively hashing them in pairs,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A timestamp feature,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A consensus mechanism using a proof of work algorithm, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A number used only once, the previous hash in a block of information that the
    computing nodes store on their ledger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each block is connected with the previous one by containing its root hash, creating
    a chain of blocks, hence the term blockchain. This mechanism along with the incentivization,
    secures the immutability of the blockchain, as users cannot go back and change
    the data, while incentives hold computing nodes true to the purpose and mission
    of the network which is reliability and security of the transitions in a peer-to-peer
    fashion.
  prefs: []
  type: TYPE_NORMAL
- en: Inspired by the Bitcoin blockchain, or rather attempting to expand its mechanisms
    for holding values, where the blockchain operates additions and subtractions,
    a group of programmers created the Ethereum blockchain, which expands the blockchain
    computing paradigm, acting as a decentralized, global, distributed computing platform
    capable of any Turing Complete computation [[2](#CR2)].
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum behaves as a state machine, i.e., a Turing machine that allows nodes
    to change their state. Thus, it is possible to record a variety of information
    on the Ethereum Blockchain. It also presents the benefit of being programmable
    through code, either in its native language solidity or even python. A code executed
    on the Ethereum blockchain is called a “smart contract” as its immutable nature
    equates the concept of code execution with law.
  prefs: []
  type: TYPE_NORMAL
- en: 1.4 Smart Contracts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Smart contracts precede the “Ethereum” blockchain, having been introduced earlier
    by cryptographer Nick Szabo, who described them as “a set of promises, specified
    in digital form, including protocols within which the parties perform on these
    promises” [[3](#CR3)]. Note that a smart contract does not necessarily have to
    constitute a valid binding agreement by law, as compliance with the valid legal
    framework is needed. However, smart contracts can be explained as the computing
    code equivalent of automated vending machines [[4](#CR4)]. Smart contracts get
    deployed unto blockchain packaged unto a transaction. The Byzantine-fault tolerance
    mechanisms of the blockchain ensure then that the smart contract cannot be tampered
    within the same manner that transactions are secured, allowing only validated
    accounts on the network to act on the smart contract. Deployed smart contracts
    act then as automatons, with the blockchain automatically executing their code
    when specific events trigger the computation. This creates then an infrastructure
    automation layer where public permission blockchain can be used such as Ethereum
    as global computing state machines [[5](#CR5)–[7](#CR7)].
  prefs: []
  type: TYPE_NORMAL
- en: 2 Cryptoeconomics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cryptoeconomics have emerged as an experimental and intradisciplinary field
    of economics, peer-to-peer cryptography, systems design, and various other concepts
    such as game theory [[6](#CR6)]. Cryptoeconomics attempt to guarantee certain
    outcomes and information security properties using incentives and penalties, to
    self-regulate digital economies. As such, the idea of external regulators and
    the state as guarantors of the validity of financial transactions do not exist
    as the system relies on the computing protocol for regulation [[7](#CR7)]. Part
    of the epistemic and practical novelty of blockchains as cryptoeconomic systems
    lies in that trust, transactional infrastructure, and incentives are encoded in
    the computing protocol of the network rather than decided by existing structures.
    As such cryptoeconomics have the potential to radically change the manner in which
    various industries operate.
  prefs: []
  type: TYPE_NORMAL
