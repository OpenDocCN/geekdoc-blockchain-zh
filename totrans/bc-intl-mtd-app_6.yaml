- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2021Z.
    Zheng et al. (eds.)Blockchain Intelligence[https://doi.org/10.1007/978-981-16-0127-9_6](https://doi.org/10.1007/978-981-16-0127-9_6)
  prefs: []
  type: TYPE_NORMAL
- en: 6. Market Analysis of Blockchain-Based Cryptocurrencies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Qing Han^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor1)), Jiajing Wu^([1](#Aff4),
    [2](#Aff5) [ ](#ContactOfAuthor2)), Weili Chen^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor3)),
    Yuejin Xu^([1](#Aff4), [2](#Aff5) [ ](#ContactOfAuthor4)) and Zibin Zheng^([2](#Aff5),
    [3](#Aff6) [ ](#ContactOfAuthor5))(1)School of Data and Computer Science, Sun
    Yat-sen University, Guangzhou, China(2)National Engineering Research Center of
    Digital Life, Sun Yat-sen University, Guangzhou, China(3)Sun Yat-sen University,
    Guangzhou, ChinaQing HanEmail: [hanq25@mail2.sysu.edu.cn](mailto:hanq25@mail2.sysu.edu.cn)Jiajing Wu (Corresponding
    author)Email: [wujiajing@mail.sysu.edu.cn](mailto:wujiajing@mail.sysu.edu.cn)Weili ChenEmail:
    [chenwli28@mail.sysu.edu.cn](mailto:chenwli28@mail.sysu.edu.cn)Yuejin XuEmail:
    [xuyj25@mail2.sysu.edu.cn](mailto:xuyj25@mail2.sysu.edu.cn)Zibin ZhengEmail: [zhzibin@mail.sysu.edu.cn](mailto:zhzibin@mail.sysu.edu.cn)'
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we present market analysis of blockchain-based cryptocurrencies
    from two perspectives. The one is about what features we can take into consideration
    based on cryptocurrencies market and what we can find by analyzing them. We will
    illustrate it by analyzing some interesting features on Ether market and compare
    them with Bitcoin during the same time period. The other is about detecting abnormal
    behaviors on cryptocurrencies market. We will introduce how we detect “pump &
    dump schemes” on cryptocurrency market using an improved Apriori algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the rapid development of cryptocurrencies, the market of cryptocurrencies
    emerged and attracted lots of investors. Due to their dramatically increasing
    popularity and particularity as a new type of currency, cryptocurrencies have
    received a wealth of research interest on their market analysis. The market analysis
    of cryptocurrencies can be divided into two parts. Firstly, many investors want
    to get a comprehensive understanding of a particular cryprocurrency market so
    that we can earn some benefits. Therefore, a number of researchers devote to analyze
    and reveal features of a particular cryptocurrency market. Secondly, because of
    insufficient supervision, various scams are rampant in cryptocurrencies market.
    Thus, there are also lots of researches aim to detect the abnormal schemes on
    the market. From the above, this chapter is comprised of two parts. First is about
    features analysis on cryptocurrencies market and the second is detecting abnormal
    schemes on cryptocurrencies market.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2 Features Analysis on Cryptocurrencies Market
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will use one of our works, analyzing long-range dependence,
    multi-fractality, and volume-return causality of Ether market, to illustrate the
    features analysis on cryptocurrencies market. This work can be a good example
    to show the importance of mining features and what we can find by analyzing them.
  prefs: []
  type: TYPE_NORMAL
- en: The work is devoted to filling in the research gap of Ether market analysis,
    the purpose being to provide useful insights on Ether investment. In particular,
    we first use the detrended fluctuation analysis and the asymmetric multi-fractal
    detrended fluctuation analysis to study the properties of long-range dependence,
    multi-fractality, and its asymmetry. Then, we investigate the causality between
    returns and volume of Ether to find how the activity of investors influences returns
    based on a nonparametric causality-in-quantiles test. In addition, by comparing
    with the Bitcoin market, we further reveal some unique properties of the Ether
    market.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.1 Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Recently, market analysis of Bitcoin has become a hot research topic, and a
    number of studies have revealed various features of Bitcoin market, including
    stylized facts (Bariviera et al. [2017](#CR4)), nonlinear statistics (chaos, multi-fractality)
    (Lahmiri and Bekiros [2018](#CR21)), volume-return relationship (Balcilar et al.
    [2017](#CR2)), market manipulation (Chen et al. [2019](#CR9)), and so on Kondor
    et al. ([2014](#CR20)), Drożdż et al. ([2018](#CR11)).
  prefs: []
  type: TYPE_NORMAL
- en: However, for the market analysis of Ether, although the popularity of Ether
    has increased rapidly recently, there is little research. Therefore, this chapter
    tries to fill this research gap by analyzing several important statistical and
    nonlinear characteristics of the Ether market. By studying the nature of the price,
    return, and volume of the Ether market, we aim to reveal the underlying structure
    and dynamics of the Ether market and help investors better understand the Ether
    market. By comparing it to the Bitcoin market, we tried to discover something
    unique about the Ether market. Since Bitcoin predated the emergence of Ether,
    we can also use this comparison to evaluate the development of the Ether market.
  prefs: []
  type: TYPE_NORMAL
- en: Previous studies have shown that the currency market can be modeled as a nonlinear
    system, and its various influencing factors are nonlinear. Therefore, we assume
    that Ether markets conform to the fractal market hypothesis rather than the classical
    efficient market hypothesis. To demonstrate this, we first assess the long-range
    dependence of Ether returns to characterize predictability of price. Here we explore
    the fluctuation of Ether returns in different time scale from a multi-fractal
    perspective and explore its asymmetry property. This analysis can help investors
    understand the inefficiency and volatility of this fractal market (Cajueiro et
    al. [2009](#CR6); Wang et al. [2010](#CR28)) in the round. Causality between volume
    and returns is an indicator of how market information spreads and in which ways
    investors’ activities influence returns. Analysis on causality is an effective
    tool for forecasting returns as well as understanding market booms and crashes.
    Compared with the market of traditional currencies, the cryptocurrency market
    usually has a relatively high price fluctuation, and thus it is of great importance
    for Ether investors to obtain a deep understanding of the aforementioned properties.
    Therefore, in this work, we will focus on the analysis about aforementioned properties
    to reveal the underlying dynamics and properties of this new market. To the best
    of our knowledge, this work is the first comprehensive analysis of Ether market.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.2 Related Work
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, we will concentrate on the analysis of Ether market from a
    fractal market perspective and explore its volume-return relationship.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, previous work (Bariviera et al. [2017](#CR4)) on Bitcoin market has
    proven that Bitcoin market is inconsistent with the efficient market hypothesis
    because of long-term memory. Therefore, we assume that the Ether market conforms
    to the broader fractal market hypothesis, which indicates that there is an inner
    correlation between Ether prices. Hurst exponent *H* is a widely adopted metric
    to measure the autocorrelations of time series. If the Hurst exponent takes the
    value *H* = 0.5, then the time series can be described as random walk, and there
    is no correlation between items in the series. If 0.5 < *H* < 1, there is long-range
    memory in time series, and a high value in the series will probably be followed
    by another high value. On the contrary, 0 < *H* < 0.5 indicates anti-persistent
    correlations in time series.
  prefs: []
  type: TYPE_NORMAL
- en: A number of methods have been developed in past decades to calculate the Hurst
    exponent. The classic R/S method (Mandelbrot and Taqqu [1979](#CR24)) is one of
    the oldest, but it is not robust and may mistake short-term memory as long-range
    memory. Afterward, detrended fluctuation analysis (DFA) (Peng et al. [1995](#CR27))
    was proposed, and this method can avoid spurious detection and is more appropriate
    to deal with nonstationary data. Therefore, here in this chapter, we select DFA
    as the method to assess the existence of long-range dependence.
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned method can analyze the long-range dependence of markets from
    a mono-fractal perspective, and assume that all behaviors remain the same under
    high or low fluctuations. This assumption is not valid for many realistic markets,
    and thus the traditional DFA was extended to multi-fractal DFA (MF-DFA) (Kantelhardt
    et al. [2002](#CR19)) to estimate the Hurst exponent at different scales. Moreover,
    due to the existence of asymmetry in the scaling behavior, asymmetric DFA (A-DFA)
    (Alvarezramirez et al. [2009](#CR1)) was proposed to analyze asymmetric correlations
    in the scaling behavior of time series. These methods were finally synthesized
    as asymmetric multi-fractal detrended fluctuation analysis (A-MFDFA) (Cao et al.
    [2013](#CR8)) which can not only assess multi-fractality in different correlations
    but also explore the asymmetry of multi-fractality in time series with uptrends
    and downtrends. Thus in our work, we select A-MFDFA to detect the related properties
    of Ether market.
  prefs: []
  type: TYPE_NORMAL
- en: As for volume-return relationship, we devote to finding the inner causality
    between daily volume and daily returns in Ether market. As a fractal market, the
    relationship between volume and returns of Ether is nonlinear, and thus the traditional
    linear Granger causality test cannot be directly adopted to analyze the volume-return
    causality of Ether. Recently, a nonparametric causality-in-quantiles test, which
    is more proper for time series with nonlinear relationship, was put forward (Balcilar
    et al. [2016](#CR3)). In this chapter, we will use this method to explore how
    the activity of investors, which can be reflected by volume, affects the returns
    and price fluctuations of Ether.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.3 Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 6.2.3.1 Detrended Fluctuation Analysis
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As an effective method to calculate the Hurst exponent for nonstationary data,
    detrended fluctuation analysis (DFA) has been adopted by existing work (Bariviera
    et al. [2017](#CR4)) to estimate long-range correlations of Bitcoin returns. In
    order to investigate the informational market efficiency of the Ether market,
    here we adopt the DFA method to calculate the Hurst exponent of Ether price returns.
    A detailed description of the DFA method can be found in prior work (Peng et al.
    [1995](#CR27)), and here we introduce the main steps of employing DFA method to
    investigate Ether price returns.
  prefs: []
  type: TYPE_NORMAL
- en: For a price time series *P* [*t*], *t* = 1, …, *N*, we first calculate the corresponding
    logarithmic return series *R* [*t*] = *ln*(*P* [*t*]) − *ln*(*P* [*t*−1]), where
    *ln*(⋅) denotes the nature logarithm. Then, we obtain an integrated time series
    *y*(*k*), *k* = 1, …, *N* by subtracting mean and adding up to the *k*th element,
    i.e., ![
  prefs: []
  type: TYPE_NORMAL
- en: $${y}(k)=\sum _{i=1}^{k}[R_{i}-\bar {R}]$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq1.png), where
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\bar {R}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq2.png) is the
    average value of *R* [*t*]. Next, we divide *y*(*k*) into *N* [*n*] = ⌊*N*∕*n*⌋
    nonoverlapping segments where *n* is an integer called time scale. Since *y*(*k*)
    cannot be exactly divided by every possible *n*, a short time period at the end
    of *y*(*k*) may remain. To this end, we repeat the same procedure starting from
    the end of *y*(*k*) and thus get 2*N* [*n*] segments in total.'
  prefs: []
  type: TYPE_NORMAL
- en: For each segment, we compute a polynomial fit *y* [*n*](*k*) to determine the
    local trend of this segment and then obtain the fluctuation function which is
    given as![
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} F(n)=\sqrt{\frac{1}{N} \sum_{k=1}^{N}\left[{y}(k)-{y}_{n}(k)\right]^{2}}.
    \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ1.png)(6.1)'
  prefs: []
  type: TYPE_NORMAL
- en: We select lots of different values of *n* to repeat the above procedure, and
    it has been proved (Peng et al. [1994](#CR26)) that the best range for *n* is
    ![
  prefs: []
  type: TYPE_NORMAL
- en: $$[5, \frac {N}{4}]$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq3.png). The
    fluctuation function *F*(*n*) scales as a power-law function of *n*, i.e., *F*(*n*) ∼ *n*
    ^(*H*), and the scaling exponent *H* is the estimated value of the Hurst exponent.'
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, we can use overlapping sliding windows (Cajueiro and Tabak [2004](#CR7))
    moving forward by 1 datapoint each time to observe how the Hurst exponent evolve
    over time.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.3.2 A-MFDFA Method
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to explore multi-fractality and its asymmetry for Ether returns, we
    consider the method of asymmetric multi-fractal detrended fluctuation analysis
    (A-MFDFA).
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the DFA method, we begin with the logarithmic return series *R* [*t*]
    and its integrated series *y*(*t*), and then divide them into 2*N* [*n*] segments
    respectively. Let ![
  prefs: []
  type: TYPE_NORMAL
- en: $$S_{j}=\left \{s_{j, k}, k=1, \ldots , n\right \}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq4.png) be the
    *j*th segment of *R* [*t*] and !['
  prefs: []
  type: TYPE_NORMAL
- en: $$Y_{j}=\left \{y_{j, k}, k=1, \dots , n\right \}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq5.png) be the
    *j*th segment of *y* [*t*]. For each *S* [*j*], we compute the least-squares line
    fitting !['
  prefs: []
  type: TYPE_NORMAL
- en: $$L_{{S}_{j}}(k)=b_{S_{j}} k+a_{S_{j}}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq6.png) and record
    its slope !['
  prefs: []
  type: TYPE_NORMAL
- en: $$b_{S_{j}}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq7.png) to indicate
    the local trend of this segment. While for each *Y* [*j*], we compute the least-squares
    line fitting !['
  prefs: []
  type: TYPE_NORMAL
- en: $$L_{Y_{j}}(k)=b_{Y_{j}} k+a_{Y_{j}}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq8.png), and
    then record !['
  prefs: []
  type: TYPE_NORMAL
- en: $$L_{Y_{j}}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq9.png) as the
    estimated value of detrend *Y* [*j*]. Then we obtain the fluctuation functions
    for each segments, i.e.,!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} F_{j}(n)=\frac{1}{n} \sum_{k=1}^{n}\left(y_{j,
    k}-L_{Y_{j}}(k)\right)^{2}. \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ2.png)(6.2)'
  prefs: []
  type: TYPE_NORMAL
- en: Next, we consider the average fluctuation functions when *R* [*t*] has piecewise
    positive and negative trends. Here, the signs of the recorded slope values ![
  prefs: []
  type: TYPE_NORMAL
- en: $$b_{S_{j}}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq10.png) are
    used as trend indicators; i.e., if !['
  prefs: []
  type: TYPE_NORMAL
- en: $$b_{S_{j}} &gt; 0$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq11.png) (resp.
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$b_{S_{j}} &lt; 0$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq12.png)), this
    segment of *R* [*t*] has positive (resp. negative) trend.'
  prefs: []
  type: TYPE_NORMAL
- en: Then the *q*-order average fluctuation functions are:![
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} F_{q}^{+}(n)=\left(\frac{1}{M^{+}} \sum_{j=1}^{2
    N_{n}} \frac{1+\operatorname{sign}\left(b_{S_{j}}\right)}{2}\left[F_{j}(n)\right]^{q
    / 2}\right)^{1 / q}, \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ3.png)(6.3)!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} F_{q}^{-}(n)=\left(\frac{1}{M^{-}} \sum_{j=1}^{2
    N_{n}} \frac{1-\operatorname{sign}\left(b_{S_{j}}\right)}{2}\left[F_{j}(n)\right]^{q
    / 2}\right)^{1 / q}. \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ4.png)(6.4)where
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$M^{+}=\sum _{j=1}^{2 N_{n}} \frac {1+\operatorname {sign}\left (b_{S_{j}}\right
    )}{2}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq13.png) and
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$M^{-}=\sum _{j=1}^{2 N_{n}} \frac {1-\operatorname {sign}\left (b_{S_{j}}\right
    )}{2}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq14.png) denote
    the number of segments with positive and negative trends, respectively. Assuming
    that !['
  prefs: []
  type: TYPE_NORMAL
- en: $$b_{S_{j}} \neq 0$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq15.png) for
    each *j*, we have *M* ^+ + *M* ^− = 2*N* [*n*].Similar to the DFA method, here
    we analyze the scaling behavior of the fluctuations by observing the log-log plots
    of *F* [*q*](*n*) versus *n*, i.e.,!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} F_{q}(n) \sim n^{H(q)} ; \quad  F_{q}^{+}(n)
    \sim n^{H^{+}(q)} ; \quad  F_{q}^{-}(n) \sim n^{H^{-}(q)}, \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ5.png)(6.5)where
    *H*(*q*), *H* ^+(*q*) and *H* ^−(*q*) represent the overall, upward, and downward
    scaling exponents, respectively. When *q* = 2, *H*(*q*) is the Hurst exponent
    calculated by the aforementioned DFA method, the overall scaling exponent *H*(*q*)
    is also referred to as the generalized Hurst exponent.'
  prefs: []
  type: TYPE_NORMAL
- en: In order to measure the asymmetry of multi-fractality, we calculate the metric
    Δ*H*(*q*) = *H* ^+(*q*) − *H* ^+(*q*). If Δ*H*(*q*) = 0, the correlations in the
    original time series *R* [*t*] are symmetrical. On the contrary, if *H* ^+(*q*) ≠ *H*
    ^−(*q*), the correlations in the time series are different during positive and
    negative trends, and we say that the correlations are asymmetrical.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, for *q* > 0, *H*(*q*) describes the scaling behavior of large fluctuations,
    and for *q* < 0, it describes small fluctuations. If the scale exponent *H*(*q*)
    (resp. *H* ^+(*q*) or *H* ^−(*q*)) depends significantly on *q*, we can say that
    the overall (resp. uptrends and downtrends) correlations in the time series are
    multi-fractal, and otherwise mono-fractal.
  prefs: []
  type: TYPE_NORMAL
- en: For a standardized multi-fractal analysis of time series, we can consider a
    scale exponent which is given as![
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} \tau(q)=q H(q)-1\. \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ6.png)(6.6)After
    applying Legendre transform, the multi-fractality of a time series can be characterized
    by the singularity spectrum *f*(*α*):!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} f(\alpha)=q \alpha-\tau(q), \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ7.png)(6.7)where
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\alpha =\dfrac {\mathrm {d} \tau }{\mathrm {d} q} = H(q)+q H^{\prime }(q)$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq16.png) is the
    singularity strength and *H* ^(*′*)(*q*) represents the derivative of *H*(*q*)
    with respect to *q*. We often use Δ*α* = *α* [*max*] − *α* [*min*] to describe
    the degree of multi-fractality of a market .(Kantelhardt et al. [2002](#CR19)).'
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.3.3 Causality-in-Quantiles Test
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To analyze the relationship between the returns and volume of Ether, we employ
    a nonparametric causality-in-quantile test proposed by Balcilar et al. ([2016](#CR3)).
  prefs: []
  type: TYPE_NORMAL
- en: Let *y* [*t*] and *x* [*t*] denote the returns and volume of Ether, respectively.
    As for causality-in-quantiles, *x* [*t*] does not cause *y* [*t*] in the *θ*-quantile
    in regard to the lag-vector of {*y* [*t*−1], …, *y* [*t*−*p*], *x* [*t*−1], …,
    *x* [*t*−*p*]} if![
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} Q_{\theta}\left(y_{t} | y_{t-1}, \ldots, y_{t-p},
    x_{t-1}, \ldots, x_{t-p}\right)\!=\! Q_{\theta}\left(y_{t} | y_{t-1}, \ldots,
    y_{t-p}\right), \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ8.png)(6.8)where
    *p* is the lag order, and !['
  prefs: []
  type: TYPE_NORMAL
- en: $$Q_{\theta }\left ( y_{t} | \cdot \right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq17.png) denotes
    the *θ*th quantile of *y* [*t*] depending on *t*.Let *Y* [*t*−1] = (*y* [*t*−1],
    …, *y* [*t*−*p*]), *X* [*t*−1] = (*x* [*t*−1], …, *x* [*t*−*p*]), !['
  prefs: []
  type: TYPE_NORMAL
- en: $$ Z_{t}=\left (X_{t}, Y_{t}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq18.png), and
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$F_{y_{t} | Z_{t-1}}\left (y_{t}, Z_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq19.png) denote
    the conditional distribution function of *y* [*t*] given *Z* [*t*−1]. Denoting
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$Q_{\theta }\left (Z_{t-1}\right ) \equiv Q_{\theta }\left (y_{t} | Z_{t-1}\right
    )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq20.png) and
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$Q_{\theta }\left (Y_{t-1}\right ) \equiv Q_{\theta }\left (y_{t} | Y_{t-1}\right
    )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq21.png), we
    have !['
  prefs: []
  type: TYPE_NORMAL
- en: $$ P\left \{F_{y_{t} | Z_{t-1}}\left \{Q_{\theta }\left (Y_{t-1}\right ) | Z_{t-1}\right
    \}=\theta \right \}=1 $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq22.png). Thus,
    the null and alternative hypotheses based on ([6.8](#Equ8)) can be, respectively,
    represented as!['
  prefs: []
  type: TYPE_NORMAL
- en: '$$\displaystyle \begin{aligned} H_{0} : \quad  P\left\{F_{y_{t} | Z_{t-1}}\left\{Q_{\theta}\left(Y_{t-1}\right)
    | Z_{t-1}\right\}=\theta\right\}=1, \end{aligned} $$'
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ9.png)(6.9)and!['
  prefs: []
  type: TYPE_NORMAL
- en: '$$\displaystyle \begin{aligned} H_{1} : \quad  P\left\{F_{y_{t} | z_{t-1}}\left\{Q_{\theta}\left(Y_{t-1}\right)
    | Z_{t-1}\right\}=\theta\right\}&lt;1\. \end{aligned} $$'
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ10.png)(6.10)The
    regression error based on the null hypothesis is denoted as *ε* [*t*] (Balcilar
    et al. [2016](#CR3); Jeong et al. [2012](#CR18)), and *H* [0] is true only if
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$1\left \{y_{t} \leq Q_{\theta }\left (Y_{t-1}\right )\right \}=\theta +\varepsilon
    _{t}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq23.png), where
    1{⋅} is an indicator function. Moreover, the distance measure !['
  prefs: []
  type: TYPE_NORMAL
- en: $$J=\left \{\varepsilon _{t} E\left (\varepsilon _{t} | Z_{t-1}\right ) f_{z}\left
    (Z_{t-1}\right )\right \}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq24.png), where
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$f_{z}\left (Z_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq25.png) is the
    marginal density function of *Z* [*t*−1]. The feasible kernel-based sample analogue
    of *J* is given as Jeong et al. ([2012](#CR18))!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} \hat{J}_{T}=\frac{1}{T(T-1) h^{2 p}} \sum_{t=p+1}^{T}
    \sum_{s=p+1, s \neq t}^{T} K\left(\frac{Z_{t-1}-Z_{s-1}}{h}\right) \hat{\varepsilon}_{t}
    \hat{\varepsilon}_{s}, \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ11.png)(6.11)where
    *K*(⋅) is the kernel function with bandwidth *h*, *p* is the lag order, and *T*
    is the sample size. Here the estimated regression error !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\hat {\varepsilon }_{t}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq26.png) can
    be given as!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} \hat{\varepsilon}_{t}=1\left\{y_{t} \leq \hat{Q}_{\theta}\left(Y_{t-1}\right)-\theta\right\}.
    \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ12.png)(6.12)!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\hat {Q}_{\theta }\left (Y_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq27.png) is an
    estimate of the *θ*th conditional quantile of *y* [*t*] given *Y* [*t*−1], and
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\hat {Q}_{\theta }\left (Y_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq28.png) can
    be estimated using the nonparametric kernel method as !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\hat {Q}_{\theta }\left (Y_{t-1}\right )=\hat {F}_{y_{t} | Y_{t-1}}^{-1}\left
    (\theta | Y_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq29.png), where
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$\hat {F}_{y_{t} | Y_{t-1}}\left (y_{t} | Y_{t-1}\right )$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq30.png) denotes
    the Nadarya-Watson kernel estimator, i.e.,!['
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned} \hat{F}_{y_{t} | Y_{t-1}}\left(y_{t} | Y_{t-1}\right)=\frac{\sum_{s=p+1,
    s \neq t}^{T} L\left(\frac{Y_{t-1}-Y_{s-1}}{h}\right) 1\left(y_{s} \leq y_{t}\right)}{\sum_{s=p+1,
    s \neq t}^{T} L\left(\frac{Y_{t-1}-Y_{s-1}}{h}\right)}, \end{aligned} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equ13.png)(6.13)where
    *h* is the bandwidth, and *L*(⋅) denotes the kernel function.'
  prefs: []
  type: TYPE_NORMAL
- en: In this way, we can estimate the causality between returns and volume for every
    quantile. As the volatility is usually calculated as the square of returns, we
    can further analyze the causality between volatility and volume using the above
    method by replacing *y* [*t*] in Eqs. ([6.9](#Equ9)) and ([6.10](#Equ10)) with
    ![
  prefs: []
  type: TYPE_NORMAL
- en: $$y_{t}^2$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq31.png) (Balcilar
    et al. [2017](#CR2)).'
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.4 Data and Empirical Findings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 6.2.4.1 Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In this chapter, we will take a comprehensive look at Ether from a fractal market
    perspective. In addition, we considered data from the Bitcoin market for comparison.
    To do this, we selected market data on the price and quantity of Ether and Bitcoin
    from August 2015 to March 2019\. The sampling interval is 4 h, that is, the closing
    price and trading volume every 4 h are selected as the original data. Here we
    use the aforementioned data for the fractality analysis using DFA and A-MFDFA.
    We also obtain daily closing price and volume information for the causality test.
    The original market data of Ether and Bitcoin are obtained from Poloniex (Crypto
    asset exchange [2019](#CR10)), one of the most active crypto asset exchanges.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the nonstationarity of price series, we select the logarithmic return
    *R* [*t*] = *ln*(*P* [*t*]) − *ln*(*P* [*t*−1]) as the measurement of returns,
    where *P* [*t*] is the closing price at time *t*, and *ln*(⋅) denotes the nature
    logarithm. Table [6.1](#Tab1) presents the descriptive statistics of daily logarithmic
    returns for Ether and Bitcoin. As we can see, Ether returns are on average higher
    than Bitcoin returns, but with more volatility. In addition, the returns of both
    cryptocurrencies are non-normal distribution according to their results of the
    Jarqie-Bera test (Jarque and Bera [1987](#CR17)), which are at odds with the efficient
    market hypothesis. Kurtosis value of both Ether and Bitcoin returns indicates
    the presence of fat-tails.Table 6.1
  prefs: []
  type: TYPE_NORMAL
- en: Descriptive statistics of logarithmic daily returns for ETH and BTC
  prefs: []
  type: TYPE_NORMAL
- en: '|   | ETH_Return | BTC_Return |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Observations | 1315 | 1315 |'
  prefs: []
  type: TYPE_TB
- en: '| Mean | 0.003503 | 0.002055 |'
  prefs: []
  type: TYPE_TB
- en: '| Median | 0.000003 | 0.002906 |'
  prefs: []
  type: TYPE_TB
- en: '| Std deviation | 0.076976 | 0.041977 |'
  prefs: []
  type: TYPE_TB
- en: '| Jarque-Bera | 1467.93^a | 4550.07^a |'
  prefs: []
  type: TYPE_TB
- en: '| Skewness | 0.193640 | −0.659642 |'
  prefs: []
  type: TYPE_TB
- en: '| Kurtosis | 5.164818 | 8.998307 |'
  prefs: []
  type: TYPE_TB
- en: '| ADF | −6.140743^a | −25.74626^a |'
  prefs: []
  type: TYPE_TB
- en: ^aIndicates rejection at the 1% significance level
  prefs: []
  type: TYPE_NORMAL
- en: In order to apply the aforementioned methods described in Sect. [6.2.3](#Sec5),
    we need to keep both return and volume series stationary. As for returns, the
    logarithmic return series is already stationary and passes the Augmented Dickey-Fuller
    (ADF) test. Yet when it comes to volume, a previous study (Gallant et al. [1992](#CR14))
    has shown that there exist time trends, both linear and nonlinear, in the volume
    data. Following a detrended approach proposed on prior work (Gebka and Wohar [2013](#CR16)),
    we try to remove this trend by logarithmizing the volume series and subtracting
    the value regressed on ![
  prefs: []
  type: TYPE_NORMAL
- en: $$\frac {t}{T}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq32.png) and
    !['
  prefs: []
  type: TYPE_NORMAL
- en: $$(\frac {t}{T})^{2}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq33.png), where
    *T* is the total size. By doing this, the detrended volume series passes the ADF
    test, which means that it has become stationary.'
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.5 Results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 6.2.5.1 Long-Range Dependence
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to verify whether the Ether market conforms to the fractal market hypothesis,
    we employ the DFA method to compute the Hurst exponent of the market over 3-month
    sliding time windows. Figure [6.1](#Fig1) shows the variation of logarithmic price
    and the Hurst exponent of returns with date.![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig1_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.1
  prefs: []
  type: TYPE_NORMAL
- en: Hurst exponent and logarithmic price for both ETH and BTC, using 3-month sliding
    windows and 4-h sampling time interval. (**a**) ETH price and Hurst exponent.
    (**b**) BTC price and Hurst exponent
  prefs: []
  type: TYPE_NORMAL
- en: When we consider the entire time period from August 2015 to March 2019 instead
    of using the sliding windows, the value of the Hurst exponent for the Ether returns
    is 0.57503, which suggests that Ether market shows the property of long-range
    dependence. Due to the existence of the inner correlations, the Ether return series
    is fractal, inefficient, and has inner trends. The presence of inner trends suggests
    that the future return trend in a short time period can be forecast based on historical
    information, which is beneficial to investment. The plot Fig. [6.1](#Fig1) shows
    the curves of Hurst exponent and logarithmic price under 3-month sliding windows,
    and we can find there is a strong consistency between Hurst exponent and the price
    in the same period. For instance, ETCWin, the first digital currency exchange
    based on Ether, was established in December 2016, consequently leading to the
    explosive growth of Ethereum applications. We can also observe from Fig. [6.1](#Fig1)a
    that, in December 2016, the value of the Hurst exponent reaches a peak value which
    is much higher than 0.5, implying that Ether returns will continue its current
    upward trend. The price curve in Fig. [6.1](#Fig1)a keeps increasing for a relatively
    long period of time after December 2016, and this result is in good agreement
    with our prior claim.
  prefs: []
  type: TYPE_NORMAL
- en: When comparing the Hurst exponent curves between Ether and Bitcoin returns given
    in Fig. [6.1](#Fig1), we observe that the curve of Ether returns is more volatile.
    On the contrary, the Hurst exponent of Bitcoin returns is relatively stable. This
    curve of Hurst exponent gradually approaches 0.5 from blow and then fluctuates
    around this value, suggesting that the Bitcoin market is becoming more mature
    (Di Matteo et al. [2003](#CR25)). This phenomenon indicates that, comparing with
    the Bitcoin market, the Ether market is less mature as it is a more recent cryptocurrency.
    Yet we can also observe that the fluctuation of Ether’s Hurst exponent gradually
    decreases with time, indicating that this new market is now maturing.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2.5.2 Multi-fractality
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The above discussion on long-range dependence reveals the predictable pattern
    of Ether market, and shows the property of the fractal distribution of the market.
    Also considering the fat-tailed distribution of the returns, we assume that there
    is a multi-fractal structure in Ether market according to the conclusion of previous
    work (Lahmiri et al. [2018](#CR22)). Therefore, next we will explore the property
    of multi-fractality to detect the fluctuation feature of price on different time
    scales.
  prefs: []
  type: TYPE_NORMAL
- en: Figure [6.2](#Fig2) plots the value of *H*(*q*) versus *q*, where *q* varies
    from − 6 to 6 (with interval being 0.5). To assess the asymmetry of multi-fractality,
    we also plot the curves of *H* ^+(*q*) and *H* ^−(*q*). Generally speaking, when
    *q* > 0, *H*(*q*) describes the scaling behavior of large fluctuations and when
    *q* < 0, it describes scaling of small fluctuations. We can observe from Fig.
    [6.2](#Fig2) that, for all series, the value of *H*(*q*) decreases with the increase
    of *q*, which suggests that the inner correlations are weaker for large fluctuations
    compared with those for small ones. This result supports the existence of multi-fractality
    for both Ether and Bitcoin because *H*(*q*) depends on *q* and indicates that
    it is more likely for the market to maintain its current trends when facing small
    fluctuations.![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig2_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig2_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.2
  prefs: []
  type: TYPE_NORMAL
- en: The overall, upward, and downward generalized Hurst exponent curves for (**a**)
    ETH and (**b**) BTC return series
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, we can observe the existence of multi-fractality asymmetry in
    Fig. [6.2](#Fig2) since the curve of uptrends is always above the other two for
    Ether returns, which means that the memory of uptrends is obviously longer than
    that of downtrends. In other words, as for Ether market, the trends will last
    longer when returns rise than drop, and the former will provide less investment
    risk for investors. Moreover, with the increase of the fluctuation, the asymmetry
    of multi-fractality also becomes weaker.
  prefs: []
  type: TYPE_NORMAL
- en: However, as for Bitcoin, the multi-fractality asymmetry of return series is
    more obvious for larger fluctuations, and the three curves of Bitcoin are more
    complicated than those of Ether. Besides, by comparison, the long-range dependence
    of uptrends and downtrends of Bitcoin returns is relatively stronger for smaller
    fluctuations, and weaker for larger fluctuation, indicating that the persistence
    of Bitcoin market is more likely to be influenced by fluctuation.
  prefs: []
  type: TYPE_NORMAL
- en: Figure [6.3](#Fig3) illustrates how the multi-fractal spectra *f*(*α*) varies
    with *α*, and Table [6.2](#Tab2) shows the width of singularity spectrum (Δ*α*)
    for different cases. Results in Table [6.2](#Tab2) indicate that, for Ether returns,
    the uptrends show a stronger degree of multi-fractality than the downtrends, especially
    for the case of large fluctuation (*q* > 0). Different from the results of Ether,
    Bitcoin has more obvious multi-fractality for smaller fluctuations as Δ*α* of
    uptrends are larger than that of downtrends. In addition, we can find that Δ*α*
    of Bitcoin is larger than that of Ether on average, which suggests that multi-fractality
    of Bitcoin is stronger and Bitcoin price is easier to be influenced by fluctuations.
    Generally speaking, weaker degree of multi-fractality and narrower Δ*α* suggest
    lower investment risk, and thus this analysis can help investors adjust their
    investment strategies and make investment more reasonable.![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig3_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig3_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.3
  prefs: []
  type: TYPE_NORMAL
- en: Singularity spectrum *f*(*α*) versus *α* for (**a**) ETH and (**b**) BTC return
    series
  prefs: []
  type: TYPE_NORMAL
- en: Table 6.2
  prefs: []
  type: TYPE_NORMAL
- en: The width of singularity spectrum (Δ*α*) for different cases
  prefs: []
  type: TYPE_NORMAL
- en: '|   | ETH | BTC |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|   | Δ*α* | Δ*α*(*q* > 0) | Δ*α*(*q* < 0) | Δ*α* | Δ*α*(*q* > 0) | Δ*α*(*q* < 0)
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Overall | 0.571970 | 0.298052 | 0.234831 | 0.589466 | 0.086779 | 0.401271
    |'
  prefs: []
  type: TYPE_TB
- en: '| Upwards | 0.613629 | 0.320023 | 0.249938 | 0.627751 | 0.150247 | 0.386848
    |'
  prefs: []
  type: TYPE_TB
- en: '| Downwards | 0.545993 | 0.232761 | 0.264445 | 0.695628 | 0.178399 | 0.399475
    |'
  prefs: []
  type: TYPE_TB
- en: 6.2.5.3 Causality
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As mentioned above, we have explored the properties of Ether returns from the
    perspective of fractal market. Next, we will focus on what role investors play,
    or how investors affect the changes of returns. Since the behavior of investors
    can be expressed by volume, we can try to detect the causality between volume
    and returns of Ether to illustrate it.
  prefs: []
  type: TYPE_NORMAL
- en: Before conducting the causality-in-quantiles method introduced in Sect. [6.2.3.3](#Sec8),
    we first apply the classic linear Granger causality based on VAR(*p*) model, where
    *p* is the lag order and is set as 6 based on the Hannan-Quinn criterion (HQ)
    (Liew [2004](#CR23)). During the linear Granger test, we find that the volume
    of Ether does Granger cause the returns as P-value is 0.0025\. However, when we
    apply BDS (Broock et al. [1995](#CR5)) test on the VAR(6) model, the result shows
    that the statistic values are large enough to reject the null hypothesis that
    the series are linearly dependent at the 5% significance level, i.e., the time
    series are nonlinear dependent. Therefore, the result of the linear Granger causality
    may be inaccurate, so we need the causality-in-quantiles test to further measure
    the causality between volume and returns.
  prefs: []
  type: TYPE_NORMAL
- en: The results of causality-in-quantiles test given in Fig. [6.4](#Fig4) indicate
    whether volume does Granger cause returns or volatility for both Ether and Bitcoin.
    Note that here we choose the squared value of returns to measure the volatility
    of returns. Figure [6.4](#Fig4) shows that volume does not Granger cause returns
    of both crptocurrencies and thus volume cannot be used to predict returns. As
    for volatility, results in Fig. [6.4](#Fig4)a show that the causality is relatively
    weak when the quantile is below 0.38 or above 0.83\. That is to say, when volatility
    is low or high enough, it cannot be influenced by the change of volume. But when
    volatility is moderate, the volume can be used to predict the change of return
    volatility. In our simulations, we also test if volatility can predict volume
    using the similar method and the calculated test statistics are almost all below
    the significance level, indicating that volatility has no obvious causal relationship
    with volume. From the test statistics given in Fig. [6.4](#Fig4)b, we can obtain
    a similar conclusion about the volume-volatility causality for Bitcoin market
    in spite of a wider range quantile ranging from 0.10 to 0.89.![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig4_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.4
  prefs: []
  type: TYPE_NORMAL
- en: Test statistics of causality-in-quantiles for (**a**) ETH and (**b**) BTC, and
    the value of the 5% significance level is 1.96
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we can conclude that volume can cause the change in volatility of
    returns instead of influencing returns directly, and this causality is only established
    when volatility is moderate for both Ether and Bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: 6.3 Detecting Abnormal Schemes on Cryptocurrencies Market
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will introduce one of our works which aims to detect “pump
    & dump schemes” on cryptocurrency market using an improved Apriori algorithm.
    This example can help us have an understanding about how to detect abnormal schemes
    on cryptocurrencies market.
  prefs: []
  type: TYPE_NORMAL
- en: Because of insufficient supervision, the crypyocurrencies market attracts scams,
    for example, pump and dump (P&D) scheme, a famous fraudulent behavior in stock
    markets, has been found rampant in the market. To help deal with this issue, as
    a preliminary study, this work proposes an improved Apriori algorithm to detect
    user groups which may involve in P&D schemes. The validity of the algorithm is
    verified by using the leaked transaction history of Mt. Gox Bitcoin exchange.
    Furthermore, by exploring some of the detected user groups, many abnormal trading
    behaviors in the exchange found. These findings provide new insights into the
    behavior of users in the cryptocurrency market, thus leading to meaningful implications
    for policymakers, investors, and managers dealing with the cryptocurrency market.
  prefs: []
  type: TYPE_NORMAL
- en: 6.3.1 Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nowadays, the famous pump and dump scheme (Williams-Grut [2017](#CR30)), which
    directly related to exchanges and price manipulation, is disclosed by INSIDER.^([1](#Fn1))
    “pump and dump”(P&D) is a form of securities fraud that involves artificially
    inflating the price of an owned stock through false and misleading positive statements,
    in order to sell the cheaply purchased stock at a higher price (Wikipedia contributors
    [2018](#CR29)). With the emerging of the cryptocurrency market, P&D schemes are
    found in this market (Williams-Grut [2017](#CR30)). Figure [6.5](#Fig5) shows
    an advert of a P&D distributed in Telegram, a Russian messaging app, which is
    heavily encrypted and allows people to use aliases and hide their identity, to
    advertise “PumpKing Community,” a group with 17,000 followers on the messaging
    application that appears to be dedicated to P&D. As the picture shows, the advert
    draws people in with promises of wealth. The mentioned UBQ and GNO are two typical
    cryptocurrencies. More detailed information can be found in the INSIDER report
    (Williams-Grut [2017](#CR30)).![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig5_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig5_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.5
  prefs: []
  type: TYPE_NORMAL
- en: 'The screenshot of an advert for a pump and dump scheme distributed in Telegram
    to advertise “PumpKing Community.” (Source: [www.​cointelegraph.​com](http://www.cointelegraph.com))'
  prefs: []
  type: TYPE_NORMAL
- en: P&D schemes are illegal because we are heavily regulated in traditional financial
    markets such as stocks and bonds. However, the cryptocurrency market is largely
    unregulated, so these scams are rampant. There is no doubt that these scams hurt
    investors and hinder the development of blockchain technology. Fortunately, governments
    and regulators have recognized these scams and begun to address them. For example,
    the American Federal Trade Commission hosted a workshop in Chicago on June 25
    to examine scams involving cryptocurrencies (Federal Trade Commission [2018](#CR13)).
  prefs: []
  type: TYPE_NORMAL
- en: As these examples show, detecting fraud on exchanges is an urgent and meaningful
    task. In particular, testing the P&D scheme for a fair trading environment is
    not only the wish of investors, but also the responsibility of exchanges. Therefore,
    this chapter focuses on the detection of P&D scheme. Meaningful and urgent though
    it is, solving this problem is a huge challenge for several reasons. First, exposing
    P&D programs requires the exchange of transaction data; however, these data are
    highly confidential to users, and the exchange of these transaction data is difficult
    to obtain. Secondly, even if we can get some data, there are so many exchanges
    and cryptocurrencies that it is hard to decide which should be investigated. Third,
    it is not possible for users to participate in the P&D scenario based solely on
    transaction data assertions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since the core of P&D scheme is to coordinate buying and selling target cryptocurrency
    in a short time, this chapter proposes an improved Apriori algorithm based on
    this recognition to help solve this problem. To our knowledge, this is the first
    in the literature to address this scam in the cryptocurrency market. A big reason
    for the feasibility of this study is that we have a complete trading record of
    2.5 years and are part of Mt.Gox, the dominant Bitcoin exchange that went bankrupt.
    This data was leaked shortly after the Mt. Gox filing for bankruptcy in early
    2014\. Based on this dataset, many abnormal behaviors are found in the cryptocurrency
    market, such as price manipulation (Gandal et al. [2018](#CR15)) and DDoS attacks
    (Feder et al. [2018](#CR12)). This chapter focuses on verifying the proposed P&D
    scheme discovering algorithm based on the dataset. Though, as mentioned, it is
    impossible to assert a P&D scheme, this preliminary study, together with the experiment
    results, makes the following contributions:'
  prefs: []
  type: TYPE_NORMAL
- en: We propose an improved Apriori algorithm to detecting P&D schemes in the cryptocurrency
    market, which, as far as we know, is the first in the literature.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Based on the proposed algorithm, many new abnormal behaviors have been discovered
    on the once-dominant Bitcoin exchange platform, which is a supplement to previous
    research on the cryptocurrency market.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The algorithm provides a tool for cryptocurrency exchanges to deal with hidden
    P&D schemes and other market manipulations. In addition, the results discussed
    in this chapter provide new insights into the behavior of users in the cryptocurrency
    market, which leads to meaningful impacts on decision makers, investors, and practitioners.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6.3.2 Dataset and the Algorithm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 6.3.2.1 Dataset
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Data FormatIn early 2014, the transaction history from April 2011 to November
    2013 of Mt. Gox was leaked in the form of CSV files. Table [6.3](#Tab3) reports
    a segment of the leaked data recorded on 2011/04/01\. In the table, each row represents
    a record of a user (identified by *User_Id*) buy or sell (denoted by *Type*) a
    certain amount of bitcoins (i.e., *Bitcoins*) with *Money* dollars in total at
    the moment of *Date*. Thus, the real-time price of Bitcoin at that moment is *Money*∕*Bitcoins*.
    Every two records with the same *Trade_Id* indicates both sides of the transaction.
    The leaked data has over 14 million records and 120 thousand users.Table 6.3
  prefs: []
  type: TYPE_NORMAL
- en: A segment of the leaked data
  prefs: []
  type: TYPE_NORMAL
- en: '| Trade_Id | Date | User_Id | Type | Bitcoins | Money |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 35372 | 2011/04/01 00:28:00 | 3931 | buy | 23.02 | 18.061 |'
  prefs: []
  type: TYPE_TB
- en: '| 35372 | 2011/04/01 00:28:00 | 895 | sell | 23.02 | 18.061 |'
  prefs: []
  type: TYPE_TB
- en: '| 35373 | 2011/04/01 00:28:00 | 722 | buy | 10 | 7.8 |'
  prefs: []
  type: TYPE_TB
- en: '| 35373 | 2011/04/01 00:28:00 | 895 | sell | 10 | 7.8 |'
  prefs: []
  type: TYPE_TB
- en: Data Cleaning
  prefs: []
  type: TYPE_NORMAL
- en: Since there are some redundancy records in the dataset, we clean the data in
    an approach similar to Gandal et al. ([2018](#CR15)). Specifically, we treat each
    (Date, User_Id, Type, Bitcoins) tuple as unique and delete all the redundancy
    records. In addition, since a buy or sell order may match multiple appropriate
    participants and result in multiple records in the dataset, we try to consolidate
    these trades. In other words, we treat such multiple transactions as single buy
    and sell transactions. Specifically, we treat adjacent transaction records which
    have the same buyer (seller) as a single buy transaction for the buyer (seller).
  prefs: []
  type: TYPE_NORMAL
- en: By examining the transaction records, we found that the number of user transactions
    is heterogeneous. Since P&D schemes might not occur too often, we delete all the
    records of users (1383 users) who have 10 times the average number of user transactions.
    In addition, the records of Markus and Willy accounts, identified as accounts
    for price manipulation in Gandal et al. ([2018](#CR15)), are also removed.
  prefs: []
  type: TYPE_NORMAL
- en: 6.3.2.2 Improved Apriori Algorithm
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Building a Trading Matrix
  prefs: []
  type: TYPE_NORMAL
- en: Since the key feature of a P&D scheme is the participated users buy or sell
    the digit asset in the same time period, we can detect P&D schemes by looking
    for user groups that often buy or sell the asset in the same time period. To do
    this, we introduce a trading matrix *B* to record all the purchase transactions
    for all the users. (In the following, we present the algorithm based on buy transactions;
    for the sell transaction, the idea is similar.) Each row of the matrix represents
    a user, and each column represents a timestamp. The element *B*(*i*, *j*) = 1
    when user *i* had a buy transaction at timestamp *t* [*j*], otherwise *B*(*i*,
    *j*) = 0.
  prefs: []
  type: TYPE_NORMAL
- en: General Idea of the Algorithm
  prefs: []
  type: TYPE_NORMAL
- en: In this section, an improved Apriori algorithm based on continuous time attribute
    is proposed. Simply speaking, the algorithm returns groups of users and its count
    of “buy action” by giving the buy matrix *B* and two parameters. In a time period,
    if all the users in a group have at least one purchase transaction, we call the
    group having a “buy action” during that time period.
  prefs: []
  type: TYPE_NORMAL
- en: Specifically, let *U* = {*u* [1], *u* [2], …, *u* [*n*]} be the set of all users,
    *T* = {*t* [1], *t* [2], …, *t* [*T*]} be the set of all buy transaction timestamps
    and *T* [*i*] = {*t* [*i*1], *t* [*i*2], …} be the set of buy transaction timestamps
    of user *u* [*i*]. Analogous to association analysis, a user group containing
    *k* users (i.e., the size of the group) is called a *k*-group. For a given time
    interval *span*, if each user of a *group* made at least one buy transaction in
    the time period [*t* − *span* + 1, *t* + *span*], we call the user group has a
    simultaneous buy transaction. The *support* count for the user group is the number
    of disjoint time intervals in which the user group has a simultaneous buy transaction.
    The proposed algorithm aims to find all the groups (and the corresponding supports)
    with support larger than a given threshold *mincnt*.
  prefs: []
  type: TYPE_NORMAL
- en: The pseudocode of the proposed method is shown in Algorithm [6.1](#FPar1). There
    are two main parts of the algorithm. The first part (line 1 ∼ line 9) returns
    all the *k*-groups (denoted as *F* [*k*]) and its corresponding supports (denoted
    as *supports* [*k*]). The first line introduces a user set *C* [1] which includes
    all the users. Then the 1-group *F* [1] is constructed by calculating the user
    support and filtering out those users with support less than *mincnt*. The corresponding
    supports are recorded in *supports* [1] (line 3). Next, if *F* [(*k*−1)] is not
    an empty set, the candidate *k*-group *C* [*k*] is constructed by using the *Apriori*
    principle (line 5), and the *k*-group *F* [*k*] with its supports *supports* [*k*]
    are computed by the defined function *COUNT*. The *COUNT* function (line 10 ∼
    line 33) is the other part of the algorithm. It calculates the support for a given
    *n*-group with *n* ≥ 2\. (Computing the support of 1-group needs only to calculate
    the buying frequency of the users, and thus is not presented in the algorithm.)
    Suppose *T* [*i*] (*i* = 1, 2, …, *n*) are the sets of all the buy transaction
    timestamps of the users in the group (line 12 ∼ line 15), to compute the support
    of the *n*-group, a pivoting user in the group is chosen (in the algorithm, the
    first user is chosen as the pivot). The counting process goes through each buy
    transaction timestamp of the pivoting user and increases the counter (i.e., *common
    times*) when needed. For example, if all the other users have one buy transaction
    in the *i*th time stamp interval (i.e., ![
  prefs: []
  type: TYPE_NORMAL
- en: $$[t_{i_{begin}}, t_{i_{end}}]$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_IEq34.png)), the
    counter is increased by one (line 17 ∼ line 32). If the adjacent time intervals
    intersect, the left endpoint of the latter is set to the next second of the right
    endpoint of the former to avoid overlapping (line 25 ∼ line 26).'
  prefs: []
  type: TYPE_NORMAL
- en: Algorithm 6.1 The improved Apriori algorithm![../images/506524_1_En_6_Chapter/506524_1_En_6_Figa_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Figa_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: 6.4 Experimental Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To verify the proposed algorithm, we used it to explore the transaction records
    in May 2013\. We chose this month’s data because it contains enough records, and
    the Bitcoin price has fluctuated a lot this month. We set the *span* to 1, 5,
    and 10 min, respectively, to see the distribution of the user groups at different
    time intervals. Furthermore, the two transaction types (i.e., buy and sell) are
    both considered. Figure [6.6](#Fig6) shows the results. As can be seen from the
    graph, the number and the size of the identified groups are different in the buy
    and sell transaction records. With the buy transaction records, more groups are
    found. The results show that more users buy together, but sell at different times.
    In general, the number of groups decreases with group size. But in terms of buying
    transaction records, when the span was 10 min, five groups had the most number.
    It is difficult to say that the organization being detected is involved in the
    P&D program. But oddly, some users are more likely to buy together. To check for
    abnormal behavior, we manually explored some of the groups. By doing so, we discovered
    a number of anomalies. Therefore, in the following sections, we will summarize
    all the anomalies found in the data set and discuss the possible causes. Specifically,
    two kinds of abnormal behavior can be found: abnormal trading behavior and abnormal
    trading price.![../images/506524_1_En_6_Chapter/506524_1_En_6_Fig6_HTML.png](../images/506524_1_En_6_Chapter/506524_1_En_6_Fig6_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6.6
  prefs: []
  type: TYPE_NORMAL
- en: The results of improved Apriori algorithm
  prefs: []
  type: TYPE_NORMAL
- en: 6.4.1 Abnormal Trading Behavior
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When analyzing the 1-group users, we found that some users have extremely different
    behaviors in buying and selling Bitcoin. For example, some users buy Bitcoin far
    more than we sell, while others do the opposite. To quantify the difference, we
    introduce the following notations for a user:'
  prefs: []
  type: TYPE_NORMAL
- en: '*count* [*buy*]: the counts of buy transaction'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*count* [*sell*]: the counts of sell transaction'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*bitcoins* [*buy*]: the total amount Bitcoins the user buys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*bitcoins* [*sell*]: the total amount Bitcoins the user sells'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Based on the notations, we can define two rates:![
  prefs: []
  type: TYPE_NORMAL
- en: $$\displaystyle \begin{aligned}rate_{count} = \frac{count_{buy}}{count_{sell}},rate_{amount}=
    \frac{bitcoins_{buy}}{bitcoins_{sell}}.\end{aligned}$$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/506524_1_En_6_Chapter/506524_1_En_6_Chapter_TeX_Equa.png)For an
    ordinary investor, the above defined two rates may be close to 1 for quite some
    time. Therefore, we define three kinds of abnormal users and display the corresponding
    number of users in Table [6.4](#Tab4). As can be seen, oddly enough, a significant
    number of users never buy or sell Bitcoins in the system. One possible reason
    is that some records are missing. However, the dataset is validated by communicating
    with multiple Mt. Gox users (Feder et al. [2018](#CR12)). Thus, a more reasonable
    explanation is that these accounts (i.e., users) may be controlled by the exchanges
    for some special purposes, for example, balance the trading and provide liquidity.
    So far, we can at least say that there has been some fake trading on the Mt. Gox
    exchange.Table 6.4'
  prefs: []
  type: TYPE_NORMAL
- en: Statistic of abnormal trading behavior
  prefs: []
  type: TYPE_NORMAL
- en: '| Type | Description | Number of users |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| I | *count* [*buy*] = 0 | 9367 |'
  prefs: []
  type: TYPE_TB
- en: '|   | *count* [*sell*] = 0 | 2026 |'
  prefs: []
  type: TYPE_TB
- en: '| II | *rate* [*count*] ∈ (5, *∞*) | 4586 |'
  prefs: []
  type: TYPE_TB
- en: '|   | *rate* [*count*] ∈ (0, 0.2) | 3809 |'
  prefs: []
  type: TYPE_TB
- en: '| III | *rate* [*bitcoins*] ∈ (5, *∞*) | 4697 |'
  prefs: []
  type: TYPE_TB
- en: '|   | *rate* [*bitcoins*] ∈ (0, 0.2) | 3695 |'
  prefs: []
  type: TYPE_TB
- en: 6.4.2 Abnormal Trading Price
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By further comparing the real-time Bitcoin price in the dataset with the disclosed
    Bitcoin price in *investing.com*, we found that some users always trade with abnormal
    prices, i.e., the real-time price is much higher than the highest price or much
    lower than the lowest price at that day. Table [6.5](#Tab5) shows two abnormal
    trading price transactions. Because the price of Bitcoin in 2013 was in range
    (13$, 1100$), the prices of the displayed records are obviously abnormal.Table
    6.5
  prefs: []
  type: TYPE_NORMAL
- en: Abnormal price transaction records
  prefs: []
  type: TYPE_NORMAL
- en: '| Trade_Id | Date | User_Id | Type | Bitcoin | Money | Price |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1362098659903894 | 2013-03-01 00:44:19 | 231 | buy | 0.01 | 0.01 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 1362098659903894 | 2013-03-01 00:44:19 | 231 | sell | 0.01 | 0.01 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 1367359249580015 | 2013-04-30 22:00:49 | 310991 | buy | 1.0000 | 13,839.17
    | 13,839.17 |'
  prefs: []
  type: TYPE_TB
- en: '| 1367359249580015 | 2013-04-30 22:00:49 | THK | sell | 1.0000 | 13,839.17
    | 13,839.17 |'
  prefs: []
  type: TYPE_TB
- en: Since the Mt.Gox exchange has been closed, it is difficult to collect the historical
    data from the exchange, so we can query the historical data from *investing.com*.
    As there may be a certain price difference among trading platforms, we consider
    a real-time price *abnormal* if it is higher than 150% of the highest price or
    lower than 50% of the lowest price on that day on investing.com. We extracted
    471,899 abnormal price trade records from the entire dataset, accounting for 3.04%
    of all transaction records. These abnormal price transactions involved 16,660
    users, accounting for 13.09% users in the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: In the following, we focus on the most active users and its counterparties.
    By counting the number of abnormal pricing transactions of all users, we found
    that the user_ids “THK,” “231,” “TIBANNE_LIMITED_HK,” and “698630” are the four
    most active. The abnormal user “698630” is named as *Markus* in Gandal et al.
    ([2018](#CR15)) as it never pays the transaction fee, and the trading price is
    approximately random. The user “231” had 53 counterparties trading with abnormal
    prices. Among all the counterparties, “231” was the most frequently and reached
    to 55,380 times (i.e., user “231” traded with itself). In addition, the user “231”
    always traded with itself at a very low price and the prices are always 1 dollar/Bitcoin.
    Furthermore, such “trade-with-self” is also found in the records of users “TIBANNE_LIMITED_HK”
    and “THK.” These features indicate that these accounts are “real” abnormal accounts.
    When exploring the counterparties of the user “THK,” we find a trading group formed
    by another three users, the user “300696,” “428513,” and “444956.” These three
    users have traded 16 times at the same time on May 2013\. Extracting all the transaction
    records of these three users, almost all their transaction prices are abnormal.
    The user “300696” and the user “444956” always trade at an absolutely low price,
    which is much lower than the lowest price on that day, while the user “428513”
    always trades at an absolutely high price, which is much higher than the highest
    price on that day. Since the user “THK” merchandises with these three users simultaneously,
    it is speculated that these four users may form a trading group to create fake
    transactions.
  prefs: []
  type: TYPE_NORMAL
- en: 6.5 Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we introduce two main research aspects about market analysis
    of blockchain-based cryptocurrencies, including features analysis on cryptocurrencies
    market and detecting abnormal schemes on cryptocurrencies market. We also use
    our work as examples to illustrate both research perspectives. In the rest of
    this section, we will summarize both of the work and introduce their future work.
  prefs: []
  type: TYPE_NORMAL
- en: As for the former one, we analyze the properties of Ether returns from the perspective
    of fractal market and discuss how investors’ behaviors influence the changes of
    returns. First of all, by calculating the Hurst exponent, we demonstrate the presence
    of long-range dependence in Ether returns, which indicates that the return series
    has a persistent behavior and negating the classic efficient market hypothesis.
    Secondly, we verify the presence of fat-tail distribution and further explore
    the multi-fractality property of Ether market as well as asymmetry of the multi-fractality.
    Finally, we find that the volume of Ether, which reflects the activity of investors
    to some extent, does not have obvious causality for returns but causes the market
    volatility when the volatility is moderate. The comparison with the Bitcoin market
    shows that the Ether market has a more fluctuating Hurst exponent and weaker multi-fractality,
    which suggests that the Ether market is less mature and has lower investment risk
    than Bitcoin market. Our analysis and results can provide useful insights for
    Ether investors and researchers interested in Ether market. In the future, more
    research efforts can be devoted to revealing the reasons for these properties
    from a financial perspective.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to the latter one, we propose an improved Apriori algorithm to
    detect user groups that may be involved in the “pump & dump” scheme. Through the
    leaked transaction history of the famous Bitcoin exchange Mt.Gox, we found many
    users who were buying and selling at the same time. To further analyze the detected
    groups, we found many abnormal trade records, namely abnormal trading behavior
    and trading prices. Some of the unusual behavior could be caused by exchange-controlled
    accounts. In the future, we plan to further study abnormal behaviors and users
    in the system and assess the impact of these behaviors on the Bitcoin price.
  prefs: []
  type: TYPE_NORMAL
