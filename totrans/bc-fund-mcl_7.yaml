- en: Glossary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This glossary covers terms, major events and supplemental information
  prefs: []
  type: TYPE_NORMAL
- en: '**Action principle:** A management practice that facilitates the success of
    a business project. Action principles are similar to ‘best practices’ in that
    both seek to share knowledge from prior experiences. However, whereas ‘best practices’
    imply that mimicry is always recommended and will always produce similar results,
    action principles recognize that context matters. The thoughtful practitioner
    decides the usefulness of an action principle depending on the objectives the
    organization is trying to achieve; whether the organization has the absorptive
    capacity to implement the action principle effectively; and timing—there are better
    times than others to act.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Altcoins:** Alternative coins are cryptocurrencies that are alternatives
    to bitcoin. Typically, altcoins were created by downloading the Bitcoin Core,
    altering the programming code, and launching a new network. Namecoin and litecoin
    are examples. As time went on, the term has become outdated.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Anonymity:** In the context of blockchains, the identity of the senders and
    receivers of transactions is unknown. Anonymity is different from confidentiality
    (see entry below).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Anti-Money Laundering (AML):** Regulations that require financial institutions
    to report suspicious activity of money laundering, which is defined as an illegal
    practice that converts profits from crimes into what appears to be a legitimate
    source of cash. Sample AML regulations include the US Bank Secrecy Act of 1970;
    the UK Sanctions and Anti-Money Laundering Act 2018; and the European Union’s
    AML directives in 2015 and 2020.^([1](#fn_1))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Application Programming Interface (API):** An API is a piece of software
    that connects two software applications so that one application can send a message
    to and receive a response from another application. Bitcoin, for example, has
    over 100 APIs. Sample Bitcoin APIs include programming code to indicate the number
    of blocks in the longest chain (‘GetBlockCount’); to create a new bitcoin wallet
    (‘CreateWallet’); and to list the IP addresses of all banned nodes (‘ListBanned’).
    See [https://bitcoin.org/en/developer-reference](https://bitcoin.org/en/developer-reference).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Asymmetric key algorithm:** A type of cryptography that uses a pair of mathematically
    related numbers called ‘keys’—one public key and one private key. Users can digitally
    sign messages by encrypting them with their private keys. *‘This is effective
    since any message recipient can verify that the user’s public key can decrypt
    the message, and thus prove that the user’s secret key was used to encrypt it.
    If the user’s secret key is, in fact, secret, then it follows that the user, and
    not some impostor, really sent the message.’*^([2](#fn_2)) **RSA**, **DSA**, and
    **ECC** are three specific examples of asymmetric key algorithms (see entries
    below for each).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Atomic swap:** Ensures that *all* of the actions associated with a transaction
    execute, or *all* the actions fail; no partial executions should be allowed. For
    example, if Alice wants to send some value to Bob, an atomic swap ensures that
    either (a) Alice’s account is debited AND Bob’s account is credited, or (b) that
    NEITHER action occurs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Benevolent dictator:** A governance model in which a single person or single
    organization holds decision making rights, and bases decisions on the best interests
    of the community.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bitcoin:** This term bitcoin refers to both the Bitcoin application as a
    whole and to its native digital asset, the bitcoin cryptocurrency.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bitcoin (application):** The Bitcoin application is a peer-to-peer payment
    application. Conceived of by Satoshi Nakamoto in 2008 by combining many existing
    innovations, the Bitcoin network was launched live in 2009.^([3](#fn_3)) Nakamoto
    adopted public-private key encryption to authenticate asset ownership, a Proof-of-Work
    consensus protocol for validating transactions and adding them to the ledger,
    and the use of hashes and Merkle trees to secure transactions within a completely
    distributed, peer-to-peer, public network. Among its advances were a digital ledger
    structured as a chain of blocks and the creation of a native digital asset called
    bitcoins.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bitcoin (cryptocurrency):** Bitcoins are the native digital asset within
    the Bitcoin blockchain. Bitcoin was designed to be a scarce resource with a maximum
    money supply of 21 million bitcoins. The first 50 bitcoins were released in 2009,
    and the last will be released in the year 2140\. Bitcoins are added to the money
    supply, on average, every ten minutes to reward miners for creating a new block
    of transactions. Every 210,000 blocks, the miner’s reward cuts in half, so that
    more bitcoins are released in its earlier years than in later years. As of early
    2020, about 85 percent of the money supply has been released.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Block header:** Each block within a blockchain contains a header with important
    information such as the block’s unique ID; the number of transactions in the block;
    when the block was created; the size of the block (in terms of computer storage);
    and the pointer to the previous block. [Figure G.1](#f_g_1) provides an example
    of Bitcoin’s block header. In this example, we are looking at the 507,980^(th)
    block in the Bitcoin blockchain. The summary data in the header indicates that
    there are 1,838 transactions in the block’s payload; its ***‘height’*** is equal
    to its sequence in the blockchain (block 507980); ***‘block reward’*** indicates
    that the winning miner earned 12.5 bitcoins for using its computer’s resources
    to validate the transactions and to create the block; the ***‘timestamp’*** indicates
    the exact second the block was created on February 6th 2018; the ***‘Merkle root’***
    shows the result of the Merkle hashing sequences (see **Merkle root** entry below)
    used to secure the block; the ***‘previous block’*** is the pointer to this block’s
    predecessor. The ***‘bits’*** and ***‘size’*** indicate how much computer storage
    is required to store this block. The ***‘version’*** indicates which set of Bitcoin’s
    blockchains rules to follow. The ***‘difficulty’*** and ***‘nonce’*** are associated
    with Bitcoin’s Proof-of-Work consensus algorithm. Functionally, the difficulty
    indicates the number of lead zeros the miner’s computer(s) had to find (after
    trillions of random tries) in order to find a unique ‘***blockhash’***. In this
    block, notice the blockhash has 18 lead zeros. The difficulty is part of the proof
    that the miner’s computer did some serious calculations to earn the block reward
    (see entry for **Proof-of-Work**).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.1: Example of a block header for Bitcoin](images/g1.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.1: Example of a block header for Bitcoin**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Blockchain:** This term is used several ways. Sometimes the term refers broadly
    to what we are calling a ‘blockchain application’. For example, people call Bitcoin
    and Ethereum ‘blockchains’. The term can also be used to describe the structure
    of the digital ledger. With a blockchain structure, newly submitted transactions
    are sequenced and collected into a block (see [Figure G.2](#f_g_2)). The block
    comprises a header and payload of transactions. The block header includes a pointer
    to the previous block of transactions, forming a chain of sequenced blocks over
    time all the way back to the first block, called the ‘genesis block’.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.2: Distributed ledger structured as a chain of blocks](images/g2.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.2: Distributed ledger structured as a chain of blocks**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Blockchain application**: A blockchain application is a peer-to-peer system
    for validating, time-stamping, and permanently storing transactions on a shared
    ***distributed ledger***. ***Digital assets***, native to each blockchain application,
    exist only in digital form and come with rights of use. ***Cryptography*** and
    ***consensus*** algorithms are used to validate transactions, to update the ledger,
    and to keep the ledger and network secure. Most blockchains also use ***smart
    contracts*** that apply rules to automatically execute transactions based upon
    pre-agreed conditions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Byzantine Fault Tolerance of a system:** The ability of a distributed network
    to function properly given that a certain number of nodes are faulty or even malicious.
    A general rule is that peer-to-peer distributed systems like blockchains can function
    properly even when up to a third of the participating nodes are faulty.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Byzantine Generals’ Problem:** A conceptual situation described by Leslie
    Lamport, Robert Shostak, and Marshall Pease (1982) to investigate how decentralized
    communication networks can reach agreement if some unknown number of nodes is
    faulty. In their metaphor, a Byzantine General represents a computer node; some
    generals are loyal (i.e. not faulty) and some generals are disloyal (i.e. faulty).
    Lamport et al. (1982) proved that decentralized networks could reach a consensus
    provided that two thirds of the nodes function properly.^([4](#fn_4))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Centralized network:** See entry for **Network structures**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code base:** The set of programming instructions based on the agreed upon
    rules, i.e. protocols.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Coercive influences:** See entry for **Institutional Isomorphism**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Confidentiality:** In the context of blockchains, only authorized parties
    are allowed to know the identities of the parties involved or the details of the
    transaction.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consensus protocol:** Consensus protocols are rules for making sure copies
    of the distributed ledger agree. Consensus protocols are used to counteract the
    **tragedy of the commons** and the **Byzantine Generals'' Problem** (see separate
    entries). Although consensus protocols vary in their validation procedures, in
    general, all consensus protocols seek to authenticate ownership and ensure that
    transactions are funded (i.e. no double spending) before adding them to the official
    distributed ledger. The process of validation begins when a new transaction is
    broadcast to the network. Computer algorithms verify legitimate ownership of the
    asset (based on the owner’s digital signature with his or her private key) and
    check that the asset has not been given away before by scanning the ledger, thus
    preventing double spending. Which node gets to collect verified transactions and
    add them to the official ledger depends on the network’s consensus protocol. Many
    consensus protocols have been used and proposed, including Proof-of-Work; Proof-of-Stake;
    Proof-of-Activity (which combines Proof-of-Stake with Proof-of-Work); Proof-of-Authority;
    Proof-of-Burn; Proof-of-Capacity; Proof-of-Elapsed Time; Proof-of-Listening; and
    Proof-of-Luck.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consortium-led innovation:** In the context of a blockchain, a consortium
    provides a structure for competitors and ecosystem partners to cooperate on shared
    blockchain initiatives.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Coopetition:** A portmanteau of two words—‘cooperation’ and ‘competition’.
    Coopetition recognizes that firms have complex interdependencies. In some realms,
    firms that compete for market share also cooperate to achieve mutual benefits
    such as to define standards, to build component parts, or to reduce shared administrative
    and infrastructure costs.^([5](#fn_5))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Corda:** An open-source, distributed ledger platform developed by the R3
    Consortium. Corda was designed to increase privacy, reduce data redundancy and
    increase scalability. Corda uses public-private key encryptions and hashes, and
    creates permanent, immutable records between trading partners. As a private protocol,
    participants are assigned a cryptographic identity, which is tied to a ‘real world’
    identity, such as a legal entity identifier.^([6](#fn_6)) Once on-boarded, a party
    can transform a legal contract into smart contract code to transact with another
    Corda party or parties. Rather than distribute the entire ledger to everyone on
    the network, Corda creates node-to-node transactions directly between/among the
    parties involved in the transaction as defined in the smart contract.^([7](#fn_7))
    Each Corda participant only sees the subset of data for which they are privy.
    This feature is implemented using Multiple Composite Keys (see entry below).^([8](#fn_8))'
  prefs: []
  type: TYPE_NORMAL
- en: Corda has configurable consensus, meaning parties to a contract can pick their
    preferred consensus protocol, which is likely to be Byzantine Fault Tolerance
    (BFT) or Raft.^([9](#fn_9)) The Corda ledger is built on relational database technology,
    and thus does not use a block structure. It chose this structure so that participants
    could easily query the ledger using SQL. Data is considered ‘on-ledger’ if at
    least two parties in the system agree about the transaction’s validity, whereas
    data held by only one party is ‘off-ledger’. Corda’s design is scalable since
    there is less network traffic and data storage, more private than most DTL protocols,
    and settles transactions as soon as nodes agree.^([10](#fn_10))
  prefs: []
  type: TYPE_NORMAL
- en: 'As time went on, Corda’s architecture evolved to the point where some people
    no longer consider it a blockchain; Corda lacks some of the defining characteristics
    of public blockchains: It does not have a native digital asset, it does not broadcast
    transactions, and it does not distribute a shared ledger. Indeed, Corda’s main
    architects call Corda ‘blockchain-inspired’.^([11](#fn_11)) The initial version
    was released in November of 2016.^([12](#fn_12))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Counterparty risk:** The risk each trading party bears that the other party
    will not fulfill its contractual obligations.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cross-chain oracle:** One blockchain application reads data from another
    blockchain application. One-way reads are also called ‘one-way pegs’.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cross-chain transaction processing:** Two or more blockchains coordinate
    operations so that a single asset can be used by more than one chain. These are
    also called ‘two-way pegs’.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cryptography:** The science of securing data in the presence of third party
    adversaries using mathematical and computer algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '**CryptoNotes:** A protocol that aims to increase the anonymity of blockchains.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cryptocurrency exchange:** A trusted third party that acts as a money transmitter
    or market maker for cryptocurrencies. Coinbase, Binance, and Huobi are examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Decentralized Autonomous Organization (DAO):** A special kind of smart contract
    that runs an entire organization automatically based on codified rules in a smart
    contract. The idea of a DAO is to create a completely independent entity that
    is exclusively governed by the rules that you program into it and ‘lives’ on the
    chain. This is more than using the blockchain to manage a company: instead, the
    code is the entire company. And it cannot be stopped.^([13](#fn_13))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Decentralized network:** See entry for **Network structures**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Delegated Proof-of-Stake (DPoS):** A consensus protocol created by Daniel
    Larimer, founder of BitShares, Steemit and EOS.^([14](#fn_14)) With this method,
    anyone who possesses the cryptocurrency can vote to elect validator nodes. The
    validator nodes with the most votes become a ‘delegate’ (see [Figure G.3](#f_g_3)).
    The algorithm takes turns selecting a leader from among the panel of delegates
    for a current time period. After the time period elapses, another round of voting
    occurs to select the next panel of delegates. Delegates are rewarded with transaction
    fees. DPoS settles transactions faster and with fewer resources than proof-of-work,
    and is more democratic than permissioned protocols.^([15](#fn_15)) EOS uses DPoS.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Democracy:** A governance model where any participant has an equal vote.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Denial of Service (DoS) attack:** A type of malicious attack that floods
    a network with so many transactions that it disrupts service for legitimate users.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Digital signature:** A way to sign a transaction using a computer rather
    than a hand signature, thus proving one is authorized to do so (see [Chapter 3](chapter03.xhtml)
    for more details).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Digital wallet:** Software that stores private keys associated with addresses
    that hold digital assets. A digital wallet is an entry point, or interface, to
    many blockchains. Stored off a blockchain, the private keys are the only way to
    prove that one owns an asset on the distributed ledger. If the digital wallet
    is destroyed or hacked, there is no way to retrieve it. Thus, digital wallets
    are the main source of vulnerability for blockchain applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G3: Delegated Proof-of-Stake (DPoS) voting process](images/g3.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G3: Delegated Proof-of-Stake (DPoS) voting process**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source:* [https://en.bitcoinwiki.org/upload/en/images/8/8b/Consensus-algorithms-pos-dpos.png](https://en.bitcoinwiki.org/upload/en/images/8/8b/Consensus-algorithms-pos-dpos.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Directed Acyclic Graphs (DAG):** A type of graph that flows in just one direction
    with no feedback loops. In the context of blockchains, one-way graphs can be used
    to represent the time sequence of transactions. Iota’s ‘tangle’ structures its
    ledger based on a DAG (see [Figure G.4](#f_g_4)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Disruptive innovation:** An innovation based on a new business model that
    targets underserved customers or creates new markets that may eventually threaten
    the traditional competitors’ market shares. The term comes from Clayton Christensen’s
    Theory of Disruptive Innovation.^([16](#fn_16))'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.4: Distributed ledger structured as a tangle of transactions](images/g4.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.4: Distributed ledger structured as a tangle of transactions**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Distributed ledger:** As a component of a blockchain application, a distributed
    ledger is a time-stamped, permanent record of all valid transactions that have
    occurred within a given blockchain application. Each node of the blockchain network
    has an identical copy; no node is in charge.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Distributed network:** See entry for **Network structures**'
  prefs: []
  type: TYPE_NORMAL
- en: '**DSA (Digital Signature Algorithm):** An asymmetric key algorithm that generates
    private-public key pairs. Designed by David Kravitz, an NSA (National Security
    Agency) employee, the National Institute of Standards and Technology adopted it
    in the 1990s.^([17](#fn_17))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Elliptic Curve Cryptography (ECC):** ECC is a common method for generating
    private-public key pairs in blockchain applications. Basically, an ECC algorithm
    transforms a private key into a public key by bouncing around a large elliptic
    curve ***n*** number of times, where ***n*** is equal to the private key. It’s
    theoretically impossible to figure out the private key if one only has the public
    key. The specific EC curve used in Bitcoin is y² = x3 + 7 (see [Figure G.5](#f_g_5)).
    This is called SECP256K1\. If we give someone the starting point G and the ending
    point public key (x, y), one cannot easily determine the n (the private key) even
    if one has this equation for the graph.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.5: Bitcoin’s Elliptic Curve Cryptography](images/g5.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.5: Bitcoin’s Elliptic Curve Cryptography**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: [https://en.bitcoin.it/wiki/Secp256k1](https://en.bitcoin.it/wiki/Secp256k1)*'
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm begins at base point G and moves across the graph trillions upon
    trillion of times equal to the private key to land on a final (x,y) coordinate
    that becomes the public key.
  prefs: []
  type: TYPE_NORMAL
- en: '**EOS:** EOS was developed by Daniel Larimer and Brendan Blumer, CTO and CEO,
    respectively, of Block.one. They wanted the advantages—open, secure, decentralized—of
    a public blockchain platform, like Ethereum, to build and operate decentralized
    applications, but without the latency, limited scalability, and resource intensity.
    The EOS mainnet was launched live in June of 2018\. Anyone can view the blockchain
    ([https://bloks.io/](https://bloks.io/)) and use EOS. Anyone can operate a validator
    node if they meet minimal criteria: an individual or organization must have a
    public website URL; at least one social media account; an ID on Steemit; sufficient
    hardware; plans to scale hardware; plans to benefit the community; telegram and
    testnet nodes; a roadmap; and a dividend position.^([18](#fn_18)) However, only
    21 ‘block producers’ can add blocks. The block producers are selected by a Delegated
    Proof-of-Stake mechanism (see [glossary](glossary.xhtml) entry) in which owners
    of EOS cast votes in proportion to their stake.^([19](#fn_19)) Block producers
    are rewarded with the issuance of new EOS tokens. Blocks are produced about every
    500 milliseconds, with each of the 21 producers getting a turn. On the day of
    this writing, EOS was trading at $2.35 and block producers were located in China
    (eight nodes), Singapore (three nodes), the Cayman Islands (two nodes), United
    States (two nodes) and BVI, Canada, Hong Kong, Japan, South Korea, and Ukraine
    (operating one node each).'
  prefs: []
  type: TYPE_NORMAL
- en: '**ERC-20 tokens**: Standard for creating a token for *fungible digital assets*
    that can be exchanged with other fungible tokens on Ethereum. Each token is interchangeable
    and has the same value. The token must meet mandatory requirements for defining
    the total money supply, specifying the number of tokens than can be transferred
    to a user account, providing a way to extract the balance of an account, allowing
    the transfer of tokens to other accounts, and checking a transaction against the
    money supply to prevent counterfeits. Optionally, ERC-20 tokens can be assigned
    a token name, symbol, and decimal value (up to 18 decimal places).^([20](#fn_20))
    Aion (AION); Augur (REP); EOS (EOS); Golem (GNT); Maker (MKR); TRON (TRX); and
    VeChain(VET) are examples of ERC-20 tokens.'
  prefs: []
  type: TYPE_NORMAL
- en: '**ERC-721 tokens**: Standard for creating a token for *nonfungible digital
    assets* on Ethereum, whereby each token is unique and can have a different value
    than others of its kind. ERC-721 tokens can only be exchanged with other tokens
    of its same kind. ERC-721 tokens must meet required functions, including balance
    of an address; owner of a token; approval and transfer of a token.^([21](#fn_21))
    CryptoKitties was the first ERC-721 token, which gained popularity in 2017; each
    CryptoKitty is one of a kind. Whereas CryptoKitties are native digital assets
    that only exist inside Ethereum, ERC-721 tokens can be used to represent unique
    assets outside of Ethereum with a unique digital twin inside Ethereum. EY’s WineChain
    token is an example; EY tokenized 11 million unique wine bottles with an ERC-721
    token.^([22](#fn_22))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ether:** Ethereum’s native digital asset. Ether is not intended so much as
    a cryptocurrency, as much as it is a ‘crypto-fuel’, meaning it’s a token whose
    main function is to pay for the Ethereum platform.^([23](#fn_23)) Like bitcoin,
    ether is released through the process of mining blocks, and miners also receive
    the ether that senders append to their transactions to pay for them to be validated
    and added to the ledger. Ethereum’s block reward was initially 5 ether, but it
    was reduced to 3 ether in 2017 and to 2 ether in 2019.^([24](#fn_24)) As of August
    26, 2019, ether was trading at $188.49; the network had 8,977 active nodes, and
    8,426,754 blocks had been added to the ledger.^([25](#fn_25)) The total ether
    money supply amount is unclear;a maximum of 18 million ether can be mined per
    year.^([26](#fn_26)) ^,^([27](#fn_27))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ethereum:** Vitalik Buterin wrote the 2013 Ethereum white paper that would
    become the Ethereum platform when he was only 19 years old. Vitalik Buterin, Gavin
    Wood and Jeffrey Wilcke began work on Ethereum by launching The Ethereum Foundation,
    a non-profit organization based in Switzerland. According to the Ethereum Foundation:
    *“Ethereum is a community-driven project aiming to decentralize the Internet and
    return it to its democratic roots. It is a platform for building and deploying
    applications which do not need to rely on trust and cannot be controlled by any
    central authority.”*^([28](#fn_28)) Ethereum’s smart contracts are the primary
    innovation that extends a blockchain from a transaction verification and settlement
    protocol to a platform to launch decentralized applications (DApps). DApps can
    create and transact new native digitals assets besides ether, provided that they
    conform to **ERC-20** or **ERC-711** guidelines (see separate entries above).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ethereum Foundation:** Vitalik Buterin, Gavin Wood and Jeffrey Wilcke began
    work on Ethereum by launching The Ethereum Foundation, a non-profit organization
    based in Switzerland. The foundation was first funded in August 2014 using an
    Initial Coin Offering for its native digital asset called ‘ether’. Ethereum went
    live in July of 2015, with a presale release of 60 million ether and 20 million
    ether retained by The Ethereum Foundation.^([29](#fn_29)) It raised over $16 million.^([30](#fn_30))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exchange:** see **Cryptocurrency Exchange** entry.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fabric:** See **Hyperledger Fabric** entry.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Federation:** A governance model in which decentralized groups specialize
    on parts of a project while coordinating with a central group.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fork:** A divergence of a blockchain into two or more separate paths. Soft
    forks are temporary, whereas hard forks are permanent (see [Figure G.6](#f_g_6)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fork (Hard):** Hard forks are permanent, divergent paths of a blockchain.
    Hard forks typically occur under two circumstances. First, someone may create
    their own blockchain or digital asset by copying and modifying source code. Second,
    hard forks can occur when the open source community disagrees on the rules of
    the next version of the protocol. For example, Bitcoin forked into ‘Bitcoin’ and
    ‘Bitcoin Cash’ when miners disagreed over a proposed upgrade in 2017\. In another
    example, Ethereum split into ‘Ethereum’ and ‘Ethereum Classic’ when the community
    disagreed about remediating The DAO hack (see story in [Chapter 8](chapter08.xhtml)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fork (Soft):** Sometimes two nodes create the next block at the same time,
    resulting in two versions called a soft fork. For a short while, different nodes
    in the network will be working off of different branches of the ledger until one
    is established as the longest and therefore the valid branch. Soft forks also
    occur during planned upgrades to the open source software. A temporary divergence
    in the blockchain happens when non-upgraded nodes do not follow the new consensus
    rules.^([31](#fn_31)) The non-upgraded nodes can still mine for a set time period,
    so it is up to the upgraded nodes to mine faster and become the longest, and thus,
    most valid chain.^([32](#fn_32)) In practice, the open source community tries
    to get most people to agree to the soft fork in advance.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.6: Hard fork vs. soft forks](images/g6.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.6: Hard fork vs. soft forks**'
  prefs: []
  type: TYPE_NORMAL
- en: '***A hard fork is a permanent divergence in a blockchain. A soft fork is a
    temporary divergence in a blockchain while nodes upgrade to the new rules; mining
    under old rules will not win blocks, so nodes will eventually join the new chain
    if everything goes as planned***.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Governance:** Defines the decision-making rights over a blockchain initiative.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hash:** An algorithm for transforming one input into a different output.
    Given a specific input, the identical output will always be reproduced. A good
    hash algorithm makes it practically impossible to determine the input value based
    on the output value, which is why hashes are called ‘one way’ functions. SHA-256
    is commonly used in blockchains. Blockchains use hashes in many places to add
    layers of security. Public keys are hashed into addresses; addresses and amounts
    within a transaction are hashed to create a unique and secure transaction ID;
    transaction IDs within a block are hashed together multiple times to produce a
    **Merkle root** (see entry below) that resides in a block header; and all the
    data in the block header is hashed to create a unique and secure block ID.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hash-Time Locked Contracts (HTLC):** A type of smart contract that locks
    the sender’s value into the contract until either the receiver retrieves the value
    in the address using the secret key and their digital signature (this is the ‘hash
    lock’), or the contract expires and returns the value to the sender (this is the
    ‘time lock’).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Heisenbug:** A computer programming logic error that changes its behavior
    unpredictably.^([33](#fn_33)) The bug is named after the Heisenberg Uncertainty
    Principle which asserts that the more precisely one thing is known about a particle—like
    its position—the less precisely another thing is known about the particle—like
    its momentum.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hexadecimal:** A numbering system with 16 base numbers, often used in blockchain
    cryptography. The 16 numbers are usually represented as 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,
    and F.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hyperledger Fabric:** Hyperledger Fabric is one of the projects sponsored
    by the Hyperledger Project, a non-profit organization launched by the Linux Foundation
    in December of 2015 to advance the application of enterprise-grade blockchains
    across industries.^([34](#fn_34)) Although the Hyperledger Project has other major
    blockchain frameworks, Fabric has received considerable media attention, thanks
    to its adoption by enterprises such as IBM, Wal-Mart, and Maersk.^([35](#fn_35))
    Digital Asset Holdings and IBM initially contributed to Hyperledger Fabric’s code
    base. Twenty-six other companies—including Fujitsu, GE, Hitachi, State Street,
    and SAP—contributed to the open source code that was released in 2017.^([36](#fn_36))
    Fabric’s ledger is structured as a chain of blocks and has two subsystems: ‘the
    world state’ and the ‘transaction log’ of all the transactions that led up to
    the current world state. Participants can create their own channels, which is
    a separate transaction ledger. Within a channel, every node gets copies of the
    same ledger.^([37](#fn_37)) Fabric also has a smart contracting feature, called
    Chaincode, which is used to connect outside applications to the world state ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hyperledger Project (HLP):** The Linux Foundation launched this non-profit
    organization in December of 2015 to advance the application of enterprise-grade
    blockchains across industries.^([38](#fn_38)) Brian Behlendorf, the developer
    of the Apache Web server, serves as Executive Director. As of January 2020, 275
    corporate members are listed on its website. As of 2020, HLP oversees six major
    distributed ledger projects: Fabric (see entry above); Sawtooth; Iroha; Burrow;
    Indy; and BESU. HLP is also developing four tools (Avalon, Caliper, Cello, and
    Explorer) and building libraries (Quilt for blockchain interoperability; Ursa
    for cryptograpy; Transact for smart contracts; and Aries for digital credentials).^([39](#fn_39))
    Hyperledger GRID was donated by Cargill to serve as a reference implementation
    for supply chains and includes data types, data models, and smart contract business
    logic.^([40](#fn_40))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Immutability:** As it relates to blockchains, immutability means that a transaction
    or smart contract that has been added to the digital ledger can never be changed.
    For public blockchains like Bitcoin and Ethereum, immutability means that errors
    cannot be fixed unless 51 percent of the nodes agree to the fix by rolling back
    the ledger and creating a hard fork. For private blockchains, authorized parties
    may submit transactions that reverse a prior error, but the entire transaction
    history that led to the current account balance will be maintained. The benefit
    of immutability is that trading partners can rely on one historical record for
    data provenance and auditability. Immutability may conflict with regulations or
    corporate policies that require data destruction after an elapsed period of time,
    but there are a number of practices to address this, such as keeping private data
    off chain.^([41](#fn_41))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Initial Coin Offering (ICO):** With an ICO, startups announce that they want
    to raise cash using an ICO by launching a new coin, i.e. a new cryptocurrency.
    Investors buy the coins instead of shares in a company. While there are many legitimate
    ICOs, investors are warned to fully vet ICO projects to avoid being scammed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Initial Exchange Offering (IEO):** A funding round conducted on a cryptocurrency
    exchange. Investors fund their exchange wallets with coins and use those funds
    to buy the fundraising company’s tokens. Binance, Huobi, OKEX, KuCoin, and BitMax
    are examples of exchanges with IEO services.^([42](#fn_42))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Institutional Isomorphism:** A theory that describes the process by which
    competitors within an industry become more alike in structure and adopt similar
    practices over time. Paul DiMaggio and Walter Powell first articulated the theory.^([43](#fn_43))
    The theory identifies three pressures that lead institutions to conform: mimetic,
    coercive, and normative. ***Mimetic influences*** arise from the perception that
    peer organizations are more successful; by mimicking peer behavior, the organization
    aims to achieve similar results. ***Coercive influences*** come from both formal
    and informal political pressures exerted on an organization by other organizations
    upon which they are dependent. Government regulations, legal requirements, and
    ceremonial practices to boost legitimacy, are examples of coercive influences.
    ***Normative influences*** arise from duties, obligations, and norms of professionalism,
    including formal education and professional and trade associations that seek to
    legitimize their existence. DiMaggio and Powell wrote, *“Many professional career
    tracks are so closely guarded, both at the entry level and throughout career progression,
    that individuals who make it to the top are virtually indistinguishable”.*^([44](#fn_44))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interface (blockchain):** An access point to a blockchain application through
    an application programming interface (API). For end users, interfaces include
    digital wallets; gateways; anchors; exchanges; web portals; and IoT devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interledger Protocol (ILP):** Two Ripple engineers published the ILP’s white
    paper back in 2015\. For a given payment, the ILP protocol sends many micropayments
    with confirmations between micropayments to minimize the risk that a node could
    steal or fail to send a payment through a network.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Internet-of-Things (IoT):** A term that refers to connecting devices with
    unique identifiers to the Internet so that data can be collected from and sent
    to those devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Internet Protocol (IP) address:** This is a unique number assigned to every
    device connected to the Internet. It’s like a street, city, state, and zip code
    for each device. A sample IP address (in version 4) is ‘172.16.254.1’.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interoperability:** The ability for one system to use another system.^([45](#fn_45))
    In relation to blockchains, interoperability means one blockchain could be connected
    to different blockchains or to different systems of record.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Know Your Customer (KYC):** Regulations that require financial institutions
    to verify the identity, suitability, and risks involved with maintaining a business
    relationship with a customer. Examples of KYC regulations include the USA Patriot
    Act of 2001 and the UK Money Laundering Regulation of 2017.^([46](#fn_46))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lightning Network**: A protocol that tracks intermediate transfers of funds
    off a blockchain and only posts the value of the initial credit and the final
    account balance transfers to the blockchain. The solution helps unclutter the
    blockchain network by getting rid of intermediate transactions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mandelbug:** A computer programming logic error that is obscure and complex
    and therefore hard to detect.^([47](#fn_47)) It is named after the mathematician
    Benoit Mandelbrot, who showed that complex phenomena could arise from simple rules.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Meritocracy:** A governance model in which power is held by individuals or
    organizations based on their proven ability.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Merkle root:** Named after the US computer scientist, Ralph Merkle, the Merkle
    root is the result of a sequence of hashes between pairs of numbers. In blockchain
    applications, the numbers are pairs of transactions (see [Figure G.7](#f_g_7)).
    The process to calculate the Merkle root produces a very secure block because
    if a single digit is altered in any individual transaction, a subsequent calculation
    check of the Merkle root would reveal an alteration. For a given block, the Merkle
    root is added to the block’s header.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.7: Merkle tree](images/g7.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.7: Merkle tree**'
  prefs: []
  type: TYPE_NORMAL
- en: '***In this example, a block comprises 8 transactions. Each transaction is secured
    with a hash. Then, the transaction hashes are secured again by hashing four pairs
    of transactions. Next, two pairs of the hashes are hashed. Then the last hash
    pair is hashed again, resulting in the root hash called the Merkle root.***'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mimetic influences:** See entry for **Institutional Isomorphism**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Minimal viable ecosystem (MVE):** The minimum number of ecosystem partners
    that are needed to successfully launch a minimal viable product. Too many participants
    will slow development; too few and the solution will not be useful or attractive.
    In the context of blockchains, IBM recommends that competitors should be included
    in an MVE to establish trust.^([48](#fn_48))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Minimal viable product (MVP):** An initial version of a product that has
    enough functionality to attract early adopters. The early adopters provide feedback
    to improve the product, such as proposing new features and functionality. The
    purposes of an MVP are to test a product with minimal resources; accelerate learning
    through feedback from early adopters; lay claim to the solution before competitors;
    and to start building a brand.^([49](#fn_49))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mining:** See entry for **Proof-of-Work**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mining pool:** Groups of miners who pool their resources and agree to share
    block rewards in proportion to their contributed mining hash power. Mining pools
    are desirable to the average miner because they smooth out rewards and make them
    more predictable.^([50](#fn_50))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mission:** A formal statement that expresses the aspirations and values of
    an organization or community.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Money laundering with cryptocurrencies:** Criminals around the world have
    used cryptocurrencies for money laundering, which converts profits from crimes
    into what appears to be a legitimate source of cash. For example, ten men were
    arrested in the Netherlands in January 2016 for laundering large sums of money
    using bitcoins.^([51](#fn_51)) In another example, a Russian man was arrested
    in Greece for laundering $4 billion into virtual currency.^([52](#fn_52)) The
    US Drug Enforcement Agency (DEA) is concerned about the increased use of cryptocurrencies
    as a way to launder the revenue generated from crime, which is worth approximately
    $300 billion annually in the US.^([53](#fn_53)) In a 2017 report, the DEA stated,
    *“Emerging as a money laundering vulnerability, Bitcoin and other virtual currencies
    enable TCOs (Transnational Criminal Organizations) to easily transfer illicit
    proceeds internationally.”*^([54](#fn_54)) Most exchanges now comply with Anti-Money
    Laundering (AML) requirements.'
  prefs: []
  type: TYPE_NORMAL
- en: '**MultiChain:** MultiChain is the code base developed by Coin Sciences Ltd.
    According to its whitepaper, *“MultiChain is an off-the-shelf platform for the
    creation and deployment of private blockchains, either within or between organizations.
    It aims to overcome a key obstacle to the deployment of blockchain technology
    in the institutional financial sector, by providing the privacy and control required
    in an easytouse package. Rather than supporting a single blockchain like Bitcoin
    Core, MultiChain is easy to configure and can work with different blockchains
    at the same time.”*^([55](#fn_55)) Its consensus protocol relies on ‘mining diversity’;
    a round robin schedule of pre-authorized nodes assigned the tasks of validating
    new transactions and adding them to the ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Multiple Composite Keys:** In contrast to a single private-key pair, multiple
    private keys are needed to authorize a transaction. It’s a way for multiple parties
    to share an asset.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Network sructures:**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.8: Three network structures](images/g8.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.8: Three network structures**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: [http://www.truthcoin.info/images/cent-dec-dist.jpg](http://www.truthcoin.info/images/cent-dec-dist.jpg)*'
  prefs: []
  type: TYPE_NORMAL
- en: A network structure describes the relationships among nodes in a network (see
    [Figure G.8](#f_g_8)). With a centralized structure, one node is in control; the
    centralized node (server) receives all incoming data from other nodes and, in
    turn, routes data to other nodes. In a distributed network, all nodes are peers;
    no one node is in charge. Data travels to its closest neighbors until all targeted
    recipient nodes receive the data. In computer science, a decentralized network
    is a hybrid, resulting in a distributed network of centralized networks.^([56](#fn_56))
    However, many people use the terms ‘decentralized’ and ‘distributed’ as synonyms
    in common vernacular.
  prefs: []
  type: TYPE_NORMAL
- en: '**Node:** According to the Hyperledger Blockchain Performance Metrics white
    paper (2019), *“In the context of a blockchain network, a node is an independent
    computing entity that communicates with other nodes in a network to work together
    collectively to complete transactions. A node is a virtual entity, in the sense
    that it could be running on physical hardware, or as a Virtual Machine (VM) or
    containerized environment. In the latter case, a node could share physical hardware
    with other nodes in the same network. A set of nodes may be managed by the same
    organization. For example, think of a mining pool operated by one company where
    a group of machines run as individual nodes doing proof of work (PoW) on a network.
    In most blockchain networks (Bitcoin, Ethereum, Hyperledger Burrow, Hyperledger
    Indy, Hyperledger Iroha, Hyperledger Sawtooth) each node plays a uniform class
    of roles in the network, such as generating blocks, propagating blocks, and so
    on. In these networks, nodes are usually referred to as peers. Such networks might
    require one or more nodes to take on a temporary role as a leader. This leadership
    role may be passed to other nodes in certain well-determined conditions. However,
    in some blockchain networks (such as Hyperledger Fabric), nodes are assigned one
    or more possible roles, such as endorsing peers, ordering services, or validating
    peers.”^([57](#fn_57))*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Normative influences:** See entry for **Institutional Isomorphism**.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Notary:** Pertaining to blockchains, a notary is a trusted third party that
    coordinates cross-chain operations. Cryptocurrency exchanges are common examples.
    Exchanges allow users to easily buy and sell cryptocurrencies and to exchange
    cryptocurrencies for fiat currencies; but that convenience comes at the acceptance
    and trust of centralized control, and with the risks of a single point of failure.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Oligarchy:** A governance model in which a few people or a few institutions
    hold decision making rights.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Oracle:** In a blockchain application, an oracle is an agent that finds and
    verifies real-world occurrences and submits this information to a blockchain to
    be used by smart contracts.^([58](#fn_58))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance:** See entry for **Systems Performance**.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Permissioned Protocol:** Within a blockchain application, a permissioned
    protocol restricts access and confines which nodes are allowed to observe, transact,
    validate and add transactions to the permanent record (i.e. the distributed ledger).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Permissionless Protocol:** Within a blockchain application, a permissionless
    protocol does not restrict access. Anyone can operate a full node and compete
    (or be semi-randomly assigned or voted upon) to validate and add transactions
    to the permanent record (i.e. the distributed ledger).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Plasma:** Designed for Ethereum by Vitalik Buterin and Joseph Poon, Plasma
    is a ‘layer 2’ blockchain option designed to increase Ethereum’s throughput, allowing
    more transactions per second.^([59](#fn_59)) *As of 2020, it is still being debated
    by the Ethereum community.*^([60](#fn_60))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Practical Byzantine Fault Tolerance (PBFT):** A consensus protocol created
    by Miguel Castro and Barbara Liskov in 1999.^([61](#fn_61)) With PBFT, nodes need
    permission to serve as validator nodes, forming a member list. Each round, a node
    from the member list is selected as leader (see [Figure G.9](#f_g_9)). A client
    node sends a request to the leader node to validate a transaction. The leader
    node multicasts the request to all the other authorized nodes. The authorized
    nodes execute the request independently and then send the confirmation to each
    other and to the client. The client waits for a certain percentage of replies
    to confirm validation, typically waiting for 2/3 of the nodes to agree. The leader
    node changes for the next round.'
  prefs: []
  type: TYPE_NORMAL
- en: As a *class* of consensus algorithms, there are many versions of PBFT, including
    Redundant Byzantine Fault Tolerance (RBFT) used by Hyperledger Indy^([62](#fn_62));
    Delegated Byzantine Fault Tolerance used by Antshares;^([63](#fn_63)) Quorum used
    by JP Morgan;^([64](#fn_64)) and Federated Byzantine Agreement used by Stellar^([65](#fn_65))—to
    name but a few. PBFT versions differ by how authorized nodes are chosen and by
    how nodes are assigned roles. Ripple and Stellar, for example, allow participants
    to pick which nodes they want as validators;^([66](#fn_66)) Antshares separates
    bookkeeping nodes from user nodes, with the former being operated by professionals;
    Quorum delegates nodes to observer, voter, and maker roles;^([67](#fn_67)) R3
    Corda authorizes notary and observer nodes; Hyperledger Fabric defines endorser,
    orderer, and committer nodes.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.9: Practical Byzantine Fault Tolerance (PBFT) Consensus Process](images/g9.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.9: Practical Byzantine Fault Tolerance (PBFT) Consensus Process**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: Castro & Liskov (1999) [https://theintelligenceofinformation.files.wordpress.com/2017/02/hotdep_img_1.jpg](https://theintelligenceofinformation.files.wordpress.com/2017/02/hotdep_img_1.jpg)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Privacy coin:** A cryptocurrency that aims to maximize anonymity by using
    protocols and cryptography to mask the senders, receivers, and/or amounts while
    still preventing a double spend. Monero and zcash are examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Private-public key pair:** Two numbers that are mathematically related such
    that it is nearly impossible to figure out the private key if one only has access
    to the public key. Both keys are needed to prove ownership of a digital asset.
    Together, the pair serves as a digital signature. In practice, the owner of the
    digital asset holds the private key off the blockchain, either in a wallet the
    owner stores on his/her own device or in a wallet stored on an exchange or third-party
    provider. The public key is stored on the blockchain. (In Bitcoin, the public
    key is transformed into an address using a hash function.) Both keys need to ‘turn’
    to send value. [Figure G.10](#f_g_10) is an example of a legitimate private-public
    key pair. (Don’t bother searching for this address on a blockchain, a program
    created the private-public key pair for illustrative purposes.)^([68](#fn_68))'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.10: Example of a private-public key pair](images/g10.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.10: Example of a private-public key pair**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: [http://minetopics.blogspot.com/2013/01/hiding-bitcoins-in-your-brain.html](http://minetopics.blogspot.com/2013/01/hiding-bitcoins-in-your-brain.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice how long the hexadecimal public key is: 04CDBE3A1BA0CC0E34F09886834
    DB0967B5E71EC9563050A4360C1DC66B371F883D5B3EC7DAA354B0CF61E7EF F1ED863C88BA1E78D8AA405CC38B783DBDC9DD046'
  prefs: []
  type: TYPE_NORMAL
- en: 'To store on a blockchain, the public key gets shortened through a series of
    hashing processes, so it would look like this on a blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: 17A16QmavnUfCW11DAApiJxp7ARnxN5pGX
  prefs: []
  type: TYPE_NORMAL
- en: '**Proof-of-Authority (PoA):** A consensus mechanism that preauthorizes nodes
    with the authority to validate and add transactions to a distributed ledger. The
    algorithm takes turns selecting a leader from among the list of authorized nodes
    (see [Figure G.11](#f_g_11)). The leader node checks each transaction in the transaction
    queue; organizes valid transactions into a block; signs the block with the node’s
    private key; and distributes the block to other nodes. The other nodes validate
    that the block was signed by the current leader and recheck each transaction within
    the block, resulting in an acceptance or a rejection of the entire block. As a
    permissioned consensus algorithm, it settles transactions faster and with fewer
    resources than permissionless algorithms, but it is more centralized.^([69](#fn_69))'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.11: Proof of Authority: Authorized nodes take turns creating
    blocks](images/g11.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.11: Proof of Authority: Authorized nodes take turns creating blocks**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: [https://apla.readthedocs.io/en/latest/_images/block-generation.png](https://apla.readthedocs.io/en/latest/_images/block-generation.png)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Proof-of-Stake:** Sunny King and Scott Nadal created the ‘proof-of-stake’
    consensus protocol for blockchains in a 2012 white paper.^([70](#fn_70)) Instead
    of ‘mining’ for coins, the protocol selects a member to ‘forge’ new currency as
    a reward for validating the transactions and creating the next block. Essentially,
    the selected member node is awarded a transaction fee. The member node is selected
    in a semi-random way; it’s called a ‘proof-of-stake’ because the members with
    the highest ‘stake’ (i.e. have the largest account balances) are giving priority
    in the selection algorithm. Participants in the blockchain can estimate with some
    certainty which member will likely be the next ‘forger’. A ‘proof-of-stake’ process
    uses much less energy than a ‘Proof-of-Work’ process. However, critics claim it
    is less secure than Proof-of-Work because people with small stakes have little
    to lose by voting for multiple blockchain histories, which leads to consensus
    never resolving.^([71](#fn_71)) Peercoin and Nxt use Proof-of-Stake. Ethereum
    may migrate to PoS.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Proof-of-Work:** Cynthia Dwork and Moni Naor created the ‘Proof-of-Work’
    protocol in 1993 to prevent junk email.^([72](#fn_72)) Satoshi Nakamoto adopted
    the ‘Proof-of-Work’ consensus protocol for Bitcoin in the 2008 white paper.^([73](#fn_73))
    Ethereum also uses Proof-of-Work (for now). Nakamoto needed a way to find independent
    verifiers to validate transactions and add blocks to the blockchain without relying
    on trusted third parties. Nakamoto proposed to reward other nodes in the network
    with newly issued bitcoins when they validate all recently submitted transactions
    and create the next block. So that validator nodes take the task seriously, Nakamoto
    proposed a competition among computer nodes in the blockchain network to be the
    first to collect recently verified transactions into a block and then to find
    an acceptable block identification number (known as the blockhash) for the next
    block in the blockchain. It’s not easy to find an acceptable number. . . it takes
    a lot of computing power to perform the brute force guesses to find a hash number
    that is less than the current mining ‘difficulty’. The difficulty is part of the
    proof that the miner’s computer did a significant amount of work to earn the block
    reward. [Figure G.12](#f_g_12) shows how it works.'
  prefs: []
  type: TYPE_NORMAL
- en: For the Bitcoin blockchain, a block’s winning miner—or more likely, the winning
    mining pool—receives a set amount of bitcoins, which was 12.5 bitcoins as of March
    2020, plus all the small fees that people offered miners to include their transactions
    in the block. A new block is mined every ten minutes on average. The miner’s block
    reward halves every 210,000 blocks, so miners earn fewer coins with time, but
    the value of those coins might be substantially higher over time.
  prefs: []
  type: TYPE_NORMAL
- en: For the Ethereum blockchain, winning miners are awarded two ether per block,
    which are created about every 15 seconds. Sometimes ether is sent to a miner who
    found a solution but whose block was not included, called an uncle (or aunt) reward.^([74](#fn_74))
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.12: The Proof-of-Work mining competition algorithm](images/g12.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.12: The Proof-of-Work mining competition algorithm**'
  prefs: []
  type: TYPE_NORMAL
- en: '***A miner’s computer takes the unique identifier (i.e. the blockhash) from
    the block at the top of the chain and hashes that number with the proposed next
    block’s header of fixed information—the protocol version number, the root hash
    of the Merkle tree, the current time, and the difficulty—and a randomly selected
    number called a ‘nonce’. The hash is then checked to see if it is less than the
    current mining difficulty. If the hash is greater than the target difficulty,
    the algorithm tries another guess. If it is less than the target difficulty, the
    miner wins the competition and is awarded newly created coins.***'
  prefs: []
  type: TYPE_NORMAL
- en: The Proof-of-Work protocol creates a highly secure ledger, as an attacker would
    need to gain control of more than 50 percent of the hashing power of the network,
    rewrite history and find all new hashes that adhere to the protocol before other
    nodes notice. The cons of the protocol include slower transaction settlement times,
    fewer transactions processed per second, and higher electricity consumption compared
    to other protocols.
  prefs: []
  type: TYPE_NORMAL
- en: '**Protocol:** A common set of rules that allow different nodes in a computer
    network to communicate. For example, the Internet uses the Transmission Control
    Protocol/Internet Protocol (TCP/IP), which is a set of protocols that specify
    how data should be structured, addressed, transmitted, routed, and received by
    nodes on the Internet. Blockchain protocols specify rules for how transactions
    are structured; addressed; transmitted; routed; validated; sequenced; secured;
    and added to the permanent record (i.e. the distributed ledger) by nodes in a
    blockchain network.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pseudo-anonymity:** A blockchain application that aims to mask the identity
    of parties to a transaction, but whose identity may be revealed through meta data.
    For example, IP addresses may reveal the sender of a transaction. More commonly,
    when Party A sends value to an address owned by Party B on one date, Party A can
    later determine additional addresses owned by Party B when Party B spends the
    coins.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quantum computing:** A computing architecture based on quantum bits, called
    ‘qubits’, which can simultaneously represent multiple states and therefore do
    multiple calculations at the same time. Quantum computing will speed computers
    in such a way that brute force guesses of private cryptographic keys that are
    impractical today could be practical in the future.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quick response (QR) code:** A QR code is a two dimensional code that is machine
    readable. QR codes are often used to track goods, and may contain information
    such as the manufacturer, lot number, and item number. Any number or text can
    be converted to a QR code. For example, [Figure G.13](#f_g_13) is QR code for
    ‘The University of Arkansas’. If you take your camera phone and scan the QR code,
    you will see that the QR code is interpreted correctly.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: G.13\. Machine-readable QR code for ‘The University of Arkansas’](images/g13.png)'
  prefs: []
  type: TYPE_IMG
- en: '**G.13\. Machine-readable QR code for ‘The University of Arkansas’**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quorum:** Quorum is an enterprise-ready distributed ledger and smart contract
    platform based on Ethereum.^([75](#fn_75)) The Enterprise Ethereum Alliance officially
    supports Quorum.^([76](#fn_76)) Quorum was developed by J.P. Morgan, the world’s
    third largest financial services firm, by assets of over $2.5 trillion, as an
    open-source, enterprise grade version of Ethereum.^([77](#fn_77)) Quorum is a
    private/permissioned blockchain that requires institutions to apply for permission
    to operate a node.^([78](#fn_78)) A key benefit is that it is designed to process
    and settle hundreds of transactions per second. J.P. Morgan licensed Quorum with
    a General Purpose License (GPL) so that the platform will be free to use. It plans
    to co-evolve in cooperation with Ethereum.^([79](#fn_79)) Quorum’s architecture
    sits on top of the public Ethereum blockchain. QuorumChain is the original consensus
    protocol, with other Raft and Istanbul BFT protocols^([80](#fn_80)) added later.^([81](#fn_81))
    As an open source project, any person or enterprise can download Quorum for experimentation.
    Notable adopters include Reuters;^;^([82](#fn_82)) Microsoft;^([83](#fn_83)) Synechron;^([84](#fn_84))
    BlockApps;^([85](#fn_85)) AMIS Technologies;^([86](#fn_86)) and Chronicled. Microsoft
    added Quorum to the Azure cloud marketplace for a trusted execution environment
    that is an additional layer of security.^([87](#fn_87))'
  prefs: []
  type: TYPE_NORMAL
- en: '**QuorumChain:** The main consensus protocol used in Quorum. QuorumChain is
    a time-based, majority-voting algorithm that uses a smart contract to identify
    which nodes participate in consensus. QuorumChain has three types of nodes: voter
    nodes, maker nodes, and observer nodes. Voter nodes vote on which block should
    be added to the blockchain. Maker nodes are authorized to add the blocks after
    enough votes have been cast. Observer nodes receive and validate blocks, but do
    not vote or make blocks.^([88](#fn_88)) The ledger is segmented into a private
    state database and a public state database. Participants can execute private and
    public smart contracts. While all nodes validate public transactions, nodes can
    only validate private transactions if they are party to the private smart contract.^([89](#fn_89))'
  prefs: []
  type: TYPE_NORMAL
- en: '**R3:** A blockchain consortium founded in 2014 by David Rutter, with the aim
    to develop a blockchain platform that could be used by global financial institutions.
    See [Chapter 2](chapter02.xhtml) for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Raft:** A consensus protocol used in several blockchains, including Quorum.
    According to the Quorum white paper, *“Raft separates the key elements of consensus,
    such as leader election, log replication, and safety, and it enforces a stronger
    degree of coherency to reduce the number of states that must be considered.”*^([90](#fn_90))
    The elected leader node accepts requests from client nodes, replicates them to
    the network, and responds to the client when a quorum (>50 percent) has been reached.
    Raft can ensure settlement finality and has throughput of over a thousand transactions
    per second.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Raiden Network:** A protocol that builds another layer on top of a blockchain.
    It was initially launched to allow for micropayments on Ethereum.^([91](#fn_91))
    Described as similar to the Lightning Network, the basic idea is to switch from
    a model where all transactions hit the shared ledger on the blockchain (which
    is the bottleneck) to a model where users can privately exchange messages, which
    sign the transfer of value. Raiden nodes connect to Ethereum nodes using an API
    and claims that a million transactions per second of confidential transactions
    are possible (because they are not added to the blockchain).^([92](#fn_92))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Redactable blockchain:** A technical innovation that allows blockchains to
    be edited reliably without creating a hard fork by using secret trap door keys.
    The keys can only be used by authorized parties. The keys are used to find a hash
    collision, where two different inputs can create the same hash output. According
    to the seminal paper by Ateniese et al. (2017), *“The best way to grasp the concept
    of a redactable blockchain is to think of adding a lock to each link of the hash
    chain: Without the lock key it is hard to find collisions and the chain remains
    immutable, but given the lock key it is possible to efficiently find collisions
    and thus replace the content of any block in the chain. With the knowledge of
    the key, any redaction is then possible: deletion, modification, and insertion
    of any number of blocks. Note that if the lock key is lost or destroyed, then
    a redactable blockchain reverts to an immutable one.”*^([93](#fn_93)) The secret
    keys are meant to be invoked infrequently, such as in the case of remedying egregious
    errors or attacks (like the DAO).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Representative meritocracy:** A governance model where people or institutions
    that have proven their merit are eligible to be elected to a council based on
    votes from other meritorious members.'
  prefs: []
  type: TYPE_NORMAL
- en: '**RSA:** RSA is an asymmetric key algorithm designed by three MIT professors—Rivest,
    Shamir, and Adleman—in 1977 based on multiplying two really large prime numbers.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sandbox:** A test environment that isolates software code from the live production
    environment, allowing people to test and experiment with the software.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scalability**: See entry for **System Scalability**.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Schrödinbug:** An error in computer programming logic, which manifests only
    when somebody debugging it finds out that it shouldn’t work at all.^([94](#fn_94))
    The name comes from Schrödinger’s cat thought experiment, which essentially described
    situations where we cannot know whether something is true or false until we observe
    it. (The actual thought experiment went something like this: *If a cat and something
    that could kill the cat was left in a sealed box, one cannot ascertain whether
    the cat is dead or alive until one opens the box. Until the box is opened, it’s
    equally valid to surmise that the cat is both dead and alive*.)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Security Token Offerings (STOs):** An STO is a legally compliant, licensed
    initial coin offering, which is only available to accredited investors.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Segregated Witness (SegWit):** A protocol that increases the number of transactions
    that can be included in a Bitcoin block. Instead of appending a digital signature
    to each address within a transaction, the protocol calls for a single digital
    signature at block header level, thus reducing the size of transactions, enabling
    more transactions per block.^([95](#fn_95))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Self-Sovereign Identity:** Individuals and organizations own and control
    their personal data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**SHA-256:** A secure, one-way hash function commonly used in blockchains.
    It was designed by the US National Security Agency. It takes any-sized input value
    and produces a 32-byte output value using hexadecimal notation. The same input
    will always produce the exact same output.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sharding:** A protocol that segments the validation process for new transactions
    in a blockchain so that not every node validates every transaction. Its purpose
    is to improve system performance.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sidechains/relays:** Sidechains and relays provide the functions of a notary,
    but rely on automatically executing algorithms instead of on custodians. Back
    et al. (2014) first conceived of ‘pegged sidechains’ as a way for bitcoins and
    other ledger assets to be transferred between multiple, independent blockchains.^([96](#fn_96))
    For these authors, a sidechain is a two-way peg to a parent chain (or main chain)
    that allows assets to be interchanged at a predetermined rate. But the term is
    relative to the asset, not to the network. For this reason, Vitalik Buterin laments
    the term ‘sidechain’ in his white paper on interoperability. He argued that it
    is better to use the phrase, *“a relay of chain A exists on chain B”* or *“D is
    a cross-chain portable digital asset with home ledger A that can also be used
    on chain B.”*^([97](#fn_97))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Silk Road:** Silk Road was an anonymous marketplace, and Bitcoin’s most visible
    example of a nefarious use case. Ross William Ulbricht founded Silk Road in 2011,
    when he was just 27 years old^.^([98](#fn_98)) The marketplace combined the anonymity
    of Bitcoin with the obscurity of Tor, the network protocol that masks the identity
    of servers. (One can spot a Tor website by the website address’s suffix ‘.onion’).
    One can hardly believe the audacity of Silk Road’s openness (see [Figure G.14](#f_g_14)
    for a screen shot showing illegal drugs available for sale). After an intense
    search that comprised cyber and behavioral investigative methods—such as posing
    as drug buyers—the US Federal Bureau of Investigation (FBI) arrested Ulbricht
    in 2013\. He was sentenced to life in prison without the possibility of parole.^([99](#fn_99))
    This story is nuanced in a way that will not be covered here, but the documentary
    film, *Deep Web*, by Director Alex Winter, provides thorough coverage of the rise
    and fall of Silk Road.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image: Figure G.14: Silk Road website screenshot](images/g14.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure G.14: Silk Road website screenshot**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Source: Techrepublic^([100](#fn_100))*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple Payment Verification (SPV):** Nakamoto (2008) described SPV as a way
    to verify itcoin transactions without running a full network node. Rather, one
    only needs to maintain a copy of the block headers and then find the security
    links (called a ***Merkle tree*** branch) to the transaction to prove it was verified
    and accepted by the network. SPV shows that *“tokens have been locked up on one
    chain so validators can safely unlock an equivalent value on the other chain.”*^([101](#fn_101))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Smart Contract**–**Deterministic:** Once deployed on the blockchain, a deterministic
    smart contract can execute autonomously without the need for any outside information.
    See [Chapter 3](chapter03.xhtml) for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Smart Contract**–**Non-Deterministic:** Once deployed on the blockchain,
    a non-deterministic smart contract requires outside information to execute the
    terms of the agreement. The outside information is called an ‘oracle’. See [Chapter
    3](chapter03.xhtml) for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Smart contract:** A smart contract—a concept developed by Nick Szabo in 1994—is
    a piece of software that stores rules for negotiating the terms of a contract,
    automatically verifies the contract and then executes the terms.^([102](#fn_102))
    See [Chapter 3](chapter03.xhtml) for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stable coin:** A cryptocurrency that aims to create a stable store of value
    by pegging the digital coin to a stable asset outside of the network, such as
    pegging a digital coin to a fiat currency or to a commodity like gold or a barrel
    of oil. Tether; USD Coin; gemini; JPM Coin; and libra are examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stakeocracy:** A ‘Pay to Play’ governance model where individuals’ or institutions’
    votes are weighted by the size of their investment.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sustaining innovation:** An innovation that improves the performance of an
    enterprise’s current product or services to meet the needs of its most demanding
    customers. The term comes from Clayton Christensen’s Theory of Disruptive Innovation.^([103](#fn_103))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sybil attack:** A single malicious node in a network that replicates itself
    so many times, it takes over the network. Blockchains like Bitcoin, Ethereum and
    Stellar use cryptocurrencies to prevent Sybil attacks, as a Sybil attacker would
    run out of money.'
  prefs: []
  type: TYPE_NORMAL
- en: '**System performance:** A term used to measure how long it takes a network
    to process a transaction. Blockchain applications generally vary in their performance
    from minutes to seconds.'
  prefs: []
  type: TYPE_NORMAL
- en: '**System scalability:** A system’s ability to handle an increase in workload,
    such as when new users are added to a system.^([104](#fn_104)) Scalability refers
    to the throughput, i.e. how many transactions can be processed per second.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tragedy of the commons**: This concept is defined as a situation within a
    shared-resource system where individual users acting independently according to
    their own self-interest behave contrary to the common good of all users by depleting
    or spoiling that resource through their collective action.^([105](#fn_105))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transaction costs:** The effort, time, and costs incurred in searching, creating,
    negotiating, monitoring, and administrating a transaction between trading partners.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transmission Control Protocol/Internet Protocol (TCP/IP):** As the Internet’s
    primary protocol, it breaks messages into packets and routes them to their destination
    as defined by a unique address called an ‘IP address’. Every device connected
    to the Internet has a unique IP address including computers; mobile phones; laptops;
    printers; IoT devices; servers; routers, etc.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transaction malleability:** When a user creates a transaction, the digital
    wallet signs and sends off the transaction to the network in order to get validated
    and added to the digital ledger. Transactions are automatically assigned a unique
    transaction-ID based on its content. While the transaction is still making its
    way through the network, there is a way to slightly change the transaction so
    that it is still a valid transaction that correctly moves money as the original
    author intended. The small change, however, will generate a different unique transaction-ID
    based on the slightly revised content. The result is that a sender sending a transaction
    cannot be certain that the transaction will have the same ID from the moment is
    was created to when it finally gets mined in a block.^([106](#fn_106))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trust:** In general, trust is the confidence in another party’s benevolence.
    In reference to blockchains, trust often refers to the confidence that records
    on the distributed ledger agree.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trust protocol:** In the context of a blockchain application, the term ‘trust
    protocol’ is defined to mean the reliance on computer algorithms rather than trusted
    third party institutions to verify transactions and to ensure all copies of the
    digital ledgers agree across nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trusted third parties**: Trusted third parties—like banks, certificate authorities,
    and credit card companies—exist to mitigate counterparty risks, i.e. the risk
    each party bears that the other party will not fulfill its contractual obligations.
    Trusted third parties perform many vital functions, such as authenticating asset
    ownership and making sure accounts are funded to prevent double spending.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Turing complete:** A term that refers to a computer programming language
    that has a full set of commands to execute every algorithm that another Turing
    complete programming language can execute. For example, a simple calculator with
    basic arithmetic functions is not Turing complete because it cannot execute if-then-else
    or loop logic. As it relates to blockchain codebases, a Turing complete, smart
    contracting feature provides the ability to code many types of agreements; but
    with more coding capabilities comes more risks of software vulnerabilities. Ethereum
    and Hyperledger Fabric, for example, do have Turing complete programming languages
    to code smart contracts; Ethereum’s smart contracting language is called Solidity;
    Hyperledger Fabric’s is called Chaincode. Bitcoin and Stellar do not have Turing
    complete smart contracts.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Zero-knowledge proof:** Shafi Goldwasser, Charles Rackoff, and Silvio Micali
    developed the concept in 1985.^([107](#fn_107)) Zero knowledge proofs are a method
    for one party (or node) to verify possession of a piece of information to other
    parties (or nodes) without revealing the information. In general, there are two
    types of zero-knowledge proofs: *challenge-response* which coordinates an interaction
    for known parties and *non-interactive*, which do not require iterations. In blockchain
    applications, zero-knowledge proofs are used to guarantee that transactions are
    valid without revealing information about the sender, receiver, and/or transaction.
    Zcash, EY’s Nightfall, MediLedger, and many other blockchains use zero knowledge
    proofs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**zk-SNARK (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge):**
    A zero-knowledge proof used in some blockchain protocols. Here is an explanation
    of zk-SNARKs:'
  prefs: []
  type: TYPE_NORMAL
- en: '*‘Suppose Bob is given a hash **H*** of some value, and he wishes to have a
    proof that Alice knows the value ***s*** that hashes to ***H**. Normally Alice
    would prove this by giving **s*** to Bob, after which Bob would compute the hash
    and check that it equals ***H**. However, suppose Alice doesn’t want to reveal
    the value **s*** to Bob but instead she just wants to prove that she knows the
    value. *She can use a zk-SNARK for this. We can describe Alice’s scenario using
    the following program, here written as a Javascript function:*'
  prefs: []
  type: TYPE_NORMAL
- en: function C(x, w) {
  prefs: []
  type: TYPE_NORMAL
- en: return ( sha256(w) == x );
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '*In other words: the program takes in a public hash **x** and a secret value
    **w** and returns true if the **SHA–256 hash** of **w** equals **x**. Translating
    Alice’s problem using the function C(x,w) we see that Alice needs to create a
    proof that she possesses **s** such that **C(H, s) == true**, without having to
    reveal **s**. This is the general problem that zk-SNARKs solve.*^([108](#fn_108))'
  prefs: []
  type: TYPE_NORMAL
- en: Citations
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](#note_1)) [https://en.wikipedia.org/wiki/Money_laundering#Anti-money_laundering](https://en.wikipedia.org/wiki/Money_laundering#Anti-money_laundering)
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](#note_2)) *Definition of Asymmetric Encryption*, [http://hitachi-id.com/resource/itsec-concepts/asymmetric_encryption.html](http://hitachi-id.com/resource/itsec-concepts/asymmetric_encryption.html)
  prefs: []
  type: TYPE_NORMAL
- en: Mapt course, *Asymmetric Cryptography*, [https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781787125445/3/ch03lvl1sec28/asymmetric-cryptography](https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781787125445/3/ch03lvl1sec28/asymmetric-cryptography)
  prefs: []
  type: TYPE_NORMAL
- en: ___________________
  prefs: []
  type: TYPE_NORMAL
- en: '^([3](#note_3)) Nakamoto, S. (2008), *Bitcoin: A Peer-to-Peer Electronic Cash
    System*, [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([4](#note_4)) Lamport, L.; Shostak, R.; Pease, M. (1982), T’he Byzantine
    Generals Problem’, *ACM Transactions on Programming Languages and Systems*. 4
    (3): 387–389.'
  prefs: []
  type: TYPE_NORMAL
- en: '^([5](#note_5)) Dagnino, G., ; Padula, G. (2002), *Coopetition Strategy: Towards
    a New Kind of Interfirm Dynamics for Value Creation*, EURAM 2nd Annual Conference,
    Stockholm School of Entrepreneurship, Sweden.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([6](#note_6)) *How is Consensus achieved in Corda?* [https://discourse.corda.net/t/how-is-consensus-achieved-on-corda/1148](https://discourse.corda.net/t/how-is-consensus-achieved-on-corda/1148)
  prefs: []
  type: TYPE_NORMAL
- en: ^([7](#note_7)) *Welcome to Corda*, [https://docs.corda.net/](https://docs.corda.net/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([8](#note_8)) Corda survey responses as reported in Seibold, S., and Samman,
    G. (2016), *Consensus: Immutable Agreement for the Internet of Value*, KPMG White
    Paper'
  prefs: []
  type: TYPE_NORMAL
- en: '^([9](#note_9)) Brown, R., Carlyle, J., Grigg, I., and Hearn, M. (2016), *Corda:
    An Introduction*, Corda White Paper, [https://docs.corda.net/_static/corda-introductory-whitepaper.pdf](https://docs.corda.net/_static/corda-introductory-whitepaper.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([10](#note_10)) Corda survey responses as reported in Seibold, S., and Samman,
    G. (2016), *Consensus: Immutable Agreement for the Internet of Value*, KPMG White
    Paper'
  prefs: []
  type: TYPE_NORMAL
- en: ^([11](#note_11)) *Welcome to Corda*, [https://docs.corda.net/](https://docs.corda.net/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([12](#note_12)) Lee, P. (November 30^(th) 2017), *R3 releases Corda as Blockchain
    strains start to show*, [https://www.euromoney.com/article/b12kqb9hqwgp2d/r3-releases-corda-as-blockchain-strains-start-to-show](https://www.euromoney.com/article/b12kqb9hqwgp2d/r3-releases-corda-as-blockchain-strains-start-to-show)
  prefs: []
  type: TYPE_NORMAL
- en: '^([13](#note_13)) Diedrich, H. (2016), *Ethereum: blockchains, digital assets,
    smart contracts, decentralized autonomous organizations*, Wildfire Publishing.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([14](#note_14)) [https://en.bitcoinwiki.org/wiki/DPoS](https://en.bitcoinwiki.org/wiki/DPoS)
  prefs: []
  type: TYPE_NORMAL
- en: ^([15](#note_15)) Delegated Proof of Stake, [https://lisk.io/academy/blockchain-basics/how-does-blockchain-work/delegated-proof-of-stake](https://lisk.io/academy/blockchain-basics/how-does-blockchain-work/delegated-proof-of-stake)
  prefs: []
  type: TYPE_NORMAL
- en: '^([16](#note_16)) Clayton Christensen has developed the theory of disruptive
    innovation over two decades, beginning with this first book, published in 1997,
    *The innovator’s dilemma: when new technologies cause great firms to fail,* (Boston,
    Massachusetts, Harvard Business School Press). For a thoughtful and current synopsis
    of the theory, see Christensen, C., Raynor, M., and McDonald, R. (2015), *Disruptive
    Innovations*, *Harvard Business Review*, 93(12): 45-53'
  prefs: []
  type: TYPE_NORMAL
- en: ^([17](#note_17)) [https://en.wikipedia.org/wiki/Digital_Signature_Algorithm](https://en.wikipedia.org/wiki/Digital_Signature_Algorithm)
  prefs: []
  type: TYPE_NORMAL
- en: ^([18](#note_18)) Ben Sigman (May 8, 2018), *EOS Block Producer FAQ* [https://medium.com/@bensig/eos-block-producer-faq-8ba0299c2896](https://medium.com/@bensig/eos-block-producer-faq-8ba0299c2896)
  prefs: []
  type: TYPE_NORMAL
- en: ^([19](#note_19)) To view the 21 EOS validator nodes and block producers, see
    [https://bloks.io/vote](https://bloks.io/vote)
  prefs: []
  type: TYPE_NORMAL
- en: ^([20](#note_20)) William, M. (May 12, 2018), *ERC-20 Tokens, Explained*, Cointelegraph,
    [https://cointelegraph.com/explained/erc-20-tokens-explained](https://cointelegraph.com/explained/erc-20-tokens-explained)
  prefs: []
  type: TYPE_NORMAL
- en: ^([21](#note_21)) [http://erc721.org/](http://erc721.org/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([22](#note_22)) Sharma, T. (July 16^(th), 2019), *Know the Authenticity of
    Your Wines*, [https://www.blockchain-council.org/blockchain/know-the-authenticity-of-your-wines-eys-blockchain-platform-for-wine-traceability/](https://www.blockchain-council.org/blockchain/know-the-authenticity-of-your-wines-eys-blockchain-platform-for-wine-traceability/).
  prefs: []
  type: TYPE_NORMAL
- en: ^([23](#note_23)) Beigel, O. (March 3^(rd) 2017), *What is Ethereum?* [https://99bitcoins.com/guide-buy-ether-ethereum/](https://99bitcoins.com/guide-buy-ether-ethereum/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([24](#note_24)) ConsenSys (January 10, 2019), *The Thirdening: What You Need
    To Know*, [https://media.consensys.net/the-thirdening-what-you-need-to-know-df96599ad857](https://media.consensys.net/the-thirdening-what-you-need-to-know-df96599ad857)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([25](#note_25)) [https://www.ethernodes.org/network/1](https://www.ethernodes.org/network/1)
  prefs: []
  type: TYPE_NORMAL
- en: ^([26](#note_26)) According to discussions within the open source community,
    the total money supply for ether has not been established, [https://ethereum.stackexchange.com/questions/443/what-is-the-total-supply-of-ether](https://ethereum.stackexchange.com/questions/443/what-is-the-total-supply-of-ether)
  prefs: []
  type: TYPE_NORMAL
- en: ^([27](#note_27)) *Is the ether supply infinite?* [https://www.ethereum.org/ether](https://www.ethereum.org/ether)
  prefs: []
  type: TYPE_NORMAL
- en: ^([28](#note_28)) [http://wiki.p2pfoundation.net/Ethereum](http://wiki.p2pfoundation.net/Ethereum),
    *A Next-Generation Smart Contract and Decentralized Application Platform*, posted
    on [https://github.com/ethereum/wiki/wiki/White-Paper](https://github.com/ethereum/wiki/wiki/White-Paper)
  prefs: []
  type: TYPE_NORMAL
- en: ^([29](#note_29)) *Is the ether supply infinite?* [https://www.ethereum.org/ether](https://www.ethereum.org/ether)
  prefs: []
  type: TYPE_NORMAL
- en: ^([30](#note_30)) Levi, A. (May 21, 2017), *Corporate Trends in Blockchain*,
    CB Insights webinar presentation.
  prefs: []
  type: TYPE_NORMAL
- en: ^([31](#note_31)) *The Differences Between Hard and Soft Forks*, We Use Coins,
    August 23^(rd) 2016, [https://www.weusecoins.com/hard-fork-soft-fork-differences/](https://www.weusecoins.com/hard-fork-soft-fork-differences/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([32](#note_32)) *Hard & Soft Forking Explained*, by Loshil and [@MLPFrank](https://twitter.com/MLPFrank),
    [https://www.youtube.com/watch?v=pdaXY1OOiWQ](https://www.youtube.com/watch?v=pdaXY1OOiWQ)
  prefs: []
  type: TYPE_NORMAL
- en: '^([33](#note_33)) Martin, L. (2016) *Blockchain for developers: Is it right
    for your application?* Techbeacon, [https://techbeacon.com/blockchain-it-right-your-app](https://techbeacon.com/blockchain-it-right-your-app)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([34](#note_34)) The Linux Foundation (January 22^(nd) 2016), *The Hyperledger
    Project Charter,* [https://www.hyperledger.org/about/charter](https://www.hyperledger.org/about/charter)
  prefs: []
  type: TYPE_NORMAL
- en: ^([35](#note_35)) Connell, J. (June 2017), *On Byzantine Fault Tolerance in
    Blockchain Systems*, [https://cryptoinsider.com/byzantine-fault-tolerance-blockchain-systems/](https://cryptoinsider.com/byzantine-fault-tolerance-blockchain-systems/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([36](#note_36)) Groenfeldt, T. (July 13^(th) 2017), ‘Linux Foundation’s Hyperledger
    Fabric 1.0 Ready For Production’, *Forbes Magazine,* [https://www.forbes.com/sites/tomgroenfeldt/2017/07/13/linux-foundats-hyperledger-fabric-1-0-ready-for-production/](https://www.forbes.com/sites/tomgroenfeldt/2017/07/13/linux-foundats-hyperledger-fabric-1-0-ready-for-production/)
    - 624d7632902e
  prefs: []
  type: TYPE_NORMAL
- en: ^([37](#note_37)) Hyperledger Foundation, *Hyperledger Architecture, Volume
    1*, [https://www.hyperledger.org/wp-content/uploads/2017/08/HyperLedger_Arch_WG_Paper_1_Consensus.pdf](https://www.hyperledger.org/wp-content/uploads/2017/08/HyperLedger_Arch_WG_Paper_1_Consensus.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([38](#note_38)) The Linux Foundation (January 22^(nd) 2016), *The Hyperledger
    Project Charter,* [https://www.hyperledger.org/about/charter](https://www.hyperledger.org/about/charter)
  prefs: []
  type: TYPE_NORMAL
- en: ^([39](#note_39)) [https://www.hyperledger.org/projects](https://www.hyperledger.org/projects)
  prefs: []
  type: TYPE_NORMAL
- en: ^([40](#note_40)) [https://www.hyperledger.org/projects](https://www.hyperledger.org/projects)
  prefs: []
  type: TYPE_NORMAL
- en: ^([41](#note_41)) Reiger, A.; Guggenmos, F., Locki, J., Fridgen, G., and Urbach,
    N. (2019), ‘Building a Blockchain Application that Complies with the EU General
    Data Protection Regulation’, *MIS Quarterly Executive*, 18(4), pp. 263-279.
  prefs: []
  type: TYPE_NORMAL
- en: ^([42](#note_42)) Winslet, T (2019), ‘Top 3 Initial Exchange Offerings (IEOs)
    to Watch in the Crypto Market’ *The Daily Hodl*, [https://dailyhodl.com/2019/04/11/top-3-initial-exchange-offerings-ieos-to-watch-in-the-crypto-market/](https://dailyhodl.com/2019/04/11/top-3-initial-exchange-offerings-ieos-to-watch-in-the-crypto-market/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([43](#note_43)) DiMaggio, P., and Powell, W. (1991), ‘The Iron Cage Revisited:
    Institutional Isomorphism and Collective Rationality in Organizational Fields’,
    *The New Institutionalism in Organizational Analysis,* (Powell & DiMaggio eds),
    The University of Chicago Press, 63-82'
  prefs: []
  type: TYPE_NORMAL
- en: '^([44](#note_44)) DiMaggio, P., and Powell, W. (1991), ‘The Iron Cage Revisited:
    Institutional Isomorphism and Collective Rationality in Organizational Fields’,
    *The New Institutionalism in Organizational Analysis,* (Powell & DiMaggio eds),
    The University of Chicago Press, 63-82'
  prefs: []
  type: TYPE_NORMAL
- en: '^([45](#note_45)) Ross, C. (December 5^(th) 2016), *Blockchain Brings Us Into
    The Future, But Only After It Drags Up The Past: Interoperability Becomes An Actual
    Issue Again,* [http://www.horsesforsources.com/blog/christine-ferrusi-ross/the-interoperability-problems-blockchain-brings_120616](http://www.horsesforsources.com/blog/christine-ferrusi-ross/the-interoperability-problems-blockchain-brings_120616)'
  prefs: []
  type: TYPE_NORMAL
- en: Ross, C. (April 18^(th) 2017), *Simplify Blockchain by Refusing to Let Interoperability
    Issues Bog You Down*, [http://www.horsesforsources.com/Simplify-Blockchain-Refusing-Interoperability-Issues_041817](http://www.horsesforsources.com/Simplify-Blockchain-Refusing-Interoperability-Issues_041817)
  prefs: []
  type: TYPE_NORMAL
- en: ^([46](#note_46)) [https://en.wikipedia.org/wiki/Know_your_customer](https://en.wikipedia.org/wiki/Know_your_customer)
  prefs: []
  type: TYPE_NORMAL
- en: '^([47](#note_47)) Martin, L. (2016) *Blockchain for developers: Is it right
    for your application?* Techbeacon, [https://techbeacon.com/blockchain-it-right-your-app](https://techbeacon.com/blockchain-it-right-your-app)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([48](#note_48)) Arun, J., Cuomo, J., and Gaur, N. (2019). *Blockchain for
    Business*, Addison-Wesley, Boston.
  prefs: []
  type: TYPE_NORMAL
- en: '^([49](#note_49)) Lenarduzzi, V., Taibi, D. (August 2016), *MVP Explained:
    A Systematic Mapping Study on the Definitions of Minimal Viable Product*, 2016
    42th Euromicro Conference on Software Engineering and Advanced Applications (SEAA).
    Cyprus. pp. 112–119.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([50](#note_50)) Tuwiner, J. (July 13^(th) 2017), *Bitcoin Mining Pools*, [https://www.buybitcoinworldwide.com/mining/pools/](https://www.buybitcoinworldwide.com/mining/pools/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([51](#note_51)) The Guardian (January 20^(th) 2016), *Ten arrested in Netherlands
    over bitcoin money-laundering allegations*, [https://www.theguardian.com/technology/2016/jan/20/bitcoin-netherlands-arrests-cars-cash-ecstasy](https://www.theguardian.com/technology/2016/jan/20/bitcoin-netherlands-arrests-cars-cash-ecstasy)
  prefs: []
  type: TYPE_NORMAL
- en: ^([52](#note_52)) Lee, T. (July 26^(th) 2017), *Officials arrest suspect in
    $4 billion Bitcoin money laundering scheme*, [https://arstechnica.com/tech-policy/2017/07/officials-arrest-suspect-in-4-billion-bitcoin-money-laundering-scheme/](https://arstechnica.com/tech-policy/2017/07/officials-arrest-suspect-in-4-billion-bitcoin-money-laundering-scheme/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([53](#note_53)) De, N. (Oct 25^(th) 2017), *DEA Report: Bitcoin Used for
    Trade-Based Money Laundering*, [https://www.coindesk.com/dea-report-bitcoin-used-trade-based-money-laundering/](https://www.coindesk.com/dea-report-bitcoin-used-trade-based-money-laundering/)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([54](#note_54)) The US Department of Justice Drug Enforcement Administration
    (October 2017), *2017 National Drug Threat Assessment*, [https://www.dea.gov/docs/DIR-040-17_2017-NDTA.pdf](https://www.dea.gov/docs/DIR-040-17_2017-NDTA.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([55](#note_55)) MultiChain White Paper (2015), [https://www.MultiChain.com/download/MultiChain-White-Paper.pdf](https://www.MultiChain.com/download/MultiChain-White-Paper.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '^([56](#note_56)) Institute of Network Cultures, *Beyond distributed and decentralized:
    what is a federated network?,* [http://networkcultures.org/unlikeus/resources/articles/what-is-a-federated-network/](http://networkcultures.org/unlikeus/resources/articles/what-is-a-federated-network/)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([57](#note_57)) Hyperledger Blockchain Performance Metrics White Paper (2019).
    [https://www.hyperledger.org/resources/publications/blockchain-performance-metrics](https://www.hyperledger.org/resources/publications/blockchain-performance-metrics)
  prefs: []
  type: TYPE_NORMAL
- en: ^([58](#note_58)) [https://blockchainhub.net/blockchain-oracles/](https://blockchainhub.net/blockchain-oracles/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([59](#note_59)) Robinson, Dan (2019). [https://events.technologyreview.com/video/watch/dan-robinson-scaling-interoperability/](https://events.technologyreview.com/video/watch/dan-robinson-scaling-interoperability/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([60](#note_60)) Cuen, L. (February 11, 2020), *Plasma Became Optimism and
    It Might Just Save Ethereum*, Coindesk, [https://www.coindesk.com/plasma-became-optimism-and-it-might-just-save-ethereum](https://www.coindesk.com/plasma-became-optimism-and-it-might-just-save-ethereum)
  prefs: []
  type: TYPE_NORMAL
- en: ^([61](#note_61)) *Practical Byzantine Fault Tolerance*, Proceedings of the
    Third Symposium on Operating Systems Design and Implementation, New Orleans, USA,
    February 1999, [http://pmg.csail.mit.edu/papers/osdi99.pdf](http://pmg.csail.mit.edu/papers/osdi99.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([62](#note_62)) Hyperledger Foundation, *Hyperledger Architecture, Volume
    1*, [https://www.hyperledger.org/wp-content/uploads/2017/08/HyperLedger_Arch_WG_Paper_1_Consensus.pdf](https://www.hyperledger.org/wp-content/uploads/2017/08/HyperLedger_Arch_WG_Paper_1_Consensus.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([63](#note_63)) Connell, J. (June 2017), *On Byzantine Fault Tolerance in
    Blockchain Systems*, [https://cryptoinsider.com/byzantine-fault-tolerance-blockchain-systems/](https://cryptoinsider.com/byzantine-fault-tolerance-blockchain-systems/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([64](#note_64)) Quorum White Paper, [https://github.com/jpmorganchase/quorum-docs/blob/master/Quorum
    Whitepaper v0.1.pdf](https://github.com/jpmorganchase/quorum-docs/blob/master/QuorumWhitepaperv0.1.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '^([65](#note_65)) Maziières, D. (2016), *The Stellar Consensus Protocol: A
    Federated Model for Internet-level Consensus*, White Paper, [https://www.stellar.org/papers/stellar-consensus-protocol.pdf](https://www.stellar.org/papers/stellar-consensus-protocol.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([66](#note_66)) Maziières, D. (2016), *The Stellar Consensus Protocol: A
    Federated Model for Internet-level Consensus*, White Paper, [https://www.stellar.org/papers/stellar-consensus-protocol.pdf](https://www.stellar.org/papers/stellar-consensus-protocol.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([67](#note_67)) Maziières, D. (2016), *The Stellar Consensus Protocol: A
    Federated Model for Internet-level Consensus*, White Paper, [https://www.stellar.org/papers/stellar-consensus-protocol.pdf](https://www.stellar.org/papers/stellar-consensus-protocol.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([68](#note_68)) [http://minetopics.blogspot.com/2013/01/hiding-bitcoins-in-your-brain.html](http://minetopics.blogspot.com/2013/01/hiding-bitcoins-in-your-brain.html)
  prefs: []
  type: TYPE_NORMAL
- en: ^([69](#note_69)) Proof-of-Authority Consensus [https://apla.readthedocs.io/en/latest/concepts/consensus.html#advantages-of-poa-consensus](https://apla.readthedocs.io/en/latest/concepts/consensus.html#advantages-of-poa-consensus)
  prefs: []
  type: TYPE_NORMAL
- en: '^([70](#note_70)) King, S., and Nadal, S. (2012), *PPCoin: Peer-to-Peer Crypto-Currency
    with Proof-of-Stake*, [https://peercoin.net/assets/paper/peercoin-paper.pdf](https://peercoin.net/assets/paper/peercoin-paper.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([71](#note_71)) *Distributed Consensus from Proof of Stake is Impossible,
    Andrew Poelstra,* [https://www.smithandcrown.com/open-research/distributed-consensus-from-proof-of-stake-is-impossible/](https://www.smithandcrown.com/open-research/distributed-consensus-from-proof-of-stake-is-impossible/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([72](#note_72)) Dwork, C., and Naor, M. (1993), *Pricing via processing:
    Combatting Junk Mail*, [http://www.hashcash.org/papers/pvp.pdf](http://www.hashcash.org/papers/pvp.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([73](#note_73)) Nakamoto, S. (2008), *Bitcoin: A Peer-to-Peer Electronic
    Cash System*, [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([74](#note_74)) Beigel, O. (March 3^(rd) 2017), *What is Ethereum?*, [https://99bitcoins.com/guide-buy-ether-ethereum/](https://99bitcoins.com/guide-buy-ether-ethereum/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([75](#note_75)) J.P. Morgan, Quorum, [https://www.jpmorgan.com/country/US/EN/Quorum](https://www.jpmorgan.com/country/US/EN/Quorum)
  prefs: []
  type: TYPE_NORMAL
- en: ^([76](#note_76)) Enterprise Ethereum Alliance (July 7^(th) 2017), *Enterprise
    Etherum Alliance Announces Support for Blockchain Consensus Algorithm Integration*,
    [https://entethalliance.org/enterprise-ethereum-alliance-announces-support-blockchain-consensus-algorithm-integration/](https://entethalliance.org/enterprise-ethereum-alliance-announces-support-blockchain-consensus-algorithm-integration/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([77](#note_77)) The Quorum White Paper, [https://github.com/jpmorganchase/quorum-docs/blob/master/Quorum
    Whitepaper v0.1.pdf](https://github.com/jpmorganchase/quorum-docs/blob/master/QuorumWhitepaperv0.1.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([78](#note_78)) Hackett, R. (October 4^(th) 2016), ‘Why J.P. Morgan Chase
    Is Building a Blockchain on Ethereum’, *Fortune Magazine*, [http://fortune.com/2016/10/04/jp-morgan-chase-blockchain-ethereum-quorum/](http://fortune.com/2016/10/04/jp-morgan-chase-blockchain-ethereum-quorum/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([79](#note_79)) J.P. Morgan, Quorum, [https://www.jpmorgan.com/country/US/EN/Quorum](https://www.jpmorgan.com/country/US/EN/Quorum)
  prefs: []
  type: TYPE_NORMAL
- en: ^([80](#note_80)) [https://www.ethnews.com/amis-technologies-new-algorithm-handles-more-transactions-per-second](https://www.ethnews.com/amis-technologies-new-algorithm-handles-more-transactions-per-second)
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/ethereum/EIPs/issues/650](https://github.com/ethereum/EIPs/issues/650)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://ethereumfoundation.org/devcon3/sessions/bft-for-geth/](https://ethereumfoundation.org/devcon3/sessions/bft-for-geth/)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([81](#note_81)) Quorum White Paper, [https://github.com/jpmorganchase/quorum-docs/blob/master/Quorum
    Whitepaper v0.1.pdf](https://github.com/jpmorganchase/quorum-docs/blob/master/QuorumWhitepaperv0.1.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([82](#note_82)) [http://www.ibtimes.co.uk/how-ihs-markits-syndicated-loans-blockchain-arrived-cash-1622304](http://www.ibtimes.co.uk/how-ihs-markits-syndicated-loans-blockchain-arrived-cash-1622304)
  prefs: []
  type: TYPE_NORMAL
- en: ^([83](#note_83)) Castillo, M (February 28^(th) 2017), *Microsoft Adds JPMorgan’s
    ‘Quorum’ Blockchain to Azure Platform*, [https://www.coindesk.com/microsoft-azure-jpmorgans-quorum-blockchain/](https://www.coindesk.com/microsoft-azure-jpmorgans-quorum-blockchain/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([84](#note_84)) [http://www.financemagnates.com/cryptocurrency/innovation/synechron-releases-quorum-maker-enterprise-ethereum-alliance/](http://www.financemagnates.com/cryptocurrency/innovation/synechron-releases-quorum-maker-enterprise-ethereum-alliance/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([85](#note_85)) [http://blockapps.net/](http://blockapps.net/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([86](#note_86)) Nation, J. (July 5^(th) 2017), *AMIS Technologies’ New Algorithm
    Handles More Transactions-Per-Second*, [https://www.ethnews.com/amis-technologies-new-algorithm-handles-more-transactions-per-second](https://www.ethnews.com/amis-technologies-new-algorithm-handles-more-transactions-per-second)
  prefs: []
  type: TYPE_NORMAL
- en: ^([87](#note_87)) Castillo, M (February 28^(th) 2017), *Microsoft Adds JPMorgan’s
    ‘Quorum’ Blockchain to Azure Platform*, [https://www.coindesk.com/microsoft-azure-jpmorgans-quorum-blockchain/](https://www.coindesk.com/microsoft-azure-jpmorgans-quorum-blockchain/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([88](#note_88)) *QuorumChain Consensus*, [https://github.com/jpmorganchase/quorum/wiki/QuorumChain-Consensus](https://github.com/jpmorganchase/quorum/wiki/QuorumChain-Consensus)
  prefs: []
  type: TYPE_NORMAL
- en: ^([89](#note_89)) Quorum White Paper, [https://github.com/jpmorganchase/quorum-docs/blob/master/Quorum
    Whitepaper v0.1.pdf](https://github.com/jpmorganchase/quorum-docs/blob/master/QuorumWhitepaperv0.1.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([90](#note_90)) Raft White Paper, Ongaro, D., and Ousterhout, J. (2014), *In
    Search of an Understandable Consensus Algorithm*, [https://raft.github.io/raft.pdf](https://raft.github.io/raft.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([91](#note_91)) Hertig, A. (May 31^(st) 2016), *Will Ethereum Beat Bitcoin
    to Mainstream Microtransactions?* [https://www.coindesk.com/ethereum-bitcoin-mainstream-microtransactions/](https://www.coindesk.com/ethereum-bitcoin-mainstream-microtransactions/)
  prefs: []
  type: TYPE_NORMAL
- en: '^([92](#note_92)) *The Raiden Network: High Speed Asset Transfers for Ethereum*,
    [http://raiden.network/](http://raiden.network/)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([93](#note_93)) Ateniese, G., B. Magri, D. Venturi and E. Andrade (2017),
    *Redactable Blockchain – or – Rewriting History in Bitcoin and Friends*, 2017
    IEEE European Symposium on Security and Privacy (EuroS&P), Paris, pp. 111-126.
  prefs: []
  type: TYPE_NORMAL
- en: ^([94](#note_94)) [https://en.wiktionary.org/wiki/schroedinbug](https://en.wiktionary.org/wiki/schroedinbug)
  prefs: []
  type: TYPE_NORMAL
- en: ^([95](#note_95)) For a technical explanation of segregated witness, see [http://learnmeabitcoin.com/faq/segregated-witness](http://learnmeabitcoin.com/faq/segregated-witness)
  prefs: []
  type: TYPE_NORMAL
- en: ^([96](#note_96)) Back, A., Corallo, M., Dashjr, L., Friedenbach, M., Maxwell,
    G., Miller, A., Poelstra, A., Timón, J., and Wuille, P. (Oct 22 2014), *Enabling
    Blockchain Innovations with Pegged Sidechains*, [https://blockstream.com/sidechains.pdf](https://blockstream.com/sidechains.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: ^([97](#note_97)) Buterin, V. (September 9, 2016), *Chain Interoperability*,
    [https://static1.squarespace.com/static/55f73743e4b051cfcc0b02cf/t/5886800ecd0f68de303349b1/1485209617040/Chain+Interoperability.pdf](https://static1.squarespace.com/static/55f73743e4b051cfcc0b02cf/t/5886800ecd0f68de303349b1/1485209617040/Chain+Interoperability.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '^([98](#note_98)) Popper, N. (2015), *Digital Gold: Bitcoin and the Inside
    History of the Misfits and Millionaires Trying to Reinvent Money*, Harper, New
    York.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([99](#note_99)) Weiser, B. (May 29^(th) 2015), 'Ross Ulbricht, Creator of
    Silk Road Website, Is Sentenced to Life in Prison', *The New York Times*, posted
    [https://www.nytimes.com/2015/05/30/nyregion/ross-ulbricht-creator-of-silk-road-website-is-sentenced-to-life-in-prison.html](https://www.nytimes.com/2015/05/30/nyregion/ross-ulbricht-creator-of-silk-road-website-is-sentenced-to-life-in-prison.html)
  prefs: []
  type: TYPE_NORMAL
- en: ^([100](#note_100)) Reese, H. (May 10^(th) 2017), *How the founder of the Silk
    Road made millions on his illegal startup on the Dark Web*, [https://www.techrepublic.com/article/how-online-marketplace-silk-road-became-the-craigslist-for-illegal-drugs/](https://www.techrepublic.com/article/how-online-marketplace-silk-road-became-the-craigslist-for-illegal-drugs/)
  prefs: []
  type: TYPE_NORMAL
- en: '[https://tr2.cbsistatic.com/hub/i/r/2017/05/10/709e488c-6c51-407f-ae13-5115b14d86c4/resize/770x/ac1af617d15f84b986b574770d9a67de/screen-shot-2012-04-24-at-2-02-25-am.png](https://tr2.cbsistatic.com/hub/i/r/2017/05/10/709e488c-6c51-407f-ae13-5115b14d86c4/resize/770x/ac1af617d15f84b986b574770d9a67de/screen-shot-2012-04-24-at-2-02-25-am.png)'
  prefs: []
  type: TYPE_NORMAL
- en: ^([101](#note_101)) *SPV, Simplified Payment Verification*, [Bitcoin.Org](http://Bitcoin.Org)
    glossary.
  prefs: []
  type: TYPE_NORMAL
- en: '^([102](#note_102)) *The Future of Blockchains: Smart Contracts*, Technode,
    [http://technode.com/2016/11/14/the-future-of-blockchain-technology-smart-contracts/](http://technode.com/2016/11/14/the-future-of-blockchain-technology-smart-contracts/)'
  prefs: []
  type: TYPE_NORMAL
- en: '^([103](#note_103)) Clayton Christensen has developed the theory of disruptive
    innovation over two decades, beginning with this first book, published in 1997,
    *The innovator’s dilemma: when new technologies cause great firms to fail,* (Boston,
    Massachusetts, Harvard Business School Press). For a thoughtful and current synopsis
    of the theory, see Christensen, C., Raynor, M., and McDonald, R. (2015), *Disruptive
    Innovations*, *Harvard Business Review*, 93(12): 45-53'
  prefs: []
  type: TYPE_NORMAL
- en: ^([104](#note_104)) Castor, A. (June 14^(th) 2017), *Hyperledger Takes on Blockchain
    Scaling with New Working Group,* [https://www.coindesk.com/hyperledger-takes-on-blockchain-scaling-with-new-working-group/](https://www.coindesk.com/hyperledger-takes-on-blockchain-scaling-with-new-working-group/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([105](#note_105)) ‘The tof the commons’ is defined as ‘an economic theory
    of a situation within a shared-resource system where individual users acting independently
    according to their own self-interest behave contrary to the common good of all
    users by depleting or spoiling that resource through their collective action.’
    [https://en.wikipedia.org/wiki/Tragedy_of_the_commons](https://en.wikipedia.org/wiki/Tragedy_of_the_commons)
  prefs: []
  type: TYPE_NORMAL
- en: ^([106](#note_106)) *Transaction Malleability*, [https://en.bitcoinwiki.org/wiki/Transaction_Malleability](https://en.bitcoinwiki.org/wiki/Transaction_Malleability)
  prefs: []
  type: TYPE_NORMAL
- en: ^([107](#note_107)) [https://blockonomi.com/zero-knowledge-proofs/](https://blockonomi.com/zero-knowledge-proofs/)
  prefs: []
  type: TYPE_NORMAL
- en: ^([108](#note_108)) Lundkvist, C. (2017), *Introduction to zk-SNARKs with examples*,
    [https://media.consensys.net/introduction-to-zksnarks-with-examples-3283b554fc3b](https://media.consensys.net/introduction-to-zksnarks-with-examples-3283b554fc3b)
  prefs: []
  type: TYPE_NORMAL
- en: '![image](images/pg452.png)'
  prefs: []
  type: TYPE_IMG
