- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Enterprise Blockchain Sales and Solutions Engineering
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers the solutions sales cycles of typical enterprise blockchain
    engagements and how you as a VAR, IT vendor, or even solutions integrator can
    participate in the blockchain sales cycles. Blockchain solutions selling has a
    heavy focus on application development, compliance, and enterprise integration,
    so a focus on those areas is advisable. However, your organization is already
    likely helping clients in these areas of application development, compliance,
    and enterprise integration successfully, and therefore translating your existing
    skill base should not be difficult with the proper focused training of how blockchains
    provide value and can integrate with the organization.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the chapter, I will discuss specific details of selling blockchain
    solutions and the professional services that can come with the solution selling.
    Then I will dive into gathering requirements and identifying potential use cases.
  prefs: []
  type: TYPE_NORMAL
- en: 'The goal of the chapter is to give you a technical presales perspective on
    how to sell blockchain services, software, and hardware. Part of my “mission”
    is to help enable you to sell blockchain solutions. I want to ensure that you
    are aware of all the following: historical references, business and technical
    resources, conceptual and nonconceptual patterns, and lastly routine presales
    tasks such as RFPs, demos, whiteboards, readiness assessments, and proof of concepts.  ##
    Enterprise Blockchain Sales Cycle'
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain sales cycles can certainly mimic, in some cases, the sales cycles
    for enterprise IT hardware, software, and professional services. In some scenarios,
    the process of selling blockchain solutions is more straightforward than for traditional
    IT solutions. This is because of the significant lack of valid production blockchain
    options, especially in the financial sectors.
  prefs: []
  type: TYPE_NORMAL
- en: However, in other cases, there may be some new aspects in solutions selling,
    especially when it comes to blockchain development. Regardless, whether you understand
    blockchain technology or not, your main goal should be to provide value to your
    customer. If this means this means you need to step out of the process and bring
    in a “blockchain developer,” then that should be acceptable to both your organization
    and your customer.
  prefs: []
  type: TYPE_NORMAL
- en: In most complex sales cycles, you'll need to go through a “discovery” phase
    where you discuss, understand, and then translate the customer requirements; then
    ideally you go on to the exploratory and engagement phases and perhaps the commitment
    phase as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.1](#c05-fig-0001) shows the high-level sales cycle that is commonly
    accepted by IT-focused VARs, vendors, and integrators. Note that there is also
    a seven-step sales cycle that is used; however, in an attempt to focus more on
    the technical aspects, we will [concentrate] on the four steps that happen after
    the funnel work has been done.'
  prefs: []
  type: TYPE_NORMAL
- en: '![“Flow diagram depicting Identify Problem, Investigate, Engage, and Evaluate
    from left to right.”](images/c05f001.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.1**](#R_c05-fig-0001) High-level solutions sales cycles'
  prefs: []
  type: TYPE_NORMAL
- en: 'This four-step process is consistently used for IT-focused solution selling
    as well as blockchain technology selling. When considering a solution to place
    in a prospective enterprise customer environment, these are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Identify a problem the client would like solved; in the blockchain industry,
    you will identify areas that blockchain technology could provide a solution for
    such as security, privacy, and compliance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Investigate the causes of the problem and then build proposals for the customer
    on how to solve the problem.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Engage with the customer around possible solutions. In this step, I provide
    several options for the proposed solutions with benefits, costs, and risks. Providing
    the customer with these three facets will establish you as a trusted advisor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Work with the customer and facilitate ways of validating the proposed solutions.
    These methods of validation could be technical, business, and legal validations.
    For the technical merits, use a demo, proof of concept, or even trusted customer
    references. For the business side, it's important to work with return on investment
    (ROI), total cost of ownership (TCO), and any other customer metrics that will
    facilitate a sound decision. From a legal perspective, the corporate counsel will
    evaluate what is a myriad of regulations and data protection laws that apply to
    the blockchain applications. Corporate counsel has met with IT to avoid noncompliance,
    penalties, and other impacts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Experienced sales executives understand that enterprise buying is a complex,
    consensus-building process that is rarely transparent and is usually lengthy.
    Selling blockchain and distributed ledger technology could take a few weeks or
    up to a year in my experience. It can be a lengthy process for several factors.
  prefs: []
  type: TYPE_NORMAL
- en: Customers are still learning what exactly blockchains are and where blockchains
    may fit into the enterprise. Customers who are technically adept will be better
    prospects for blockchains.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are a limited number of uses for blockchains that have flexible enough
    use cases. If the organization cannot identify a specific problem that a blockchain
    can solve such as compliance, data integrity, cost efficiencies, and so on, then
    the sales cycle will likely stall.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legacy applications may not integrate well and therefore present additional
    challenges. Can they be ported over easily or require middleware or reworking?
    Applications that are cloud native make good candidates for blockchain integration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Political challenges can arise from stakeholders, especially in the case where
    the stakeholder's roles may be in jeopardy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No two organizations are the same, even if they are both Fortune 100 financial
    institutions. Everything from political climates, training, corporate governance,
    business models, and so on, can present challenges to the sales cycle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain sales cycles take patience, especially when the enterprise does not
    have an immediate use case, the budget, or technical capabilities on hand. Note
    that blockchain presales engagements are not at all similar to selling a cluster
    of network edge switches to a network engineer who already has established the
    enterprise use case to expand their network. Generally, in cases where the technical
    knowledge exists, it's a “speeds and feeds” discussion, whiteboard, and pricing
    exercise for the sales teams working with the network teams.
  prefs: []
  type: TYPE_NORMAL
- en: Selling blockchain technology requires a significant interaction with the development
    group. Developers are different in the way they think than your typical network
    engineer, for example. They are detailed, clearly identify with coding languages,
    use specific jargon, and like to solve problems. Developers are also going to
    be the one group of stakeholders who know how an application works from start
    to finish. They understand the runtime environments, the database structures,
    integration with the endpoint services, and the logging for compliance, for example.
    When presenting to the development stakeholders, you'll need to present a technical
    discussion, so you are well advised to bring talent who can discuss areas of focus.
    These areas include application programming interfaces (APIs) such as REST or
    Open APIs; development languages such as Go, Java, and Node; and integration options
    for distributed business applications that may run on smart contracts such as
    Enterprise Resource Planning (ERP), Know Your Customer (KYC), Anti Money Laundering
    (AML) and Customer Relationship Management (CRM) cross-border payments, and so
    on.
  prefs: []
  type: TYPE_NORMAL
- en: The stakeholders who are developers in some organizations are in departments
    called dev, development, DevOps, or in one engagement I encountered emerging technologies.
    Therefore, you should know that the stakeholders who may be in a blockchain project
    are not exactly “one size fits all.”
  prefs: []
  type: TYPE_NORMAL
- en: It is also important to mention that stakeholders, decision-makers, or approvers
    will likely consist of the legal counsel and financial groups that blockchain
    projects can impact. You will likely want to brush up on compliance requirements
    before discussions with corporate counsel, which I cover extensively in [Chapter
    9](c09.xhtml), “Blockchain Governance, Risk, Compliance (GRC), Privacy, and Legal
    Concerns.”
  prefs: []
  type: TYPE_NORMAL
- en: 'In a nutshell, selling blockchain is a “development exercise” for the most
    part, and you must be knowledgeable as a sales organization to effectively position
    blockchains. In that blockchains and distributed ledgers are newer technologies
    with a limited knowledge base, your role as a presales engineer will be more “evangelist”
    or even a “trainer” to ensure that your prospects understand the value of the
    solution and how the solution will integrate into their organizations.  ## Blockchain
    Roles (Stakeholders)'
  prefs: []
  type: TYPE_NORMAL
- en: It's important to cover the roles that will likely have a “sales play” in blockchain
    and ledger-focused solutions. In this section, I'll identify the stakeholders
    who will be part of the substantial discussions about blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: This is important because in most cases blockchains are not a general hardware
    or software sale. It is also important to appreciate that solutions selling around
    blockchains could expand past the usual CIO, IT director, and network or database
    administrator you commonly work with. IT roles in this new world of blockchains,
    consensus, frameworks, smart contracts, and distributed applications are an evolving
    area of focus for enterprises. Some roles may require dedicated blockchain expertise,
    and some may only require that blockchain technology is a “nice-to-know” area
    of focus.
  prefs: []
  type: TYPE_NORMAL
- en: The following roles are commonly found in the enterprise blockchain arena. The
    definitions are provided more as a guide for general understanding, as one would
    likely expect that in some cases, titles and actual job responsibilities vary
    widely from company to company.
  prefs: []
  type: TYPE_NORMAL
- en: '**Blockchain Developer** A blockchain developer is focused on developing smart
    contracts or chaincode, designing distributed applications (dapps), or integrating
    front-end user web interfaces that will interface with the blockchain network
    applications. Traditional developers who have advanced skillsets around Java,
    JavaScript, Python, Solidity, Go, or even C++ development experience do well in
    blockchain development. The demand for a solid experienced blockchain developer
    has never been higher.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Architect** A blockchain architect is a client-facing role that
    essentially will collect the customer requirements, translate the requirements
    into a working platform, and turn the platform over to the blockchain developers
    to work on their smart contracts, dapps, and client applications. In many organizations,
    a blockchain architect can also be called a solutions architect or a consulting
    engineer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Administrator** A technical lead handles the post-sales management
    of a blockchain platform. Generally, a blockchain administrator has managed other
    platforms such as cloud computing or telecommunications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Operator** A blockchain operator is a role that handles the management
    of certificates and accounts and the permissioning of a blockchain. In smaller
    organizations, the blockchain operator and blockchain administrator roles might
    be merged.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Legal Counsel** In organizations that take blockchain compliance
    seriously, this role is required. The attorney (counsel) usually establishes “legal
    prose” for smart contracts and consortium partnerships, maintains compliance/governance
    requirements, and performs due diligence on various blockchain-related concerns.
    From what I have seen, in organizations that are focused on initial coin offerings
    (ICO), this role is focused on structuring deals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Solutions Architect** This is a technical role that is client-facing and
    is considered to be one of the most critical technical roles for most VARs, vendors,
    or resellers. The goal of the solutions architect is to take a blockchain solution
    and solve a business problem. The solutions architect and presales engineer roles
    often overlap.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Presales Engineer (Architect)** This is a client-facing role that is critical
    to the organization and works in a “before the sale” capacity. They essentially
    pave the way for the more technical leads when applicable. The presales engineer
    is really focused on how blockchain products can translate into a solution and
    explain this to the customer. It is important to note as well that most large
    training companies and professional services organizations may also have a presales-focused
    role that is specialized on blockchain or professional services or development.
    It is also extremely common to see a presales engineer or architect role be the
    same or overlap in responsibilities as a solutions architect. Presales engineers
    and architects are considered to be “revenue-generating” roles and thus critical
    to the organization. If you like people, want to actively generate revenue for
    the company, and get rewarded for this “front-line” participation, then this role
    could be for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Marketer** The blockchain marketer role is nontechnical and more
    focused on “relaying” the business benefits of the blockchain solutions and services
    to the prospective customers. This role usually is well represented at trade shows,
    conventions, and networking events. events, and is really focused on actively
    looking for leads and prospects for the company. In some smaller companies, for
    example, I have seen inside sales and account executives have the responsibility
    of a blockchain marketer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Project Manager** This role is nontechnical and more focused on
    keeping the blockchain implementation on schedule as well as on budget. Generally,
    any project manager who manages IT projects will likely be successful in this
    area. The one area that I have found to be new for some project managers is understanding
    the complex processes of interfacing with cryptocurrency exchanges.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain Trainer** This role is focused on enabling customers to work with
    blockchain technology. A blockchain trainer should be both technical and customer
    centric. Generally, technical requirements will be focused on networking, application
    development, business processes, and training, but also could be but also could
    be responsible for setting up proofs of concept.  ## IT-Based Sales Cycles'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although blockchain technology may be complex, in reality the blockchain sales
    cycle follows the typical sales cycle you follow to sell telecommunications gear,
    data storage arrays, cloud computing platforms, or CRM solutions.
  prefs: []
  type: TYPE_NORMAL
- en: The seven steps shown in [Figure 5.2](#c05-fig-0002) make up a typical sales
    cycle process (although some vendors use an eight-step system). For this book,
    I focus mainly on the blockchain sales cycle, for which there is no official sales
    cycle. However, I provide insight into how I handle different parts of the sales
    cycle to adapt it to the blockchain technology. After the sales cycle, I then
    move on to the design and implementation phase.
  prefs: []
  type: TYPE_NORMAL
- en: Every IT vendor, systems integrator, and consulting firm has its own view of
    what the sales cycle world is. After working successfully for more than a decade
    for several large organizations (Brocade Communications, Hitachi Data Systems
    [HDS Federal ViON], 3Par Data, and Dimension Data), I realize that every industry
    vertical looks at solutions selling in a vastly different manner, which drives
    revenue differently. That is, some organizations are front-heavy with a dedicated
    team approach (1:1 ratio of sales executive and sales engineer/architect), whereas
    other organizations are less heavy (two or more sales executives to one sales
    engineer/architect). The ratio may be as high as 5:1, which can be directly related
    to the industry vertical or geographic region.
  prefs: []
  type: TYPE_NORMAL
- en: Presales engineers often sell solutions that are considered expensive and also
    as capital expenditures such as IT networking equipment or data storage hardware
    or software. It is common as well to spend a considerable amount of time in most
    of the stages of the sales cycle as a sales executive would. This can be different
    from sales cycles of less expensive products or services where the sales cycle
    may be traversed more quickly. Presales engineers really should not be fully engaged
    in every phase but clearly communicated with by the account executives.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image described by caption and surrounding text.](images/c05f002.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.2**](#R_c05-fig-0002) The seven sales cycle phases'
  prefs: []
  type: TYPE_NORMAL
- en: Generally, as a presales engineer, it's important to get involved in the discovery
    aspects of what the pain points are for the customer and what is creating these
    pain points. An experienced presales engineer should know when to get in and when
    to get out—for example, when to turn over the technical aspects to a blockchain-focused
    solution engineer. Basically, know your boundaries as a presales engineer and
    engage the post-sales teams as needed.
  prefs: []
  type: TYPE_NORMAL
- en: The following phases, to identify both sales and technical aspects, should be
    handled efficiently, effectively, and professionally to ensure that the customer
    receives what they need exactly when they need it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The areas of a seven-phase IT sales cycle are defined with my own input for
    each:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prospecting (relationships)**: This step involves obtaining client leads
    through various means such as conventions, trade shows, and even referrals from
    other customers. Traditionally vendors have group that can provide leads as well
    a qualified inside sales. This phase is more about establishing the relationship
    and building trust with the customer. Lastly, requests for proposals are another
    way some companies (especially in the government and education sectors) may prospect
    for customers.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Preparation (intelligence gathering)**: This step involves preparing to meet
    with the customer either in person or online, gathering information about the
    customer and the enterprise. Collect some use cases that you can leverage for
    their industry (financial, energy, insurance, government, and so on). Also, a
    great account executive should be identifying pain points, identifying any additional
    stakeholders and business decision-makers, and perhaps identifying project funding.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Approach (initial meeting)**: In the approach stage, your account executive
    will handle the initial face-to-face meeting, webinar, or conference call. The
    reality is that these initial meetings routinely do not include a presales engineer.
    In some cases, you as the sales engineer should be “qualifying” the customer and
    your organization''s solutions set. As part of this phase, the technical decision-makers
    should be identified.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Presentation (second meeting)**: During this phase, you as a presales engineer
    will likely be demonstrating how the blockchain solution works through at least
    a presentation, a whiteboard, and more than likely a demo or proof of concept
    (POC).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Customer objections (addressing)**: Perhaps the most challenging part of
    the seven steps of a sales cycle for a sales team is handling objections. Handling
    objections is actively listening to your prospect''s concerns and addressing them
    in a manner that will provide value so they can make a decision. As a sales engineer
    you should be working on the “technical close,” which is the point where you have
    provided enough technically valid information around the requirements that the
    customer feels they can make a favorable decision.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Closing the deal (purchase order)**: This is the stage when the the purchase
    order (PO) is signed by the stakeholders and the sales team management. During
    this stage the implementation details are worked out, and any required implementation
    teams are called in.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Follow-up (supporting the relationship)**: After your purchase order is signed
    and weeks after the implementation team is on the ground working with the customer,
    you should consider it imperative for a sales team to be aware of how the project
    is going. The sales team should demonstrate to the customer that they are there
    for them after the PO is signed and the blockchain is implemented.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '### Presales Tasks'
  prefs: []
  type: TYPE_NORMAL
- en: 'As part of a sales cycle, it is clearly evident that sales are being driven
    by a sales team, and you need to appreciate the level of effort that can come
    into play for the sales team to close a deal. Before any purchase order is received,
    it is expected that one if not all of the following tasks will be performed to
    consummate the closing of the blockchain deal:'
  prefs: []
  type: TYPE_NORMAL
- en: Requests for proposals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying, analyzing, and managing stakeholders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain readiness assessment workshops
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing demos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using vendor demo tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing blockchain readiness assessment workshops
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whiteboarding solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing proof of concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling the sales process with blockchain as a service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### REQUEST FOR PROPOSALS'
  prefs: []
  type: TYPE_NORMAL
- en: A request for proposals (RFP) is commonly used in specific industry segments
    as the main vehicle for organizations to address procurement for their enterprises,
    which from a cost perspective is for a mandated cost.
  prefs: []
  type: TYPE_NORMAL
- en: Procurement is also referred to as an *acquisition* in the U.S. federal sector
    and is regulated by statutes dealing with U.S. federal contracts and the U.S.
    federal contracting process. Titles 10, 31, 40, and 41 of the U.S. Code are the
    common references for U.S. federal contracting.
  prefs: []
  type: TYPE_NORMAL
- en: An RFP, whether placed on the market by military, intelligence, or civilian
    agencies, is known at the federal, state, and local levels as a *solicitation*
    from the government.
  prefs: []
  type: TYPE_NORMAL
- en: Even large commercial companies will solicit bidders for an RFP. You as a solutions
    provider or potential vendor may be participating in a blockchain RFP, so let's
    clarify some terms before getting started with RFPs.
  prefs: []
  type: TYPE_NORMAL
- en: The solutions provider giving a response to the RFP is called the *bidder*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer placing the RFP out for bid is called the *solicitor*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A portion of my work experience for more than a decade was focused on government
    contracting (military and civilian agencies) in the metro Washington, DC area.
    As part of this experience, can assure you that your only way into most federal,
    state, and local entities is through the RFP process.
  prefs: []
  type: TYPE_NORMAL
- en: I refer to the RFP as a doorman or gatekeeper since you have no choice but to
    participate in the process. Requests for information (RFIs), requests for quotation
    (RFQs), and RFPs can be a time-consuming and essentially complex process for both
    the solicitor and the bidder.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.3](#c05-fig-0003) illustrates the standard high-level RFP workflow
    process steps. The workflow starts with an RFI, which is an information-gathering
    request. Then it proceeds on to the RFP, which is the work for the sales team.
    Lastly, some companies may bypass the RFI and RFP processes and just publish an
    RFQ, which is a pricing exercise.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image described by caption and surrounding text.](images/c05f003.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.3**](#R_c05-fig-0003) Procurement workflow process steps'
  prefs: []
  type: TYPE_NORMAL
- en: 'The procurement process also entails a lengthy workflow for what is referred
    to as *procurement activities*, which are one of the following: requirements development,
    pre-award activities, and post-award activities. These processes are usually complex
    for both the solicitor and the bidder because of extensive government procurement
    processes, regulations, and bidding processes that are managed by the General
    Services Agency (GSA). There is also a consistently challenged scoring system
    that the GSA uses to rate proposals'' bids. These challenges are known as *protests*
    and are usually a result of the GSA’s evaluation of the company, which can result
    in a company score that is less favorable to winning the bid.'
  prefs: []
  type: TYPE_NORMAL
- en: When an organization decides to proceed with a bid for a government contract,
    for example, there are some industry best practices for assessing and responding
    to an RFP. RFPs are well structured, and from a bidder perspective, they require
    a team effort to complete thoroughly. Note that there are red teams, blue teams,
    green teams, gold teams, and pink teams, and each team has specific responsibilities
    around the proposal development. These teams are essentially a logically represented
    layered approach to the maturity level of the state of the proposal.
  prefs: []
  type: TYPE_NORMAL
- en: Before even thinking of taking on a blockchain-related RFP, your organization
    should ensure that they have the right expertise on board and also be willing
    to fail. From the few blockchain RFPs that are out there, it is important to realize
    that some of these organizations seem to be using the RFP process as more of an
    educational process than a procurement process. This is not intentional probably;
    rather, the solicitor might not be educated in blockchain and therefore not understand
    the real problems to be solved.
  prefs: []
  type: TYPE_NORMAL
- en: In a nutshell, responding to RFPs can be a spectacular way to waste your companies'
    resources if you're not carefully reviewing the proposal details. For example,
    having one response that might not be clear to the solicitor can rule out your
    organization as qualifying or even winning the procurement whether you're a sub
    or the prime. In the world of both commercial and government contracting, a *prime*
    is the primary contractor who holds the contract directly with the customer. A
    *sub* is a subcontractor who works directly for the contractor, not the customer.
    The prime contractor and subcontractors will likely work together in proposing
    the RFP.
  prefs: []
  type: TYPE_NORMAL
- en: You need to clearly appreciate as well that most RFPs are not worth even considering
    competing or bidding for if the customer has not established a proposed use case.
    Your organization likely needs to consider the limited resources available and
    the resources spent on competing, especially if the government really does not
    know the problem it is trying to solve.
  prefs: []
  type: TYPE_NORMAL
- en: RFPs require detailed technical responses, and these technical responses must
    address the customers' requirements appropriately. The RFP will certainly provide
    a list of questions that each bidding company must respond to. These could include
    business-focused responses, for example, prior experience or company processes,
    to more technical responses including what type of solution is proposed and even
    detailed equipment lists.
  prefs: []
  type: TYPE_NORMAL
- en: An RFP may be distributed to all the companies identified during the RFI process
    or might be made public to solicit additional bidders. During the RFP process,
    the most important task is the proposal development. This is where the responding
    company (bidder) will respond to the RFP with its proposed solution.
  prefs: []
  type: TYPE_NORMAL
- en: RFP questions are often detailed technically, and the bidders need to place
    great care in how they respond to every question. The responses will provide a
    thorough look at the bidders and their prospective solutions to the solicitor.
    On the other hand, the RFI will ask a standardized set of questions concerning
    your company's history, technical capabilities, partnerships, business plans,
    ownership, and other key details that are less technically detailed.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to procurement processes, RFPs may or may not be part of your
    organization's business plan. If they are, then learning how to respond should
    be a priority and so should finding resources that provide insight into your specific
    organization's markets such as education, government, or commercial.
  prefs: []
  type: TYPE_NORMAL
- en: 'Responding to procurements can be time-consuming, even if you''re experienced.
    When considering whether to respond to a U.S. federal solicitation, there are
    strict requirements, and it is advisable that your organization retain the business
    and technical talent to create the appropriate responses.  #### IDENTIFYING, ANALYZING,
    AND MANAGING STAKEHOLDERS'
  prefs: []
  type: TYPE_NORMAL
- en: Every organization has more than one stakeholder in a project or procurement.
    Generally, as a project management best practice, if the project is undertaken
    due to a contractual agreement, it's advisable that the sales team review the
    contract agreement to find the stakeholders who will be part of the sales process.
  prefs: []
  type: TYPE_NORMAL
- en: A *stakeholder* is a person who may be affected in some manner (directly or
    indirectly) by a given project. These stakeholders could be employees working
    on a project, organization, or even partner companies. Stakeholders have different
    levels of influence, such as being a technical influencer or a business influencer.
  prefs: []
  type: TYPE_NORMAL
- en: Stakeholder identification is, of course, critical to ensure both the sales
    team and the customer are not wasting their time. Identify both the decision-makers
    and the end users. The decision-makers need to be involved and should ensure that
    there is reasonable commitment to engage with you as necessary.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.4](#c05-fig-0004) presents the stakeholder process workflow. When
    identifying stakeholders, one of the best places is to identify roles in the organization.
    The second step is analyzing; you want to understand the role of the stakeholder
    and understand how they can influence the decision of a blockchain solution. Lastly,
    you must manage your stakeholders in a manner that facilitates your role as a
    trusted advisor, and this means responsive, effective, proficient, and honest
    communication.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image described by caption and surrounding text.](images/c05f004.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.4**](#R_c05-fig-0004) Stakeholder process workflow'
  prefs: []
  type: TYPE_NORMAL
- en: 'The stakeholder workflow is straightforward. You must first identify who the
    stakeholders are and then analyze them to determine what level of authority they
    have. For example, are they technically driven or more business focused? Then
    you can move on to the last part of the workflow: manage. You engage the stakeholder
    in the appropriate fashion, such as with meetings, whiteboards, proposals, and
    then meet the appropriate level of expectations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As a trusted advisor to your customer base, you must ensure that you represent
    your organization as professionally as possible. One of the best ways to do this
    is to clearly understand the stakeholders and what role they play in the organization
    understanding the stakeholders clearly should this will help you to not only set
    expectations appropriately but also meet or exceed them. One of the last things
    you would want to do, of course, is “over promise and under deliver,” which is
    a common quote that is used in sales training.  #### BLOCKCHAIN READINESS ASSESSMENT
    WORKSHOPS'
  prefs: []
  type: TYPE_NORMAL
- en: A blockchain readiness assessment workshop is focused on understanding where
    the customer is in the adoption of blockchain technologies. Generally, a readiness
    assessment is also known as a *blockchain workshop* by some vendors and partners.
  prefs: []
  type: TYPE_NORMAL
- en: A workshop is exactly what you would expect to offer as a vendor, VAR, integrator,
    or services firm to help facilitate the knowledge transfer in a highly interactive
    environment. Whiteboarding is a likely requirement when it comes to assessments
    and establishing requirements. Whiteboarding is critical to identifying problems
    and presenting solutions in an interactive manner that is visual for both the
    vendor and the customer.
  prefs: []
  type: TYPE_NORMAL
- en: Generally, in your role as an engineer you will want to work with the customer
    to establish the potential blockchain use case for the organization. As part of
    the process, you will also identify requirements, educate the customer, and provide
    a summary report with an actual use case that may be applied later.
  prefs: []
  type: TYPE_NORMAL
- en: 'During a blockchain workshop, you want to review at least the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Identify the potential opportunities for blockchain technologies by engaging
    with the stakeholders to facilitate discussions around potential solutions to
    problems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify and document the potential scale of the blockchain use case for the
    organization. Some organizations may not be ready for a blockchain as an individual
    unit or department. Potential customers will be more likely to benefit from working
    as a “consortium” where sharing the benefits and costs could provide direct value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Document the stakeholder's functional requirements, which will specify what
    a blockchain should accomplish from a business perspective such as compliance,
    reporting, auditing, authorizations, or business focus.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Document the stakeholder's nonfunctional requirements. The nonfunctional requirements
    specify what the system should do from a performance, reliability, security, or
    technical standpoint.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determine customers' perceived risks for blockchain implementations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Document any compliance requirements such as GDPR, PCI, SOX, and HIPPA, for
    example, since these requirements are a significant part of a blockchain use case.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify any performance requirements such as transactions per second (TPS).
    Blockchain is not a high-performance platform as compared to client-server technologies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Provide your customer with any expected next steps in the evaluation process
    such as follow-up calls or quotes.  #### PERFORMING DEMOS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demos are a required part of most roles for presales-focused engineers. Demos
    are different in many aspects from proofs of concept, which are performed at a
    later stage in the sales cycle. Demos need to be direct, timely, efficient, and
    kept under 30 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: 'When it comes to performing demos, these are some best practices to appreciate:'
  prefs: []
  type: TYPE_NORMAL
- en: Perform the demo on a stable platform that you maintain if possible, whether
    on your own platform or in a cloud blockchain as a service.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain demos are “software” focused and in most cases should maintain a
    “storyboard” around this unless required otherwise. A storyboard is an approach
    used to relay the features and functions in a logical manner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify specific concerns, features, or functions that are of interest to the
    customer, and avoid a “standard” demo process if possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep demos to less than 30 minutes to avoid losing the attention of the customer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify your customer's stakeholder base ahead of time and provide a demo that
    will focus on the audience. For example, a CIO will have different interests than
    a cloud developer or network engineer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide an interactive demo if the customer wants to “drive” the blockchain
    transactions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During the demo, display how the solution resolves “pain points” that the customer
    identified in previous discussions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When it comes to performing demos, I like to set up a blockchain as a service
    (BaaS) with a basic configuration to address the customer interests and provide
    value around reducing “pain points.” For example, if the demo is about Hyperledger
    Fabric and you're running this in IBM Bluemix, you're basically ready to go. If
    the customer base is made up of developers, I walk them through how to deploy
    chaincode (smart contracts). On the other hand, if the customer base involved
    is more executive level, then I want to focus on creating efficiency, showing
    the ease of use, and discussing any ROI/TCO savings that could be accomplished
    with the solution.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.5](#c05-fig-0005) shows the interface to start the blockchain service
    in the IBM Blockchain Platform.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image described by caption and surrounding text.](images/c05f005.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.5**](#R_c05-fig-0005) IBM Blockchain Platform'
  prefs: []
  type: TYPE_NORMAL
- en: 'The IBM Blockchain Platform interface enables a sales engineer, developer,
    or customer to start a Hyperledger Fabric blockchain network in only a few clicks.
    You can see that the service requires a service name, region, and organization
    to start a blockchain network in the IBM Blockchain Platform. When performing
    a demo or proof of concept, you can get started in minutes, and this could provide
    significant results for organizations.  #### USING VENDOR DEMO TOOLS'
  prefs: []
  type: TYPE_NORMAL
- en: Some vendors also have additional tools that can show your customer how the
    interface works, how transactions occur, or how to deploy a node. Having a demo
    tool available that you can run on your laptop can be invaluable in some cases.
  prefs: []
  type: TYPE_NORMAL
- en: R3 Corda provides a solid demo tool called Demobench. Demobench is a stand-alone
    desktop application. The goal of Demobench is to make it easy to configure and
    launch local Corda nodes on your desktop. It is very useful for training sessions,
    demos, or just experimentation of Corda.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.6](#c05-fig-0006) shows the network map in Corda Demobench. This
    specific page is called the Node Explorer, which can be used locally on your laptop.
    It deploys a JVM and runs an instance locally specifically for demos.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image described by caption and surrounding text.](images/c05f006.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.6**](#R_c05-fig-0006) Corda Demobench  #### WHITEBOARDING SOLUTIONS'
  prefs: []
  type: TYPE_NORMAL
- en: Whiteboarding is one of the most critical skills a customer-facing engineer
    can have. Whiteboarding is a powerful sales tool that can provide insight to the
    customer about your understanding of their environment and also provide insight
    to the customer about the proposed solution. Whiteboarding should clearly build
    up the decision-making process for the customer in easy-to-understand workflows,
    diagrams, and figures.
  prefs: []
  type: TYPE_NORMAL
- en: Whiteboarding is best approached by a technical engineer who can relay the proper
    visualization of component integration, network connections, and application gateways.
  prefs: []
  type: TYPE_NORMAL
- en: 'As part of a whiteboard session, a discussion about customer pain points is
    recommended, and then you can visually map them to a specific application. Understanding
    the challenges and customer requirements deeply will certainly facilitate solid
    discussions about how blockchain solutions can solve their problems. Remember,
    whiteboards are social interactions that are visual outlets for recognizing customer
    pain paints. Proposing solutions should be secondary once the customer knows you
    clearly understand their pain points.  #### PERFORMING PROOF OF CONCEPTS'
  prefs: []
  type: TYPE_NORMAL
- en: A proof of concept is a technical exercise most sales engineers will be involved
    with at one time or another to help identify the specific performance, security,
    and other factors such as usability that the customer is trying to establish that
    will work for their use cases.
  prefs: []
  type: TYPE_NORMAL
- en: A POC is essentially a realization of a certain method or idea to demonstrate
    a solutions feasibility. It's a demonstration process in principle that is usually
    a “visual” process for the customer to establish that the solution could work.
    This section contains my best practices with POCs.
  prefs: []
  type: TYPE_NORMAL
- en: First, when I am performing a proof of concept, the critical thing I do is to
    discuss with the sales team that the customer has been vetted and has a procurement
    viability. (Has the customer been vetted financially?) As a best practice, your
    organization's account executives (AEs) should be vetting the proper leads and
    then following up with appropriate stakeholders to ensure that a POC is a valid
    and proper exercise for both the customer and the sales organization. From my
    experience, it's a wise decision to question the AE about customer validation
    to ensure that a POC is in the company's best interest from technical and business
    perspectives. It's one thing to perform a packaged 30-minute demo remotely, but
    it's a totally different situation to spend a weekend setting up for a specific
    use case and two days on-site. You as an engineer are fully responsible for your
    time and should want to ensure you're not “fishing in a dead lake.”
  prefs: []
  type: TYPE_NORMAL
- en: Second, I request that the customer and the sales team work directly with me
    to establish clear “success criteria” for the POC. This can be done via a conference
    call, for example, before going on-site. The POC must be clearly defined for you
    as an engineer; you must be able to state the goals and the desired results that
    are the success criteria. You can get in your car and drive aimlessly, or you
    can get in your car and have a destination. It's your choice to control the POC
    you're running, and I suggest you're clearly identified as the driver.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, I like to confirm with the sales executive that they have commitment
    from the customer that if we deliver on the success criteria, we will win the
    procurement. If the expectation is not set correctly with the customer, then it
    shows the sales team is weak, and you as an engineer may very well be involved
    in another exercise in futility.
  prefs: []
  type: TYPE_NORMAL
- en: 'Generally, you are being asked to perform a POC for a reason. Some of the common
    reasons to perform a POC are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: To show the customer the functionality of the solution as well as how the solution
    solves their pain points
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To remove some of the risk of the solutions procurement for your customer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To leverage the procurement process and establish trust with the potential stakeholders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enterprise blockchains have different use cases, limitations, and features
    that as an engineer you need to be aware of. When considering a blockchain POC,
    it''s important to identify the blockchain architecture as well as the application
    stack. The application stack is where the complexity can come in. The complexity
    could involve integration of the end-user applications, commercial APIs, decentralized
    and open source applications, or even compliance implementations. For example,
    Hyperledger Fabric is based on a three-tiered architecture. The tiers of Hyperledger
    Fabric are the blockchain network, chaincode, and client application. When performing
    a POC, your role as a sales engineer may very well be to install chaincode. Chaincode
    can be written in one of three development languages: Go (Golang), Java, and Node.js.'
  prefs: []
  type: TYPE_NORMAL
- en: Developing applications and porting it to the blockchain platform, though, of
    course, are the responsibilities of the customer development team. In [Chapter
    10](c10.xhtml), “Blockchain Development and Programming,” I cover this area of
    development in more detail later in the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5.7](#c05-fig-0007) provides insight into the three layers of the Hyperledger
    Fabric development stack. Hyperledger Fabric at the networking infrastructure
    layer is focused on connecting the blockchain network to the APIs and integrating
    the nodes with their smart contracts. Chaincode, SDK, and APIs are the “middleware”
    for putting together blockchain network with the end-user application.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Diagram depicting symbolic representations for three layers of the Hyperledger
    Fabric development stack: End-User Application; Chaincode, SDK, and API; Networking
    Infrastructure.](images/c05f007.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.7**](#R_c05-fig-0007) Hyperledger Fabric development stack'
  prefs: []
  type: TYPE_NORMAL
- en: 'The lesson learned here should be that POCs can be a rewarding opportunity
    to work with the sales team as well as the customer to provide value around enterprise
    blockchains. Before executing on a POC, you want to ensure customer stakeholder
    buy-in and also ensure that valid “success criteria” have been identified.  ####
    ENABLING THE SALES PROCESS WITH BLOCKCHAIN AS A SERVICE'
  prefs: []
  type: TYPE_NORMAL
- en: As a well-traveled cloud architect, I can assure you that one of the greatest
    enabling “gifts” given to any IT sales organization is blockchain as a service
    (BaaS). This is also known as a blockchain platform as a service (PaaS), for example,
    in the world of IBM Bluemix.
  prefs: []
  type: TYPE_NORMAL
- en: Sales organizations can consume a cloud service for little or no CAPEX funds
    and utilize the cloud for their POCs, demos, and training around blockchains such
    as Corda, Hyperledger, and Ethereum. Sometimes there really is no need to run
    to the C-level suites to request funding for a CAPEX expenditure for a blockchain
    infrastructure. Account executives know that requesting CAPEX funds in just about
    any type of company of even modest size is a time-consuming and frustrating process.
    In reality, it is likely a *series* of time-consuming processes from my experiences.
  prefs: []
  type: TYPE_NORMAL
- en: In 2009, I remember selling 3PAR data storage arrays to the commercial sector
    in the Washington, DC metro area. These 3PAR arrays were inexpensive compared
    to an EMC or HDS array, with the same number of gigabytes or terabytes. We were
    talking a $50,000 deal versus an $800,000 deal, and we were performing somersaults
    to obtain a purchase order. In my opinion, you need to understand margin and the
    cost of a customer acquisition, which I cover in [Chapter 6](c06.xhtml), “Enterprise
    Blockchain Economics.” A root canal could be considered less stressful.
  prefs: []
  type: TYPE_NORMAL
- en: Some companies can even spin up a BaaS for less than $100 USD. It can even be
    free if you can use “promotional credits” or an “always-free” tier that some providers
    allow.
  prefs: []
  type: TYPE_NORMAL
- en: 'In summary, you can also use the resources in the cloud for demos, proof of
    concepts, and even during training. I like to perform demos as well during a readiness
    assessment just to get the techies thinking and comparing cloud services to blockchain
    services. To be honest, utilizing a blockchain as a service is not for every sales
    organization, and having a dedicated platform can provide efficiencies as well
    as benefits in many respects when you have both the use case and the transaction
    volume to justify a substantial investment. A solid use case to having a dedicated
    blockchain services team, for example, would be when the larger consulting firms,
    VARS, and vendors do invest in their own dedicated in-house private clouds and
    can expand services to include a blockchain.  ### Selling Enterprise Blockchain
    Solutions'
  prefs: []
  type: TYPE_NORMAL
- en: One of the challenges of selling a blockchain solution is to not oversell the
    benefits of said blockchain solution. Blockchain technology is still in the “adopter”
    phase in some markets, and therefore it can be “oversold” as a solution that solves
    every enterprise challenge. I have seen many blog posts and listened to many convention
    presentations about how specific blockchain solutions are solving just about every
    problem, and I would give most of them an A on marketing but an F for viability.
  prefs: []
  type: TYPE_NORMAL
- en: The reality is that blockchain technology is limited in solving problems, providing
    efficiencies, and establishing robust use cases. You will need to engage both
    your company's business and technical experts when selling blockchain solutions.
    For example, if the customer has a use case for supply chain management or compliance,
    these prospective use cases may be great for establishing a use case for immutability
    and transparency, but the use case may not effectively provide the customers with
    performance and security requirements.
  prefs: []
  type: TYPE_NORMAL
- en: '#### REQUIREMENTS GATHERING'
  prefs: []
  type: TYPE_NORMAL
- en: It is critical to capture enough requirements to effectively identify the software
    solution being built. When gathering these requirements, ensure that they are
    testable. For example, a requirement that states “The solution must process more
    than 200 transactions per second (TPS) at peak workload” is clearly viably testable.
    On the other hand, a requirement that states “The solution should be really high
    performing to the stakeholders” does not clearly show how it can be tested nor
    lend itself as a viable requirement.
  prefs: []
  type: TYPE_NORMAL
- en: Your blockchain solution will likely entail some significant software design
    and development but also entail some hardware requirements and perhaps a blockchain
    as a service solution. From a historical perspective, you need to understand what
    the typical best practices have been focused on for requirements gathering. These
    requirements are identified as functional requirements and nonfunctional requirements.
    Software system functional requirements state how the solution should accomplish
    the proposed end results, whereas nonfunctional requirements will determine the
    constraints on how the solution will accomplish these end results.
  prefs: []
  type: TYPE_NORMAL
- en: Let's define these requirements more specifically and provide an example of
    each.
  prefs: []
  type: TYPE_NORMAL
- en: Functional requirements will specify functions that a solution, a system, or
    a specific system component must be able to accomplish for the customer or provide
    a viable use case for. These functional requirements provide technical details
    on how the system will accomplish the criteria stated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*For example*: The stakeholders in the company identify that the e-commerce
    web application must provide an easy-to-use shopping cart experience that will
    be intuitive for the consumer to use, highly secure, but also high performing
    with the goal of increasing revenue for the company.'
  prefs: []
  type: TYPE_NORMAL
- en: Nonfunctional requirements are the requirements that specify the criteria that
    will be established to gauge the operation of a system or its components rather
    than specific routines. These nonfunctional requirements define external constraints,
    system restrictions, and other technically specified outcomes. These nonfunctional
    requirements help to determine the success or failure of the project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*For example*: The company user base identifies that the e-commerce application
    will utilize open source solutions from Company A, which provides a hosted e-commerce
    solution. This solution with an industry-leading SaaS platform integrates “Shopify”
    shopping carts and provides for more than 2000 TPS with enterprise SSL certificates
    as part of an integrated solution.'
  prefs: []
  type: TYPE_NORMAL
- en: It is also important to note that there are two main categories of nonfunctional
    requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Execution qualities, for example, are focused on performance and usability,
    which are considered observable since we document this.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evolution qualities are testability, maintainability, extensibility, and scalability
    and are embedded in the static structure of the software stack.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The IEEE-Std 830 – 1993 clearly states “13 nonfunctional requirements” to be
    absorbed into software requirements documentation. [Figure 5.8](#c05-fig-0008)
    shows the 13 requirements as specified by the Institute of Electrical and Electronics
    Engineers (IEEE).
  prefs: []
  type: TYPE_NORMAL
- en: '![Flow diagram depicting IEEE 13 nonfunctional requirements from Performance
    to Safety.](images/c05f008.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.8**](#R_c05-fig-0008) IEEE 13 nonfunctional requirements'
  prefs: []
  type: TYPE_NORMAL
- en: IEEE is a world-renowned nonprofit professional organization founded by engineers
    in 1884\. The main purpose of the organization is to consolidate ideas dealing
    with electrotechnology. The IEEE plays a significant role in publishing technical
    works, sponsoring conferences and seminars, providing accreditation, and developing
    standards.
  prefs: []
  type: TYPE_NORMAL
- en: You can see that there are 13 blocks in the nonfunctional requirements list
    recognized by IEEE. For the purpose of this book's scope, I won't detail each
    of the 13 nonfunctional requirements. If you are not familiar with these IEEE
    nonfunctional requirements, I recommend finding out more from IEEE by visiting
    `[https://ieeexplore.ieee.org/document/392555](https://ieeexplore.ieee.org/document/392555)`.
  prefs: []
  type: TYPE_NORMAL
- en: A blockchain solution is a software solution with aspects of computer networking,
    computer security, and business such as compliance. Historically, a software system's
    functional requirement states how the solution should accomplish something, whereas
    a nonfunctional requirement will state the constraints on how the solution will
    accomplish something.
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 5.1](#c05-tbl-2001) shows some of the common blockchain-related functional
    and nonfunctional requirements that a blockchain solution commonly addresses.
    If your customers are asking about technical specifications, such as which type
    of consensus is being used, they are concerned about the nonfunctional requirements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**TABLE 5.1**](#R_c05-tbl-2001): Examples of blockchain functional and nonfunctional
    requirements'
  prefs: []
  type: TYPE_NORMAL
- en: '| NON-FUNCTIONAL | FUNCTIONAL |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| How a system does its job and attributes. | What a system does or accomplishes.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Technical Specifications | Business Requirements |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction log data redundancy | Compliance Requirements |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction log maintenance | Capacity Management |'
  prefs: []
  type: TYPE_TB
- en: '| Transaction processing with peer to peer gossip protocols | Enterprise Blockchain
    Performance |'
  prefs: []
  type: TYPE_TB
- en: '| Distributed Ledger version | Data Transparency |'
  prefs: []
  type: TYPE_TB
- en: '| User Interface | Intuitive ease of use |'
  prefs: []
  type: TYPE_TB
- en: '| Practical Byzantine Fault Tolerance (PGFT) | Protect against malicious peers
    |'
  prefs: []
  type: TYPE_TB
- en: '| Utilize x.509 certificates | Ensure secure membership |'
  prefs: []
  type: TYPE_TB
- en: 'With blockchains there are some clear requirements that can be specified, such
    as consensus, certificates, and protocols. However, as with every technology,
    there are also requirements that are not quantifiable, meaning that the measurement
    is not something that can have a number assigned to it. Some examples are the
    user experience, ease of use, or trust in a company brand.  #### REQUIREMENTS
    TRADE-OFFS'
  prefs: []
  type: TYPE_NORMAL
- en: As with anything in life, especially engineering software and hardware systems,
    solutions, and components, you can expect trade-offs in your design. Generally,
    you need to expect trade-offs between performance, security, and resiliency.
  prefs: []
  type: TYPE_NORMAL
- en: Triangles are desirable for understanding trade-offs in three dimensions. [Figure
    5.9](#c05-fig-0009) shows the three design trade-offs to understand in the design
    of a blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '![Flow diagram depicting blockchain functional and nonfunctional requirements
    from Training to Support.](images/c05f009.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.9**](#R_c05-fig-0009) Design trade-off triad'
  prefs: []
  type: TYPE_NORMAL
- en: Performance in blockchains is focused on transactions per second. Security is
    focused on the risks that may be realized with a platform, such as vulnerabilities.
    Lastly, resiliency is focused on how the blockchain platform will be available
    if a network node goes down and is sometimes compared to availability. For example,
    if your proposed blockchain solution is using Hyperledger Fabric and your design
    is using eight nodes/peers in a New Jersey data center, your deployment is very
    local with no geographic resiliency. What happens if the power grid goes down?
    What happens if there is a weather event? Localized blockchain networks perform
    as efficiently as possible but provide no resiliency against regional disasters.
  prefs: []
  type: TYPE_NORMAL
- en: When you need to extend your blockchain and deploy additional nodes/peers, then
    you must consider your new location and the possibility of inducing some latency
    into your blockchain network. The performance you may have had would not be the
    same as expected. You now have a blockchain network that is geographically resilient
    but is not performing with lower transactions per second because of the additional
    induced network latency.
  prefs: []
  type: TYPE_NORMAL
- en: Another common trade-off is around consensus methods (algorithms) and the commonly
    consistent issues with these. For example, some consensus methods are strictly
    used in permissionless blockchains such as proof of work (POW). In a permissionless
    blockchain, you're essentially giving up your privacy and security and then dealing
    with performance issues. In permissioned blockchains, your costs and responsibilities
    are greater, but you're also gaining security, privacy, and, in most scenarios,
    performance benefits.
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 1.2](c01.xhtml#c01-tbl-0002) compares public and private blockchains.
    It''s important to clearly relay these differences in design to the customer.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether you decide to implement a permissionless or permissioned blockchain,
    there will be trade-offs. You must weigh the trade-offs in blockchain design as
    well and choose accordingly. When it comes to requirements gathering and also
    the blockchain design, there are significant differences between a public blockchain
    and a private blockchain. For example, if you are discussing KYC, which would
    of course require identity management as a requirement for the customer, then
    you would rule out a public permissionless blockchain, since you would not have
    a mechanism in place to “know your customer.”  #### TECHNICALLY QUALIFYING A BLOCKCHAIN
    OPPORTUNITY'
  prefs: []
  type: TYPE_NORMAL
- en: As a presales engineer, you may be the sole technical expert in blockchain technology
    in your sales organization, or you may not be. Regardless, you likely will want
    to control your time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Qualifying blockchain opportunities is a must for ensuring that your time and
    company resources do not get misplaced. One of the challenges that can occur is
    when you have a sales team or account executive who fully relies on you to qualify
    the customer for every possible solution. When initially considering if a potential
    blockchain opportunity is qualified, I examine the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Is the customer's potential use case a “conceptual fit” where a blockchain is
    a valid use case? For example, does the customer require a compliant immutable
    record of customs declarations that will need to be retained for audit? Or perhaps
    the customer does not require a high TPS performance use case for their logistics
    application. Basically, are the properties of a blockchain solution clearly understood,
    and can they be applied to the customer use case? Determining the “conceptual
    fit” should be one of your main goals.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this customer have stakeholder buy-in? For example, is the current database
    application that has been identified as being phased out a technical and business
    challenge that can be overcome by the enterprise? You need to understand if the
    customer has an environment favorable to new technologies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Does this customer have one of the industry use cases that have been historically
    viable, for example, with competitors, and can this past performance provide some
    insights into the potential benefits and use case validation? Can you actually
    take the use case and match it up to another company that has documented blockchain
    success? Doing this makes the solution selling somewhat more convincing to the
    customer.  #### BLOCKCHAIN DECISION WORKFLOW'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you are working with a potential customer on whether the blockchain is
    going to be a valid solution, it's really important to understand that as an engineer
    or an architect you need to follow a workflow as well as go through a checklist
    of potential areas that can make or break a blockchain being a good use case.
  prefs: []
  type: TYPE_NORMAL
- en: The IEEE decision tree provides an easy-to-understand workflow to making a “considerations”
    decision on whether your use case would benefit from a blockchain. One of the
    main things I like about the IEEE decision tree is that it starts by asking whether
    traditional database technology meets your needs. This question really will filter
    the requirements remarkably easily. One of the challenges that you may also run
    into is that the blockchain industry is trying to make it seem that blockchains
    are the solution to every problem by using, a “hammer in search of a nail where
    every problem is made into a nail.” Reality is that if the customer does prefer
    or requires, for example, high transactions processing (over 1000 TPS), then you
    just ruled out a blockchain. On the other hand, if privacy, security, and compliance
    are the main concerns, then you may very well have a potential blockchain application
    use case.
  prefs: []
  type: TYPE_NORMAL
- en: The decision tree provides insight into questions that should be asked before
    deciding on whether blockchain is a good fit and then if a permissioned blockchain
    or a permissionless blockchain would be the right outcome.
  prefs: []
  type: TYPE_NORMAL
- en: The first decision to make is to come to the realization that if a traditional
    database would work, then a need for a blockchain would likely not be there. If
    a traditional database is not going to work, then you can proceed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second decision to make is to determine whether there will be multiple parties
    involved. If so, then proceed to the third decision. Generally, blockchains that
    are consortium-based blockchains are the best use cases.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third decision to make is around trust and whether a third party could be
    used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fourth decision to make involves security and how you can trust distributed
    decisions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fifth and final decision would be focused on whether you need privacy for
    your transactions. If you do, then you proceed to a permissioned blockchain, and
    if you do not, you would proceed possibly with a permissionless blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 3](c03.xhtml), “Architecting Your Enterprise Blockchain,” covers this
    step-by-step process in more detail. For the full context of the IEEE decision
    tree for adopting blockchain technology, see Morgen E. Peck''s article at `[https://spectrum.ieee.org/computing/networks/do-you-need-a-blockchain](https://spectrum.ieee.org/computing/networks/do-you-need-a-blockchain)`.  ####
    INDICATORS OF A SUCCESSFUL BLOCKCHAIN USE CASE'
  prefs: []
  type: TYPE_NORMAL
- en: By understanding your blockchain indicators, you can determine how to establish
    a use case. Customers usually appreciate use cases from industries and verticals
    similar to their industry, even from competitors. The easiest way to establish
    and justify a use case is of course to have a comparable use case that would be
    from an industry partner or a competitor.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you are qualifying a blockchain customer use case, here are some indicators
    that you''re likely to use in a potential valid use case with blockchain technologies:'
  prefs: []
  type: TYPE_NORMAL
- en: The customer has a KYC compliance requirement.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer requires a distributed ledger that can maintain immutable records.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer does not require SQL database performance, especially around transactions
    per second.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer has requirements to implement cross-border payments that do not
    rely on a central authority.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer has contracting requirements that could result in financial disputes
    such as chargebacks or term disputes that may result in legal concerns.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer understands what legal prose is and intends to incorporate these
    requirements into a smart contract.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer needs to establish a “farm-to-table” application that provides
    visibility to their customer base.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer is considering removing intermediaries to reduce costs from their
    transaction processing business unit.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are certainly more use cases that can identify a successful blockchain
    use case. You may want to review the blockchain vendor websites for additional
    use cases. I cover several more detailed use cases with potential indicators in
    [Chapter 8](c08.xhtml), “Enterprise Blockchain Use Cases.”  #### HIGHLIGHTING
    BENEFITS OF BLOCKCHAINS'
  prefs: []
  type: TYPE_NORMAL
- en: The benefits of the value creation of the blockchain technology should end in
    what outcome? For most organizations seeking blockchain benefits, every potential
    use case will have a different result.
  prefs: []
  type: TYPE_NORMAL
- en: Essentially, a distributed ledger for a logistics company may keep track of
    shipments coming in overseas and manage provenance for the company's compliance
    requirements around U.S. Customs. Performance and cost management may not be the
    main benefits since the application is more concerned about tracking and recording
    U.S. Customs compliance.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following list identifies the common benefits an enterprise can realize
    using blockchain technology:'
  prefs: []
  type: TYPE_NORMAL
- en: CAPEX and OPEX reductions (cost management)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Permissioned access (security)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased privacy (channeling)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Efficiency by reducing intermediaries (fewer accountants, attorneys, custom
    agents, and lenders)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risk reduction (less human error)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data integrity (immutability)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provenance (historical event logging)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transparency (trust for consumers)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Blockchains can provide some great benefits related to security. Also, blockchains
    are specifically suited to data platforms where there is a need for security and
    redundancy.  #### SMART CONTRACTS AND VALUE CREATION'
  prefs: []
  type: TYPE_NORMAL
- en: When correctly implemented, smart contracts provide significant value to some
    organizations. As a reminder, smart contracts are computer program codes capable
    of managing, executing, and enforcing the performance of an agreement using blockchain
    technologies. The entire smart contract process should be fully automated and
    can also act as a complement, or substitute, for legal contracts in some scenarios.
    Corda for example provides immense value in this area.
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain technology makes use of two distinct proprietary characteristics
    with the deployment of smart contracts: the use of validation rules and their
    enforcement of these rules in smart contracts. Validation rules define the conditions
    in which the records and blocks will be included in the blockchain, and the enforcement
    of validation rules work with an algorithm or protocol that enforces rules that
    have been entrusted by all parties with contributing data to the blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Smart contracts can provide that missing autonomy or trust that the organization
    did not enable before smart contracts. Smart contracts can also provide legal
    prose on some platforms such as R3 Corda where an attachment is used to clearly
    define the terms. The terms of the smart contract are recorded and are immutable
    once deployed on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Following are some of the more common reasons to use smart contracts for value
    creation. Not every use case for blockchains and smart contracts will experience
    value in the same way.
  prefs: []
  type: TYPE_NORMAL
- en: Autonomy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trust
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Safety
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Speed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Savings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accuracy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a sales engineer, you should ensure that you have a solid understanding of
    the potential value of smart contracts that an enterprise can benefit from.
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 5.2](#c05-tbl-0002) shows a comparison of traditional contracts versus
    smart contracts. Smart contracts are much more efficient for redundant tasks and
    can provide significant cost savings.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**TABLE 5.2**](#R_c05-tbl-0002): Traditional contracts vs. smart contracts'
  prefs: []
  type: TYPE_NORMAL
- en: '| TRADITIONAL CONTRACTS | SMART CONTRACTS |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1–3 days | Minutes |'
  prefs: []
  type: TYPE_TB
- en: '| Escrow necessary | Escrow may not be necessary |'
  prefs: []
  type: TYPE_TB
- en: '| Expensive | Fraction of the cost |'
  prefs: []
  type: TYPE_TB
- en: '| Physical presence | Virtual presence |'
  prefs: []
  type: TYPE_TB
- en: '| Attorneys required | Attorneys may not be required |'
  prefs: []
  type: TYPE_TB
- en: 'When discussing smart contracts with a customer, you should understand how
    the customer handles, procurement, contracting, or transactions within the organization.
    This will provide insight in how to address the potential benefits and also perhaps
    begin solid discussions on how they provide value. For example, I want to understand
    the customer''s application. Let''s say it''s a U.S.-based company that imports
    tons of products from overseas. I first want to understand how the customer''s
    current legacy solution works and understand the pain points, identify inefficiencies
    and potential savings, and then draw a potential high-level workflow that utilizes
    a smart contract blockchain platform.  #### CHALLENGES TO BLOCKCHAIN ADOPTION'
  prefs: []
  type: TYPE_NORMAL
- en: As a sales-focused engineer, it's important to appreciate why blockchain is
    not the Holy Grail for solving every business and technical problem. Challenges
    to blockchain adoption can be great and for that matter numerous in some enterprise
    organizations. Furthermore, some industries and verticals are traditionally conservative
    in their approach to adopting new technology.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some common challenges that I frequently deal with around
    blockchains and distributed ledgers:'
  prefs: []
  type: TYPE_NORMAL
- en: Industry technology adoption is slow with limited use cases that do not provide
    a valid TCO or ROI.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The organization's technology adoption is slow or may be due to some politically
    related concerns such as job security.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regulatory concerns may not have been clearly identified as the proper use case,
    or the regulatory body may not identify what blockchain solutions are “compliant.”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The migration of services has not been clearly defined and therefore could limit
    adoption. For example, the process of migrating a legacy application to a blockchain
    service does not have a defined migration path.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The hiring environment may be challenging due to the limited skill sets available
    in Ethereum or in a specific geographic location.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When it comes to blockchain adoption, you must realize that at a high level
    it might appear easy to justify a blockchain. However, blockchains are new compared
    to other technologies, and the maturity of the solutions is still not comparable
    to a “centralized” solution such as SQL, an established database SQL.  ### Sales
    Engineering Success'
  prefs: []
  type: TYPE_NORMAL
- en: As an organization that may be considering expertise in the blockchain solutions
    architecture, there are some basic recommended job requirements to be considered
    during the hiring process.
  prefs: []
  type: TYPE_NORMAL
- en: '#### SALES ENGINEERING JOB REQUIREMENTS/RESPONSIBILITIES FOR BLOCKCHAIN SUCCESS'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the common job requirements for a successful blockchain
    sales engineer:'
  prefs: []
  type: TYPE_NORMAL
- en: Marketing responsibilities, such as conferences, trade shows, and booth duty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing and presenting technical presentations that will translate the value
    of the proposed enterprise blockchain services to your prospects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translating the enterprise business requirements into technical requirements
    that will realize the business requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing cost estimates based on technical procurement requirements for RFPs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supporting solutions demos and POCs including setting up demos and POCs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing competitive analysis around major enterprise blockchain platforms
    and providing recommendations for client success
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating content such as solutions whitepapers, technical presentations, technical
    design diagrams, blog posts, and articles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following are some of the common job experiences that a solid sales engineer
    should have:'
  prefs: []
  type: TYPE_NORMAL
- en: Experience selling IT infrastructure, software, and hardware and professional
    services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant hands-on IT networking experience with TCP/IP protocols around integration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining a solid understanding of computer programming development languages,
    software development kits (SDKs), and application programming interfaces (APIs)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Experience with common blockchain development languages such as Python, Go
    (Golang), Node.js, JavaScript, C++, Rust, and Solidity  #### SALES ENGINEERING
    BEST PRACTICES FOR BLOCKCHAIN SUCCESS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a customer-facing sales/solution engineer, you will spend most of your time
    working with a sales team made up of a sales executive, a sales manager, and perhaps
    a territory manager.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following recommended best practices are focused on technical solutions
    selling:'
  prefs: []
  type: TYPE_NORMAL
- en: Become a trusted advisor by establishing credibility with the customer base
    of your organization. Knowing your customer's business requirements as well as
    their business challenges can make all the difference in your success as a sales
    engineer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ask the right questions to comprehend your customer's business requirements
    and then take those requirements and translate them into a technical solution
    that meets or exceeds the customer's requests.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clearly identify with confidence the use cases that bring value to your enterprise
    customer base.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand the blockchain technology enough to discuss the appropriate blockchain
    solution and provide value during demos and proof of concepts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify the stakeholders and appreciate that there are different types of people.
    They may come to decisions in different ways. Do not attempt to be pushy or overly
    objective. Decisions are made sometimes not based on merit but on political issues
    in the organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listen to the customer's point of view and address it appropriately.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Know your customer's procurement process enough to ensure you're providing the
    most efficient solution with the proper responses the customer requires. If you
    are responding to an RFP, then read all the data points before making a response.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Engage talented application developers who understand software architecture
    and can provide insight for the customer around specific blockchain programming
    languages such as Python, Go, JavaScript, and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Perhaps the most overlooked trait is to just be likeable as well as approachable.
    Being a person who can establish a relationship on a personal level can sometimes
    be much more valuable to everyone involved. Being a nerd is great around programmers,
    but discussing other things of interest to the customer such as golf, military
    service, or their alma mater can enhance likeability and be a competitive edge
    for you. Know your customer and show them you care about their organization.  ####
    BLOCKCHAIN COMPETENCY READINESS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When it comes to working with any IT-related platforms or solutions, it's important
    to understand your competencies. Basically, what are your company's areas of expertise?
    What does your company do well, and what could be improved upon?
  prefs: []
  type: TYPE_NORMAL
- en: Generally, if you're an IT vendor, reseller, or VAR, you may have deep expertise
    in IT networking and data storage. However, when it comes to application development,
    your company might not be able to talk about Python programming in an intelligent
    manner.
  prefs: []
  type: TYPE_NORMAL
- en: 'That''s where you need to do one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Obtain talent internally (insourcing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtain talent externally through a partner or through direct hire (outsourcing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Walk away from the opportunity for the appropriate reason
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your sales leadership needs to evaluate a number of blockchain competencies.
    The first phase is blockchain training. It is always the starting point to understand
    the technology before proceeding to design, implement, develop, or even support.
    In my experience, I see application development as being the weakest phase for
    most companies. [Figure 5.10](#c05-fig-0010) provides a workflow of activities
    that solutions based organization should perform to enhance blockchain readiness.
  prefs: []
  type: TYPE_NORMAL
- en: '![Diagram depicting performance, security, and resiliency at three vertices
    of a triangle.](images/c05f010.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**FIGURE 5.10**](#R_c05-fig-0010) Blockchain Competency Readiness'
  prefs: []
  type: TYPE_NORMAL
- en: '**Blockchain Training** As a sales-driven organization, the first thing your
    organization must invest in is training after buy-in from upper management. Identify
    areas including blockchain basics as well as more advanced areas such as smart
    contracts, legal prose, performance, and security. Some organizations take the
    step to educate everyone in the company, while others educate only a few IT professionals
    to be “enabled.”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Opportunity Discovery** It''s all about driving revenue from your customers
    and your prospective customers. Generally, most sales-driven organizations handle
    this phase quite well. You can always count on good account executives to drive
    at least initial contacts. This phase could also take place at your trade shows
    and conventions. A confident sales engineer at a booth can make all the difference
    in engaging technically with attendees. It''s all about identifying blockchain
    opportunities, and your experts must be enabled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Solutions Design** When it comes to designing a blockchain network, it''s
    all about the capabilities and meeting customer requirements. Generally, most
    organizations I have worked with can design a network quite efficiently. When
    it came to cloud computing or blockchain, it was clear that these vendors and
    integrators were lacking in expertise. In this phase, you must be able to create
    a blockchain network, design highly available systems, specify proper blockchain
    platforms, determine deployment approaches, and then ensure that these designs
    meet the customer’s expectations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application Development** This is where the buck stops! Most vendors and
    VARs perform the preceding phases well. When application development comes into
    play, this requires more than the sales team. Your sales organization really needs
    to have application development expertise at the ready to be successful in this
    area. It''s one thing to take a SQL database and upgrade the application hardware,
    but it''s another thing to move from SQL to a blockchain platform. Integration,
    development, performance, and security requirements all need to be addressed.
    Smart contracts and distributed applications need to be discussed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application Support** After the integration and deployment, the blockchain
    application and the customer relationship need to be supported and maintained.
    Generally, most of these responsibilities are turned over to the customer. However,
    your developers and engineers may very well need to be engaged when challenges
    arise, especially during a POC. For example, with R3 Corda there are two options
    to deploying Corda. The options are the open source version and the enterprise
    version. Generally, during a POC you''re supporting the customer and not the vendor,
    which is Corda. When the customer moves to Corda Enterprise, the support, updates,
    and customer management are handled directly by Corda.  ## Summary'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This chapter covered the solutions sales cycles of blockchain engagements and
    how VARs, vendors, and integrators can participate in the blockchain sales cycle.
    Selling blockchain solutions requires a significant interaction with the development
    group. There are numerous roles around blockchain specialization, such as blockchain
    architects, blockchain marketers, blockchain developers, and sales engineers,
    that focus on blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise blockchains will have both functional and nonfunctional requirements.
    It is important that you understand these requirements when scoping a blockchain
    engagement.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchains just like other IT solutions have specific tasks during the sales
    process that you will need to perform or participate in such as requests for proposals
    (RFPs), demos, and proof of concepts (POCs). Blockchain technology has specific
    benefits, such as providing transparency, provenance, and immutability, but also
    specific challenges to its adoption. Discussions with prospective customers and
    clients will be focused on technical requirements for IT networking, blockchain,
    and computer programming. Becoming a trusted advisor by establishing credibility
    with the customer base revolves around knowing your customer's business requirements
    as well as their business challenges—which can make all the difference in your
    success. Lastly, I discussed specific blockchain core competencies such as training,
    solutions design, application development, and best practices.
  prefs: []
  type: TYPE_NORMAL
