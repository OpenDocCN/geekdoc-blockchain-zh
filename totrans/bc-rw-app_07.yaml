- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Decentralized Identities
  prefs: []
  type: TYPE_NORMAL
- en: 7.1 Identity Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Since the advent of the internet, the models for online identity have advanced
    through four broad stages (see [Figure 7.1](#c07-fig-0001); Garg, 2022a):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f001.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.1**](#rc07-fig-0001) Online identity models: Stages of evolution.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.1 Centralized Identity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The first model of digital identity management is extensively being used worldwide.
    It is controlled by a single authority. Each organization issues a digital identity
    credential to users to allow them to access their services. Each user is required
    to have a new digital identity credential for each new organization he/she engages
    with (see [Figure 7.2](#c07-fig-0002)). Aadhaar (UID) is an eloquent testimony
    of this prototype.
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f002.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.2**](#rc07-fig-0002) Centralized identity.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.2 Federated Identity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The second model of digital identity management is called the Federated Model.
    The poor user experience of the first model led third parties to issue digital
    identity certificates that allow users to log into services and other websites.
  prefs: []
  type: TYPE_NORMAL
- en: It is regulated by multiple federated authorities. Microsoft’s Passport (1999)
    was the first to visualize federated identity, which allowed users to utilize
    the same identity on multiple sites. Federated identity permits users to wander
    from site to site under the system. However, each individual site remains an authority.
  prefs: []
  type: TYPE_NORMAL
- en: The best examples of this are “login with Facebook” and “login with Google”
    functionalities. Facebook, Google, and others became the intermediaries. Compa-nies
    outsourced their identity management to major corporations who have an economic
    interest in amassing such large databases of personal data. This, of course, raised
    privacy and security concerns.
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.3 User-centric Identity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is controlled by an individual, across multiple authorities, without requiring
    a federation. This identity model is based on the assumption that every individual
    has the right to control his or her own online identity. A user can theoretically
    register his own Open ID that he can use independently (see [Figure 7.3](#c07-fig-0003)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f003.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.3**](#rc07-fig-0003) User-centric identity.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.4 Self-sovereign Identity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Self-sovereign identity (SSI) is the next step after user-centric identity where
    the user is central to the administration of identity across any number of authorities
    (see [Figure 7.4](#c07-fig-0004)). A self-sovereign identity can be transportable
    and interoperable across multiple locations. Since self-sovereign identity confers
    full authority and control of identity to the users across multiple authorities,
    it is best suited to the contemporary needs of identification and access management.
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f004.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.4**](#rc07-fig-0004) Comparison between the existing model and
    the proposed model.'
  prefs: []
  type: TYPE_NORMAL
- en: This evades the honeypot problem too. There is no centralized storage of digital
    identity that may be subject to breaches (see [Figure 7.5](#c07-fig-0005)). Since
    every individual carries his identity details in his own identity wallet – Interplanetary
    File System (IPFS) – a hacker would have to hack those one billion people individually
    to steal one billion profiles, which is highly improbable.
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f005.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.5**](#rc07-fig-0005) Characteristics of self-sovereign identity.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Blockchain-based Solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Blockchain-based solutions provide an exceptional functionality in resolving
    issues related to the following (see [Figure 7.6](#c07-fig-0006); Garg, 2021a):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f006.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.6**](#rc07-fig-0006) Use cases of blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Identity management (Single ID for lifelong activities)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: E-verification of documents related to education and employment
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Crowd operations (e.g., electronic voting)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Government services, such as health care, education, public distribution, welfare
    schemes, taxation, bill payments, and legal enforcement
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Financial services, such as bank transactions, crowd funding (such as raising
    startup funds), investments, e-banking, credit history, and currency exchange
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Predicting markets and trading (e.g., automated auctions)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Distributed resources and the Internet of Things (such as power generation and
    distribution)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Goods transfer (e.g., supply chain) and remote services delivery (e.g., post,
    travel, and tourism)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 7.3 Identity Management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As discussed in the previous chapter, the current identity management system
    is full of flaws. To bring in an endless list of identities and documents, one
    has to face long queues, lengthy processes, bulk formalities, proxies, and the
    intervention of agents. Moreover, the verification of these documents at each
    level is another dreary task. Even during the online process, each app generates
    or asks for a new ID and password. Users are required to create a unique username
    and password each time they sign up or register on each site. It becomes difficult
    for the users to remember these credentials whenever they log into any online
    platform.
  prefs: []
  type: TYPE_NORMAL
- en: 7.3.1 Current Challenges
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These challenges render traditional identity management difficult and unsafe:'
  prefs: []
  type: TYPE_NORMAL
- en: 7.3.1.1 Absence of Compatibility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The apps on which a typical ID management system works are neither updated on
    a regular basis nor do they comply with the security norms. In addition, diverse
    administrative models for different applications create inconsistency.
  prefs: []
  type: TYPE_NORMAL
- en: 7.3.1.2 Identity Theft
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: According to the Breach Level Index, 4.5 million records are filched daily (Businesswire,
    2018). This happens because people often share their personal information on anonymous
    forums to avail online services. Such online information falls prey to hackers
    because it is stored in a central server.
  prefs: []
  type: TYPE_NORMAL
- en: 7.3.1.3 KYC Onboarding and Weak Authentication Protocols
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The prevalent Know Your Customer (KYC) authentication process is complex and
    quite expensive, as it involves three stakeholders: (i) verification/KYC companies;
    (ii) user; and (iii) the third party for whom the user’s identity is verified.
    Since KYC companies have to meet the requirements of banks, health-care providers,
    immigration officials, etc., they need more resources to expedite their operations.
    To facilitate this, these KYC companies charge a huge amount for verification,
    which is charged to the user in the form of hidden processing fees. Despite this,
    customers have to wait for a long time to get the facility by connecting to third
    parties.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.3.1.4 Lack of Control
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Currently, users have no control over personally identifiable information (PII).
    Users are making compromises with their privacy without being aware of how often
    their data is shared or where it is stored. Therefore, the current identity management
    system needs an immediate overhaul.
  prefs: []
  type: TYPE_NORMAL
- en: From the preceding account, it emerges as a fact that identity should be portable
    and verifiable anywhere, anytime. Also, they need to be made private and secure
    so that they can overcome the shortcomings of existing identity management systems.
  prefs: []
  type: TYPE_NORMAL
- en: There can be a smooth interactive platform between the government and the complex
    bureaucratic system to reduce processing time and cost.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The functionaries in health-care zones – hospitals, clinics, doctors, pharmacies,
    and insurance organizations under health care – should be intertwined on the operational
    front for providing quick and efficient health-care facilities to the patients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The education structure should be systematized and equipped with a robust certification
    and verification process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Banking should be made safer and more user-friendly by avoiding repeated “sign
    ins and sign outs” to access the bank accounts for every transaction.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this context, blockchain technology appears to be a promising tool to address
    identity issues such as inaccessibility, data insecurity, and lack of control.
    It facilitates self-sovereign identity (SSI) and assures users that no third party
    can share their PII without their consent. SSI enables users and trades to store
    their own identity data on their own devices, with the users selecting the pieces
    of information they wish to pass on to validators without relying on a central
    identity data repository. These identities can be created independent of nations,
    states, corporations, or organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Since SSI confers users with full rights and control of identity across any
    authorizations, it is best suited to the contemporary needs of identity and access
    management. It also eliminates the problem of honeypot because there is no centralized
    store of digital identities that could infringe on an individual’s right to privacy.
    Because each person saves his or her identity credentials in his or her own identity
    wallet, such as IPFS, a hacker would have to infiltrate each of those 100 million
    people’s personal devices independently in order to obtain 100 million profiles,
    which appears quite unlikely (Garg, 2019).
  prefs: []
  type: TYPE_NORMAL
- en: 'A broad outline of the process is summarized hereunder:'
  prefs: []
  type: TYPE_NORMAL
- en: Identity metadata can be hashed and stored on a blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information could be available when people need it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity data can be safely and securely recorded and accessed through IPFS
    by authorized parties.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trusted partners would provide a secure and immutable network for creating opportunities
    at the bottom of the pyramid.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.4 Identity Storage | Interplanetary File System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: IPFS uses a peer-to-peer (P2P) network model for file sharing that is decentralized
    and distributed across multiple computers or nodes. Files are split into different
    parts and stored in a network of nodes that track the file by hash. When the parts
    are assembled together, based on their hash value, it recreates the original file.
    The use of Distributed Hash Tables (DHT) for file system storage and retrieval
    is the main innovation for IPFS. It is similar to the BitTorrent protocol but
    differs in the way the file is indicated for sharing. It stores files on a blockchain
    as key value pairs. The data is split into 256 KB chunks and spread across a network
    of nodes or computers. It is efficiently coordinated to enable efficient access
    and lookup between nodes. BitTorrent does not use a blockchain but relies on torrents
    instead of pointing to files. One can have different torrents pointing to the
    same file, but in IPFS, one only needs a hash ID that points to a single file.
  prefs: []
  type: TYPE_NORMAL
- en: Files are not posted to IPFS in the same way that a file is posted to the cloud.
    IPFS uses a secure hash of the file contents for location identification and DHT
    for location resolution. This is done because the resource or object is not available
    on the server but on a decentralized platform. When someone requests data, the
    data is directly represented by its hash ID, not by the actual file. IPFS thus
    provides an abstraction to the actual location of the file, so the actual physical
    location does not matter to the application. This abstraction takes away the complexity
    for the application developers (Garg, 2021b, 2022b).
  prefs: []
  type: TYPE_NORMAL
- en: IPFS differs from location-based storage systems, i.e. the conventional Hyper-Text
    Transfer Protocol (HTTP) family or the centralized namespaces. When a storage
    system is location-based, it tracks the host by a logical addressing scheme (such
    as an IP address) mapped to a user-friendly name. If the host changes its name
    or address, it must also be modified in the name service table.
  prefs: []
  type: TYPE_NORMAL
- en: Content-based address storage requires a content identifier that determines
    the physical location of the file. In this case, the data is accessed, based on
    its cryptographic hash rather than a logical address, almost like a digital fingerprint
    of a file. Regardless of who uploaded the file, where, and when, the network always
    returns the same content based on that hash.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thus, IPFS is a decentralized solution for storing files. The metadata or hash
    of the contents of the document can be stored on the blockchain server with the
    original document stored on the IPFS. This is because blockchain uses two types
    of variables in smart contracts: “memory” and “storage.” The crypto-fuel, or gas,
    required for storage variables is much higher than that required for memory. Significant
    computation is required for changing the state hash, receipt hash, and transaction
    hash if entire documents are put on the blockchain server. Moreover, they will
    have to be processed by all the nodes in the network, leading to huge wastage
    of computation power and resources on blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.4.1 How Does IPFS Access the Documents?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IPFS does not use the HTTP family of protocols or a centralized namespace for
    location identification; instead, it uses a secure hash of the file contents and
    a Distributed Hash Table (DHT) for location resolution. This is done because the
    resource/object is available on a decentralized platform rather than a server.
    In DHT, the key is the content-hash, and the value is the file’s location.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Bitswap protocol is used to incentivize block exchange.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For version-based file management, the Merkle directed acyclic graph is employed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The files to be shared are arranged as objects held by the global network’s
    nodes. The cryptographic hashes of a node’s public key are used to identify it
    (similar to the 20-byte account address in Ethereum blockchain).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.4.2 Transactions Involved in Accessing Documents on IPFS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Peer nodes have a want list and a have list. The imbalance in these lists is
    identified as credit and debit.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tokens are used to represent value. When a node sends a block, it receives credit
    in the form of a token, which it can use to obtain a file from its peer nodes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.4.3 IPFS Commands
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Following is a project made using IPFS and Ethereum Blockchain for document
    storage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Code Cell 7.1**IPFS commands.'
  prefs: []
  type: TYPE_NORMAL
- en: '**App.js logic**'
  prefs: []
  type: TYPE_NORMAL
- en: IPFS is not built on the blockchain; rather it’s designed to work in conjunction
    with the blockchain protocol. Though IPFS uses the same architectural elements
    as the Merkle tree, yet storing data on the blockchain could be expensive. For
    this reason, developers are turning to solutions like IPFS. Such a hypermedia
    protocol and a distributed file system enable computers around the world to store
    and distribute information as part of a vast network. Through a client designed
    by Cloudflare or Protocol Labs, users can store and access data, files, applications
    and websites for free.
  prefs: []
  type: TYPE_NORMAL
- en: To add an IPFS site to a domain, go to the ‘My Domains’ section; register an
    account with UD; and append the IPFS hash. Then, ‘Copy’ and ‘Paste’ the IPFS hash
    provided by the external IPFS upload agency, and click the ‘Save’ button to update
    the records associated with your domain.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Code Cell 7.2**App.js logic.'
  prefs: []
  type: TYPE_NORMAL
- en: Here web3 is used for sending RPC requests from the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '**IPFS**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**For storing the hashes**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Code Cell 7.3 ** Storing the hashes.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.5 Biometric Solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Biometric authentication is integral to the modern technology landscape. There
    are a number of biometric authentication solutions available on smartphones, such
    as thumbprints, fingerprints, hand geometry, voice or facial recognition, thermal
    mapping, eye pattern – retinal scan, iris scan, etc. Biometric data is stored
    and processed with database servers, encrypted tokens or physical tokens. More
    secure devices typically use on-device or on-premises storage of biometric templates
    that ensure authentication of identity without sending any sensitive biometric
    information to a different server or location on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: While the internal process of biometric authentication is technology based,
    it is incredibly easy and quick from the user’s point of view. Keeping a finger
    on a scanner and unlocking an account in seconds is quicker and easier than typing
    a long password consisting of many special characters. Biometric authentication
    requires its input to be present upon authorization. You cannot transfer or share
    biological metrics digitally; the only way most biometric authentication systems
    are used is through physical applications. Biometrics, such as facial patterns,
    fingerprints, iris scanning, and others, are not so easy to replicate with current
    technology. There is a one out of sixty-four billion chance that your fingerprint
    will match exactly with that of someone else. Nevertheless, fingerprint recognition
    technology is accepted by a large number of users. At the same time, it is relatively
    inexpensive and easy to use.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.1 Fingerprint Verification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fingerprint recognition and iris scanning are the most well-known forms of biometric
    security. The identification system based on fingerprint recognition looks for
    features in the line and contour patterns on the surface of the finger. The bifurcation,
    ridge end, and island that make up this line pattern are stored as an image. But
    its biggest disadvantage is that it is an image, and this image can be replicated
    even if it is stored in encoded form. In principle, you could generate code similar
    to this. In addition, some line patterns are so similar that, in practice, this
    can result in high false acceptance rates, where there is room for partial matching.
  prefs: []
  type: TYPE_NORMAL
- en: Some common biometric authentication methods rely on partial information to
    authenticate a user’s identity. For example, a mobile biometric device scans the
    entire fingerprint during the enrollment phase, and converts it into data. However,
    it uses only parts of the prints while verifying identity. This allows artificial
    intelligence to fabricate partial fingerprints to match someone else’s profile
    and can deceive the authentication system.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2 Iris Scan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: During an iris scan, the scanner reads the unique characteristics of an iris
    and converts it into an encrypted (bar) code. Iris scanning is known to be an
    excellent security technique, especially if it is performed using infrared light.
    However, users find it an unpleasant experience to have their eyes scanned. Iris
    scanning provides a high level of security, and more recently, devices have been
    developed, which can read a person’s iris from a distance. Iris or retinal scans
    reduce the incidence of false positives and also achieve high processing speeds.
    However, it is not cost effective and may not give high level of accuracy in cases
    of ophthalmological issues.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.3 Vascular Technology
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In vein recognition technology, finger vein end points and bifurcations are
    captured as an image, digitized, and converted into an encrypted code. Since the
    veins are found under the skin rather than on the surface, they are far more secure
    than fingerprint-based identification. Although these techniques are quicker and
    more convenient, very cold fingers and the dead ones (Raynaud’s syndrome) make
    it extremely difficult to read vein patterns. Perhaps this is the biggest drawback
    and reason why is this technology still relatively unknown.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.4 Palm Vein Pattern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another technique, palm vein pattern recognition, is also based on the identification
    of unique vein patterns. However, it uses more reference points than finger vein
    pattern recognition, and is simple as well as a safe identification method. Access
    control systems based on palm vein pattern recognition are relatively expensive.
    That is why such systems are mainly successful in the government, justice system,
    and banking sectors.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.5 Facial Recognition
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Facial recognition technology analyzes the features of different parts of the
    face to perform verification. This technology has developed rapidly in recent
    years, making it an excellent tool for remote identification. It also allows for
    negative detection or face-out, making it easier to scan for suspicious individuals
    in a crowd.
  prefs: []
  type: TYPE_NORMAL
- en: Facial recognition can be implemented for ID management, using a powerful identity
    management tool like BlockID. BlockID can theoretically be integrated with trust-computing
    technologies on any biometric-capable mobile device, such as a smartphone. It
    can enhance the user experience by streamlining enrollment, login, and authentication
    processes while augmenting security and privacy [(1kosmos.com)](https://1kosmos.com).
    By generating a digital identity from a government-issued credential, it aids
    in precisely mapping citizens’ information to a blockchain-based transaction system.
    BlockID uses trust-computing technologies and biometric-based user verification
    to make sure the data recorded on the blockchain is authentic and has originated
    from reliable sources.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging biometrics, such as a fingerprint, retina scan, face, or voice,
    BlockID eliminates the need for a credential in user transactions and enables
    quick and safe user authentication. As a result, BlockID offers trusted identities
    which provide security against identity theft, fraud, and unauthorized disclosure
    of personal information. However, this technology focuses mostly on the face itself,
    and recognition usually requires a person to look straight into the camera. Additionally,
    the smartphone’s front-facing camera captures the user’s image, which is then
    compared to the owner’s face preserved in the device’s memory. Since we don’t
    employ a depth camera or 3D system for this, the system can be tricked by displaying
    a face that looks like the owner’s or any archived image of the owner.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.1.1 Verification of Government ID
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A government ID can be verified in a number of ways, such as using the integrated
    chip, the barcode written on it, the QR code, or the magnetic strip on the back.
    These can be used with a card reader, scan reader, or barcode scanner to verify
    the information they carry. The information, once validated, won’t need to be
    verified again and again because it will be permanently stored on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: To determine how BlockID can accurately bind or link the image to the data stored
    on the blockchain, it is necessary to examine its security aspects.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.1.2 Verification of a User
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Facial recognition is the most common way for an identity creator to identify
    a user, as every ID card typically includes a photo of the owner’s face. Although
    there may be several other ways to ensure identity, such as biometric data, these
    methods can only authenticate digital identity. The picture of the face is the
    only tool that is found on most identity cards. The identity creator will take
    a picture of the person to be identified and send it to the government database
    through a secure channel. If the matching, through artificial intelligence technology,
    is found to be positive, then the verification becomes successful.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.1.3 Creation of a Digital ID
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To generate a digital ID, the user has to unlock his smartphone and enter the
    government ID and biometrics in it. The identity creator will then generate a
    public and a private key. The private key can be stored in a processor architecture
    of the smartphone, such as AppViewX CERT+ or TrustZone for future authentication
    and/or transactions in the blockchain. The identity maker will now produce a certificate
    referencing the public key and containing all the user data extracted from the
    ID card. This certificate will be useful for the user to verify his identity while
    transacting on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2 System Overview
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'BlockID can be divided into two major components – one that creates the identity
    and the other that is responsible for the management of the identity. There can
    be four types of participants who can play their roles (see [Figure 7.7](#c07-fig-0007)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f007.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.7**](#rc07-fig-0007) Biometric solution – system overview.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2.1 Identify Creator
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A centralized organization, a government agency, or a commercial representative
    appointed to this role is referred to as an identity creator. It assists the user
    in developing a digital identity for usage with the blockchain system. Since this
    authority or representation creates identities for users, its legitimacy is obviously
    undeniable as it will never let users create fictitious digital IDs on their behalf.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2.2 Identity User
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to take part in the transaction, every identity user needs to have
    a digital ID from the identity creator. The identity creation component, the initial
    part of the BlockID, assists the user in developing a digital ID that may be used
    in blockchain-based banking transactions.
  prefs: []
  type: TYPE_NORMAL
- en: For all commercial dealings, the user will go by this identity. Let’s say the
    user is in charge of transferring money at a bank counter. The second component
    (identity management component) of BlockID keeps track of how issued digital IDs
    are used (see [Figure 7.7](#c07-fig-0007)). If the user is not trusted, they can
    attempt to use the digital identity of someone else.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2.3 Identity Manager
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The identity manager can be a group of nodes other than a single identity. No
    single node is trusted as part of identity management; they work together to submit
    identity-related transactions to the blockchain system.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.2.4 Identity Device
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A smartphone is owned by a single user and is used to establish the user’s identity
    to transact on the blockchain. Being tamper-resistant, smartphones always follow
    a pre-determined protocol and store the information faithfully while transacting
    with blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain is a powerful instrument to manage information in cyberspace. To
    unleash the potential of this system, a reliable mapping between the real world
    and the cyberworld is a prerequisite. In this affair, from the security point
    of view, the digital identity of the user, which he receives from any government
    authority, plays a significant role. Blockchain-based identification systems can
    be a reliable tool in bridging this gap.
  prefs: []
  type: TYPE_NORMAL
- en: Although Radio Frequency Identification (RFID) technology or other equivalent
    digital labeling systems can serve this purpose in restricted areas; but for the
    supply chain, mapping is done either manually or using expensive, dedicated equipment.
    In the present state of affairs, when people need a cost-effective solution to
    map the cyberworld, the user can easily transact through the cost-effective blockchain
    system by keeping the digital identity on their own device, such as a smartphone.
    As a result, each access event is associated with a real, verified identity.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.3 Blockchain Identity Protocol
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 7.5.3.1 Creation of Digital ID
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to create a digital ID to be used in a blockchain-based system, the
    user must have a government issued ID and a biometric authentication device, in
    addition to their smartphone (Gao et al., 2018). (see [Code Cell 7.4](#c07-fea-0004)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[**Code Cell 7.4 **](#rc07-fea-0004) Creation of Digital ID.'
  prefs: []
  type: TYPE_NORMAL
- en: If the step 1 becomes successful, certificate is user’s digital identity that
    can be used in the blockchain’s system for other individuals to recognize the
    user.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.3.2 Use of Digital ID
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The user can now use the code (see [Code Cell 7.5](#c07-fea-0005)) that represents
    his digital ID to log in.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[**Code Cell 7.5 **](#rc07-fea-0005) Use of Digital ID.'
  prefs: []
  type: TYPE_NORMAL
- en: A user needs to utilize their smartphone to use their digital identity. Step
    2 shows the workflow of using the digital identity.
  prefs: []
  type: TYPE_NORMAL
- en: Other blockchain users who receive signatures find the relevant certificate
    and utilize embedded public key to verify the signature. These users utilize a
    consensus technique to decide how to add transaction together with signature to
    the blockchain if signature and transaction are compatible.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.3.3 Digital ID Management
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A group of nodes control digital IDs, allowing a small number of nodes to act
    as management nodes. A government agency, for instance, which is adept at checking
    the data entered in the certificate, would function well as a management node.
    They can also aid in more effective decision-making during the consensus-building
    process.
  prefs: []
  type: TYPE_NORMAL
- en: The primary duties of managing digital identities include creating new ones
    while deactivating the ones that already exist. Only when a digital identification
    certificate is integrated into the blockchain system can it be used. The group
    of nodes conduct a consensus mechanism to decide whether to accept a certificate
    into the blockchain after it is created and submitted to the system. If the data
    contained in the certificate is accurate, the system will revoke the current identity
    and reach agreement to adopt it.
  prefs: []
  type: TYPE_NORMAL
- en: A user can send a request transaction to the blockchain to have the related
    certificate revoked if they misplace their smartphone’s private key that is kept
    on their smartphone. One or more groups of nodes must agree with this request
    before they can decide whether to put the repeal in the blockchain. Without assistance,
    a user cannot submit a revocation request since denial-of-service attacks could
    then be launched. Participants won’t recognize signatures produced, using private
    key after the revocation transaction has been added to the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.4 Security Audit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: BlockID solely serves to confirm that the digital ID is being used on the blockchain
    system by its rightful owner. The contact with blockchain systems is handled by
    the four components of digital identity – identity creator, identity manager,
    user, and smartphone. The binding attribute may be compromised, and the attacker
    may be able to access the system using the government ID of another individual
    if any one of the four connections is lost.
  prefs: []
  type: TYPE_NORMAL
- en: With expanded access comes a higher danger of fraud for users. A gadget in the
    wrong hands might approve unauthorized transactions and cause financial harm.
    Hackers enter user accounts to steal money as well as data, which gives them an
    immediate reward. Users need a system that can quickly mitigate all potential
    frauds while still being able to meet the demands of instant access, remote identity
    proof, and user authentication.
  prefs: []
  type: TYPE_NORMAL
- en: In order to defend against attempts to input an illegitimate device or phone
    numbers on a user’s account, BlockID may compare a user’s mobile number to the
    number registered with his or her financial institution. Only users who have a
    registered phone number can pair their device as an authenticator to approve or
    reject transactions, thanks to the BlockID app. The use of binding by BlockID
    lessens fraud, especially in the area of online retail banking where unsuspecting
    consumers can be persuaded to allow unauthorized parties to register the app and
    seize control of the account.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.4.1 Binding
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Binding means the conjugation of the digital identity used in the blockchain
    with its smartphone and its biometric information. The digital identity won’t
    be able to display the right user information if the binding attribute is not
    secured.
  prefs: []
  type: TYPE_NORMAL
- en: Only legitimate users are able to verify themselves using biometric data, such
    as a retinal scan, fingerprint, facial recognition, voice, or thermal mapping
    on their smartphone device through Connections 2 (smartphone) and 3 (biometrics),
    which rely on built-in biometric-based authentication (see [Figure 7.8](#c07-fig-0008)).
    It gives the gadget the ability to sign contracts on behalf of the users.
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f008.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.8**](#rc07-fig-0008) Security audit – binding.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.4.2 Privacy
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The smartphone communicates with the blockchain technology and stores all the
    confidential data. A smartphone’s private key, for example, can be extracted through
    privacy intrusion, and the attacker can use that ID to complete transactions in
    the blockchain system. Even if they are unsuccessful in stealing the confidential
    information after obtaining the smartphone, they can still attempt to change or
    remove it. In such a situation, however, the attacker will be able to disguise
    themself as the user, but they will prevent the legitimate user from using his
    digital identity in the blockchain system.
  prefs: []
  type: TYPE_NORMAL
- en: The smartphone stores and safeguards the private key using a processor architecture
    such as AppViewX CERT+ or TrustZone in a secure environment to maintain its secrecy
    and integrity. The hardware prevents the private key from ever leaving the system
    and only permits approved software to utilize it to create signatures.
  prefs: []
  type: TYPE_NORMAL
- en: 7.5.5 Authentication Protocol
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Biometric authentication is a popular scheme that has been in practice on smartphones
    for many years. In a vast country like India, it is an integral part of the identification
    system. Compared to conventional authentication techniques that require a password
    or passcode to secure, it is more safe and sophisticated. Authentication on smartphones
    requires the installation of a biometric authentication hardware, such as a fingerprint
    tool, a facial recognition sensor, or a speech recognition device. Typically,
    a fingerprint-based authentication architecture consists of sensors, controllers,
    and a secure enclave like AppViewX CERT+ or TrustZone.
  prefs: []
  type: TYPE_NORMAL
- en: Fingerprint-based authentication, which involves three parties – the user, the
    device (smartphone), and the blockchain – can be better understood using a tripartite
    abstract model. The user seeks to utilize his smartphone to approve transactions
    from the blockchain. To do this, the user uploads his fingerprints to the smartphone;
    the processor architecture protects the saved fingerprints, and the uploaded fingerprints
    will now be compared to the stored fingerprints. If the match is found correct,
    the user shall be permitted to use his digital identity to conduct transactions
    on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Any smartphone with a processor that functions with a fingerprint biometric
    sensor can use the AppViewX CERT+ or TrustZone technology. While such technology
    is not implemented in the earlier ARM architecture, the CPU must be ARMv6KZ or
    later in order to be fingerprint-capable. Refactoring a fingerprint image from
    this enclave is virtually impossible. Only when the smartphone needs to confirm
    whether the fingerprint provided by the user matches the fingerprint placed in
    the processor architecture, it uses sensitive biometric data, which is itself
    encrypted.The smartphone throws an FIQ (Fast Interrupt) exception to enter the
    secure mode when a user starts a transaction from the blockchain. In this mode,
    the blockchain application is placed in an isolated environment where malware
    infections are not a concern. The application will now ask the user to submit
    a fingerprint for verification because it is still in security mode. The verification
    will fail if the score returned by the controller after processing the fingerprint
    is less than a predetermined threshold. In this situation, the transaction is
    finished, and the smartphone will return to its default setting. The user is now
    free to approve any further transactions they receive from the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: A basic Swift code for the iPhone has been displayed henceforth (see [Code Cell
    7.6](#c07-fea-0006)). The function verify() will be called to begin verification
    if the device supports biometric ID. The phone will provide an error code (e)
    if the user is unable to authenticate.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[**Code Cell 7.6 **](#rc07-fea-0006) Fingerprint authentication code for iPhone.'
  prefs: []
  type: TYPE_NORMAL
- en: Once an FIQ exception is thrown under the hardware process, the Advanced Peripheral
    Bus Bridge (AXI to APB) will request the I/O controller to enable the fingerprint
    sensor. The processor and controller then collaborate to produce a score. If this
    score is higher than a predetermined threshold, the processor will produce a signature
    that will be posted to the blockchain through a direct register write. The transaction
    can then be verified and completed on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 7.6 Identity Access
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The entire process and technology of identification, authentication, and authorization,
    delegated to a body to access services or a system in any organization is called
    “Identity and Access Management (IAM)”.
  prefs: []
  type: TYPE_NORMAL
- en: IAM involves an administrative set up, where employees make use of software
    or hardware with specific access, privileges, and restrictions for the issue and
    verification of birth certificates, national ID cards, passports, or driver’s
    licenses that allow the user to prove his identity and access specific services
    from the government or service providers (see [Figure 7.9](#c07-fig-0009)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f009.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.9**](#rc07-fig-0009) Identity and access management through blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.6.1 Identity Encryption
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The identity of a person needs to undergo a two-step method, an authentication
    and verification process, to avail services or facility. To prove that the identity
    is of the same person who has approached the office, his name and identifying
    documents are checked by the authentication process. To know whether the documents
    indicating name, address, or passport number submitted by the person are correct
    or not, there is a process of verification. That means that a verifying entity
    confirms that the data that is claimed by the individual as his own is genuine
    or not. This is usually done through the verification of identifying documents.
  prefs: []
  type: TYPE_NORMAL
- en: Certain privacy concerns arise at this stage, such as whether the verifying
    authority should get access to other information from the document when seeking
    to verify only primary information. This is quite debatable as information, more
    often than not, contains extra personal details that tag with the basic information,
    infringing the user’s right to privacy.
  prefs: []
  type: TYPE_NORMAL
- en: 7.6.2 Zero Knowledge Proof
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Identity management can utilize a Zero Knowledge Proof authentication method,
    by which one entity, through encryption, masks details of information received,
    yet proves to another entity that it has the concerned information without having
    to disclose any personal information to the other to support that proof. The verification
    entity, despite zero knowledge, gets convinced of its validity about the information
    supporting the proof. To make it more explicit, an identity management system
    can be compared to a distributed ledger. Like it, each entity of the block in
    the network has the same source of truth about the validity of credentials and
    the information about the attesting authority also, without getting hold of the
    actual data of the identity. This is especially useful when and where the authentication
    entity does not trust the verifying entity but still has to convince it about
    possessing specific information.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, an identity management case with blockchain scenario allows a person
    to state his personal details, to fulfill certain requirements, without the obligation
    to reveal all his actual details (Garg, 2021c).
  prefs: []
  type: TYPE_NORMAL
- en: For example, if the proof of someone’s date of birth has to be verified, the
    verifying entity will verify the signatures of the attesting entity, which issued
    the credential but cannot demand proof of date of birth from the identity owner.
    Hence, the verifier attempts to judge the reliability of the attester to decide
    validation of a proof.
  prefs: []
  type: TYPE_NORMAL
- en: 7.6.3 Revocation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to ensure trustworthiness of the system and eliminate the possibility
    of fraud, credentials are immutable, i.e. once it is issued, no one (not even
    the issuer) can change the information inside the credential. Nevertheless, attributes,
    such as house address, telephone number, number of children, and those credentials
    that have an expiry date, for example a passport or driving license, can change
    over time.
  prefs: []
  type: TYPE_NORMAL
- en: Revocation means deleting or updating a credential. The possibility for an issuer
    to revoke a credential is crucial to an identity infrastructure for the very reason
    that identities are dynamic.
  prefs: []
  type: TYPE_NORMAL
- en: Whenever attributes change, a new credential needs to be issued, and the old
    one needs to be declared invalid. Each credential in the registry has a recent
    status, which indicates either the credential has been revoked (deleted or updated)
    or that the credential is still valid. (Garg, 2021d).
  prefs: []
  type: TYPE_NORMAL
- en: 7.7 Merits of a Proposed System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 7.7.1 Seamless Navigation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Unlike centralized frameworks, access rights are granted according to one interpretation
    of policy and all individuals, including services, are properly authenticated,
    authorized, and audited. Automated identity and access management allows trades
    to operate more professionally by decreasing the effort, time, and cost than that
    required to manage access to those networks manually.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.2 Accessibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users can present the verified identifier in the form of a QR code to establish
    their identity and make access to certain services. The service provider verifies
    the identity by verifying the proof of control or ownership of the presented attestation,
    which has been linked with a decentralized identifier (DID), and the user signs
    the presentation with the private key belonging to that DID. If they match, access
    is granted.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.3 Easy and Secure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MetaMask allows users to run Ethereum dApps on their browser with a secure identity
    vault. It provides a user interface to manage identities on different sites, making
    Ethereum applications more accessible and easier to use for all.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.4 Decentralized Public Key Infrastructure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Blockchain enables decentralized public key infrastructure (DPKI), by creating
    a trusted platform to distribute the asymmetric verification and encryption keys
    of the identity holders. DPKI also enables everyone to create or anchor cryptographic
    keys on the blockchain in a tamper-proof and chronologically ordered way. DPKI
    is an enabler for cases, such as verifiable credentials.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.5 Decentralized Storage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Decentralized storage is one of the core components of secure identity data
    management. In a decentralized structure, credentials are usually stored straight
    on the user’s device or distributed data storage systems like IPFS or identity
    hubs such as u-Port’s Trust Graph or 3Box (Consensys, 2020). Decentralized storage
    solutions diminish an entity’s ability to unauthorized data access in order to
    gain an individual’s confidential information (see [Table 7.1](#c07-tbl-0001)).
  prefs: []
  type: TYPE_NORMAL
- en: '[**Table 7.1**](#rc07-tbl-0001) Comparison between a Typical ID Management
    and a Blockchain ID Management.'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Typical IAM** | **Comparative characters** | **Blockchain IAM** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Honeypots – treasure of information is likely to be attacked by hackers |
    ![](images/c07unf001.png) | Provides anonymity and privacy through permissioned
    blockchain network |'
  prefs: []
  type: TYPE_TB
- en: '| Users use the same password for different sites. If one password is stolen,
    all apps will be compromised with. | Password protection![](images/c07unf002.png)
    | Encrypted public key creates a secure digital reference about the identity of
    the user (a secured alternative to password) |'
  prefs: []
  type: TYPE_TB
- en: '| The use of cloud computing for various purposes has led to the challenge
    of tracking usage of resources across environments. | Cloud Applications![](images/c07unf003.png)
    | May augment existing single sign on solutions or be designed to track activity
    across platforms. |'
  prefs: []
  type: TYPE_TB
- en: '| Multifactor authentication acts as a challenge to manage due to the infrastructure
    requirements to support it. | ![](images/c07unf004.png) | Blockchain technology
    can enable MFA without the need for additional infrastructure |'
  prefs: []
  type: TYPE_TB
- en: '| Introduces a challenge of having a single source of truth, which makes audits
    difficult to conduct. | Centralization![](images/c07unf005.png) | Transactions
    are immutable by nature, they can be used to both store and retrieve data that
    needs to be regulated by various compliance standards. |'
  prefs: []
  type: TYPE_TB
- en: 7.7.6 Manageability and Control
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In centralized identity systems, the entity providing the identity is usually
    accountable for safekeeping of data. However, in a decentralized identity framework,
    security becomes the responsibility of the user, who may determine their own security
    measures or outsource the task to some service app like a password-manager or
    a digital bank vault. Thus, blockchain-powered decentralized identity solutions
    compel hackers to target discrete data stores, which is expensive and cumbersome.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.7 Data Portability
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The European Union General Data Protection Regulation, Article 20 (EU GDPR,
    2018), entitles users to transmit their personal data directly from one controller
    to another, subject to technical feasibility. This right helps to enhance user
    experience, cutting down on the need to reverify their identity across various
    services and platforms. With DIDs and verifiable credentials, it is likely to
    transfer identities that were anchored on one target system to another with ease.
    Data portability reduces friction for the user, while making the sign-up process
    simple, which increases user adoption.
  prefs: []
  type: TYPE_NORMAL
- en: DID data portability also permits reusable credentials, where a user can quickly
    reverify himself to meet the regulatory KYC requirement. This will skip the cumbersome
    identity verification process where a lot of documents are required and checked,
    which would successively curtail customer’s time onboard, avoid drop-out rates,
    and reduce cost in the financial sector.
  prefs: []
  type: TYPE_NORMAL
- en: 7.7.8 Prevention of Identity Theft
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In blockchain identity management, each user can store his identity credentials
    on a digital identity wallet on a device, like his smartphone. Digital identity
    credentials are only valid if they are used from a device that was authorized
    to do so. If under any circumstances, the device is lost, stolen, or stops working,
    the user can use any other authorized device, such as his desktop, laptop, or
    cellphone, to write on the blockchain that the authorization of his device has
    now been revoked.
  prefs: []
  type: TYPE_NORMAL
- en: This would take instant effect and stop anyone from using the digital identity
    credentials on the cellphone. The burglar would not be able to impersonate the
    user, even though he has his passwords, biometrics, or the device because the
    immutable and secure chain (blockchain) would now hold a revocation registry for
    the phone. Thus, the thief will not be able to create new relationships.
  prefs: []
  type: TYPE_NORMAL
- en: In the next step, the existing relationship keys (pairwise connections where
    each of them has a unique key) are to be revoked. This prevents the thief from
    exploring the existing relationships between the device and other people or organizations.
  prefs: []
  type: TYPE_NORMAL
- en: 7.8 Disadvantages of the Proposed System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Despite unlimited prospects, blockchain has had some teething problems, which
    restricts its wide range of applications (see [Figure 7.10](#c07-fig-0010)). Apart
    from these drawbacks, there are some other pitfalls as well, which are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/c07f010.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**Figure 7.10**](#rc07-fig-0010) Disadvantages of blockchain in ID management.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.8.1 Privacy Leakage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the reason that users transact with their private key and public key, without
    any real identity exposure, blockchain helps to preserve privacy to a significant
    extent. Nonetheless, Meiklejohn et al. (2013) and Kosba et al. (2016) have revealed
    that blockchain cannot promise the transactional privacy since the values of all
    transactions and balances for each public key are publicly visible. Besides, Barcelo
    (2014) has shown that a user’s Bitcoin transactions can be linked to disclose
    user’s information. Biryukov, Khovratovich, and Pustogarov (2014) also worked
    out a way to link user pseudonyms to IP addresses even when users are behind the
    firewalls or Network Address Translation (NAT). Employing the given technique,
    each client can be distinctly identified by a set of nodes it connects to, and
    the origin of a transaction can be easily traced through.
  prefs: []
  type: TYPE_NORMAL
- en: 7.8.2 Selfish Mining
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Blockchain is vulnerable to the attacks of conspiring selfish miners. Eyal and
    Sirer (2014) have clearly indicated that the network is at risk, even when a very
    small fragment of the hashing power is used to cheat. In a selfish mining approach,
    selfish miners keep their mined blocks without being broadcasted and reveal the
    private branch in public, only if some requirements are satisfied. As the private
    branch is longer than the current public chain, it would be admitted by all miners.
    Until the private blockchain publishes, honest miners waste their resources on
    a useless branch, and the selfish miners mine their private chain without competitors.
  prefs: []
  type: TYPE_NORMAL
- en: Based on selfish mining, many other attacks have been suggested to show that
    blockchain is not completely secure. In stubborn mining, miners could intensify
    their activity by nontrivially composing mining attacks with network-level eclipse
    attacks (Nayak et al., 2016). The trail stubbornness is one of the persistent
    strategies that miners still mine the blocks even if the private chain is left
    behind.
  prefs: []
  type: TYPE_NORMAL
- en: 7.8.3 Admin Conflicts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In digital identification, besides privacy, blockchain compels a flexible framework
    since the secretarial structures and models vary greatly (Garg, 2021d). For example,
    users sign up to an SSI and data platform to create and register a DID. During
    this process, the user creates a pair of private and public keys. Public keys
    associated to a DID can be stored on-chain in case keys are compromised or are
    rotated for security reasons. Additional data associated with a DID, such as attestations,
    can be fastened on-chain, but the full data itself cannot be stored on-chain to
    maintain scalability and compliance with privacy regulations.
  prefs: []
  type: TYPE_NORMAL
- en: 7.9 Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to overcome flaws, like scalability, privacy leakages, selfish mining,
    and administrative disparities, the technology needs some fine tuning.
  prefs: []
  type: TYPE_NORMAL
- en: 7.9.1 Storage Optimization and Redesign
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Enhancing scalability is the major pain point with blockchain-based ID management,
    but there are two alternatives: storage optimization and redesign. Bruce (2014)
    proposed a novel cryptocurrency scheme, in which the old transaction records are
    removed by the network. It is significant because running a full copy of the ledger
    is rather challenging for a node.'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin-Next Generation was introduced by Eyal et al. (2016) to decouple conventional
    blocks into key blocks for leader election and microblocks for transaction storage.
    The time has been divided into epochs, and the miners must hash to produce a key
    block in each epoch. The node becomes the leader after a key block is formed,
    and the leader is likely to produce microblocks. Bitcoin-NG also extended the
    longest chain strategy in which microblocks carry no weight. This is how the trade-off
    between block size and network security can be resolved by redesigning blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 7.9.2 Privacy Protection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Several methods have been proposed to improve anonymity of blockchain. Miers
    et al. (2013) used zero-knowledge proof (Zerocoin). Miners do not have to validate
    a transaction with a digital signature but to validate coins from the list of
    valid coins. A payment’s origin is separate (unlinked) from transactions to avoid
    analysis of the transaction graph, but it shows the amount and destination. In
    order to resolve this issue, Sasson et al. (2014) came forward with Zerocash,
    wherein the amounts of transaction and the values of coins, held by users, remain
    veiled.
  prefs: []
  type: TYPE_NORMAL
- en: 7.9.3 Random Beacons and Timestamps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To fix the selfish mining problem, Heilman submitted a novel scheme for honest
    miners to choose a branch to follow (Heilman, 2014). With random beacons and timestamps,
    honest miners would select more fresh blocks.
  prefs: []
  type: TYPE_NORMAL
- en: 7.10 Solutions with Hyperledger Fabric
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Hyperledger Fabric (Androulaki, Barger, and Bortnikov, 2018) is intended to
    resolve these issues as it is a framework for implementing blockchains with the
    support for channels. A channel, in Hyperledger Fabric, is simply a ledger that
    is distributed only to a select group of parties.
  prefs: []
  type: TYPE_NORMAL
- en: 7.10.1 Warning Pointers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A red flag indicates when private data is introduced in the blockchain ledger,
    and that ultimately affects the privacy of the users under breaching or hacking
    activity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It violates current privacy regulation (e.g., GDPR; right to be forgotten).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Personal data is not static, and so it is not advisable to put an entry in the
    ledger (attributes are dynamic and can change over time, e.g. phone number, house
    address).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.10.2 Safety Protocols
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In order to have safe, secure, and tamper-proof transactions, the following
    norms must be complied with:'
  prefs: []
  type: TYPE_NORMAL
- en: No personal data should ever be put on a blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only users’ verified credentials, after attestation, should be reflected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public DID or unique identifiers, procured for digital identity and controlled
    by the identity owner, should be retained in the network. DIDs should be permanent
    in nature, unchangeable, and nontransferrable to some other entity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifiers, other than DIDs, like IP addresses and e-mail IDs, can be assigned
    to entities who are supposed to look after the concerned part.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proofs of consent for sharing of content by the identity owner can be kept.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Revocation registers should be indicated in the blockchain, as they are records
    in which the issuers have the right to withdraw a credential.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each DID is resolvable and maintains a DID document or a manual containing trustworthy
    operations of DID with public keys, authentication protocols, and service endpoints.
    Through the DID document, an entity should understand how to use that DID.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized identifiers should be cryptographically verifiable and decentralized
    from the central register. Trust forms the basis of distributed ledger technology,
    as every entity has the same source of truth about the data in the credentials.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New speculation has arisen in recent times, where the individual will possess
    and control his identity, without any dependency on the central service to resolve
    DIDs. They would be able to share information through peer DIDs. It would then
    increase security and the privacy of the owner’s information. Ultimately, they
    will turn digital identities into SSIs as they allow each individual to own and
    control their identity without depending on other parties.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coming Up
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, different identity models were compared which led to the conclusion
    that self-sovereign identity gives the highest degree of freedom and ease of operation
    among different departments. Technical details of blockchain-based ID management
    along, with its merits and demerits, were explained in detail, followed by optimizations
    to solve some of the challenges posed by the technology.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter covers the different types of cryptography and cybersecurity
    aspects of blockchain, including some real-world examples of using blockchain
    in cybersecurity.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Androulaki E, Barger A, and Bortnikov V, 2018\. Hyperledger Fabric: A Distributed
    Operating System for Permissioned Blockchains. Proceedings of the 13th EuroSys
    Conference, NY, 30 (15) 1–30.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Barcelo J, 2014\. User privacy in the public Bitcoin blockchain. Journal of
    Latex Class Files, 6 (1). [https://www.upf.edu/-jbarcelo/papers/20140704_user_privacy_in_the_public_bitcoin_blockchain/paper.pdf](https://www.upf.edu/-jbarcelo/papers/20140704_user_privacy_in_the_public_bitcoin_blockchain/paper.pdf).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Biryukov A, Khovratovich D, and Pustogarov I, 2014\. Deanonymisation of Clients
    in Bitcoin P2P Network. Proceedings of the 2014 ACM SIGSAC Conference on Computer
    & Communications Security, NY US, 15–29.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bruce JD, 2014\. The Mini-blockchain Scheme. [https://cryptochainuni.com/wp-content/uploads/The-Mini-Blockchain-Scheme.pdf](https://cryptochainuni.com/wp-content/uploads/The-Mini-Blockchain-Scheme.pdf).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Businesswire, 2018\. Data Breaches Compromised 4.5 Billion Records in First
    Half of 2018\. [https://www.businesswire.com/news/home/20181008005322/en/Data-Breaches-Compromised-4.5-Billion-Records-in-First-Half-of-2018](https://www.businesswire.com/news/home/20181008005322/en/Data-Breaches-Compromised-4.5-Billion-Records-in-First-Half-of-2018)/
    Accessed on 09 October 2018.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Consensys, 2020\. Blockchain in Digital Identity. [https://consensys.net/blockchain-use-cases/digital-identity/](https://consensys.net/blockchain-use-cases/digital-identity/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: EU GDPR, 2018\. Regulation (EU) 2016/679 of the European Parliament and of the
    Council, L 119/1-88\. [https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679](https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Eyal I, Gencer AE, Sirer EG, and Van Renesse R, 2016\. Bitcoining: A Scalable
    Blockchain Protocol. Proceedings of the 13th USENIX Symposium on Networked Systems
    Design and Implementation, Santa Clara CA, 45–59.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Eyal I and Sirer EG, 2014\. Majority Is Not Enough: Bitcoin Mining Is Vulnerable.
    Proceedings of the International Conference on Financial Cryptography and Data
    Security, Berlin, 436–454.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Gao Z, Xu L, Turner G, Patel B, Diallo N, Chen L, and Shi W, 2018\. Blockchain-based
    Identity Management with Mobile Device. CryBlock, Germany. Garg R, 2019\. Multipurpose
    ID: One Nation – One Identity, Annual Convention – Indian Society for Technical
    Education (ISTE). National Conference on Recent Advances in Energy, Science &
    Technology, 39\. doi:10.6084/m9.figshare.16945078\. [https://www.researchgate.net/publication/337398750_Multipurpose_ID_One_Nation_-_One_Identity](https://www.researchgate.net/publication/337398750_Multipurpose_ID_One_Nation_-_One_Identity).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2021a. Blockchain Based Decentralized Applications for Multiple Administrative
    Domain Networking. BITS – Pilani, KK Birla Goa Campus India, 1–69\. doi :10.13140/RG.2.2.29003.87845\.
    [https://www.researchgate.net/publication/351871690_Blockchain_based_Decentralized_Applications_for_Multiple_Administrative_Domain_Networking](https://www.researchgate.net/publication/351871690_Blockchain_based_Decentralized_Applications_for_Multiple_Administrative_Domain_Networking).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2021b. *Identidades Auto-soberanas*. Ediciones Nuestro Conocimiento,
    Spain, 1–104.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2021c. Blockchain based identity solutions. *International Journal of
    Computer Science & Information Technology* (In Press).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2021d. *Identità Auto Sovrane*. Edizioni Sapienza, Italy, 1–104.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2022a. Distributed ecosystem for identity management. *Journal of Blockchain
    Research*, 1 (1) (In Press).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Garg R, 2022b. Decentralized Transaction Mechanism Based on Smart Contracts.
    3rd International Conference on Blockchain and IoT, Sydney Australia. doi:10.5281/zenodo.5708294\.
    [https://www.researchgate.net/publication/325336102_Decentralized_Transaction_Mechanism_based_on_Smart_Contracts](https://www.researchgate.net/publication/325336102_Decentralized_Transaction_Mechanism_based_on_Smart_Contracts).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Heilman E, 2014\. One Weird Trick to Stop Selfish Miners: Fresh Bitcoins, a
    Solution for the Honest Miner. [https://eprint.iacr.org/2014/007.pdf](https://eprint.iacr.org/2014/007.pdf).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 1kosmos, 2022\. Passwordless MFA with verified identity. [1kosmos.com](http://1kosmos.com).
    Accessed on 11 August 2022.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Kosba A, Miller A, Shi E, Wen Z, and Papamanthou C, 2016\. Hawk: The Blockchain
    Model of Cryptography and Privacy-Preserving Smart Contracts. Proceedings of IEEE
    Symposium on Security and Privacy, San Jose CA, 839–858.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Meiklejohn S, Pomarole M, Jordan G, Levchenko K, McCoy D, Voelker GM, and Savage
    S, 2013\. A Fistful of Bitcoins: Characterizing Payments among Men with No Names.
    Proceedings of the 2013 Conference on Internet Measurement, NY US.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Miers I, Garman C, Green M, and Rubin AD, 2013\. Zerocoin: Anonymous Distributed
    e-Cash from Bitcoin. Proceedings of IEEE Symposium Security and Privacy, Berkeley
    CA, 397–411.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Nayak S, Kumar K, Miller A, and Shi E, 2016\. Stubborn Mining: Generalizing
    Selfish Mining and Combining with an Eclipse Attack. Proceedings of 2016 IEEE
    European Symposium on Security and Privacy, Saarbrucken Germany, 305–320.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Sasson EB, Chiesa A, Garman C, Green M, Miers I, Tromer E, and Virza M, 2014\.
    Zerocash: Decentralized Anonymous Payments from Bitcoin. Proceedings of the 2014
    IEEE Symposium on Security and Privacy, San Jose CA, 459–474.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
