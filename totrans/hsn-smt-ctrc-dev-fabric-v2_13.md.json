["```\n    {\n      \"Version\": \"2012-10-17\",\n      \"Statement\": [\n        {\n          \"Sid\": \"ListNetworkMembers\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n              \"managedblockchain:GetNetwork\",\n              \"managedblockchain:ListMembers\"\n          ],\n          \"Resource\": [\n              \"arn:aws:managedblockchain:*:youraccountId:networks/*\"\n          ]\n        },\n        {\n          \"Sid\": \"AccessManagedBlockchainBucket\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n            \"s3:GetObject\"\n          ],\n          \"Resource\": \"arn:aws:s3:::us-east-1.managedblockchain/*\"\n        },\n        {\n          \"Sid\": \"ManageNetworkResources\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n            \"managedblockchain:CreateProposal\",\n            \"managedblockchain:GetProposal\",\n            \"managedblockchain:DeleteMember\",\n            \"managedblockchain:VoteOnProposal\",\n            \"managedblockchain:ListProposals\",\n            \"managedblockchain:GetNetwork\",\n            \"managedblockchain:ListMembers\",\n            \"managedblockchain:ListProposalVotes\",\n            \"managedblockchain:RejectInvitation\",\n            \"managedblockchain:GetNode\",\n            \"managedblockchain:GetMember\",\n            \"managedblockchain:DeleteNode\",\n            \"managedblockchain:CreateNode\",\n            \"managedblockchain:CreateMember\",\n            \"managedblockchain:ListNodes\"\n          ],\n          \"Resource\": [\n            \"arn:aws:managedblockchain:*::networks/*\",\n            \"arn:aws:managedblockchain:*::proposals/*\",\n            \"arn:aws:managedblockchain:*:youraccountId:members/*\",\n            \"arn:aws:managedblockchain:*:youraccountId:invitations/*\",\n            \"arn:aws:managedblockchain:*:youraccountId:nodes/*\"\n          ]\n        },\n        {\n          \"Sid\": \"WorkWithNetworksForAcct\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n            \"managedblockchain:ListNetworks\",\n            \"managedblockchain:ListInvitations\",\n            \"managedblockchain:CreateNetwork\"\n          ],\n          \"Resource\": \"*\"\n        }\n      ]\n    }\n    ```", "```\nssh -i /path/…/your-aws-private-ket.pem ec2-user@your-ec2-public-ip\n```", "```\naws managedblockchain get-member \\\n--network-id n-UYEFPPMBENFFFEITGTS6IJ6TDY \\\n--member-id m-G4Q5XLRCCJFBTII7PYINITSZH4\n{\n    \"Member\": {\n        \"NetworkId\": \"n-UYEFPPMBENFFFEITGTS6IJ6TDY\",\n        \"Status\": \"AVAILABLE\",\n        \"Name\": \"member1\",\n        \"FrameworkAttributes\": {\n            \"Fabric\": {\n                \"AdminUsername\": \"admin\",\n                \"CaEndpoint\": \"ca.m-g4q5xlrccjfbtii7pyinitszh4.n-\nuyefppmbenfffeitgts6ij6tdy.managedblockchain.us-east-1.amazonaws.com:30002\"\n            }\n        },\n..\n        \"Id\": \"m-G4Q5XLRCCJFBTII7PYINITSZH4\"\n    }\n}\n```", "```\ncurl https://ca.m-g4q5xlrccjfbtii7pyinitszh4.n-uyefppmbenfffeitgts6ij6tdy.managedblockchain.us-east-\n1.amazonaws.com:30002/cainfo -k\n```", "```\n         {\"result\":{\"CAName\":\" m-\nG4Q5XLRCCJFBTII7PYINITSZH4\",\"CAChain\":\"LongStringOfCharacters\",\"Version\":\"1.4.7”,\"errors\":[],\"messages\":[],\"success\"\n:true}\n```", "```\ntelnet CaEndpoint-Without-Port CaPort\n```", "```\nTrying 10.0.0.24...\nConnected to ca.m-g4q5xlrccjfbtii7pyinitszh4.n-uyefppmbenfffeitgts6ij6tdy.managedblockchain.us-east-\n1.amazonaws.com.\nEscape character is '^]'..\n```", "```\n   mkdir -p /home/ec2-user/go/src/github.com/hyperledger/fabric-ca\ncd /home/ec2-user/go/src/github.com/hyperledger/fabric-ca\nwget https://github.com/hyperledger/fabric-ca/releases/download/v1.4.7/hyperledger-fabric-ca-linux-\namd64-1.4.7.tar.gz\ntar -xzf hyperledger-fabric-ca-linux-amd64-1.4.7.tar.gz\n```", "```\n cd /home/ec2-user\n git clone --branch v1.4.7 https://github.com/hyperledger/fabric-samples.git\n```", "```\naws s3 cp s3://us-east-1.managedblockchain/etc/managedblockchain-tls-chain.pem  /home/ec2-\nuser/managedblockchain-tls-chain.pem\n```", "```\n   openssl x509 -noout -text -in /home/ec2-user/managedblockchain-tls-chain.pem\n```", "```\n[ec2-user@ip-10-0-0-235 ~]$ fabric-ca-client enroll \\\n > -u https://admin:Password_1234@ca.m-g4q5xlrccjfbtii7pyinitszh4.n-\nuyefppmbenfffeitgts6ij6tdy.managedblockchain.us-east-1.amazonaws.com:30002 \\\n > --tls.certfiles /home/ec2-user/managedblockchain-tls-chain.pem -M\n```", "```\ncp -r /home/ec2-user/admin-msp/signcerts admin-msp/admincerts\n```", "```\ntouch docker-compose-cli.yaml\n```", "```\n version: '2'\nservices:\n  cli:\n    container_name: cli\n    image: hyperledger/fabric-tools:1.4\n    tty: true\n    environment:\n      - GOPATH=/opt/gopath\n      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\n      - FABRIC_LOGGING_SPEC=info # Set logging level to debug for more verbose logging\n      - CORE_PEER_ID=cli\n      - CORE_CHAINCODE_KEEPALIVE=10\n      - CORE_PEER_TLS_ENABLED=true\n      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/home/managedblockchain-tls-chain.pem\n      - CORE_PEER_LOCALMSPID=m-G4Q5XLRCCJFBTII7PYINITSZH4\n      - CORE_PEER_MSPCONFIGPATH=/opt/home/admin-msp\n      - CORE_PEER_ADDRESS=nd-fmwonqhh6vgexehznnpv4ydzyq.m-g4q5xlrccjfbtii7pyinitszh4.n-\nuyefppmbenfffeitgts6ij6tdy.managedblockchain.us-east-1.amazonaws.com:30003\n    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer\n    command: /bin/bash\n    volumes:\n        - /var/run/:/host/var/run/\n        - /home/ec2-user/fabric-samples/chaincode:/opt/gopath/src/github.com/\n        - /home/ec2-user:/opt/home\n```", "```\n docker-compose -f docker-compose-cli.yaml up -d\n```", "```\nOrganizations:\n   - &Org1\n       Name: m-G4Q5XLRCCJFBTII7PYINITSZH4\n       ID: m-G4Q5XLRCCJFBTII7PYINITSZH4\n       MSPDir: /opt/home/admin-msp\n  ..\nProfiles:\n    OneOrgChannel:\n        Consortium: AWSSystemConsortium\n        Application:\n            <<: *ApplicationDefaults\n            Organizations:\n                - *Org1\n```", "```\ndocker exec cli configtxgen -outputCreateChannelTx /opt/home/mychannel.pb \\\n-profile OneOrgchannel -channelID mychannel \\\n--configPath /opt/home\n```", "```\nsource ~/.bash_profile\n```", "```\ndocker exec cli peer channel create -c mychannel \\\n-f /opt/home/mychannel.pb -o $ORDERER \\\n--cafile /opt/home/managedblockchain-tls-chain.pem --tls\n```", "```\ndocker exec cli peer channel join -b mychannel.block \\\n-o $ORDERER --cafile /opt/home/managedblockchain-tls-chain.pem –tls\n```", "```\ndocker exec cli peer chaincode install \\\n-n mycc -v v0 -p github.com/chaincode_example02/go\n```", "```\n docker exec cli peer chaincode instantiate \\\n-o $ORDERER -C mychannel -n mycc -v v0 \\\n-c '{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\"]}' \\\n--cafile /opt/home/managedblockchain-tls-chain.pem --tls\n```", "```\ndocker exec cli peer chaincode list --instantiated \\\n-o $ORDERER -C mychannel \\\n--cafile /opt/home/managedblockchain-tls-chain.pem --tls\n```", "```\ndocker exec cli peer chaincode query -C mychannel \\\n-n mycc -c '{\"Args\":[\"query\",\"a\"]}'\n```", "```\n> -n mycc -c '{\"Args\":[\"query\",\"a\"]}'\n100\n```", "```\n docker exec cli peer chaincode invoke -C mychannel \\\n-n mycc -c  '{\"Args\":[\"invoke\",\"a\",\"b\",\"10\"]}' \\\n-o $ORDERER --cafile /opt/home/managedblockchain-tls-chain.pem --tls\n```", "```\ndocker exec cli peer chaincode query -C mychannel \\\n-n mycc -c '{\"Args\":[\"query\",\"a\"]}'\n```", "```\ndocker exec cli peer chaincode query -C mychannel \\\n> -n mycc -c '{\"Args\":[\"query\",\"a\"]}'\n90\n```", "```\nInput JSON - {\n    \"channel\": \"verified\",\n    \"chaincode\": \"verifyed\",\n    \"method\": \"insertReceiver\",\n    \"args\": [\n       \"008\",\n       \"Noah\",\n       \"App Dev\"\n    ],\n    \"chaincodeVer\": \"v1\"\n}\n```", "```\nInput JSON - {\n   \"channel\": \"verifyed\",\n    \"chaincode\": \"verifyed\",\n    \"method\": \"queryReceiverById\",\n    \"args\": [\n       \"008\"\n    ],\n    \"chaincodeVer\": \"v1\"\n}\n```"]