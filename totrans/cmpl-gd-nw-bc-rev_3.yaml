- en: Chapter 2\. How the Blockchain Works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![Image result for common blockchain issues](images/image-1.png)'
  prefs: []
  type: TYPE_IMG
- en: The blockchain operates through consensus. This is an agreement from all the
    participants in a blockchain regarding the truth about certain data. Cryptocurrencies
    operate around this method to avoid a single entity from having dominion over
    every decision. Usually, when a transaction has been dispatched, miners will review
    it and validate or discard it in unison.
  prefs: []
  type: TYPE_NORMAL
- en: In traditional systems, a single authority like the government, banks and other
    agents are the ones to review everything and issue the green light. The problem
    with such centralized systems is that they put too much power in a few individuals
    who can abuse it.
  prefs: []
  type: TYPE_NORMAL
- en: Consensus, if not configured properly, can open loopholes that can lead to system
    corruption. For instance, since all you need for your transaction to be valid
    is other miners to confirm your transaction, why not create thousands of miners
    yourself? They, in turn could confirm that someone sent you millions of dollars.
    This would be called a Sybil attack, and may need a good number of pages to describe
    it in full.
  prefs: []
  type: TYPE_NORMAL
- en: CONSENSUS ALGORITHMS
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to avoid all this chaos, legit cryptocurrencies have developed consensus
    mechanisms that govern the above-mentioned problems in a decentralized system:'
  prefs: []
  type: TYPE_NORMAL
- en: Conflict of opposing information—one miner saying one thing and another saying
    something else.
  prefs: []
  type: TYPE_NORMAL
- en: Possibility of creating fake miners who work in your interest and allow you
    to cheat.
  prefs: []
  type: TYPE_NORMAL
- en: Incentive mechanisms to motivate as many people in the system to participate
    in the consensus and not only participating as a user.
  prefs: []
  type: TYPE_NORMAL
- en: 'While there are many more consensus algorithms in the making and they might
    be labeled differently in different cryptocurrencies, these are the three most
    important ones:'
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proof of Work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proof of Importance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The latter is one of the least used so far. It might be adopted more in the
    coming years, but so far Proof of Work has mostly been used. With a Proof of Importance
    consensus algorithm, the participant with the “most importance” gets to say which
    transactions happened and also receives incentives most often. Since the person
    will not be the only participant with importance, it is a probabilistic mix of
    when they have authority and when someone else does.
  prefs: []
  type: TYPE_NORMAL
- en: How importance is established
  prefs: []
  type: TYPE_NORMAL
- en: Different cryptocurrencies have different mechanisms for that, but one factor
    is the length of time someone is part of the system, combined with the number
    of other miners trusting them by opting in to receive information from them. Compare
    it to social media. You are more likely to trust the friend request of someone
    on Facebook that has been there for quite some time already, has a legit looking
    profile, and many of your friends are already connected to this new friend.
  prefs: []
  type: TYPE_NORMAL
- en: It is similar in the world of decentralization when Proof of Importance is used.
    Someone’s importance percentage is based on the value the system decides, which
    assigns how much “voting power” they have, how often they get to go first with
    transaction processing, and how often they are rewarded.
  prefs: []
  type: TYPE_NORMAL
- en: The upside of this system is that, literally, anyone, poor or rich, can achieve
    a high level of importance. The downside is that this system could be gamed by
    simply creating fraudulent participants who then vote for each other, thereby
    creating importance. See it like a fake social media account that people start
    to follow only because many others are following it. Few blockchain algorithms
    are using this mechanism for this reason, and it probably still needs some additional
    features to scale well.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs: []
  type: TYPE_NORMAL
- en: '![Image result for proof of stake](images/image-2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The idea of importance can be taken a step further, where money resembles importance.
    Basically, whoever controls more money in the system has more importance. As you
    might already imagine, this system has a lot of critics, as it begs the question
    of how such a network could be decentralized, if only a few rich accounts share
    all the consensus power. So far, only a few blockchains are using this consensus
    mechanism, but for those that do, it seems to be working well. The risk of one
    large player ruling it all is eminent, but the advantages of this system are on
    the table:'
  prefs: []
  type: TYPE_NORMAL
- en: The mechanism of understanding how much voting power you have is clear by simply
    dividing the amount of money you stake (proof of your money by locking it in a
    special contract for a given period of time), with the total amount staked by
    the community. So, there is the possibility that while someone might have a lot
    of money, they may still not have much voting rights because they are spending
    it on a regular basis and not staking it as proof of his ownership. The math is
    clear and simple. If you were to stake 1,000 coins, for example, and 100,000 coins
    are being staked in total, you have 1% voting power and are expected to get 1%
    of the say and 1% of the rewards.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since the rewards of the transaction system get shared with the stakers, whoever
    put up more will get a larger percentage of the rewards. Therefore, you can calculate
    a much more accurate return on your money on an annual basis, which might be an
    interesting investment opportunity. For example, you know that a blockchain might
    reward you with 5% of your staked-up capital per year. You stake 1,000 coins and
    receive 50 coins every year for taking part in the consensus algorithm. Depending
    on what these coins are worth, this can mean a lot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since money cannot be created out of thin air in a legit blockchain, the possibility
    of fraudulent attackers, as in proof of importance is rather low.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Of course, there are also downsides. One of them, besides the rich getting
    richer, is the risk of forking attacks. Let me give you a short overview: In proof
    of stake, if a blockchain forks (splits), you automatically control the coins
    on both new chains. You just doubled your coins that you can keep staking on either.
    Developers are still looking for good solutions in that regard. This is different
    than proof of work, as here you have to make a decision on which chain you want
    to invest your work into.'
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work, also called POW is the most used algorithm and the oldest of
    them all. It has been adopted by most cryptocurrencies because it has already
    been tested many times and found to be immune to forking attacks amongst other
    things.
  prefs: []
  type: TYPE_NORMAL
- en: In this method, the network will only recognize your worth by looking at your
    work-not the level of importance or how many stacks of money you own. As a miner,
    you will have to recognize transaction, validate it and put it on the block, so
    you can be the first to claim a reward.
  prefs: []
  type: TYPE_NORMAL
- en: COMMON BLOCKCHAIN ISSUES
  prefs: []
  type: TYPE_NORMAL
- en: Scaling
  prefs: []
  type: TYPE_NORMAL
- en: '![Image result for blockchain scalability](images/image-3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Most financial companies, for example, transact around 2,000 transactions per
    second. This is where blockchain technologies still have a major limitation: Since
    every computer in the network needs to keep a record of the entire network, the
    speed of the network is restricted by the speed of the slowest node. Blockchains
    limit the amount of transactions per second to avoid a centralization of the computing
    power by large and strong nodes, which can store and process these larger blocks,
    but also to keep the blockchain’s size from blowing up too fast. Some of the most
    heated discussions in the crypto-community are about the suggested block size
    with its upside being the ability to allow for more Tx/s. However, that brings
    with it the downsides of storage and processing capabilities.'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin for example allows for around 6-7 Transactions per second, Ethereum
    around 15 Tx/s. In Bitcoin, a miner therefore gets around 4,200 puzzle pieces
    to fit every 10 minutes into a puzzle (7 Tx/s * 60s * 10min = 4,200 Tx per block).
    Such a block in Bitcoin takes up 1MB of space. If you wanted to store more Tx
    within a block, you either have to make the size of a transaction smaller (less
    data per Tx), or you increase the blocksize (more data stored). Segragation Witness
    (SegWit) solves that partially from the size angle.
  prefs: []
  type: TYPE_NORMAL
- en: SegWit ( Segragation Witness
  prefs: []
  type: TYPE_NORMAL
- en: In late 2017, Bitcoin introduced an update called Segregated Witness, in short—SegWit—to
    enhance Bitcoin’s scaling. If you remember the puzzle piece analogy of a cryptocurrency
    transaction, you remember that half the puzzle is the transaction information
    itself and the other half is the signature of the private key. With the SegWit
    update, the transactions got structured in a different manner, where now the signature
    was taken away and stored “segregated.”
  prefs: []
  type: TYPE_NORMAL
- en: Instead of needing an area of the puzzle piece to store the signature, which
    is only needed for verification and not for actual information, it can now be
    stored differently, for example as a type of color on the piece itself. That’s
    why it is called a “segregated witness.” Since the puzzle pieces are now only
    half the original size (the signature is not taking up space anymore), twice as
    many SegWit transactions can be stored in the same 1 MB block (around 8,400 SegWit
    puzzle pieces fit into a complete puzzle).
  prefs: []
  type: TYPE_NORMAL
- en: '![C:\Users\MUSMART\Downloads\bitcoin-3137150_1920.jpg](images/image-3.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: For the user, SegWit is a soft-fork, meaning they can still send the old transaction
    format, just like they can use an older version of WhatsApp and newer versions
    can still understand them. “Old” Bitcoin addresses for example start with a “1,”
    SegWit addresses start with a “3.” It will take a few more months until the full
    storage capabilities are being utilized, and of course, the blocksize and the
    scaling debate of Bitcoin will continue.
  prefs: []
  type: TYPE_NORMAL
