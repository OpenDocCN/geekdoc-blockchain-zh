- en: © The Author(s), under exclusive license to Springer Nature Switzerland AG 2022X.
    Yi et al.Blockchain Foundations and ApplicationsSpringerBriefs in Applied Sciences
    and Technology[https://doi.org/10.1007/978-3-031-09670-9_5](https://doi.org/10.1007/978-3-031-09670-9_5)
  prefs: []
  type: TYPE_NORMAL
- en: 5. Blockchain Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Xun Yi^([1](#Aff6) [ ](#ContactOfAuthor6)), Xuechao Yang^([1](#Aff6) [ ](#ContactOfAuthor7)),
    Andrei Kelarev^([1](#Aff6) [ ](#ContactOfAuthor8)), Kwok Yan Lam^([2](#Aff7) [ ](#ContactOfAuthor9))
    and Zahir Tari^([1](#Aff6) [ ](#ContactOfAuthor10))(1)School of Computing Technologies,
    RMIT University, Melbourne, VIC, Australia(2)School of Computer Science and Engineering,
    Nanyang Technological University, Singapore, SingaporeXun Yi (Corresponding author)Email:
    [xun.yi@rmit.edu.au](mailto:xun.yi@rmit.edu.au)Xuechao YangEmail: [xuechao.yang@rmit.edu.au](mailto:xuechao.yang@rmit.edu.au)Andrei KelarevEmail:
    [andrei.kelarev@gmail.com](mailto:andrei.kelarev@gmail.com)Kwok Yan LamEmail:
    [kwokyan.lam@ntu.edu.sg](mailto:kwokyan.lam@ntu.edu.sg)Zahir TariEmail: [zahir.tari@rmit.edu.au](mailto:zahir.tari@rmit.edu.au)'
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Blockchain establishes new advanced prospects for the business world and industrial
    applications [[61](#CR61)]. These new opportunities help to reinforce, optimize,
    secure and streamline many existing business and industrial processes. In addition,
    they enable the creation of new business models that were impossible to develop
    a few years ago. These new business models impact many industrial sectors such
    as finance, health care, manufacturing, and logistics. The Internet unlocked the
    door for the creation of many business and service models. Previously existing
    protocols have emphasized serious concerns regarding secure registration and assurances
    of agreements among different parties involved in financial or business arrangements.
    The creation of the blockchain technology has enabled businesses and individuals
    to establish and secure the agreements that they can achieve among themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain as a technology combines the advantages of both peer-to-peer networks
    and cryptographic algorithms to ensure the validity of the achieved agreements.
    None of the participating entities can change an approved and registered transaction
    without involving the other participating entities. This feature is well suited
    for conducting different business agreements among groups of entities from different
    places. Blockchain can also preserve the order of events and maintain the validity
    of the logged transactions over time. Since no one can individually alter any
    of the recorded transactions in the ledger, it is practically impossible to forge
    records or repudiate the agreements. As a result, many industries and businesses
    have been considering the use of blockchain applications. More research is being
    carried out to effectively apply blockchain in various domains.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Blockchain-Based Electronic Voting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For successful introduction of the electronic voting, it is very important to
    establish trust in the online election procedure and in the validity of the outcomes
    of an election. In order to solve these problems, the paper [[66](#CR66)] proposed
    a practical ranked choice online voting system where every user can verify the
    validity of the outcomes. The system introduced in [[66](#CR66)] combines the
    use of a public blockchain and the Intel Software Guard Extensions (SGX) to ensure
    that all standard requirements for voting systems are met. At the same time, it
    provides protection against malicious adversaries with administrative capabilities.
    In addition, the protocol proposed in [[66](#CR66)] achieves an end-to-end voter
    verification in the election.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1 Background
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is well known that electronic voting (e-voting) systems are convenient, flexible
    and can be made resilient. They enable all voters to cast their ballots remotely
    without attending any particular voting locations. They can be organized during
    a quarantine introduced in the event of a global pandemic. It is very important
    to establish trust of the public in the validity of the outcomes of electronic
    elections. To solve this problem, the paper [[66](#CR66)] proposed a practical
    ranked choice online voting system where every user can independently verify the
    outcomes of the tallying procedure and establish that the cast ballots were stored
    correctly.
  prefs: []
  type: TYPE_NORMAL
- en: A number of previous e-voting protocols relied on a trustworthy authority to
    record and tally all the votes. Typically, this distributed trust among several
    entities by using threshold encryption (for instance, see [[2](#CR2)]). However,
    previous approaches remained vulnerable to collusion among the participants.
  prefs: []
  type: TYPE_NORMAL
- en: A self-tallying protocol makes tallying an open procedure. Self-tallying protocols
    were investigated in [[21](#CR21), [30](#CR30)]. A decentralized self-tallying
    voting system using blockchain technology was studied in [[24](#CR24)]. It involved
    two rounds of voting and required each voter to submit twice before the voting
    is complete. An improved system based on [[24](#CR24)] was created in [[20](#CR20)]
    using bilinear maps. However, both [[20](#CR20), [24](#CR24)] can only support
    “yes” or “no” options in an election. All these previous systems suffer from the
    adaptive and abortive issues. The adaptive issue occurs, when the knowledge of
    the tally of the previous votes can be used by the last voter to adjust their
    vote. The abortive issue is the ability of a voter to disrupt the election by
    not submitting a vote. A method of preventing the adaptive issue was proposed
    in [[21](#CR21), [30](#CR30)]. It relies on an election authority, which can cast
    a final vote that is excluded from the tally. This raises the issue of trust in
    the authority. A method for preventing the abortive issue was proposed in [[29](#CR29),
    [30](#CR30)]. Their method used a recovery round of additional voting.
  prefs: []
  type: TYPE_NORMAL
- en: The most recent self-tallying voting systems were proposed in [[67](#CR67),
    [68](#CR68)]. These systems have serious weaknesses, and therefore, new approaches
    are required. The self-tallying stage of [[68](#CR68)] suffers from the abortive
    issue—it requires all voters to participate. Besides, the protocol of [[68](#CR68)]
    is slow, since it includes computationally expensive zero-knowledge proofs in
    each vote. The protocol of [[67](#CR67)] is also expensive, because it relies
    on additional communication and every vote is encrypted with a time-consuming
    cryptosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Later on, [[66](#CR66)] proposed a new e-voting protocol combining the use of
    the Blockchain Smart Contract and Intel SGX. The proposed protocol guarantees
    secure operation of the system protecting against malicious adversaries with administrative
    access to the operating systems of some of the SGX-enabled computers. The system
    in [[66](#CR66)] allows each voter to rank different candidates rather than voting
    just for one. The protocol helps each voter to generate and encrypt their vote
    without being spied on or eavesdropped by other users, system administrators,
    or malicious attackers. In particular, the smart contract ensures that no one
    can modify the data already confirmed on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Further, we describe the blockchain-based e-voting system of [[66](#CR66)] in
    detail.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2 System Design and Protocols
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The system proposed in [[66](#CR66)] assumes that each voter directly communicates
    with the Intel SGX to register or vote after establishing a secure communication
    via remote attestation with the SGX. Then, the SGX processes the data received
    from voters and encrypts cast votes by using the corresponding keys of the voters.
    After that, the SGX only releases the fingerprint or hash value of each encrypted
    vote to the public blockchain via the voting smart contract. Finally, the SGX
    releases all encrypted votes to the public bulletin board after election deadline,
    where the tallied results can be computed by all voters.
  prefs: []
  type: TYPE_NORMAL
- en: There are *five types of participants* in the system model listed below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Voter**. A voter is registered and submits a vote to SGX after remote attestation.
    A malicious voter may wish to submit an invalid vote, or submit multiple votes,
    or submit nothing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Election organization**. The election organization is responsible for initializing
    the SGX, the election website and smart contract, etc. A malicious election organizer
    or administrator may wish to reveal sensitive information (e.g. the identity or
    voting preference) from any submission.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intel SGX**. The SGX is completely trusted by all voters, and the data inside
    the enclave cannot be read or modified even by the system administrators of the
    computers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Election website**. The election website displays all information sent from
    the SGX. The paper [[66](#CR66)] assumes that no one can modify any published
    content on the website.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain and smart contract**. The public blockchain system is completely
    trusted. The smart contract on the blockchain is readable publicly and can never
    be modified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The system architecture is shown in Fig. [5.1](#Fig1).![](../images/516136_1_En_5_Chapter/516136_1_En_5_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: An illustration of the proposed decentralized web voting system, where Smart
    contact and public blockchain consists of the voter, smart contract, and publicly
    stored, then the Election organization with the selected authorities by voters,
    Intel S G X, and election website.
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5.1
  prefs: []
  type: TYPE_NORMAL
- en: Architecture of the proposed decentralized web voting system using Intel SGX
    and smart contract (blockchain)
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.1 Initialization Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: At the beginning of the initialization stage, the election administrator should
    define all voting rules including the list of candidates, the valid voters, and
    the voting policy. The administrator then deploys the corresponding voting smart
    contract on a trusted public blockchain (e.g. Ethereum) and deploys the corresponding
    voting programs inside the SGX enclave.
  prefs: []
  type: TYPE_NORMAL
- en: All voters and candidates agree on (*G*, *g*), where *G* denotes a finite cyclic
    group of prime order *q* in which the decisional Diffie–Hellman (DDH) problem
    is intractable, and *g* is a generator in *G*.
  prefs: []
  type: TYPE_NORMAL
- en: Then, the SGX generates key pairs (![$$\mathsf {sk}_{c_j}, \mathsf {pk}_{c_j}=g^{\mathsf
    {sk}_{c_j}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq1.png))
    for each election candidate inside the SGX enclave and releases all candidates’
    public keys ![$$\mathsf {pk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq2.png)
    (including the public key of SGX ![$$\mathsf {PK}_{sgx}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq3.png))
    to the public blockchain via the deployed voting smart contract.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.2 Voter Registration Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Only successfully registered voters establish a secure channel with the SGX
    via remote attestation and keep the established session key secret at all times.
    The paper [[66](#CR66)] treats the secret session key as the voter’s voting secret
    key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq4.png).
  prefs: []
  type: TYPE_NORMAL
- en: Once a voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq5.png)
    has registered to the SGX successfully, the SGX uses the identity ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq6.png)
    of the voter and the secret session key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq7.png)
    of the voter to compute a pseudoname ![$$\mathsf {pid}_{v_i} = \mathsf {Hash}(v_i||\mathsf
    {sk}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq8.png).
    Only the voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq9.png)
    and the SGX can determine the real identity of the voter from the pseudoname ![$$\mathsf
    {pid}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq10.png),
    because only the voter and the SGX know the secret ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq11.png).
    The public key of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq12.png)
    is also generated inside the SGX enclave as ![$$y_{v_i} = g^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq13.png).
    The SGX releases the triplet ![$$(\mathsf {pid}_{v_i}, y_{v_i},\mathsf {Sig}_{sgx})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq14.png)
    on the public blockchain, where ![$$\mathsf {pid}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq15.png)
    is the voter’s pseudoname, ![$$y_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq16.png)
    is a public value of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq17.png),
    and ![$$\mathsf {Sig}_{sgx}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq18.png)
    is the digital signature of the SGX. Since the public key ![$$\mathsf {PK}_{sgx}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq19.png)
    of SGX is stored on the blockchain in the initialization stage, the smart contract
    can easily verify that the data is sent from the SGX. If the verification of ![$$\mathsf
    {Sig}_{sgx}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq20.png)
    confirms that the data was sent by the SGX, then ![$$\langle \mathsf {pid}_{v_i},
    y_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq21.png)
    is stored on the blockchain. The received ![$$\mathsf {pid}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq22.png)
    and ![$$y_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq23.png)
    are not saved again if the same ![$$\mathsf {pid}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq24.png)
    has already been recorded on the list. The voter registration procedure is shown
    in Algorithm [5.6](#Figa).![](../images/516136_1_En_5_Chapter/516136_1_En_5_Figa_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: An algorithm on registration of remote attestation. It has four stages namely,
    Voter v subscript one, S G X, Smart contract, and Voter v subscript one. Each
    stage has few computation steps.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.3 Vote Casting Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The voters cast their votes by assigning different scores to different candidates.
    The winner is the candidate who receives the highest total score. These scores
    are the secret voting preferences of each voter, and so they must be encrypted
    before releasing them to the public.
  prefs: []
  type: TYPE_NORMAL
- en: Each voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq25.png)
    begins by defining the scores ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq26.png)
    assigned by ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq27.png)
    to candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq28.png).
    When all scores ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq29.png)
    are defined by the voter, the voter sends all scores to the SGX via the secure
    communication channel using the secret session key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq30.png),
    which was generated during the remote attestation.
  prefs: []
  type: TYPE_NORMAL
- en: After the SGX receives them, the corresponding session key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq31.png)
    of the voter can be found on the list ![$$\langle v_i, x_{v_i}, y_{v_i}\rangle
    $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq32.png). It can
    be used to decrypt all ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq33.png)
    inside the SGX enclave. If they are legitimate scores in the required range of
    values depending on the voting rules (each score cannot be less than 0, the sum
    of all scores must be equal to a fixed number, etc.), then each assigned score
    ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq34.png)
    is encrypted using the following encryption scheme![$$\begin{aligned} y^{c_j}_{v_i}
    = \frac{\prod _{k=1}^{i-1} y_{v_k} }{\prod _{k=i+1}^{n_v} y_{v_k} \cdot \mathsf
    {pk}_{c_j}} \end{aligned}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_Equ1.png)(5.1)where
    [[66](#CR66)] use ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq35.png)
    to denote the voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq36.png)’s
    public voting key for the particular candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq37.png).
    The updated ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq38.png)
    is still publicly computable since the computation just uses an extra ![$$\mathsf
    {pk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq39.png)
    of the candidate and it is a public value.Then each ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq40.png)
    is encrypted by using the secret key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq41.png)
    of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq42.png)
    and the particular voting public key ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq43.png),
    where the whole cast vote ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq44.png)
    can be presented as![$$\begin{aligned} \mathsf {Vote}_{v_i} = \begin{bmatrix}
    E(p^{c_1}_{v_i}, y^{c_1}_{v_i}, x_{v_1})\\ \vdots \\ E(p^{c_{n_c}}_{v_i}, y^{c_{n_c}}_{v_i},
    x_{v_i}) \end{bmatrix} = \begin{bmatrix} (y^{c_1}_{v_i})^{x_{v_i}} \cdot g^{p^{c_1}_{v_i}}\\
    \vdots \\ (y^{c_{n_c}}_{v_i})^{x_{v_i}} \cdot g^{p^{c_{n_c}}_{v_i}} \end{bmatrix}
    \end{aligned}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_Equ2.png)(5.2)where
    a ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq45.png)
    is treated as a container of multiple encrypted scores ![$$E(p^{c_i}_{v_i}, y^{c_i}_{v_i},
    x_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq46.png)
    that are assigned to different candidates by the voter. By using the updated Eqs. [5.1](#Equ1)
    and [5.2](#Equ2), each score ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq47.png)
    is encrypted using different voting public key ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq48.png)
    and each ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq49.png)
    is only used once. The computed ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq50.png)
    is stored as ![$$\langle v_i, x_{v_i}, y_{v_i}, \mathsf {Vote}_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq51.png)
    inside the SGX enclave, where the list is expanded from the list ![$$\langle v_i,
    x_{v_i}, y_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq52.png)
    that is generated in the registration stage as explained in Sect. [5.2.2.2](#Sec6).
    Finally, the hash value of ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq53.png)
    is computed as ![$$\mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq54.png)
    and is sent as ![$$\langle \mathsf {pid}_{v_i}, \mathsf {Hash}(\mathsf {Vote}_{v_i}),
    \mathsf {Sig}_{sgx} \rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq55.png)
    to the blockchain (via the voting smart contract) along with the pseudoname and
    a signature.As in the registration stage, the smart contract verifies the ![$$\mathsf
    {Sig}_{sgx}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq56.png)
    as it can only accept data from the SGX. If the signature is valid, ![$$\mathsf
    {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq57.png)
    is stored in the list ![$$\langle \mathsf {pid}_{v_i}, y_{v_i}, \mathsf {Hash}(\mathsf
    {Vote}_{v_i})\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq58.png)
    (appending the list ![$$\langle \mathsf {pid}_{v_i}, y_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq59.png),
    see Sect. [5.2.2.2](#Sec6)). Everyone is able to see the update on the public
    blockchain. The processing procedure of the voting stage is shown in Algorithm [5.7](#Figb).![](../images/516136_1_En_5_Chapter/516136_1_En_5_Figb_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: An algorithm on vote submission. It has three stages namely, Voter v subscript
    one, S G X, and Smart contract. Each stage has its computation steps listed respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.4 Self-Verification Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: According to Algorithm [5.7](#Figb), ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq60.png)
    consists of multiple encrypted assigned scores. Each encrypted score has the form
    ![$$E(p^{c_j}_{v_i}, y^{c_j}_{v_i}, x_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq61.png).
    Although the ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq62.png)
    is computed inside the SGX enclave, the voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq63.png)
    also knows all the necessary parameters to re-compute it as ![$$\mathsf {Vote}'_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq64.png).
    The voter knows all assigned scores ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq65.png),
    the public voting key ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq66.png)
    computed via Eq. [5.1](#Equ1) for different candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq67.png),
    and his/her own secret session key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq68.png).
    Then, the voter just needs to find the ![$$\mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq69.png)
    that is stored on the public blockchain by locating his/her pseudoname ![$$\mathsf
    {pid}_{v_i} = \mathsf {Hash}(v_i||x_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq70.png)
    from the list ![$$\langle \mathsf {pid}_{v_i}, y_{v_i}, \mathsf {Hash}(\mathsf
    {Vote}_{v_i})\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq71.png)
    on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, the voter’s submission can be verified by comparing the ![$$\mathsf {Hash}(\mathsf
    {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq72.png)
    on the blockchain with the re-computed ![$$\mathsf {Hash}(\mathsf {Vote}'_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq73.png).
    The self-verification procedure is shown in Algorithm [5.8](#Figc).![](../images/516136_1_En_5_Chapter/516136_1_En_5_Figc_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: An algorithm on self-verification of hash by blockchain. The voter v subscript
    one, has a series of computations to estimate the success and failure of the verification.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.5 Votes Releasing Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When all ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq74.png)
    are submitted, it also means that all fingerprints ![$$\mathsf {Hash}(\mathsf
    {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq75.png)
    are stored on the public blockchain. Once the deadline of the election has passed
    and no more vote is acceptable, the SGX can find all registered voters who have
    not submitted valid votes and can vote for them by computing their neutral dummy
    votes.
  prefs: []
  type: TYPE_NORMAL
- en: The dummy vote does not affect the election outcome. The computation of a dummy
    vote is the same as a normal vote, but it contains only zero scores ![$$p^{c_j}_{v_i}
    = 0$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq76.png). Therefore,
    it looks as follows (see Algorithm [5.7](#Figb)):![$$\begin{aligned} \mathsf {Vote}^{dummy}_{v_i}
    = \begin{bmatrix} E(0, y^{c_1}_{v_i}, x_{v_i})\\ \vdots \\ E(0, y^{c_{n_c}}_{v_i},
    x_{v_i}) \end{bmatrix} = \begin{bmatrix} (y^{c_1}_{v_i})^{x_{v_i}}\\ \vdots \\
    (y^{c_{n_c}}_{v_i})^{x_{v_i}} \end{bmatrix} \end{aligned}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_Equ3.png)(5.3)Then
    the SGX sends ![$$\mathsf {pid}_{v_i}, \mathsf {Hash}(\mathsf {Vote}^{dummy}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq77.png)
    to smart contract in the same way as this is done for all normal ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq78.png),
    see Algorithm [5.7](#Figb). However, only the SGX knows if a ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq79.png)
    is dummy or not. For all other voters, they cannot recognize which dummy votes
    have been added.
  prefs: []
  type: TYPE_NORMAL
- en: After the submission of all dummy votes, the fingerprints ![$$\mathsf {Hash}(\mathsf
    {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq80.png)
    of these votes are also stored in the public blockchain. Then the SGX releases
    all real cast votes ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq81.png)
    as a list ![$$\langle \mathsf {pid}_{v_i}, \mathsf {Vote}_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq82.png)
    on the election website, and everyone can see all ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq83.png)
    from the website and verify each of them by using the corresponding fingerprint
    of the list ![$$\langle \mathsf {pid}_{v_i}, y_{v_i}, \mathsf {Hash}(\mathsf {Vote}_{v_i})\rangle
    $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq84.png) on the
    blockchain, but the identity of the corresponding voters remains hidden behind
    the pseudoname.
  prefs: []
  type: TYPE_NORMAL
- en: The correctness and integrity of each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq85.png)
    can be guaranteed because the fingerprint of the ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq86.png)
    is immutable in the blockchain, and each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq87.png)
    can be easily verified by using the ![$$\mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq88.png)
    to make sure that none of ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq89.png)
    is modified after submission. As a result of the votes releasing stage, all ![$$\mathsf
    {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq90.png)
    (including the dummy votes if there are any) are published on the election website
    as a list ![$$\langle \mathsf {pid}_{v_i}, \mathsf {Vote}_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq91.png).
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.6 Self-tallying Stage
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'After the votes releasing stage, all the ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq92.png)
    are released on the election website, and each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq93.png)
    is computed by using Eqs. [5.1](#Equ1) and [5.2](#Equ2). The sum of all ![$$\mathsf
    {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq94.png)
    can be computed by applying the homomorphic addition property. However, Eqs. [5.1](#Equ1)
    and [5.2](#Equ2) use all public keys ![$$\mathsf {pk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq95.png)
    of candidates to make all voting public keys ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq96.png).
    This means that the secret keys ![$$\mathsf {sk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq97.png)
    of all candidates have to be used during the self-tallying procedure. Thus, before
    the self-tallying starts, the SGX computes a “candidate vote” in order to enable
    everyone to compute the final tallied results. The candidate vote is denoted by
    ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq98.png).
    It is computed by using all ![$$\mathsf {sk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq99.png)
    as follows:![$$\begin{aligned} \mathsf {Vote}_{can} = \begin{bmatrix} E(0, \prod
    _{i=1}^{n_v} y_{v_i}, \mathsf {sk}_{c_1})\\ \vdots \\ E(0, \prod _{i=1}^{n_v}
    y_{v_i}, \mathsf {sk}_{c_{n_c}}) \end{bmatrix} \end{aligned}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_Equ4.png)(5.4)The
    ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq100.png)
    is also published on the election website, which can be accessed by everyone.
    The candidate vote ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq101.png)
    can be processed in the same way as a normal ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq102.png):
    the fingerprint ![$$\mathsf {Hash}(\mathsf {Vote}_{can})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq103.png)
    can be published on the blockchain, and then it can be even published on the election
    website.When all ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq104.png)
    and ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq105.png)
    are ready, then every interested participant can perform self-tallying by multiplying
    all ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq106.png)
    and ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq107.png)
    as follows:![$$\begin{aligned} \begin{bmatrix} g^{p_{c_1}}\\ \vdots \\ g^{p_{c_{n_c}}}
    \end{bmatrix} = \prod ^{n_v}_{i=1} \mathsf {Vote}_{v_i} \cdot \mathsf {Vote}_{can}
    \end{aligned}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_Equ5.png)(5.5)where
    ![$$p_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq108.png)
    denotes the total tallied scores of candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq109.png).
    Finally, the winner of the election can be determined by comparing ![$$p_{c_1},
    \ldots , p_{c_{n_c}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq110.png)
    from ![$$g^{p_{c_1}}, \ldots , g^{p_{c_{n_c}}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq111.png).
    To save the computation cost, a precomputed computed results table can be prepared
    by the election organization and published on the election website. Everyone can
    easily find each ![$$p_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq112.png)
    from ![$$g^{p_{c_j}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq113.png)
    rather than compute ![$$g^1, g^2, \cdots $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq114.png)
    one by one to find the ![$$p_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq115.png).
    The self-tallying procedure is shown in Algorithm [5.9](#Figd).![](../images/516136_1_En_5_Chapter/516136_1_En_5_Figd_HTML.png)'
  prefs: []
  type: TYPE_NORMAL
- en: An algorithm on self-tallying of votes. The computation steps include those
    of S G X and Voter v subscript one.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.3 Security Analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following security requirements are essential for the design of all self-tallying
    web voting systems: (a) eligibility of voters, (b) uniqueness of submitted votes,
    (c) privacy, (d) integrity, (e) anonymity, (f) correctness, (g) end-to-end vote
    verifiability, (h) no abortive issue, (i) no adaptive issue. The following assumptions
    are used in the security analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: The SGX is trusted and regarded as secure. All programs that are deployed inside
    SGX enclaves are agreed on by all parties before the election commences (and can
    be made open-source on the election website, if necessary). No one can read the
    content inside the SGX enclaves. All programs run correctly and can never be compromized.
    The output of the SGX is trusted by all participants.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All secure communication channels via remote attestation are reliable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All content that is published on the public blockchain is trusted and immutable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All content has to be verified by the smart contract before storing/confirming
    it on the blockchain. The smart contract is open-source and completely trusted
    on the public blockchain. The smart contract only accepts data sent from the SGX.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The election administrators cannot refuse to display the content on the election
    website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All voters willing to preserve their privacy never share their private keys
    with anyone else.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The election administrator cannot refuse any eligible voter to register or add
    fake/dummy voters to the election.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All encryption schemes used in [[66](#CR66)] applied AES, hash, digital signature,
    and other secure cryptographic ingredients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The DOS/DDOS and side-channel attacks were not considered in [[66](#CR66)].
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Theorem 5.1
  prefs: []
  type: TYPE_NORMAL
- en: Only successfully registered voters are able to submit their votes, and each
    voter can only submit once.
  prefs: []
  type: TYPE_NORMAL
- en: Proof
  prefs: []
  type: TYPE_NORMAL
- en: The protocol assumes that all voters have to register before the election starts.
    Each successfully registered voter shares a secret unique session key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq116.png)
    with the SGX. The SGX stores all voters’ session keys inside the SGX enclave as
    a list ![$$\langle v_i, x_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq117.png)
    (see Sect. [5.2.2.2](#Sec6)). Therefore, it is impossible to submit a vote without
    registration, because the SGX only stores ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq118.png)
    for all successfully registered ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq119.png)
    with valid session keys issued during the registration.
  prefs: []
  type: TYPE_NORMAL
- en: It is easy to prevent double voting under the protocol. According to Algorithm [5.7](#Figb),
    the SGX computes each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq120.png)
    inside the SGX enclave (see Sect. [5.2.2.3](#Sec7)) and only outputs the pseudoname
    and fingerprint ![$$\mathsf {pid}_{v_i}, \mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq121.png)
    to the public blockchain, where the actual ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq122.png)
    is still secretly stored inside the SGX enclave as a list ![$$\langle v_i, y_{v_i},
    \mathsf {Vote}_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq123.png).
    Every time after the SGX received a submission from a voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq124.png),
    the SGX checks if there is an existing ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq125.png)
    in the list ![$$\langle v_i, x_{v_i}, y_{v_i}, \mathsf {Vote}_{v_i}\rangle $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq126.png).
    The submission is considered as double voting if an existing submission of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq127.png)
    is found. ![$$\square $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq128.png)
  prefs: []
  type: TYPE_NORMAL
- en: Theorem 5.2
  prefs: []
  type: TYPE_NORMAL
- en: The content of any vote is never disclosed.
  prefs: []
  type: TYPE_NORMAL
- en: Proof
  prefs: []
  type: TYPE_NORMAL
- en: 'In the protocol, each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq129.png)
    consists of as many encrypted scores as the number of candidates. Each score is
    given by an expression ![$$E(p^{c_j}_{v_i}, y^{c_j}_{v_i}, x_{v_i}) = (y^{c_j}_{v_i})^{x_{v_i}}\cdot
    g^{p^{c_j}_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq130.png)
    (see Algorithm [5.7](#Figb)). Each encrypted score is generated by using the following
    parameters: the assigned score ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq131.png),
    particular public voting key ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq132.png)
    for candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq133.png),
    and secret key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq134.png)
    of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq135.png).
    Both of ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq136.png)
    and ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq137.png)
    are secret values, and only ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq138.png)
    can be computed by anyone using Eq. [5.1](#Equ1). The paper [[66](#CR66)] assumed
    that all public cryptosystems used in the system were secure. In particular, no
    one can reveal the secret key ![$$\mathsf {sk}_{c_j}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq139.png)
    from the public key ![$$\mathsf {pk}_{c_j} = g^{\mathsf {sk}_{c_j}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq140.png)
    as this involves a discrete logarithm problem. Each assigned score ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq141.png)
    is encrypted as ![$$E(p^{c_j}_{v_i}, y^{c_j}_{v_i}, x_{v_i}) = (y^{c_j}_{v_i})^{x_{v_i}}\cdot
    g^{p^{c_j}_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq142.png)
    (see Eq. [5.2](#Equ2)), and the part ![$$(y^{c_j}_{v_i})^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq143.png)
    of the encrypted score can also be considered as a discrete logarithm problem,
    where the ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq144.png)
    cannot be determined from ![$$(y^{c_j}_{v_i})^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq145.png).'
  prefs: []
  type: TYPE_NORMAL
- en: Each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq146.png)
    contains encrypted scores ![$$(y^{c_j}_{v_i})^{x_{v_i}}\cdot g^{p^{c_j}_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq147.png)
    for different candidate ![$$c_j$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq148.png),
    and each public voting key ![$$y^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq149.png)
    is only used once. This means that the values of ![$$(y^{c_j}_{v_i})^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq150.png)
    are always different, and there is no way to remove ![$$(y^{c_j}_{v_i})^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq151.png)
    from ![$$(y^{c_j}_{v_i})^{x_{v_i}}\cdot g^{p^{c_j}_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq152.png)
    by dividing two encrypted scores from the same ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq153.png).
    If anyone tries to compute ![$$\frac{E(p^{c_1}_{v_i}, y^{c_1}_{v_i}, x_{v_i})}{E(p^{c_2}_{v_i},
    y^{c_2}_{v_i}, x_{v_i})} = \frac{(y^{c_1}_{v_i})^{x_{v_i}}\cdot g^{p^{c_1}_{v_i}}}{(y^{c_2}_{v_i})^{x_{v
    _i}}\cdot g^{p^{c_2}_{v_i}}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq154.png),
    this does not return any meaningful value because ![$$(y^{c_1}_{v_i})^{x_{v_i}}
    \ne (y^{c_2}_{v_i})^{x_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq155.png).
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, for each encrypted score ![$$E(p^{c_j}_{v_i}, y^{c_j}_{v_i}, x_{v_i})
    = (y^{c_j}_{v_i})^{x_{v_i}}\cdot g^{p^{c_j}_{v_i}}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq156.png),
    there are two secrets for the attackers: the assigned score ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq157.png)
    and the secret key ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq158.png)
    of ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq159.png).
    This means the attackers cannot reveal either ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq160.png)
    or ![$$p^{c_j}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq161.png)
    from any encrypted score because there is no way to find two unknown numbers using
    only one equation. Since it is assumed that the voters never disclose their voting
    secret ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq162.png),
    it follows that the content of any encrypted vote is never disclosed. Without
    the secret keys of the voters, it is impossible to decode any encrypted score.
    ![$$\square $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq163.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Theorem 5.3
  prefs: []
  type: TYPE_NORMAL
- en: 'Each vote is end-to-end verifiable: cast-as-intended, recorded-as-cast and
    counted-as-recorded.'
  prefs: []
  type: TYPE_NORMAL
- en: Proof
  prefs: []
  type: TYPE_NORMAL
- en: According to Algorithm [5.7](#Figb), the fingerprint ![$$\mathsf {Hash}(\mathsf
    {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq164.png)
    of each ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq165.png)
    is released on public blockchain after submission. All the necessary components
    (![$$p^{c_j}_{v_i}, y^{c_j}_{v_i}, x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq166.png))
    for this particular ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq167.png)
    are also known to the voter ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq168.png),
    which means ![$$v_i$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq169.png)
    can re-generate the vote as ![$$\mathsf {Vote}'_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq170.png)
    and computes the fingerprint as ![$$\mathsf {Hash}(\mathsf {Vote}'_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq171.png).
    Thus, it is easy to verify the correctness of the SGX generated and released ![$$\mathsf
    {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq172.png)
    by comparing it with a self-computed ![$$\mathsf {Hash}(\mathsf {Vote}'_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq173.png).
  prefs: []
  type: TYPE_NORMAL
- en: Once all ![$$\mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq174.png)
    are confirmed on the public blockchain, there is no way to modify any ![$$\mathsf
    {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq175.png)
    because anyone can discover when a released ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq176.png)
    does not match the fingerprint ![$$\mathsf {Hash}(\mathsf {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq177.png)
    that is stored on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the protocol enables everyone to verify that the published results
    are correct without any tallying authority or disclosing any individual votes.
    Anyone can self-tally the final results by applying Algorithm [5.9](#Figd) and
    multiplying all ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq178.png)
    and ![$$\mathsf {Vote}_{can}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq179.png)
    recorded on the election website (see Sect. [5.2.2.6](#Sec10)). ![$$\square $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq180.png)
  prefs: []
  type: TYPE_NORMAL
- en: Theorem 5.4
  prefs: []
  type: TYPE_NORMAL
- en: The proposed system has no abortive and adaptive issues.
  prefs: []
  type: TYPE_NORMAL
- en: Proof
  prefs: []
  type: TYPE_NORMAL
- en: Due to all voters’ secret keys ![$$x_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq181.png)
    are secretly stored inside the SGX enclaves as a list ![$$\langle v_i, x_{v_i}\rangle
    $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq182.png) (see
    Sect. [5.2.2.2](#Sec6)), the abortive issue can be easily prevented by generating
    dummy votes (refer to the Eq. [5.3](#Equ3)) for the voters who did not cast votes
    or submitted invalid votes, where the dummy votes do not change the outcome of
    the election.
  prefs: []
  type: TYPE_NORMAL
- en: In order to prevent adaptive issue, only all fingerprints ![$$\mathsf {Hash}(\mathsf
    {Vote}_{v_i})$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq183.png)
    of all cast ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq184.png)
    are released on the public blockchain during the voting stage, which means no
    one is able to see any ![$$\mathsf {Vote}_{v_i}$$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq185.png)
    before the deadline of the election, which makes no one is able to precalculate
    the final outcome before the deadline of the election. ![$$\square $$](../images/516136_1_En_5_Chapter/516136_1_En_5_Chapter_TeX_IEq186.png)
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Blockchain Applications In Finance, Health, Manufacturing, Energy, Logistics,
    and Other Areas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 5.3.1 Blockchain-Based Finance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Driven by the success of blockchain in supporting cryptocurrencies, it was
    logical for the financial industry to follow it with applications of blockchain
    in other financial domains. In general, trusted third parties are used to conduct
    financial activities among people and organizations. These third parties provide
    four functions [[45](#CR45)]:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: confirming the reality of trades,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: avoiding financial transactions duplications,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: registering and validating financial activities,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: functioning as agents in support of clients or associates.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Blockchain can generally replace two of these roles: avoiding transaction duplicates
    and registering and validating financial activities. It is easy to apply blockchain
    for preventing, for example, a client from performing multiple payments with a
    total amount that exceeds the available currency. In contrast, illegal payments
    of this sort can be performed using regular cheques. However, it is impossible
    to achieve this with blockchain since all financial activities must be collectively
    verified before they are carried out. At the same time, blockchain can act as
    a secure registry for the conducted financial transactions. This registry cannot
    be modified by any entity involved after being appended to the chain. It can also
    be used to validate the conducted transactions through collective checks and verifications.
    These two features enable many financial applications such as the following examples
    excluding cryptocurrencies.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stock trading**. Stock trading is usually done through a centralized authority
    such as an exchange market that keeps track of all trades and settlements. However,
    this process is usually associated with extra costs and settlement delays. To
    avoid these issues, tZERO [[62](#CR62)] designed a platform based on blockchain
    to reduce costs and settlement time while at the same time increase transparency
    and auditability. This platform is integrated with cryptographically secure distributed
    ledgers to facilitate settlement processes. Another successful effort in utilizing
    blockchain to facilitate stock trading was made by Chain [[15](#CR15)]. Chain
    developed a live blockchain integration to link NASDAQ’s stock exchange and Citi’s
    banking systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Insurance marketplace**. Blockchain can be used to support the insurance
    marketplace transactions between different clients, policyholders, and insurance
    companies. Blockchain can be used to negotiate, buy, and register insurance policies;
    submit and process claims; and support reinsurance activities among insurance
    companies. Different insurance policies can be automated using smart contracts
    [[13](#CR13)], which can significantly reduce administration costs. For example,
    there is a high administration cost associated with processing insurance claims.
    In many cases, the administration of claims can be very complex processes due
    to disagreements and misinterpretations of the terms. Smart contracts can evade
    these problems by structuring insurance policies in more precise “if-then” relationships
    [[13](#CR13)]. This allows for the automation of executing the terms by digital
    protocols that exactly implement the agreed upon insurance policies, thus reducing
    the effort needed and the costs of execution. With this reduction, insurance companies
    can also reduce the cost of their insurance products and be more competitive to
    attract more customers. At the same time, it allows insurance companies to launch
    new automated insurance products for their clients without worrying too much about
    their administration overhead and costs. Furthermore, blockchain enables insurance
    companies to be expanded globally [[45](#CR45)].'
  prefs: []
  type: TYPE_NORMAL
- en: '**Financial settlements**. Blockchain can be used among companies and organizations
    for recording, validating, and processing financial settlements without involving
    a clearing house. It facilitates clearing processes which involve adjusting the
    financial commitments so as to enable payments. One of the early uses of such
    application is when the Royal Bank of Canada (RBC) started to utilize blockchain
    for its US-Canada interbank financial settlements [[60](#CR60)]. The bank started
    using an application implemented with the Hyperledger platform in September 2017\.
    Blockchain-based financial settlement systems can be integrated with other blockchain-based
    applications such as blockchain-based stock trading applications or blockchain-based
    logistics applications to enable financial settlement processes in these applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Peer-to-peer global financial transactions**: Traditionally any financial
    transaction performed between people must go through some form of authoritative
    entity of financial institution for verification and guarantees. This entity needs
    to verify finances and ensure accurate execution of these transactions. However,
    many of these transactions can now be digitized and verified through blockchain.
    As a result, the middleman is cut from the process and people can collectively
    verify and ensure correct execution and recording of these transactions. Following
    in the footsteps of cryptocurrency, these transactions can be performed with any
    available currency as long as it can be backed correctly across all entities involved.
    The additional benefit here is that these transactions will also be open for use
    globally since there will be no restrictions on where entities performing the
    transactions are and what currencies are in use.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.2 Blockchain-Based Health Care
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Health care has been one of the most important application domains for blockchain,
    since healthcare applications bring benefits to everyone. Many countries have
    introduced electronic health record (EHR) systems and have started using them
    in the health care. Blockchain-based healthcare systems incorporate EHR data,
    which contain medical history of the patients, personal statistics (e.g. age and
    weight), the laboratory test results, medical appointments, diagnoses, prescriptions,
    and so on. It is crucial to ensure the security and privacy of these data. In
    many countries, there are strict legal requirements which ensure that all systems
    must guarantee the confidentiality of private medical information of all citizens.
    All patients have the right to control access to their data. It is important to
    protect EHR systems against the single-point attack, malicious insider attacks,
    and other vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: The key goals in the implementation of secure blockchain-based EHR systems are
    as follows [[58](#CR58)].
  prefs: []
  type: TYPE_NORMAL
- en: '**Privacy**. Individual data will be used privately, and only authorized parties
    can access the requested data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security** in the sense of confidentiality, integrity, and availability (CIA):
    (1) Confidentiality: only authorized users can access the data. (2) Integrity:
    data must be accurate in transit and not be altered by unauthorized entities.
    (3) Availability: legitimate user’s access to information and resources is not
    improperly denied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Auditability** is an important component of security. For example, audit
    logs mainly include information on who accessed which EHR (or a specific PHR),
    with what aim, and the time-stamping of any operation in the entire life cycle
    [[4](#CR4)].'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accountability**. An individual or an organization will be audited and be
    responsible for misbehaviour.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authenticity**. It is important to be able to validate the identities of
    requestors before allowing access to sensitive data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Anonymity**. Entities should have no visible identifier to protect their
    privacy. Complete anonymity is challenging, and pseudo-anonymity is more common
    (i.e. users are identified by something other than their actual identities).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To achieve the goals listed above, existing blockchain-based research in the
    healthcare domain includes the following main aspects.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data storage**. Blockchain serves as a trusted ledger database to store a
    broad range of private healthcare data. Data privacy should be guaranteed when
    secure storage is achieved. However, healthcare data volume tends to be large
    and complex in practice. Hence, a corresponding challenge is how to deal with
    big data storage without having an adverse impact on the performance of blockchain
    network.'
  prefs: []
  type: TYPE_NORMAL
- en: Zheng et al. [[71](#CR71)] proposed that data will be encrypted before being
    uploaded to cloud servers by symmetric key scheme (i.e. Rijndael AES [[14](#CR14)])
    with threshold encryption scheme. The symmetric key will be split into multiple
    shares distributed among different key keepers by Shamir’s secret sharing scheme
    [[46](#CR46)]. Only if data requestor gets enough key shares, he can decrypt the
    ciphertext. Compromising some key keepers (less than threshold) would not lead
    to data leakage. Guo et al. [[22](#CR22)] proposed an attribute-based signature
    scheme with multiple authorities (MA-ABS) in the healthcare blockchain. The signature
    of this scheme attests not to the identity of the patient who endorses a message,
    instead to a claim (like access policy) regarding the attributes delegated from
    some authorities he possesses. Meanwhile, the system has the ability to resist
    collusion attack by sharing the secret pseudorandom function (PRF) seeds among
    authorities.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data sharing**. In most existing healthcare systems, service providers usually
    maintain primary stewardship of data. With the notion of self-sovereignty, it
    is a trend to return the ownership of healthcare data back to the user who is
    capable of sharing (or not sharing) his personal data at will. It is also necessary
    to achieve secure data sharing across different organizations and domains.'
  prefs: []
  type: TYPE_NORMAL
- en: Secure access control mechanism as one of common approaches requires that only
    authorized entities can access sharing data. It is promising that combining blockchain
    with access control mechanism leads to building a trustworthy system. Users can
    realize secure self-management of their own data and keep shared data private.
    In this new model, patients can predefine access permissions (authorize, refuse,
    revoke), operation (read, write, update, delete), and duration to share their
    data by smart contracts on the blockchain without the loss of control right. Smart
    contracts can be triggered on the blockchain once all preconditions are met and
    can provide audit mechanism for any request recorded in the ledger as well. There
    are many existing studies and applications applying smart contract for secure
    healthcare data sharing.
  prefs: []
  type: TYPE_NORMAL
- en: Azaria et al. [[6](#CR6)] designed a decentralized record management system
    based on blockchain, called MedRec. In this system, patient–provider relationship
    contract is deployed between any two nodes in which patients manage and share
    medical records with healthcare providers. Providers can add or modify these records
    in the case of patient’s permissions. Data access record is preserved in the block
    to track the malicious entities when violated access activities happen. They also
    designed a simple graphical interface tool that allows patients to share off-chain
    data with fine-grained access control. A similar design is proposed in Rifiet
    al. [[56](#CR56)]. Nguyen et al. [[54](#CR54)] developed an access protocol based
    on smart contract through admin component when mobile users send the request.
    Smart contract will verify any transaction by predefined policies of access protocol
    to prevent malicious attack and achieve reliable EHRs sharing. But curious miners
    may infer personal information during the mining process due to the processing
    transactions including Area ID, mobile gateway ID, and patient ID. Liang et al.
    [[41](#CR41)] creatively adopted the channel scheme of Hyperledger Fabric, which
    separates different types of activities for users in the different channels to
    share different grained data. The chain code or smart contract can be launched
    in the channel with different access type, permissioned operations, and selective
    shared data specified in the certificate by data owners. In addition to data sharing,
    such a channel scheme makes a good use of Fabric to enhance data privacy.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data audit**. Healthcare systems also rely on audit log management as security
    mechanism since some exceptions can result from the misuse of access privileges
    or dishonest behaviour by third parties or data requestors. Audit log can serve
    as proofs when disputes arise to hold users accountable for their interactions
    with patient record. Immutable public ledger and smart contract in the blockchain
    can provide immutable record for all access requests to achieve traceability and
    accountability.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Audit log mainly contains vital and understandable information: timestamp of
    logged event, user ID which requests the data, data owner ID whose data is accessed,
    action type (create, delete, query, update) and the validation result of the request.'
  prefs: []
  type: TYPE_NORMAL
- en: Qi et al. [[64](#CR64)] designed a data sharing model with the ability to effectively
    track the dishonest behaviour of sharing data as well as revoke access right to
    violated permissions and malicious access. The system provides provenance, audit,
    and medical data sharing among cloud service providers with minimal risk of data
    privacy. The similar system in Xia et al. [[63](#CR63)] provides auditable and
    accountable access control for shared cloud repositories among big data entities
    in a trustless environment. Azaria et al. [[6](#CR6)] also provided auditability
    via comprehensive log. They mentioned that obfuscation for privacy needs further
    exploration while preserving auditability in the public ledger. Fernandez-Aleman
    et al. [[18](#CR18)] designed a blockchain-based system called AuditChain to manage
    the logs generated by all access operations. Smart contract in the AuditChain
    handles the creation, updating, and querying of audit log data. It also facilitates
    the interoperability of audit log among different healthcare organizations by
    exposing the same data structure for each audit transaction. Trials, medical research,
    and pharmaceutical data are error-prone, missing, or manipulated, and trust issue
    is intensive between patients and healthcare providers. The transparency and tamper-resistance
    of blockchain can keep trace of historical trial log and avoid storing selective
    good outcomes of clinical trials. To improve quality of research by better reproducibility,
    the timestamped statistical analysis on clinical trials ensures traceability and
    integrity of each sample’s metadata in Benchoufi and Ravaud [[9](#CR9)] based
    on blockchain which allows to store proofs of existence of data. The related analytical
    code to process the data must be timestamped to make the analysis reproducible
    and provide reliable verification of the data. Timestamps in the blockchain provide
    better and more reliable version control than git does.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.3 Blockchain-Based Manufacturing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The manufacturing sector is taking long strides towards smart manufacturing
    and automated/autonomized operations and thus can benefit from blockchain in different
    areas. One important area is for logistics management. Logistic management is
    extremely important for any manufacturer to ensure fair pricing and timely delivery
    of row material and supplies for their productions. In addition, it helps ensure
    efficient and timely delivery of their products to satisfy the needs of customers.
    Like any logistics management application, using blockchain for manufacturing
    logistics management can reduce time delays, management costs, and human errors
    [[1](#CR1)]. This enables the manufacturers to reduce manufacturing costs and
    to be more agile and competitive.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, blockchain can be used to enable social manufacturing networks
    (SMNs) among manufacturing enterprises to support sharing and utilizing their
    social manufacturing resources effectively, fairly, and securely. Social manufacturing
    is a new evolving manufacturing approach and business practice that aims to build
    more personalized products and individualized services for customers. Adopting
    this approach, manufacturing enterprises can enhance their competitive capabilities.
    This approach can be more effective if multiple manufacturing enterprises cooperate
    in sharing their social manufacturing resources and forming a social manufacturing
    network among them for the benefits of all participants. A manufacturing enterprise
    with access to more social manufacturing resources in this network can produce
    more precise and professional products tailored to the specific demands of the
    consumers [[17](#CR17)]. Nevertheless, there are always high concerns of security,
    fairness, and effectiveness in this collaborative network. One possible resolution
    is addressed in [[42](#CR42)], where Liu et al. developed a blockchain-based product
    credit mechanism (PCM) to securely, fairly, and effectively manage the cross-enterprise
    collaborations within their social manufacturing network. This management is achieved
    in a peer-to-peer fashion, without involving a third party, using smart contracts
    and a credit system.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain can also be utilized to support cloud manufacturing operations. Cloud
    manufacturing is a new manufacturing model proposed to utilize concepts from cloud
    computing, Internet of things (IoT), service-oriented computing, and virtualization
    to convert manufacturing resources and operations into a set of manufacturing
    services that can be smartly integrated and managed [[34](#CR34)]. In this regard,
    blockchain is proposed to be used to enable secure decentralized cloud manufacturing
    architecture [[7](#CR7)] and secure knowledge sharing for manufacturing design
    such as designing and redesigning injection moulding [[40](#CR40)].
  prefs: []
  type: TYPE_NORMAL
- en: Another area where blockchain can be applied is to improve anti-counterfeiting
    and copyright protection procedures for additive manufacturing. Kennedy et al.
    [[28](#CR28)] developed a physical anti-counterfeiting approach that can verify
    the authenticity and quality of 3D-printed parts. In this approach, nanomaterial
    chemical signatures are added to these parts, while blockchain is used to ensure
    the origins of the parts based on the added nanomaterial chemical signatures.
    Some of the main advantages of using blockchain to verify the originality of parts
    in manufacturing are to enable healthier supply chains in manufacturing and to
    reduce the risks associated with using imitative parts [[26](#CR26)]. Here, the
    authentication of each individual part can be done through an automated process
    before being used to build other products.
  prefs: []
  type: TYPE_NORMAL
- en: A secure solution for blockchain interoperability in manufacturing is designed
    in [[8](#CR8)]. It adopts an off-chain secure computation element and applies
    a relay scheme based on trusted execution environment. To facilitate the development
    of a secure decentralized system for advanced manufacturing, a blockchain-based
    architecture is proposed in [[10](#CR10)] utilizing clustering and authentication
    mechanisms. The paper [[11](#CR11)] applies blockchain in manufacturing product
    lifecycle management. The impact of blockchain technology on innovation quality
    is analysed in [[12](#CR12)] relying on the evidence from Chinese manufacturing
    firms. A token-based blockchain architecture using logically coupled tokens is
    proposed in [[16](#CR16)] to map manufacturing processes of products with highly
    customizable configurations.
  prefs: []
  type: TYPE_NORMAL
- en: A survey of blockchain applications aiming to overcome potential barriers to
    achieving sustainability of manufacturing and product lifecycle management in
    Industry 4.0 is presented in [[32](#CR32)]. Eight cybersecurity issues impeding
    blockchain applications in manufacturing are identified in [[33](#CR33)]. Ten
    metrics essential for implementing blockchain applications in manufacturing are
    also introduced and considered. A blockchain-enabled digital twin collaboration
    platform is proposed in [[36](#CR36)] for heterogeneous socialized manufacturing
    resource management. An analogous platform is further developed in [[37](#CR37)]
    to achieve reconfigurable socialized manufacturing resource integration. A general
    blockchain-based smart manufacturing system is proposed in [[35](#CR35)] using
    a maximum weight matching based alternating optimization framework for joint task
    scheduling. The paper [[38](#CR38)] applies blockchain to improve information
    sharing between manufacturing and logistics.
  prefs: []
  type: TYPE_NORMAL
- en: A framework integrating blockchain technology with cloud manufacturing is proposed
    in [[72](#CR72)]. The system performance is investigated with a focus on the pricing
    strategies for service providers bidding for jobs in such a system. The paper
    employs a game theoretic approach for pricing simulation. It applies a fuzzy algorithm
    implementing decisions in the pricing process. The paper  [[73](#CR73)] proposes
    a blockchain reference architecture for smart manufacturing and uses it to present
    a thorough survey of blockchain applications to the smart factory technology in
    Industry 4.0.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.4 Blockchain-Based Energy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the main uses of blockchain in energy-related applications is in microgrids.
    A microgrid is a localized set of electric power sources and loads integrated
    and managed with the objective of enhancing energy production and consumption
    efficiencies and reliabilities [[31](#CR31)]. The electric power sources can be
    distributed power generators, renewable energy stations, and energy storage components
    in facilities created and owned by different organizations or energy providers.
    One of the main advantages of the microgrid technology is that it does not only
    allow residents and other electric power consumers such as factories to have access
    to the needed energy, but they can also produce and sell excess energy to the
    grid. Blockchain can be used to facilitate, record, and validate power selling
    and buying transactions in microgrids [[13](#CR13)]. This allows for applying
    power exchange restrictions and regulations, managing payments and fairly and
    efficiently making shared decisions among the participants without the need for
    a centralized microgrid controller [[52](#CR52)]. As an example, blockchain is
    used in a microgrid that groups 130 buildings in Brooklyn, New York [[13](#CR13),
    [48](#CR48)]. This minimizes or eliminates the need for intermediaries among these
    buildings to complete their energy selling and buying transactions. In addition,
    blockchain can be used in islanded microgrids to track energy losses produced
    by energy transactions. This leads to a better matching between the physical position
    and losses of power across the grid network and the resulting costs attributed
    to participants [[57](#CR57)].
  prefs: []
  type: TYPE_NORMAL
- en: In a similar way, blockchain can be used at larger scales to enable energy trading
    in smart grids. In smart grids equipped with bidirectional communication flow,
    blockchain can be used to support secure and privacy-maintained consumption monitoring
    and energy trading [[5](#CR5)] without a need for a central intermediary. It can
    also be used to support the management of demand response programs [[55](#CR55)].
    Smart contracts can be used to ensure the programmatic descriptions of anticipated
    power flexibility degrees, the validation and tractability of demand response
    agreements, and the balance between power needs and generation.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, blockchain can be used to enable energy trading in Industrial Internet
    of Things (IIoT) [[39](#CR39)]. This allows for better power supply negotiations
    and agreements among providers and consumers in various industries. This will
    help reduce total production costs of these industries, thus making them more
    flexible and competitive within challenging market environments. Generally, utilizing
    blockchain for energy-related applications has the potential to reduce energy
    costs [[47](#CR47)] as well as increase resiliency [[53](#CR53)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.5 Blockchain-Based Logistics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Logistics management applications are software systems that help manage the
    delivery of raw material, products, and services between the producers/sellers
    and the consumer destinations. These can all be part of a single organization
    or run across multiple organizations and entities. Blockchain can provide powerful
    support to enable these applications. One of the complexities in logistics management
    is the involvement of multiple companies in the activities. This may also include
    a number of synchronized sub-activities performed by different companies such
    as factories, storage companies, shipping companies, and regularity authorities.
    It is important for any logistics management application to provide a set of functions
    to plan, schedule, coordinate, monitor, and validate the performed activities.
    Such functions can be efficiently and securely supported by blockchain. Using
    the shared distributed ledgers in blockchain to verify, store, and audit logistics
    transactions will help reduce time delays, management costs, and human errors.
    In addition, applying smart contracts will facilitate agreements between the companies
    involved and create binding contracts faster and with lower costs.
  prefs: []
  type: TYPE_NORMAL
- en: With these benefits, blockchain is anticipated to have a substantial impact
    on the logistics industry [[23](#CR23)]. There are many start-up companies in
    this area that offer blockchain-based logistics management platforms and applications.
    One example is provenance [[59](#CR59)], which provides a traceability system
    that links consumers and suppliers together for different logistics activities.
  prefs: []
  type: TYPE_NORMAL
- en: Walmart is working with IBM and Tsinghua University of Beijing to create blockchain-based
    supply chain applications in China, with a specific focus on the pork market [[25](#CR25)].
    They reported an encouraging result in reducing the time needed to track food
    from days to minutes. This enables more effective monitoring for food safety which
    can increase the customers’ trusts in their products. Generally, there are many
    benefits in using blockchain in the food industry including improving transparency
    in food systems, enhancing food flows, reducing food waste, helping in deterring
    food fraud, and offering new tools for increasing trust in food [[69](#CR69)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.3.6 Other Applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to the applications discussed earlier, there are other useful applications
    in domains like supply chain, robotics, construction, and Industry 4.0.
  prefs: []
  type: TYPE_NORMAL
- en: A decentralized blockchain-based solution automating forward supply chain for
    COVID-19 medical equipment is proposed in [[3](#CR3)] by integrating the Ethereum
    blockchain with decentralized storage of interplanetary file systems. The paper
    [[43](#CR43)] constructs a vaccine supply chain model based on blockchain technology,
    which shows that the application of blockchain increases the total profit, consumer
    surplus and social welfare of the vaccine supply chain.
  prefs: []
  type: TYPE_NORMAL
- en: Swarm robotics have many potential industrial applications including material
    transport and precision farming. However, there are many challenges obstructing
    such technologies from being practically developed and employed including autonomous
    capabilities, decentralized controls, and collaborative behaviours. As blockchain
    technology can be used among multiple distributed entities to reach agreements
    without the need for a controlling authority, it can be used in swarm robotics
    applications for the same purpose and to add security, autonomy, and flexibility
    features [[19](#CR19)].
  prefs: []
  type: TYPE_NORMAL
- en: In order to protect blockchain applications from slowly adaptive attackers who
    can target the validators with high reputation value, Huang et al. [[27](#CR27)]
    developed a privacy-preserving scheme for reputation-based blockchain systems.
    Zhao et al. [[70](#CR70)] designed and implemented a blockchain-based system for
    tracking and saving the differential privacy costs in applications capable of
    answering queries. Mollah et al. [[50](#CR50)] surveyed blockchain methods used
    for the Internet of Vehicles in the transportation industry. A comprehensive survey
    of the blockchain used for the future smart grid was given by Mollah et al. [[51](#CR51)].
    To enable fine-grained authorization in data outsourcing, Ma et al. [[44](#CR44)]
    proposed a blockchain-based mechanism implementing cryptocurrencies and payment
    services as incentives for the users of the platform.
  prefs: []
  type: TYPE_NORMAL
- en: In the construction industry, blockchain can be used for construction management
    through enhancing the current processes of monitoring, control, and management.
    In addition, blockchain services can support better construction supply chain
    management and construction equipment delivery [[65](#CR65)].
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, blockchain can be applied to support Industry 4.0 applications
    [[49](#CR49)], which usually need to integrate several systems and components
    that may not always be owned by a single entity. Blockchain can help create more
    secure, trusted, and controlled processes for Industry 4.0 applications.
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Blockchain demonstrated its usefulness through the widespread adoption of cryptocurrencies
    and its support for the operations needed to achieve digital currency. However,
    the same features are promising to enable and support other industrial applications
    in many domains. A wide range of industrial domains are starting to adopt or consider
    adopting blockchain to facilitate their operations in hopes of streamlining processes,
    enhancing security and data sharing, increasing efficiency and ultimately reducing
    costs to gain a competitive advantage. The main capabilities that enable blockchain
    to be applied in these applications are the development of digital identities,
    distributed security, smart contracts, and micrometering through the distributed
    blockchain ledgers. As a result, blockchain applications in the financial, health
    care, manufacturing, and logistics domains are developing and demonstrating their
    usefulness.
  prefs: []
  type: TYPE_NORMAL
