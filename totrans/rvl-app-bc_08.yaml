- en: Chapter 7
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: Blockchain-Based Food Supply Chain Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于区块链的食品供应链管理
- en: Dhana Srinithi Srinivasan
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dhana Srinithi Srinivasan
- en: PSG College of Technology, India
  id: totrans-3
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度PSG技术学院
- en: Karpagam Manavalan
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Karpagam Manavalan
- en: '[![Orcid Image](i/orcid.svg) https://orcid.org/0000-0002-0015-200X](https://orcid.org/0000-0002-0015-200X)'
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[![Orcid 图标](i/orcid.svg) https://orcid.org/0000-0002-0015-200X](https://orcid.org/0000-0002-0015-200X)'
- en: PSG College of Technology, India
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度PSG技术学院
- en: Soundarya R.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Soundarya R.
- en: PSG College of Technology, India
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度PSG技术学院
- en: Thamizhi S. I.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thamizhi S. I.
- en: PSG College of Technology, India
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度PSG技术学院
- en: ABSTRACT
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: Blockchain is an emerging technology that is based on the concept of distributed
    ledgers. It allows for pervasive transactions among different parties and eliminates
    the need for third-party intermediaries. Several of blockchain’s characteristics
    make it suitable for use in the agriculture sector. Some of the potential applications
    of blockchain include efficient management of the food supply chain and value-based
    payment mechanisms. The products of agriculture are usually the inputs for a multi-actor
    distributed supply chain, in which case the consumer is usually the final client.
    The food chain involves several actors including farmers, shipping companies,
    distributors, and groceries. This makes the entire system to be distributed with
    multiple actors playing different roles throughout the chain. This currently used
    system is inefficient and unreliable in various aspects. This project aims to
    leverage blockchain technology to solve and address discrepancies involved in
    food supply chains.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种新兴技术，基于分布式账本的概念。它允许不同方之间进行广泛的交易，并消除了第三方中介的需要。区块链的几个特点使其适用于农业领域的使用。区块链的一些潜在应用包括有效管理食品供应链和基于价值的支付机制。农业产品通常是多方分布式供应链的输入，其中消费者通常是最终客户。食品链涉及多个参与者，包括农民、船运公司、经销商和杂货店。这使得整个系统分布式，并且在整个链条上扮演不同角色的多个参与者。目前使用的这种系统在各个方面都是低效且不可靠的。本项目旨在利用区块链技术解决和解决食品供应链中涉及的差异。
- en: CASE STUDY
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 案例研究
- en: The food industry plays a vital role in providing necessities that support the
    growth of various human activities. Once harvested or produced, it undergoes various
    stages like processing, transportation, distribution, storage and delivery. Reports
    say that about one-third of the produced food has either been abandoned or wasted
    every year (approximately 1.3 billion tons). Two-third of the wasted food (about
    1 billion tons) occurs during phases in the supply chain like harvesting, shipping
    and storage. Perishable goods including fruits and vegetables were wasted by 492
    million tons worldwide in 2011 due to inefficient and ineffective food supply
    chain management.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 食品行业在提供支持各种人类活动增长的必需品方面发挥着至关重要的作用。一旦收获或生产完成，食品就会经历各种阶段，如加工、运输、分销、储存和交付。据报告称，每年约有三分之一的生产食品被丢弃或浪费（约13亿吨）。其中三分之二的浪费食品（约10亿吨）发生在供应链的各个阶段，如收获、运输和储存等。由于食品供应链管理效率低下和无效，2011年全球共有492百万吨易腐烂的水果和蔬菜被浪费。
- en: Food supply chain management differs from other supply chains such as furniture
    logistics in that, the importance reflected by factors like food quality, safety,
    and freshness within a limited time, which makes the underlying supply chain more
    complex and difficult to manage. This gets more complex when it comes to perishable
    products where their traversal time through the food supply chain, which includes
    the use of warehouses or buffers, needs to be quite limited.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 食品供应链管理与其他供应链（如家具物流）有所不同，体现在食品质量、安全性和新鲜度等因素上，而这些因素需要在有限的时间内得到体现，这使得底层供应链更加复杂且难以管理。当涉及到易腐烂产品时，情况会变得更加复杂，因为它们在食品供应链中的流动时间，包括仓库或缓冲区的使用，需要相当有限。
- en: One of the major difficulties faced by farmers is the need for middlemen to
    sell their agricultural goods. In certain cases, the farmers are forced to sell
    their goods at a price quoted by these so-called middlemen. In countries like
    India, poor infrastructure in crop-producing regions enables these middlemen to
    deceive farmers as to the true value of the produce they are selling. Most of
    the warehouses are near the cities, which increases post-harvest losses due to
    rotting.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 农民面临的主要困难之一是需要中间商来销售他们的农产品。在某些情况下，农民被迫按这些所谓中间商提供的价格出售他们的商品。在印度等国家，作物生产地区的基础设施不足，使这些中间商能够欺骗农民关于他们正在出售的产品的真实价值。大多数仓库位于城市附近，这增加了因腐烂而造成的收获后损失。
- en: A report from Label Insight and the Food Marketing Institute (FMI) revealed
    that shoppers are increasingly demanding transparency and a closer connection
    to their food so much so that 75% say they will switch to a brand that provides
    more in-depth product information, beyond what is provided on the physical label.
    These factors emphasize the need for a more transparent food supply chain that
    alleviates the toil faced by the farmers at least up to an extent and ensures
    that the information regarding the origin of a product is made available for the
    end-users.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Label Insight 和食品营销学会（FMI）的一份报告显示，购物者越来越需要透明度和与他们的食品更紧密的联系，以至于75%的人表示他们会转向提供更深入产品信息的品牌，超出了物理标签上提供的信息。这些因素强调了对更透明的食品供应链的需求，至少在一定程度上减轻了农民所面临的劳苦，并确保产品来源的信息对最终用户可用。
- en: LITERATURE REVIEW
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 文献综述
- en: The purpose of this survey is to place each work in the context of its contribution
    to understanding the research problem being studied. It defines data sources that
    other researchers have used. Literature review helps in viewing what came before,
    what did and did not work for other researchers. It also provides evidence to
    support our findings.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本调查的目的是将每项工作置于其对研究问题理解的贡献背景中。它定义了其他研究人员使用的数据来源。文献综述有助于查看之前发生了什么，其他研究人员做了什么事情，以及哪些事情对他们有效或无效。它还提供了支持我们发现的证据。
- en: Features of Blockchain
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的特点
- en: In 2016, Yuan, Y. Wang conducted a preliminary study of the Blockchain-based
    Intelligent Transportation System. The study outlines an Intelligent Transportation
    System oriented, a seven-layer conceptual model for blockchain and presents a
    case study for blockchain-based real-time ride-sharing services. The study talks
    in brief about the pros and cons of blockchain technology. Once a new block is
    validated and added into the chain, this addition is permanent and can’t be tampered
    or removed and this feature of blockchain is known as immutable. This feature
    of blockchain leads to increased security in the network and is the easiest accountability
    of the network. In 2017, Zibin Zheng et al. presented a comprehensive overview
    on blockchain technology and blockchain architecture comparing some typical consensus
    algorithms used in different blockchains and also analysing the technical challenges
    of blockchain and recent advances.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在2016年，王远、王永博等进行了一项关于基于区块链的智能交通系统的初步研究。该研究概述了一个面向智能交通系统的，基于七层概念模型的区块链，并提供了基于区块链的实时拼车服务的案例研究。该研究简要讨论了区块链技术的利弊。一旦新区块被验证并添加到链中，这种添加是永久的，无法篡改或删除，这一区块链的特性被称为不可变性。这种区块链的特性提高了网络的安全性，并且是网络的最简单的责任追究。在2017年，郑子斌等人提出了关于区块链技术和区块链架构的全面概述，比较了不同区块链中使用的一些典型共识算法，并分析了区块链的技术挑战和最新进展。
- en: Blockchain is described as “a revolutionary picture which has generated thousands
    of clones across computer networks” (Zibin Zheng et al., 2017). Bitcoin, Ethereum
    blockchains and smart contract implementations form the core of the development
    of cryptocurrencies. Dr.Gavin Wood (2014) discussed various features of the Ethereum
    blockchain by outlining how blockchain technology is implemented in a generalized
    manner in this framework and provided deep explanations about the design, implementation,
    issues encountered during implementation of blockchain, the various opportunities
    it provides and the future hurdles in the framework. In 2018, Dejan Vujičić et
    al. focused on providing a brief introduction into several aspects and evolutions
    in the field of Blockchain, also elaborating outlines about Bitcoin, Ethereum
    blockchains and smart contract implementations.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链被描述为“在计算机网络上产生了成千上万的克隆”的革命性图景（Zibin Zheng等人，2017年）。比特币、以太坊区块链和智能合约实现构成了加密货币发展的核心。Gavin
    Wood博士（2014年）讨论了以太坊区块链的各种特性，概述了区块链技术如何在这个框架中以一种通用的方式实现，并对设计、实施、实施过程中遇到的问题、提供的各种机会以及未来的障碍进行了深入的解释。2018年，Dejan
    Vujičić等人重点关注了区块链领域的几个方面和发展，并详细阐述了比特币、以太坊区块链和智能合约实现的概要。
- en: Applications of Blockchain
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链应用
- en: Blockchain has a wide range of applications in various sectors like cryptocurrency,
    healthcare, advertising, insurance, copyright protection, energy, societal applications
    to list a few. Wubing Chen et al. (2013) surveyed several blockchain applications
    throughout the years in different domains. The purpose of this survey was to motivate
    the creation of more blockchain-based applications.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链在加密货币、医疗保健、广告、保险、版权保护、能源、社会应用等各个领域有着广泛的应用。Wubing Chen等人（2013年）在不同领域多年来对几种区块链应用进行了调查。此调查的目的是激励更多基于区块链的应用的创建。
- en: Blockchain technology can empower various paths of Big Data areas with novel
    solutions (E.Karafiloski,2017). When searching for the best way to deal with Big
    Data to store, organize and process the data, the Blockchain technology comes
    in as a significant choice of input. Its proposed solutions about decentralized
    management of private data, digital property resolution, IoT communication and
    public institutions' reforms are having significant impact on how Big Data may
    evolve (see Blockchain Solutions for Big Data Challenges,2017, for more).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术可以为大数据领域的各个方向提供新颖的解决方案（E.Karafiloski,2017）。在寻找处理大数据的最佳方式以存储、组织和处理数据时，区块链技术成为重要的输入选择之一。它提出的关于私人数据的去中心化管理、数字财产解决方案、物联网通信和公共机构改革的解决方案对大数据可能如何发展产生了重要影响（更多信息请参见2017年的《区块链解决大数据挑战》）。
- en: Blockchain in Food Supply Chain Management
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链在食品供应链管理中的应用
- en: A food supply chain involves several actors including, farmers, shipping companies,
    distributors, and groceries. This makes the supply chain management system to
    be distributed with multiple actors playing different roles throughout the supply
    chain. Nir Kshetri (2018) examined how blockchain will impact supply chain management
    objectives by focusing on linking the objectives of food supply chain management
    to the features of blockchain such as transparency and accountability. IoT can
    play a major role when incorporated into blockchain-based food supply chain management
    (see, Blockchain’s roles in meeting key supply chain management objectives,2018,
    for more).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 食品供应链涉及多个参与者，包括农民、船运公司、分销商和杂货店。这使得供应链管理系统分布式，多个参与者在整个供应链中扮演不同的角色。Nir Kshetri（2018）研究了区块链将如何影响供应链管理目标，重点是将食品供应链管理的目标与区块链的特性（如透明度和责任制）联系起来。当物联网（IoT）纳入基于区块链的食品供应链管理中时，它可以发挥重要作用（有关更多信息，请参阅2018年《区块链在实现关键供应链管理目标中的作用》）。
- en: In 2018, Miguel Pincheira Caro et al. presented a fully decentralized, blockchain-based
    traceability solution for Agri-Food supply chain management. Miguel Pincheira
    Caro et al. provided two blockchain implementations, using Ethereum and Hyperledger
    Sawtooth. The performance of both of these deployments was then compared.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 2018年，Miguel Pincheira Caro等人提出了一个完全去中心化的、基于区块链的农业食品供应链管理可追溯性解决方案。Miguel Pincheira
    Caro等人提供了两种区块链实现，分别使用了以太坊和Hyperledger Sawtooth。然后比较了这两种部署的性能。
- en: Food security is the situation when “all people, at all times, have physical,
    social and economic access to sufficient, safe and nutritious food that meets
    their dietary needs and food preferences for an active and healthy life” (Food
    and Agriculture Organization (FAO)). Attaining such an objective is not an easy
    task, especially during times of crises, natural calamities and violent political
    climate. In such situations, blockchain could turn out to be an indispensable
    resource in ensuring the transparent delivery of international aid, removing intermediaries
    from the delivery process, making authentic resources accessible and responding
    more rapidly and efficiently in the wake of emergencies.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 食品安全是“所有人在任何时候都能够获得足够、安全和营养丰富的食物，以满足他们的膳食需求和食物偏好，保持积极健康的生活”的情况（粮食和农业组织（FAO））。实现这样的目标并不容易，特别是在危机、自然灾害和政治气候动荡时。在这种情况下，区块链可能成为确保国际援助透明交付的不可或缺的资源，将中间商从交付过程中移除，使真实资源可获得，并在紧急情况发生后更快速、更有效地做出响应。
- en: Food safety involves processing, managing and storing food in hygienic ways.
    Illnesses caused due to food contamination are a prevalent issue in today’s world.
    Blockchain would most certainly be an efficient solution because of its ability
    to ensure transparency at every level in the food supply chain, hence improving
    the traceability of food regarding its safety. Tian (2017) proposed a system that
    facilitates the integration of blockchain with Internet of Things for real-time
    monitoring of physical data and tracing based on the HACCP system has recently.
    This system will be critically important for the maintenance of cold-chain in
    the distribution logistics of spoilable food products. ZetoChain is a system which
    focuses on environmental monitoring in each and every link of the cold chain,
    based on IoT devices (Zeto, 2018). Problem identification and reporting are done
    rapidly in order to take immediate measures to control the damage. A mobile application
    is suggested for usage by consumers to scan Zeto labels on products in order to
    locate the product’s history.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 食品安全涉及以卫生方式加工、管理和存储食品。由于食品污染引起的疾病是当今世界的普遍问题。区块链很可能是一个有效的解决方案，因为它能够确保食品供应链的每个层面的透明度，从而提高食品安全的可追溯性。天（2017）提出了一个系统，促进了区块链与物联网的集成，用于实时监测物理数据和基于HACCP系统的追溯。这个系统对于保持易腐食品配送物流中的冷链至关重要。ZetoChain是一个系统，它专注于冷链的每一个环节的环境监测，基于物联网设备（Zeto，2018）。问题识别和报告迅速进行，以立即采取控制损害的措施。建议消费者使用移动应用程序扫描产品上的Zeto标签，以查找产品的历史。
- en: Food integrity is about a reliable exchange of food within the supply chain.
    Each actor has the responsibility to deliver complete details about goods, right
    from the origin to production. By means of blockchain, food companies can mitigate
    food fraud by quickly Identifying and linking outbreaks back to their specific
    sources is an essential step in assuaging fraud by rapid identification and resolving
    of outbreaks. This system is being adopted by several organizations and institutions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 食品完整性关乎供应链内食品的可靠交换。每个参与者都有责任提供关于货物的完整详细信息，从起源到生产。通过区块链，食品公司可以通过快速识别和追溯到特定来源来减轻食品欺诈是欺诈的必要步骤。这个系统正在被多个组织和机构采用。
- en: TERMS AND TERMINOLOGIES
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 术语和术语
- en: • Blockchain - A blockchain is a data structure that holds transactional records
    and ensures security, transparency and decentralization. It is like a chain of
    records stored in the form of blocks which are not controlled by any central authority.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链 - 区块链是一种数据结构，用于保存交易记录并确保安全、透明和去中心化。它就像是以块的形式存储的记录链，不受任何中央机构的控制。
- en: • Public blockchain - A public blockchain is a globally open network where anyone
    can participate in transactions and execute consensus protocol to determine which
    blocks get added to the chain and maintain a shared ledger.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 公开区块链 - 公开区块链是一个全球开放的网络，任何人都可以参与交易并执行共识协议，确定哪些区块被添加到链上并维护一个共享的账本。
- en: • Private blockchain - Private blockchain is a closed network where the participants
    require a verification process. There may be a limit to the number of participants
    in a private blockchain.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 私有区块链 - 私有区块链是一个封闭网络，参与者需要通过验证流程。私有区块链中的参与者数量可能有限。
- en: • Distributed Ledger - A database that is consensually distributed and ownership
    is shared across multiple parties. The data is replicated and stored synchronously
    on every node across the system.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 分布式账本 - 一个共识分布的数据库，所有权在多个参与方之间共享。数据在系统的每个节点上同步复制和存储。
- en: • Transaction - Transaction refers to the transfer of cryptocurrency or data
    between different nodes. Every transaction in a blockchain generates a hash.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 交易 - 交易是指不同节点之间的加密货币或数据传输。区块链中的每笔交易都生成一个哈希。
- en: • Ethereum - A public blockchain network and a decentralized software platform
    upon which developers build and run their applications.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 以太坊 - 一个公开的区块链网络和一个去中心化的软件平台，开发者可以在其上构建和运行他们的应用程序。
- en: • Cryptocurrency - A digital currency that is based on mathematical function
    and uses cryptographic encryption techniques to regulate the creation of units
    of currency. It also verifies the transfer of funds.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 加密货币 - 基于数学函数的数字货币，使用加密技术来调控货币单位的创建。它还验证资金的转移。
- en: • Gas - In Ethereum, Gas measures how much work an action takes to perform.
    It is a measure of the computational steps required for a transaction on the Ethereum
    network which is then equated to a fee for the users.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Gas - 在以太坊中，Gas 衡量一项操作所需的工作量。它是以太坊网络上一笔交易所需的计算步骤的度量，然后将其等价于用户的费用。
- en: • Gas limit - A limit set for each transaction which states the maximum amount
    of Gas that can be consumed by that particular transaction.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Gas 限制 - 为每笔交易设置的限制，指明该特定交易可以消耗的最大 Gas 量。
- en: • Ether - Ether is the native currency of the Ethereum blockchain network. It
    functions as a fuel of the entire Ethereum ecosystem by behaving as the medium
    of incentive and form of payment for different nodes or participants to execute
    essential operations.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 以太币 - 以太币是以太坊区块链网络的本地货币。它作为整个以太坊生态系统的燃料，通过作为节点或参与者执行基本操作的奖励媒介和支付形式。
- en: • Block - A collection of transactions on a blockchain network is gathered onto
    a set called a block which is hashed and added to the blockchain.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 区块 - 区块链网络上的一系列交易被聚集到一个称为区块的集合中，该集合被哈希并添加到区块链上。
- en: • Genesis block - The initial block within a blockchain system
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 创世区块 - 区块链系统中的初始区块。
- en: • Cryptographic Hash function - A function that returns a unique fixed-length
    string for every unique input. It creates a digital identification or a digital
    thumbprint.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 密码哈希函数 - 对于每个唯一的输入，返回一个唯一的固定长度字符串的函数。它创建一个数字标识或数字指纹。
- en: • Hash - Hash is the output of a cryptographic hash function. It is also known
    as a digital fingerprint. Hashes confirm transactions on a blockchain.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 哈希 - 哈希是加密哈希函数的输出。也被称为数字指纹。哈希确认区块链上的交易。
- en: • Smart Contract - A self-executing contract with the terms of agreement written
    into the code. They are automated actions that can be coded and executed once
    a set of conditions is met.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 智能合约 - 一种自执行合约，其中协议条款写入代码。它们是一种可以编码并在一组条件满足时执行的自动化操作。
- en: • Solidity - Solidity is a contract-oriented programming language which is used
    for writing smart contracts.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Solidity - Solidity是一种面向合约的编程语言，用于编写智能合约。
- en: • Token - A representation of a digital asset that is built on an existing blockchain
    system.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 代币 - 代表建立在现有区块链系统上的数字资产。
- en: • Bitcoin - It is the first cryptocurrency based on Proof of Work blockchain.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 比特币 - 它是基于工作证明区块链的第一个加密货币。
- en: • Proof of Work - A protocol for establishing consensus across a system that
    ties mining capacity to computing power. Hashing a block requires each miner to
    solve for a difficult variable known as a set, which results in a competition
    among the miners to solve for a set. For each hashed block, the process of hashing
    would have taken an amount of time and computational effort. This hashed block
    is considered Proof of Work.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 工作证明 - 一种建立系统共识的协议，将挖矿能力与计算能力联系起来。对一个区块进行哈希需要每个矿工解决一个称为难度目标的难题，这导致矿工之间竞争解决难题。对于每个经过哈希的区块，哈希过程将会花费一定的时间和计算功夫。这个经过哈希的区块被视为工作证明。
- en: • Consensus - When a majority of participants of a blockchain network agree
    on the validity of a transaction that happens within the blockchain system
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 共识 - 当区块链网络的大多数参与者就区块链系统内发生的交易的有效性达成一致意见时。
- en: • Authentication - The process of recognizing a user’s identity by associating
    an incoming request with a set of identifying credentials.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 认证 - 通过将传入请求与一组身份验证凭据相关联来识别用户身份的过程。
- en: • Digital trust - It is the participant’s confidence in a blockchain network’s
    ability to protect and secure data.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 数字信任 - 这是参与者对区块链网络保护和安全数据的信心。
- en: • Threat - A threat is any incident that can cause damage to a system by creating
    a loss of confidentiality, availability or integrity. It can be accidental or
    deliberate.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 威胁 - 任何可能导致系统损害的事件，通过创建机密性、可用性或完整性的丧失。它可以是意外的或蓄意的。
- en: • Vulnerability - Vulnerability is a latent weakness in a system which can be
    exposed by a threat.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 漏洞 - 漏洞是系统中的一种潜在弱点，可能会被威胁所暴露。
- en: • Attack - An attack is a deliberate unauthorized action on a system. It could
    be active or passive.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 攻击 - 攻击是对系统的蓄意未经授权的行为。它可以是主动的或被动的。
- en: • Spoofing - A spoofing attack is an event in which a malicious user or a program
    successfully identifies as another by falsifying its identity to gain illegitimate
    access or advantage. In the blockchain technology, spoofing refers to the ability
    of the attacker to masquerade as another on the blockchain network.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **欺骗** - 欺骗攻击是指恶意用户或程序成功冒充他人以获得非法访问或优势的事件。在区块链技术中，欺骗指的是攻击者能够在区块链网络上冒充他人的能力。
- en: • Tampering - Tampering attack refers to deliberately modifying data through
    unauthorized channels in order to violate the integrity of the data.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **篡改** - 篡改攻击指的是通过未经授权的渠道故意修改数据，以违反数据的完整性。
- en: • Repudiation - A repudiation attack is an event when a system does not adopt
    controls to efficiently track and log the actions of the nodes or users and thereby
    allowing illegitimate manipulation or forging the identification of new actions.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **否认** - 否认攻击是指系统未采用有效的控制措施来跟踪和记录节点或用户的操作，从而允许非法操纵或伪造新操作的识别。
- en: • Information Disclosure - Information disclosure attack is aimed at acquiring
    specific information from a system by an illegitimate user. This information will
    most likely be classified as sensitive. Breaches of confidentiality fall under
    information disclosure.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **信息泄露** - 信息泄露攻击旨在由非法用户从系统中获取特定信息。这些信息很可能被归类为敏感信息。保密性的违反属于信息泄露范畴。
- en: • Elevated privileges - Elevated privileges attack is when a user manages to
    get unauthorized levels of control over the system. The user may be an authenticated
    user who is denied access to sensitive information of the system.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **提升权限** - 提升权限攻击是指用户成功获得对系统的未经授权的控制级别。该用户可能是一个经过身份验证但被拒绝访问系统敏感信息的用户。
- en: • Blockchain network - A blockchain network is the underlying network that the
    nodes use to communicate. The network defines the protocol that states how communication
    occurs within the blockchain ecosystem.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **区块链网络** - 区块链网络是节点用于通信的基础网络。该网络定义了协议，规定了区块链生态系统内部的通信方式。
- en: • Node - Any computer which is connected to the blockchain network is called
    a node. It is a copy of the ledger which is operated by a legitimate user on the
    blockchain system. A full node is a computer which can fully validate transactions
    and download the entire data of a specific blockchain. A lightweight node does
    not download the entire data and uses different validation mechanisms.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **节点** - 任何连接到区块链网络的计算机都称为节点。它是由区块链系统上的合法用户操作的分类账的副本。完整节点是一台可以完全验证交易并下载特定区块链的整个数据的计算机。轻量级节点不会下载整个数据，而是使用不同的验证机制。
- en: • Encryption - A process that combines plaintext with a shorter string of data
    known as key to produce a ciphertext. The ciphertext can be decrypted into the
    original plaintext by someone who has the key.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • **加密** - 一种过程，将明文与称为密钥的较短数据字符串结合起来产生密文。持有密钥的人可以将密文解密为原始明文。
- en: • Nonce - A number used only once in a cryptographic communication process.
    It often includes a timestamp.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 随机数（Nonce）- 在加密通信过程中仅使用一次的数字。通常包括时间戳。
- en: • DDoS Attack - A cyber-attack in which the attacker tries to make a machine
    or a network resource unavailable to legitimate users by temporarily or indefinitely
    disrupting the services.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • DDoS 攻击 - 一种网络攻击，攻击者试图通过暂时或永久地中断服务，使合法用户无法使用一台机器或网络资源。
- en: • 51% attack - A situation in which a majority of miners in a blockchain system
    launch an attack on the rest of the nodes which allows for double-spending.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 51% 攻击 - 区块链系统中大多数矿工对其他节点发起攻击的情况，这允许进行双重支付。
- en: • Double spending - The event during which someone in a blockchain system tries
    to send a specific transaction to two different recipients at the same time.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 双重支付 - 区块链系统中某人尝试同时向两个不同的接收方发送特定交易的事件。
- en: • Big data - Big data is the compilation of massive datasets. It is the field
    that treats ways to analyze and extract information from datasets that are too
    complex to be dealt with traditional data processing techniques.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 大数据 - 大数据是大规模数据集的汇编。它是一个处理分析和从数据集中提取信息的领域，这些数据集过于复杂，无法用传统的数据处理技术处理。
- en: • IoT - Internet of Things refers to a network of connected devices that are
    capable of collecting and exchanging data with one another.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 物联网（IoT）- 指的是一组连接的设备网络，这些设备能够收集并交换彼此之间的数据。
- en: PROPERTIES OF BLOCKCHAIN
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的特性
- en: Blockchain offers several properties that make it a widely sought and suitable
    technology for several use cases and business solutions. Every blockchain has
    a chain of blocks that store information. Each block holds information about transactions
    and the values appertaining to these transactions are hashed and stored in the
    blocks. This elemental working of blockchain institutes several properties that
    ensure integrity, confidentiality and transparency of the data pertaining to the
    various transactions. Listed below are the properties of a blockchain that makes
    it suitable for several use cases.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链提供了几个特性，使其成为多个用例和业务解决方案的广泛适用和合适的技术。每个区块链都有一个存储信息的区块链。每个区块都包含关于交易的信息，以及与这些交易相关的值被散列并存储在区块中。区块链的这种基本工作机制形成了几个特性，确保了与各种交易相关的数据的完整性、机密性和透明性。以下是使区块链适用于多个用例的特性。
- en: Immutability
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 不可变性
- en: Immutability means something that cannot be changed or altered. Each block of
    information, such as facts or transaction details, proceeds using a cryptographic
    principle or a hash value. That hash value consists of an alphanumeric string
    generated by each block separately. Every block not only contains a hash or digital
    signature for itself but also for the previous one. This ensures that blocks are
    retroactively coupled together and unmodified. This functionality of blockchain
    technology ensures that no one can intrude upon the system. This feature also
    ensures that the network will be intact and unaltered throughout.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 不可变性意味着某物无法改变或更改。每个信息块，例如事实或交易详情，都使用密码学原理或哈希值进行处理。该哈希值由每个区块单独生成的包含字母数字字符串。每个区块不仅包含自身的哈希或数字签名，还包含前一个区块的。这确保了区块被回溯地耦合在一起且未经修改。区块链技术的这一功能确保了没有人可以侵入系统。这个特性还确保了网络在整个过程中保持完整和不变。
- en: Every block in a blockchain has the hash of the previous block. Hence, tampering
    of data in a particular block requires strenuous efforts and is almost impossible
    to succeed. Changing the value of a block changes its hash value and therefore
    the ‘previous block’s hash value’ of the next block. Since this hashing is quite
    complex, it is impossible to reverse it. This property of blockchain ensures the
    integrity of data.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的每个区块都具有前一个区块的哈希。因此，在特定区块中篡改数据需要费力的努力，几乎是不可能成功的。改变一个区块的值会改变其哈希值，因此也会改变下一个区块的“上一个区块的哈希值”。由于这种哈希是相当复杂的，因此不可能将其逆转。区块链的这个特性确保了数据的完整性。
- en: Decentralization
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 去中心化
- en: The entire blockchain network is decentralized in that, a group of nodes maintains
    the network and there is no centralized governing authority involved. Due to the
    absence of a governing authority, anybody can access the network and deposit their
    assets in it. Every user will have their own private key with which they can directly
    access the data stored that they stored. This feature offers several advantages.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 整个区块链网络是去中心化的，一组节点维护网络，没有中央管理机构参与。由于缺乏管理机构，任何人都可以访问网络并将其资产存入其中。每个用户都将拥有自己的私钥，通过该私钥可以直接访问他们存储的数据。这个特性带来了几个优点。
- en: No Single Point Failure
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 无单点故障
- en: Since the data is stored in several nodes and because of the absence of a centralized
    authority, there will be no single point failure
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据存储在多个节点上，并且没有中央管理机构，因此不会有单一故障点。
- en: Expensive to Attack
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击成本高昂
- en: Attacking the network will be an expensive task as it involves attending to
    more than one node.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击网络将是一项昂贵的任务，因为它涉及到多个节点。
- en: No Third Parties
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 无第三方
- en: Users can have direct access to their assets without having to approach any
    third parties.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以直接访问他们的资产，而不必向任何第三方寻求帮助。
- en: User Control
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 用户控制
- en: With decentralization, users have complete control over their properties. They
    do not have to rely on any third party to maintain their assets.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 通过去中心化，用户对自己的资产拥有完全控制权。他们不必依赖于任何第三方来维护他们的资产。
- en: Distributed Ledger
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式分类账
- en: Blockchain is a decentralized as well as an open ledger. Ledger is a record
    or log of the transactions done. Since it is visible to everyone in the blockchain
    system, it is called an open ledger. No individual or any institution is in charge
    of the transactions. Each and every node in the blockchain network has the same
    copy of the ledger. This feature offers several advantages.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个去中心化和公开的分类账。分类账是已完成交易的记录或日志。由于它对区块链系统中的每个人都可见，所以被称为公开分类账。没有个人或任何机构负责交易。区块链网络中的每个节点都有相同的分类账副本。这个特性提供了几个优点。
- en: No Malicious Modifications
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 无恶意修改
- en: Since Blockchain is a distributed ledger, it responds really well to any suspicious
    activity or tamper. As no one can change the ledger and everything updates real
    fast, tracking what’s happening in the ledger is quite easy with all these nodes.
    Since it is an open ledger, blockchain ensures that any change made is visible
    to everyone on the network, making it too risky and hard for the hackers to make
    modifications.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块链是分布式分类账，它对任何可疑活动或篡改都做出了很好的响应。由于没有人可以更改分类账，而且所有内容都更新得非常快，因此使用所有这些节点追踪分类账中发生的情况非常容易。由于它是一种公开的分类账，区块链确保对网络上的每个人都可见的任何更改，这使得黑客修改数据变得非常危险和困难。
- en: Ownership of Verification
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 验证所有权
- en: In a blockchain system, each node acts as a verifier of the ledger. If a user
    wants to add a new block, others would have to verify the transaction first and
    then give an approval. This makes each user a fair and safe participant.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链系统中，每个节点都充当分类账的验证者。如果用户想要添加一个新的区块，其他人必须先验证交易，然后给予批准。这使每个用户成为公平和安全的参与者。
- en: Equal Privileges
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 平等特权
- en: No one on the network can get any special favors from the network. Everyone
    has to go through the usual channels and then add their blocks. There is no hierarchy
    of privileges in a blockchain system. The decentralization property of a blockchain
    makes the blockchain network a peer to peer network. This property allows the
    blockchain to involve only two parties, the sender and receiver, thereby totally
    eliminating a third-party authorization. Every node in the network can authorize
    itself.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上的任何人都不能从网络中获得任何特殊优惠。每个人都必须通过常规渠道，然后添加他们的区块。在区块链系统中没有特权等级。区块链的去中心化属性使区块链网络成为点对点网络。该属性使区块链只涉及两个方，发送者和接收者，从而完全消除了第三方授权。网络中的每个节点都可以授权自己。
- en: Transparency
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 透明度
- en: The decentralized nature of the blockchain technology ensures a high degree
    of transparency. A transparent profile is created for every participant. Every
    change on the blockchain is viewable and is ultimately established more concretely.
    Every transaction made is recorded and is viewable by every participant in the
    network. This underlying nature of blockchain ensures that the changes are concrete
    and makes it a good fit for applications encompassing the need for making storages
    and transactions visible to all stakeholders. In a public blockchain, everyone
    in the blockchain network can see the transactions, so it is super transparent.
    On the other hand, a private or federated blockchain could be the best choice
    for enterprises who want to remain transparent among staff and protect their sensitive
    information along the way from public view.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术的去中心化特性确保了高度透明性。为每个参与者创建了透明的个人资料。区块链上的每一次变更都是可查看的，并最终被更具体地建立。每笔交易都被记录下来，并且每个网络参与者都可以查看。区块链的这种基本特性确保了变更的具体性，并使其非常适合需要使存储和交易对所有利益相关者可见的应用。在公共区块链中，区块链网络中的每个人都可以看到交易，因此它非常透明。另一方面，对于希望在员工中保持透明并保护他们的敏感信息免于公众视线的企业来说，私有或联盟区块链可能是最佳选择。
- en: Consensus
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 共识
- en: A consensus mechanism/algorithm is crucial when multiple participants need to
    validate a transaction taking place in the network, especially in public blockchains
    that operate as decentralized, self-regulating systems working on a very large
    scale without any single authority. They involve contributions from a vast number
    of participants who work on verification and authentication of transactions occurring
    on the blockchain. The architecture is cleverly designed and consensus algorithms
    are at the core of this architecture. Every blockchain has a consensus to help
    the network make decisions. A consensus ensures that all the transactions occurring
    in the chain are legitimate and all of the stakeholders agree upon the state of
    the distributed ledger.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 共识机制/算法在多个参与者需要验证网络中发生的交易时至关重要，特别是在作为去中心化、自我调节系统以无任何单一管理机构运行的公共区块链中。它们涉及到大量参与者的贡献，这些参与者负责验证和认证区块链上发生的交易。这种架构设计巧妙，共识算法是这种架构的核心。每个区块链都有一个共识机制来帮助网络做出决策。共识确保了链中发生的所有交易都是合法的，并且所有利益相关者都同意分布式账本的状态。
- en: Security
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 安全
- en: The records on a blockchain are secured through cryptographic algorithms, including
    hashing techniques, which is a cardinal aspect of the blockchain technology. Each
    participant holds a unique private key that they can use to access their assets
    and hence acts as a personal digital signature. If a record is altered, the hash
    will become invalid and the peer network will know right away about the discrepancies.
    This ensures that once the transaction blocks get added on the ledger, no one
    can just go back and change it. Thus, any user on the network won’t be able to
    edit, delete or update it. The risks in a supply chain management system may arise
    from attacks by external or internal entities. One of the big advantages of using
    blockchain for supply chain management is that it promises to eliminate intermediaries
    or any third party authentication, instead, it enables peer-to-peer interaction
    and exchange of data. This quality of a blockchain makes the network a steady
    and secure environment.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链上的记录通过包括哈希技术在内的加密算法进行安全保护，这是区块链技术的一个重要方面。每个参与者持有一个唯一的私钥，他们可以使用该私钥来访问其资产，因此充当个人数字签名。如果记录被更改，哈希将变得无效，对等网络将立即知道不一致之处。这确保了一旦交易块添加到分类账上，就没有人可以随意返回并更改它。因此，网络上的任何用户都无法编辑、删除或更新它。供应链管理系统中的风险可能来自外部或内部实体的攻击。使用区块链进行供应链管理的一个重要优势之一是，它承诺消除中间人或任何第三方认证，而是使对等互动和数据交换成为可能。区块链的这种特性使网络成为一个稳定且安全的环境。
- en: MATHEMATICAL MODEL
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 数学模型
- en: 'The underlying mathematical model of blockchain technology involves a cryptographic
    concept called the Elliptic Key Cryptography (ECC). It is a type of asymmetric
    cryptography that is widely used in the implementation of Blockchains, especially
    to validate transactions and to ensure that the transactions are authorized to
    execute. There are two main ways ECC in which ECC can be used:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术的基本数学模型涉及一种称为椭圆曲线密码学（ECC）的加密概念。它是一种广泛用于区块链实现中的非对称加密，特别是用于验证交易并确保交易被授权执行。ECC
    可以通过以下两种主要方式使用：
- en: • Elliptic Curve Digital Signature Algorithm (ECDSA)
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 椭圆曲线数字签名算法（ECDSA）
- en: • Elliptic Curve Diffie-Hellman key exchange (ECDH)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 椭圆曲线 Diffie-Hellman 密钥交换（ECDH）
- en: ECDSA is used to generate signatures for transactions, whereas ECDH is used
    to encrypt the message that needs to be transacted. Blockchain and its applications
    including Bitcoins, widely use the ECDSA to validate and authorize transactions.
    ECC relies on mathematics to ensure that a transaction is secure.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: ECDSA 用于生成交易的签名，而 ECDH 用于加密需要交易的消息。区块链及其应用，包括比特币，广泛使用 ECDSA 来验证和授权交易。ECC 依赖数学来确保交易的安全性。
- en: An elliptic curve is a plane curve defined by an equation of the form,
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 椭圆曲线是由形式为
- en: y² = x³ + ax + b
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: y² = x³ + ax + b
- en: The values of a and b determine the shape of the elliptic curve and different
    values a and b result in different elliptic curves. Elliptic curves have numerous
    properties, one such property is that when a nonvertical line intersects two non-tangent
    points in the curve, it will always intersect a third point on the curve.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: a 和 b 的值确定了椭圆曲线的形状，不同的 a 和 b 值导致不同的椭圆曲线。椭圆曲线有许多属性，其中一种属性是当一条非垂直线与曲线上的两个非切点相交时，它总是会与曲线上的第三个点相交。
- en: '| Figure 1\. Elliptic Curve Digital Signature Algorithm Graph |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 图 1\. 椭圆曲线数字签名算法图 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f01](i/ch007.f01.png) |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f01](i/ch007.f01.png) |'
- en: '| *Note. P and Q are two distinct points on an elliptic curve, and P is not
    -Q. To add the points P and Q, a line is drawn through the two points. This line
    intersects the elliptic curve in exactly one more point, R`. The point R` is reflected
    in the x-axis to point R. The law for addition in an elliptic curve group is P
    + Q = R. From https://medium.com/dataseries/explaining-the-math-behind-blockchain-algorithms-98d06e06c2e3*
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| *注. P 和 Q 是椭圆曲线上的两个不同的点，并且 P 不是 -Q。为了添加点 P 和 Q，通过这两点画一条线。这条线在椭圆曲线上交叉点处恰好再相交一个点，R''。点
    R'' 在 x 轴上反射到点 R。椭圆曲线群的加法法则是 P + Q = R。来源 https://medium.com/dataseries/explaining-the-math-behind-blockchain-algorithms-98d06e06c2e3*
    |'
- en: The points P and Q on the curve, as seen in Figure 1, are added to find the
    corresponding third point R. For instance, consider two points, P(x[1], y[1])
    and Q(x[2,] y[2]). To find the sum of the points P and Q, define,
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在曲线上的点 P 和 Q，如图 1 所示，被添加以找到相应的第三点 R。例如，考虑两点，P(x[1], y[1]) 和 Q(x[2,] y[2])。为了找到点
    P 和 Q 的和，定义，
- en: λ = (y[2] - y[1])/(x[2] - x[1]) mod M
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: λ = (y[2] - y[1])/(x[2] - x[1]) mod M
- en: Then the sum R(x[3], y[3]) = P(x[1], y[1]) + Q(x[2,] y[2]) is given by,
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然后求和 R(x[3], y[3]) = P(x[1], y[1]) + Q(x[2,] y[2]) 由此给出，
- en: x[3] = λ - x[1] - x[2] mod M
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: x[3] = λ - x[1] - x[2] mod M
- en: y[3] = λ (x[3] - x[1]) + y[1] mod M
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: y[3] = λ (x[3] - x[1]) + y[1] mod M
- en: This is the concept with which blockchains are implemented. In practical real-world
    scenarios, M is chosen to be a prime non-zero integer. Then, a base point (x[1],
    y[1]) is chosen such that the number of times the point (x[1], y[1]) can be added
    to itself before it fails due to division by zero is a prime number, this is called
    order, and a value that is as large as M. A private key (k[1]) is then set. To
    obtain the public key (x[3], y[3]),
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实现区块链的概念。在实际的现实场景中，M 被选择为一个质数非零整数。然后，选择一个基点 (x[1], y[1])，使得点 (x[1], y[1])
    能够在因为除零而失败之前加到自身的次数是一个质数，这被称为阶，以及一个与 M 一样大的值。然后设置一个私钥 (k[1])。为了获得公钥 (x[3], y[3])，
- en: (x[3], y[3]) = k[1] * (x[1], y[1])
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: (x[3], y[3]) = k[1] * (x[1], y[1])
- en: Now, to construct a digital signature S(x[4], y[4]) of the data using the private
    and public keys, choose a value for k[2], such that k[2] lies between 0 and the
    value of the order. The digital signature is then defined as,
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用私钥和公钥构造数据的数字签名 S(x[4], y[4])，选择一个值 k[2]，使得 k[2] 位于 0 和阶值之间。数字签名然后定义为，
- en: (x[4], y[4]) = k[2] * (x[1], y[1])
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: (x[4], y[4]) = k[2] * (x[1], y[1])
- en: Now, let Z be the data, then,
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，设Z为数据，则，
- en: y[4] = (Z + x[4] * k[1]) / k[2] mod n, where n is the order
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: y[4] = (Z + x[4] * k[1]) / k[2] mod n，其中n是阶数
- en: For a person to verify the legitimacy of the transaction, let,
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证交易的合法性，让，
- en: s[1] = y[4] – 1 mod n
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: s[1] = y[4] – 1 mod n
- en: s[2] = Z * s[1] mod n
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: s[2] = Z * s[1] mod n
- en: s[3] = x[4] * s[1] mod n
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: s[3] = x[4] * s[1] mod n
- en: (t[1],t[2]) = s[1] * (x[1], y[1]) + s[3] * (x[3], y[3]) * 5
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: (t[1],t[2]) = s[1] * (x[1], y[1]) + s[3] * (x[3], y[3]) * 5
- en: Finally, verifying if t[1] is equal to x[4] will yield the result of the verification
    of the transaction’s legitimacy.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，验证t[1]是否等于x[4]将产生对交易合法性的验证结果。
- en: CONTEXT OF RESEARCH
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 研究背景
- en: '| Figure 2\. Context of Research |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 图2\. 研究背景 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f02](i/ch007.f02.png) |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f02](i/ch007.f02.png) |'
- en: '| *Note. Various options available for the implementation of blockchain systems
    and the chosen methodologies are highlighted.* |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| *注：突出显示了实现区块链系统和选择方法的各种选项。* |'
- en: Food Supply Chain Management can be implemented by leveraging several technologies
    and tools. The chosen ones are highlighted in Figure 2.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 食品供应链管理可以通过利用多种技术和工具来实现。所选择的技术在图2中突出显示。
- en: Based on the conclusions drawn from the literature survey, the software technologies
    and platforms for implementing different functionalities of the proposed system
    have been selected. The major considerations for the selection process include
    ease of usability, maintaining efficiency and ensuring transparency.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 根据文献调研得出的结论，已经选择了实现拟议系统不同功能的软件技术和平台。选择过程的主要考虑因素包括易用性、保持效率和确保透明度。
- en: Blockchain Technology
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术
- en: There are certain key features that are expected out of a Food Supply Chain
    Management system especially when the products involve perishable goods. Each
    participant in the Supply Chain is responsible for delivering a consumable product
    to the final end customer. For such use cases, immutability, transparency and
    traceability become indispensable factors. Blockchain Technology is used in this
    system because of its ability to support and provide such features.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及易腐货物的产品时，对于食品供应链管理系统有一些关键特性是必不可少的。供应链中的每个参与者都负责向最终客户交付可消费的产品。对于这种使用情况，不可变性、透明度和可追溯性成为不可或缺的因素。区块链技术在该系统中得到应用，因为它能够支持并提供这些特性。
- en: Why Not Artificial Intelligence or Machine Learning?
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不选择人工智能或机器学习？
- en: By definition, Artificial Intelligence represents the ability of a digital computer
    or computer-controlled robot to perform tasks commonly associated with intelligent
    beings. Machine learning is an application of AI-based around the idea that machines
    should be given access to data and let them learn for themselves. However advanced,
    no technology is ideal. One incorrect prediction by an Artificial Intelligent
    robot, for example, prediction of the health of a food product in a food supply
    chain management, will lead to health as well as business concerns. Additionally,
    Artificial Intelligence involves automation rather than the manual entry of data.
    This requires the developer to have deep knowledge about factors that will determine
    the spoilage of food and so on.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 从定义上来说，人工智能代表了数字计算机或计算机控制的机器人执行与智能生物常见的任务的能力。机器学习是基于机器应该被赋予数据访问权，并让它们自行学习这一想法的应用。然而，即使再先进，也没有一种技术是完美的。例如，人工智能机器做出的一次错误预测，比如在食品供应链管理中预测食品产品的健康状况，都会引起健康以及商业上的担忧。此外，人工智能涉及自动化而不是手动输入数据。这需要开发人员对决定食物变质等因素有深入的了解。
- en: Ethereum
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊
- en: Ethereum Platform is an Open Source, distributed public blockchain network which
    has its own cryptocurrency called Ether. Each transaction in an Ethereum Blockchain
    requires Gas and a Gas Limit can be set, which is the maximum amount of Gas that
    can be consumed by a transaction. The data and details about a transaction are
    stored in blocks and each block is uniquely identified by using a hash value.
    Ethereum also provides its own Virtual Machine called the Ethereum Virtual Machine
    (EVM) which can be used to run the smart contracts.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊平台是一个开源的、分布式的公共区块链网络，拥有自己的加密货币称为以太币。以太坊区块链中的每一笔交易都需要燃气（Gas），并且可以设置一个燃气限制（Gas
    Limit），这是交易能够消耗的最大燃气量。交易的数据和细节存储在区块中，每个区块通过使用哈希值进行唯一标识。以太坊还提供了自己的虚拟机，称为以太坊虚拟机（EVM），可以用来运行智能合约。
- en: Why Not Hyperledger?
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不选择超级账本？
- en: Hyperledger Fabric is a modular blockchain framework that acts as a foundation
    for developing blockchain-based products, solutions, and applications using plug-and-play
    components that are aimed for use within private enterprises. There are no significant
    disadvantages to be discussed about Hyperledger. Although, Ethereum has significant
    advantages over Hyperledger for Supply chain management. Ethereum is transparent
    which is necessary for a supply chain management system. It has a built-in cryptocurrency
    called Ether, unlike Hyperledger. Ethereum runs smart contracts with the purpose
    of being decentralized and for mass consumption. While Hyperledger leverages blockchain
    technology for business with high confidentiality. Hence, with this proper supporting
    evidence, it is obvious that Ethereum is more suitable for supply chain management
    applications.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 是一个模块化的区块链框架，作为开发基于区块链的产品、解决方案和应用程序的基础，使用即插即用的组件，旨在私有企业内使用。关于
    Hyperledger 没有什么重要的缺点可讨论。尽管以太坊在供应链管理方面具有显著的优势。以太坊是透明的，这对于供应链管理系统是必要的。它有一个名为 Ether
    的内置加密货币，而 Hyperledger 没有。以太坊以去中心化和大规模消费为目的运行智能合约。而 Hyperledger 则利用区块链技术为具有高机密性的企业业务提供支持。因此，通过这些充分的支持证据，显然以太坊更适合供应链管理应用程序。
- en: Truffle Framework
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 框架
- en: The Truffle Framework provides an entire suite of tools for building and testing
    a blockchain. It provides features for compiling, linking and deploying smart
    contracts and all of these are in-built within the framework. Additionally, it
    uses Node Package Manager or Ethereum Package Manager for package installation,
    version management, and dependency management. The Truffle Framework consists
    of three primary development frameworks for Ethereum smart contracts and decentralized
    application development called Truffle, Ganache, and Drizzle. Hence, it was chosen
    for the development of this prototype.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 框架提供了一个完整的工具套件，用于构建和测试区块链。它提供了用于编译、链接和部署智能合约的功能，所有这些功能都内置在框架中。此外，它使用
    Node Package Manager 或 Ethereum Package Manager 进行软件包安装、版本管理和依赖管理。Truffle 框架由三个主要的以太坊智能合约和去中心化应用程序开发框架组成，分别称为
    Truffle、Ganache 和 Drizzle。因此，选择了它来开发这个原型。
- en: Truffle
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle
- en: Truffle is made for building dApps using the Ethereum Virtual Machine (EVM)
    by providing a development environment, testing framework
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 是为了使用以太坊虚拟机（EVM）构建 dApps 而制作的，它提供了一个开发环境、测试框架
- en: Ganache
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache
- en: Ganache is a personal blockchain that allows developers to create smart contracts,
    dApps, and test software that is available as a desktop application and command-line
    tool
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache 是一个个人区块链，允许开发人员创建智能合约、dApps 和测试软件，作为桌面应用程序和命令行工具提供
- en: Drizzle
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Drizzle
- en: Drizzle is a JavaScript-based front-end development library that is capable
    of automatically synchronizing contract and transaction data
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Drizzle 是一个基于 JavaScript 的前端开发库，能够自动同步合约和交易数据
- en: PROPOSED SYSTEM
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 提议系统
- en: The architecture adopted in this system is the Layered Architecture. Each of
    the components within the system is organized into horizontal layers, with each
    layer performing a specific function within the application. Each layer has a
    specific responsibility which contributes to the proper functioning of the system.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 本系统采用的架构是分层架构。系统中的每个组件都组织成水平层，每一层在应用程序中执行特定功能。每一层都有具体的职责，有助于系统的正常运行。
- en: The Application Layer, Interface Layer, Transaction Layer, Blockchain Layer
    and Physical Layer interact with each other in an orderly fashion and form their
    own abstraction around the work that needs to be done in order to satisfy a request.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 应用层、接口层、事务层、区块链层和物理层按顺序相互交互，并围绕着满足请求所需的工作形成自己的抽象。
- en: Layered Architecture improves the maintainability, scalability and flexibility
    of the entire system as each layer is concerned with only a particular task and
    thereby makes a contribution in satisfying a request.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 分层架构提高了整个系统的可维护性、可扩展性和灵活性，因为每个层次只关注特定任务，从而为满足请求做出贡献。
- en: '| Figure 3\. Conceptual Architecture |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| 图3. 概念架构 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f03](i/ch007.f03.png) |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f03](i/ch007.f03.png) |'
- en: '| *Note. The various layers considered for the Food Supply Chain using Blockchain
    is shown.* |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| *注意。考虑使用区块链实现食品供应链时所考虑的各个层次如下所示。* |'
- en: The conceptual architecture visually describes, at a high level, the particulars
    of the Food Supply Chain Management System. The purpose of this Conceptual Architecture
    is to provide information that cannot be easily conveyed through words. The architecture
    considered for implementing Food Supply Chain using Blockchain is layered.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 概念架构在高层次上视觉描述了食品供应链管理系统的细节。概念架构的目的是提供无法用言语轻松传达的信息。考虑使用区块链实现食品供应链的架构是分层的。
- en: Application Layer
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 应用层
- en: The topmost layer of the Architecture, as shown in Figure 3, is the Application
    Layer which emphasizes the deployment of the Smart Contracts and provides the
    entire Food Supply Chain Management as a Service to the users. In this layer,
    the smart contracts are brought into action by deploying them onto the underlying
    blockchain.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如图3所示，架构的最顶层是应用层，强调部署智能合约并向用户提供完整的食品供应链管理服务。在这一层中，智能合约通过部署到底层区块链来实现。
- en: Interface Layer
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 接口层
- en: The Interface Layer focuses on three major aspects. Each aspect satisfying the
    different functionalities of the system. The various stakeholders including the
    farmer, distributor, retailer and customer are registered within the system using
    the interfaces in this Layer. Additionally, interfaces for the traceback option
    provided to a registered customer. The various participants enter details specific
    to their role including factors such as humidity, temperature, price and so on.
    Additionally, the interface also provides a provision for removing stakeholders
    from the system.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接口层专注于三个主要方面。每个方面满足系统不同功能的需求。农民、分销商、零售商和顾客等各方参与者通过该层中的接口在系统内注册。此外，还为注册顾客提供了追溯选项的接口。各参与者根据其角色输入特定的细节，包括湿度、温度、价格等因素。此外，接口还提供了从系统中移除利益相关者的选项。
- en: Transaction Layer
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 交易层
- en: This layer shows various levels of users involved in the transaction. A 20-byte
    address represents the account or stakeholder that initiates the transaction.
    Gas Limit is the maximum amount of Gas a user is willing to pay for a transaction.
    A typical simple transaction usually requires a gas limit of 21000\. A value should
    be assigned to each gas which is basically the value a user is willing to pay
    for each gas unit.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这一层展示了涉及交易的各级用户。一个 20 字节的地址表示发起交易的账户或利益相关者。Gas 限制是用户愿意为一笔交易支付的最大 Gas 量。一个典型的简单交易通常需要一个
    Gas 限制为 21000。每个 Gas 都应分配一个值，这基本上是用户愿意为每个 Gas 单位支付的值。
- en: Blockchain Layer
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链层
- en: This layer is where the blocks are created and managed. Each block stores information
    about a transaction, the various participants involved in a transaction, the gas
    used up to perform the transaction and the data exchanged between the participants.
    Each block has a hash value that uniquely identifies the block. The blocks connect
    with one another by referring to the hash value of the previous block.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这一层是区块的创建和管理层。每个区块存储有关交易的信息，包括涉及交易的各方参与者、执行交易所使用的 gas 以及参与者之间交换的数据。每个区块都有一个唯一标识区块的哈希值。区块通过引用上一个区块的哈希值来相互连接。
- en: Physical Layer
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 物理层
- en: The last layer, as shown in Figure 3, is the Physical Layer. The blocks created
    in the previous step are stored in Databases in the Physical Layer. In Ethereum,
    a block can hold up to 20 to 30 kb of data.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一层是物理层，如图 3 所示。前一步创建的区块存储在物理层的数据库中。在以太坊中，一个区块可以容纳 20 到 30 kb 的数据。
- en: REQUIREMENTS
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要求
- en: This section attempts to highlight the functional and non-functional requirements
    that are generally expected out of a Food Supply Chain Management system. Functional
    requirements explain the various elements that constitute a basic workflow of
    a supply chain management system, whereas non-functional requirements highlight
    the abstract and implicit factors that are inherently expected out of such systems.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Functional Requirements
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: User Accounts
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: Truffle provides us 10 different user accounts with some permissible amount
    of composition levels. These accounts are used by the different kinds of users
    like farmers, distributors, retailers, processors for making transactions and
    appending them to the blockchain.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Appending the Details at Each Phase
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: A farmer saves details of grown-up crops like origination, type of crop, the
    procedure used for sowing, storage info and so on using the mobile app. The information
    stored by farmers can be accessible by all involved stakeholders within the system.
    Once the crops are ready, the farmers distribute them to the food processing companies
    or refineries for further processing. After receiving food items from the farmers,
    refineries or food processing companies start processing and store the information
    related to the refining of crops on the public blockchain. After processing the
    food items, processing companies transport the processed food to the wholesalers
    and update transportation details on the blockchain. The wholesaler hires logistic
    service providers to distribute the items to different retailers. Transporting
    processed food through IoT-enabled vehicles or trucks help to keep the food items
    safe under controlled environments. The sensors built in the IoT vehicles send
    information related to the temperature of food items and real-time location to
    the blockchain.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: Traceback
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Information stored on the blockchain helps retailers or consumers verify if
    the food has been appropriately processed or not. From source to destination,
    the information such as farm origination details, batch numbers, transportation
    details, storage temperature, expiration details, are linked digitally to the
    food items within the supply chain blockchain. An end-consumer backtracks the
    food supply chain blockchain and ensures if the food is safe or not.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链上存储的信息帮助零售商或消费者验证食品是否经过适当处理。从源头到目的地，诸如农场起源详情、批号、运输详情、存储温度、到期详情等信息都与供应链区块链内的食品相关联。最终消费者可以追溯食品供应链区块链，并确保食品是否安全。
- en: Non-Functional Requirements
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 非功能需求
- en: Usability
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 可用性
- en: The application is designed with a simple user interface along with needed instructions
    to ensure that the user has a comfortable experience. The internal working of
    the blockchain are totally abstracted from the user to make it completely user
    friendly.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序设计了一个简单的用户界面，以及必要的说明，以确保用户有舒适的体验。区块链的内部工作完全对用户抽象，使其完全用户友好。
- en: Integrity
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 完整性
- en: The data regarding the goods are stored in a blockchain thus making it tamper-proof.
    The information regarding the supply of the goods is also stored in the blockchain
    thus those records become immutable. This prevents the denial of purchase by the
    distributors or denial of supply by the farmers.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 有关商品的数据存储在区块链中，因此具有防篡改性。有关商品供应的信息也存储在区块链中，因此这些记录变得不可变。这可以防止经销商拒绝购买或农民拒绝供应。
- en: Confidentiality
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 保密性
- en: This feature is about a reliable exchange of food within the supply chain without
    interference from unsolicited third parties. Each actor has the responsibility
    to deliver complete details about goods, right from the origin to production.
    By means of blockchain, food companies can mitigate food fraud by quickly identifying
    and linking outbreaks back to their specific sources is an essential step in assuaging
    fraud by rapid identification and resolving of outbreaks. This system is being
    adopted by several organizations and institutions for fraud prevention.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是关于在供应链中可靠地交换食品，而无需受到未经请求的第三方干扰。每个参与者都有责任提供有关商品的完整详情，从起源到生产。通过区块链，食品公司可以通过快速识别并将疫情与其特定来源联系起来来缓解食品欺诈是防止欺诈的重要一步。这个系统正在被多个组织和机构采用以防范欺诈。
- en: SETUP
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 设置
- en: Installation
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 安装
- en: As discussed in the Context of Research, for this application, the Truffle Framework
    is used for developing and compiling smart contracts and for deploying it in the
    Ethereum blockchain. Setting up this framework involves installing and configuring
    a set of tools and frameworks both as a dependency and for ease of usage as the
    development phase begins. Truffle Framework requires NodeJS and an operating system
    which is one among Windows, Linux or Mac OS X. NodeJS comes with its own package
    manager called Node Package Manager(NPM) which can be used for installing and
    managing packages. The installation and basic setup of the Truffle Framework,
    in a Windows machine, is explained in detail in the following subsection.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如研究背景中所讨论的，对于这个应用，Truffle 框架用于开发和编译智能合约，并在以太坊区块链上部署它。设置这个框架涉及安装和配置一组工具和框架，作为依赖性和在开发阶段开始时的使用便利性。Truffle
    框架需要 NodeJS 和一个操作系统，其中之一是 Windows、Linux 或 Mac OS X。NodeJS 自带一个包管理器，称为 Node Package
    Manager（NPM），可用于安装和管理包。在 Windows 机器上详细解释了 Truffle 框架的安装和基本设置，见下一小节。
- en: 1\. Install NodeJS for the respective operating system. This can be done by
    downloading the executable file from https://nodejs.org/en/ or using software
    management automation software like Chocolatey.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 根据相应的操作系统安装 NodeJS。可以从 https://nodejs.org/en/ 下载可执行文件，或者使用像 Chocolatey 这样的软件管理自动化软件。
- en: 2\. Setup NPM on the computer.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 在计算机上设置 NPM。
- en: 3\. Install Truffle using the Node Package Manager by typing the following command
    in the terminal,
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3\. 在终端中键入以下命令，使用 Node Package Manager 安装 Truffle，
- en: npm install -g truffle
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令全局安装 truffle：
- en: 4\. Once, Truffle is successfully installed, a new project needs to be created.
    This can be done in two ways,
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4\. 安装成功后，需要创建一个新项目。这可以通过两种方式完成，
- en: a. Create an empty project using the command,
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: a. 使用以下命令创建一个空项目，
- en: truffle init
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化 truffle：
- en: b. Create a project with existing code using the command,
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: b. 使用以下命令创建一个带有现有代码的项目，
- en: truffle unbox metacoin
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令初始化 metacoin 项目：
- en: Metacoin is a Truffle Box which acts as a boilerplate code to ease out the process
    of getting started with Truffle. Several such boxes are available in the Truffle
    website that helps focus on specific needs and applications.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: Metacoin 是一个 Truffle Box，作为一个样板代码，简化了使用 Truffle 开始的过程。Truffle 网站提供了许多这样的 Box，可帮助专注于特定的需求和应用。
- en: Structure of a Project in Truffle
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 项目的结构
- en: Truffle offers a wide range of functionalities to deal with compiling, testing,
    deploying and accessing smart contracts for a wide range of applications that
    use the Ethereum Blockchain. Truffle also provisions for several packages for
    easy building of a user interface and allows for interaction with the smart contracts
    in a simplified manner, both in terms of development and usage. A folder created
    for a Truffle project contains a number of subfolders including Contracts, Migrations
    and Test. It also consists of a configuration file. Each of these files and folders
    plays a role starting from the development of smart contracts up to its deployment
    and also for building a user interface for the distributed application. The functionalities
    of each of them are listed below.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 提供了广泛的功能来处理编译、测试、部署和访问使用以太坊区块链的各种应用的智能合约。Truffle 还为轻松构建用户界面提供了几个包，并允许以简化的方式与智能合约进行交互，无论是在开发还是使用方面。一个
    Truffle 项目创建的文件夹包含多个子文件夹，包括 Contracts、Migrations 和 Test。它还包括一个配置文件。这些文件和文件夹中的每一个从智能合约的开发到部署，再到分布式应用的用户界面构建，都发挥着重要作用。它们各自的功能如下所示。
- en: Contracts Folder
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 合约文件夹
- en: The Contracts folder is where all the smart contracts required by the dApp are
    stored. In addition to the user-specific smart contracts, it also holds one called
    Migration.sol. The primary purpose of this contract is to keep track of all the
    migrations that take place in the network. It basically acts as as an interface
    to manage the deployments
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 合约文件夹存储了 dApp 所需的所有智能合约。除了用户特定的智能合约外，它还包含一个称为 Migration.sol 的合约。该合约的主要目的是跟踪网络中发生的所有迁移。它基本上充当了管理部署的接口。
- en: Migrations Folder
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移文件夹
- en: Migrations involve deploying contracts to the Ethereum network. As the project
    changes and scales up as the development furthers, new migration scripts need
    to be created. The Migration folder holds JavaScript files that deploy Migrations.sol
    to the blockchain. As more number of migrations are incorporated, the Javascript
    files in the Migrations folder increases by count.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移涉及将合约部署到以太坊网络中。随着项目的变化和开发的进展，需要创建新的迁移脚本。迁移文件夹包含部署 Migration.sol 到区块链的 JavaScript
    文件。随着迁移的增加，迁移文件夹中的 JavaScript 文件数量也相应增加。
- en: Test Folder
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 测试文件夹
- en: Truffle has a built-in automated testing framework that can be leveraged to
    test smart contracts. When running tests against Ethereum clients like Ganache
    or Truffle Develop, Truffle ensures that the various test files do not share state
    with each other. Test codes can either be written in Solidity or JavaScript.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 提供了一个内置的自动化测试框架，可以用来测试智能合约。在对像 Ganache 或 Truffle Develop 这样的以太坊客户端运行测试时，Truffle
    确保各个测试文件之间不共享状态。测试代码可以用 Solidity 或 JavaScript 编写。
- en: Running Smart Contracts
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 运行智能合约
- en: In Solidity, a contract is basically a set of code and data that is stored at
    a particular address on the Ethereum blockchain. The steps to run a smart contract
    are listed below.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Solidity 中，合约基本上是存储在以太坊区块链上特定地址的一组代码和数据。运行智能合约的步骤如下。
- en: Compiling Smart Contract
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 编译智能合约
- en: The first step in running a smart contract is compilation. To compile a Truffle
    project, change to the root of the directory where the project is located. For
    compiling smart contracts, the following command needs to be used,
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 运行智能合约的第一步是编译。要编译一个 Truffle 项目，请切换到项目所在目录的根目录。要编译智能合约，需要使用以下命令，
- en: truffle compile
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: truffle compile
- en: During the first run, all contracts will be compiled. During subsequent runs,
    Truffle will compile only the contracts that have been changed since the last
    compile. To override this behavior, the following command needs to be used,
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次运行时，将编译所有合约。在后续运行中，Truffle 将仅编译自上次编译以来已更改的合约。要覆盖此行为，需要使用以下命令，
- en: truffle compile --all
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: truffle compile --all
- en: Artifacts. Artifacts of the compilation will be placed in the build/contracts/
    directory, relative to your project root.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 构件。编译的构件将放置在相对于项目根目录的 build/contracts/ 目录中。
- en: 'Dependencies. Contract dependencies can be declared via the import command
    in 2 ways:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项。合约依赖项可以通过两种方式的 import 命令声明：
- en: • Importing dependencies via file name,
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 通过文件名导入依赖项，
- en: import “./importContract.sol”
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: import “./importContract.sol”
- en: • Importing contracts from an external package,
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 从外部包导入合约，
- en: import “externalpackage/externalContract.sol”
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: import “externalpackage/externalContract.sol”
- en: Running Migration
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 运行迁移
- en: Migrations are JavaScript files that help in deploying contracts to the Ethereum
    network. These files are responsible for staging the deployment tasks, and they're
    written under the assumption that the deployment needs will change over time.
    The command to run the migration is as follows,
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移是帮助将合约部署到以太坊网络的 JavaScript 文件。这些文件负责分阶段部署任务，并且它们是在假设部署需求会随时间而变化的前提下编写的。运行迁移的命令如下，
- en: truffle migrate
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: truffle migrate
- en: This will run all migrations located within the project's migrations directory.
    This command will start execution from the last migration that was run, running
    only newly created migrations. If no new migrations exist, it won't perform any
    action at all. To run all the migrations from the beginning, the following command
    needs to be executed,
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行项目迁移目录中的所有迁移。此命令将从上次运行的最后一个迁移开始执行，仅运行新创建的迁移。如果不存在新的迁移，它将不执行任何操作。要从头开始运行所有迁移，需要执行以下命令，
- en: truffle migrate --reset
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: truffle migrate --reset
- en: Structure of a Migration File
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移文件结构
- en: • artifacts.require(). To tell Truffle which contracts to interact with. The
    specified name should match the contract definition name inside that source file.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • artifacts.require()。告诉 Truffle 与哪些合约进行交互。指定的名称应与源文件中的合约定义名称匹配。
- en: • module.exports(). All migrations must export a function via the module.exports
    syntax. The first parameter of the function exported by each migration should
    be a deployer object.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • module.exports()。所有迁移必须通过 module.exports 语法导出一个函数。每个迁移导出的函数的第一个参数应该是一个部署器对象。
- en: • Deployer. Deployer is used by a migration file to stage deployment tasks.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 部署器。部署器被迁移文件用于分阶段部署任务。
- en: Testing Contracts
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 测试合约
- en: Truffle has a standard automated testing framework. This framework allows writing
    simple and manageable tests in two different ways.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 有一个标准的自动化测试框架。该框架允许以两种不同的方式编写简单且易于管理的测试。
- en: • In Javascript and TypeScript, for exercising the contracts from an external
    application.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在 JavaScript 和 TypeScript 中，用于从外部应用程序执行合约。
- en: • In Solidity, for exercising the contracts in advanced, bare-to-the-metal scenarios.
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在 Solidity 中，用于在先进的、裸金属场景中执行合约。
- en: All the test files should be present in the ./test directory. Additionally,
    it is also possible to mention the path of the test file next to the command.
    The command to run a test is as follows,
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 所有测试文件都应存在于 ./test 目录中。此外，也可以在命令旁边提及测试文件的路径。运行测试的命令如下，
- en: truffle test
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: truffle test
- en: A stack trace is a list of method and function calls made by an application
    while an exception was thrown. Solidity stack traces can be obtained for failed
    or reverted transactions with,
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 堆栈跟踪是应用程序在抛出异常时所进行的方法和函数调用列表。可以通过以下方式获取失败或回滚的交易的 Solidity 堆栈跟踪，
- en: truffle test --stacktrace
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: truffle test --stacktrace
- en: Executing this command will produce stack traces for transactions and deployments
    made via Truffle Contract during the tests if one of them reverts and thereby
    causes the test to fail. This option is still experimental, and stack traces are
    not currently supported for calls or gas estimates.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令将为通过 Truffle Contract 进行的测试中发生的任何失败导致测试失败的事务和部署生成堆栈跟踪。该选项仍处于试验阶段，并且目前不支持对调用或
    gas 估算的堆栈跟踪。
- en: Writing Tests in Solidity
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Solidity 中编写测试
- en: Solidity test contracts are saved as .sol files. When truffle tests are run,
    they will be included as a separate test suite per test contract. These contracts
    provide a clean-room environment per test suite, direct access to the deployed
    contracts and the ability to import any contract dependency.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity 测试合约被保存为 .sol 文件。当运行 truffle 测试时，它们将作为每个测试合约的单独测试套件包含在内。这些合约为每个测试套件提供了一个清洁的环境，直接访问部署的合约和导入任何合约依赖项的能力。
- en: Solidity Test Structure
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity 测试结构
- en: The structure for the solidity test contract contains several parts each of
    which has a special functionality. By using these test contracts, the working
    of each function within the smart contract can be tested in terms of several parameters.
    The various components that make up a test contract are discussed below.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity 测试合约的结构包含几个部分，每个部分都具有特殊功能。通过使用这些测试合约，可以根据几个参数测试智能合约中每个函数的工作方式。构成测试合约的各个组件如下所述。
- en: • Assertions. Assertion functions can be from a default assertion library like
    Assert.equal() or can be created.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 断言。断言函数可以来自默认的断言库，如Assert.equal()，也可以自行创建。
- en: • Deployed Addresses. The addresses of contracts that were deployed as part
    of the migrations are available through the truffle/DeployedAddresses.sol library.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 部署地址。作为迁移的一部分部署的合同的地址可通过truffle/DeployedAddresses.sol库获取。
- en: • Test Contract Names. All test contracts must start with Test, using an uppercase
    T.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 测试合同名称。所有测试合同都必须以Test开头，使用大写T。
- en: • Test Function Names. All test functions must start with test, t lowercase.
    Each test function is executed as a single transaction, in order of appearance
    in the test file.
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 测试函数名称。所有测试函数都必须以test开头，t小写。每个测试函数将按照在测试文件中的顺序，作为单个事务执行。
- en: • Before/After Hooks. These hooks can be used to perform setup and teardown
    actions before and after each test, or before and after each suite is run.
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Before/After钩子。这些钩子可用于在每次测试之前和之后，或在每次套件运行之前和之后执行设置和拆卸操作。
- en: Ethereum Clients
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊客户端
- en: An integral tool required for building a dApp in Truffle is the Ethereum client.
    There are many Ethereum clients available. Suitable clients can be chosen depending
    on whether the purpose is developing or deploying.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '在Truffle中构建dApp所需的一个重要工具是以太坊客户端。有许多以太坊客户端可供选择。可以根据开发或部署的目的选择合适的客户端。 '
- en: Ganache
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache
- en: Ganache is a personal blockchain for Ethereum development that runs on a local
    desktop. Ganache is part of the Truffle Suite. It simplifies dApp development
    by placing the contracts and transactions front and center. Ganache helps the
    developer to quickly see how the application interacts with the blockchain, and
    introspect details like accounts, balances, creations of contracts and gas costs.
    Ganache, when launched, runs on http://127.0.0.1:7545\. It will display the first
    10 accounts and the mnemonic used to create those accounts. Mnemonics can also
    be inputted by the developer.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache是以太坊开发的个人区块链，在本地桌面上运行。Ganache是Truffle Suite的一部分。它通过将合同和交易置于中心位置来简化dApp开发。Ganache帮助开发人员快速了解应用与区块链的交互方式，并深入了解账户、余额、合同创建和燃气成本等细节。Ganache在启动时运行在http://127.0.0.1:7545。它将显示前10个账户和用于创建这些帐户的助记词。开发人员也可以输入助记词。
- en: Truffle Develop
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle Develop
- en: Truffle Develop helps in setting up an integrated blockchain environment with
    a single command,
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle Develop可以通过一个命令来设置集成的区块链环境，
- en: truffle develop
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: truffle develop
- en: Execution of this command runs the client on http://127.0.0.1:9545\. It will
    display the first 10 accounts and the mnemonic used to create those accounts.
    The difference from Ganache is that the mnemonic will persist across restarts
    of Ganache, whereas in Truffle Develop it will generate a random mnemonic that
    will persist for that user account alone, that is, unique to the particular user
    account.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: Once Truffle Develop is launched, it will provide you with a console you can
    use to run all available Truffle commands. These commands are input by omitting
    the truffle prefix. For example, to compile the smart contracts, instead of typing,
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: truffle compile
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: you need to only type,
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: compile
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Ganache CLI
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Ganache has a command-line interface which is a great choice for automated testing
    and continuous integration environments. Ganache CLI runs headless and can be
    configured to serve all the development needs. Ganache CLI can be used to test
    if code works quickly as it processes transactions instantly instead of waiting
    for the default block time. It also tells immediately when the smart contracts
    run into errors, and integrates directly with Truffle to reduce test runtime up
    to 90% compared to other clients.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: Drizzle
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: Drizzle automatically syncs chain data to a Redux store minimizing the effort
    required from the developers’ side. Drizzle can be configured to either sync chain
    data on each and every block or only when there are changes to contract data the
    end application is listening to. It covers contract state, events and transactions.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: A Truffle Box is available for Drizzle that combines a Create React App setup
    with Drizzle and Drizzle React Components package. The Truffle Box can be downloaded
    by this command,
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: truffle unbox drizzle
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: This automatically sets up the required folders and contracts required for user
    interface development and integration with the underlying architecture.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: Remix IDE
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: Remix provides an integrated environment that can be used to write, compile
    and debug Solidity code. Remix IDE can be accessed using the online version via
    a web browser, from a locally installed copy or via Mist, am Ethereum Distributed
    applications browser. It provides various options for injecting a blockchain instance
    into the browser. Out of the different options, JavaScript Virtual Machine has
    certain perks in that, it ignores gas limits, it gives the user an unlimited amount
    of ether to play with, and it offers tools to speed up the entire debugging process.
    The current version (v-0.10.1) provides 15 different accounts with 100 ethers
    allotted for each of the 15 accounts.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: Remix 提供了一个集成环境，可用于编写、编译和调试 Solidity 代码。可以通过在线版本通过网络浏览器访问 Remix IDE，也可以通过本地安装的副本或通过
    Mist（以太坊分布式应用浏览器）访问。它提供了各种选项将区块链实例注入到浏览器中。在不同的选项中，JavaScript 虚拟机有一定的优势，它忽略了 gas
    限制，为用户提供了无限数量的以太币来玩耍，并提供了加速整个调试过程的工具。当前版本（v-0.10.1）提供了 15 个不同的帐户，每个帐户分配了 100 个以太币。
- en: Why Remix?
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么使用 Remix？
- en: • Remix IDE is a good tool for the initial development and testing of smart
    contracts.
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Remix IDE 是初步开发和测试智能合约的良好工具。
- en: • It cannot create real user accounts and transfer funds between them, thus
    making it one of the most preferred tools for beginners to play around with.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •  Remix 不能创建真实用户账户并在它们之间转移资金，因此它是初学者最喜欢玩耍的工具之一。
- en: '• The online version does not require any special installation and can be accessed
    directly by making use of a web browser. The following URL can be employed to
    access the IDE: https://remix.ethereum.org/ .'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在线版本无需任何特殊安装，可以直接通过网络浏览器访问。可以使用以下 URL 访问 IDE：[https://remix.ethereum.org/](https://remix.ethereum.org/)。
- en: • It gives a complete set of IDE with separate panels for compiling, running
    and debugging the smart contracts along with a code editor.
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 它提供了一套完整的 IDE，有单独的面板用于编译、运行和调试智能合约，以及一个代码编辑器。
- en: • To facilitate the execution of transactions, Remix provides several environments
    like the JavaScript Virtual Machine. It allows for the emulation of a blockchain
    for which new instances will be created whenever the page is reloaded.
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 为了方便执行交易，Remix 提供了几种环境，如 JavaScript 虚拟机。它允许模拟区块链，每次重新加载页面时都会创建新的实例。
- en: • Additionally, Remix IDE comes with a number of plugins. Solidity unit testing
    is one such plugin that can be used for writing contracts for testing purposes.
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 此外，Remix IDE 还附带了许多插件。Solidity 单元测试是其中之一，可用于编写测试合约。
- en: • Remixd is a NodeJS tool that allows Remix IDE to access the local file system
    of a computer. It can be made available by using the following command in npm,
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • Remixd 是一个 NodeJS 工具，允许 Remix IDE 访问计算机的本地文件系统。可以通过以下 npm 命令使用此工具，
- en: npm install -g remixd
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: npm install -g remixd
- en: PROTOTYPE IMPLEMENTATION
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 原型实施
- en: A prototype of the proposed system is implemented to check for the feasibility
    of the design, in terms of implementation. The actual flow of the system is made
    transparent so that we could discern the complete purpose and structure of the
    system. It will improve the quality of requirements and specifications so that
    early determination of what the end-user really wants can be made which can result
    in faster and less expensive software. The flow of the Food Supply Chain Management
    system along with the pseudocode of the various modules is described below.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查设计的可行性，已实现了所提议系统的原型，以实现在实施方面的可行性。该系统的实际流程被公开，以便我们可以辨别系统的完整目的和结构。这将改善需求和规范的质量，以便能够尽早确定最终用户真正想要的内容，从而可能导致更快速、更少成本的软件开发。下面描述了食品供应链管理系统的流程，以及各个模块的伪代码。
- en: Registration
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 注册
- en: '• register_user: Adds the user to the list of authorized users.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• register_user: 将用户添加到授权用户列表中。'
- en: '| Figure 4\. Registration of the user |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| 图4. 用户注册 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f04](i/ch007.f04.png) |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| ![图978-1-7998-7589-5.ch007.f04](i/ch007.f04.png) |'
- en: The input for this module is the category of the user which could be customer,
    farmer, supplier or distributor. This module checks if the user account already
    exists. If the account does not exist already, the user is added to the list of
    authorized users and the registration is successful. If the user is already registered
    then the registration is declared to be unsuccessful. Figure 4 describes the flow
    of this module.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块的输入是用户的类别，可以是客户、农民、供应商或分销商。该模块检查用户帐户是否已经存在。如果帐户尚不存在，则将用户添加到授权用户列表中，并注册成功。如果用户已经注册，则注册被宣布为失败。图4描述了该模块的流程。
- en: '• register_product: Registers the product and assigns an ID'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• register_product: 注册产品并分配ID'
- en: '| Figure 5\. Registration of the product |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| 图5. 产品注册 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f05](i/ch007.f05.png) |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| ![图978-1-7998-7589-5.ch007.f05](i/ch007.f05.png) |'
- en: As depicted in Figure 5, this module takes the details of the product as the
    input along with a key. It checks the account which initiated this action and
    ensures if it is the product owner. If the product owner has initiated, then the
    registration of the product is successful. If any other user who is not the owner
    of the product has initiated the action, then the registration is unsuccessful.
    This condition makes sure that only the product owner can register a product.
    Registration of a product is usually done by its initial owner, i.e. the farmer.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如图5所示，该模块以产品细节和关键信息作为输入。它检查启动此操作的帐户，并确保其为产品所有者。如果产品所有者发起了操作，则产品注册成功。如果任何其他非产品所有者的用户发起了操作，则注册失败。该条件确保只有产品所有者可以注册产品。产品的注册通常由其初始所有者（即农民）完成。
- en: Changing Ownership
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权变更
- en: '• change_ownership: Transfers the owner of the product from the current owner
    to the next user in the supply chain.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• change_ownership: 将产品的所有者从当前所有者转移到供应链中的下一个用户。'
- en: '| Figure 6\. Change of the ownership |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| 图 6\. 所有权的变更 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f06](i/ch007.f06.png) |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f06](i/ch007.f06.png) |'
- en: '| *Note. The current owner of the product attempts an action for changing the
    ownership to the destined receiver.* |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| *注意。当前产品所有者尝试将所有权转移给指定的接收者。* |'
- en: This module receives Product ID, Receiver ID and selling details such as date
    and time of purchase as input. It checks the account which initiated this action
    and ensures if it is the product owner. If it is not the product owner, the transaction
    is unsuccessful and is terminated. If the product owner initiated the transaction,
    then the Receiver id is checked whether the receiving party is a registered user.
    If the receiving party is registered, the transaction ends successfully after
    the transaction details are appended. If the receiving party is not registered,
    the transaction is unsuccessful since the receiving party cannot be an illegitimate
    user and requires prior registration. Figure 6 shows the flow of this module.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块接收产品 ID、接收者 ID 和购买详情（例如购买日期和时间）作为输入。它检查启动此操作的帐户，并确保它是产品所有者。如果不是产品所有者，则交易失败并终止。如果产品所有者启动了交易，则检查接收者
    ID 是否为注册用户。如果接收方已注册，则在追加交易详情后，交易成功结束。如果接收方未注册，则交易失败，因为接收方不能是非法用户，并且需要事先注册。图 6
    显示了此模块的流程。
- en: Attain Ownership
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 获得所有权
- en: '• attain_ownership: Ownership of the product is transferred here.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• attain_ownership: 产品的所有权在此转移。'
- en: '| Figure 7\. Attainment of ownership |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| 图 7\. 获得所有权 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f07](i/ch007.f07.png) |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f07](i/ch007.f07.png) |'
- en: '| *Note. The ownership is actually being changed here on certain conditions
    listed.* |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| *注意。此处实际上正在根据列出的某些条件更改所有权。* |'
- en: This module takes Product ID and Purchase Details as input along with a key.
    In Figure 7, the module initially checks if the user initiating the action is
    the intended receiver. If the user is not the actual receiver of the product,
    then the transaction is terminated and the ownership of the products still remains
    with the sender. If the user initiating the action is the intended receiver of
    the product, then the module checks if the key and the purchase details match.
    If it matches, the owner of the product is assigned, in this case, the receiver
    and the transaction is declared to be successful. If the details do not match,
    then the transaction is unsuccessful.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块接受产品 ID 和购买详情以及密钥作为输入。在图 7 中，该模块首先检查发起行动的用户是否是预期的接收者。如果用户不是产品的实际接收者，则交易终止，产品的所有权仍然归发件人所有。如果发起行动的用户是产品的预期接收者，则模块检查密钥和购买详情是否匹配。如果匹配，则产品的所有者被分配为接收者，并且交易被宣布为成功。如果详情不匹配，则交易失败。
- en: Traceback Details
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 回溯细节
- en: '• get_details: Customers check the history of a transaction along with the
    product details.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• get_details: 客户检查交易历史以及产品详情。'
- en: '| Figure 8\. Traceback details |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| 图 8\. 回溯细节 |'
- en: '| ![Figure978-1-7998-7589-5.ch007.f08](i/ch007.f08.png) |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch007.f08](i/ch007.f08.png) |'
- en: '| *Note. The details of the product are traced back by the consumer.* |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| *注. 产品的详细信息由消费者追溯。* |'
- en: Figure 8 shows how customers can trace back the details of a purchased product.
    This module takes Product ID as input and checks if the customer initiating the
    action is a registered user. If the user is not registered as a customer, then
    the action is unsuccessful. If the customer is a registered user, then the module
    checks if the customer initiating the traceback action is the intended receiver
    of the product. If the customer has purchased the product, then the customer can
    see the entire product details. Otherwise, the action is set to be unsuccessful.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8 显示了客户如何追溯已购买产品的详细信息。该模块将产品 ID 作为输入，并检查启动行动的客户是否为注册用户。如果用户未注册为客户，则该操作将失败。如果客户是注册用户，则模块将检查启动追溯操作的客户是否为产品的预期接收者。如果客户购买了产品，则客户可以查看整个产品详情。否则，该操作被视为失败。
- en: THREAT MODELLING
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁建模
- en: Security Analysis
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 安全分析
- en: The popularity of blockchain makes new demands on security and privacy protection
    on data storage, transmission and applications, and puts forward new challenges
    to existing security solutions, authentication mechanisms, data protection, privacy
    protection and information regulation. The risks in this project may arise from
    attacks by external or internal entities. One of the key benefits of using blockchain
    for supply chain management is that it promises to eliminate intermediaries, instead
    of enabling peer-to-peer interaction and exchange of data.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '区块链的普及对数据存储、传输和应用的安全和隐私保护提出了新的要求，并对现有的安全解决方案、身份验证机制、数据保护、隐私保护和信息监管提出了新的挑战。该项目的风险可能来自外部或内部实体的攻击。在供应链管理中使用区块链的一个关键优势是它承诺消除中间人，而是实现点对点的交互和数据交换。  '
- en: Threat Modeling
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁建模
- en: The principle of Threat Modeling is to classify, communicate and understand
    threats and mitigation to the organization’s stakeholders as early as possible.
    Documentation from this method provides system analysts and defenders with a broad
    analysis of probable attackers profile, the most likely attack vectors, and the
    assets most desired by the attacker. Threats can be anything that can take advantage
    of a vulnerability to breach security and negatively change, erase and damage
    objects of interest.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁建模的原则是尽早对组织的利益相关者分类、沟通和理解威胁及其缓解方法。该方法的文档为系统分析人员和防御者提供了对潜在攻击者配置文件、最有可能的攻击向量以及攻击者最渴望的资产的广泛分析。威胁可以是任何利用漏洞以突破安全性并对感兴趣的对象产生负面变化、删除和损坏的东西。
- en: Table 1 lists various threats faced by the project at each layer of blockchain
    on a broad level. Spoofing refers to the ability of the attacker to masquerade
    as an authenticated entity on the system. Tampering attacks violate the integrity
    of the data stored on the protected system. Breaches of confidentiality fall under
    information disclosure. If a user manages to gain unauthorized levels of control
    over the system, this is a privilege escalation attack. The system is developed
    in such a way to reduce the attacks as much as possible. Privilege escalation
    is reduced using product keys, entered during the registration which can be done
    only by the farmers. The transfer ownership once done can't be reversed and the
    old owner will lose the corresponding privileges.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: Cryptographic primitives represent the hash functions and public-key cryptography
    used to ensure data integrity and provide user authentication. The security issues
    of centralized nodes include the exchanges which involve digital currency transactions
    and manage large amounts of funds. These nodes are at any point of failure of
    the entire blockchain network, and the attack yield is high and the cost is low,
    which is the preferred target of the attackers.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: Another attack is Unauthorized Access Attack and it happens in a Smart Contract.
    A smart contract responds to the message it receives, it can store the received
    value, and it can send out information and value. This attack is due to the failure
    to make explicit function visibility or failure to do sufficient permission checks,
    which can cause an attacker to access or modify a function or a variable that
    should not be accessed. These attacks are avoided as much as possible in this
    system by performing the authorization of all stages of users and restricting
    their capabilities. For example, while transferring ownership, double-check is
    made from the senders’ as well as the receivers’ side.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: Another important attack includes malicious information attacks where the attacker
    writes malicious information in the blockchain. With the data undelete feature
    of the blockchain, information is difficult to delete after it is written in the
    blockchain. If malicious information appears in the blockchain, it will be subjected
    to many problems.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的攻击包括恶意信息攻击，攻击者在区块链中写入恶意信息。由于区块链的数据不可删除功能，在写入区块链后，信息很难删除。如果恶意信息出现在区块链上，将会引发许多问题。
- en: The basic blockchain technology can be extended by systems built either on top
    of it or through connections to external systems via APIs. These are the Blockchain
    extensions.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的区块链技术可以通过构建在其之上或通过API连接到外部系统来扩展。这些是区块链扩展。
- en: Table 1\. Threat Model
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 表1\. 威胁模型
- en: '|  | Spoofing | Tampering | Information Disclosure | Denial of Service | Elevated
    Privileges |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '|  | 冒充 | 篡改 | 信息披露 | 拒绝服务 | 提升权限 |'
- en: '| Cryptographic primitives | Private key |  | Private key |  | Private key
    |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| 密码原语 | 私钥 |  | 私钥 |  | 私钥 |'
- en: '| Nodes | Malware | Malware | Malware | Failure to update malware |  |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| 节点 | 恶意软件 | 恶意软件 | 恶意软件 | 未更新恶意软件 |  |'
- en: '| Networks |  | Network design | Network design | Network design | Network
    design |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| 网络 |  | 网络设计 | 网络设计 | 网络设计 | 网络设计 |'
- en: '| Smart contracts |  | Arithmetic Bad Randomness'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '| 智能合约 |  | 算术不良随机性'
- en: Short
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 短暂
- en: Addresses
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 地址
- en: Timestamp
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳
- en: Unchecked Returns |  | Access control out of gas | Access control |
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 未检查的返回值 |  | 超出Gas的访问控制 | 访问控制 |
- en: '| Blockchain Extension | Insecure APIs |  |  |  | Insecure APIs |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| 区块链扩展 | 不安全的API |  |  |  | 不安全的API |'
- en: Note. Classification of each attack vector based upon its potential effects
    is done at various levels of the blockchain ecosystem. Each cell shows the different
    attacks that can occur at a given level of the blockchain ecosystem.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 注：对每个攻击向量的分类是基于它在区块链生态系统的各个级别可能产生的影响进行的。每个单元格显示了在给定区块链生态系统级别可能发生的不同攻击。
- en: This blockchain threat model presented in Table 1 represents the classification
    of the currently known attack vectors against blockchain systems and is designed
    to be a constant work in progress as no system can be fully secure and blockchain,
    like any other systems, has new attack vectors being discovered.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 表1中呈现的这种区块链威胁模型代表了对区块链系统当前已知攻击向量的分类，并旨在不断进行改进，因为没有系统能够完全安全，而且与其他系统一样，区块链也会发现新的攻击向量。
- en: 51% Attack - Analysis
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 51%攻击 - 分析
- en: One of the major attacks that blockchain systems in supply chain management
    could face is the 51% attack. The 51% attack is an attack against blockchain which
    occurs when an attacker is in possession or control of 51% of the hashing power.
    This attack is initiated by creating a chain of blocks privately, that is fully
    isolated from the original version of the chain. Later on, the isolated chain
    is added to the network to be established as a genuine chain. This is what enables
    the double-spending attack. Since the blockchain policy complies with the longest
    chain rule, if attackers are able to get 51% of the hashing power or more, they
    will be in a position to drive the longest chain by persuading the network nodes
    to follow their chain.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链系统在供应链管理中可能面临的主要攻击之一是 51% 攻击。51% 攻击是针对区块链的一种攻击，当攻击者拥有或控制 51% 的哈希算力时发生。这种攻击是通过私下创建一条完全与原始链隔离的区块链来发起的。随后，隔离的链被添加到网络中，以建立为真正的链。这就使双重支付攻击成为可能。由于区块链政策符合最长链规则，如果攻击者能够获得
    51% 或更多的哈希算力，他们将能够通过说服网络节点遵循他们的链来驱动最长的链。
- en: Analyzing the nature of the attack and focusing on identifying the vulnerability
    before it occurs, the best techniques to mitigate 51% attack is the Penalty system
    for delayed block submission. The penalty system, being a research prototype,
    proposes increasing the attacking cost extensively so that the potential advantage
    of gaining 51% attack cannot be achieved towards exploitation. A penalty is applied
    based on the amount of time an isolated block is hidden from the blockchain network.
    The time is calculated considering the interval duration between blocks. This
    security protection technique notifies all the parties including the farmer, the
    retailer, the distributor etc., about the continuous fork, and during that period,
    the transactions are restricted from performing fraudulent transactions until
    the delay is lifted. The prime advantage of this method is the penalty makes the
    attack much more costly to perform. The delayed block approach sets the attacker
    to mine a large number of blocks in a sequence before joining the legit chain.
    This method helps to identify the vulnerability before the genuine chain adopts
    it.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 分析攻击的性质，并专注于在其发生之前识别脆弱性，最好的减轻 51% 攻击的技术是延迟块提交的惩罚系统。惩罚系统是一个研究原型，它提出了大幅增加攻击成本的建议，以使获得
    51% 攻击的潜在优势无法用于剥削。根据隔离块隐藏在区块链网络中的时间量进行惩罚。时间是根据块之间的间隔持续时间计算的。这种安全保护技术通知所有参与方，包括农民、零售商、分销商等，关于持续分叉，而在此期间，交易受到限制，不能执行欺诈交易，直到延迟解除为止。这种方法的主要优势是惩罚使得攻击变得更加昂贵。延迟块方法要求攻击者在加入合法链之前连续挖掘大量的块。这种方法有助于在真正的链接受之前识别出脆弱性。
- en: DISCUSSION AND CONCLUSION
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论与结论
- en: Blockchain technology can be used in food supply chain management in order to
    set a global standard and to provide quality assurance in food enterprise ecosystems.
    Introducing blockchain into the food supply chain ensures traceability which is
    indispensable for tracking back to the source and performing root-cause analysis
    in case of any contamination in food products. A blockchain environment ensures
    that each player securely shares data to create an accountable and traceable system.
    Additionally, a traditional food supply chain system relies on the subjective
    inputs of individual players when it comes to pricing. Adapting blockchain in
    the food supply chain system guarantees that the information provided by every
    player in the value chain is taken into account before quoting a price for a food
    product, hence making the entire process holistic. Summing up, blockchain’s unique
    properties pave the way for a transparent and decentralized system to warrant
    verified practices and products in a food supply chain.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术可以用于食品供应链管理，以设立全球标准并在食品企业生态系统中提供质量保证。将区块链引入食品供应链可以确保追溯性，这对于追溯到源头并在食品产品污染的情况下进行根本原因分析是不可或缺的。区块链环境确保每个参与者安全地共享数据，以创建一个负责任和可追溯的系统。此外，传统的食品供应链系统在定价时依赖于个别参与者的主观输入。在食品供应链系统中采用区块链可以确保在为食品产品报价之前，每个价值链中的参与者提供的信息都被考虑在内，从而使整个过程成为全面的。总之，区块链的独特属性为食品供应链中验证的实践和产品铺平了道路，从而确保了透明和去中心化的系统。
- en: Blockchain is, undoubtedly, one of the most promising technologies towards a
    transparent food supply chain, although many barriers and challenges still persist,
    which hinder its wider popularity among farmers and food supply systems. The near
    future will show if and how these challenges could be addressed by governmental
    and private efforts, in order to establish blockchain technology as a secure,
    reliable and transparent way to ensure food safety and integrity.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链无疑是通向透明食品供应链的最有前途的技术之一，尽管许多障碍和挑战仍然存在，这些障碍和挑战阻碍了它在农民和食品供应系统中更广泛的流行。不久的将来将会显示政府和私人努力是否以及如何解决这些挑战，以确立区块链技术作为确保食品安全和完整性的安全、可靠和透明的方式。
- en: To reduce barriers of use, governments should invest more in research and innovation,
    as well as in education and training, in order to produce and demonstrate evidence
    for the potential benefits of this technology. From a law and order perspective,
    various actions and policies can be taken, such as motivating the growth of blockchain-based
    ecosystems in agri-food chains, supporting blockchain technology as part of the
    broader goals of optimizing the competitiveness and ensuring the sustainability
    of the agri-food supply chain and also designing a clear regulatory framework
    for implementation of blockchain systems. This system can serve as a foundation
    for any supply chain management and any number of users or intermediaries can
    be added or removed based on the scenario.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 为了降低使用障碍，政府应该更多地投资于研究和创新，以及教育和培训，以生产并证明该技术的潜在好处。从法律和秩序的角度来看，可以采取各种行动和政策，如激励发展基于区块链的农业食品链生态系统，支持将区块链技术作为优化竞争力和确保农业食品供应链可持续性更广泛目标的一部分，并为区块链系统的实施设计清晰的监管框架。这个系统可以作为任何供应链管理的基础，根据情景可以添加或移除任意数量的用户或中间商。
- en: REFERENCES
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: REFERENCES
- en: 'Caro, Ali, Vecchio, & Giaffreda. (2018, June 7). Blockchain-based traceability
    in Agri-Food supply chain management: A practical implementation. 10.1109/IOT-TUSCANY.2018.8373021'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: Caro, Ali, Vecchio, & Giaffreda. (2018, June 7). 农业食品供应链管理中基于区块链的可追溯性：一个实践实施。10.1109/IOT-TUSCANY.2018.8373021
- en: Chen, Xu, Shi, Zhao, & Zhao. (2018, December 10). A Survey of Blockchain Applications
    in Different Domains. .10.1145/3301403.3301407
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: Chen, Xu, Shi, Zhao, & Zhao. (2018, December 10). 不同领域中区块链应用的调查。10.1145/3301403.3301407
- en: Divakar, Archana, & Sushma. (2018, May). IoT technology in Smart Farming. International
    Research Journal of Engineering and Technology, 5.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: Divakar, Archana, & Sushma. (2018, May). 智能农业中的物联网技术。国际工程技术研究期刊，5。
- en: Esmaeilian, B., Sarkis, J., Lewis, K., & Behdad, S. (2020). Blockchain for the
    future of sustainable supply chain management in Industry 4.0, Resources, Conservation
    and Recycling. 10.1016/j.resconrec.2020.105064
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: Esmaeilian, B., Sarkis, J., Lewis, K., & Behdad, S. (2020). 工业4.0可持续供应链管理未来的区块链，资源、保护和回收。10.1016/j.resconrec.2020.105064
- en: Gayatri, M. K., & Jayasakthi, J. (2015). Providing Agriculture Solution to Farmers
    for Better Yielding using IoT. International conference on global trends in signal
    processing, Chennai, India.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: Gayatri, M. K., & Jayasakthi, J. (2015). 通过物联网为农民提供农业解决方案以获得更好的产量。全球信号处理趋势国际会议，印度金奈。
- en: Hongal, A., Jyothi, M. P., & Prathibha, S. R. (2017). IoT Based Monitoring System
    In Smart Agriculture. International conference on global trends in Signal Processing,
    Bangalore, India.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Hongal, A., Jyothi, M. P., & Prathibha, S. R. (2017). 基于物联网的智能农业监测系统。全球信号处理趋势国际会议，印度班加罗尔。
- en: 'Karafiloski & Mishev. (2017, July 1). Blockchain solutions for big data challenges:
    A literature review. .10.1109/EUROCON.2017.8011213'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: Karafiloski & Mishev. (2017, July 1). 大数据挑战的区块链解决方案：文献综述。10.1109/EUROCON.2017.8011213
- en: Kshetri. (2017). Blockchain’s roles in meeting key supply chain management objectives.
    10.1016/j.ijinfomgt.2017.12.005
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: Kshetri. (2017). 区块链在实现关键供应链管理目标中的作用。 10.1016/j.ijinfomgt.2017.12.005
- en: Nikesh, G. & Kowitkar, R.S. (2016, June 6). IoT Based Smart Agriculture. International
    Journal of Advance Research in Computer and Communication Engineering, 5.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: Nikesh, G. & Kowitkar, R.S. (2016, 六月 6). 基于物联网的智能农业。 计算机与通信工程高级研究国际期刊, 5。
- en: Patil, K. A., & Kale, N. R. (2016). A Model For Smart Agriculture Using IoT.
    International conference on global trends in signal processing, Jalgaon, India.
    10.1109/ICGTSPICC.2016.7955360
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: Patil, K. A., & Kale, N. R. (2016). 一种智能农业模型使用物联网。 全球信号处理趋势国际会议, 印度贾尔冈。 10.1109/ICGTSPICC.2016.7955360
- en: 'Queiroz, M. M., Telles, R., & Bonilla, S. H. (2019). Blockchain and supply
    chain management integration: A systematic review of the literature . Supply Chain
    Management , 25(2), 241–254\. doi:10.1108/SCM-03-2018-0143'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: Queiroz, M. M., Telles, R., & Bonilla, S. H. (2019). 区块链与供应链管理整合：文献的系统性回顾。 供应链管理,
    25(2), 241–254。 doi:10.1108/SCM-03-2018-0143
- en: Saberi, Kouhizadeh, Sarkis, & Shen. (2018, October 17). Blockchain technology
    and its relationships to sustainable supply chain management. 10.1080/00207543.2018.1533261
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: Saberi, Kouhizadeh, Sarkis, & Shen. (2018, 十月 17). 区块链技术及其与可持续供应链管理的关系。 10.1080/00207543.2018.1533261
- en: Shakhbulatov, D., Medina, J., Dong, Z., & Rojas-Cessa, R. (2020). TheBlockchain
    Enhances Supply Chain Management. A Survey . IEEE Open Journal of the Computer
    Society , 1, 230–249\. doi:10.1109/OJCS.2020.3025313
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: Shakhbulatov, D., Medina, J., Dong, Z., & Rojas-Cessa, R. (2020). 区块链增强供应链管理。
    调查。 IEEE计算机学会开放期刊, 1, 230–249。 doi:10.1109/OJCS.2020.3025313
- en: 'Sunny, J., Undralla, N., & Pillai, V. M. (2020, December). Supply chain transparency
    through blockchain-based traceability: An overview with demonstration. Computers
    & Industrial Engineering, 150. 10.1016/j.cie.2020.106895'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: Sunny, J., Undralla, N., & Pillai, V. M. (2020, 十二月). 通过基于区块链的追溯实现供应链透明度：概述及演示。
    计算机与工业工程, 150。 10.1016/j.cie.2020.106895
- en: Tian, F. (2017). A supply chain traceability system for food safety based on
    HACCP, Blockchain & Internet of Things . IEEE. doi:10.1109/ICSSSM.2017.7996119
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Tian, F. (2017). 基于HACCP、区块链和物联网的食品安全供应链追溯系统。 IEEE。 doi:10.1109/ICSSSM.2017.7996119
- en: 'Verhoeven, P., Sinn, F., & Herden, T. T. (2018). Examples from Blockchain Implementations
    in Logistics and Supply Chain Management: Exploring the Mindful Use of a New Technology.
    Logistics , 2018(2), 20\. doi:10.3390/logistics2030020'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: Verhoeven, P., Sinn, F., & Herden, T. T. (2018). 物流与供应链管理中区块链实施的例子：探索新技术的审慎应用。
    物流, 2018(2), 20。 doi:10.3390/logistics2030020
- en: 'Vujičić, Jagodić, & Ranđić. (2018, April 26). Blockchain technology, bitcoin,
    and Ethereum: A brief overview. .10.1109/INFOTEH.2018.8345547'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: Vujičić, Jagodić, & Ranđić. (2018, 四月 26). 区块链技术、比特币和以太坊：简要概述。 10.1109/INFOTEH.2018.8345547
- en: 'Wood. (2014). Ethereum: A Secure Decentralized Generalised Transaction Ledger.
    EIP-150 REVISION. (a04ea02 - 2017-09-30)'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Wood. (2014). 以太坊：一个安全的去中心化通用交易分类帐。 EIP-150 REVISION。 (a04ea02 - 2017-09-30)
- en: Wüst, K., & Gervais, A. (2018). Do you need a Blockchain? IEEE Zug. doi:10.1109/CVCBT.2018.00011
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Wüst, K., & Gervais, A. (2018). 《你需要区块链吗？》IEEE Zug。doi:10.1109/CVCBT.2018.00011
- en: YuanY.WangF.-Y. (2016). Towards blockchain-based intelligent transportation
    systems. 10.1109/ITSC.2016.7795984
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: YuanY.WangF.-Y. (2016). 《基于区块链的智能交通系统》。doi:10.1109/ITSC.2016.7795984
- en: 'Zheng, Xie, Dai, Chen, & Wang. (2017, September 11). An Overview of Blockchain
    Technology: Architecture, Consensus, and Future Trends. .10.1109/BigDataCongress.2017.85'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Zheng, Xie, Dai, Chen, & Wang. (2017年9月11日). 《区块链技术概述：架构、共识和未来趋势》。doi:10.1109/BigDataCongress.2017.85
