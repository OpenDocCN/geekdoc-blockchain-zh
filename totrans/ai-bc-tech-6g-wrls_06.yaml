- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2022M.
    Dutta Borah et al. (eds.)AI and Blockchain Technology in 6G Wireless NetworkBlockchain
    Technologies[https://doi.org/10.1007/978-981-19-2868-0_6](https://doi.org/10.1007/978-981-19-2868-0_6)
  prefs: []
  type: TYPE_NORMAL
- en: Security, Privacy Challenges and Solutions for Various Applications in Blockchain
    Distributed Ledger for Wireless-Based Communication Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vivekanandan Manojkumar^([1](#Aff7) [ ](#ContactOfAuthor1)), V. N. Sastry^([2](#Aff8) [ ](#ContactOfAuthor2))
    and U. Srinivasulu Reddy^([3](#Aff9) [ ](#ContactOfAuthor3))(1)Department of Computer
    Science & Engineering, School of Engineering and Applied Sciences, SRM University-AP,
    Amaravati, 522502, Andhra Pradesh, India(2)Center for Mobile Banking (CMB), Institute
    for Development and Research in Banking Technology (IDRBT), Hyderabad, Telangana,
    India(3)Machine Learning and Data Analytics Lab, Center of Excellence in Artificial
    Intelligence, Department of Computer Applications, National Institute of Technology
    Tiruchirappalli, Tiruchirappalli, Tamil Nadu, IndiaVivekanandan ManojkumarEmail:
    [vmanojk88@gmail.com](mailto:vmanojk88@gmail.com)V. N. SastryEmail: [vnsastry@idrbt.ac.in](mailto:vnsastry@idrbt.ac.in)U. Srinivasulu
    Reddy (Corresponding author)Email: [usreddy@nitt.edu](mailto:usreddy@nitt.edu)'
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Blockchain is a secure computing technology which could be used in a variety
    of applications like finance, supply chain management, land registry, health care,
    and education. To obtain services from various service providers, users or consumers register
    with the Registration Center Authority (RAC) via., wireless communications networks.
    However, RAC has flaws such as insider threat and Single Point of Failure (SPoF).
    To circumvent these problems, if user registration based on blockchain for any
    service is required through wireless communication networks and also blockchain
    networks has the Distributed Ledger (DL) for storing identity information about
    the users or consumers. In this chapter, we will discuss about the security and
    privacy issues that come with each of the applications mentioned above and also
    some of the key challenges in each applications such as data confidentiality,
    integrity, authentication, access control, and privacy. Public Key Infrastructure
    (PKI) is giving the solution for data confidentiality, integrity, and authentication.
    Access control is processed by the access control policies (to restrict the user
    permission) and the privacy is achieved through secure authentication.
  prefs: []
  type: TYPE_NORMAL
- en: KeywordsPrivacySecurityDistributed ledger (DL)AuthenticationAccess controlHealth
    careBankingSupply chain management6G5G
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1.1 Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Satoshi Nakamoto [[1](#CR1)] introduced blockchain technology for Bitcoin cryptocurrency
    and the transaction is executed based on peer-to-peer mode without a centralized
    authority. Blockchain is a secure DL, which has a list of transactions and the
    transactions records are maintained in the growing chains of a block. Each block
    is secured by cryptography techniques for providing integrity to the transactions
    records. The new transaction records are added in the global blockchain based
    on consensus mechanisms, the consensus mechanisms are performed by the minors
    (who have the higher capacity of computing power to perform the consensus mechanisms).
    Apart from that, each block has the entire hash of the block and each block has
    the hash of the preceding block. The consensus mechanisms are “Proof of Work (PoW)”,
    “Proof of State (PoS)”, “Byzantine Fault Tolerant (BFT)-based”, “Sleepy”, “Proof
    of Elapsed Time (PoET)”, “Proof of Authority (PoA)”, “Proof of Reputation (PoR),”
    etc., There are three types of blockchains, namely “private blockchain”, “public
    blockchain”, “consortium blockchain”. Private blockchain: The read permission
    is open to all or read permission is restricted to specific network of nodes and
    write permission is performed by a single organization. Public blockchain: It
    is open to anyone to write, send, and receive. A public blockchain network allows
    the block added in to the blockchain based on the successful completion of the
    consensus mechanism. Consortium blockchain: The set of selected nodes only have
    write permission in the blockchain network and read operation is open to all [[41](#CR41)].'
  prefs: []
  type: TYPE_NORMAL
- en: 1.2 Blockchain Architecture
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The blockchain has five layers, i.e., physical, network, consensus, propagation,
    and application. The physical layer consists of blockchain nodes. The nodes are
    interconnected to form a blockchain. In the blockchain network, there are two
    types of nodes: Full nodes and light nodes. The full node consists of a full copy
    of DL. The full node is participating in the mining process. If the full node
    is completing a successful mining process, the miners get a reward. The light
    nodes are not required for higher hardware. They maintain only the last block
    of the blockchain network. The information goes from the full node to the light
    node. Network layer: Data delivery services are provided in this layer. All the
    nodes communicate to each other to process consensus mechanisms. There is no central
    authority to approve the transactions. In blockchain networks, the decentralized
    procedure is to approve the transactions. Consensus layer: This layer is responsible
    for incentives to the minor nodes, who complete the successful mining process.
    Propagation layer: It has the rules that follow how the blocks and messages are
    propagated through communication protocols in the network [[2](#CR2)].'
  prefs: []
  type: TYPE_NORMAL
- en: 1.3 Distributed Ledger (DL) Technology
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The blockchain networks has the DL. DL is a more powerful technology and nowadays
    many use cases are used for identity management and machine-to-machine transactions.
    “Decentralization”, “immutability”, and “distributed” are the properties of the
    DL. In decentralized, there is no single entity to maintain the data, therefore
    it is available at network nodes based on blockchain types. As a result, it safeguards
    against single points of failure as well as insider threats. Immutability: The
    data is recorded in the DL and can be verified at any moment during the auditing
    process. Distributed: All participating network nodes have access to DL, and it
    is visible to all network nodes based on blockchain type. Consistency, Availability,
    and Partition Tolerance (CAP) are the properties of distributed systems, and these
    characteristics are applicable to DL. The consistency property states that all
    computing nodes have the most recent version of DL. Availability refers to the
    total amount of data that can be accessed via., DL in the network at any time.
    Partition tolerance means that if one or more computational nodes fail, other
    nodes will continue to function, ensuring that there is no SPoF. As a result,
    blockchain-based services are required for a variety of applications [[3](#CR3)].'
  prefs: []
  type: TYPE_NORMAL
- en: 1.4 Wireless Communication Networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the 1980s, the first generation (1G) of mobile communication networks was
    introduced, and also it is used for voice-over communication. They used analog
    technology for mobile communications. In the second generation (2G) of mobile
    communications based on analog to digital conversion with supported additional
    features such as voice over communication and Short Message Service (SMS) was
    introduced. In the third generation (3G) of mobile communications, video calling
    facility, mobile TV, broadband services and Multimedia Message Services (MMS)
    were introduced. Fourth generation (4G) was introduced with improved broadband
    services, video streaming with high definition, voice over IP, and online gaming.
    5G supports mobile broadband enhanced features with 10 Gbps data rates, latency
    with up to 1 ms, and network availability of 99.99% [[43](#CR43)].
  prefs: []
  type: TYPE_NORMAL
- en: 1.5 Limitation of 5G and Opportunities of Blockchain in 6G
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 5G technology has limitations such as reliability, data-rate, latency, processing,
    availability, global coverage, connection density, and ground over spanning. These
    limitations are overcome in the 6G communication network [[43](#CR43)]. The 6G
    technology has the features such as data rates of 1Tpbs, delay below 10 ms, availability
    of network 99.99%, 10⁷ devices/km² connection in the Internet of Everything (IoE)
    environment. Nowadays, blockchain is an emerging technology and it is used in
    many industries such as business and academics etc., Blockchain contains a shared
    ledger and it provides properties such as non-replicated transactions, confidentiality-based
    authentication, and decentralization. The blockchain maintains many users in the
    distributed environment for 6G networks. The smart contracts are used to execute
    (simulationusly on between users) the transactions in blockchain [[44](#CR44)].
    6G is used in various applications such as Internet of Everything (IoE), smart
    grid, UAV, autonomous vehicle, Industry 5.0 and health care [[43](#CR43)]. In
    each application, DL technology is used for various purposes as discussed in Sect. [4](#Sec5).
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we discuss the privacy and security challenges connected with 6G-based
    applications in this chapter, as well as solutions to those challenges. Some of
    the security and privacy key challenges in each application are “data confidentiality”,
    “integrity”, “authentication”, “access control”, and “privacy”. Public Key Infrastructure
    (PKI) is giving the solution for data confidentiality, integrity, and authentication.
    Access control is processed by the access control [[17](#CR17)] policies (to restrict
    the user permission for accessing the resources) and the privacy is achieved through
    secure authentication. We discuss the following major aspects in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The blockchain distributed ledger based 6G applications such as banking, finance,
    COVID-19, supply chain, land registration, health care, media and entertainment,
    and education sector;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each application's security and privacy challenges;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solutions for solving security challenges in blockchain-based applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.6 Section Organization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following is a summary of the organization of the sections in this chapter.
    The mathematical preliminaries are presented in Sect. [2](#Sec2), and the system
    model is presented in Sect. [3](#Sec3). Blockchain Distributed Ledger (BLT) based
    6G applications are shown in Sect. [4](#Sec4). Security analysis is presented
    in Sect. [5](#Sec5). The comparative research of blockchain-based security protocols
    is presented in Sect. [6](#Sec6). The future challenges of DL privacy and security
    are discussed in Sect. [7](#Sec7). Section [8](#Sec8) concludes with a conclusion.
  prefs: []
  type: TYPE_NORMAL
- en: 2 Mathematical Preliminaries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The cryptographic techniques needed to solve security and privacy issues in
    blockchain [[19](#CR19)] DL-based 6G applications.
  prefs: []
  type: TYPE_NORMAL
- en: 2.1 Hash Function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Definition 1
  prefs: []
  type: TYPE_NORMAL
- en: 'Hash function (H) takes an arbitrary length of the input such as a ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq1.png)
    {0,1}^* and it produces a fixed size of the outputs such as b ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq2.png)
    {0, 1}^n such that b = H (a). H has the following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'One-way property: For a given b, it is difficult to find the input message
    such that b = H(a).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Weak collision resistance: For a given input x, it is difficult to find input
    y i.e., y ≠ x such that H(y) = H(x).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Strong collision resistance: It is difficult to find message1 and message2
    pairs such that H(message1) = H(message2).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The details about different hash functions are represented in Stallings [[4](#CR4)].
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 Elliptic Curve Cryptography (ECC)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'ECC is one of the public-key cryptography methods. It is based on the over
    finite field (![$${Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq3.png))
    using elliptic curves. The elliptic curve is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Definition 2
  prefs: []
  type: TYPE_NORMAL
- en: 'The elliptic curve equation is ![$${y}^{2}={x}^{3}+ax+b \: \:over \: {Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq4.png),
    where p is prime and p > 3, x and y are solutions (x, y) ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq5.png)
    ![$${Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq6.png)
    ![$$\times$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq7.png)
    ![$${Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq8.png)
    to the congruence ![$${y}^{2}\equiv {x}^{3}+ax+b \: (mod \: p)$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq9.png),
    where a and b are constants a, b ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq10.png)
    ![$${Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq11.png)
    such that 4a² + 27b² ![$$\not\equiv$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq12.png)
    0 (mod p), together with infinity in the point. A detailed explanation of the
    elliptic curve is given in Kobliz [[5](#CR5)]. The elliptic curve is applicable
    for key exchange, encryption/decryption, and digital signature algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 Bilinear Pairing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Definition 3
  prefs: []
  type: TYPE_NORMAL
- en: 'Let G[1] and G[2] are additive cyclic groups over E[p] (a, b) and multiplicative
    cyclic groups over ![$${Z}_{P}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq13.png)
    with the order of large prime q. The bilinear map e: G[1] ![$$\times$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq14.png)
    G[1] ![$$\to$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq15.png)
    G[2] has the following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bilinearity: Let a, b ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq16.png)
    Z^*[p] and A, B, C ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq17.png)
    G[1]. The bilinear paring (see Eq. [1](#Equ1)):![$${{e (\alpha }}\,{ + }\,{\beta
    ,}\,{{\gamma ) = e (\alpha ,}}\,{\gamma )} \cdot {{ e (\beta ,}}\,{\gamma )}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equ1.png)(1)![$${{e
    (\alpha ,}}\,{\upbeta }\,{ + }\,{{\gamma ) = e (\alpha ,}}\,{\beta )} \cdot {{e
    (\alpha ,}}\,{\gamma )}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equa.png)![$${{e
    }}({{a\alpha }},{{ b\beta }}) \, = {{ e }}({{a\alpha }},{{ b\beta }})$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equb.png)![$$=
    {{ e }}({\upalpha },{\upbeta })^{{{{a}},{{b}}}} .$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equc.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Non-degeneracy: e (α, α) ![$$\ne$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq18.png)
    1.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Computability: e is to be computed efficiently. A detailed explanation is given
    in Menezes [[6](#CR6)].'
  prefs: []
  type: TYPE_NORMAL
- en: 2.4 Fuzzy Extractor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Definition 4
  prefs: []
  type: TYPE_NORMAL
- en: Fuzzy extractor is one of the techniques for user authentication using user
    biometric [[7](#CR7)]. It has the generation function Gen(.) and reproduction
    function Rep(.), respectively. Gen(.) takes the biometric (BIO) from the user
    and it produces a biometric key, i.e., ![$${\sigma }_{i}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq19.png)
    ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq20.png){0,1}^a
    and public reproduction, i.e., ![$${\tau }_{i.}.$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq21.png)
    Rep(.) takes the user biometric (BIO’) and public reproduction string ![$${\tau
    }_{i.}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq22.png)
    as an input and output is biometric key ![$${\sigma }_{i}$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq23.png)
    such that the hamming distance is the calculated distance (BIO, BIO’) < t, where
    t is a threshold value. A detailed explanation of the fuzzy extractor function
    is given in Dodis et al. [[8](#CR8)].
  prefs: []
  type: TYPE_NORMAL
- en: 2.5 Bio Hash Function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Definition 5
  prefs: []
  type: TYPE_NORMAL
- en: Bio hashing is one of the techniques for user authentication using user biometrics
    [[9](#CR9)]. It takes biometric input from the user and produces a particular
    code called biocode. The biocode is generated based on the user input biometric
    data with a random salt value. First, the feature is extracted from the fingerprint
    or face image. The biometric feature is added with the random salt value and finally
    the biocode is generated. A detailed explanation of the biohash function is given
    in Lumini and Nanni [[10](#CR10)].
  prefs: []
  type: TYPE_NORMAL
- en: 2.6 Chebyshev Chaotic Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Definition 6Chebyshev polynomials (CP) is defined as CP[n] (x):[–1, 1]![$$\to$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq24.png)[–1,1]
    based on degree n and it is represented as follows (See Eq. [2](#Equ2), [3](#Equ3),
    [4](#Equ4)):![$$CP_n (x) = \left\{\begin{array}{c}\mathrm{cos}\left(n.\mathit{arccos}\left(x\right)\right)if\:
    x \in [-1, 1]\\ \mathrm{cos}\left(n\theta \right) if \: x=\mathrm{cos}\theta ,
    \theta \: \epsilon \left[0,\pi \right]\end{array}\right.$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equ2.png)(2)The
    CP can be defined as recursively as follows:![$$C{P_n}\left( x \right){\text{
    }} = \left\{ {\begin{array}{*{20}{l}} 1&amp;{if\,n = 1} \\ x&amp;{if\,n = 1} \\
    {2x{P_{n - 1\left( x \right)}} - {P_{n - 2\left( x \right)}}}&amp;{if\,n \geqslant
    2} \end{array}} \right.$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equ3.png)(3)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The enhanced CP has the interval of [–![$$\infty , +\infty$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq25.png)]
    and it is presented as follows [[39](#CR39), [40](#CR40)]:'
  prefs: []
  type: TYPE_NORMAL
- en: '![$$\mathrm{CPa }(\mathrm{CPb }(\mathrm{x})) \equiv \mathrm{CPab }(\mathrm{x})
    \equiv \mathrm{ CPa }(\mathrm{x}) (\mathrm{CPn }(\mathrm{x})) (\mathrm{mod \:
    p})$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_Equ4.png)(4)'
  prefs: []
  type: TYPE_IMG
- en: p is a prime (large) number and n ![$$\ge 2$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq26.png),
    x ![$$\in$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq27.png)
    [–![$$\infty , +\infty ].$$](../images/517376_1_En_6_Chapter/517376_1_En_6_Chapter_TeX_IEq28.png)
  prefs: []
  type: TYPE_NORMAL
- en: 3 System Model with the 6G Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Figure [1](#Fig1) shows the system model. In the system model, the blockchain
    distributed ledger is applicable for 6G-based different applications such as finance
    (banking), e-voting, supply chain, health care, media and entertainment, land
    registry, education, energy management, and real estate. In each application,
    security and privacy are the major challenges. In Sect. [4](#Sec4), we discuss
    the privacy and security challenges of each application and we have given solutions
    for those challenges.![](../images/517376_1_En_6_Chapter/517376_1_En_6_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: A model of a system in which a blockchain distributed ledger is at the center
    is applicable for 6G-based different applications such as finance (banking), e-voting,
    supply chain, health care, media and entertainment, land registry, education,
    energy management, and real estate.
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: System model
  prefs: []
  type: TYPE_NORMAL
- en: 4 Blockchain DL Based 6G Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 4.1 Blockchain DL in Banking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In banking, blockchain distributed ledger will play an important role. In general,
    all the bank transaction data is stored in a centralized server and all the customer
    data is also stored in a centralized server. Therefore, there is some possibility
    of SPoF and insider threats. In order to avoid these problems and to maintain
    all the customer data and customer transactions data, the decentralized server
    i.e., blockchain is needed. When compared to traditional banking and Fintech 1.0,
    the Fintech 2.0 (Blockchain + banks) provides a good customer experience, high
    efficiency, low cost, and distributed ledger safety [[33](#CR33)].
  prefs: []
  type: TYPE_NORMAL
- en: 4.2 Blockchain DL in Finance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In finance [[32](#CR32)] industry, blockchain plays a vital role. Blockchain
    distributed ledger is used for many purposes such as identity management, integrity
    checking, machine to-machine communication, and multiparty computation. In identity
    management, storing the user data into a blockchain distributed ledger has security
    and privacy challenges. To solve the challenges of privacy and security, the user
    data is stored in the encryption format in a blockchain distributed ledger. In
    integrity checking, the part of user data is stored in the blockchain and at the
    time of verification the server will verify the integrity of user data. In machine-to-machine
    communication, the devices are registered with the blockchain in the IoT environment.
    At the time of authentication, devices are  authenticate with each other without
    the help of GWN/RAC [[35](#CR35)] in IoT. In multiparty computation, multiple
    nodes participate in the process of computation without trusting any authority.
    After successful computation by a minor node, that node will get incentives for
    the jobs [[34](#CR34)].
  prefs: []
  type: TYPE_NORMAL
- en: 4.3 Blockchain DL in COVID-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Today’s world is very much affected by the “Coronavirus (COVID-19)”. Around
    239,007,759 confirmed cases people were infected with the COVID-19 [[38](#CR38)]
    and around 4,871,841 people died around the world due to coronavirus based on
    World Health Organization (WHO) report reported on 14-10-2021 [[37](#CR37)]. In
    this scenario, blockchain distributed ledger will play an important role. If any
    person is affected with the COVID-19, then their data (user locations, user information,
    etc.) stored in a blockchain distributed ledger will help to identify their location,
    contact tracing, home quarantine details, etc., For the user privacy, the user
    data encrypted is based on the cryptography techniques and health authority have
    the key of encrypted data. Whenever the health authority needs user data, data
    can have retrieved from blockchain DL and decrypt the data with the private key.
  prefs: []
  type: TYPE_NORMAL
- en: 4.4 Blockchain DL in Supply Chain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DL is used in supply chain management to track product information such as where
    the product is created and delivered as well as the whole history of product information.
    Whenever product verification is needed, at the time the verification of product
    information is retrieved from DL. In food supply chain management [[36](#CR36)],
    the blockchain distributed ledger maintains all the entities involved in the food
    supply chain. The entities are retailers, farmers, food manufacturers, and consumers.
    These entities are having the permission to access a full copy of the ledger.
    For others based on access write permission [[42](#CR42)].
  prefs: []
  type: TYPE_NORMAL
- en: 4.5 Blockchain DL in Land Registration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To avoid fraud and suspicious registrations, DL keeps a record of purchasing
    details (buyer and seller information) for the land registry.
  prefs: []
  type: TYPE_NORMAL
- en: 4.6 Blockchain DL in Health Care
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Patients’ sensitive data is stored in DL in the healthcare sector; later, the
    data can be used for patient health analysis, and DL keeps track of the patient's
    data history, allowing clinicians to follow the exact health of the patient's
    condition. By using a private blockchain, different organizations will share the
    same distributed ledger for patient information. It has several security challenges
    such as data privacy and integrity. The patient’s data is stored in blockchain
    based on the patient’s permission. The patient’s data is encrypted and it can
    be stored in a private blockchain to solve the privacy and security issues.
  prefs: []
  type: TYPE_NORMAL
- en: 4.7 Blockchain DL in Entertainment and Media
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the entertainment media data is available in the blockchain DL, then the
    user have less latency and quality of media data accessing from the blockchain
    DL is increased. The blockchain distributed ledger is maintained in all minor
    nodes, so that the latency of media getting to the user has less latency when
    compared to centralized systems.
  prefs: []
  type: TYPE_NORMAL
- en: 4.8 Blockchain DL in Education Sector
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A DL is stored for each student's records in the educational sector, and if
    a student loses any information, it can be restored from the DL. The DL link can
    also be provided with any authority for verification of student information based
    on student access permissions.
  prefs: []
  type: TYPE_NORMAL
- en: 5 Security Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following formal security verification tools and formal security analysis
    methods are needed for security analysis protocols [[28](#CR28), [29](#CR29)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 Avispa
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: AVISPA tool is a formal security verification tool. In this tool, the security
    protocol is written in the HLPSL format. The AVISPA tool validates the security
    protocol to be secure from the man-in-the-middle (MITM) attack and replay attack.
    The architecture of the AVISPA tool consists of four backbends such as TA4SP,
    CLAtSe, SATMC, and OFMC. The security protocol [[20](#CR20)] is written through
    HLPSL language and it is represented by each participant role. After each role
    of participant, session and environment roles are also represented. AVISPA tool
    supports cryptographic primitives such as encryption, signature, hash function,
    and XOR operation. In the environment role, intruder (i) also participates as
    a legitimate user based on the Dolev–Yao model. The HLPSL is converted to intermediate
    format using the HLPSL2IF translator. The Intermediate Format (IF) produces output
    through backbends (anyone). After backbends test, it shows the results. From the
    results, we know that security protocol is against replay attack and MITM attack
    or not. The detailed explanations of the AVISPA tool are given in Guide [[21](#CR21)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Scyther
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scyther tool is used for formal security verification of security protocols.
    In this tool, it is assumed that all the cryptographic primitives are perfect.
    It is based on like C/java syntax. In the Scyther tool, the security protocol
    is specified in the security protocol description language (SPDL). In this tool,
    the security protocol roles of the participant are represented. Each role of the
    participant has a set of events such as receive, send, declaration, and claim.
    Scyther tool supports cryptography primitives such as symmetric encryption/decryption,
    public key infrastructure, hash function, etc. The output shows the claims of
    the events in the security protocol. The detailed document of the Scythe tool
    is presented in Cremers [[22](#CR22)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Proverif
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Proverif tool is used for formal security verification of security protocol.
    It supports cryptography primitives such as symmetric encryption/decryption, asymmetric
    encryption/decryption, digital signatures, hash functions, non-interactive zero-knowledge
    proofs, and bit commitment. In Proverif tool, the security protocol is written
    through pi-calculus. It is having three parts such as declaration, process macros,
    and main process. Proverif tool is to verify reachability, authenticity, and secrecy.
    Proverif tool is having the Dolev–Yao threat model. In the output of the Proverif
    tool, it shows three kinds of the results such as queries are true, false, and
    cannot be proved. A detailed explanation of the Proverif tool is given by Blanchet
    et al. [[23](#CR23)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Tamarin Prover
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tamarin prover [[24](#CR24), [25](#CR25)] is a formal security verification
    tool for verifying security protocols [[26](#CR26)]. The input of the Tamarin
    prover tool is the security protocol model. The security protocol model is constructed
    based on the different roles of the entities involved in the security protocol
    and with the involvement of the adversary. Tamarin prover supports additional
    cryptographic techniques such as bilinear pairings and Diffie–Hellman exponentiation.
    Tamarin prover tool gives constructing proofs in two methods such as fully automated
    mode and interactive mode. A detailed explanation is given in Li et al. [[18](#CR18)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.5 BAN Logic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: BAN logic was proposed by Burrows et al. [[27](#CR27)]. The BAN logic is used
    to analyze the formal security proof of security protocols [[22](#CR22), [23](#CR23)].
    In BAN logic, it consists of hypotheses, rules, and proofs. The hypotheses (assumptions)
    are made to analyze the security protocol and this assumption is constructed based
    on freshness. The assumptions are used to prove the security protocol to avoid
    replay attacks. In BAN logic, rules such as message meaning, nonce verification,
    jurisdiction, freshness, and belief to achieve the goals of the security protocols
    based on proofs. A detailed explanation of the BAN logic is given by Burrows et
    al. [[27](#CR27)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.6 RoM Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Random oracle Model (RoM) was proposed by Bellare and Rogaway [[27](#CR27)].
    The RoM model [[30](#CR30)] is used for formal security analysis of security protocols.
    It is a black box. The black box gives random response output from its output
    domain based on the individual query. If the query is repeated many times, the
    same method responds to the requested query. A detailed explanation of the RoM
    model is given in Bellare and Rogaway [[27](#CR27)].
  prefs: []
  type: TYPE_NORMAL
- en: 6 Comparative Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 6.1 Comparative Study of DL-Based Security Protocols
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Jangirala et al. [[11](#CR11)] designed blockchain-based RFID-enabled authentication
    protocol for supply chains in mobile edge computing using 5G technology. In their
    protocol, they designed protocol based on hash function, XOR operation, and bitwise
    rotation operations. The session key was generated between the supply chain node
    and Tag (T) with the help of Reader (T). They performed security analysis using
    informal and formal security verification using the AVISPA tool. The Jangirala
    et al. [[11](#CR11)] protocol does not verify using formal analysis, and the communication
    cost is high.
  prefs: []
  type: TYPE_NORMAL
- en: Guo et al. [[12](#CR12)] suggested a blockchain-based authentication protocol
    for edge computing. Their protocol is designed based on Elliptic Curve Cryptography
    (ECC), bilinear paring, and consortium blockchain is adopted for authentication.
    In their protocol, the consensus algorithm is executed for storing authentication
    logs and verifying the identity based on the blockchain network. They performed
    simulations using MATLAB and hyper-ledger fabric. The security analysis of their
    protocol is performed with fewer parameters and also their protocol does not verify
    using “formal security analysis” and “formal security verification”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lin et al. [[13](#CR13)] designed a “mutual authentication” protocol for smart
    homes using blockchain. Their protocol was designed based on public key encryption
    and group signatures. They used permission blockchain for their protocol based
    on the PBFT consensus mechanism. The “mutual authentication” was performed between
    the home gateway and users. The drawback of their protocol: does not have formal
    security verification.'
  prefs: []
  type: TYPE_NORMAL
- en: Odelu [[14](#CR14)] designed biometric-based user authentication protocol using
    consortium blockchain for identity management. Their protocol was developed based
    on bilinear pairing and ECC. In their protocol at the time of initialization phase
    Registration Center (RC) and Authentication Server (AS) generates public/private
    key pairs and joins to the blockchain network with their public keys. In user
    registration phase, RC generates some secrets for user and RC puts information
    about user in blockchain network. In authentication phase, the user gives login
    request with their identity to authentication server and the authentication server
    will verify the identity with the help of blockchain. After verification of identity,
    the Session Key (SK) is generated between user and the authentication server for
    secure communication. In their protocol they used consortium blockchain for identity
    verification of user. They performed security analysis through informal security
    analysis. The protocol drawbacks of this protocol are they did not do the “formal
    security analysis”, “formal security verification” and also their protocol takes
    high communication and computation cost.
  prefs: []
  type: TYPE_NORMAL
- en: Kumar et al. [[15](#CR15)] suggested iris authentication using blockchain-based
    on additive Elgamal homomorphic encryption. In their protocol, they used homomorphic
    encryption, hash function, and blockchain. In their protocol, they performed authentication
    using blockchain. In their protocol at the time of the enrollment phase, the encrypted
    user iris template is stored in the blockchain with user identity information.
    At the time of authentication, the client device sends the user identity and encrypted
    user iris template to the blockchain and the blockchain gets the encrypted user
    iris template from the server. The blockchain computes a hash of the encrypted
    user iris template and finally, blockchain compares user iris template values
    and retrieved server values. If both values are the same, then the blockchain
    computes the distances and it can be sent to the client device for authentication
    test. The drawbacks of their scheme are it does not provide user anonymity and
    un-traceability property at the time of the authentication phase, does not provide
    formal security analysis and does not have formal security verification.
  prefs: []
  type: TYPE_NORMAL
- en: Shen [[16](#CR16)] designed Support Vector Machine (SVM) training for blockchain-based
    Internet of Things (IoT) data in a smart city environment. In their method, they
    used a homomorphic cryptosystem to secure IoT data and blockchain for storing
    encrypted IoT data. SVM for data classification and its application are disease
    diagnosis and anomaly detection. The training and testing phase is performed based
    on encrypted data stored in the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Zhang et al. [[18](#CR18)] designed integrity checking data stored in the cloud
    through blockchain against procrastinating auditors. In their protocol, they used
    hash function, bilinear pairing, and blockchain. They have five phases such as
    setup, store, audit, log generation, and check log. In the setup phase, initial
    parameters are determined by Key Generation Center (KGC). In the store phase,
    the user (U) outsources their data into the cloud along with some security parameter
    (SP) (i.e., Data (D[i]), i.e., I = 1 to n, SP). In the audit phase, a third-party
    auditor checks the integrity of the outsourced user data in the cloud with the
    help of blockchain. In the log generation phase, third-party auditor generates
    the log file, and the log file is uploaded into the blockchain. In the check log
    phase, the user audits the log file stored in the blockchain. The drawbacks of
    their scheme are they performed security analysis in some of the attacks only
    and they did not perform detailed security analysis, does not have “formal security
    verification” and the outsourced data blocks are plain text format.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2 Quantitative Analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Table [1](#Tab1) shows the quantitative analysis for DL-based protocols.Table
    1
  prefs: []
  type: TYPE_NORMAL
- en: Quantitative analysis
  prefs: []
  type: TYPE_NORMAL
- en: '| Author and Year | Cryptographytechniques and technology used | Security analysis
    | Disadvantage |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Jangirala et al. [[11](#CR11)] | Hash, XOR, bitwise rotation operations and
    blockchain | Informal, formal security verification using AVISPA | Does not verify
    using formal analysis, communication cost is high |'
  prefs: []
  type: TYPE_TB
- en: '| Guo et al. [[12](#CR12)] | ECC, bilinear paring and consortium blockchain
    | Informal | Security analysis is performed with less parameter, Does not verify
    using formal security analysis and formal security verification |'
  prefs: []
  type: TYPE_TB
- en: '| Lin et al. [[13](#CR13)] | Public-key encryption, group signatures, permission
    blockchain | Random oracle model, informal security analysis | Does not have verify
    using formal security verification |'
  prefs: []
  type: TYPE_TB
- en: '| Odelu [[14](#CR14)] | Bilinear pairing, ECC, consortium blockchain | Informal
    | Does not verify through informal security analysis and formal security verification,
    high communication and computation costs |'
  prefs: []
  type: TYPE_TB
- en: '| Kumar et al. [[14](#CR14)] | Elgamal homomorphic encryption, blockchain,
    hash function | Informal | Does not provide user anonymity and untraceability
    at the time of authentication, does not provide formal security analysis, and
    does not have formal security verification |'
  prefs: []
  type: TYPE_TB
- en: '| Shen [[16](#CR16)] | Homomorphic cryptosystem, blockchain, SVM | Security
    proof | Does not have formal security verification and formal security analysis
    |'
  prefs: []
  type: TYPE_TB
- en: '| Zhang et al. [[18](#CR18)] | Hash, bilinear pairing and blockchain | Informal
    | Did not perform detailed security analysis, does not have formal security verification,
    and outsourced data blocks are plain text format |'
  prefs: []
  type: TYPE_TB
- en: 7 Future Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the blockchain, a distributed ledger is used to solve the centralized system
    problems, but each node in the network takes huge storage space for blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a blockchain network, the possibility of an attack is 51%. To solve these
    issues, cryptography techniques are needed for secure data storage. We listed
    some of the cryptography techniques and also we listed some of the security analysis
    methods in Sects. [2](#Sec2) and [5](#Sec5), respectively.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The challenges were discussed in Sect. 6.4\. In the literature survey also,
    we discussed blockchain-based security protocol and also we listed the security
    challenges of the existing works.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PKI schemes are possible with quantum attacks, therefore lattice-based cryptography
    techniques are needed to solve security and privacy challenges.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we have analyzed various security and privacy challenges of
    blockchain distributed ledger based applications and we have presented some of
    the recent security protocols based on blockchain distributed ledger. Solutions
    for solving security and privacy challenges of blockchain distributed ledger based
    applications are addressed. The security and privacy challenges of “blockchain
    distributed ledger” based applications will play important role in upcoming years.
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgements
  prefs: []
  type: TYPE_NORMAL
- en: The authors wish to thank the SRM University-AP, Andhra Pradesh, National Institute
    of Technology, Tiruchirappalli, and IDRBT Hyderabad and also anonymous Reviewers,
    Editor, and Associate Editor(s) for their valuable suggestions.
  prefs: []
  type: TYPE_NORMAL
