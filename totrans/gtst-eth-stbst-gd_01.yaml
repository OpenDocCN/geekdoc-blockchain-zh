- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022D. P. BauerGetting Started with Ethereum [https://doi.org/10.1007/978-1-4842-8045-4_1](https://doi.org/10.1007/978-1-4842-8045-4_1)
  prefs: []
  type: TYPE_NORMAL
- en: 1. Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Davi Pedro Bauer^([1](#Aff2)  )(1)Campo Bom, Rio Grande do Sul, Brazil
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I’ll explain what Ethereum is and take you through the installations
    you’ll need to perform before you can start using it.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Ethereum?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ethereum solves problems that go beyond Bitcoin. When developing decentralized
    applications, we need a platform where we can code not only coins but a wide variety
    of solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum is a platform that allows you to code smart contracts in the Solidity
    language. Using it, you can compile your code into bytecode to be interpreted
    by the Ethereum Virtual Machine (EVM).
  prefs: []
  type: TYPE_NORMAL
- en: This virtual machine will interpret the instructions contained in the bytecode
    of your smart contract and will create a new state based on the rules described
    in the contract. It’s like you have a state machine in your hand, where with every
    new state update, a new record is updated on the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: A virtual machine like EVM consumes resources, so you need a mechanism that
    generates incentives for more people to be nodes on the network while also preventing
    spam attacks. Because of this, an element called *gas* is required for the actions
    to be executed.
  prefs: []
  type: TYPE_NORMAL
- en: To secure gas, you must first have *ether*, which is the currency of the Ethereum
    network. You use gas to pay for computing, so think of it as the cost of using
    the system. You will need gas to perform most of the activities described in this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: The Ethereum platform allows you to build decentralized applications, which
    are applications where the source code is immutable and the data is impossible
    to change after writing. This opens up a range of new solutions, such as voting,
    supply chain, and decentralized finance, among others.
  prefs: []
  type: TYPE_NORMAL
- en: The best way to learn is by coding, so let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Visual Studio Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you can start using Ethereum, you’ll need to install some software. First
    is Visual Studio Code,^([1](#Fn1)) an open source code editor that includes features
    for debugging, task execution, and version management. It provides developers
    with only the tools they need for a fast code-build-debug cycle, leaving more
    complicated processes to full-featured IDEs like Visual Studio IDE.
  prefs: []
  type: TYPE_NORMAL
- en: You can download it for free for different platforms like Windows, Linux, and
    Mac. All exercises in the book were based on the use of this tool.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Docker^([2](#Fn2)) is a free and open platform for creating, delivering, and
    executing applications. Docker allows you to decouple your apps from your infrastructure,
    allowing you to deploy software more quickly. Docker allows you to manage your
    infrastructure in the same manner that you control your apps. By utilizing Docker’s
    techniques for fast shipping, testing, and deploying code, you may substantially
    shorten the time between developing code and executing it in production. You will
    need Docker to be started before compiling using Truffle.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Blockchain Dev Kit Extension on VS Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Blockchain Developer Kit for Ethereum^([3](#Fn3)) was designed for both
    new users of Ethereum and those who are already familiar with the process. One
    of the primary goals is to assist users in creating a project structure for these
    smart contracts; it also helps users compile and build the assets, deploy the
    assets to blockchain endpoints, and perform contract debugging.^([4](#Fn4))
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Extension
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Go to Extensions and search for *Blockchain Development Kit for Ethereum*. Click
    the extension created by Microsoft; it will usually be the first one (Figure [1-1](#Fig1)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig1_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A screenshot of the Extensions window of the marketplace. The search bar displays
    Blockchain Development Kit for Ethereum. The blockchain development extension
    is the first one and is selected. The properties of this extension include development,
    deployment, debugging, and management.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-1
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Blockchain Development Kit for Ethereum
  prefs: []
  type: TYPE_NORMAL
- en: Click Install and wait for the installation to finish. That’s done!
  prefs: []
  type: TYPE_NORMAL
- en: Installing Truffle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Truffle^([5](#Fn5)) is an Ethereum development environment, testing framework,
    and asset pipeline that aims to make life easier for Ethereum developers. We will
    use this tool throughout the book.^([6](#Fn6))
  prefs: []
  type: TYPE_NORMAL
- en: Installing Truffle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Go to the terminal window and install the Truffle package.$ npm install -g truffle
  prefs: []
  type: TYPE_NORMAL
- en: Checking Truffle Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now you can check whether the installation completed successfully. If you see
    the result shown in Figure [1-2](#Fig2), the installation was successful.$ truffle![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig2_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A screenshot of the truffle command output has details of installation on top,
    followed by Truffle v 5 point 2 point 6, a development framework for Ethereum.
    Further below, the usage details are provided and there is a long list of commands
    and their functions.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-2
  prefs: []
  type: TYPE_NORMAL
- en: Truffle command output result
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Ganache CLI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ganache^([7](#Fn7)) is a personal blockchain that allows for the rapid development
    of the Ethereum and Corda distributed applications. Ganache can be used throughout
    the development cycle, allowing you to develop, deploy, and test your DApps in
    a secure and deterministic environment.^([8](#Fn8))
  prefs: []
  type: TYPE_NORMAL
- en: Installing Ganache
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Go to the terminal window and install the Ganache command line.npm install -g
    ganache-cli
  prefs: []
  type: TYPE_NORMAL
- en: Starting Ganache Locally
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Start the Ganache CLI on 127.0.0.1:8545 using the following command:ganache-cliUsing
    this command, in addition to starting Ganache locally, it will generate ten accounts
    with their respective public and private keys so that you can use them for test
    purposes (Figure [1-3](#Fig3)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig3_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: 'A screenshot of the available accounts generated by Ganache. Details of installation
    are displayed on top, followed by Ganache C L 1 v 6\. point 12 point 2, ganache-core:
    2 point 13 point 2\. Further below, there is a list of available accounts, with
    long codes and 100 E T H within parentheses with each code.'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-3
  prefs: []
  type: TYPE_NORMAL
- en: Accounts generated by Ganache
  prefs: []
  type: TYPE_NORMAL
- en: Installing and Setting Up MetaMask Wallet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: MetaMask^([9](#Fn9)) is a browser extension that allows you to access Ethereum-enabled
    distributed applications, or DApps. The add-on injects the Ethereum Web3 API^([10](#Fn10))
    into the JavaScript context of every website, allowing DApps to read from the
    blockchain.^([11](#Fn11))
  prefs: []
  type: TYPE_NORMAL
- en: When a DApp wants to make a transaction and publish it to the blockchain, MetaMask
    gives the user a secure interface to evaluate the transaction before approving
    or rejecting it through private keys, local client wallets, and hardware wallets
    like Trezor.^([12](#Fn12))
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Wallet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Go to [https://metamask.io](https://metamask.io) and click Install MetaMask.
    Click Add to Brave or your browser name and then click “Add extension.” Finally,
    click “Get started.”
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the Wallet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Click “Create a wallet” and then click “No thanks” (if you prefer, click “I
    agree” instead). Define the password that you will use to open your wallet and
    then confirm the password. Agree to the terms of use. Finally, click Create. Now
    you can back up your secret phrase (you can also do it later). For now, click
    “Remind me later.” Your wallet is done!
  prefs: []
  type: TYPE_NORMAL
- en: Accessing Your Wallet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Click Extensions and pin MetaMask to your bar. Now, click the MetaMask icon,
    and your wallet will be shown.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering Your Wallet Address
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Click the three dots on the upper-right side and then click “Account details.”
    Notice that you can see your wallet address in hash format and in QR code format.
    You can also copy your wallet address by clicking the account name. That’s it!
  prefs: []
  type: TYPE_NORMAL
- en: Create an Account on Infura
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Infura^([13](#Fn13)) delivers the tools and infrastructure that enable developers
    to rapidly transition their blockchain application from testing to scaled deployment,
    all while maintaining simple, dependable access to Ethereum and IPFS. A well-known
    use case that uses Infura as a data interface is Uniswap.^([14](#Fn14))^,^([15](#Fn15))
  prefs: []
  type: TYPE_NORMAL
- en: Creating a New Account
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Go to [Infura](https://infura.io/)^([16](#Fn16)) and click “Get started for
    free.” Enter your email and password and then click “Sign up.” A verification
    email will be sent to your address (Figure [1-4](#Fig4)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig4_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A screenshot of the Infura welcome page has Etherium and Filecoin on the left.
    The window reads, Let's get started. Our E t h 2 A P I is live. Request access
    to our private beta now. Building with Filecoin? Join the waitlist for the Infura
    Filecoin A P I. Get started and create your first project to access the Ethereum
    network exclamation mark.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-4
  prefs: []
  type: TYPE_NORMAL
- en: The Infura welcome page you will see after logging in
  prefs: []
  type: TYPE_NORMAL
- en: Check your email and confirm your account by clicking the verification link.
    After that, you will be redirected to your dashboard. Click the Ethereum tab in
    the left menu.
  prefs: []
  type: TYPE_NORMAL
- en: Now that your account is created, you can start setting up a new project (Figure
    [1-5](#Fig5)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig5_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: The project's homepage has Etherium and Filecoin on the left, where Ethereum
    is chosen. The window reads, Instant access over H T T P S and Web Sockets to
    the Ethereum network. Below the text, the Create a project button is shown.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-5
  prefs: []
  type: TYPE_NORMAL
- en: Clicking Ethereum takes you to the project’s home page
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up Your Infura Project
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Access your dashboard and click Ethereum. Then click “Create a project” and
    define the project name. Notice that you can connect with different testnets and
    also to the mainnet. Save the changes.
  prefs: []
  type: TYPE_NORMAL
- en: After the project is created, information about the ID, secret, and endpoint
    for the connection is provided (Figure [1-6](#Fig6)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig6_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: The Infura project page has project details on top and Keys below. There is
    a bar for name and a button labelled save changes under the bar. Under keys, the
    sections are Project I D with the displayed I D, Project Secret with a bar, and
    endpoints, where Mainnet is entered. There are two links below.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1-6
  prefs: []
  type: TYPE_NORMAL
- en: Infura project details page
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, you learned what Ethereum is and how to install the necessary
    software to begin developing smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will explore Solidity and learn how to set up your
    first project in this language.
  prefs: []
  type: TYPE_NORMAL
