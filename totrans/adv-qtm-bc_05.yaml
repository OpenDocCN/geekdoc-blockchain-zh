- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Design of a Blockchain-Powered Biometric Template Security Framework Using Augmented
    Sharding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sarika Khandelwal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[![Orcid Image](i/orcid.svg) https://orcid.org/0000-0003-3336-820X](https://orcid.org/0000-0003-3336-820X)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: G. H. Raisoni College of Engineering, Nagpur, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Shaleen Bhatnagar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presidency University, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Nirmal Mungale
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: G. H. Raisoni College of Engineering, Nagpur, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Ritesh Kumar Jain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geetanjali Institute of Technical Studies, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ABSTRACT
  prefs: []
  type: TYPE_NORMAL
- en: Biometric templates must be secured with traceability, immutability, and high-trust
    capabilities. A variety of system models are proposed by researchers, most of
    which either utilize blockchains or machine learning for improved security and
    quality of service (QoS). The augmented sharding model is designed using light
    weight incremental learning framework, which assists in shard formation and management.
    Performance evaluation of the proposed model indicates that it is able to achieve
    high accuracy attack mitigation, along with low block mining delay and high throughput.
    This performance is compared with various state-of-the-art methods and an improvement
    of 10% in terms of delay and 14% in terms of throughput is achieved. Further,
    an attack detection accuracy of 99.3% is obtained for sybil, masquerading, and
    man in the middle (MITM) attacks. This text further recommends improvement areas
    which can be further researched for enhancing security and QoS performance of
    the proposed model.
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs: []
  type: TYPE_NORMAL
- en: Securing biometric signatures is a multidomain task, which involves cryptanalysis,
    privacy protection, traceability integration, signal processing, classification,
    etc. In order to design a high efficiency secure biometric signature processing
    system, a wide number of system capabilities are needed. These includes but are
    not limited to, data security, resilience against tampering, high speed traceability,
    low computational complexity, and reduced power requirements. An example of such
    a model is depicted in [figure 1](#f01), wherein processes like template enrolment,
    identity claim, and exception handling can be observed. The model utilizes user
    input for capturing biometric information including, fingerprints, facial data,
    etc. and provides this information for quality assessment, and feature extraction.
    The extracted features are given to a template database for storage, which is
    connected to a system administrator for managerial purposes. The connection between
    system admin and template matching module is facilitated using an application
    programming interface (API) layer. This layer exposes the data to various 3^(rd)
    parties, which might be prone to spying, spoofing, or tampering attacks. Thus,
    there is a need for a security layer to be integrated between the system and any
    incoming and outgoing connections from it. Thus, the user data capturing connection,
    system administrator connection, application connection, and any other connection(s)
    must be secured using a high-performance security layer, which provides high-speed
    data read/write capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: In order to design such a security layer, various cryptographic, key-exchange,
    privacy preservation, and machine learning approaches are proposed by the researchers
    over the years. A survey of these approaches can be observed from the next section
    of this text, wherein various nuances, advantages, limitations, and future issues
    are discussed.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 1\. An identity verification model using biometrics |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-6684-5072-7.ch004.f01](i/ch004.f01.png) |'
  prefs: []
  type: TYPE_TB
- en: Based on this discussion, it was observed during blockchain mining, each block
    needs to be scanned for evaluating unique and rule-based hash values. This requires
    substantial delay with increasing chain length, which reduces scalability of the
    system. To improve scalability, machine learning models are used, which aims at
    reducing redundant calculations during storage and retrieval, thereby increasing
    storage and retrieval speeds. Some of these models have limited integration capabilities
    with blockchain, due to their internal build structure. Other interfaceable models
    do not provide a significant performance improvement because large length blockchains
    require mandatory hash verification and rule validations. Thus, problem statement
    of this text is to maintain high security with good scalability under different
    network conditions. To achieve a solution for this problem statement, section
    3 discusses design of the proposed blockchain powered biometric template security
    framework using augmented sharding (BLTSAS), and its performance evaluation. This
    evaluation also includes comparison with various state-of-the-art methods, which
    assists in estimating any performance gaps in the proposed model. Finally, this
    text concludes with some interesting observations about the proposed work, and
    recommends methods to further improve its performance.
  prefs: []
  type: TYPE_NORMAL
- en: LITERATURE REVIEW
  prefs: []
  type: TYPE_NORMAL
- en: A wide variety of system models are developed for biometric signature security,
    these models utilize various encryption, hashing and data modification models
    in order to perform this task. For instance, the work in (Toutara et al., 2020;
    Sawant et.al., 2020; Goel et.al., 2020; Mohatar et.al., 2019) proposes use of
    blockchain, smart contracts, queue ordering, and Merkle trees, for biometric data
    validation and storage. These models propose an initial-level security framework
    for storing and validation of biometric data, thereby possessing moderate security
    and moderate QoS performance. The security performance can be improved using the
    work in ([Dinesh et al.,2021](#r7); Baqari et al., 2020; [Yazdinejad et al.,2020](#r35);
    [Shankar et al., 2021](#r28); [Jain et al., 2012](#r17)) wherein effect of hash
    algorithms, blockchain access control, highly distributed blockchain model, and
    blockchain-based one-time-password (OTP) are proposed. These models work by improving
    authentication and storage performance of biometric systems via incorporation
    of highly secure encryption and hashing methods. But they lack in terms of QoS
    performance due to deployment of high complexity cryptosystems. Lower complexity
    models are proposed in (Waheed et al.,2020; Mastronardi et al.,2020; [Goel et
    al.,2019](#r8); [Ibrahim et al., 2021](#r13); [Khazanchi et al., 2021](#r19))
    wherein smart contracts, radio frequency identification (RFID), low delay convolutional
    neural networks (CNNs), and centralized synchronization-based e-Voting systems
    are proposed. These systems utilize low complexity encryption and centralized
    processing models in order to provide security to biometric storage, which improves
    the QoS but introduces security vulnerabilities to the system.
  prefs: []
  type: TYPE_NORMAL
- en: Security performance of biometric systems can be improved via use of blockchain-based
    fuzzy signatures ([Naganuma et al.,2020](#r25); [Hiran et al., 2021](#r11)), blockchain
    based self-sovereign identity (Othman et al.,2018), proof-of-work (PoW) based
    blockchain (Sarkar et al., 2019), and prime number utilization for blockchain
    verification ([Iovane et al., 2019](#r15)) as proposed in literature. These models
    provide high security, along with good QoS performance due to scalable blockchain
    deployments. This security performance can further improved using authentication
    protocols mentioned in ([Ali et al., 2019](#r4)), splitting of Geometric Centre
    both horizontally and vertically(Jangid et al.,2020), proof-of-stake (PoS) based
    blockchain(Jaffer et al.,2019), proof-of-authority (PoA) (Morano et al.,2020),
    and hybrid fusion of public key cryptography ([Iovane et al.,2020](#r14); Tyagi
    et al.,2021). These models assist in improving biometric storage security via
    attack pre-emption, and addition of classification models as a measure of improved
    pattern analysis during attacks. Similar models are proposed in ([Alharthi et
    al., 2021](#r3); [Xiang et al., 2020](#r34); Gulati et al., 2019; [Liu et al.,
    2019](#r20)) wherein privacy preservation blockchain biometrics, permissioned
    blockchain-based user authentication, identity based blockchains, and identity
    based smart contracts. These models assist in improving biometric storage security
    and QoS performance by reducing redundancies during block formation and modification.
    It is observed that hash size can be increased in order to reduce complexity of
    hash validation, and inherently increasing blockchain security. Application specific
    storage models are defined in ([Hongqing et al.,2018](#r12); [Bathen et al.,2020](#r5);
    [Madine et al.,2021](#r21); Wireko et al.,2028), wherein industrial data storage,
    self-driving data storage, and cross application electronic medical record (EMR)
    storage systems are defined. The efficiency of these models are further extended
    using ([Acquah et al.,2020](#r1); [Mandal et al.,2020](#r22)), wherein distributed
    storage, and certificateless signcryption for internet of things (IoT) are proposed.
    These models assist in improving QoS of biometric storage via selective encryption,
    and reducing complexity of certificate exchange during blockchain formation. Based
    on these models it is observed that blockchain based models have become de-facto
    for storing biometric data, and have a wide range of research enhancements. One
    such system model is described in the next section, wherein sharding is used for
    improving security and QoS of biometric data.
  prefs: []
  type: TYPE_NORMAL
- en: DESIGN OF A BLOCKCHAIN POWERED BIOMETRIC TEMPLATE SECURITY FRAMEWORK USING AUGMENTED
    SHARDING
  prefs: []
  type: TYPE_NORMAL
- en: The proposed blockchain-based method for providing biometric template security
    uses augmented sharding. It is implemented using modified version of league championship
    algorithm (LCA), that assists in shard creation and maintenance. The modified
    LCA method selects the best sharding strategy for providing high security, low
    delay and good throughput performance. The protocol is divided into 2 parts, which
    combine together to form the final system,
  prefs: []
  type: TYPE_NORMAL
- en: ● Proof of Work (PoW) based blockchain design for secure storage of biometric
    scans.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Shard creation by tracking changes in biometric scans.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Utilizing changes in biometric scans for shard management and merging.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The shard management and merging model is dependent on shard creation model;
    thus, they must be implemented in tandem for design of a highly secure biometric
    storage system. A detailed description of these parts is defined in the following
    sub-sections.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work (PoW) Based Blockchain Design for Secure Storage of Biometric
    Scans
  prefs: []
  type: TYPE_NORMAL
- en: Design of a secure biometric storage model must be able to provide immutability,
    traceability, high speed retrieval and distributed computing capabilities. In
    order to design such a system model, this section proposes a PoW consensus based
    blockchain storage model. Each biometric scan is stored on the blockchain using
    the block structure observed from [table 1](#t1), wherein blockchain entities
    including hash of previous block, type of biometric data stored, actual biometric
    data, timestamp of storage, a hash checking nonce value, and hash of the current
    block are stored. The secure hashing algorithm in 256-bit mode (SHA256) is used
    in order to generate hash values from the block.
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Design of the biometric scan storage block
  prefs: []
  type: TYPE_NORMAL
- en: '| Prev. Hash | Biometric Type | Biometric Data |'
  prefs: []
  type: TYPE_TB
- en: '| Timestamp | Nonce | Block Hash |'
  prefs: []
  type: TYPE_TB
- en: In order to store a given biometric scan into the blockchain, following steps
    are used,
  prefs: []
  type: TYPE_NORMAL
- en: ● The biometric scan is converted into a 1D array without quantization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Information including scan size, scan dimensions, and other metadata is prepended
    to this biometric scan data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Using this information, a new block is formed as per [table 1](#t1).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ●
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A random value of nonce is generated, and block hash is evaluated using equation
    1 as follows,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B[hash] = SHA256(P[hash]| B[type]| B[data]| T[s]| nonce) (1)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Where, P[hash], B[type], B[daa], and T[s] represents previous hash, biometric
    type, biometric data, and timestamp of block creation.
  prefs: []
  type: TYPE_NORMAL
- en: ● If this hash is already present in the chain, then a new nonce value is generated,
    which results into a new hash value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Once a unique hash value is generated, then the block is added to the chain,
    and this process is repeated for every new biometric scan.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As the number of scans increase, the complexity of hash generation also increases.
    This results into an increase in delay needed to add a block to the chain, which
    reduces quality of service (QoS) of the blockchain storage model. To improve this
    QoS, smaller blockchains (shards) are created, and managed as per the process
    defined in following sections respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Shard Creation by Tracking Changes in Biometric Scans
  prefs: []
  type: TYPE_NORMAL
- en: Shard creation is the process of dividing the underlying blockchain into smaller
    chains, wherein each chain is independently managed by the main storage processing
    unit. It uses a modified version of LCA, and can be elaborated using the following
    steps,
  prefs: []
  type: TYPE_NORMAL
- en: ● Input Parameters,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: o Number of games (NG)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Number of leagues (NL)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o LCA learning rate (L[r])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Current number of shards (N[curr])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Mean delay for adding a block to the chain (D[mean])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Minimum length of shard (L[min])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Minimum length of shard (L[max])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Initialize all games as ‘to be mutated’ and follow the given process in order
    to obtain the best shard length for the currently deployed blockchain solution
    in the network,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: o For each game 1 to NG
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: § For each league 1 to NL
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: § If the current league is marked as ‘not to be mutated’, then go to the next
    league, else process this league.
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: § Formulate a random shard length (![Mathtype978-1-6684-5072-7.ch004.m01](i/ch004.m01.svg))
    using equation 2, and generate a new shard with the given length,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m02](i/ch004.m02.svg) = rand(L[min], L[max])
    (2)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
- en: § Evaluate number of packets processed per unit time (PPU[t]) using equation
    3, which is an estimate of number of blocks added to the shard in a given time
    interval,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m03](i/ch004.m03.svg) (3)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
- en: Where, B[p](t), B[d](t) and B[t](t) are the number of biometric signatures passed
    per unit time, dropped per unit time and total biometric packets added per unit
    time respectively.
  prefs: []
  type: TYPE_NORMAL
- en: o
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluate league fitness using equation 4,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m04](i/ch004.m04.svg) (4)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Where, N[c] is the sample number of blocks added to the chain, D[i], E[i], and
    B[i] represents end-to-end delay, energy needed and number of blocks successfully
    added to the chain for the given iteration.
  prefs: []
  type: TYPE_NORMAL
- en: o
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find fitness of each league, and then evaluate threshold league fitness using
    equation 5 as follows,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m05](i/ch004.m05.svg) (5)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: o Mark all solutions as ‘to be mutated’, which have league fitness less than
    L[th], mark other solutions as ‘not to be mutated’, and go to the next game playing
    iteration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once all solutions are evaluated, then find the sharding solution that has maximum
    fitness, which indicates maximum energy saving, maximum block forwarding, and
    minimum end-to-delay performance. Let the selected shard length be SL[sel], find
    the average sidechain length (SL[avg]) for the system using equation 6,
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m06](i/ch004.m06.svg) (6)'
  prefs: []
  type: TYPE_IMG
- en: Where, ‘L’ is length of the current shard. Accept this new sidechain only if
    it satisfies equation 7,
  prefs: []
  type: TYPE_NORMAL
- en: SL[sel]≥SL[avg]*L[r] and SL[sel]≤S[max]*L[r] (7)
  prefs: []
  type: TYPE_NORMAL
- en: This will indicate that the current blockchain shard is growing incrementally,
    and optimum number of blockchain shards are created. Based on this process, new
    shards are created and biometric information is added to them. This process is
    evaluated every time a new biometric data is added to the system, and is used
    to evaluate if a new chain is needed and creates the shard if needed. Once these
    chains are created, then shard management module is activated, which is described
    in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Utilizing Changes in Biometric Scans for Shard Management and Merging
  prefs: []
  type: TYPE_NORMAL
- en: Each blockchain shard is stored on a group of closely placed nodes. As soon
    as there are changes in the biometric storage capacity, then the merging and management
    layer is activated. This layer is capable of automatically managing the shards
    and merge or split them as per storage requirements. This is needed so that optimum
    number of blockchain shards are created, and each shard consists of an optimum
    number of biometric entries. In order to perform this task of automatic management,
    the following steps are executed,
  prefs: []
  type: TYPE_NORMAL
- en: ● Input
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: o Number of nodes in each shard (N[shard])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Current number of shards (N[curr])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o Index of the shard which is being checked (S[i])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ● A dynamic shard clustering model is used in order to identify the shard index
    to which current shard’s data can be offloaded. This model works using the following
    steps,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: o Let the average value of biometric data in the current shard ‘S[i]’ be (x[1],
    x[2], x[3], …,x[n])
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: o
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Find the average distance of all shards from the shard, using the following
    equation,
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m07](i/ch004.m07.svg) (8)'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
- en: o Virtually merge all shards for the ‘S[i]’ indexed sidechain into the given
    sidechain if the value of d[s]≤R, where R is selected depending upon system performance.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ●
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluate the following equation 9, for all shards where the merging process
    has been done,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m08](i/ch004.m08.svg) (9)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Where, ![Mathtype978-1-6684-5072-7.ch004.m09](i/ch004.m09.svg) is the optimization
    factor for the j^(th) shard, while ‘E’ and ‘F’ are the average energy values,
    and average blockchain data forwarding ratios for storage devices participating
    in the given shard.
  prefs: []
  type: TYPE_NORMAL
- en: ●
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the shard for merging with minimum value of ![Mathtype978-1-6684-5072-7.ch004.m10](i/ch004.m10.svg),
    such that this value is less than the following variance threshold formulated
    in equation 10\. If none of the shards follow the given threshold, then the current
    shard is not merged with any other shard, and is managed individually.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-6684-5072-7.ch004.m11](i/ch004.m11.svg) (10)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Due to this process, effective merging and management of shards is performed.
    Once the shard management layer is activated, then optimum shards are automatically
    created and managed with minimum supervision. All these modules are connected
    together in order to perform effective biometric data storage with high security.
    The performance of this network can be observed in the next section, wherein metrics
    like delay, throughput, and attack detection accuracy are compared with state-of-the
    art algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: DATA COLLECTION AND RESULT ANALYSIS
  prefs: []
  type: TYPE_NORMAL
- en: In order to evaluate QoS and security performance of the proposed BLTSAS, the
    sharding system was tested with a large number of biometric data inputs. The numbers
    of users whose data is being stored was varied from 10 to 150, and the following
    attacks were injected into the system,
  prefs: []
  type: TYPE_NORMAL
- en: ● Sybil attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Man-in-the-middle (MITM) attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ● Masquerading attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Because of multiple sharding check points, and the immutable nature of the underlying
    PoW blockchain, the storage network is able to detect all these attacks with 100%
    accuracy. Thus, making the system highly secure against these known attacks and
    most probably any unknown attacks as well. Each biometric signature stored in
    the sharded network is passed through multiple validation, and verification checks,
    due to which such a high security performance is achieved. Upon completing these
    security checks, QoS parameters like end-to-end delay, energy consumption, throughput,
    packet delivery ratio and jitter are compared by varying the number of stored
    signatures from 10 to 50 for 10 to 150 users. The following tables showcase the
    QoS results for the proposed sharding protocol compared with non-sharding, ([Naganuma
    et al.,2020](#r25)) and ([Alharthi et al., 2021](#r3)) based systems. These results
    were obtained by calculating average values of energy consumed and delay needed
    by the given network storage during multiple biometric data storage. Based on
    this, delay to add multiple blocks to the shards for 10 users is tabulated in
    [table 2](#t2) as follows, the table also compares delay performance of different
    non-sharding models, which assists in evaluating superiority of the proposed sidechain
    solution.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Delay for 10 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Delay ([Naganuma et al.,2020](#r25)) (us) | Delay ([Alharthi
    et al., 2021](#r3)) (us) | Delay (Proposed) (us) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 869.4 | 1304.1 | 660.6 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 1081.8 | 1622.7 | 821.7 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 1251.9 | 1877.4 | 951.3 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 1355.4 | 2033.1 | 1030.5 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 1490.4 | 2236.5 | 1134 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 1627.2 | 2441.7 | 1237.5 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 1701.9 | 2552.4 | 1293.3 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 1763.1 | 2645.1 | 1341 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 1907.1 | 2862 | 1450.8 |'
  prefs: []
  type: TYPE_TB
- en: The speed is improved by almost 18% when compared with other sharding systems,
    which is due to effective shard creation and merging process. Similar performance
    improvement is observed for 50 users, and can be observed from [table 3](#t3),
  prefs: []
  type: TYPE_NORMAL
- en: Table 3\. Delay for 50 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Delay ([Naganuma et al.,2020](#r25)) (us) | Delay ([Alharthi
    et al., 2021](#r3)) (us) | Delay (Proposed) (us) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 1044 | 1565.1 | 792.9 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 1298.7 | 1946.7 | 986.4 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 1503 | 2252.7 | 1141.2 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 1626.3 | 2439.9 | 1236.6 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 1789.2 | 2684.7 | 1359.9 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 1953 | 2930.4 | 1484.1 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 2041.2 | 3063.6 | 1552.5 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 2115.9 | 3174.3 | 1609.2 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 2087.1 | 3132 | 1587.6 |'
  prefs: []
  type: TYPE_TB
- en: The delay is reduced by almost 20% when compared with ([Naganuma et al.,2020](#r25)),
    and 26.8% when compared with ([Alharthi et al., 2021](#r3)), that describe other
    sidechaining systems, which is due to automatic sidechain management and merging.
    Similar performance improvement is observed for 100 users, and can be observed
    from [table 4](#t4),
  prefs: []
  type: TYPE_NORMAL
- en: Table 4\. Delay for 100 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Delay ([Naganuma et al.,2020](#r25)) (us) | Delay ([Alharthi
    et al., 2021](#r3)) (us) | Delay (Proposed) (us) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 1260.9 | 1890.9 | 958.5 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 1568.7 | 2352.6 | 1192.5 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 1815.3 | 2722.5 | 1379.7 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 1965.6 | 2948.4 | 1494 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 2162.7 | 3243.6 | 1644.3 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 2360.7 | 3539.7 | 1794.6 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 2467.8 | 3700.8 | 1875.6 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 2556.9 | 3835.8 | 1944 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 2312.1 | 3468.6 | 1757.7 |'
  prefs: []
  type: TYPE_TB
- en: The speed is improved by almost 24% when compared with ([Naganuma et al.,2020](#r25)),
    and 31.5% when compared with ([Alharthi et al., 2021](#r3)), that describe other
    sidechaining systems, which is due to shard merging and automatic shard management.
    Thus, an average delay reduction of 20% is achieved, which can be observed from
    [figure 2](#f02) wherein average delay is visualized against number of blocks.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 2\. Delay performance of different sidechain algorithms |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-6684-5072-7.ch004.f02](i/ch004.f02.png) |'
  prefs: []
  type: TYPE_TB
- en: Similar performance improvement is observed for energy consumption, and is tabulated
    in [tables 5](#t5), [6](#t6) and [7](#t7).
  prefs: []
  type: TYPE_NORMAL
- en: Table 5\. Energy for 10 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Energy ([Alharthi et al., 2021](#r3)) (mJ) | Energy ([Alharthi
    et al., 2021](#r3)) (mJ) | Energy (Proposed) (mJ) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 10.00 | 14.99 | 7.61 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 11.38 | 17.07 | 8.66 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 12.11 | 18.16 | 9.21 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 13.02 | 19.52 | 9.89 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 13.77 | 20.66 | 10.47 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 14.40 | 21.61 | 10.95 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 14.94 | 22.41 | 11.36 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 15.67 | 23.50 | 11.91 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 16.71 | 25.07 | 12.70 |'
  prefs: []
  type: TYPE_TB
- en: Energy consumption is reduced by 15% when compared with ([Naganuma et al.,2020](#r25)),
    and 23.6% when compared with ([Alharthi et al., 2021](#r3)), that describe other
    algorithms, which indicates an improvement in overall network lifetime. Comparison
    for 50 users can be observed from [table 6](#t6).
  prefs: []
  type: TYPE_NORMAL
- en: Table 6\. Energy for 50 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Energy ([Naganuma et al.,2020](#r25)) (mJ) | Energy ([Alharthi
    et al., 2021](#r3)) (mJ) | Energy (Proposed) (mJ) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 13.00 | 19.49 | 9.88 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 14.80 | 22.19 | 11.25 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 15.74 | 23.61 | 11.97 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 16.93 | 25.38 | 12.87 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 17.90 | 26.85 | 13.62 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 18.73 | 28.09 | 14.24 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 19.42 | 29.12 | 14.76 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 20.37 | 30.55 | 15.48 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 21.84 | 31.42 | 16.35 |'
  prefs: []
  type: TYPE_TB
- en: As number of nodes increase, the energy efficiency is improved. For 50 users
    the energy consumption is reduced by over 20%, which is due to the fact that sidechain
    merging has larger effect as number of users are increased. This effect can be
    observed with 100 nodes in the following [table 7](#t7).
  prefs: []
  type: TYPE_NORMAL
- en: Table 7\. Energy for 100 users
  prefs: []
  type: TYPE_NORMAL
- en: '| Num. Blocks | Energy ([Naganuma et al.,2020](#r25)) (mJ) | Energy ([Alharthi
    et al., 2021](#r3)) (mJ) | Energy (Proposed) (mJ) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 17.99 | 26.99 | 13.68 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 20.48 | 30.73 | 15.57 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 21.80 | 32.69 | 16.57 |'
  prefs: []
  type: TYPE_TB
- en: '| 45 | 23.44 | 35.14 | 17.81 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 24.79 | 37.17 | 18.84 |'
  prefs: []
  type: TYPE_TB
- en: '| 55 | 25.94 | 38.90 | 19.71 |'
  prefs: []
  type: TYPE_TB
- en: '| 65 | 26.89 | 40.33 | 20.44 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 28.20 | 42.30 | 21.44 |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 29.50 | 43.81 | 22.14 |'
  prefs: []
  type: TYPE_TB
- en: From the results observed in the [table 5](#t5), [6](#t6) and [7](#t7) it can
    be observed that the proposed sharding model has reduced the delay needed for
    communication by almost 20% when compared with other sidechain solutions. This
    indicates an increase in overall system speed, and implies that the proposed model
    can be used for real-time high speed biometric storage systems. This can also
    be observed from [figure 2](#f02), wherein average delay performance of all communications
    is combined. Similarly, energy performance indicates that the proposed sharding
    solution is 18% more energy efficient than other sidechain systems. This can also
    be observed from [figure 3](#f03), wherein energy performance of these algorithms
    is visually compared.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 3\. Energy performance of the proposed sharding architectures |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-6684-5072-7.ch004.f03](i/ch004.f03.png) |'
  prefs: []
  type: TYPE_TB
- en: Similar comparison is done for other QoS parameters like throughput, jitter
    and packet delivery ratio. Results of this comparison can be observed from the
    following [table 8](#t8), wherein it can be observed that the proposed sharding
    model outperforms other models for all the QoS parameters. Thereby making the
    system applicable for real-time use in high performance, high trustability, high
    transparency, and low energy, high security, biometric storage systems.
  prefs: []
  type: TYPE_NORMAL
- en: Table 8\. Comparative performance of QoS parameters
  prefs: []
  type: TYPE_NORMAL
- en: '| Parameter | ([Naganuma et al.,2020](#r25)) | ([Alharthi et al., 2021](#r3))
    | Proposed |'
  prefs: []
  type: TYPE_TB
- en: '| Delay (us) | 2100.60 | 3727.80 | 2029.50 |'
  prefs: []
  type: TYPE_TB
- en: '| Energy (mJ) | 22.86 | 44.28 | 22.32 |'
  prefs: []
  type: TYPE_TB
- en: '| Throughput (kbps) | 232.20 | 159.30 | 246.60 |'
  prefs: []
  type: TYPE_TB
- en: '| Jitter (us) | 54.43 | 114.91 | 52.56 |'
  prefs: []
  type: TYPE_TB
- en: '| Packet delivery ratio (%) | 89.08 | 75.72 | 89.55 |'
  prefs: []
  type: TYPE_TB
- en: An average performance improvement of over 20% is achieved in the overall QoS
    of the system, and can be observed from [figure 4](#f04), wherein average performance
    improvement of different QoS parameters can be seen.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 4\. Average QoS improvement |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-6684-5072-7.ch004.f04](i/ch004.f04.png) |'
  prefs: []
  type: TYPE_TB
- en: Due to this improvement, the underlying system can be used for real-time biometric
    storage, which require high security and high quality of service without compromising
    on either of the parameters. In terms of cost analysis, the model would be able
    to reduce deployment cost by 25% when compared with standard blockchain models.
    This cost analysis includes delay needed, energy consumed, throughput achieved,
    and packet delivery ratio of the proposed model w.r.t. existing blockchain models
    on different network deployments.
  prefs: []
  type: TYPE_NORMAL
- en: CONCLUSION AND FUTURE SCOPE
  prefs: []
  type: TYPE_NORMAL
- en: Sharding is used in order to reduce overall delay and energy consumption of
    biometric storage system via effective blockchain splitting. This splitting allows
    the blockchain to reduce number of computations needed in order to add, update,
    search and access internal blocks. Shards when combined can further improve upon
    the overall system performance by reducing delay and number of computations needed
    for hashing. Due to this combination, the proposed model is able to obtain over
    20% reduction in communication delay, over 25% reduction in energy consumption,
    and over 20% improvement in overall storage throughput. Due to faster storage
    performance across fewer number of blocks, the probability of packet dropping
    is also reduced, this results in increasing the packet delivery ratio by 10% and
    reducing overall delay jitter by over 15% when compared with other sidechaining
    algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: In future, researchers can further extend the performance of this algorithm
    by using better block truncation algorithms, and by utilizing improved machine
    learning models for shard creation. Moreover, the truncated data parts can be
    given moderate level of security in order to reduce chances of modification due
    to external and internal attacks, which will further strengthen network security.
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs: []
  type: TYPE_NORMAL
- en: Acquah, M. A., Chen, N., Pan, J. S., Yang, H. M., & Yan, B. (2020). Securing
    Fingerprint Template Using Blockchain and Distributed Storage System. Symmetry
    , 12(6), 951\. doi:10.3390/sym12060951
  prefs: []
  type: TYPE_NORMAL
- en: al Baqari, M., & Barka, E. (2020). Biometric-Based Blockchain EHR System (BBEHR).
    In 2020 International Wireless Communications and Mobile Computing . IWCMC. doi:10.1109/IWCMC48107.2020.9148357
  prefs: []
  type: TYPE_NORMAL
- en: 'Alharthi, A., Ni, Q., & Jiang, R. (2021). A Privacy-Preservation Framework
    Based on Biometrics Blockchain (BBC) to Prevent Attacks in VANET. IEEE Access:
    Practical Innovations, Open Solutions , 9, 87299–87309\. doi:10.1109/ACCESS.2021.3086225'
  prefs: []
  type: TYPE_NORMAL
- en: Ali, W. A., Sahib, N. M., & Waleed, J. (2019). Preservation Authentication and
    Authorization on Blockchain. 2019 2nd International Conference on Engineering
    Technology and Its Applications (IICETA). 10.1109/IICETA47481.2019.9012996
  prefs: []
  type: TYPE_NORMAL
- en: 'BathenL. A. D.FloresG. H.JadavD. (2020). RiderS: Towards a Privacy-Aware Decentralized
    Self-Driving Ride-Sharing Ecosystem. 2020 IEEE International Conference on Decentralized
    Applications and Infrastructures (DAPPS). 10.1109/DAPPS49028.2020.00004'
  prefs: []
  type: TYPE_NORMAL
- en: 'Delgado-MohatarO.FierrezJ.TolosanaR.Vera-RodriguezR. (2019). Biometric Template
    Storage With Blockchain: A First Look Into Cost and Performance Tradeoffs. 2019
    IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops (CVPRW).
    10.1109/CVPRW.2019.00342'
  prefs: []
  type: TYPE_NORMAL
- en: DineshA. D.Durga Prasad ReddyC.GopiG. V.JainR.ShankarT. N. (2021). A Durable
    Biometric Authentication Scheme via Blockchain. 2021 International Conference
    on Advances in Electrical, Computing, Communication and Sustainable Technologies
    (ICAECT). 10.1109/ICAECT49130.2021.9392415
  prefs: []
  type: TYPE_NORMAL
- en: Goel, A., Agarwal, A., Vatsa, M., Singh, R., & Ratha, N. (2019). Securing CNN
    Model and Biometric Template using Blockchain. 2019 IEEE 10th International Conference
    on Biometrics Theory, Applications and Systems (BTAS). 10.1109/BTAS46853.2019.9185999
  prefs: []
  type: TYPE_NORMAL
- en: GoelU.SonanisR.RastogiI.LalS.DeA. (2020). Criticality Aware Orderer for Heterogeneous
    Transactions in Blockchain. 2020 IEEE International Conference on Blockchain and
    Cryptocurrency (ICBC). 10.1109/ICBC48266.2020.9169439
  prefs: []
  type: TYPE_NORMAL
- en: Gulati, H., & Huang, C. T. (2019). Self-Sovereign Dynamic Digital Identities
    based on lockchain Technology. 2019 SoutheastCon. 10.1109/SoutheastCon42311.2019.9020518
  prefs: []
  type: TYPE_NORMAL
- en: Hiran, K. K., Khazanchi, D., Vyas, A. K., & Padmanaban, S. (2021). Machine learning
    for sustainable development. Machine Learning for Sustainable Development. 10.1515/9783110702514
  prefs: []
  type: TYPE_NORMAL
- en: HongqingG.PeiyongS.WenzhongG.KunG. (2018). Component-based Assembling Tool and
    Runtime Engine for the Machine Learning Process. 2018 International Conference
    on Cloud Computing, Big Data and Blockchain (ICCBB). 10.1109/ICCBB.2018.8756448
  prefs: []
  type: TYPE_NORMAL
- en: 'Ibrahim, M., Ravindran, K., Lee, H., Farooqui, O., & Mahmoud, Q. H. (2021).
    ElectionBlock: An Electronic Voting System using Blockchain and Fingerprint Authentication.
    2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C).
    10.1109/ICSA-C52384.2021.00033'
  prefs: []
  type: TYPE_NORMAL
- en: Iovane, G., Bisogni, C., de Maio, L., & Nappi, M. (2020). An Encryption Approach
    Using Information Fusion Techniques Involving Prime Numbers and Face Biometrics.
    IEEE Transactions on Sustainable Computing , 5(2), 260–267\. doi:10.1109/TSUSC.2018.2793466
  prefs: []
  type: TYPE_NORMAL
- en: IovaneG.NappiM.ChinniciM.PetrosinoA.CastiglioneA.BarraS. (2019). A Novel Blockchain
    Scheme Combining Prime Numbers and Iris for Encrypting Coding. 2019 IEEE Intl
    Conf on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence
    and Computing, Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science
    and Technology Congress(DASC/PiCom/CBDCom/CyberSciTech). 10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00117
  prefs: []
  type: TYPE_NORMAL
- en: JafferS. A.PandeyS.MehtaR.BhavathankarP. (2020). Blockchain Based Direct Benefit
    Transfer System For Subsidy Delivery. 2020 International Conference for Emerging
    Technology (INCET). 10.1109/INCET49848.2020.9154178
  prefs: []
  type: TYPE_NORMAL
- en: 'Jain, R. K., Hiran, K., & Paliwal, G. (2012). Quantum Cryptography: A New Generation
    Of Information Security System. Proceedings of International Journal of Computers
    and Distributed Systems.'
  prefs: []
  type: TYPE_NORMAL
- en: JangidP. S.BharadiV. A. (2020). Evolving Authentication Design Consideration
    and BaaS Architecture for Internet of Biometric things. 2020 International Conference
    on Convergence to Digital World - Quo Vadis (ICCDW). 10.1109/ICCDW45521.2020.9318664
  prefs: []
  type: TYPE_NORMAL
- en: Khazanchi, D., Vyas, A. K., Hiran, K. K., & Padmanaban, S. (Eds.). (2021). Blockchain
    3.0 for sustainable development (Vol. 10). Walter de Gruyter GmbH & Co KG.
  prefs: []
  type: TYPE_NORMAL
- en: LiuY.SunG.SchuckersS. (2019). Enabling Secure and Privacy Preserving Identity
    Management via Smart Contract. 2019 IEEE Conference on Communications and Network
    Security (CNS). 10.1109/CNS.2019.8802771
  prefs: []
  type: TYPE_NORMAL
- en: 'Madine, M., Salah, K., Jayaraman, R., Al-Hammadi, Y., Arshad, J., & Yaqoob,
    I. (2021). appXchain: Application-Level Interoperability for Blockchain Networks.
    IEEE Access: Practical Innovations, Open Solutions , 9, 87777–87791\. doi:10.1109/ACCESS.2021.3089603'
  prefs: []
  type: TYPE_NORMAL
- en: Mandal, S., Bera, B., Sutrala, A. K., Das, A. K., Choo, K. K. R., & Park, Y.
    (2020). Certificateless-Signcryption-Based Three-Factor User Access Control Scheme
    for IoT Environment. IEEE Internet of Things Journal , 7(4), 3184–3197\. doi:10.1109/JIOT.2020.2966242
  prefs: []
  type: TYPE_NORMAL
- en: 'MastronardiG.TatoS. I. (2020). HoSè: Hospital Security - How to make the surgical
    site safer using RFID blockchain and biometric techniques. 2020 IEEE International
    Symposium on Medical Measurements and Applications (MeMeA). 10.1109/MeMeA49120.2020.9137348'
  prefs: []
  type: TYPE_NORMAL
- en: Morano, F., Ferretti, C., Leporati, A., Napoletano, P., & Schettini, R. (2019).
    A blockchain technology for protection and probative value preservation of vehicle
    driver data. 2019 IEEE 23rd International Symposium on Consumer Technologies (ISCT).
    10.1109/ISCE.2019.8900982
  prefs: []
  type: TYPE_NORMAL
- en: Naganuma, K., Suzuki, T., Yoshino, M., Takahashi, K., Kaga, Y., & Kunihiro,
    N. (2020). New Secret Key Management Technology for Blockchains from Biometrics
    Fuzzy Signature. 2020 15th Asia Joint Conference on Information Security (AsiaJCIS).
    10.1109/AsiaJCIS50894.2020.00020
  prefs: []
  type: TYPE_NORMAL
- en: 'OthmanA.CallahanJ. (2018). The Horcrux Protocol: A Method for Decentralized
    Biometric-based Self-sovereign Identity. 2018 International Joint Conference on
    Neural Networks (IJCNN). 10.1109/IJCNN.2018.8489316'
  prefs: []
  type: TYPE_NORMAL
- en: 'SawantG.BharadiV. (2020). Permission Blockchain based Smart Contract Utilizing
    Biometric Authentication as a Service: A Future Trend. 2020 International Conference
    on Convergence to Digital World - Quo Vadis (ICCDW). 10.1109/ICCDW45521.2020.9318715'
  prefs: []
  type: TYPE_NORMAL
- en: ShankarT. N.RakeshP.Bhargawa RaoT.Hari BharadwajL.RakeshC.Lakshmi MadhuriM.
    (2021). Providing Security to Land Record with the computation of Iris, Blockchain,
    and One Time Password. 2021 International Conference on Computing, Communication,
    and Intelligent Systems (ICCCIS). 10.1109/ICCCIS51004.2021.9397176
  prefs: []
  type: TYPE_NORMAL
- en: ToutaraF.SpathoulasG. (2020). A distributed biometric authentication scheme
    based on blockchain. 2020 IEEE International Conference on Blockchain (Blockchain).
    10.1109/Blockchain50366.2020.00068
  prefs: []
  type: TYPE_NORMAL
- en: Tyagi, S. K. S., Mukherjee, A., Pokhrel, S. R., & Hiran, K. (2020a). An Intelligent
    and Optimal Resource Allocation Approach in Sensor Networks for Smart Agri-IoT.
    Smart Agri-IoT. IEEE Sensors Journal , 21(16), 17439–17446\. https://doi.org/10.1109/JSEN.2020.3020889
  prefs: []
  type: TYPE_NORMAL
- en: V., S., Sarkar, A., Paul, A., & Mishra, S. (2019). Block Chain Based Cloud Computing
    Model on EVM Transactions for Secure Voting. 2019 3rd International Conference
    on Computing Methodologies and Communication (ICCMC). 10.1109/ICCMC.2019.8819649
  prefs: []
  type: TYPE_NORMAL
- en: WaheedA.Venkata KrishnaP. (2020). Comparing Biometric and Blockchain Security
    Mechanisms in Smart Parking System. 2020 International Conference on Inventive
    Computation Technologies (ICICT). 10.1109/ICICT48043.2020.9112483
  prefs: []
  type: TYPE_NORMAL
- en: 'Wireko, J. K., Hiran, K. K., & Doshi, R. (2018). Culturally Based User Resistance
    to New Technologies in the Age of IoT In Developing Countries: Perspectives From
    Ethiopia. International Journal of Emerging Technology and Advanced Engineering
    , 8(4), 96–105.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Xiang, X., Wang, M., & Fan, W. (2020). A Permissioned Blockchain-Based Identity
    Management and User Authentication Scheme for E-Health Systems. IEEE Access: Practical
    Innovations, Open Solutions , 8, 171771–171783\. doi:10.1109/ACCESS.2020.3022429'
  prefs: []
  type: TYPE_NORMAL
- en: Yazdinejad, A., Srivastava, G., Parizi, R. M., Dehghantanha, A., Choo, K. K.
    R., & Aledhari, M. (2020). Decentralized Authentication of Distributed Patients
    in Hospital Networks Using Blockchain. IEEE Journal of Biomedical and Health Informatics
    , 24(8), 2146–2156\. doi:10.1109/JBHI.2020.2969648
  prefs: []
  type: TYPE_NORMAL
- en: KEY TERMS AND DEFINITIONS
  prefs: []
  type: TYPE_NORMAL
- en: 'Application Programming Interface (API): It simplify software development and
    innovation by enabling applications to exchange data and functionality easily
    and securely.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Block: Block is a place in a blockchain where information is stored and encrypted.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Convolutional Neural Network (CNN): A convolutional neural network (CNN) is
    a type of artificial neural network used in image recognition and processing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hash: Hash is a function that meets the encrypted demands needed to solve for
    a blockchain computation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Internet of Things (IoT): Describes physical objects (or groups of such objects)
    with sensors, processing ability, software, and other technologies that connect
    and exchange data with other devices and systems over the Internet or other communications
    networks.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Jitter: Is the variation in the time between packets arriving, caused by network
    congestion, timing drift, or route changes.'
  prefs: []
  type: TYPE_NORMAL
- en: 'League Championship Algorithm (LCA): Is a population-based algorithm framework
    for global optimization over a continuous search space.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Man in the Middle (MITM) Attack: A man in the middle (MITM) attack is a general
    term for when a perpetrator positions himself in a conversation between a user
    and an application.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Proof of Authority (PoA): Is an algorithm used with blockchains that delivers
    comparatively fast transactions through a consensus mechanism based on identity
    as a stake.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Proof-of-Authority (PoA): Is an algorithm used with blockchains that delivers
    comparatively fast transactions through a consensus mechanism based on identity
    as a stake.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Proof-of-Stake (PoS): Is a cryptocurrency consensus mechanism for processing
    transactions and creating new blocks in a blockchain. A consensus mechanism is
    a method for validating entries into a distributed database and keeping the database
    secure.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Public Key Crytography (PKC): Public key cryptography involves a pair of keys
    known as a public key and a private key (a public key pair), which are associated
    with an entity that needs to authenticate its identity electronically or to sign
    or encrypt data.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Quality of Service (QoS): It is the use of mechanisms or technologies that
    work on a network to control traffic and ensure the performance of critical applications
    with limited network capacity.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Radio Frequency Identification (RFID): It is a type of passive wireless technology
    that allows for tracking or matching of an item or individual.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Secure Hashing Algorithm in 256-Bit Mode (SHA256): SHA-256 is a patented cryptographic
    hash function that outputs a value that is 256 bits long.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Threshold Cryptosystem: The basis for the field of threshold cryptography,
    is a cryptosystem that protects information by encrypting it and distributing
    it among a cluster of fault-tolerant computers.'
  prefs: []
  type: TYPE_NORMAL
