- en: © The Editor(s) (if applicable) and The Author(s), under exclusive license to
    Springer Nature Switzerland AG 2020K. S. MohamedNew Frontiers in Cryptography[https://doi.org/10.1007/978-3-030-58996-7_5](https://doi.org/10.1007/978-3-030-58996-7_5)
  prefs: []
  type: TYPE_NORMAL
- en: '5. Data Hiding: Steganography and Watermarking'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Khaled Salah Mohamed^([1](#Aff2) )(1)A Siemens Business, Fremont, CA, USAKeywordsSteganographyWatermarkingHidingLSBHybridEffectivenessQualityRobustnessCopy
    protectionOwner identification
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In era of information society, protection system can be classified into more
    specific as hiding information (steganography or watermarking) or encryption information
    (cryptography) or a combination between them. Cryptography and steganography are
    well-known and broadly used techniques that use information in order to cipher
    or cover their existence, respectively. Comparison between cryptography and information
    hiding techniques is shown in Fig. [5.1](#Fig1). Information hiding is a technique
    of hiding secret using redundant cover data such as images, audios, movies, documents,
    etc.![../images/501530_1_En_5_Chapter/501530_1_En_5_Fig1_HTML.png](../images/501530_1_En_5_Chapter/501530_1_En_5_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5.1
  prefs: []
  type: TYPE_NORMAL
- en: Comparison between cryptography and information hiding techniques  [[1](#CR1)]
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Steganography
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The word “steganography” comes from the Greek words “stegano” which means “covered”
    and “graphie” means “writing.” Steganography is the art of hiding the existence
    of a message between sender and intended recipient. It hides secret messages in
    various types of files such as text, images, audio, and video. Steganography hides
    encrypted messages in such a way that no one would even suspect that an encrypted
    message even exists in the first place [[2](#CR2)]. Because there are unused/redundant
    data bits in digital media, that changing them will be imperceptible. Now, there
    are several techniques to conceal data in the normal files. The easiest and simplest
    method to hide secret information in a digital media is the least significant
    bit (*LSB*) coding  . This technique is done by replacing the least significant
    bit of each sample with a bit of the secret data. Steganography is hiding data
    within data. Steganography is often linked to cryptography; however the two are
    not mutually exclusive. One might use steganography in conjunction with encryption
    in order to deliver a secret message to a recipient without drawing attention
    to the fact that a message was sent at all. Comparison between steganography and
    cryptography  is shown in Table [5.1](#Tab1). Regarding the strength of steganography,
    firstly, steganography will make it difficult for attackers to realize that a
    message is being passed. Further, if he is somehow able to detect that a stego-image
    is being passed, then it would be difficult for him to recognize the real ciphertext
    in sense that which bits of pixels are used for encoding the message into the
    picture. Even after attacker is able to detect the ciphertext, it would be very
    difficult for him to decrypt it, due to the diffusion and confusion in the ciphertext
    [[3](#CR3), [4](#CR4)].Table 5.1
  prefs: []
  type: TYPE_NORMAL
- en: Comparison between steganography and cryptography
  prefs: []
  type: TYPE_NORMAL
- en: '| Comparison | Steganography | Cryptography |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Basic | It is known as cover writing | It means secret writing |'
  prefs: []
  type: TYPE_TB
- en: '| Goal | Secret communication | Data protection |'
  prefs: []
  type: TYPE_TB
- en: '| Structure of the message | Not altered | Altered only of the transmission
    |'
  prefs: []
  type: TYPE_TB
- en: '| Popularity | Less popular | More commonly used |'
  prefs: []
  type: TYPE_TB
- en: '| Relies on | Key | No parameters |'
  prefs: []
  type: TYPE_TB
- en: '| Supported security principles | Confidentiality and authentication | Confidentiality,
    data integrity, authentication, and non-repudiation |'
  prefs: []
  type: TYPE_TB
- en: '| Techniques | Spatial domain, transform domain, model-based, and ad hoc |
    Transposition, substitution, stream cipher, block ciphers |'
  prefs: []
  type: TYPE_TB
- en: '| Implemented on | Audio, video, image, text | Only on text files |'
  prefs: []
  type: TYPE_TB
- en: '| Types of attack | Steganalysis | Cryptanalysis |'
  prefs: []
  type: TYPE_TB
- en: 5.2.1 Steganography in Digital Media
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 5.2.1.1 Text Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The techniques in text steganography  are number of tabs, white spaces, and
    capital letters, just like Morse code is used to achieve information hiding [[5](#CR5),
    [6](#CR6)]. Various techniques are used to hide the data in the text such as format-based
    method, random and statistical generation, and linguistic method.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1.2 Image Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Pixels are the building blocks of an image. Every pixel contains three values
    (red, green, blue) also known as RGB values. Every RGB value ranges from 0 to
    255\. In this technique pixel intensities are used to hide the information. The
    8 bit and 24 bit images are common. We can even hide an image inside another.
    An example of hiding data inside an image  is shown in Fig. [5.2](#Fig2).![../images/501530_1_En_5_Chapter/501530_1_En_5_Fig2_HTML.jpg](../images/501530_1_En_5_Chapter/501530_1_En_5_Fig2_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5.2
  prefs: []
  type: TYPE_NORMAL
- en: (**a**) Raw image, (**b**) image to be hided, (**c**) stegano-image
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1.3 Network Steganography/Protocol Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Network protocol  such as TCP, UDP, IP, etc. is used as carrier for steganography
    [[7](#CR7)]. Both cryptography and steganography techniques are practically applied
    in imperfect communication environments imposed by physical features of information
    carriers. While this imperfectness is generally an obstacle for cryptography,
    it is an essential enabling condition for many network steganography techniques
    that utilize redundant communication protocols to cope with such imperfect environments
    to provide reliable communication. The storage method can hide the secret information
    both in the user data (payload) and in the protocol field (non-payload).
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1.4 Audio Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Taking audio as carrier for information hiding is called audio steganography.
    It is used for digital audio formats such as WAVE, MIDI, and AVI MPEG for steganography.
    The advantage of taking an audio file as a carrier is that there is a large data
    redundancy, which means it can be embedded in a large amount of information [[8](#CR8)].
    Different methods of audio steganography are used such as least significant bit
    encoding, parity encoding, phase coding, and spread spectrum.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1.5 Video Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is a technique to hide any type of files or information into digital video
    format (H.264, Mp4, MPEG, and AVI). The combination of pictures is used as carrier
    for hidden information [[9](#CR9)]. Video steganography  is becoming an important
    research area in various data hiding technologies, which has become a promising
    tool because not only the security requirement of secret message transmission
    is becoming stricter but also video is more favored. Two main classes of video
    steganography are embedding data in uncompressed raw video and compressing it
    later and embedding data directly into the compressed data stream.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2 Steganography Techniques
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Image steganography is broadly categorized into two categories, viz., spatial
    domain image steganography and frequency domain image steganography. While in
    former the message image is simply hidden in the spatial domain of the base image,
    i.e., no changes are to be done on the cover image for this domain, the latter
    cover image is converted into frequency domain by using discrete cosine transform,
    discrete wavelet transform, or any other frequency transformation mechanism, and
    then the message image is hidden into the coefficients, and further inverse is
    carried out which is to be transmitted.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.1 Least Significant Bit (LSB)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: LSB  is one the technique of spatial domain methods. Changes in the value of
    the LSB are imperceptible for human eyes. The image obtained after embedding is
    almost similar to original image because the change in the LSB of image pixel
    does not bring too much differences in the image. A digital image consists of
    a matrix of color and intensity values. In a typical gray-scale image, 8 bits/pixel
    are used. In a typical full-color image, there are 24 bits/pixel, 8 bits assigned
    to each color components. Using 8 bit image, the least significant bit (the 8th
    bit) of some or all of the bytes inside an image is changed to a bit of the secret
    message. Using 24 bit image, a bit of each of the red, green, and blue color components
    can be used [[10](#CR10)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.2 The Binary Pattern Complexity (BPC)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: BPC approach  is used to measure the noise factor in the image complexity. The
    noisy portion is replaced by binary pattern, and it is mapped from the secret
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.3 Discrete Wavelet Transform (DWT)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is used to transform the image from a spatial domain to the frequency domain.
    In the process of steganography, DWT  identifies the high-frequency and low-frequency
    information of each pixel of the image. It is a mathematical tool for decomposing
    an image hierarchically. It is mainly used for processing of non-stationary signals.
    The wavelet transform is based on small waves, known as wavelets, of different
    frequency and limited duration.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.4 Spread Spectrum (SS)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The concept of spread spectrum  is used in this technique. In this method the
    secret data is spread over a wide frequency bandwidth. The ratio of signal to
    noise in every frequency band must be so small that it becomes difficult to detect
    the presence of data. Even if parts of data are removed from several bands, there
    would be still enough information present in other bands to recover the data.
    Thus it is difficult to remove the data completely without entirely destroying
    the cover. It is a very robust approach used in military [[11](#CR11)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.5 Multilevel Steganography (MLS)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In MLS  , at least two steganography methods are utilized simultaneously, in
    such a way that one method (called the upper-level) serves as a carrier for the
    second one (called the lower-level). This makes the steganogram unreadable [[12](#CR12)].
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2.6 Hybrid Cryptography and Steganography
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The data will be encrypted using RSA algorithm or any encryption technique.
    On the other hand, the encrypted data will be hided in image files or any other
    file formats.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.3 Steganography Metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Robustness:* the ability of embedded data to remain intact if the stego-image
    undergoes transformations, such as linear and nonlinear filtering, sharpening
    or blurring, addition of random noise, rotations and scaling, cropping or decimation,
    and lossy compression.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Imperceptibility:* The imperceptibility means invisibility of a steganography
    algorithm. Because it is the first and foremost requirement, the strength of steganography
    lies in its ability to be unnoticed by the human eye.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Bit Error Rate:* The hidden information can be successfully recovered from
    the communication channel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Mean Square Error:* It is computed by performing byte-by-byte comparisons
    of the two images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Peak Signal-to-Noise Ratio (PSNR):* The image steganography system  must embed
    the content of hidden information in the image so that the quality of the image
    should not change.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5.3 Watermarking
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Watermarking is embedding some information within a digital media so that the
    digital media looks unchanged. The hidden information itself is not important
    by itself, but it says something about the digital media [[13](#CR13), [14](#CR14)].
    It is a concept closely related to steganography, in that they both hide a message
    inside a digital signal. However, what separates them is their goal. Watermarking
    is used for *authenticity* (proof of ownership) [[15](#CR15)]. The process of
    watermarking is divided into two parts: embedding of watermark into host image
    and extraction of watermark from image [[16](#CR16)]. Watermarking uses the same
    techniques used by steganography [[17](#CR17)]. An example of watermarking is
    shown in Fig. [5.3](#Fig3). A comparison between cryptography and watermarking
    is shown in Table [5.2](#Tab2).![../images/501530_1_En_5_Chapter/501530_1_En_5_Fig3_HTML.jpg](../images/501530_1_En_5_Chapter/501530_1_En_5_Fig3_HTML.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5.3
  prefs: []
  type: TYPE_NORMAL
- en: (**a**) Original image, (**b**) watermarked image
  prefs: []
  type: TYPE_NORMAL
- en: Table 5.2
  prefs: []
  type: TYPE_NORMAL
- en: Comparison between watermarking and cryptography  [[18](#CR18)–[20](#CR20)]
  prefs: []
  type: TYPE_NORMAL
- en: '| Comparison | Cryptography | Watermarking |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Basic | It means secret writing | It is known as cover writing |'
  prefs: []
  type: TYPE_TB
- en: '| Goal | Data protection | Copyright protection |'
  prefs: []
  type: TYPE_TB
- en: '| Structure of the message | Altered only of the transmission | Not altered
    |'
  prefs: []
  type: TYPE_TB
- en: '| Popularity | More commonly used | Less popular |'
  prefs: []
  type: TYPE_TB
- en: '| Relies on | No parameters | Key |'
  prefs: []
  type: TYPE_TB
- en: '| Supported security principles | Confidentiality, data integrity, authentication,
    and non-repudiation | Confidentiality and authentication |'
  prefs: []
  type: TYPE_TB
- en: '| Techniques | Transposition, substitution, stream cipher, block ciphers |
    Application-based: Using a universal logo without encryption in the embedding
    algorithm |'
  prefs: []
  type: TYPE_TB
- en: '| Implemented on | Only on text files | Audio, video, image, text |'
  prefs: []
  type: TYPE_TB
- en: '| Types of attack | Steganalysis | Cryptanalysis |'
  prefs: []
  type: TYPE_TB
- en: 5.3.1 Watermarking Metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Effectiveness:* This is the most important property of watermark that the
    watermark should be effective means it should surely be detective. If this will
    not happen, the goal of the watermarking is not fulfilled [[21](#CR21)].'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Host signal quality:* This is also an important property of watermarking.
    Everybody knows that in watermarking, watermark is embedded in host signal (image,
    video, audio, etc.). This may put an effect on the host signal. So the watermarking
    system should be like as, it will minimum changes the host signal and it should
    be unnoticeable when watermark is invisible [[22](#CR22)].'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Watermark size:* Watermark  is often used for owner identification or security
    confirmation of host signal, and it is always used when data is transmitted. So
    it is important that the size of watermark should be minimum because it will increase
    the size of data to be transmitted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Robustness:* Robustness is a crucial property for all watermarking systems.
    There are so many causes by which watermark is degraded, altered during transmission,
    and attacked by hackers in paid media applications. So watermark should be robust,
    so that it withstands against all the attacks and threats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5.3.2 Watermarking Applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Owner Identification:* The application of watermarking to which he developed
    is to identify the owner of any media. Some paper watermark is easily removed
    by some small exercise of attackers. So the digital watermark was introduced.
    In that the watermark is an internal part of digital media so that it cannot be
    easily detected or removed. Embedding a strong watermark is important to prove
    IP core ownership during conflict resolution process [[23](#CR23)].'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Copy Protection:* Illegal copying is also prevented by watermarking with copy
    protect bit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, professional photographers tend to watermark digital proofs sent
    to clients until the client agrees to purchase the photos, at which the original,
    unaltered images are released. This allows the photographer to distribute demos
    and samples of their work, without actually giving the original compositions.
    Moreover, it can be used for IP protections such as HDL IPs [[24](#CR24)].
  prefs: []
  type: TYPE_NORMAL
- en: '*Broadcast Monitoring:* Broadcasting  of TV channels and radio news is also
    monitoring by watermarking. It is generally done with the paid media like sports
    broadcast or news broadcast.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Data Authentication:* Sender embedded the digital watermark with the host
    data, and it would be extracted at the receivers end and verified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5.4 Visual Cryptography
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Like steganography, visual cryptography is used for hiding secret information
    but unlike steganography which can hide data in files, images, audio, and video.
    Visual cryptography  hides it in multiple images. Visual cryptography is more
    secured against various attacks than steganography, and it does not require complex
    computation. In visual cryptography, each pixel in the original secret image can
    be expanded to any number of subpixels. After expansion, each pixel would be having
    a total number of “m” subpixels [[25](#CR25)–[27](#CR27)]. Visual cryptography
    is a cryptographic technique which allows visual information (pictures, text,
    etc.) to be encrypted in such a way that the decrypted information appears as
    a visual image. Visual cryptography can be used to protect biometric templates
    in which decryption does not require any complex computations.
  prefs: []
  type: TYPE_NORMAL
- en: 5.5 Conclusions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, different steganography and watermarking techniques and methods
    are introduced and analyzed. Steganography is the art and science of covered or
    hidden writing. The purpose of steganography is covert communication to hide the
    existence of a message from the eyes. Multilevel steganography is used to improve
    secret communication. Moreover, this chapter gives a deep introduction of watermarking.
    Both steganography and watermarking use steganography techniques to embed data
    covertly in noisy signals. While steganography aims for imperceptibility to human
    eyes, watermarking tries to control the robustness.
  prefs: []
  type: TYPE_NORMAL
