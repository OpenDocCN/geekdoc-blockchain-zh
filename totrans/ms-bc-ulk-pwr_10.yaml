- en: Chapter 10\. The Future of Blockchain
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第十章\. 区块链的未来
- en: The comparison of blockchain and cryptocurrencies today to the early days of
    the internet isn’t entirely incorrect. As those of a certain age may remember,
    the consumer internet in its early days was slow and lacked most of the features
    we are accustomed to now.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 将当今的区块链和加密货币与互联网早期时代进行比较并非完全不正确。正如某些年龄段的人可能记得的那样，早期的消费者互联网速度缓慢，并且缺乏我们现在习惯的大多数功能。
- en: Blockchain is at a similar stage. Consumer adoption is still pretty low, and
    doing things is often confusing and difficult. This means developers have a tremendous
    opportunity to shape the future of the blockchain industry.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链处于类似的阶段。消费者采用率仍然相当低，而且做事情通常令人困惑和困难。这意味着开发者有巨大的机会来塑造区块链行业的未来。
- en: In general, new technologies are being adopted ridiculously fast—faster than
    ever before (see [Figure 10-1](#rate_of_adoption_of_different_technolog)). Blockchain
    could be the next great consumer technology that takes off, *if* the right applications
    are found for it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，新技术的采用速度非常快——比以往任何时候都要快（见[图 10-1](#rate_of_adoption_of_different_technolog)）。如果能找到适合它的正确应用，区块链可能成为下一个伟大的消费者技术。
- en: Of course, not everything ends up succeeding. The internet offers the lesson
    that being flexible and adaptable is the path to advancement. The world of blockchain
    can move at a dizzying pace, and therefore having views that adjust to the changing
    market and developer ecosystem is key.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，并非一切都能成功。互联网提供了一个教训，即灵活适应是前进的道路。区块链世界可能以令人眩晕的速度发展，因此拥有能够适应不断变化的市场和开发者生态系统的观点至关重要。
- en: '![](Images/mabc_1001.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/mabc_1001.png)'
- en: Figure 10-1\. Rate of adoption of different technologies over time
  id: totrans-6
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-1\. 不同技术随时间的采用率
- en: The More Things Change
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事情的变化
- en: 'In the 1970s, at the dawn of the internet, a group of computer industry representatives
    from the United States, the United Kingdom, and France got together and devised
    the [Open Systems Interconnection (OSI)](https://oreil.ly/Ur4hJ) model. Their
    aim was to create an open and multilayered set of standardized protocols for data
    exchange on the internet. By the 1980s, the effort had been backed by many stakeholders,
    including engineers, regulators, and computer and telecommunications companies.
    However, by the early 1990s two more efficient and nimble standards had come to
    dominate instead: Transmission Control Protocol and Internet Protocol, or TCP/IP.
    Here’s a brief look at how this relative upstart took over:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在20世纪70年代，互联网初现时，来自美国、英国和法国的一群计算机行业代表聚在一起，制定了[开放系统互连 (OSI)](https://oreil.ly/Ur4hJ)
    模型。他们的目标是创建一组开放且多层次的标准化协议，用于互联网上的数据交换。到了20世纪80年代，该努力得到了许多利益相关者的支持，包括工程师、监管机构以及计算机和电信公司。然而，到了20世纪90年代初，两种更有效、更灵活的标准已经取代了它：传输控制协议和互联网协议，即TCP/IP。以下是这个相对新兴标准如何取代原有标准的简要概述：
- en: 1960s
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1960年代
- en: Data transmission technology evolves from old-school circuit switching in telephone
    networks. Packet switching breaks information into blocks, transmits them, and
    then reassembles the data at the receiving end. ARPANET, an early version of the
    internet, is the first network to use packet switching.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 数据传输技术从电话网络中的老式电路交换演变而来。分组交换将信息分成块，传输它们，然后在接收端重新组装数据。ARPANET，互联网的早期版本，是第一个使用分组交换的网络。
- en: 1970s
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 1970年代
- en: Telephone carriers explore the idea of packet switching via “virtual” circuits,
    proposed in order to protect analog circuit revenue. However, the original proponents
    of packet switching propose a more innovative distributed datagram model. Following
    this divide, the OSI model is devised.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 电话运营商探索了通过“虚拟”电路进行分组交换的想法，提出这一想法是为了保护模拟电路收入。然而，分组交换的最初倡导者提出了更具创新性的分布式数据报模型。在这一分歧之后，OSI模型被设计出来了。
- en: 1980s
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 1980年代
- en: The reference model for OSI is published, including options for both packet
    switching implementations. The US government, the main sponsor for internet research,
    mandates purchasing OSI-standard computers by 1990.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: OSI的参考模型被发布，包括两种分组交换实现的选项。美国政府，互联网研究的主要赞助者，规定到1990年购买符合OSI标准的计算机。
- en: 1990s
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 1990年代
- en: TCP/IP, first used and developed throughout the ’80s and used in the ARPANET
    as the successor to its Network Control Program (NCP), gains traction. A revolt
    among engineers attempting to scale TCP/IP leads to the rejection of the OSI standard;
    while OSI is mired in standards and procedure, TCP/IP is free and open for use.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: TCP/IP，首次在80年代使用和发展，并在ARPANET中作为其网络控制程序（NCP）的继任者使用，逐渐流行起来。工程师们试图扩展TCP/IP引发了一场反抗，导致了对OSI标准的拒绝；而OSI陷入了标准和程序之中，而TCP/IP是自由开放的。
- en: 2000s
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 2000年代
- en: TCP/IP is the de facto standard for internet communications on all devices,
    beating out standards-based OSI because of its more permissive framework for engineers
    to build upon.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: TCP/IP是所有设备上的互联网通信的事实标准，击败了基于标准的OSI，因为它具有更宽松的框架，工程师可以在其上构建。
- en: What does this snapshot history of internet communication protocols have to
    do with the future of blockchain? Decades ago, early internet pioneers probably
    thought OSI would rule the world. Instead, TCP/IP accomplished that feat. The
    blockchain world, over time, will likewise see promising projects fade for various
    reasons because the ecosystem today is still evolving.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网通信协议的这段快照历史与区块链的未来有何关系呢？几十年前，早期的互联网先驱可能认为OSI将统治世界。然而，TCP/IP实现了这一壮举。区块链世界随着时间的推移，也将看到一些有希望的项目因为各种原因而逐渐消失，因为今天的生态系统仍在不断发展。
- en: The internet is not something anyone ever sees. They just see the applications
    built on top of it, like the web and email. Blockchain is much the same. Just
    like the internet, blockchain is a backbone for consumer-facing applications.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网并非任何人都能看到的东西。他们只看到建立在其之上的应用程序，比如网页和电子邮件。区块链也大致如此。就像互联网一样，区块链是面向消费者应用程序的基础。
- en: Cryptocurrency networks and the blockchains that underpin them are similar in
    essence to software. Software is dynamic, never finished, and part of a larger
    ecosystem. Cryptocurrency is also dynamic, and blockchain, as the recording device
    for cryptocurrencies, moves in a dynamic way too. Lots of things are set to change
    in a few short years. The future is bright, but it’s definitely not set in stone.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币网络及其支撑其的区块链在本质上与软件相似。软件是动态的，永远不会完成，并且是更大生态系统的一部分。加密货币也是动态的，而作为加密货币记录设备的区块链也以动态方式运作。在短短几年内，许多事情都注定会发生变化。未来是光明的，但绝对不是一成不变的。
- en: Blockchains to Watch
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要关注的区块链
- en: 'Besides Bitcoin, Ethereum, and various enterprise-type blockchains, there are
    lots of other projects available for developers to build on. Whether because of
    privacy, efficiency, or improved smart contract capabilities, these will be three
    of the platforms to watch out for in the near future:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了比特币、以太坊和各种企业型区块链之外，还有许多其他项目可供开发者构建。无论是因为隐私、效率还是改进的智能合约功能，这些都是未来需要关注的三个平台：
- en: '[*EOS*](https://github.com/EOSIO/eos)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*EOS*](https://github.com/EOSIO/eos)'
- en: An operating system and smart contract platform, EOS increases the number of
    transactions included in each block and requires no fees, using a resource-leasing
    model to provide transaction bandwidth for users on its blockchain by only utilizing
    a small set of concentrated nodes. The trade-off is that the nodes are part of
    a membership that is centralized. These *block propagators* use special hardware
    configurations to handle blockchain storage and smart contract execution on the
    network. The propagators receive rewards for block generation and for governance.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个操作系统和智能合约平台，EOS 增加了每个区块中包含的交易数量，并且不需要费用，使用资源租赁模型为其区块链上的用户提供交易带宽，只使用少量集中节点。这些*区块传播者*使用特殊的硬件配置来处理区块链存储和网络上的智能合约执行。传播者因区块生成和治理而获得奖励。
- en: '[*Cardano*](https://cardano.org)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Cardano*](https://cardano.org)'
- en: A smart contract platform that uses proof-of-stake, Cardano’s consensus mechanism
    chooses random stakers to validate each block. Users are also able to “delegate”
    their stake in-wallet to stakers that are consistently online, a requirement for
    rewards. While delegating, users can still spend the native ADA cryptocurrency
    thanks to a structure of multisignature addresses. The project has been notable
    for its academic nature and its use of Haskell libraries, existing and established
    in programming, for the protocol.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一个使用权益证明的智能合约平台，Cardano 的共识机制选择随机的权益者来验证每个区块。用户还可以将他们的权益在钱包内“委托”给那些始终在线的权益者，这是获得奖励的要求。在委托的同时，用户仍然可以使用本地
    ADA 加密货币，这要归功于多重签名地址的结构。该项目以其学术性质和使用 Haskell 库而著称，这些库在协议编程中已经存在并得到了建立。
- en: '[*Monero*](https://www.getmonero.org)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Monero*](https://www.getmonero.org)'
- en: 'A blockchain that has implemented privacy and is gaining traction for its ability
    to execute cash-like transactions, Monero makes transaction details private by
    implementing three cryptographic strategies: ring signatures, ring confidential
    transactions, and stealth addresses. Monero’s currency symbol is XMR.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Monero 是一个实施隐私并因其执行类似现金的交易能力而受到关注的区块链，通过实施三种加密策略使交易详情保密：环签名、环保密交易和隐形地址。 Monero
    的货币符号是 XMR。
- en: Privacy in blockchains is an important component of the future. In the next
    section, we’ll briefly explore Monero in a little more detail.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的隐私是未来的重要组成部分。 在下一节中，我们将简要探讨一下 Monero 的更多细节。
- en: How Monero Works
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Monero 是如何工作的
- en: To demonstrate how Monero works, we’ll look at an example transaction of 0.5
    XMR between two addresses.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示 Monero 的工作原理，我们将查看两个地址之间的 0.5 XMR 交易的示例。
- en: 'Transaction details that are visible to the public are as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对公众可见的交易详情如下：
- en: '*Transaction ID*: 7de8…53f1'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交易 ID*: 7de8…53f1'
- en: '*Block #*: 2015291'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*区块 #*: 2015291'
- en: '*Miner fee*: 0.00017681'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*矿工费*: 0.00017681'
- en: '*Inputs*: Only 1 real input and 10 decoy inputs'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*输入*: 只有 1 个真实输入和 10 个伪装输入'
- en: '*Key image*: b142…da7e'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*关键图像*: b142…da7e'
- en: 'These are the inputs that are publicly viewable:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是公开可见的输入：
- en: '|   | **Ring members** | **Block** | **Timestamp** |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '|   | **环成员** | **区块** | **时间戳** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 3154…a729 | 1936368 | 2019-10-03 6:07 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 3154…a729 | 1936368 | 2019-10-03 6:07 |'
- en: '| 2 | 60c9…de58 | 1970318 | 2019-11-19 13:11 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 60c9…de58 | 1970318 | 2019-11-19 13:11 |'
- en: '| 3 | F6a2…b1e3 | 1997733 | 2019-12-27 2:14 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 3 | F6a2…b1e3 | 1997733 | 2019-12-27 2:14 |'
- en: '| 4 | 9a62…a1a8 | 2006400 | 2020-01-08 2:01 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 9a62…a1a8 | 2006400 | 2020-01-08 2:01 |'
- en: '| 5 | d0aa…c50b | 2014276 | 2020-01-18 22:55 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 5 | d0aa…c50b | 2014276 | 2020-01-18 22:55 |'
- en: '| 6 | 31b6…0bbf | 2014635 | 2020-01-19 11:20 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 31b6…0bbf | 2014635 | 2020-01-19 11:20 |'
- en: '| 7 | d3a6…6ef1 | 2014688 | 2020-01-19 12:41 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 7 | d3a6…6ef1 | 2014688 | 2020-01-19 12:41 |'
- en: '| 8 | 754e…3a4d | 2015113 | 2020-01-20 3:11 |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 754e…3a4d | 2015113 | 2020-01-20 3:11 |'
- en: '| 9 | ce8b…6f7a | 2015154 | 2020-01-20 4:34 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 9 | ce8b…6f7a | 2015154 | 2020-01-20 4:34 |'
- en: '| 10 | 0bab…594d | 2015200 | 2020-01-20 5:58 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 0bab…594d | 2015200 | 2020-01-20 5:58 |'
- en: '| 11 | 228d…1bd0 | 2015278 | 2020-01-20 8:38 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 228d…1bd0 | 2015278 | 2020-01-20 8:38 |'
- en: 'And these are the outputs:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是输出：
- en: '|   | **Stealth address** | **Amount** |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '|   | **隐形地址** | **金额** |'
- en: '| --- | --- | --- |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | 0152…19e4 | ? |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0152…19e4 | ? |'
- en: '| 2 | c44f…e531 | ? |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 2 | c44f…e531 | ? |'
- en: 'The inputs that are hidden from the public are as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对公众隐藏的输入如下：
- en: '|   | **Monero address** | **Amount** | **Viewable by** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '|   | **Monero 地址** | **金额** | **可视者** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 43Ao…GHU9 | 0.01 | Owner of this address, who also generated the transaction
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 43Ao…GHU9 | 0.01 | 该地址的所有者，也是生成交易的人 |'
- en: 'And these are the outputs that are not visible to the public:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是对公众不可见的输出：
- en: '|   | **Monero address** | **Amount** | **Viewable by** |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '|   | **Monero 地址** | **金额** | **可视者** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 41qp…NxdK | 0.005 | Owner of this address |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 41qp…NxdK | 0.005 | 该地址的所有者 |'
- en: '| 2 | 43Ao…GHU9 | 0.00482319 | Owner of this address |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 43Ao…GHU9 | 0.00482319 | 此地址的所有者 |'
- en: '*Ring signatures* hide the public address of a sender in a Monero transaction.
    Monero follows a UTXO accounting method, similar to Bitcoin. With Bitcoin, when
    the sender builds a transaction, they only include inputs from addresses for which
    they control the private keys. This is so the sender can sign the transaction
    that provides authorization to send those funds.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*环签名*在Monero交易中隐藏了发送者的公共地址。Monero采用类似比特币的UTXO记账方法。在比特币中，当发送者构建交易时，他们只包括来自他们控制私钥的地址的输入。这样发送者就可以签署提供发送资金授权的交易。'
- en: However, in Monero, when a sender builds a transaction they include decoy inputs
    chosen randomly from addresses that are owned by others. So, even though many
    inputs are included in the transaction, only one is actually sending funds. Publicly
    it is impossible to know which input is sending funds.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在Monero中，当发送者构建交易时，他们会包括从其他人拥有的地址随机选择的虚假输入。因此，即使在交易中包含了许多输入，实际上只有一个在发送资金。公开来说，不可能知道哪个输入正在发送资金。
- en: 'In the preceding example, funds are being sourced from only one input. There
    are 11 addresses in the ring signature, meaning that there are 10 decoy inputs.
    The generator of the transaction knows that the address sending the funds is #11
    (228d…1bd0), but they are the only one who knows which one is the real input.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，资金仅来自一个输入。环签名中有11个地址，意味着有10个虚假输入。交易的生成者知道发送资金的地址是＃11（228d…1bd0），但只有他们知道哪一个是真正的输入。
- en: To prevent double spending, every Monero transaction includes a *key image*,
    which is generated by the true transaction sender. If the sender tries to send
    funds from an input that has already been sent, the key image they generate will
    be identical to the key image that was generated in the first transaction that
    sent those funds. The Monero miners won’t validate the double-spend attempt because
    the same key image has already been included in a previous transaction on the
    blockchain.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止双重支付，每个Monero交易都包括一个*关键图像*，由真实的交易发送者生成。如果发送者尝试从已经发送的输入发送资金，他们生成的关键图像将与在先前发送了这些资金的第一笔交易中生成的关键图像相同。Monero矿工不会验证双重支付尝试，因为相同的关键图像已经包含在区块链上的先前交易中。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: The key image is Monero’s equivalent to Bitcoin’s transaction signature. It’s
    generated by the sender, and miners use the key image to prevent a sender from
    double spending. In the preceding example, the key image is b142…da7e.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 关键图像是Monero的等价物，相当于比特币的交易签名。它由发送者生成，矿工使用该关键图像来防止发送者进行双重支付。在前面的示例中，关键图像是b142…da7e。
- en: The purpose of a *ring confidential transaction* (ring CT) is to hide the amount
    sent in a Monero transaction. It’s a privacy feature that masks the amounts sent
    to an output through cryptography—only the sender and receiver of the transaction
    know the actual amount of funds being sent.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*环签名交易*（环CT）的目的是隐藏门罗币交易中发送的金额。这是一个隐私功能，通过密码学掩盖了发送到输出的金额——只有交易的发送方和接收方知道实际发送的资金金额。'
- en: 'To recap:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下：
- en: The sender is the one who generated the transaction details, and who therefore
    knows the transaction amount.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送方是生成交易详细信息的人，因此知道交易金额。
- en: Every Monero address has a private/secret view key. In a Monero transaction,
    the owner of the address that received XMR can decrypt the amount sent using their
    private/secret view key.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个门罗币地址都有一个私密的观察密钥。在门罗币交易中，接收XMR的地址的所有者可以使用他们的私密观察密钥解密发送的金额。
- en: 'The miners don’t care about the exact amount sent; their goal is simply to
    determine whether the transaction is valid or invalid. To validate a transaction,
    a miner must do a *range proof*. That is, they have to check if the following
    are true:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 矿工不关心发送的确切金额；他们的目标只是确定交易是否有效。要验证交易，矿工必须进行*范围证明*。也就是说，他们必须检查以下内容是否为真：
- en: The sum of the inputs is equal to the sum of the outputs.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入的总和等于输出的总和。
- en: The amount sent to each output is greater than 0.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送到每个输出的金额都大于0。
- en: The miners can accomplish both these checks through cryptography without knowing
    the amount sent.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 矿工可以通过密码学完成这两个检查，而无需知道发送的金额。
- en: In the preceding example transaction, the funds were sent to two outputs. The
    first output goes to address 41qp…NxdK, and the owner of that address can use
    their secret view key to decrypt the amount value of 0.005 XMR. They cannot view
    the amount value for the second output.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例交易中，资金被发送到两个输出。第一个输出到地址41qp…NxdK，该地址的所有者可以使用他们的秘密观察密钥解密金额值为0.005 XMR。他们无法查看第二个输出的金额值。
- en: '*Stealth addresses* hide the receiver of a Monero transaction. The sender of
    a transaction creates a new stealth address for the receiver, using the receiver’s
    public view key, the receiver’s public spend key, and a random value.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*隐形地址*隐藏了门罗币交易的接收者。交易的发送方为接收者创建一个新的隐形地址，使用接收者的公开观察密钥、接收者的公开花费密钥和一个随机值。'
- en: Mimblewimble, Beam, and Grin
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 妙动脉搏、Beam 和 Grin
- en: '[Mimblewimble](https://oreil.ly/k3W6J) is a blockchain protocol that emphasizes
    privacy paired with scalability. A zero-knowledge proof technology called Bulletproofs
    verifies that transactions are valid, and the state transition is recorded on
    the blockchain, obscuring the details.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[妙动脉搏](https://oreil.ly/k3W6J)是一种强调隐私与可扩展性的区块链协议。一种称为 Bulletproofs 的零知识证明技术验证交易的有效性，并且状态转换记录在区块链上，模糊了细节。'
- en: 'Two other projects have emerged from this: [Beam](https://beam.mw) and [Grin](https://grin.mw).
    These two projects are governed quite differently: Grin is a loosely organized
    open source group, whereas Beam’s team is backed by investors.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了另外两个项目的出现：[Beam](https://beam.mw) 和 [Grin](https://grin.mw)。这两个项目的治理方式有很大不同：Grin
    是一个组织松散的开源组，而 Beam 的团队得到了投资者的支持。
- en: Both Beam and Grin share some key attributes, such as ASIC resistance, scalability,
    and privacy, but there are some differentiating features other than governance.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Beam 和 Grin 都具有一些关键属性，例如 ASIC 抗性、可扩展性和隐私，但除了治理之外还有一些区分特征。
- en: 'Beam characteristics include the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Beam 的特点包括以下内容：
- en: Implemented in C++
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 C++ 实现
- en: Uses Equihash proof-of-work
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Equihash 工作量证明
- en: Supply capped at 263 million to encourage store of value
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供应量限制在 2.63 亿，以鼓励价值储存
- en: Sender and receiver wallets can create transactions without being online
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送方和接收方钱包可以在不在线的情况下创建交易
- en: Uses “scriptless script” for extension beyond transactions like escrow and atomic
    swaps
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用“无脚本脚本”进行交易之外的扩展，如托管和原子交换
- en: 'Grin characteristics include the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Grin 的特点包括以下内容：
- en: Implemented in Rust
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 Rust 实现
- en: Uses Cuckoo Cycle proof-of-work
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Cuckoo Cycle 工作量证明
- en: Infinite supply to encourage spending
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无限供应以鼓励消费
- en: Transactions require sender and receiver to be online
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易需要发送方和接收方在线
- en: Limited scripting, designed to be as simple as possible
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有限的脚本，旨在尽可能简单
- en: The Scaling Problem
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展问题
- en: A lot of research in the coming years will center on increasing transaction
    capacity while remaining efficient, where fees are low and the crypto is still
    easy to use. Bitcoin and Ethereum definitely need to increase their scalability
    given their current limitations—Bitcoin can only process 3 to 7 transactions per
    second, and Ethereum can only get up to around 20 transactions per second. That’s
    not nearly enough for cryptocurrency networks to truly take off on a massive scale.
    This is why new ideas, some of which are discussed in this section, are needed
    to solve the scalability problem.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 未来几年的许多研究都将集中在增加交易容量同时保持高效性上，其中费用低且加密货币仍然易于使用。鉴于目前的限制，比特币和以太坊肯定需要提高它们的可扩展性 ——
    比特币每秒只能处理 3 到 7 笔交易，以太坊最多只能达到每秒大约 20 笔交易。这对于加密货币网络要真正大规模起飞来说远远不够。这就是为什么需要新的想法来解决可扩展性问题，其中一些在本节中讨论。
- en: Sidechains
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 侧链
- en: As a method to offload some on-chain data, *sidechains* carry additional information
    about network transactions off of a main blockchain. A *federated* sidechain,
    such as Bitcoin’s [Liquid Network](https://blockstream.com/liquid), uses a trusted
    set of parties to sign blocks and hold funds in a multisignature address. *Trustless*
    sidechains, still under development, use the concept of a “two-way peg,” which
    enables users to move funds from one chain to another in a more decentralized
    manner.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种卸载一些链上数据的方法，*侧链* 携带有关网络交易的额外信息，这些信息不在主区块链上。*联合* 侧链，如比特币的 [Liquid Network](https://blockstream.com/liquid)，使用一组受信任的方签署区块并在多重签名地址中持有资金。*无信任*
    侧链仍在开发中，使用 “双向钉” 概念，使用户能够以更加去中心化的方式将资金从一条链移动到另一条链。
- en: Sharding
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分片
- en: A process to break up bigger chunks of data, *sharding* is used in database
    systems and is a proposed solution for scaling cryptocurrency networks. In peer-to-peer
    networks underpinned by blockchains, sharding would split datasets between nodes.
    The information would then be shared with other nodes on the network. Sharding
    on blockchain networks adds another layer of complexity since there has to be
    a secure communication protocol to share data.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 一种用于分解更大数据块的过程，*分片* 用于数据库系统，并且是扩展加密货币网络的提议解决方案。在由区块链支撑的点对点网络中，分片将数据集分割在节点之间。然后，该信息将与网络上的其他节点共享。在区块链网络上进行分片增加了另一层复杂性，因为必须有一种安全的通信协议来共享数据。
- en: STARKs
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: STARKs
- en: '*Scalable Transparent Arguments of Knowledge*, or STARKs, takes advantage of
    the privacy-focused zk-SNARKs technology mentioned in previous chapters.   The
    zero-knowledge proofs can be used as verifiers to make sure transactions are honest.
    This is done by using “prover” nodes. The transactions are then batched, creating
    smaller blocks. Individual balances are stored off-chain. Contracts that show
    balance commitments and a verification of the proofs are stored on-chain.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*可扩展透明知识论证*，或 STARKs，利用了前几章提到的以隐私为重点的 zk-SNARKs 技术。 零知识证明可以用作验证者，以确保交易是诚实的。这是通过使用
    “证明者” 节点完成的。然后，交易被分批处理，创建较小的区块。个人余额存储在链下。显示余额承诺和证明验证的合同存储在链上。'
- en: DAGs
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DAGs
- en: '*Directed acyclic graphs* (DAGs) rethink the way blockchains are constructed.
    Instead of blocks in a chain, DAGs are interconnected data structures, as [Figure 10-2](#a_dag_network_design)
    illustrates. Transactions validate one another in a system where users act as
    both miners and validators. This design eliminates efficiency problems like orphaned
    blocks and long block times. Transactions are able to complete across this network
    in a more decentralized and faster method.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*有向无环图*（DAGs）重新思考了区块链的构造方式。与链中的区块不同，DAGs 是相互连接的数据结构，如 [图 10-2](#a_dag_network_design)
    所示。在这种系统中，交易相互验证，用户既充当矿工又充当验证者。这种设计消除了孤立的区块和长区块时间等效率问题。交易能够以更加去中心化和更快的方式在该网络中完成。'
- en: '![](Images/mabc_1002.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/mabc_1002.png)'
- en: Figure 10-2\. A DAG network design
  id: totrans-110
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-2\. 有向无环图网络设计
- en: Avalanche
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 雪崩
- en: A new type of consensus mechanism for cryptocurrencies, [Avalanche](https://www.avalabs.org)
    relies on a dynamic population sampling voting mechanism to create a fluid blockchain
    with highly adaptable rules, with a “leaderless” model where all nodes are considered
    equal. This eliminates the hardware-based mining found in other cryptocurrency
    networks. Setting up nodes that have separate rules while still being part of
    the network is possible. In this way, the platform can use multiple scripting
    languages and virtual machines.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[Avalanche](https://www.avalabs.org) 是一种针对加密货币的新型共识机制，它依赖于动态人口抽样投票机制来创建具有高度适应性规则的流动区块链，采用“无领导者”模型，其中所有节点被视为平等。这消除了其他加密货币网络中基于硬件的挖矿。设置具有不同规则但仍属于网络的节点是可能的。通过这种方式，该平台可以使用多种脚本语言和虚拟机。'
- en: Liquid
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Liquid
- en: Liquid is technology from [Blockstream](https://blockstream.com), a company
    that provides technical products and services around Bitcoin. It’s a multisignature
    wallet where users deposit bitcoin to be locked for interoperability purposes.
    Sidechains allow these locked bitcoin to be used on another chain, which may utilize
    a different set of rules than Bitcoin. This means potentially changing performance
    and security requirements.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Liquid 是 [Blockstream](https://blockstream.com) 公司推出的一项技术，该公司提供围绕比特币的技术产品和服务。它是一个多重签名钱包，用户将比特币存入其中以用于互操作性目的。侧链使这些锁定的比特币可以在另一条链上使用，该链可能使用与比特币不同的一组规则。这意味着潜在的性能和安全需求可能会发生变化。
- en: The basis for Liquid comes from the [Elements](https://oreil.ly/fw3q5) open
    source project. Elements allows developers to build sidechains and also standalone
    blockchains based on Bitcoin technology. As a result, it offers the ability to
    issue new assets. The platform also supports what it calls *confidential assets*,
    which means identifiers and amounts are obscured on the blockchain.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Liquid 的基础来自 [Elements](https://oreil.ly/fw3q5) 开源项目。Elements 允许开发人员构建侧链，以及基于比特币技术的独立区块链。因此，它提供了发行新资产的能力。该平台还支持所谓的*机密资产*，这意味着区块链上的标识符和金额被模糊化。
- en: Lightning
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lightning
- en: A solution to the limitations of Bitcoin’s throughput in transactions per second,
    [Lightning](https://lightning.network) uses *channels*, as illustrated in [Figure 10-3](#lightning_channels_are_created_by_two_o),
    that parties open with one another outside of the main Bitcoin blockchain. It
    uses a main chain-backed commitment scheme called Hash Time Locked Contracts to
    keep track of balances, providing settlement when a channel is closed or goes
    offline. There are several implementations for Lightning, including Blockstream’s
    [c-lightning](https://oreil.ly/w8onX) and Lightning Labs’s [`lnd`](https://oreil.ly/KXMrs).
    Square Crypto is also planning to release a Lightning Developers Kit (LDK) in
    the near future.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 解决比特币吞吐量限制的方法是每秒交易数，[闪电网络](https://lightning.network)使用*通道*，如[图 10-3](#lightning_channels_are_created_by_two_o)所示，各方在比特币主区块链之外互相开启。它使用基于主链的承诺方案称为哈希时间锁定合同来跟踪余额，在通道关闭或离线时提供结算。闪电有几种实现方式，包括
    Blockstream 的[c-lightning](https://oreil.ly/w8onX) 和 Lightning Labs 的[`lnd`](https://oreil.ly/KXMrs)。Square
    Crypto 还计划在不久的将来发布闪电开发者工具包（LDK）。
- en: '![](Images/mabc_1003.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/mabc_1003.png)'
- en: Figure 10-3\. Lightning channels are created by two or more participants, who
    then assign value to the Bitcoin blockchain
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-3\. 闪电通道是由两个或更多参与者创建的，然后将价值分配到比特币区块链上。
- en: The scaling problems that exist in cryptocurrency today aren’t all that different
    from what computer networks once faced. Necessity, as they say, is the mother
    of invention. As the internet’s popularity increased, the growing need for capacity
    led to numerous technical solutions. These included *dark fiber*, or fiber optic
    cable laid long before it was needed. Investment in numerous scaling solutions
    for cryptocurrency networks could be similar, as the research will likely be utilized
    as adoption picks up, including in Bitcoin and Ethereum.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当今加密货币存在的扩展问题与计算机网络曾经面临的问题并没有太大的不同。众所周知，需求是发明之母。随着互联网的普及，对容量日益增长的需求导致了许多技术解决方案。其中包括*暗光纤*，即在实际需要之前就铺设的光纤电缆。对加密货币网络进行大量扩展解决方案的投资可能会类似，因为随着采用量的增加，研究可能会被利用，包括在比特币和以太坊中。
- en: 'Lightning aims to make Bitcoin more usable by solving the following scalability
    issues:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电旨在通过解决以下可扩展性问题使比特币更易于使用：
- en: Transaction speed
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 交易速度
- en: As mentioned, Bitcoin can only process up to about seven transactions per second.
    If masses of consumers wanted to use Bitcoin, the network currently couldn’t support
    that level of demand.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，比特币每秒只能处理约七笔交易。如果大量消费者想要使用比特币，目前的网络无法支持这种需求水平。
- en: Block times
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 区块时间
- en: On average a new block of transactions is generated every 10 minutes, and once
    a block is full, no more transactions can be processed by the network until the
    next block is discovered. If someone buys something with bitcoin, they are likely
    not willing to wait more than 10–20 minutes to receive confirmation that their
    transaction was processed.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 平均而言，每 10 分钟会生成一个新的交易区块，一旦区块满了，网络就无法处理更多交易，直到发现下一个区块。如果有人用比特币购买东西，他们可能不愿意等待超过
    10-20 分钟以确认他们的交易是否已处理。
- en: Bitcoin blockchain size
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币区块链大小
- en: Every miner and full Bitcoin node must maintain a copy of the entire Bitcoin
    blockchain, which was around 285 GB in size as of June 2020.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 每个矿工和完整的比特币节点都必须维护整个比特币区块链的副本，截至 2020 年 6 月，其大小约为 285 GB。
- en: The Lightning Network solves these problems by enabling Bitcoin addresses to
    transact bitcoin through a payment channel. This channel acts as a ledger that
    two Bitcoin addresses manage peer-to-peer. Transactions through a payment channel
    are not recorded on the Bitcoin blockchain, but rather off-chain.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络通过使比特币地址能够通过支付通道进行比特币交易来解决这些问题。该通道充当两个比特币地址之间点对点管理的账本。通过支付通道的交易不记录在比特币区块链上，而是记录在链外。
- en: Note
  id: totrans-129
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This is a simplified explanation of payment channels that is meant only to give
    an idea of how they work. True payment channels involve a hashed secret and potentially
    several peer hops before they reach the intended recipient and sender.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对支付通道的简化解释，仅旨在让人了解它们的工作原理。真正的支付通道涉及哈希密钥和可能需要几个节点跳跃才能到达预定的接收者和发送者。
- en: Let’s say Alice visits Bob’s coffee shop every day and wants to buy a cup of
    coffee from Bob each day. One way she can pay conveniently is by buying a $100
    gift card and using that each day. In this situation, Alice commits $100, and
    the gift card company controls a ledger of all her transactions.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 Alice 每天都去 Bob 的咖啡店买一杯咖啡，并想每天都从 Bob 那里购买一杯咖啡。她可以方便地支付的一种方式是购买一张 100 美元的礼品卡，并每天使用。在这种情况下，Alice
    承诺了 100 美元，并且礼品卡公司控制着她所有交易的账本。
- en: The Lightning Network’s version of this situation would be Alice opening a payment
    channel with Bob and funding that channel with 0.01 BTC. In this situation, Alice
    commits 0.01 BTC, and instead of a third party controlling the ledger, Alice and
    Bob both control the ledger together. Cryptography and the cost associated with
    funding the channel force both Bob and Alice to act appropriately.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Lightning Network 的这种情况相当于 Alice 和 Bob 打开一个支付通道，并用 0.01 BTC 资助该通道。在这种情况下，Alice
    承诺了 0.01 BTC，而不是由第三方控制账本，Alice 和 Bob 共同控制账本。加密和资助通道所带来的成本迫使 Bob 和 Alice 都必须适当行事。
- en: Funding transactions
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资助交易
- en: Alice can open a payment channel by sending Bob a *funding transaction* to a
    newly generated multisignature address that holds the payment channel funds. This
    funding address is mutually controlled by both Bob and Alice, like a joint bank
    account. In our example, illustrated in [Figure 10-4](#alice_opens_a_payment_channel_with_bob),
    Alice sends 0.01 BTC to the payment channel address.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Alice可以通过向Bob发送一个*funding transaction*来打开一个支付通道，该交易发送到一个新生成的多重签名地址，用于持有支付通道资金。这个资金地址由Bob和Alice共同控制，就像一个联合银行账户。在我们的例子中，如[图 10-4](#alice_opens_a_payment_channel_with_bob)所示，Alice向支付通道地址发送了0.01
    BTC。
- en: '![](Images/mabc_1004.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/mabc_1004.png)'
- en: Figure 10-4\. Alice opens a payment channel with Bob by sending a funding transaction
  id: totrans-136
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-4\. Alice通过发送一个资金交易与Bob打开了一个支付通道
- en: 'Once the funds are held in the payment channel, there are only two ways that
    they can leave that channel’s address:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦资金存放在支付通道中，它们只能通过两种方式离开该通道的地址：
- en: 2/2 multisig transaction
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 2/2 多重签名交易
- en: This means that 2 out of 2 possible signatures must be provided to generate
    a valid transaction. Both Alice and Bob must sign a transaction with their private
    keys in order to perform a valid multisig transaction.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着必须提供两个可能的签名才能生成有效的交易。Alice和Bob必须使用他们的私钥签署交易以执行有效的多重签名交易。
- en: Refund contract
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 退款合约
- en: Since Alice is the one committing her funds to the payment channel, there is
    a risk that Bob might back out of the relationship and not provide a signature
    to help Alice recover her funds. To protect Alice, embedded in the funding transaction
    is a refund contract that says “after *x* number of blocks, refund all the funds
    in the payment channel address to Alice’s address.” This refund contract uses
    `nLockTime`, an attribute of a bitcoin transaction.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Alice承担了支付通道的资金承诺，存在Bob可能退出关系并不提供签名以帮助Alice取回资金的风险。为了保护Alice，在资金交易中嵌入了一份退款合约，规定“在*x*个区块之后，将支付通道地址中的所有资金退还到Alice的地址”。这份退款合约使用了`nLockTime`，这是比特币交易的一个属性。
- en: Off-chain transactions
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 离链交易
- en: At some time in the future, Alice and Bob will perform a withdrawal transaction
    ([Figure 10-5](#alice_and_bob_withdrawing_funds_from_th)) that requires both of
    their signatures. The question is, how much will Alice and Bob each receive from
    that future transaction? If they perform the multisig transaction before Alice
    buys anything at Bob’s coffee shop, the multisig transaction should send all the
    funds back to Alice’s address.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在将来的某个时间，Alice和Bob将执行一笔提款交易（见[图 10-5](#alice_and_bob_withdrawing_funds_from_th)），该交易需要他们两人的签名。问题是，Alice和Bob各自将从未来的交易中收到多少？如果他们在Alice在Bob的咖啡店买任何东西之前执行多重签名交易，该交易应将所有资金发送回Alice的地址。
- en: 'Here is possible future withdrawal transaction #1:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '下面是可能的未来提款交易 #1：'
- en: '| **Inputs** | **Outputs** |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| **Inputs** | **Outputs** |'
- en: '| --- | --- |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| bc1q...3ktl (Payment channel) | 0.01 BTC | 3DZ5...2NZU (Alice) | 0.01 BTC
    |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| bc1q...3ktl（支付通道） | 0.01 BTC | 3DZ5...2NZU（Alice） | 0.01 BTC |'
- en: '| Signature 1: 001443692e0c9ce1c70840847495c3216318b04a7793 (Alice’s signature)
    |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 签名1：001443692e0c9ce1c70840847495c3216318b04a7793（Alice的签名） |'
- en: '| Signature 2: cb8b99f482852b6c0d40a2f5bc249743ea6d5a80 (Bob’s signature) |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 签名2：cb8b99f482852b6c0d40a2f5bc249743ea6d5a80（Bob的签名） |'
- en: '|   |   |   |   |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '|   |   |   |   |'
- en: 'However, if Alice spends 0.007 BTC at Bob’s shop, the multisig transaction
    should send Bob 0.007 BTC and Alice 0.003 BTC. So here is possible future withdrawal
    transaction #2 (illustrated in [Figure 10-5](#alice_and_bob_withdrawing_funds_from_th)):'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果Alice在Bob的商店花费了0.007 BTC，多重签名交易应该将0.007 BTC发送给Bob和0.003 BTC发送给Alice。所以这里是可能的未来提款交易＃2（见[图 10-5](#alice_and_bob_withdrawing_funds_from_th)）：
- en: '| **Inputs** | **Outputs** |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| **输入** | **输出** |'
- en: '| --- | --- |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| bc1q...3ktl (Payment channel) | 0.01 BTC | 3DZ5...2NZU (Alice) | 0.003 BTC
    |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| bc1q...3ktl（支付通道） | 0.01 BTC | 3DZ5...2NZU（Alice） | 0.003 BTC |'
- en: '|   |   | 38iS...E8SE (Bob) | 0.007 BTC |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '|   |   | 38iS...E8SE（Bob） | 0.007 BTC |'
- en: '| Signature 1: 9a791cf4d808afec90ed7051314f80f4a9310372 (Alice’s signature)
    |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 签名1：9a791cf4d808afec90ed7051314f80f4a9310372（Alice的签名） |'
- en: '| Signature 2: 104f28ca0bf87c07ef5b97d33dae38f547d0435b (Bob’s signature) |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| 签名2：104f28ca0bf87c07ef5b97d33dae38f547d0435b（Bob的签名） |'
- en: '![](Images/mabc_1005.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/mabc_1005.png)'
- en: Figure 10-5\. Alice and Bob withdrawing funds from the payment channel address
  id: totrans-159
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-5\. Alice和Bob从支付通道地址提取资金
- en: Each day, as Alice buys a coffee from Bob’s shop, the values of how much each
    receives in the future withdrawal transaction change. And each time the values
    change, Alice and Bob need to generate and sign a new unique transaction, to authorize
    the future withdrawal transaction and prove to the miners that the new withdrawal
    transaction is valid. This process of generating and signing new withdrawal transactions
    is essentially the same as Alice and Bob performing off-chain transactions.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，当Alice从Bob的商店购买咖啡时，未来提款交易中每个人收到的金额都会发生变化。每当金额发生变化时，Alice和Bob都需要生成并签署一个新的唯一交易，以授权未来的提款交易，并向矿工证明新的提款交易是有效的。生成和签署新的提款交易的过程本质上与Alice和Bob执行链下交易相同。
- en: Lightning nodes and wallets
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 闪电节点和钱包
- en: A *Lightning wallet* is a Bitcoin wallet with additional features that allow
    one to open/close a payment channel and perform Lightning transactions. A common
    mistake first-time Lightning users make is trying to open a payment channel with
    no BTC sitting in their wallet. A Lightning wallet must have some BTC in it to
    pay for mining fees, and some funds to commit to the payment channel.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*闪电钱包*是具有额外功能的比特币钱包，允许用户打开/关闭支付通道并执行闪电交易。第一次使用闪电的常见错误是试图在钱包中没有比特币的情况下打开支付通道。闪电钱包必须有一些比特币用于支付挖矿费用，并有一些资金用于承诺支付通道。'
- en: Lightning requires a blockchain to have no *transaction malleability*, which
    is a vulnerability that can allow an exploiter to modify some transactional data.
    Segregated Witness, or SegWit, is an update to the Bitcoin protocol that separates
    base transaction data and signature data. Since transactions are serialized using
    the original transaction data, signature-based malleability attacks are prevented.
    The signature data goes into the transaction witness area, used by SegWit-capable
    full nodes to confirm that the transactions are authorized.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络要求区块链没有*交易篡改*，这是一种漏洞，可以允许攻击者修改某些交易数据。隔离见证，即SegWit，是比特币协议的一项更新，它将基础交易数据和签名数据分开。由于交易使用原始交易数据进行序列化，因此可以防止基于签名的篡改攻击。签名数据进入交易见证区域，由支持SegWit的全节点用于确认交易是否经授权。
- en: Note
  id: totrans-164
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: SegWit moves the witness data needed to check transaction validity to a different
    part of each bitcoin transaction generated. Before SegWit was implemented on the
    Bitcoin blockchain, for example, it was possible for a node to change prehash
    information, which was not originally included in a signed transaction. This resulted
    in malleability attacks on the network. In order for Lightning nodes to be feasible,
    the risk of these malleability attacks needed to be eliminated.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: SegWit将检查交易有效性所需的见证数据移动到每个生成的比特币交易的不同部分。例如，在比特币区块链上实施SegWit之前，节点可以更改未包含在已签名交易中的预哈希信息。这导致了网络上的篡改攻击。为了使闪电节点成为可行，需要消除这些篡改攻击的风险。
- en: Once a user is running a Lightning node, they can open a payment channel. Multiple
    parties with open payment channels can then collaborate on a transaction. This
    is done using a commitment transaction.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦用户运行了闪电节点，他们就可以打开一个支付通道。拥有打开支付通道的多个参与方可以共同合作进行交易。这是通过提交交易来完成的。
- en: Since Lightning uses channels instead of a blockchain, transactions are private.
    However, if a node drops or otherwise loses its connection in one of these bidirectional
    channels, it will close the channel and settle transactions on the blockchain.
    In addition, payment routing occurs in this system. This routing means that if
    a channel is not open for some reason, the payment can go through nodes to have
    channels open with other parties.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 由于闪电使用通道而不是区块链，交易是私密的。但是，如果一个节点在这些双向通道中的一个中断或以其他方式失去连接，它将关闭通道并在区块链上结算交易。此外，支付路由发生在该系统中。这种路由意味着如果由于某种原因某个通道没有打开，付款可以通过节点进行，以与其他参与方打开通道。
- en: Ethereum Scaling
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以太坊扩展
- en: Ethereum is planning to make major changes to its network in order to increase
    its capacity. In its next iteration, known as Ethereum 2.0, the network will move
    to a form of proof-of-stake called Casper that will enable greater efficiency
    without adding complexity. It will also be split into shards, as described earlier
    in this chapter. It’s an ambitious plan that brings together a number of novel
    research ideas in order to help the network move into the future.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊计划对其网络进行重大更改，以增加其容量。在其下一次迭代中，即以太坊2.0，网络将转向一种称为卡斯珀的权益证明形式，这将在不增加复杂性的情况下实现更高的效率。它还将被分割成片段，如本章前面所述。这是一个雄心勃勃的计划，汇集了许多新颖的研究思想，以帮助网络迈向未来。
- en: 'The first phase of Ethereum 2.0 involves the following specifications:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊2.0的第一阶段涉及以下规范：
- en: Beacon chain
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 信标链
- en: A new blockchain that will ensure the network stays in sync by providing consensus
    to all the shard chains. Each shard chain will have validators responsible for
    adding transactions to shard blocks and proposing new blocks to add to the beacon
    chain and all the shard chains. Validators are activated by the beacon chain and
    can be deactivated either voluntarily or due to misconduct.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 一种新的区块链，通过为所有分片链提供共识来确保网络保持同步。每个分片链都将有负责向分片区块添加交易并提议要添加到信标链和所有分片链的新区块的验证者。验证者由信标链激活，并且可以由于违规行为而自愿或被停用。
- en: Casper
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 卡斯珀
- en: A proof-of-stake algorithm designed specifically for Ethereum 2.0\. It is expected
    to operate as a hybrid with Ethereum’s existing proof-of-work system in the beginning.
    Casper is Byzantine fault tolerant, which means consensus can be reached even
    if some nodes are unreliable and there is accountability, so misbehaving validators
    are penalized by their staked balance. As long as two-thirds of the staked validators
    reach consensus, the chain can be validated.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 专为以太坊2.0设计的权益证明算法。预计在开始时将与以太坊现有的工作量证明系统混合运行。卡斯珀是拜占庭容错的，这意味着即使一些节点不可靠，仍然可以达成共识，并且有问责制，因此行为不端的验证者会被其抵押的余额处罚。只要三分之二的抵押验证者达成共识，就可以验证链条。
- en: Fork choice rule
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 分叉选择规则
- en: A rule that will help validators decide which chain to follow in the event of
    a fork (the one whose blocks have received the most votes from validators). While
    the network will use something called a *random number heartbeat* in order to
    choose validators at block generation, fork choice is another protection mechanism.
    An attacker would need to be able to modify the fork choice rule somehow to be
    effective.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在分叉事件中帮助验证者决定跟随哪条链的规则（即收到来自验证者投票最多的链）。虽然网络在区块生成时会使用一种叫做*随机数心跳*的东西来选择验证者，但分叉选择是另一种保护机制。攻击者需要能够以某种方式修改分叉选择规则才能生效。
- en: Deposit contract
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 存款合约
- en: The contract that will hold balances for the beacon chain. It will exist on
    the Ethereum 1.0 network. The ETH in this contract will not be able to be used
    on the 1.0 network once it is deposited. The minimum deposit required to become
    a validator is 32 ETH. As with most proof-of-stake systems, there will be some
    kind of financial reward for acting as a validator, the calculation of which is
    not yet set.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 将保存信标链余额的合约。它将存在于以太坊 1.0 网络上。一旦存入，该合约中的 ETH 将无法在 1.0 网络上使用。成为验证者所需的最低存款是 32
    ETH。与大多数权益证明系统一样，担任验证者将会获得某种形式的财务奖励，其计算尚未确定。
- en: Honest validator framework
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 诚实验证者框架
- en: A set of standards validators are expected to abide by in order to help secure
    the Ethereum 2.0 network. These include having an available private key for signing
    proposed blocks and for miscellaneous voting (the signing key, stored in a hot
    wallet) and a separate private key for withdrawing funds generated by being an
    active validator, which should be securely stored offline (the withdrawal key).
    The corresponding public keys are registered as part of the transaction with the
    validator deposit contract.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 预计验证者将遵守一组标准，以帮助保护以太坊 2.0 网络。这些标准包括拥有用于签署提议块和杂项投票（存储在热钱包中的签名密钥）的可用私钥，以及用于提取作为活跃验证者所生成的资金的单独私钥，该私钥应安全地离线存储（提取密钥）。相应的公钥将作为与验证者存款合约的交易的一部分进行注册。
- en: Note
  id: totrans-181
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: It may take years for the transition from Ethereum 1.0 to 2.0 to be completed.
    For example, the execution environment for dapps is not part of the initial phase
    of Ethereum 2.0, so mainnet Ethereum 1.0 will remain an active developer platform
    for years to come.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 从以太坊 1.0 迁移到 2.0 可能需要数年的时间。例如，dapp 的执行环境并不是以太坊 2.0 初始阶段的一部分，因此以太坊 1.0 的主网将在未来数年仍然是一个活跃的开发者平台。
- en: Sharding in the network will result in an increase in gas costs and will remove
    the ability for atomic transactions, or the ability to make transactions all at
    one. This will increase the likelihood of Ethereum 2.0 becoming more of a software
    platform than a financial one used by traders.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的分片将导致燃气成本增加，并且将取消原子交易的能力，或者一次性进行所有交易的能力。这将增加以太坊 2.0 更像是一个软件平台而不是交易者使用的金融平台的可能性。
- en: Privacy
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐私
- en: 'Privacy is expected to be one of the biggest growth areas for blockchain technology
    in the coming years. Developers and other stakeholders are realizing the need
    to *not* publicly transmit all data about transactions. Here are a few privacy-related
    projects that are in the works:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 隐私预计将成为未来几年区块链技术中最大的增长领域之一。开发者和其他利益相关者意识到*不*公开传输所有关于交易的数据的必要性。以下是一些正在进行中的与隐私相关的项目：
- en: Secret Network
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 秘密网络
- en: Originally an MIT-based project called Enigma, Secret Network is a type of peer-to-peer
    network enabling computation of data in private. A blockchain manages access control
    and identities, with the ERC-20 SCRT token used to compensate “secret nodes” for
    providing computing power to the network. This allows users to share data while
    keeping it private using cryptography, removing the need for a third party to
    store information for users (which can be susceptible to breaches).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 最初是一个名为 Enigma 的 MIT 项目，Secret Network 是一种点对点网络，可以在私密环境中计算数据。区块链管理访问控制和身份，ERC-20
    SCRT 代币用于补偿“秘密节点”提供网络计算能力。这允许用户使用密码学共享数据，同时保持数据的私密性，不需要第三方存储用户信息（可能会容易受到攻击）。
- en: Schnorr
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**Schnorr**'
- en: A form of digital signature, the Schnorr algorithm enables simple, efficient,
    and short signatures. This will allow for several signatures in a transaction
    to be combined into one, which can obscure some data. For example, multisignature
    transactions can look the same as regular transactions. It also enables a cryptographic
    technique called “tweaking,” which makes it possible to use Taproot (discussed
    next). Bitcoin is expected to soft fork in order to enable Schnorr signatures.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Schnorr 算法是一种数字签名形式，能够生成简单、高效和短小的签名。这将允许一个交易中的多个签名组合成一个签名，这样可以模糊一些数据。例如，多重签名交易看起来与常规交易相同。它还使得一种称为“tweaking”的密码学技术成为可能，从而可以使用
    Taproot（下文讨论）。预计比特币将进行软分叉以启用 Schnorr 签名。
- en: Taproot
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**Taproot**'
- en: One of the interesting things that can be done with Schnorr key pairs is to
    use the Taproot scheme for signing transaction scripts. Taproot utilizes Merkelized
    Abstract Syntax Trees (MAST), a data structure that allows some script information
    to remain obscured. This is done with a Merkle tree that encodes several different
    paths of script logic flow.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Schnorr 密钥对的有趣之处之一是使用 Taproot 方案签署交易脚本。Taproot 利用 Merkle 化抽象语法树（MAST），这是一种允许某些脚本信息保持模糊的数据结构。这是通过一个编码了脚本逻辑流的多个不同路径的
    Merkle 树来实现的。
- en: Interoperability
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**互操作性**'
- en: Interoperability is considered an important precursor to blockchain’s mass adoption.
    There are numerous projects working on this, including Polkadot and Cosmos. The
    goal is to enable smooth information sharing, easier execution of smart contracts,
    and a more user-friendly experience between different blockchains.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 互操作性被认为是区块链大规模应用的重要先决条件。有许多项目致力于此，包括 Polkadot 和 Cosmos。目标是实现流畅的信息共享、更容易执行智能合约以及不同区块链之间更友好的用户体验。
- en: Tokenize Everything
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**将一切资产加密**'
- en: The original intention of this book was to clear up some of the misinformation
    and many misconceptions that surround the blockchain industry. But as we began
    writing, we realized just how fast the industry is changing, making it very difficult
    for *anyone* to keep up with all the innovations—including us.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的最初目的是澄清围绕区块链行业的一些错误信息和许多误解。但当我们开始写作时，我们意识到这个行业变化速度之快，使得*任何人*都很难跟上所有的创新，包括我们在内。
- en: This book was as much a process of learning for us as for you. Its scope would
    have been much narrower if we had only written about what we knew when we started.
    That’s why we reached out to innovators in the blockchain industry—we needed to
    rely on the community’s expertise.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们来说，这本书与你一样是一个学习的过程。如果我们只是写下我们开始时所知道的内容，它的范围将会大大受限。这就是为什么我们与区块链行业的创新者联系——我们需要依靠社区的专业知识。
- en: Using our newfound knowledge, we wanted to end with an example that solves a
    problem we have. Our first thought was to tokenize every book, so that you knew
    it was an authentic O’Reilly book—but we realized that storing the serial number
    of each copy of *Mastering Blockchain* on the Ethereum blockchain would be extremely
    expensive. (The cost of storing data on Ethereum is high due to the blockchain’s
    scaling bottleneck, which this chapter already covered.)
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 利用我们新获得的知识，我们想要以解决我们所面临问题的示例作为结束。我们最初的想法是将每一本书都进行代币化，这样你就知道它是一本正宗的 O’Reilly
    书籍——但我们意识到在以太坊区块链上存储《区块链技术指南》每一本的序列号将会非常昂贵。（由于区块链的扩展瓶颈，即使本章已经涵盖了，存储数据在以太坊上的成本也很高。）
- en: So instead, we decided to tokenize 50 limited edition copies. The only way someone
    can own one of these tokenized copies is by signing an Ethereum transaction with
    one of 50 private keys that are associated with each copy.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们决定将 50 份限量版拆分成代币。拥有其中一份代币化拷贝的唯一方式是使用与每份拷贝关联的 50 个私钥之一签署以太坊交易。
- en: Summary
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Blockchain lets developers build systems that distribute and decentralize trust
    by shifting agreements from paper to code. Someday, there likely will be millions
    of blockchains in operation, representing many different types of data structures.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链让开发人员能够构建通过将协议从纸质转移到代码来分发和去中心化信任的系统。有一天，可能会有数百万个运行中的区块链，代表着许多不同类型的数据结构。
- en: Now it’s *your* turn to solve a real-world problem using blockchain.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在轮到*你*来利用区块链解决现实世界的问题了。
