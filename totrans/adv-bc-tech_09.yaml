- en: © The Author(s), under exclusive license to Springer Nature Switzerland AG 2022Y.
    Maleh et al. (eds.)Advances in Blockchain Technology for Cyber Physical SystemsInternet
    of ThingsTechnology, Communications and Computing[https://doi.org/10.1007/978-3-030-93646-4_9](https://doi.org/10.1007/978-3-030-93646-4_9)
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain-Based Communication for Digital Twins
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Zhihan Lv^([1](#Aff7)  ), Yuxi Li^([2](#Aff8)), Liang Qiao^([2](#Aff8)), Jingyi Wu^([2](#Aff8))
    and Anna Jia Gander^([3](#Aff9))(1)Qingdao Institute of Bioenergy and Bioprocess
    Technology, Chinese Academy of Sciences, Beijing, China(2)College of Computer
    Science and Technology, Qingdao University, Qingdao, China(3)Department of Applied
    IT, The University of Gothenburg, Gothenburg, SwedenKeywordsDigital twinsBlockchainData
    securityResource allocationEdge computing
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Digital twins convert physical assets into virtual counterparts and create digital
    copies of machines/equipment or physical sites through the use of sensors. These
    digital assets can even be created before the assets are physically constructed.
    From the time the digital twins were proposed to the present, its application
    fields have been more focused on scenarios related to spatial architecture such
    as smart buildings, smart parks, and smart cities [[1](#CR1)–[3](#CR3)]. In fact,
    digital twins can be built from multiple data sources, including historical performance
    statistics, real-time sensor and manufacturing output, and future data provided
    by machine learning. It is to create the most accurate representation possible
    to truly understand the characteristics of the physical object and even predict
    its performance changes over time. With the transformation and upgrading of traditional
    industrial enterprises, digital twins have been extended to the field of industry
    4.0 intelligent manufacturing where industrial infrastructure is increasingly
    integrated with general information technology [[4](#CR4), [5](#CR5)]. It collects,
    processes, analyzes, and interprets data through wireless connection with small
    devices capable of sensing, computing, and communication [[6](#CR6)].
  prefs: []
  type: TYPE_NORMAL
- en: Integrating digital twins with industrial manufacturing is full of promise,
    but its introduction also brings new attack vectors. The vulnerabilities in the
    infrastructure system will induce different attacks, which may bring catastrophic
    consequences to the applications involved in the decision-making process [[7](#CR7)–[9](#CR9)].
    Considering the involvement of many entities in the complex industrial process,
    to ensure the reliability of data obtained from heterogeneous databases is the
    first priority. Blockchain technology has made breakthroughs in product life cycle
    data management and data security. The use of blockchain technology allows the
    sharing of data on distributed ledgers to realize the traceability in case of
    critical failures and securely record events in an immutable and irrevocable manner
    [[10](#CR10)]. The combination of digital twins and blockchains can reshape the
    industry. Secure data management is ensured based on blockchain technology, and
    then trusted data is used as input through digital twins to obtain data with guiding
    value to maintain the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In general, the integration of digital twins and blockchain ensures the safe,
    efficient, and credible creation of virtual models. The creation process of the
    digital twins usually includes four stages: design, construction, testing, and
    delivery. The beginning of each stage depends on the completion of the previous
    stage. The auxiliary application of the blockchain can ensure that the creation
    process of the digital twins is safe and reliable. This research focuses on the
    data security in the case of untrusted multiple parties sharing data, and the
    constraint conditions for the log storage system to achieve secure data sharing
    are proposed. Then, for multiple scenarios in the blockchain, an optimized resource
    allocation algorithm is proposed based on DRL theory, to get rid of the dependence
    on large data centers for data computing.'
  prefs: []
  type: TYPE_NORMAL
- en: 2 Related Works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The concept of digital twins was first proposed by Michael Grieves in 2003 during
    his product life cycle courses. In 2012, NASA formally defined the digital twins
    as a multidisciplinary, multi-physical, multi-scale simulation process to complete
    the mapping in the virtual space and listed it as one of the key technologies
    to drive future development. Digital twins continuously collect real data from
    corresponding physical entities and process them to find potentially valuable
    information from the data. The current creation of digital twins is mainly based
    on traditional methods, and this method has centralized authority to manage entity
    information, so it cannot ensure credibility. Raj (2021) [[11](#CR11)] pointed
    out in his research that the construction of digital twins must avoid data leakage,
    and blockchain plays a role in this process with its unique advantages. The research
    of Kim and Laskowski (2018) [[12](#CR12)] revealed the advantages of blockchain
    suitable for the supply chain industry, including traceability, transparency,
    and tamper-proof logs. These features also make the blockchain a highly secure
    distributed ledger, which aggregates all transaction information of stakeholders
    during the end-to-end creation of the digital twins and finally achieves process
    transparency.
  prefs: []
  type: TYPE_NORMAL
- en: Emerging blockchain technology has the potential to overcome security vulnerabilities,
    enabling the application and innovation of digital twins. Christidis and Devetsikiotis
    (2016) [[13](#CR13)] pointed out in their research that the blockchain enables
    us to conduct transactions through verification through a distributed peer-to-peer
    network at the absence of a trusted intermediary. Blockchain allows the exchange
    of time-stamped events, and these events can be permanently stored securely and
    tamper proof in a distributed ledger. Borowski (2021) [[14](#CR14)] believed that
    the establishment of a blockchain that is capable of distributed data storage,
    tamper proof, and immutable can achieve the acquisition of distributed data across
    multiple participating entities in the digital twins. Yaqoob et al. (2020) [[15](#CR15)]
    envisaged the use of blockchain technology to reshape and transform the digital
    twins to achieve safe manufacturing while ensuring the traceability, compliance,
    and authenticity of data.
  prefs: []
  type: TYPE_NORMAL
- en: Above, it can be induced that based on blockchain technology, it is possible
    to track the creation process of digital twins safely and reliably. However, there
    lacks in-depth research on the constraints of data that cannot be tampered with.
    This research draws attention to the data security sharing mode of the blockchain
    from the perspective of data traceability and proposes a reliable and efficient
    edge computing resource allocation method.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Methods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Blockchain-Based Digital Twins
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The developers of the digital twins have carried out in-depth research on the
    information foundation of the simulated physical system, which is helpful for
    visualization and the development of a mathematical model that simulates the physical
    system of the real world.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, from the perspective of building objects, digital twin technology can
    be divided into three types, namely, things, people, and human-to-thing interaction,
    and it is mainly used in intelligent IoT, citizen code, and smart city [[16](#CR16),
    [17](#CR17)]. The creation process of the digital twins is mainly divided into
    four stages. In Stage 1, the engineer uses computer-aided design tools to analyze
    the data and directly captures the target data and converts it into a virtual
    copy of the entity. In Stage 2, the model will be continuously updated based on
    the captured data and will send the information feedback. Whether in the supply
    chain or any other environment that is highly dependent on data, it is necessary
    to ensure that the built model works well in the real environment. In Stage 3,
    after the digital twins are successfully built, it is tested using the test bench
    to eliminate logic errors or possible design defects. In Stage 4, after successful
    testing and verification, the digital twins can be deployed, and it is available
    for all owners on the blockchain. Figure [1](#Fig1) shows the process of creating
    digital twins using the blockchain as a management entity (Fig. [1](#Fig1)).![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: The main process of creating digital twins with the blockchain as a management
    entity
  prefs: []
  type: TYPE_NORMAL
- en: The encryption feature of the blockchain ensures the security of data transmission.
    Through reliable authentication of users and data sources, the immutability of
    data and the security of digital twins are of high application value [[18](#CR18)].
    In the blockchain, transactions between nodes, as the basic communication utterances,
    are only recorded in the time-stamped log in the shared ledger. The blockchain
    stores the digital certificate, which contains all the relevant data of the product.
    The blockchain ensures that the data embedded in the digital certificate will
    not be copied, modified, or even deleted by others [[19](#CR19), [20](#CR20)].
    The consensus mechanism is adopted to establish a safe and reliable network node,
    and then the transaction is organized into a block through the consensus algorithm
    and attached to the distributed ledger. Each block contains the hash value of
    the previous block, so it is easy to detect the tampering and destruction of the
    block by the attacker. Based on the consensus mechanism in blockchain technology,
    multiple stakeholders, partners, and users can share one umbrella, and confidential
    information, customer information, and corporate information can all be safely
    transmitted and shared. Combining blockchain technology with digital twins can
    expand the application scope of digital twins and provide a technical basis for
    building a mirrored world. Figure [2](#Fig2) shows the framework of digital twins
    based on blockchain. First, participating entities such as sensors, devices, and
    people are registered as authorized entities in the blockchain. Next, at the data
    layer, information-physical mapping is performed by monitoring, collecting, and
    processing the specified parameters from the physical space to the virtual space.
    Based on the collected data, the digital twins generate relevant knowledge and
    store historical data in the storage layer. The application layer further analyzes
    the data to schedule services or provide model calibration services, thereby completing
    a feedback loop. The digital twins use credible source data as input. In this
    process, the blockchain ensures the security of data management, and finally the
    data analysis is performed to predict events and evaluate related factors [[14](#CR14),
    [15](#CR15), [21](#CR21)].![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig2_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 2
  prefs: []
  type: TYPE_NORMAL
- en: Framework of the blockchain-based digital twins
  prefs: []
  type: TYPE_NORMAL
- en: Secure Data Sharing Model Based on Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The blockchain is formed by linking one block with another [[22](#CR22)]. Each
    block points to the previous block, which is called a child block of the previous
    block. Each block has a block header, which contains the hash value generated
    by the parent block header, and the parent block can be found through this hash
    value [[23](#CR23)–[25](#CR25)]. When there is any change in the parent block,
    the hash value of the parent block also changes, and this will force the hash
    value of the child-block to change, and so on, the subsequent sub-sub-blocks will
    also be affected. If a block has many descendants, the recalculation of all descendants
    of this block requires much effort, so a longer blockchain is more difficult to
    be changed. Now that new transactions are generated every second, to achieve tampering,
    the results must be quickly calculated, while new transactions are not generated,
    whereas under the current computer capabilities, the attack takes much longer
    than normal transaction time, so it is impossible to tamper [[26](#CR26), [27](#CR27)].
  prefs: []
  type: TYPE_NORMAL
- en: The log storage system of the blockchain is mainly used as the interface for
    writing and reading data operation logs. In this research, a hybrid storage strategy
    for data is proposed, as shown in Fig. [3](#Fig3). Only the hash of the log data
    will be stored in the log storage system, and the log data itself will be stored
    in other storage media with lower overhead. Data is usually broken down into three
    parts of data shards, data index information, and check hash. Although data shards
    and data index information are stored on an untrusted medium, the data is still
    credible because the data hash is kept unchanged on the storage medium.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig3_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 3
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid storage strategy for data
  prefs: []
  type: TYPE_NORMAL
- en: The validity of the log data needs the signature of both the system and the
    user at the same time, and a single-party signature is invalid. For example, in
    a scenario, there are three roles of the user *P* [1], system *P* [2], and log
    storage system *P*; *P* [1] and *P* [2] can encrypt data in their own way, but
    they can all be decrypted by the log storage system *P*. During the key generation
    process, the log storage system *P* selects an odd integer *p* ← [2^(*η* − 1), 2^(*η*)] ∩ (2*Z* + 1)
    of *η* bit as the private key *sk*. ![
  prefs: []
  type: TYPE_NORMAL
- en: $$ {q}_0,{q}_1\dots {q}_{\tau}\leftarrow Z\cap \left[0,\frac{2\gamma }{p}\right)
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_IEq1.png) is chosen
    to maximize *q* [0]. *r* [0], *r* [1]…*r* [*τ*] ← *Z* ∩ [−2^(*ρ*), 2^(*ρ*)] is
    chosen, and then the equation is obtained as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {x}_0\leftarrow {q}_0p+2{r}_0,{x}_i\leftarrow {\left[{q}_ip+2{r}_i\right]}_{x_0}
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ1.png)(1)At
    this time, the public key can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ pk=\left\langle {x}_0,{x}_1\dots {x}_{\tau}\right\rangle $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ2.png)(2)In
    the encryption process, a set *S* [*i*] ⊆ {1, 2, …*τ* [*i*]} and an integer !['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {t}_i\leftarrow \left\{-{2}^{\rho },{2}^{\rho_i}\right\} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_IEq2.png) are randomly
    selected, and the output ciphertext can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {c}_i={\left[{m}_i+2{t}_i+{\sum_{j\in S}}^{x_{i,j}}\right]}_{x_{i,0}} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ3.png)(3)'
  prefs: []
  type: TYPE_NORMAL
- en: During the decryption process, the log storage system *P* can decrypt to obtain
    the plaintext *m* [*i*] ← [[*c* [*i*]][*p*]][2] according to the key *sk* = *p*.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure the reliability of the data source, this research uses the Flume structure
    to complete the collection, aggregation, and transmission of data. Figure [4](#Fig4)
    shows the Flume logic architecture. The Flume event is defined as a data flow
    unit with byte payload and optional string attributes [[28](#CR28)]. The core
    of Flume is an agent. This agent has two external interaction places, one is to
    receive data input-source, and the other is data output-sink [[29](#CR29)]. After
    the source receives the data, it sends the data to the channel. The channel acts
    as a data buffer to temporarily store the data, and then the sink sends the data
    in the channel to the designated place. When the log storage system receives a
    request for data reading, Influence Chain will first read the data index information
    on the untrusted low-overhead storage medium according to the request and then
    obtain the data information and verify the data by reading the data hash. Finally,
    the data is returned to the user.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 4
  prefs: []
  type: TYPE_NORMAL
- en: Flume logic architecture
  prefs: []
  type: TYPE_NORMAL
- en: Optimized Resource Allocation in Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Aimed at the trusted resource allocation in the decentralized blockchain network,
    this research proposes an optimal resource allocation strategy for each user in
    the multiuser and multiserver scenario (Fig. [5](#Fig5)). In the scenario where
    there are several edge service providers in the blockchain network, the set of
    the edge server and the set of the user are defined as *N* and *M*, respectively.
    To prevent the system from directly offloading the computing task submitted by
    the user each time to the edge server [[30](#CR30)–[32](#CR32)], first, the task
    needs to be submitted to the system, and then a more reasonable calculation offloading
    and resource allocation strategy is implemented, with user satisfaction as the
    standard.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig5_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 5
  prefs: []
  type: TYPE_NORMAL
- en: Multiuser and multiserver scenario
  prefs: []
  type: TYPE_NORMAL
- en: When the user *i* offloads the task to the edge computing server *j*, the corresponding
    upload rate is as follows:![
  prefs: []
  type: TYPE_NORMAL
- en: $$ {\tau}_{i,j}=B\ast {\log}_2\left(1+\frac{p_i\ast {g}_{i,j}}{B\ast {N}_0}\right)
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ4.png)(4)where
    *B* represents bandwidth and *N* [0] refers to the variance of Gaussian white
    noise. *p* [*i*] is the transmission rate that needs to be achieved when the terminal
    device *i* uploads data, and *g* [*i*, *j*] represents the channel gain between
    the device *i* and the edge computing server *j*.The transmission delay for users
    to offload tasks to the edge server can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {t}_0=\frac{s_i}{\tau_{i,j}}{\alpha}_{i,j} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ5.png)(5)where
    *s* [*i*] represents the amount of transactions that users can monitor in the
    blockchain network and *α* [*i*, *j*] is the offloading decision vector.The delay
    of edge server processing user computing tasks can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {t}_1=\frac{s_i\ast d}{f_j} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ6.png)(6)where
    *f* [*j*] represents the CPU frequency of the server.Taken together, the overall
    delay of task offloading is as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {T}_{i,j}={t}_0+{t}_1=\frac{s_i}{\tau_{i,j}}{\alpha}_{i,j}+\frac{s_i\ast
    d}{f_j} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ7.png)(7)To
    allow more users to participate in the blockchain network, the user satisfaction
    *St* is used as an effective indicator of resource allocation to maximize the
    results. After the user submits the task to the system, the system will make a
    resource allocation decision *β* [*i*, *j*]. The definition of *St* is based on
    the system delay, and they are inversely proportional to each other. Then, the
    equation is obtained as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {St}_i=\frac{pure_i}{T_i} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ8.png)(8)The
    target expression of the system can be derived as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ \max \frac{1}{M}\sum \limits_{i\in M}\frac{pure_i}{T_i} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ9.png)(9)!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ s.t.\left\{\begin{array}{l}{\alpha}_{i,j}\in \left\{0,1\right\}\\ {}\sum
    \limits_{j\in N}{\alpha}_{i,j}=1\\ {}\sum \limits_{i\in M}{\beta}_{i,j}&lt;V\\
    {}V\ge {v}_{i,j}&gt;0\\ {}V\ge {\beta}_{i,j}&gt;0\\ {}{\beta}_{i,j}=0 if\;{\alpha}_{i,j}=0\end{array}\right.
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ10.png)(10)'
  prefs: []
  type: TYPE_NORMAL
- en: The optimal resource allocation vector *β* [*i*, *j*] can be obtained by solving
    the above target expression, but it is not a convex problem, and the complexity
    of the problem will increase with the increase of the number of users. In this
    regard, DRL is introduced. The deep Q network uses four adjacent frames in time
    as the original image input. After process by the deep CNN and the fully connected
    neural network, the state-action Q function is output to realize end-to-end learning
    control.
  prefs: []
  type: TYPE_NORMAL
- en: '*S* = {*s*(*t*)} is used to represent the network state space, and then the
    network state *s*(*t*) at moment *t* can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ S=\left\{s(t)\right\}s(t)=\left({v}_j(t),{s}_i(t),d(t),{\Gamma}_{i,j}(t)\right)
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ11.png)(11)where
    Γ[*i*, *j*](*t*) represents the signal-to-noise ratio between *i* and *j* at time
    *t*.Each resource allocation in the blockchain network includes user unloading
    decisions and resource allocation decisions, and then the actions of the network
    are defined as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ a(t)=\left({\alpha}_{1,1}(t)\ast {\beta}_{1,1}(t),\dots, {\alpha}_{M,N}(t)\ast
    {\beta}_{M,N}(t)\right) $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ12.png)(12)With
    the user satisfaction used as the reward in the reinforcement learning process,
    the income of user *i* at the moment *t* can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ {I}_i^t=\frac{\sum_j{\alpha}_{i,j}^t\ast {\beta}_{i,j}^t}{\sum_i{\sum}_j{\alpha}_{i,j}^t\ast
    {\beta}_{i,j}^t}\ast \left(T+{rs}_i^t\right)\ast {e}^{-\frac{1}{\lambda}\mu {s}_i^t}
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ13.png)(13)The
    cost of user *i* can be expressed as follows:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ \mathit{\cos}{t}_i=\gamma d\ast {s}_i^t\sum \limits_j\frac{f_j}{v_j}\ast
    {\alpha}_{i,j} $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ14.png)(14)Finally,
    the reward at the moment *t* is obtained:!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ r(t)=\sum \limits_i\frac{pure_i^t}{T_i^t}=\sum \limits_i\frac{I_i^t-\mathit{\cos}{t}_i}{T_i^t}
    $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ15.png)(15)The
    above expression reflects the reward brought by each action of DRL, and parameters
    need to be supplemented on this basis to get the overall reward.!['
  prefs: []
  type: TYPE_NORMAL
- en: $$ R(t)=\sum \limits_{t^{\prime }=t}^T{\in}^{t^{\prime }-t}r(t) $$
  prefs: []
  type: TYPE_NORMAL
- en: '](../images/513458_1_En_9_Chapter/513458_1_En_9_Chapter_TeX_Equ16.png)(16)where
    ∈ represents the rate of loss of subsequent earnings. If ∈ approaches 0, the system
    will pay more attention to the current profit at this time.'
  prefs: []
  type: TYPE_NORMAL
- en: The resource allocation algorithm based on DRL can be divided into two solving
    processes, namely, forward transmission and reverse training. In the forward transmission
    process, a deep neural network is constructed with the purpose to maximize user
    satisfaction, while in the reverse training process, the deep neural network is
    trained in the reverse direction by minimizing the time difference error.
  prefs: []
  type: TYPE_NORMAL
- en: Simulation Experiment and System Setting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the blockchain-based network data sharing system, the system test environment
    is as follows. The host machine CPU is Intel® Core™ i7, with 16 GB running memory
    and Windows 10 operating system. The client and server are Ubuntu operating system.
    The server is used to simulate the test environment, and the client is responsible
    for initiating the test. The blockchain benchmark environment is the Ethereum
    blockchain system; the client environment adopts a server with JDK 8\. It is proved
    that the introduction of the log storage system can meet the constraint requirements
    of reading and writing and will not affect the original performance of the system.
  prefs: []
  type: TYPE_NORMAL
- en: To prove the effectiveness of the algorithm proposed in this research in the
    edge computing resource allocation of blockchain network, five other algorithms
    are selected for comparative experiments, namely, genetic algorithm, random allocation
    algorithm, preference allocation, ant colony, and Q-learning algorithm. Q-Learning
    is a value-based reinforcement learning algorithm. The Q function is recorded
    by the state-action table. The Bellman equation can be used to solve the optimal
    strategy for the Markov process.
  prefs: []
  type: TYPE_NORMAL
- en: A simulation platform is built based on Python, and the number of users in the
    blockchain network is set to 10, 20, 30, 40, and 50; the number of edge service
    areas is 2, 3, 4, 5, and 6, and the server processing frequency is 1, 2, 3, 4,
    and 5\. The channel bandwidth is 180 kHz, the noise is 90 dBm, the upper limit
    of the number of resources of a single edge server is 100, and the channel gain
    is in the following range [[1](#CR1), [10](#CR10)].
  prefs: []
  type: TYPE_NORMAL
- en: 4 Results and Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Evaluation of Data Security Sharing Strategy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this research, the blockchain benchmark environment is used as a control,
    and the query request from the client is used as the workload. The workload acts
    on the base environment and the main chain environment, respectively. To ensure
    the accuracy of the test results, three repeated experiments are carried out,
    and finally, the average delay under different load conditions is calculated.
    Figure [6](#Fig6) shows the experimental results. It is noted that in the three
    experiments, the difference between the blockchain benchmark environment and the
    main chain environment is very subtle in terms of average latency. This also suggests
    that the introduction of the log storage system in the blockchain network will
    not have a significant impact on the performance of the reference environment
    to read data, and it can also meet the constraint requirements in terms of effectiveness.
    Hence, this solution is feasible. Figure [7](#Fig7) shows the storage overhead
    of the system when the file data size is between 1 KB and 1 MB. It is noted in
    Fig. [7](#Fig7) that the improved environment after the introduction of the log
    storage system reduces the storage overhead of the system by about 75% compared
    with the blockchain benchmark environment. Although different storage modes will
    have varying degrees of impact on the experimental results, as long as the storage
    overhead of the local file system less than the blockchain network, the solution
    is considered effective.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig6_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of request delays under different loads
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig7_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 7
  prefs: []
  type: TYPE_NORMAL
- en: Comparison of data storage overhead under different source data volumes
  prefs: []
  type: TYPE_NORMAL
- en: Figure [8](#Fig8) shows the corresponding execution time on the endorser node
    when the client simultaneously initiates different numbers of data write requests.
    It is noted that there is not much difference in the calculation time of the endorser
    node between the cache enhancement strategy and the non-cache enhancement strategy.
    Figure [9](#Fig9) shows the calculation amount corresponding to the endorser node
    when the client initiates 100 data write requests at the same time. It is noted
    that the calculation amount of the system under the cache enhancement strategy
    is smaller, and the calculation efficiency is about 1–2 times that under the non-cache
    enhancement strategy.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig8_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 8
  prefs: []
  type: TYPE_NORMAL
- en: Execution time results under different numbers of requests
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig9_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 9
  prefs: []
  type: TYPE_NORMAL
- en: Calculated results under different proportions of conflicting write requests
  prefs: []
  type: TYPE_NORMAL
- en: Performance Analysis of Resource Allocation Algorithms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Figure [10](#Fig10) shows the user satisfaction under different numbers of users.
    The increase in the number of users means that limited computing resources will
    be shared by more users, and thus the average user satisfaction will decline.
    However, compared with other resource allocation algorithms, the allocation method
    based on DRL significantly improves user satisfaction. The Q-learning algorithm
    also has good performance. In the case of a small number of users, the needs of
    most users can be met, and user satisfaction is high. Figure [11](#Fig11) shows
    the user satisfaction under different edge server performance. With the increase
    in the frequency of edge servers, the system will process data faster, so user
    satisfaction will increase linearly. Figure [12](#Fig12) shows the user satisfaction
    under different numbers of servers. The increase in the number of servers means
    that more parallel tasks can be supported and the user satisfaction will increase
    accordingly. The advantages of the resource allocation algorithm based on DRL
    theory are not obvious under a small number of servers. When the number of servers
    is greater than 5, user satisfaction has been significantly improved compared
    with the other five resource allocation algorithms, and compared with the Q-learning
    algorithm, its user satisfaction has increased by about 15%.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig10_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 10
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between the number of users and the user satisfaction
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig11_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 11
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between edge server performance and user satisfaction
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig12_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 12
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between the number of servers and the user satisfaction
  prefs: []
  type: TYPE_NORMAL
- en: Figure [13](#Fig13) shows the running time. The running time of the algorithm
    will increase as the number of users increases. When the number of users is less
    than 30, the running time of the random allocation algorithm is the shortest,
    and the resource allocation algorithm based on DRL has the longest running time
    among the six because of the addition of the link of training the deep network.
    When the number of users increases, the number of two-dimensional tables stored
    by the Q-learning algorithm also increases, and the running time of the algorithm
    increases almost exponentially. Figure [14](#Fig14) shows the time delay. It is
    noted that the preference allocation algorithm adopts a greedy strategy and preferentially
    allocates servers with low delay to users, so its time delay is the shortest among
    the six. The Q-learning algorithm is found to have a serious impact on the system
    delay when the number of users is large. Figure [15](#Fig15) shows the changes
    in the revenue. It is noted that as the number of users increases, the Q-learning
    algorithm and the one based on DRL can obtain more user benefits, and the overall
    growth is exponential.![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig13_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 13
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between the number of users and the running time
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig14_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 14
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between the number of users and the algorithm delay
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/513458_1_En_9_Chapter/513458_1_En_9_Fig15_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 15
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between the number of users and the revenue
  prefs: []
  type: TYPE_NORMAL
- en: 5 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the vigorous development of interactive Internet of things devices, a large
    amount of multi-structured data is generated, transmitted, and stored in local
    and remote storage systems. By building digital twins for IoT devices, it is possible
    to have a deeper understanding of their structural characteristics and behaviors
    in different environments. Digital twins can even simulate the working status
    of physical entities based on changing conditions, but at the same time, hackers
    can remotely penetrate IoT devices and cause irreparable damage to IoT systems
    and applications. This will result in the digital twins may not be accessible,
    and if the tampered data is submitted to the digital twin model, it will lead
    to wrong decisions. In this regard, in this article, possible connections between
    the digital twins and the blockchain are explored to defend against security threats.
    The decentralization of blockchain technology allows nodes that do not trust each
    other to trust the stored data.
  prefs: []
  type: TYPE_NORMAL
- en: A resource allocation method based on DRL theory is proposed to maximize the
    user satisfaction. First, the operation delay and user benefits of the blockchain
    are taken into account, and then the optimization problem is transformed into
    a DRL model to obtain a reasonable network state. Finally, the optimal resource
    allocation plan is obtained after the network training. With the optimal user
    satisfaction as the strategy, simulation experiments have further confirmed that
    the allocation method based on DRL significantly improves user satisfaction. Moreover,
    the algorithm can obtain more user benefits, and the overall growth is exponential.
    This article provides ideas for the data maintenance, prevention of tampering,
    and data traceability during the construction of digital twins under decentralization.
    However, there are still some shortcomings. Because the experiment is carried
    out on a simulation platform, it fails to consider the deployment and execution
    methods in the real network environment. Therefore, in the follow-up, the system
    throughput should be expanded to enhance the practicability of the plan.
  prefs: []
  type: TYPE_NORMAL
