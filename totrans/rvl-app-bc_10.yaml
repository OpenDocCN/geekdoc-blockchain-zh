- en: Chapter 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Blockchain Revolution:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Adaptability in Business World and Challenges in Implementation
  prefs: []
  type: TYPE_NORMAL
- en: Archana Sharma
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Institute of Management Studies, Noida, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Purnima Gupta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Institute of Management Studies, Noida, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ABSTRACT
  prefs: []
  type: TYPE_NORMAL
- en: As the base of bitcoin, the blockchain has received widespread consideration
    recently. Blockchain stands for an immutable ledger which permits transactions
    to occur in a decentralized ways. Applications based on blockchain are numerous
    for instance financial services, industrial and supply chain services, legal and
    healthcare services, IoT and blockchain integration, bigdata analytics, and so
    on. Nevertheless, there are still numerous confronts of blockchain technology
    like security and fork problems that have to be resolved. This research highlights
    an inclusive indication on blockchain technology with blockchain architecture
    in the first phase. And in the second phase, the security challenges and problems
    associated with blockchain are highlighted. It further proposes and measures up
    to various typical consensus algorithms used in different blockchains. Research
    has been concluded with the potential prospects of blockchain as future trends.
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs: []
  type: TYPE_NORMAL
- en: In the current scenario, Information Technology has been playing a major role
    in the development of the financial industry. Financial organizations restructuring
    the way to interact with each other. However, the well-known practice and standards
    of this segment may face an all-out revamp as incredible innovations such as Blockchain
    is a maturing stage.
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain was first described by Stuart Haber in the early nineties. In 2008,
    Satoshi Nakamoto(Nakamoto S.,2008), introduced the blockchain through Bitcoin
    as a digital cryptocurrency. Bitcoin as a cryptocurrency based on a network protocol
    permits the users over the network to execute the transaction with digital currency
    or virtual money in a secure manner that must be present only in their systems.
    As a sequence of blocks, blockchain register and maintain the details of the transaction
    in a distributed public ledger crossways with various computers that are connected
    to peer network. A block records every recent transaction as the present component
    of blockchain and after completion maintained in blockchain as an eternal database.
    After completion of each block, another block is created. As a technology revolution
    of Bitcoin, blockchain maintains proof of every transaction over the network as
    balance and address. The transactions with Bitcoin are entered in sequential order
    in a blockchain as the bank transactions are maintained. Due to openness, the
    entire system sustains security as the public property of blockchain. The transaction
    is transparent and verifies the authenticity of the owner. Blockchain is considered
    as decentralized architecture without any verification of the transaction by third
    parties, it creates a serious distraction to the conventional business procedure
    which requires centralized architecture or verification from a trusted party.
    The intrinsic properties of blockchain design and architecture are robustness,
    transparency, auditability, and network security. Blockchain as a distributed
    database organizes a sequence of ordered blocks and committed blocks are set to
    be immutable. Due to the immutable property of the committed block, no one can
    alter it further. The category of blockchain decides the contents of data stored
    in a block. For example, Bitcoin maintains the transaction details, the amount
    transferred, the sender, and receiver information. For authentication, an exclusive
    hash is associated with each block in comparison to a fingerprint. While the creation
    of the block, the hash is also calculated concurrently, and in case of any alteration
    in the same block the hash would also be changed. There are mainly three types
    of blockChain:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Private Blockchain(Permissioned): Access permissions are restricted in private
    Blockchain. Network administrator''s permission is necessary to join like a participant
    of blockchain or as a validator. Private organizations in general, may function
    as private blockchain and won''t like the public communication on blocks holding
    perceptive company details.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Public Blockchain(Permissionless): In oppose to private Blockchain, unlimited
    members of the open internet can join a permissionless blockchain and perform
    transactions with validations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Federated Blockchain: It is a fusion of public blockchain and private blockchain.
    Though Federated blockchain shares alike scalability and privacy accompanied by
    private blockchain, a major difference is that leader node (a series of nodes),
    picked in its place of a single unit for transaction verification processes.'
  prefs: []
  type: TYPE_NORMAL
- en: In consideration of the application area of blockchain, renowned execution of
    public blockchain includes Bitcoin, Litecoin, Ethereum, and broadly the majority
    cryptocurrencies. The foremost advantages are self-sustained network, self-maintenance,
    and short of infrastructure costs, radically sinking management overheads. Whereas
    in private blockchains, the major applications are auditing, database management,
    and normally, performance-based solutions. For open platforms, Multichain may
    be considered as an example for constructing and arrange private blockchains.
    In last, federated blockchains are widely employed in the banking, business organizations,
    and IT sectors. There are various other application areas also where blockchain
    has been deployed like healthcare, supply chain, legal services.
  prefs: []
  type: TYPE_NORMAL
- en: Even though the characteristics of blockchain technology may convey additional
    reliable and expedient services, the security issues and challenges behind this
    innovative technology is also an important topic that is required to concern.
    The vulnerabilities include endpoint vulnerabilities,public and private key security,
    vendor risk, lack of standards, and regulation. Blockchain technology is a grouping
    of a cryptographic algorithm, peer-to-peer communication, mathematic through a
    consensus algorithm to determine the synchronization difficulty of distributed
    database. It's a built-in multi-field infrastructure building (Garay et al., 2015;
    Gervais et al., 2014; Nakamoto,2013). The blockchain technologies construct of
    six key elements.
  prefs: []
  type: TYPE_NORMAL
- en: '• Decentralized: The basic characteristic of blockchain is that blockchain
    doesn''t require to rely on centralized node any longer, the data can be documented,
    store, and renew in a scattered manner.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Transparent: The recorded data by blockchain structure is transparent to
    all nodes, it too transparent to renew the data, due to this blockchain can be
    considered reliable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Open Source: The majority of blockchain classification is open to all, a
    record can be ensured publicly and the public can also employ blockchain technologies
    to produce any application as desired.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Autonomy: Due to the support of consensus, all nodes on the blockchain organization
    can reassign or renew data securely, the proposal is to conviction from a particular
    person to the complete system, and nobody can interfere with it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Immutable: A few records will be set aside evermore, and can''t be altered
    unless somebody can acquire control over 51% of node in the identical time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Anonymity: Blockchain technologies resolved the trust, trouble connecting
    node toward node, therefore data transfer or else transaction can be unidentified,
    just need to recognize the individual''s blockchain address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: THEORETICAL BACKGROUND
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain was introduced through Bitcoin as cryptocurrency. Bitcoin is an
    organism that controls electronic cash without any support of central power, so
    certainly there must be a system for the prevention of fraudulence of data, payment
    repetition, and other kinds of threats and attacks activities possible from unauthorized
    users. To accomplish this objective, Bitcoin makes use of numerous different essential
    technologies including, P2P, public-key cryptography, hashing, digital signatures,
    and Proof of work. The details of these underlying technologies of the blockchain
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bitcoin: Electronic Cash in Peer-To-Peer System'
  prefs: []
  type: TYPE_NORMAL
- en: As a cryptocurrency, Bitcoin consent to the transfer of digital belongings in
    the peer-to-peer System without any support of conviction of third parties, Bitcoin
    is broadly used and exceedingly treasured digital currency across the world (Nakamoto,
    2008; Narayanan et al.,2016). In Bitcoin, the complete sequence of a block is
    vital to maintain possession of each coin. To sustain the ownership of each block,
    a link has been established through the pointer to form a chain by pointing to
    the previous correct block in the sequence of the chain. The previous block's
    hash is maintained to form a linked list structure.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 1\. Simplified blockchain |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f01](i/ch009.f01.png) |'
  prefs: []
  type: TYPE_TB
- en: The total count of blocks from starting to end block of the blockchain is known
    as a block height. Generally, the blockchain persistently grows, and due to this
    unremitting enhancement of blockchain, there would be a need for a massive amount
    of computational resources for the validation procedure. To remain the volume
    and computational attempt reasonable, Bitcoin proposes a simplified payment verification
    support on Merkle trees (Nakamoto, 2008).
  prefs: []
  type: TYPE_NORMAL
- en: Hash Function
  prefs: []
  type: TYPE_NORMAL
- en: A hash value h is generated in the form of a fixed-size string with the input
    value I and assigned to hash function H. With the help of this mechanism, a similar
    hash value will be generated only if the right input is given. Assumption of original
    input value with the help of hash is tremendously complicated. Bitcoin utilizes
    the computation of the hash values method to assure the finding of data distortion
    and verify the persistence of blockchain records.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 2\. Hash Mechanism |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f02](i/ch009.f02.png) |'
  prefs: []
  type: TYPE_TB
- en: Public-Key Cryptography and Digital Signature
  prefs: []
  type: TYPE_NORMAL
- en: Public, as well as the private key, are significant components of blockchain
    for digital currency transfer. As asymmetric cryptography, it uses the pair of
    keys for encryption as well as decryption. Generally, the public key is accessible
    by anyone in the world and can forward a message to the receiver by encrypting
    the message using the receiver's public key. The private key of the receiver has
    been used for message decryption at the receiver's end only (Bergstra & Leeuw,
    2013).
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 3\. Digital Signature |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f03](i/ch009.f03.png) |'
  prefs: []
  type: TYPE_TB
- en: Through public-key cryptography, a digital signature verifies the legitimacy
    of the message sent digitally. It provides authentication, non-repudiation, and
    integrity, and including these features, the ownership of bitcoin transactions
    in addition to the bitcoin wallet addresses has been validated (Badev & Chen,2014).
  prefs: []
  type: TYPE_NORMAL
- en: Timestamp Server
  prefs: []
  type: TYPE_NORMAL
- en: A timestamp server was proposed by Bitcoin to take a block of transactions using
    a hash for time-stamping and hash publication at a broad level. The timestamp
    establishes the association chain of transactions, and all timestamp is incorporated
    in the preceding timestamp inside its hash.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 4\. Timestamp Server |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f04](i/ch009.f04.png) |'
  prefs: []
  type: TYPE_TB
- en: The timestamp server is intended to demonstrate that the data must be present
    all the time(Nakamoto, 2008).
  prefs: []
  type: TYPE_NORMAL
- en: Merkle Trees
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin's every block with the support of Merkle trees maintains the summing
    up of each transaction within a block. Merkle tree as a data structure has been
    used to recapitulate and integrity verification a huge amount of data. As a binary
    tree, the Merkle tree may also have merely two child nodes (Liu et al., 2015).
    Merkle tree is created using the hash function and executed recursively on a couple
    of nodes till there is a single hash identified as Merkle root. Bitcoin's Merkle
    tree's hash algorithm SHA256 of cryptography has been applied twice, Bottom to
    top Merkle tree is developed. It doesn't store the transaction, instead of the
    transaction's data has been hashed and the outcome of the hash will be maintained
    in each child node. Due to the binary nature of the Merkle tree, in case of an
    odd figure of transactions, the last transaction will be reproduced to maintain
    the even figure of child nodes. Merkle tree gives the option to dispose of superfluous
    transactions without infringement a block's hash because the interior hashes are
    not maintained.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 5\. Merkle Tree |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f05](i/ch009.f05.png) |'
  prefs: []
  type: TYPE_TB
- en: Simplified Payment Verification (SPV) becomes possible in Merkle trees for validation
    of payment instead of executing a complete network node. A replica of the block
    header of the longest Proof-of-Work chain is needed to be maintained by the user.
    The user has no transaction access permission other than network acceptance of
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a peer-to-peer network, a network of blockchain also maintains the network
    of nodes and functions with cryptographic algorithms. The communications and verification
    process of transactions have been handled by network nodes, and these nodes also
    resist for revenue (transaction fee) by producing a legitimate block from end
    to end procedure of getting transactions and determine a resource inducement task
    (PoW). The bitcoin network runs the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: • Digitally marked fresh transactions are transmitted to every single one node.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • A block contains the fresh transactions collected by each node.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • PoW(Proof-of-Work) is being computed by a node for its block.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • After confirmation of Pow by node, it transmits the block to rest all nodes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Distributed Hash Table
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Hash Table as a disseminated data structure is generally used to
    accumulate entries related to a key. Moreover, as two major components, the key
    which is considered to be an address, and value could be the file contents that
    are linked to that address. Thus, users are permitted to find a key through an
    entry, as with contacts in a phone as soon as a user looks for a phone number
    (key) via names (address). DHTs are broadly used to build and manage complex services.
    For illustration, BitTorrent is employing DHTs for the purpose have hash tables
    at the top of the mind for any problem as a potential method to resolve the problem.”
    (Figure 6)
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 6\. Distributed Hash Table |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f06](i/ch009.f06.png) |'
  prefs: []
  type: TYPE_TB
- en: Distributed Ledger Technology
  prefs: []
  type: TYPE_NORMAL
- en: As a catalog, the distributed ledger is to facilitate several locations or along
    with many participants. Blockchain technology also comes under the name DTL. DLT
    mentions an innovative and fast mechanism for sharing, recording, and store data
    beyond multiple ledgers. This technology allows us to share, transact, and recorded
    the data from different network participants through a distributed network. Each
    participant can access a shared ledger based on the idea of distributive ledger
    technology. The idea of Blockchain-based technology was first applied as the fundamental
    technology of Bitcoin cryptocurrency. It also provides a way to keep your data
    secure without the interaction of a third party (Mills et al., 2016).
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Ledger Type
  prefs: []
  type: TYPE_NORMAL
- en: Distributed ledger technology can be permissionless (Public) or permissioned
    (Private) and there are basic differences between the two. Ethereum and Bitcoin
    are the most popular examples of completely permissionless blockchains, whereas
    Codra and Hyperledger fabric are a prominent example.
  prefs: []
  type: TYPE_NORMAL
- en: Public Ledger
  prefs: []
  type: TYPE_NORMAL
- en: The public ledger also called the non-permissioned ledger, No one needs permission
    to create and validate blocks as well as to modify the ledger state by storing
    and updating data. It provides transparency to everyone for accessing and storing
    data. In this technique there is no requirement of pre-approval by any entity,
    network participants can join or leave the network as they will. There is no owner
    to control it. The homogenous copies of the records are distributed to all network
    participants. This raises privacy concerns for particular scenarios where the
    privacy of such data needs to be protected.
  prefs: []
  type: TYPE_NORMAL
- en: Private Ledger
  prefs: []
  type: TYPE_NORMAL
- en: Private ledger, also known as the permissioned ledger, as the name suggests
    it is restricted that means only trusted and authorized entities are allowed to
    take part in ledger activities. Distributed Ledgers members are selected prior
    by someone who is an owner or an administrator of the ledger. They also control
    network access and sets the ordinance of the ledger. It is restricted unlike its
    public counterpart in the sense that only authorized and trusted entities can
    participate in the activities within the ledger. By allowing only authorized entities,
    a private ledger can ensure the privacy of ledger data, which might be desirable
    in some use-cases.
  prefs: []
  type: TYPE_NORMAL
- en: Private ledger, also known as the permissioned ledger, as the name suggests
    it is restricted that means only trusted and authorized entities are allowed to
    take part in ledger activities. Distributed Ledgers members are selected prior
    by someone who is an owner or an administrator of the ledger. They also control
    network access and sets the ordinance of the ledger. It is restricted unlike its
    public counterpart in the sense that only authorized and trusted entities can
    participate in the activities within the ledger. By allowing only authorized entities,
    a private ledger can ensure the privacy of ledger data, which might be desirable
    in some use-cases.
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Public ledger vs Private ledger
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Public Ledger | Private Ledger |'
  prefs: []
  type: TYPE_TB
- en: '| Access | Read & Write public to everyone | Read & Write public to everyone
    |'
  prefs: []
  type: TYPE_TB
- en: '| Central Party | No central owner or administrator | Has some degree of administration
    or control |'
  prefs: []
  type: TYPE_TB
- en: '| Network actors | Don''t know each other | Know each other |'
  prefs: []
  type: TYPE_TB
- en: '| Speed | Slow | Fast |'
  prefs: []
  type: TYPE_TB
- en: '| Identity | User identity anonymous | Identity verification required by the
    owner |'
  prefs: []
  type: TYPE_TB
- en: '| Native Token | Yes | Not necessary |'
  prefs: []
  type: TYPE_TB
- en: '| Security | Security through wide distribution in large scale network | Security
    through access control combined with DLT in small scale network |'
  prefs: []
  type: TYPE_TB
- en: '| Openness | Ledger is open and transparent | Different degree of openness
    and transparency |'
  prefs: []
  type: TYPE_TB
- en: '| Level of Trust | Network member is not required to trust each other | A higher
    degree of trust among members required |'
  prefs: []
  type: TYPE_TB
- en: '| Example |      • Bitcoin      • Ethereum'
  prefs: []
  type: TYPE_NORMAL
- en: • Manero
  prefs: []
  type: TYPE_NORMAL
- en: • Zcash
  prefs: []
  type: TYPE_NORMAL
- en: • Steemit
  prefs: []
  type: TYPE_NORMAL
- en: • Dash
  prefs: []
  type: TYPE_NORMAL
- en: • Litecoin
  prefs: []
  type: TYPE_NORMAL
- en: • Stellar etc. |      • R3(Banks)      • EWF(Energy)
  prefs: []
  type: TYPE_NORMAL
- en: • Corda
  prefs: []
  type: TYPE_NORMAL
- en: • Hyperledger Fabric
  prefs: []
  type: TYPE_NORMAL
- en: Etc. |
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Fabric
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Fabric is emerged by IBM beneath the Hyperleger project. Hyperledger
    is a project of open-source blockchains. It has been evolved by the foundation
    of Linux. Hyperledger Fabric was first implemented in 2015\. Hyperledger Fabric
    provides a high privileged network on which members can interact, exchange, and
    track with digitized data. The fabric is designed to support implementations of
    a different function, it also allows to use of various programming languages like
    GO language to implement chain codes, and commonly run within Docker containers.
    It is a distributed platform for running the chain code. In the hyperedge fabric,
    transactions follow permissioned ledger and confidential. Since the network is
    private, every user who wants to participate in the transaction must have registered
    in the network for getting their corresponding ids. Fabric ledger also provides
    auditability to meet regulatory needs. The modular architecture delivers a high
    proportion of resiliency, flexibility, confidentiality in implementation, and
    design. (Sajana et al., 2018).
  prefs: []
  type: TYPE_NORMAL
- en: Corda
  prefs: []
  type: TYPE_NORMAL
- en: It is a DLT(distributed ledger technology) that focuses on the finance application.
    It aims to provide support for finance use-cases structure. Various degrees of
    openness and transparency of the records is possible. It is a permissioned network
    that means all participants must have corresponding verifiable identities to participant
    in any transaction. A higher degree of faith among members required. One of the
    major differences between Corda and other public Distributed Ledger platforms
    like Ethereum and Bitcoin is the use of a blockchain to record the transaction.
    Corda is also a DLT platform but does not use a blockchain to record transactions.
    Corda Govern By private company R3, consortium of over 70 financial institutions.
    It provides a very high level of trust. One of the powerful features that make
    Corda different than some renowned financial networks such as Ripple and Stellar
    is its smart contract facilities. It consists of a large developer community who
    can write codes in Kotlin and Java to develop DApps in Corda(Chowdhury et al.,
    2019).
  prefs: []
  type: TYPE_NORMAL
- en: IOTA
  prefs: []
  type: TYPE_NORMAL
- en: IOTA is a freely available distributed ledger designed for the IoT(Internet
    of Things). It is built to enhance the power of future IoT. It provides secure
    communications between IoT devices. A distributed technology of IOTA is not a
    chain of block propel transaction. Its consensus-building structure is made of
    a DAG (Directed Acyclic Graph) that is based on Tangle. A network of vertices
    joined by an edge each vertex represents a transaction. IOTA has no cost for transaction
    and scalability. Its transaction is very fast. IOTA uses Tangle that solving the
    transaction fee and the scalability both issues faced by most distributed ledgers.
    IOTA avoids centralization it grows via a transaction, not miners or stacker.
    IOTa aims to become the backbone of the m2m economy of the Internet of things
    (Chowdhury et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Applications
  prefs: []
  type: TYPE_NORMAL
- en: 'Digital Currency: Bitcoin'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin’s transaction system and its data structure were developed based on
    blockchain technologies which built Bitcoin as a digital currency for an online
    payment system. Funds transfer can be accomplished in a secure manner using an
    encryption technique without trusting any third party bank. Public keys have been
    employed for sending as well as receiving the bitcoin, transaction recording,
    and the individual ID was unsigned. The transaction processes authenticate needs
    further the user's computing power to acquire consensus and then account for the
    transaction to the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Smart Contract: Ethereum'
  prefs: []
  type: TYPE_NORMAL
- en: Smart Contract as a digital contract organize user’s digital belongings, devise
    the participant’s right and responsibilities, which will be executed automatically
    by a computer system. It can be considered as a contract among participants and
    allow them to receive and respond to messages besides storing the data. Further,
    a smart contract may send a message to outside also. As a trusted authority or
    person, a smart contract can also embrace assets for a temporary period and pursue
    the instructions which have already been programmed (Kosba et al., 2016). As an
    open-source blockchain, the Etherium platform to handle the contract combines
    the smart contract and offers a decentralized virtual machine. By the use of ETH,
    which is called the digital currency of it, users on this platform may create
    various applications, services, or contracts (Watanabe et al.,2016).
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger
  prefs: []
  type: TYPE_NORMAL
- en: As Ethereum, Hyperledger blockchain is also an open-source platform to maintain
    the distributed ledger, initiated by Linux Foundation in December 2015\. It is
    paying attention to ledgers considered to maintain worldwide business transactions,
    together with foremost financial, supply chain companies and technologies to enhance
    numerous aspects of performance and reliability. To build up open protocol and
    set of standards, various independent efforts have been put together to provide
    a modular framework that maintains dissimilar components for various purposes.
    This would comprise a mixture of blockchains with their storage models and consensus,
    and identity, contract, and access control services.
  prefs: []
  type: TYPE_NORMAL
- en: Other Applications
  prefs: []
  type: TYPE_NORMAL
- en: Financial Services
  prefs: []
  type: TYPE_NORMAL
- en: Presently, blockchain technology has been used in a broad level of financial
    areas, along with business services, financial assets settlements, economic transactions,
    and prediction markets. An essential role has been expected by blockchain in the
    global economy’s sustainable expansion, consumers benefits in present banking
    structure and the entire world in common (Nguyen, 2016).
  prefs: []
  type: TYPE_NORMAL
- en: The worldwide financial organizations are looking the procedure of employing
    blockchain-built application for financial resources, such as fiat money, securities,
    and imitative contracts (Peters et al., 2016; Fanning & Centers, 2016; Kosba et
    al.,2016). For example, blockchain technology recommends an enormous alteration
    to the capital marketplace and a more proficient method for performing processes
    like derivatives transactions, securities, and digital payments.
  prefs: []
  type: TYPE_NORMAL
- en: Insurance Claims Processing
  prefs: []
  type: TYPE_NORMAL
- en: Claims processing can frequently be an unsolved and a problematical task for
    the claims processing staff. Insurance workstation requires to go from beginning
    to end, staged incidents, fake cases, and difficult to deal with clients, etc.
    which extensively widen the risks of inaccuracy and misclassifications. An ideal
    framework can be present by Blockchain in such kind of situation administration
    without any hazard and openness in dealing out with cases. Its encryption (Mota,et
    al.,2017) feature facilitates guarantor to ensure that dispensation is secure
    and reliable.
  prefs: []
  type: TYPE_NORMAL
- en: Legal Services
  prefs: []
  type: TYPE_NORMAL
- en: A “Smart Contract” is a computer code for the automation of an agreement, an
    auto- executing digital agreement that records and implement an agreement between
    two or more person. Unlike a traditional contract, it is self-enforcing in nature,
    that is, a smart contract's outcome is inherently and directly coded into the
    contract itself (Legalwise,2019). A traditional Blockchain allows for a network
    of computers to build a trusted decentralized and automatic system that is an
    authority for such Smart Contracts. These digital contracts can be executed more
    efficiently and without human involvement, resulting in the potential for increased
    certainty of outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Healthcare Management
  prefs: []
  type: TYPE_NORMAL
- en: The Healthcare industry is another area of application where blockchain technology
    could participate an important role in the numerous applications of various regions
    like public healthcare management, automated health asserts settlement, longitudinal
    healthcare reports, sharing patients’ health check-up data, online patient access,
    user-oriented remedial research, drug forged, clinical experiment, and precision
    medicine (Juneja&Marefat, 2018). Normally, blockchain technology along with the
    SCs could find the solution of problems of the scientific authority of verdict(endpoint
    switching, missing data, selective publication, and data search) in the clinical
    examination as well as a matter of patients' informed permission.
  prefs: []
  type: TYPE_NORMAL
- en: Business and Industrial Applications
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain has the prospective to be converted into a significant foundation
    of troublesome advancements in industry and management through getting better
    and automate business processes. IoT and blockchain are rising in the current
    scenario and based on that numerous e-business models have been developed. Blockchain
    applications materialize to propose substantial performance enhancement and commercialization
    prospects, recovering reliability in e-commerce and facilitating IoT corporations
    to optimize their process while reduction of time and cost. blockchain-dependent
    applications could provide decentralized trade process organization for numerous
    enterprises. In such examples, all business process illustration may be retained
    on the blockchain, and the workflow direction-finding could be carried out by
    SCs, thereby reformation and mechanize intra-organizational procedure and cost
    reduction (Mendling et al.,2018)
  prefs: []
  type: TYPE_NORMAL
- en: Supply Chain Management
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain technology is likely to raise transparency and liability in supply
    chain systems, therefore enabling additional flexible worth chains. Particularly,
    blockchain-dependent applications have the prospective to produce advancements
    in three areas of the supply chain: optimization, visibility, and demand. Blockchain
    can be employed in logistics, recognizing bogus products, declining paper load
    processing, facilitating source tracking, and allow buyers and vendors to perform
    directly without maneuvering by intermediaries (Subramanian, 2017). Besides, it
    has been verified that the blockchain-based applications handling within supply
    chain networks would be able to take care of security, show the way to more vigorous
    contract management system between 3rd and 4th party logistics (3PL, 4PL) for
    combating information irregularity, improve tracking system and traceability assertion,
    offer better information organization across the whole supply chain, offer improved
    customer facility through highly developed data analytics (i.e. encrypted consumer
    data) and original recommender system, get better inventory and performance administration
    across compound supply chains, and at last, it can get better smart transportation
    arrangement and propose novel decentralized developed design.'
  prefs: []
  type: TYPE_NORMAL
- en: VARIOUS PROBLEMS ASSOCIATED WITH BLOCKCHAIN IMPLEMENTATION
  prefs: []
  type: TYPE_NORMAL
- en: Blockchains are digital blocks consisting of records of transactions over public
    or private networks. The blockchain record security can be ensured through cryptography.
    The concepts of consensus and immutability are the core security and privacy concern
    in the blockchain network however blockchain network security depends on the infrastructure
    of the network. Infrastructure has capabilities like preventing all type of users
    from accessing sensitive information, preventing illicit data change requests
    or attempts, and using the highest security mechanism to guard security keys form
    hackers, are the basic security requirements of infrastructure within blockchain
    network public, private and hybrid blockchains are different so deliver the different
    intensity of security. Public blockchains are in communication with public networks
    like the internet so that any independent node can join it but private networks
    only let known networks to join. Anonymity is the principle design on which blockchains
    have typically been designed and identity is the key term that is used by private
    blockchain to confirm access privileges (Zhang et al., 2019).
  prefs: []
  type: TYPE_NORMAL
- en: Attacks on Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: Majority Attack
  prefs: []
  type: TYPE_NORMAL
- en: An attacker can cause severe network disruption through a majority attack (51%
    attack), which is a potential attack on a blockchain network, in which the attacker
    attempts to manage the main part of the hash fee. Transactions over the blockchain
    network can be prevented if the attack is successful but the attack does not permit
    the invader to reverse the transactions from other parties. New transaction creation
    and submission over the blockchain network, cannot be prevented through this attack.However,
    changing the previously confirmed block gets more difficult when the chain grows
    because the more confirmation a block gets, it is getting tougher for altering
    and reverting the transaction. Historical blocks cannot be changed due to the
    hard coding of the previous transactions. Krypton and Shift are the two blockchain
    networks based on Ethereum and suffered from majority assault in August-2016\.
    Bitcoin Gold also suffered a majority attack held in May 2018, in which the attacker
    was successful in double-spend (Lin&Liao,, 2017; Saad et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Double Spending
  prefs: []
  type: TYPE_NORMAL
- en: Double spending is an application-oriented attack, which refers to the spending
    currency twice through a conflicting transaction in a quick session over the blockchain
    network which would destroy the trust in the service provider. It is very essential
    to verify the ownership of the transactions to stop double-spending and other
    frauds. The outcome of previous researches shows that to execute a double-spending
    attack over a large blockchain network like Bitcoin would require a very large
    amount of computational power which would not possible for any individual. the
    security risk for smaller blockchain networks still exists. The attacker's identity
    could be revealed after planting this attack over the network and if there are
    two transactions sequentially generated to impose an attack, then those transactions
    would be transferred to the unconfirmed transaction pool. the first transaction
    will be authorized and the second will be flagged as an invalid transaction. in
    case of both transactions are verified as legal and pulled from the group, then
    transaction having a maximum numeral of confirmations will be incorporated into
    the chain, and other would-be discarded(Vokerla et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Finney Attack
  prefs: []
  type: TYPE_NORMAL
- en: Finney attack is launched by the miner in which he mines or controls the content
    of his block with his transaction and this block is not broadcasted over the network.
    The coins related to the previous transaction are now used in the second transaction
    and after that previously mined block is released again. This action would cause
    some time lag in the rejection of a second transaction by the other miners. If
    the seller does not wait for enough confirmation, the supply may occur twice.
    This type of attack gets successful only if the seller accepts the unconfirmed
    transaction. suppose the time required between finding the block and seller accepts
    the payment is t, as well as the average time for searching the block is T, then
    there will be a probability of t/T time unit to find another block on the same
    network. the attack would not be successful and the attacker will not get any
    benefit against block B. The standard cost of attempting an attack is (t/T)*B.
    Suppose V is the value of the transaction, then the seller has to wait at least
    t=V*T/B before releasing the supply. The Finney attack has a low success probability
    due to short block intervals and time-sensitive attack procedures. The Bitcoin
    and Ethereum have 10 minutes and 15 seconds of block time(Saad, et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Brute-Force Attack
  prefs: []
  type: TYPE_NORMAL
- en: In such kind of attack, the invader tries the massive number of possible passwords
    for digital signature secret keys of existing wallets and checks the returned
    paint-text for its accuracy. Attack time and the number of attempts depend on
    the key size. This type of attack is used to steal bitcoins from honest users.
    First of all, the attacker creates the list of bitcoin addresses having some funds
    into them using the current set of unused transaction outputs associated with
    the current status of the blockchain. After that, the attacker selects some set
    of secret keys from the extracted transaction list and build the secret key list.
    After that a secret key is selected from the secret key list, and generates a
    corresponding address. the generated address is then get matched with the addresses
    from the address list generated in the first stage. If the address is found, then
    the attacker publishes a transaction to get the benefit of the funds from the
    compromised address to their address. All these operations are repeated for all
    secret keys from the list (Vokerla et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Selfish Mining Attack
  prefs: []
  type: TYPE_NORMAL
- en: This attack is also known as Block Withholding Attack. In this attack, an attacker
    having malicious intentions harms the integrity of the network. In the case of
    selfish mining, only malicious miners are being referred. The malicious miner
    hides/withhold the mined block and harms the other honest miners and lets them
    loos the trust in the integrity of the blockchain network. In this scenario, honest
    miners get confused and waste their assets in fruitless courses. It becomes very
    tough to add valid blocks because of the addition of invalid blocks or withholding
    the valid blocks by the miners. Selfish miners will maintain their private chain
    and reveal it for getting more rewards that will be assured because of their contributive
    approach. A random assignment of blockchain branch to the miners and setting threshold
    limit for mining pool can eliminate this type of attack (Vokerla et al., 2019;
    Saad, et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Sybil Attack
  prefs: []
  type: TYPE_NORMAL
- en: An attacker compromises the client system and performs the transaction over
    the blockchain in this category of attack. A dummy software or multiple fake accounts,
    nodes, or computers can be treated as a medium to compromise the part of the blockchain.
    It is a community-based attack performed by a group of compromised nodes. The
    word “Sybil” comes from the name of a woman having a disease named multiple personality
    disorder”Sybil Dorsett”. If an attacker creates many fake accounts, they can refuse
    to receive or transmit blocks to prevent other users to perform block transmission.
    If multiple account creation gives the ability to control the maximum required
    hash rate of computing strength, then the majority attack can be initiated by
    the attackers. Elimination of security enforcement against this type of malicious
    activity over the blockchain association can be performed to make the attack process
    very impractical by using different types of consensus algorithms like proof of
    stake, proof of work, or delegated proof of stake. Raising the cost of creating
    a new identity, implementing trust management protocol before new identity creation,
    and weighting the user power based on reputation can highly reduce the possibility
    to launch the attack over a blockchain network (Vokerla et al.,2019).
  prefs: []
  type: TYPE_NORMAL
- en: Fork Problem
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain network is based on a decentralized group of parties (nodes) in collaboration
    with each other. This problem of Fork comes into existence when blockchain software
    is involved in an update process. Each node of a blockchain network verifies the
    public ledger of blockchain and ensures the blockchain network security. When
    a new software update is launched, the agreement rules also get changed for each
    node participating in the blockchain system. This event causes the partition of
    all nodes into two groups. one group accepts the updates and agreed to follow
    newly updated transaction rules and the other group discards the update and continues
    to follow the old transaction rules. This conflict arises the chain to be split
    (Fork) into two parts (Lin, I. C., & Liao, T. C.,2017).
  prefs: []
  type: TYPE_NORMAL
- en: The opinion difference about new protocol in the community results in two different
    types of approaches (problems). The Hard Fork problem refers to the part of a
    community that does not agree on the upgraded version of the protocol or new agreement.
    If there is enough strength of old nodes rejecting software upgrades, they could
    continue to follow the completely different chain even when the computation power
    of new nodes is stronger in comparison to old nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Soft Fork can be represented as backward compatible. When the community accepts
    the new agreement, it is not compatible with the old protocols and refuses to
    mine the old chain. The majority of nodes should be upgraded with the new protocol
    to get the Soft Fork work and make the network more secure after Fork. Due to
    the difference between the computation power of both types of nodes, new nodes
    never agreed to approve blocks mined by old nodes as well as the same chain is
    continued to be held by both types of nodes. like a hard fork, the soft fork never
    reduces the effectiveness and integrity of the system at the time of upgrade.
    Soft Fork is being used in both Bitcoin and Ethereum blockchain(Lin & Liao,2017).
  prefs: []
  type: TYPE_NORMAL
- en: SUGGESTIONS
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain as a disseminated decentralized network intends to offer immutability
    and data security. With no central power to authenticate and validate the transactions,
    all transactions in a blockchain are measured to be protected and validated. As
    blockchain has been built in a decentralized model and accounts for huge volume
    transactions in instantaneous, there may be the possibility of the complexity
    of what is the reality. The key is to obtain consensus on one approach or another,
    or else malevolent possessions like double-spending assault can occur. Thus, there
    is a role of the consensus algorithm arrive.
  prefs: []
  type: TYPE_NORMAL
- en: A consensus algorithm is a method in computer science to set up agreement lying
    on a single data value crossways distributed evolution of systems. As a protocol,
    in a consensus algorithm, all the team or users of the blockchain network move
    towards a general agreement (consensus) lying on the current data position of
    the ledger and be able to believe unidentified peers in a distributed computing
    background. The consensus algorithms are very much essential in blockchain networks
    as an essential element because they maintain the integrity and security of these
    distributed computing systems. In the blockchain, the way to accomplish consensus
    surrounded by unreliable nodes is a revolution of the Byzantine Generals (BG)
    Problem(Lamport et al.,1982). In this trouble, a group of generals controls a
    segment of the Byzantine army on all sides of the city. Various generals are in
    favour to attack whereas other generals have a preference to retreat. Nevertheless,
    the assault would be unsuccessful if barely part of the generals assaults the
    city. Consequently, they have to accomplish conformity (or agreement) to attack
    otherwise retreat. The way to achieve a consensus in distributed surroundings
    is a challenge. Same confront for blockchain also due to its network is distributed.
    There would be a need to make sure ledgers in unlike nodes are consistent.
  prefs: []
  type: TYPE_NORMAL
- en: There are several general approaches to get to a consensus in the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Approaches to Consensus
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Work (PoW)
  prefs: []
  type: TYPE_NORMAL
- en: Proof of work is a consensus approach applied in the Bitcoin Net (Nakamoto S.,
    2008). In a decentralized set of connections, somebody has to be chosen for the
    documentation of the transactions. The best way is random selection. Nevertheless,
    a random choice is vulnerable to assault. Subsequently, in case of node desire
    to bring out a block of transactions, a large number of labor has to be done to
    establish that the node is not probable to attack the system.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Typical Consensus Algorithms Comparison
  prefs: []
  type: TYPE_NORMAL
- en: '| Property | PoW |    PoS |  |   PBFT |   DPOS |  |   Ripple |  | Tendermint
    |'
  prefs: []
  type: TYPE_TB
- en: '| Node identity management | open no'
  prefs: []
  type: TYPE_NORMAL
- en: <25%
  prefs: []
  type: TYPE_NORMAL
- en: computing power
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin [2] | open partial
  prefs: []
  type: TYPE_NORMAL
- en: <51%
  prefs: []
  type: TYPE_NORMAL
- en: stake
  prefs: []
  type: TYPE_NORMAL
- en: Peercoin | [21] | permissioned yes
  prefs: []
  type: TYPE_NORMAL
- en: <33.3%
  prefs: []
  type: TYPE_NORMAL
- en: faulty replicas
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Fabric [18] | open partial
  prefs: []
  type: TYPE_NORMAL
- en: <51%
  prefs: []
  type: TYPE_NORMAL
- en: validators
  prefs: []
  type: TYPE_NORMAL
- en: Bitshares | [22] | open yes
  prefs: []
  type: TYPE_NORMAL
- en: <20%
  prefs: []
  type: TYPE_NORMAL
- en: faulty UNL
  prefs: []
  type: TYPE_NORMAL
- en: Ripple | nodes [23] | in | permissioned yes
  prefs: []
  type: TYPE_NORMAL
- en: <33.3%
  prefs: []
  type: TYPE_NORMAL
- en: byzantine voting power
  prefs: []
  type: TYPE_NORMAL
- en: Tendermint [24] |
  prefs: []
  type: TYPE_NORMAL
- en: '| Energy saving |'
  prefs: []
  type: TYPE_TB
- en: '| Tolerated power of the adversary |'
  prefs: []
  type: TYPE_TB
- en: '| Example |'
  prefs: []
  type: TYPE_TB
- en: '| Figure 7\. Proof of Work process |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f07](i/ch009.f07.png) |'
  prefs: []
  type: TYPE_TB
- en: Figure 7 shows the development of blockchain branches (the branch which would
    be longest to be admitted as the major chain whereas the shorter one would be
    abandoned) calculations. In PoW, the network's each node computes a block header’s
    hash. A nonce and miners of the block header would modify the nonce very often
    to get dissimilar hash values. The consensus has desirable that the computed value
    necessarily equal to or lesser than a certain specified value. As soon as one
    node accomplishes the objective, it would transmit the block to additional nodes
    and every single node must mutually finalize the accuracy of the hash value. In
    case of the block is validated, supplementary miners would add on the validated
    block to their blockchain. Nodes that compute the hash describes the miners and
    the PoW process has been known as mining in Bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized network’s validated blocks might be produced all together when
    numerous nodes find the appropriate nonce just about at a similar time. Due to
    this, branches possibly will generate as shown in Figure 7\. Though, it is doubtful
    that two opposing forks will produce the next block concurrently.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Stake as consensus may be at variance with the PoW mining consensus
    utilizing a method wherever blocks are authenticated based on the venture of the
    network applicants. At this time, dissimilar executing hash functions, authenticators
    stake resources principally in the appearance of tokens or digital money or tokens.
    Every block's authenticator is further randomly chosen from the stakeholders due
    to the quantity of computational power owed.
  prefs: []
  type: TYPE_NORMAL
- en: All PoS scheme may put into practice the algorithm in unlike ways, usually,
    the blockchain is protected by a pseudo-random selection process with the aim
    of a node's allotment and the distribution– determining the assurance of the party
    to make sure the network secure. The Ethereum blockchain, which has been considered
    as largest blockchain network in the world in terms of developer actions, has
    begun to move from PoW algorithm to PoS to put an effort to improve the network's
    scalability in addition to reduce unnecessary electricity wastage.
  prefs: []
  type: TYPE_NORMAL
- en: Practical Byzantine Fault Tolerance
  prefs: []
  type: TYPE_NORMAL
- en: 'It is a replication algorithm to accept byzantine faults (Miguel & Barbara,1999).
    In this algorithm, Hyperledger Fabric makes use of the PBFT like its consensus
    algorithm as PBFT could hold upto1/3malevolent byzantine limitation. A novel block
    is identified in around. In all rounds, a man would be chosen according to a variety
    of rules. Besides, it is accountable for organizing the transaction. The entire
    process could be separated into three segments: pre-prepared, prepared, and commit.
    In all phases, a node would come into the next phase if it has acknowledged votes
    from over 2/3 of all nodes. As a result, PBFT has needed that each node is to
    be recognized to the network. Similar to PBFT, (SCP) Stellar Consensus Protocol
    (Mazieres D.,2015) is as well a Byzantine fault-tolerant protocol. Within PBFT,
    all nodes have to inquiry other nodes where as SCP gives contributors the right
    to select other contributors set to believe. Customers need not be concerned about
    the fraudulent entrust as they could be designated out without a doubt. DPOS is
    the spine of bit shares.'
  prefs: []
  type: TYPE_NORMAL
- en: Ripple
  prefs: []
  type: TYPE_NORMAL
- en: 'Ripple is a consensus protocol that makes use of jointly-trusted subnetworks
    surrounded by the larger network (Schwartz et al., 2014). In this case network''s
    nodes are separated into two categories: server for taking part in consensus procedure
    and client for just transporting funds. all servers have a Unique Node List (UNL).
    It is essential to the server. As soon as determining whether to set a transaction
    keen on the ledger, the server would inquiry the nodes in UNL, and in case of
    acknowledged agreements have accomplished 80%, the transaction would be filled
    into the ledger in support of a node, the ledger will remain accurate provided
    that the percentage of damaged nodesinUNLisbelow20%.'
  prefs: []
  type: TYPE_NORMAL
- en: Tendermint
  prefs: []
  type: TYPE_NORMAL
- en: 'Tender mint is a byzantine consensus that identifies afresh block in around.
    A proposer is probably chosen to broadcast the not finalized block in the current
    round. It might be subcategorized into three steps: 1) the Prevote step. Certification
    authorities choose whether to transmit a pre-vote for the projected block.2) the
    Pre-commit step. In case of the node has received above 2/3 of votes lying on
    the projected block, it transmits a pre-commit in favor of that block. Otherwise
    in case of the node has acknowledged more than 2/3 of recommits, it goes through
    the entrust step. 3) Commit step. The node authenticates the block and transmits
    a commit for the validated block. In case of the node has acknowledged 2/3 of
    the commits, it admits the block. In distinction to PBFT, nodes need to restrict
    their coins to turn into validators. Once an authenticator or validator is brought
    into being to be fraudulent, it would be penalized.'
  prefs: []
  type: TYPE_NORMAL
- en: A high-quality consensus algorithm indicates safety, efficiency, and expediency.in
    recent times, several accomplishments have been over to get better consensus algorithms
    within the blockchain. Fresh consensus protocols are developed intending to resolve
    some particular of blockchain. The foremost proposal of PeerCensus(Decker et al.,2016)
    is to decouple block formation and transaction finalization so that the consensus
    speed can be significantly improved.
  prefs: []
  type: TYPE_NORMAL
- en: POSSIBLE FUTURE DIRECTIONS
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain has revealed its prospective in business and academia. The research
    focuses its potential future guidelines concerning four fields: blockchain testing,
    the tendency to centralization, big data analytics, and IoT with blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain Testing
  prefs: []
  type: TYPE_NORMAL
- en: In recent times, a different category of blockchains has come into view and
    more than 700 cryptocurrencies are recorded in Crypto-currency market capitalizations,
    2017 so far. Nevertheless, several developers might forge their blockchain presentation
    to pull towards investors determined by the enormous profit. In addition to that,
    as soon as users desire to merge blockchain into trade, It must be clear that
    which blockchain fits their requirements. So blockchain testing method desires
    to be in a position to examine dissimilar blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain testing could be segregated into two segments: standardization and
    testing stage. In the standardization segment, every criterion has to be completed
    and settled. Even as a blockchain is intuitive, it could be experienced with the
    approved criteria to apply if the blockchain efforts are fine as developer desire.
    Since for testing segment, blockchain testing requirements to be performed with
    unlike criteria. For instance, a user who is responsible for online trade be concerned
    regarding the blockchain''s throughput, thus the examination needs investigation
    of the average time from a client to send a transaction to another transaction
    and is bundled into the blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Tendency to Centralization
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain is intended to be a decentralized system. Though, there is a tendency
    that miners be federal in the mining group. So far, the top 5 mining groups together
    own superior to 51% of the inclusive hash control in the Bitcoin network. Excluding
    that, the selfish mining approach demonstrated that groups over 25% of whole computing
    control could obtain more profits than fair distribution. Balanced miners would
    be involved in the selfish group and at last, the group could without difficulty
    exceed 51% of the entire power. Since the blockchain is not projected to serve
    a small number of organizations, several techniques should be projected to resolve
    this trouble.
  prefs: []
  type: TYPE_NORMAL
- en: Big Data Analytics
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain could be well shared with big data. Now, it is just about to classify
    the grouping into two categories: data management addition to data analytics.
    In support of data management, blockchain could be employed to accumulate important
    data since it is dispersed and safe. Blockchain may perhaps also ensure the data
    is novel. For instance, in the case of blockchain is employed to accumulate patients''
    health details, this information could not have interfered and it would be very
    difficult to steal an individual''s private contents. While as it moves toward
    data analytics, blockchain transactions could be applied for big data analytics.'
  prefs: []
  type: TYPE_NORMAL
- en: IoT and Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: IoT represents the interconnection of disparate things. The term object refers
    to a human, sensor, or possibly anything that can request or provide a service.
    The purpose of IoT is to connect an object to object, the object to human, and
    human to human (Mosenia & Jha,2016). It's convenient for identification, management,
    and control. Various IoT applications main focus on automating their tasks and
    empower the objects. Automating the things to perform a different task to support
    various IOT applications. Main focus to make the object empower, to operate without
    any human involvement.
  prefs: []
  type: TYPE_NORMAL
- en: IoT Security Goal
  prefs: []
  type: TYPE_NORMAL
- en: 'IoT applications promise to bring cosmic change into our lives. If we remove
    the obstacle of security threat then IOT could help to make our life smart and
    convenient. With the aid of exhaustive computing technology, wireless network,
    and superior sensor IoT has become the next frontier. The security triad, distinguished
    technique put into services by use of three main regions which are: data integrity
    confidentiality, and availability. Data confidentiality is the ability to provide
    confidence to the user about the privacy of the confidential data by using the
    different technique so that its disclosure to the unapproved party is prevented
    and can be ingresses by the authorized users only. Data confidentiality is usually
    supported through different mechanisms such as data encryption or access control
    (Zhang et al,,2019). Data integrity refers to the accuracy and consistency of
    data over its lifecycle. It can be indicated by the absence of modification between
    two objects or between two upgrades of stored data information. Data integrity
    can be verified through checksum and cycle redundancy check. Data availability
    ensures the immediate access of authorized party to their information resources
    not only in the normal conditions but also in adverse conditions (Sharma et al.
    2019; Adat & Gupta,2018)'
  prefs: []
  type: TYPE_NORMAL
- en: IoT Security Using Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: Today 5 billion devices have been connected through IoT accounts, and this number
    will continue to increase and reach 29 billion by 2022 (Reyna et al., 2018). Every
    object generates and transfers data on the Internet. As IoT has distributive architecture
    and it is an essential summons for security. Typically, in an IoT network, each
    node is a possible point of risk that can be utilized to launch cyber attacks.
    In the presence of a data vulnerability attack, IoT data cannot be exploited properly.
    Besides, with the involvement of much smart application of IoT where devices exchange
    data, computational power or other resources, data security becomes critical (Sridhar
    & Smys,,2017). Blockchain technology has become a very effective solution for
    all security issues. Blockchain and IoT are two attractive technologies that focus
    on improving the overall transparency, visibility, level of comfort, and level
    of trust for the users. The implementation of blockchain into IoT brings some
    refinements such as decentralization and scalability, identity, autonomy, reliability,
    security, and market of services The basic idea behind the blockchain is simple,
    it used distributed ledger technology. The entries in the blockchain are chronological
    and time-stamped. Each entry in the ledger is tightly coupled with the previous
    entry using cryptographic hash keys (Panarello et al., 2018).
  prefs: []
  type: TYPE_NORMAL
- en: IoT and Blockchain Integration
  prefs: []
  type: TYPE_NORMAL
- en: 'IoT can get benefits from the various features delivered by blockchain and
    can help to further improvement of existing IoT technologies. Blockchain can perform
    an important role in securing data in IoT applications. At the current time, these
    two technologies have the most prominent topics in research. The combination of
    this approach can bring the revolution. (Reyna et al., 2018). Few benefits of
    IoT and Blockchain integration are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '• Identity: Participants can identify every single device using a common block
    system. Data provided and store in the system is unchangeable and uniquely recognize
    actual data that was provided by a device. Subsequently, for IoT applications,
    a blockchain can provide an authorized and trustful environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Decentralization and scalability: decentralization of the architecture help
    in the improvement of fault tolerance and system scalability. Other benefits of
    the shift from a centralized architecture to a Peer-2-Peer distributed will remove
    central points of failures and tailback.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Autonomy: Blockchain helps IoT devices to interrelate one device to another
    without the assistance of any server. Blockchain technology empowers next-generation
    IOT application features, making it an autonomous object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Reliability: With the support of blockchain, IoT information can remain as
    it has been uploaded. Blockchain systems are capable to check the data integrity
    and provide the satisfaction that no one has altered the data. The most important
    aspect of blockchain is to bring reliable IoT.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Speed: Within a minute, A blockchain distributes the transaction across the
    whole network and any time throughout the day it can be processed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '• Safely code deployment: Blockchain provides unchangeable storage. Relevant
    code can be uploaded on the device safely.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Figure 8\. Benefits of IoT and Blockchain Integration |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f08](i/ch009.f08.png) |'
  prefs: []
  type: TYPE_TB
- en: 'When integrating IoT with blockchain, it has to be determined wherever these
    interactions will take place. There are varieties of integration scheme:'
  prefs: []
  type: TYPE_NORMAL
- en: IoT-IoT
  prefs: []
  type: TYPE_NORMAL
- en: As it can work offline therefore it fastest in terms of security as well as
    latency. IoT transactions can happen without using blockchain because barely a
    component of IoT data stored in the blockchain as shown in figure 9\. This approach
    is useful when with secure IoT data where IoT interaction does perform with low
    data latency.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figures 9\. IOT-IOT to IOT –Blockchain Integration |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-7589-5.ch009.f09](i/ch009.f09.png) |'
  prefs: []
  type: TYPE_TB
- en: IoT-Blockchain
  prefs: []
  type: TYPE_NORMAL
- en: When this approach has been applied, all interactions happen via blockchain.
    All selected interactions are traceable as their record can be accessed in the
    blockchain by using this approach. It also ensures the autonomy of IoT devices.
    One of the popular complications in blockchain to record all transactions that
    increase bandwidth and data. Even all IoT data associated with this transaction
    should also be stored in the blockchain as represented in Figure 9.
  prefs: []
  type: TYPE_NORMAL
- en: CONCLUSION
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain has revealed its prospective for transforming conventional business
    with its key features: devolution, persistency, secrecy and audit ability. This
    research explores a comprehensive summary on blockchain. In first phase, it highlights
    a general idea of blockchain technologies together with blockchain architecture
    and main characteristics of blockchain.. Furthermore, in next phase research briefs
    several security challenges and problems that would hinder blockchain development.
    In addition to that, research discusses the distinctive consensus algorithms used
    in blockchain to sustain the integrity and security of these distributed computing
    systems. These conscious protocols were analyzed and evaluated in different perspective.
    Various potential future directions have been discussed like big data analytics
    with blockchain, IoT and blockchain integration. At the present time blockchain
    supported applications are rising up and this research put an effort to conduct
    in-depth explorations on blockchain-based applications in various business area
    at present and in the future along with security challenges.'
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs: []
  type: TYPE_NORMAL
- en: 'Adat, V., & Gupta, B. B. (2018). Security in Internet of Things: Issues, challenges,
    taxonomy, and architecture. Telecommunication Systems , 67(3), 423–441\. doi:10.1007/s11235-017-0345-9'
  prefs: []
  type: TYPE_NORMAL
- en: 'Badev, A., & Chen, M. (2014). Bitcoin: Technical Background and Data Analysis
    . Academic Press.'
  prefs: []
  type: TYPE_NORMAL
- en: Bergstra, J. A., & de Leeuw, K. (2013). Questions related to Bitcoin and other
    Informational Money. arXivPrepr. arXiv1305.5956.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chowdhury, M. J. M., Ferdous, M. S., Biswas, K., Chowdhury, N., Kayes, A. S.
    M., Alazab, M., & Watters, P. (2019). A comparative analysis of distributed ledger
    technology platforms. IEEE Access: Practical Innovations, Open Solutions , 7,
    167930–167943\. doi:10.1109/ACCESS.2019.2953729'
  prefs: []
  type: TYPE_NORMAL
- en: 'Decker, C., Seidel, J., & Wattenhofer, R. (2016). Bitcoin meets strong consistency.
    In Proceedings of the 17th International Conference on Dis- tributed Computing
    and Networking (ICDCN). Singapore: ACM.'
  prefs: []
  type: TYPE_NORMAL
- en: Fanning, K., & Centers, D. P. (2016). Blockchain and its coming impact on financial
    services. Journal of Corporate Accounting & Finance , 27(5), 53–57\. doi:10.1002/jcaf.22179
  prefs: []
  type: TYPE_NORMAL
- en: JunejaA.MarefatM. (2018). Leveraging blockchain for retraining deep learning
    architecture in patient-specific arrhythmia classification. 2018 IEEE EMBS International
    Conference on Biomedical and Health Informatics, BHI 2018, 393–397\. 10.1109/BHI.2018.8333451
  prefs: []
  type: TYPE_NORMAL
- en: 'KosbaA.MillerA.ShiE.WenZ.PapamanthouC. (2016). Hawk: The blockchain model of
    cryptography and privacy-preserving smart contracts. 2016 IEEE Symposium on Security
    and Privacy (SP’16), 839–858\. 10.1109/SP.2016.55'
  prefs: []
  type: TYPE_NORMAL
- en: Lamport, L., Shostak, R., & Pease, M. (1982). The byzantine generals problem
    . ACM Transactions on Programming Languages and Systems , 4(3), 382–401\. doi:10.1145/357172.357176
  prefs: []
  type: TYPE_NORMAL
- en: 'Legalwise. (2019). Rise of Smart Contracts with Blockchain Technology in Australia
    and New Zealand. Available at: https://www.legalwiseseminars.com.au/news/smart-contracts-and-the-law/'
  prefs: []
  type: TYPE_NORMAL
- en: Lin, I. C., & Liao, T. C. (2017). A survey of blockchain security issues and
    challenges. International Journal of Network Security , 19(5), 653–659.
  prefs: []
  type: TYPE_NORMAL
- en: 'Liu, C., Ranjan, R., Yang, C., Zhang, X., Wang, L., & Chen, J. (2015). MuR-DPA:
    Top-down Levelled Multi-replica Merkle Hash Tree Based Secure Public Auditing
    for Dynamic Big Data Storage on Cloud. IEEE Trans. Comput.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mazieres, D. (2015). The stellar consensus protocol: A federated model for
    internet-level consensus . Stellar Development Foundation.'
  prefs: []
  type: TYPE_NORMAL
- en: Mendling, J., Weber, I., Aalst, W. V. D., Brocke, J. V., Cabanillas, C., Daniel,
    F., Debois, S., Ciccio, C. D., Dumas, M., Dustdar, S., Gal, A., García-Bañuelos,
    L., Governatori, G., Hull, R., Rosa, M. L., Leopold, H., Leymann, F., Recker,
    J., Reichert, M., & Zhu, L. (2018). Blockchains for business process management-challenges
    and opportunities . ACM Transactions on Management Information Systems , 9(1),
    4\. doi:10.1145/3183367
  prefs: []
  type: TYPE_NORMAL
- en: MiguelC.BarbaraL. (1999). Practical byzantine fault tolerance. Proceedings of
    the Third Symposium on Operating Systems Design and Implementation, 99, 173–186.
  prefs: []
  type: TYPE_NORMAL
- en: Mills, D. C., Wang, K., Malone, B., Ravi, A., Marquardt, J., Badev, A. I., ...
    Ellithorpe, M. (2016). Distributed ledger technology in payments, clearing, and
    settlement. Academic Press.
  prefs: []
  type: TYPE_NORMAL
- en: Mosenia, A., & Jha, N. K. (2016). A comprehensive study of security of internet-of-things.
    IEEE Transactions on Emerging Topics in Computing , 5(4), 586–602\. doi:10.1109/TETC.2016.2606384
  prefs: []
  type: TYPE_NORMAL
- en: Mota, A. V., Azam, S., Yeo, K. C., Shanmugam, B., & Kannoorpatti, K. (2017).
    Comparative analysis of different techniques of encryption for secured data transmission.
    IEEE International Conference on Power, Control, Signals and Instrumentation Engineering,
    ICPCSI. 10.1109/ICPCSI.2017.8392158
  prefs: []
  type: TYPE_NORMAL
- en: 'Nakamoto, S. (2008). Bitcoin: A peer-to-peer electronic cash system. Academic
    Press.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Narayanan, A., Bonneau, J., Felten, E., Miller, A., & Goldfeder, S. (2016).
    Bitcoin and Cryptocurrency Technologies: A Comprehensive Introduction . Princeton
    University Press.'
  prefs: []
  type: TYPE_NORMAL
- en: Nguyen, Q. K. (2016). Blockchain-A Financial Technology for Future Sustainable
    Development. Proceedings – 3rd International Conference on Green Technology and
    Sustainable Development, GTSD 2016, 51–54.
  prefs: []
  type: TYPE_NORMAL
- en: Paech, P. (2017). The governance of blockchain financial networks . The Modern
    Law Review , 80(6), 1073–1110\. doi:10.1111/1468-2230.12303
  prefs: []
  type: TYPE_NORMAL
- en: 'Panarello, A., Tapas, N., Merlino, G., Longo, F., & Puliafito, A. (2018). Blockchain
    and iot integration: A systematic survey. Sensors (Basel) , 18(8), 2575\. doi:10.3390/s18082575'
  prefs: []
  type: TYPE_NORMAL
- en: 'Peters, G. W., & Panayi, E. (2016). Understanding modern banking ledgers through
    blockchain technologies: future of transaction processing and smart contracts
    on the internet of money. New Economic Windows . doi:10.1007/978-3-319-42448-4_13'
  prefs: []
  type: TYPE_NORMAL
- en: Reyna, A., Martín, C., Chen, J., Soler, E., & Díaz, M. (2018). On blockchain
    and its integration with IoT. Challenges and opportunities. Future Generation
    Computer Systems , 88, 173–190\. doi:10.1016/j.future.2018.05.046
  prefs: []
  type: TYPE_NORMAL
- en: 'Saad, M., Spaulding, J., Njilla, L., Kamhoua, C., Shetty, S., Nyang, D., &
    Mohaisen, A. (2019). Exploring the attack surface of blockchain: A systematic
    overview. arXiv preprint arXiv:1904.03487.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sajana, P., Sindhu, M., & Sethumadhavan, M. (2018). On blockchain applications:
    Hyperledger fabric and ethereum. International Journal of Pure and Applied Mathematics
    , 118(18), 2965–2970.'
  prefs: []
  type: TYPE_NORMAL
- en: Schwartz, D., Youngs, N., & Britto, A. (2014). The ripple protocol consensus
    algorithm. Ripple Labs Inc White Paper.
  prefs: []
  type: TYPE_NORMAL
- en: Sharma, P., Tripathi, S. S., & Panda, R. (2019). A Survey of Security Issues
    in Internet of Things. Academic Press.
  prefs: []
  type: TYPE_NORMAL
- en: SridharS.SmysS. (2017, January). Intelligent security framework for iot devices
    cryptography based end-to-end security architecture. In 2017 International Conference
    on Inventive Systems and Control (ICISC) (pp. 1-5). IEEE. 10.1109/ICISC.2017.8068718
  prefs: []
  type: TYPE_NORMAL
- en: Subramanian, H. (2017). Decentralized blockchain-based electronic marketplaces.
    Communications of the ACM , 61(1), 78–84\. doi:10.1145/3158333
  prefs: []
  type: TYPE_NORMAL
- en: VokerlaR. R.ShanmugamB.AzamS.KarimA.De BoerF.JonkmanM.FaisalF. (2019). An Overview
    of Blockchain Applications and Attacks. In 2019 International Conference on Vision
    Towards Emerging Trends in Communication and Networking (ViTECoN) (pp. 1-6). IEEE.
    10.1109/ViTECoN.2019.8899450
  prefs: []
  type: TYPE_NORMAL
- en: 'WatanabeH.FujimuraS.NakadairaA.MiyazakiY.AkutsuA.KishigamiJ. (2016). Blockchain
    contract: Securing a blockchain applied to smart contracts. IEEE International
    Conference on Consumer Electronics (ICCE’16), 467–468\. 10.1109/ICCE.2016.7430693'
  prefs: []
  type: TYPE_NORMAL
- en: Zhang, R., Xue, R., & Liu, L. (2019). Security and privacy on blockchain. ACM
    Computing Surveys , 52(3), 1–34\. doi:10.1145/3316481
  prefs: []
  type: TYPE_NORMAL
