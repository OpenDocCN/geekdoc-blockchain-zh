- en: '[CHAPTER 3](toc.xhtml#c03)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Understanding the Bitcoin Network](toc.xhtml#c03)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, you learned about technological developments that led
    to the development of Bitcoin. You also learned about the events that happened
    since the Bitcoin Whitepaper was written and tried to understand the need for
    Bitcoin, the problem it solves, and how solving the problem may change the world.
  prefs: []
  type: TYPE_NORMAL
- en: When we pay bitcoin from our wallet to someone else’s address, a transaction
    is created and broadcasted on the Bitcoin network. This goes into mempool, and
    a miner mines a block in which this transaction gets included. To make this happen,
    the Bitcoin network needs to communicate with each other and publish these transactions
    and blocks on the network. Bitcoin network plays an important role in making the
    network decentralized.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will first learn about the different types of nodes that
    constitute the Bitcoin network. We will understand why different types of nodes
    are required and how they interact with each other. We will then understand the
    Bitcoin consensus network, its building blocks, and why each component of the
    consensus network is required.
  prefs: []
  type: TYPE_NORMAL
- en: '[Structure](toc.xhtml#s41a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Bitcoin physical network topology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mining nodes
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Pool mining
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Solo mining
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Full node
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Simplified Payment Verification (SPV)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Bitcoin consensus network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transactions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Consensus rules
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Proof –of work (PoW)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Verifying nodes
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Mempool
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptography
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Gossip protocol
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Bitcoin network security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Objectives](toc.xhtml#s42a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The objective of this chapter is to give readers a high-level understanding
    of the Bitcoin network. This will give you an understanding of the depth of Bitcoin’s
    core concepts, like decentralization and censorship resistance, are integrated
    into its design. Additionally, it will help you visualize and grasp the content
    in the upcoming chapters, where we will go deeper into the technology and do programming.
  prefs: []
  type: TYPE_NORMAL
- en: It will also help you understand what might be going on in the background when
    you make a payment and how transactions get included in the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: '[Bitcoin physical network topology](toc.xhtml#s43a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Bitcoin network consists of nodes that interact with each other to send
    and receive transactions and blocks. A node can join or leave the Bitcoin network
    anytime.
  prefs: []
  type: TYPE_NORMAL
- en: A transaction is like a ledger entry containing the source of funding, the receiver
    of funds, and the amount transferred. These transactions are added to the block
    by a miner and broadcast to other nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following illustration shows Bitcoin network topology:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.1:** Bitcoin network topology'
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding figure, miners create a block and forward it to other nodes.
    A solo miner also receives blocks because it is also a full node. Full nodes are
    responsible for verifying transactions and blocks and forwarding them. SPV nodes
    are lightweight nodes that depend on the full nodes for receiving the necessary
    information.
  prefs: []
  type: TYPE_NORMAL
- en: Pool mining nodes connect with the mining pool server. The pool mining nodes
    receive jobs from the server and try to mine blocks based on the job they receive.
    If it is successful, Pool miner sends the block to the server. The mining pool
    server also receives blocks and transactions from other nodes, which is why there
    is an arrow from the pool mining node to the mining pool server. Bitcoin network
    is otherwise peer-to-peer and non-hierarchical.
  prefs: []
  type: TYPE_NORMAL
- en: '[Mining nodes](toc.xhtml#s44a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mining nodes compete in solving a cryptographic puzzle and whichever node solves
    the puzzle is able to construct a block with choosen transactions. A transaction
    gets confirmed when it gets included in a block. So, mining is an act of transaction
    confirmation.
  prefs: []
  type: TYPE_NORMAL
- en: Solving a cryptographic puzzle to confirm a transaction by using computation
    power is called **proof –of work**.
  prefs: []
  type: TYPE_NORMAL
- en: A miner can decide to do solo mining or join a mining pool.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an image of mining equipment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.2:** Mining equipment in action'
  prefs: []
  type: TYPE_NORMAL
- en: '[Pool mining](toc.xhtml#s45a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mining is only profitable nowadays if done in a pool. In this case, miners join
    a mining pool to collaborate in the mining effort. Each miner in the pool tries
    to solve a cryptographic puzzle, and the mining pool is aware of the computational
    power contributed by the miner. Miners solve the cryptographic puzzle, and the
    mining pool gets the block reward. The mining pool then shares the block reward
    with all the miners in the pool by dividing it based on their contribution to
    computational power. Miners who solve the cryptographic puzzle do not get any
    special advantage. This setup is beneficial for all the miners because solving
    the puzzle is based on probability determined by the contribution in computation
    power. Miners do not interact with the network directly; instead, they are given
    a job by the mining pool server.
  prefs: []
  type: TYPE_NORMAL
- en: '[Solo mining](toc.xhtml#s46a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitcoin computation requirement has become so high that it is virtually impossible
    to be able to mine blocks individually. However, there is one benefit. Currently,
    there are a few mining pools that have almost all the computational power of the
    network. It will only take a few mining pools to join hands, and the Bitcoin network
    will have a 51% attack. If most nodes were solo miners, this was not possible.
    So, by doing solo mining, we can make mining more decentralized.
  prefs: []
  type: TYPE_NORMAL
- en: '[Full node](toc.xhtml#s47a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Full nodes are the verifying nodes that keep the copy of the blockchain and
    verify all the transactions and blocks received by them. They also forward blocks
    and transactions to other nodes.
  prefs: []
  type: TYPE_NORMAL
- en: '[Simplified Payment Verification (SPV)](toc.xhtml#s48a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SPV nodes are lightweight nodes, which means they do not maintain the whole
    blockchain and cannot verify a block without the help of the Full node. SPVs require
    very little disk space and can be set up on embedded devices or can execute in
    memory, making them cheaper to maintain and carry.
  prefs: []
  type: TYPE_NORMAL
- en: '[Bitcoin consensus network](toc.xhtml#s49a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitcoin consensus network is based on the proof –of work consensus mechanism.
    Transactions are created and published on the network using gossip protocol with
    the help of a node. Verifying nodes or full nodes verify the received transaction
    and then add it to their mempool. A miner uses their computational power to solve
    a cryptographic puzzle in order to create a block containing the transactions
    it wants to include in the block. The block is chained with the previous block.
    The created block is the proof –of work, and the chain of blocks forms blockchain.
    The miner then publishes the newly created block to the Bitcoin network using
    the gossip protocol. Verifying nodes then receive the block, verify it based on
    consensus rules, and forward it to the connected nodes again using the gossip
    protocol. All these activities use cryptography.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the illustration of the Bitcoin consensus network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.3:** Bitcoin Consensus Network'
  prefs: []
  type: TYPE_NORMAL
- en: 'Key components of the Bitcoin consensus network are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Transactions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consensus rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proof –of work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Validating nodes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mempool
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptography
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gossip protocol
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are explained in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: '[Transactions](toc.xhtml#s50a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Transaction is the single record of spending. It contains three things:'
  prefs: []
  type: TYPE_NORMAL
- en: Sources of funding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Receivers of the fund
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The amount received by each of the receivers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following is an illustration of transaction:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.4:** Bitcoin transaction funding and payments'
  prefs: []
  type: TYPE_NORMAL
- en: '[Blockchain](toc.xhtml#s51a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blockchain is the immutable sequence of blocks that records transactions. The
    chain of blocks also is in time sequence. Each block is linked to its previous
    block. The end of the chain is the recent block.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the illustration of blockchain based on what you have learned:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.5:** Structure of a blockchain'
  prefs: []
  type: TYPE_NORMAL
- en: '[Consensus rules](toc.xhtml#s52a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitcoin network, like a network protocol, has agreed-upon rules for blocks and
    transactions. These rules are supposed to be protected by the Miners through the
    proof –of work consensus mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: '[Proof of work (PoW)](toc.xhtml#s53a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Proof –of work or PoW is a mechanism that was created to prevent denial-of-service
    attacks by forcing the attacker to spend computational power. This makes denial-of-service
    attack non-viable for the attacker. Bitcoin uses proof –of work to make double-spending
    very difficult and costly.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be understood with the following analogy:'
  prefs: []
  type: TYPE_NORMAL
- en: In the olden times, there were houses, temples, wells, etc., which were easy
    to replicate, but there were also monuments, fortresses, and so on, which were
    unique. Monuments such as the pyramids in Egypt, the Great Wall of China, and
    the Kailasa Temple in Ellora, India, are among the greatest monuments that, after
    hundreds of years, are still very difficult to replicate. The thing that is common
    to all of them is the difficulty of making them. The difficulty has kept them
    unique over centuries. The structures themselves are the evidence of the hard
    work that has been undertaken to construct them. The evidence of work is called
    proof –of work.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows two of the famous monuments:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.6:** Unique and famous monuments'
  prefs: []
  type: TYPE_NORMAL
- en: Each miner competes in computational power to solve the cryptographic puzzle
    and create a block of the transaction as the next block in the blockchain. After
    a certain number of blocks are created, the difficulty of the cryptographic puzzle
    is adjusted to increase or decrease the average time to solve a cryptographic
    puzzle. Due to this mining equipment, manufacturing companies also compete in
    their cost-effectiveness. This battle in the mining arena keeps the network secure
    and protects it from double-spending.
  prefs: []
  type: TYPE_NORMAL
- en: '**It is a mechanism in which a party needs to prove to the verifier that it
    has performed the desired work (or computational power) in order to be allowed
    to perform some tasks.**'
  prefs: []
  type: TYPE_NORMAL
- en: The difficulty to change any block increases exponentially as the block gets
    deeper into the chain. Even though miners are competing to create a block, they
    are agreeing to the terms of consensus rules. This is the reason why it is called
    the *proof –of work* consensus mechanism. Many cryptocurrencies and blockchain
    technologies use other forms of consensus mechanisms, such as *proof –of stake,
    proof –of authority, practical Byzantine fault tolerance,* and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Mining can be defined as p*roof* –*of* w*ork in action*.
  prefs: []
  type: TYPE_NORMAL
- en: We know that miners join and form a pool. A few mining pools control most of
    the network computational power. If two to three top miners join, they can out-compete
    the rest of the miners.
  prefs: []
  type: TYPE_NORMAL
- en: In July 2014, *Ghash.io* reached more than half of the network computational
    power, but it later agreed that it will never cross the 50% computational power.
    It is important to understand why we never had such a scenario since and why any
    miner would agree not to take over the network.
  prefs: []
  type: TYPE_NORMAL
- en: Mining also adds value to the network, which means even though miners can join
    and block transactions from specific countries or exchanges, they will not do
    anything that will get noticed and will affect the network that is their source
    of earning.
  prefs: []
  type: TYPE_NORMAL
- en: '[Validating nodes](toc.xhtml#s54a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitcoin doesn’t fully depend on mining nodes to protect against double-spending;
    instead, it also has validating nodes that verify all the transactions and blocks
    received. The verifying nodes are also called full nodes, and these nodes further
    broadcast transactions and blocks.
  prefs: []
  type: TYPE_NORMAL
- en: '[Mempool](toc.xhtml#s55a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mempool is the in-memory store for an unconfirmed transaction. A miner picks
    up transactions from mempool, and only valid transactions are stored in mempool.
    A transaction may expire because it did not get included in the blockchain for
    a very long time. A mempool transaction is not confirmed and can become invalid
    due to race conditions.
  prefs: []
  type: TYPE_NORMAL
- en: '[Cryptography](toc.xhtml#s56a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cryptography is the heart of Bitcoin. It is used in proof –of work, transaction,
    blockchain, and verification.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the uses of cryptography in the Bitcoin network:'
  prefs: []
  type: TYPE_NORMAL
- en: Mining nodes need to solve the cryptographic puzzle in order to create a block
    of transactions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each block uses cryptography to protect all transactions from modification.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each block uses the cryptographic hash to protect the chain of blocks from modification.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The transaction uses cryptography to unlock funds from the source and lock it
    for the receiver to claim.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Gossip protocol](toc.xhtml#s57a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitcoin transactions and blocks need to reach quickly to almost all nodes. Bitcoin
    nodes are always listening to the connected nodes and make them aware of the blocks
    in the Bitcoin blockchain it has. When a block or a transaction is received by
    a node, it verifies it according to consensus rules and then sends it to the nodes
    which need it. Gossip protocol is the method of communication between nodes using
    messages containing command and payload.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an illustration of the gossip protocol in message broadcast:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/Figure-3.7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3.7:** Simple representation of gossip protocol in a message broadcast'
  prefs: []
  type: TYPE_NORMAL
- en: '[Bitcoin network security](toc.xhtml#s58a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Securing a network is not only a mathematical or cryptographic problem but
    also a game theory problem. Bitcoin network is secured by both cryptography and
    game theory. So, there are many factors that work together to secure the network:'
  prefs: []
  type: TYPE_NORMAL
- en: Mining makes it difficult to modify a block, and the difficulty increases exponentially
    as the block gets deeper into the blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mining difficulty adds to the value of the network. Its value is not only in
    terms of computational power but also in terms of cost and time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mining equipment companies compete in the cost-effectiveness of their equipment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Verifying nodes watch the network and make sure that the network behaves as
    expected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many block exploration websites and independent enthusiasts are also observing
    the network in different ways. They are constantly observing nodes, blockchain,
    and mempool.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Conclusion](toc.xhtml#s59a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned the network topology of the Bitcoin network. You
    learned about the different types of nodes that are present in the Bitcoin network
    and their roles and need. Then, you understood how the Bitcoin consensus mechanism
    works and what the different components that form the Bitcoin consensus network
    are. We also covered each of those components to give us a fair understanding
    of the structure and functioning of the Bitcoin network without getting in-depth
    into its real functioning.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will understand how bitcoin is used in the real world
    and learn about the regulation on use of bitcoin in different countries.
  prefs: []
  type: TYPE_NORMAL
- en: '[Points to remember](toc.xhtml#s60a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mining is proof –of work in action.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Bitcoin network consists of mining pool server, pool miner nodes, solo miners,
    full nodes, and SPV nodes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pool Miner nodes do not interact with the Bitcoin network directly; instead,
    they depend on the mining pool server for jobs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solo mining has a negligible chance in solving a cryptographic puzzle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Full nodes are also called validating nodes as they verify blocks and transactions
    based on consensus rules.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gossip protocol is the method of communication between nodes using messages
    containing command and payload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Questions](toc.xhtml#s61a)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: How is block validation different from block confirmation? Which node is responsible
    for block validation, and which one is for block confirmation?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the top four mining pools, and what is their current share of network
    computational power?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are planning to buy Bitcoin mining equipment, what parameters will you
    look for, and how will you judge which equipment is better for you?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If a miner cannot accommodate all received transactions in a mempool into the
    next block, on what basis will it select a transaction for adding to the next
    block?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Fill in the blanks:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Bitcoin network is a ____________ network, which means there are no servers
    and clients and no hierarchy.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: In pool mining, _________ solves cryptographic puzzle and _________ connects
    with Bitcoin network for blocks.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SPV needs ____________ node to verify incoming blocks.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True/False:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The mining node does not require mempool.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Nodes can join and leave the Bitcoin network anytime.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Each full node maintains a copy of the blockchain.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
