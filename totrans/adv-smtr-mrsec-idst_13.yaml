- en: Chapter 13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reliable Blockchain-Aided Searchable Attribute-Based Encryption for Cloud-IoT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ambika N.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[![Orcid Image](i/orcid.svg) https://orcid.org/0000-0003-4452-5514](https://orcid.org/0000-0003-4452-5514)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: St. Francis College, India
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ABSTRACT
  prefs: []
  type: TYPE_NORMAL
- en: The work utilizes an alliance blockchain, where a lot of foreordained hubs control
    the agreement convention. Different devices can produce information and send the
    information to the information pool. All agreement hubs cooperate to update the
    client repudiation list that improves the unwavering quality of the frame. Clients
    submit search demands through the blockchain. A client sends a fractional token
    to the blockchain, and agreement hubs produce the total with the client's trait
    keys. At that point, the cloud can play out a quest with the total token for the
    client. The cloud asks the related time-coordinated pre-unscrambling key of the
    client from the blockchain to pre-decode. The framework is proportionate to a
    release board where we record all client open personality keys, client unscrambling
    keys, key update messages, and pre-decoding keys. The cloud can utilize those
    keys to pre-decrypt for clients, and accord hubs are liable for refreshing keys
    for non-renounced clients. The proposal increases security by 3.82% and improves
    trust by 5.09%.
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs: []
  type: TYPE_NORMAL
- en: The Internet-of-things (Ambika, 2019) (Alaba, 2017) (Nagaraj, 2021) makes it
    easy for humans by decreasing their effort. These devices communicate with each
    other with varying capabilities using a common platform. The cloud supports enormous
    data storage. The transmission between the IoT devices and the cloud needs some
    amount of security. Some of the applications making use of these devices include
    smart homes (Verma & Sood, 2018), hospitals (Ambika N., 2020)(Abdelgawad, Yelamarthi,
    & Khattab, 2016), industry (A & K, 2016), smart building (Akkaya, Guvenc, Aygun,
    Pala, & Kadri, 2015) and cities(Alrashdi, Alqazzaz, Aloufi, Alharthi, Zohdy, &
    Ming, 2019). The devices do not have enough space to store large amounts of data.
    Hence cloud is used for storage. Using The devices can upload data from anywhere,
    anytime using Internet services.
  prefs: []
  type: TYPE_NORMAL
- en: A blockchain (Atlam & Wills, 2019) is a dispersed record that comprises a consistently
    developing arrangement of evidence. The appropriated idea of blockchains suggests
    no single substance controls the information, but it takes interest peers together
    to approve the credibility of records. These records are in blocks that are connected
    utilizing cryptographic hashes, thus the name blockchain. Blockchain-based innovations
    boost an organization of companions to make calculations towards an agreement
    in the organization. The blockchain arrangement (Chen, Xu, Lu, & Chen, 2018)(Dorri,
    Kanhere, Jurdak, & Gauravaram, 2017) is the Bitcoin cryptographic money. The Bitcoin
    blockchain keeps up all switches from the underlying square, alluded to as the
    beginning square. The exchange has sender, recipient, the measure of the moved
    Bitcoin money, and the mark (sender). For the trading to remember, the blockchain
    transmits to the blockchain network. The purported diggers assume the liability
    to check new exchanges and propose the following square that incorporates the
    confirmed trade. Excavators compensate with Bitcoins and exchange expenses for
    their computational work.
  prefs: []
  type: TYPE_NORMAL
- en: The work (Liu S., Yu, Xiao, Wan, Wang, & Yan, 2020) utilizes an alliance blockchain,
    where foreordained (believed) hubs control agreement convention. Different devices
    can produce information and send the information to the information pool. At that
    point, the agreement hubs run the accord convention to update the chain and keep
    all devices in this framework conceding to a steady state. All agreement hubs
    cooperate to update the client repudiation list that improves the unwavering quality
    of the frame. Clients submit search demands through the blockchain. A client sends
    a fractional token to the blockchain, and agreement hubs produce the total with
    the client's trait keys. It can play out a quest with the total pledge for the
    client. It asks related time-coordinated pre-unscrambling key of the client from
    the blockchain to pre-decode. The framework is proportionate to a release board
    where we record all client open personality keys, client unscrambling keys, key
    update messages, and pre-decoding keys. It can utilize those keys to pre-decrypt
    the clients, and accord hubs are liable for a refreshing credential for non-renounced
    clients. The contribution is an improvement compared to the previous work. The
    proposal uses the Merkle root method to generate a hash value. It increases security
    by 3.82%. The previously generated value prefixes to the data. The new hash value
    suffixes to the data before transmission. It improves reliability by 5.09% compared
    to (Liu S., Yu, Xiao, Wan, Wang, & Yan, 2020).
  prefs: []
  type: TYPE_NORMAL
- en: The chapter has seven subdivisions. The literature survey follows the introduction
    in section two. Segment three briefs background of the work. Paragraph four details
    the previous contribution. Subdivision five explains the proposed work. Segment
    six provides an analysis of the work. The chapter concludes in section seven.
  prefs: []
  type: TYPE_NORMAL
- en: LITERATURE SURVEY
  prefs: []
  type: TYPE_NORMAL
- en: The section contains similar contributions to discussions. The work (Liu S.,
    Yu, Xiao, Wan, Wang, & Yan, 2020) utilizes an alliance blockchain, where foreordained
    (believed) hubs control agreement convention. Different devices can produce information
    and send the information to the information pool. At that point, the agreement
    hubs run the accord convention to update the chain and keep all devices in this
    framework conceding to a steady state. All agreement hubs cooperate to update
    the client repudiation list that improves the unwavering quality of the frame.
    Clients submit search demands through the blockchain. A client sends a fractional
    token to the blockchain, and agreement hubs produce the total with the client's
    trait keys. It can play out a quest with the total pledge for the client. It asks
    related time-coordinated pre-unscrambling key of the client from the blockchain
    to pre-decode. The framework is proportionate to a release board where we record
    all client open personality keys, client unscrambling keys, key update messages,
    and pre-decoding keys. It can utilize those keys to pre-decrypt the clients, and
    accord hubs are liable for a refreshing credential for non-renounced clients.
  prefs: []
  type: TYPE_NORMAL
- en: The work (Shafagh, Burkhalter, Hithnawi, & Duquennoy, 2017) decouples the control
    and information plane of our IoT disseminated capacity framework. In the framework,
    the control plane isolates the rationalist of the information plane. They utilize
    an openly evident blockchain to make a responsible appropriated framework and
    bootstrap trust in an untrusted network without a focal trust element. The exchanges
    comprise responsibility for streams and relating access permissions. They utilize
    the blockchain to store access authorizations safely. Access rights concede per
    information stream. The information proprietor can deny the sharing of an information
    stream. For any solicitation to recover information, the capacity hub first checks
    the blockchain for access rights. To disavow admittance to an information stream,
    the information proprietor refreshes the encryption key. They store information
    pieces forming sequences. The information lump scrambles at the source with symmetric
    code AES-GCM. In the capacity layer, they stockpile key-esteem sets. The IoT doors
    fill in as an intermediary stockpiling hub at the front of the capacity layer.
    The entryway pushes the lumps utilizing the FIFO standard into the capacity layer.
  prefs: []
  type: TYPE_NORMAL
- en: 'The new engineering (Manzoor, Liyanage, Braeke, Kanhere, & Ylianttila, 2019)
    is dependent on the components of a blockchain. It is re-encryption for secure
    putting away and sharing of the sensor information. They think about four substances
    in the framework: IoT sensors, information requester, cloud supplier, and the
    blockchain. The sensors'' proprietor actuates the sensors and registers them on
    the blockchain using contract work. After enrollment, the sensor''s proprietor
    gives the sensor the necessary key material with the end goal. The deliberate
    information transmits to the distributed storage worker. A client demands admittance
    to one (or a gathering of) sensor(s) of the proprietor using a keen agreement
    work. After getting the solicitation, an agreement is created and mined on the
    blockchain. The requester connects with the blockchain to share the public cryptographic
    key and deals with all the budgetary-related exchanges. On accepting the client
    demand, distributed storage communicates by the blockchain. The product channels
    the information as indicated by the solicitation. The re-encryption cryptographic
    key from the sensor proprietor is refreshed on the smart contract when the client
    demand is gotten. He unscrambles and re-scrambles data and puts it in an impermanent
    area. The encoded information is transiently put away on the worker, and an exchange
    containing the location of the put-away information undergoes mining on the blockchain.
    When the data undergoes preparation, the requester is told of the impermanent
    area by the blockchain. The requester can unscramble the information utilizing
    its private cryptographic key. They propose to apply a Certificate-Based Proxy
    ReEncryption (CB-PRE) plot, which comprises seven polynomial-time calculations.'
  prefs: []
  type: TYPE_NORMAL
- en: The framework (Dwivedi, Srivastava, Dhar, & Singh, 2019) comprises five sections
    containing the Overlay organization, cloud stockpiling, Healthcare suppliers,
    Smart agreements, and Patient outfitting with medical services wearable IoT gadgets.
    The distributed storage bunches client's information in indistinguishable squares
    related to an extraordinary square number. These mists are associated with overlay
    organizations. The data is put away into the precinct, and the cloud worker sends
    the hash of the information squares to the overlay organization. The hash of the
    information is determined utilizing Merkle Tree. The system acknowledges the root
    hash. It includes the past esteem producing a chain. It comprises explicit hubs
    to demonstrate confirmation with a legitimate endorsement. It can be transferred
    or confirmed before making a record on the organization. When approved, he will
    have the option to sign information/exchanges over the organization carefully.
    To expand network adaptability and keep away from network delay, they bunch the
    hubs as numerous groups. Each bunch has one Cluster Head that deals with the public
    keys of the devices. Any device joined with any bunch can change the group whenever
    in the event of deferral. The instrument appends to a bunch and can change the
    group head. The group head keeps the public keys of requesters that can get to
    the information of a specific patient. The insurance agencies or patients delegate
    the medical services suppliers to perform clinical tests. Medical care specialist
    organizations manage the treatment of patients once they get a caution from the
    organization. They likewise treat them as a hub in the organization and are approved
    to get specific patient information from the cloud. Intelligent contracts permit
    the making of arrangements in any IoT gadgets and execute when given conditions
    meet. When readings obtain from the wearable instrument that doesn't follow the
    showed run, the intelligent agreement will send an alarm message to the approved
    individual or medical care supplier. It stores the irregular information so medical
    care suppliers can get the patient circulatory strain readings. The IoT gadget
    will gather all wellbeing information from the patient. Such information could
    be pulsed, resting conditions, or strolling separation to give some examples.
    Patients themselves are the proprietors of their data. They are liable for allowing,
    denying, or repudiating information access from some other gatherings. On the
    off chance, the tolerant requirements of clinical treatment will impart individual
    wellbeing information to the ideal specialist. After treatment, the patient can
    deny further admittance to the specialist, medical care supplier, or medical coverage
    organization.
  prefs: []
  type: TYPE_NORMAL
- en: Patients' information gathered undergo grouping by wellbeing sensors (Obour
    Agyekum, Xia, Sifah, Gao, Xia, & Guizani, 2019) that are generally bound and transferred
    onto a cloud worker in the wake of recording. Before a patient's clinical information
    moves to a cloud worker, the patient encodes their data characteristics. It shows
    the entrance benefit on the data. The patient gives the subtleties of all approved
    clients to the blockchain's preparing hub. Accordingly, admittance to a patient's
    information can be conceivable if the client fulfills the trait set and utilizes
    the private key identified with that property set. The information Owner is the
    element obtained. Access conceives if the private key of the information client
    compares to the quality set determined by the information proprietor. Information
    User is the element that needs to utilize the information from the proprietor.
    Both the information proprietor and user ought to enroll in the blockchain. Cloud
    Server is the archive of the data from the proprietor. The cloud worker using
    the correspondence channel sends all the encoded records. Blockchain networks
    comprise the accompanying substances. Guarantor substance enrolls the members
    (information proprietor and clients) on the blockchain network. It gives out enrollment
    keys to them and fills in as their character (ID). The verifier can fill in as
    a validation unit, checks whether a client makes an entrance demand or an information
    proprietor transfers its information onto the storage. The handling hub is the
    heartbeat of the blockchain network. The element performs all cycles.
  prefs: []
  type: TYPE_NORMAL
- en: The work (Liu B., Yu, Chen, Xu, & Zhu, 2017) has four sections- Data Owners
    Application (DOA), Data Shopper Application, Cloud Storage Service, and Blockchain.
    The CSS divides into private CSS and public CSS. The information trustworthiness
    confirmation will include different DOAs and DCAs. Information Integrity Service
    (DIS) has its basis in the Blockchain framework. The individuals who need DIS
    should begin blockchain customers on their hubs first. Every device is allowed
    to join or leave the blockchain network. To disentangle the proposed administration,
    it uses Cloud Storage Service. Information Integrity Service (DIS) actualizes
    by a brilliant agreement living on the blockchain. The usage is completely decentralized,
    which empowers higher effectiveness and better dependability of DIS. Information
    Integrity Service actualizes by an intelligent contract. The data to be recorded
    in blockchain through shrewd agreements ought to be encoded locally. The record
    of each gathering associates with the accord. After the blockchain administration
    begins, the blockchain information on a hub synchronizes with the entire blockchain
    network. DOA should compose data into blockchain through a brilliant agreement
    to get substantial and open to different devices after the accord of the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: DroneChain (Liang, Zhao, Shetty, & Li, 2017) comprises four principal segments-
    drones, control frameworks, cloud workers, and blockchain networks. At least one
    automaton can shape an automaton group to perform complex commissions. The Control
    framework can be appointed and communicate with an automaton bunch for information
    assortment and commission appropriation. The cloud worker gives the limit of capacity
    to information gathered by drones and provides ongoing information preparation
    and information investigation to encourage future dynamics. The blockchain, a
    decentralized organization, is utilized for information approval and resilience.
    It needs to speak with a control framework through a delegate to convey the gathered
    information or the flight status information and get the commands. The control
    framework assembles information from automatons or automatons bunches and transmits
    orders to alter the flight development. The control framework serves as uncertain
    to total the data from drones. It hashes the first information for uprightness
    assurance, and afterward, sends both unique information and hashed information
    to both the blockchain network and the cloud. The blockchain organization undergoes
    usage for three purposes. Every hashed information passages are transferred to
    the blockchain network for trustworthiness security and could be put away in an
    appropriate way that guarantees steadiness. The cloud information base stores
    the first information gathered from drones, orders sent by the control framework,
    and information access from cloud workers and reviewers. Information access is
    made responsible by a unique mark for each entrance, which is likewise put away
    in the data set. A daemon cycle will look into every information section in both
    the information base and the block. To approve the information record, the cloud
    worker is liable for mentioning to the blockchain network for a blockchain receipt
    as a lasting verification of information integrity. The chain network works for
    consistency check intermittently.
  prefs: []
  type: TYPE_NORMAL
- en: The authors (Samaniego & Deters, 2016) actualize virtual assets as simultaneous
    go-schedules in a Golang program. The virtual strength is a capacity characterized
    in the language Golang. The source code of all virtual benefits is put away in
    a code archive for the example information base. At runtime, the executive chooses
    the virtual assets and assembles them into at least one Golang application. The
    Golang capacities add to the source code. It has a program that aggregates for
    the objective stage. The director puts the code onto a consent-based blockchain
    and educates the edge segment to download the code from the blockchain. Virtual
    benefit deactivates either by advising the host program to obstruct its go-work
    or by recompiling another host program. Changing virtual assets requires the making
    of another host program. The Edison module is a Framework on a Chip (SoC) containing
    a 500 MHz double center, double-strung Intel Atom, and a 100 MHz 32-bit Intel
    Quark microcontroller. The two sheets utilized in the examinations are both associated
    with a similar shared Wi-Fi organization. In the principal analysis, each board
    runs one virtual asset. One virtual benefit sends 1000 successive solicitations
    to the virtual strength on the other board. After sending the solicitation, the
    virtual one sits tight for the affirmation and proceeds with the following solicitation.
  prefs: []
  type: TYPE_NORMAL
- en: 'BaDS design (Zhang, He, & Choo, 2018.) comprises the accompanying members:
    IoT gadgets, Data Owner, Blockchain Network, and Cloud. IoT gadgets gather information
    and send information to the organization layer. Such instruments are additionally
    answerable for information obtaining, fundamental preparation, encryption, and
    transmission. The devices can ordinarily distantly demand access and handle the
    orders. When the gadgets need to ask for information from different gadgets, they
    ought to distribute a comparing solicitation to the cloud or the information owner.
    There is an exceptionally enormous number of information proprietors that partitions
    into heads. The executives are mindful of confirming the participants. The agreement
    calculation in the framework is the Byzantine adaptation to internal failure component
    PBFT instead of Proof of Work (POW) utilized in Bitcoin. The texture contains
    verification hubs and requesting hubs. When the devices get an exchange, they
    will check and pack them into the blockchain. Cloud is utilized to store the encoded
    gadgets'' information and sends a relating demand exchange to the blockchain organization
    to inquiry permission of the instrument when the cloud gets a solicitation from
    IoT gadgets.'
  prefs: []
  type: TYPE_NORMAL
- en: Every hub (Kim & Lee, 2018) imparts its data to devices in various areas employing
    correspondence with the worker, which goes about as a door. It plays out encryption
    by making n re-encryption keys and sends these to the intermediary worker. The
    worker at that point creates ciphertexts that permit different hubs to decode
    the writings, diminishing the encryption of figuring trouble for every device.
    In the plan, a client may acquire the last information by unscrambling the privileges
    of data(indicated by their rank). If the two clients have similar credits, they
    will have indistinguishable decoding right. If their properties contrast, other
    clients undergo disavowing. In the proposed information-sharing plan, there is
    no requirement for the denial of the client ascribes. Client A exchanges the encryption
    key to client B, that wishes to get to the familiar data by re-encoding the encryption
    key. It can decode the scrambled information, utilizing its credits dependent
    on the quality public key of client B. The proposed strategy takes out pointless
    cycles along these lines giving expanded effectiveness and more secure information
    sharing.
  prefs: []
  type: TYPE_NORMAL
- en: 'LES (Al Salami, Baek, Salah, & Damiani, 2016) utilizes brilliant home applications.
    It very well may be applied in the accompanying situation: Suppose that a client
    is attempting to open the front entryway of his home distantly. In the house,
    a keen lock framework usage brings security. The client will make an impression
    on open the entrance through his cell phone. Notwithstanding, the message that
    orders the brilliant lock framework to open the portal contains delicate data
    of entryway bolting or not. This data can be helpful for a robber who is attempting
    to break into the house. The plan has two-sub calculations - KEYEncrypt and DATAEncrypt.
    The first one encodes a meeting key, and the last is to scramble messages under
    the picked key. This plan is character-based, which means the public keys utilized
    for this plan are only personality strings, which needn''t bother with authentication.
    The character-based property ends up helping oversee encryption keys for intelligent
    home gadgets.'
  prefs: []
  type: TYPE_NORMAL
- en: A lightweight is no pairing ECC-Based ABE (Yao, Chen, & Tian, 2015). It conspires
    to address the information security and protection issues in the IoT. The proposed
    ABE plan's security relies upon the ECDDH issue rather than bilinear Diffie–Hellman
    suspicion, which can diminish the calculation overhead and correspondence overhead.
    The security verification acts in a property-based specific set model. The elliptic
    Curve is an integrated Encryption Scheme. It has information privacy and information
    uprightness for clients, which embraces ECDH to create a sharing mystery, from
    which the encryption key and the MAC key determines individually. A KP-ABE conspires
    with four calculations. The Setup calculation randomizes computation and is controlled
    by the position. It yields the public credential boundaries and the ace key. The
    distributed border has the key mystery of location. The Encrypt calculation is
    a randomized calculation, controlled by the sender. It yields figure text by taking
    the message to be encoded. The traits set that the information client ought to
    fulfill, and the public credential boundaries as info. The Key-Generation calculation
    is randomized. It is controlled by the power and takes an entrance structure and
    the ace key as info. It yields the unscrambling credential relating to the entrance
    structure. The Decrypt calculation is controlled by the collector, which takes
    the code text encoded under the ascribes set, the unscrambling key D for access
    control structure, alongside the public credential boundaries as info. If control
    structure esteem compares to 1, it unscrambles the code text and yields a message.
  prefs: []
  type: TYPE_NORMAL
- en: BACKGROUND
  prefs: []
  type: TYPE_NORMAL
- en: 'Merkle Root: A Merkle root is a mathematical way to deal with check the data
    on a Merkle tree. They are used in computerized cash to guarantee data squares
    went between peers on a mutual framework. They are vital to the estimation needed
    to keep up cryptographic types of monetary transactions like bitcoin and ether.
    A hash tree encodes the blockchain data gainfully and securely. It engages by
    lively checking of the blockchain data on the dispersed compose. Each trade occurring
    on the blockchain orchestrate has a hash related to it. These hashes embedding
    as a treelike structure has the ultimate objective that each hash is associated
    with its parent following a parent-kid treelike association.'
  prefs: []
  type: TYPE_NORMAL
- en: Assume that two instant messages hashing is at level 1\. Leave the content alone
    T[1] and T[2]. Let the resultant hash esteem Hm[1] got from hashing of T[1]. Notation
    (1) is the representation of the same. Let the derived hash esteem Hm[2] be inferred
    by hashing the content T[2]. Notation (2) denotes the same. The parent of these
    two hash esteems is spoken to by Hm[12]. The equivalent got by hashing both the
    writings T[1] and T[2]. Notation (3) represents the same.
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathtype978-1-7998-8367-8.ch013.m01](i/ch013.m01.svg) (1)'
  prefs: []
  type: TYPE_IMG
- en: '![Mathtype978-1-7998-8367-8.ch013.m02](i/ch013.m02.svg) (2)'
  prefs: []
  type: TYPE_IMG
- en: '![Mathtype978-1-7998-8367-8.ch013.m03](i/ch013.m03.svg) (3)'
  prefs: []
  type: TYPE_IMG
- en: PREVIOUS CONTRIBUTION
  prefs: []
  type: TYPE_NORMAL
- en: The previous contribution (Liu S., Yu, Xiao, Wan, Wang, & Yan, 2020) has four
    participants. Any IoT gadget can produce information. Information proprietors
    are liable for scrambling the data and creating lists. It receives ciphertexts.
    Information users (DU) utilizes their private character keys to produce the token
    and send it to the blockchain. After accepting the half-decoded ciphertext from
    the sender, DUs can use their private character keys to unscramble the information.
    The alliance blockchain utilized in the framework is a shared organization made
    by a set out of pre-selected confided in understanding hubs, an information pool,
    and an appropriated edge. BC introduces the framework public key (Ambika & Raju,
    2010), store client shared character keys, instate client unscrambling keys, produce
    key update messages, and create pre-decoding keys. The agreements of the hubs
    cooperate to restore the client repudiation list. The cloud worker is the capacity
    place where we store the monstrous encoded IoT information. The storage is liable
    for looking and pre-unscrambling for clients. The calculation produces and distributes
    the worldwide public key. The accord hubs utilize the Pedersen mystery Sharing
    convention and the Reciprocal Protocol to choose the ace key together. When an
    information client needs to join this framework, it runs the calculation to create
    its personality key pair. At that point, it sends the ID to BC to store. In the
    following stage, agreement hubs will utilize ID to produce the shared decoding
    key for this client. This public unscrambling key creates this current client's
    pre-decoding key. At long last, Cloud (Aazam, Khan, Alsaffar, & Huh, 2014)(Aceto,
    Botta, Donato, & W., 2013) can utilize the pre-decoding credential to pre-unscramble
    for this client. Each time a client disavows, agreement hubs run the Revoke calculation
    to refresh the denial list. In the credential production step, three sorts of
    keys are created by agreement hubs. The client public unscrambling key depends
    on the client information. The subsequent are key update messages. It connects
    with the client denial list, time checks, and state marks. The last one is client
    pre-decoding key is utilized by Cloud to pre-decode for clients.
  prefs: []
  type: TYPE_NORMAL
- en: PROPOSED WORK
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Notations used in the work
  prefs: []
  type: TYPE_NORMAL
- en: '| Notations used | Description |'
  prefs: []
  type: TYPE_TB
- en: '| N | Network under study |'
  prefs: []
  type: TYPE_TB
- en: '| S[i] | Server under consideration |'
  prefs: []
  type: TYPE_TB
- en: '| ID[s] | Identity of the server |'
  prefs: []
  type: TYPE_TB
- en: '| U[i] | user in the network |'
  prefs: []
  type: TYPE_TB
- en: '| ID[u] | Identity of the user |'
  prefs: []
  type: TYPE_TB
- en: '| Data[i] | Transmitted data |'
  prefs: []
  type: TYPE_TB
- en: '| Hash[pre] | Previous hash value |'
  prefs: []
  type: TYPE_TB
- en: '| Hash[post] | New hash value |'
  prefs: []
  type: TYPE_TB
- en: 1\.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public Key Generation by Server - The proposal increases reliability by using
    the Merkle root concept. The base station or the server uses this concept to generate
    a public hash value. It broadcast it to its users. Notation (4) denotes the same.
    S[i] is the server used and ID[s] is the identity of the server S[i] at time Time[1].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-7998-8367-8.ch013.m04](i/ch013.m04.svg) (4)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 2\.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Registration of the User - The user device also generates a hash value using
    the Merkle root concept. The user device concatenates the obtained and generated
    hash value during the registration procedure. Notation (5) denotes the same. Let
    U[i] be the user and let ID[u] be the identity of the user.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Mathtype978-1-7998-8367-8.ch013.m05](i/ch013.m05.svg) (5)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: This hash value is attached to every message dispatching to the server. Every
    session has a different hash value. It prefixes previous hash value hash[pre],
    followed by data Data[i] and postfixes the new hash value hash[post]. Notation
    (6) denotes the same. Hence the reliability and security of the network increases
    compared to previous contribution (Liu S., Yu, Xiao, Wan, Wang, & Yan, 2020).
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathtype978-1-7998-8367-8.ch013.m06](i/ch013.m06.svg) (6)'
  prefs: []
  type: TYPE_IMG
- en: ANALYSIS OF THE WORK
  prefs: []
  type: TYPE_NORMAL
- en: The accord hubs (Liu S., Yu, Xiao, Wan, Wang, & Yan, 2020) utilize the Pedersen
    mystery Sharing convention and the Reciprocal Protocol to choose the ace key together.
    When an information client needs to join this framework, it runs the calculation
    to create its personality key pair. At that point, it sends the ID to BC to store.
    In the following stage, agreement hubs will utilize ID to produce the shared decoding
    key for this client. This public unscrambling key creates this current client's
    pre-decoding key. At long last, Cloud (Aazam, Khan, Alsaffar, & Huh, 2014)(Aceto,
    Botta, Donato, & W., 2013) can utilize the pre-decoding credential to pre-unscramble
    for this client. Each time a client disavows, agreement hubs run the Revoke calculation
    to refresh the denial list. In the credential production step, three sorts of
    keys are created by agreement hubs. The first is the clients' public unscrambling
    key. It depends on the clients' information. The subsequent key update messages
    connect with the client denial list, time checks, and state marks. The last one
    is client's pre-decoding key is utilized by Cloud to pre-decode for clients.
  prefs: []
  type: TYPE_NORMAL
- en: The simulation is performed in NS2\. Table 2 contains the parameters used in
    the simulation.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Parameters used in the study
  prefs: []
  type: TYPE_NORMAL
- en: '| Parameters used | Description |'
  prefs: []
  type: TYPE_TB
- en: '| Area of surveillance | 200m *200 m |'
  prefs: []
  type: TYPE_TB
- en: '| Number of devices considered | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| Length of identification | 24 bits |'
  prefs: []
  type: TYPE_TB
- en: '| Length of hash value generated | 12 bits |'
  prefs: []
  type: TYPE_TB
- en: '| Simulation time | 60 ms |'
  prefs: []
  type: TYPE_TB
- en: Table 3\. Algorithm used to generate hash value
  prefs: []
  type: TYPE_NORMAL
- en: '| Input: Identification of the device (24 bits) Step 1: Interchange bits in
    odd and even positions'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: For i= 1 to 24'
  prefs: []
  type: TYPE_NORMAL
- en: Resultant [i] = Xor operation extreme bits
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: For i= 1 to 12'
  prefs: []
  type: TYPE_NORMAL
- en: Divide into 2 groups
  prefs: []
  type: TYPE_NORMAL
- en: Apply round right shift on both the groups
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Merge both the groups |'
  prefs: []
  type: TYPE_NORMAL
- en: The proposal uses the Merkle root to produce a hash value. The server uses the
    same concept to generate the hash value using its identity. This value is transmitted
    to the users. Similarly, user devices calculate the hash value using their identity.
    It prefixes the previous hash value to the data and suffixes the new hash value.
    It transmits it to the server. The hash value changes for every session. It increases
    security (Abd El-Latif, et al., 2020) by 3.82%. As the previous hash value is
    prefixed to the data, reliability (Ahmad, 2014) is increased by 5.09% of the network.
    The same is represented in figure 1 and figure 2.
  prefs: []
  type: TYPE_NORMAL
- en: '| Figure 1\. Comparison of security in the network |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8367-8.ch013.f01](i/ch013.f01.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Figure 2\. Comparison of reliability in the network |'
  prefs: []
  type: TYPE_TB
- en: '| ![Figure978-1-7998-8367-8.ch013.f02](i/ch013.f02.png) |'
  prefs: []
  type: TYPE_TB
- en: CONCLUSION
  prefs: []
  type: TYPE_NORMAL
- en: The IoT devices are of a different caliber. These instruments use a shared platform
    to communicate with each other. They do not have enough space to store, hence
    use a cloud facility. The storage facility provides ample warehousing. Using blockchain
    enhances the reliability of the transmitted data. The proposal uses the Merkle
    root to generate the hash value. This method is used by the user and the server
    to change its credential for every session. The methodology increases security
    by 3.82%. The data is prefixed by the previously generated hash value and postfixed
    by the new value. Hence the technique improves trust by 5.09%.
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs: []
  type: TYPE_NORMAL
- en: A, B., & K, M. V. (2016). Blockchain platform for industrial internet of things.
    Journal of software Engineering and Applications, 9(10), 533.
  prefs: []
  type: TYPE_NORMAL
- en: 'AazamM.KhanI.AlsaffarA. A.HuhE. N. (2014). Cloud of Things: Integrating Internet
    of Things with Cloud Computing and the Issues Involved. In International Bhurban
    Conference on Applied Sciences & Technology. Islamabad, Pakistan: IEEE. 10.1109/IBCAST.2014.6778179'
  prefs: []
  type: TYPE_NORMAL
- en: 'Abd El-Latif, A., Abd-El-Atty, B., Venegas-Andraca, S., Elwahsh, H., Piran,
    M., & Bashir, A. (2020). Providing End-to-End Security Using Quantum Walks in
    IoT Networks. IEEE Access: Practical Innovations, Open Solutions , 8, 92687–92696\.
    doi:10.1109/ACCESS.2020.2992820'
  prefs: []
  type: TYPE_NORMAL
- en: 'AbdelgawadA.YelamarthiK.KhattabA. (2016). IoT-based health monitoring system
    for active and assisted living. In International Conference on Smart Objects and
    Technologies for Social Good (pp. 11-20). Venice, Italy: Springer.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Aceto, G., Botta, A., de Donato, W., & Pescapè, A. (2013). Cloud monitoring:
    A Survey. Computer Networks , 57(9), 2093–2115\. doi:10.1016/j.comnet.2013.04.001'
  prefs: []
  type: TYPE_NORMAL
- en: 'AhmadM. (2014). Reliability Models for the Internet of Things: A Paradigm Shift.
    In IEEE International Symposium on Software Reliability Engineering Workshops.
    Naples, Italy: IEEE. 10.1109/ISSREW.2014.107'
  prefs: []
  type: TYPE_NORMAL
- en: Akkaya, K., Guvenc, I., Aygun, R., Pala, N., & Kadri, A. (2015). IoT-based occupancy
    monitoring techniques for energy-efficient smart buildings. In IEEE Wireless Communications
    and Networking Conference Workshops (WCNCW) . IEEE.
  prefs: []
  type: TYPE_NORMAL
- en: 'Al SalamiS.BaekJ.SalahK.DamianiE. (2016). Lightweight encryption for smart
    home. In 11th International Conference on Availability, Reliability and Security
    (ARES) (pp. 382-388). Salzburg, Austria: IEEE.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alaba, F. A., Othman, M., Hashem, I. A. T., & Alotaibi, F. (2017). Internet
    of Things security: A survey. Journal of Network and Computer Applications , 88,
    10–28\. doi:10.1016/j.jnca.2017.04.002'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alrashdi, I., Alqazzaz, A., Aloufi, E., Alharthi, R., Zohdy, M., & Ming, H.
    (2019). Ad-iot: Anomaly detection of iot cyberattacks in smart city using machine
    learning. In 9th Annual Computing and Communication Workshop and Conference (CCWC)
    (pp. 305-310). 10.1109/CCWC.2019.8666450'
  prefs: []
  type: TYPE_NORMAL
- en: Ambika, N. (2019). Energy-Perceptive Authentication in Virtual Private Networks
    Using GPS Data. In Security, Privacy and Trust in the IoT Environment (pp. 25-38).
    Springer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ambika, N. (2020). Encryption of Data in Cloud-Based Industrial IoT Devices
    . In Pal, S., & Díaz, V. G. (Eds.), IoT: Security and Privacy Paradigm (pp. 111–129).
    CRC press, Taylor & Francis Group.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ambika, N. (2020). Methodical IoT-Based Information System in Healthcare. In
    C. Chakraborthy (Ed.), Smart Medical Data Sensing and IoT Systems Design in Healthcare
    (pp. 155-177). Bangalore, India: IGI Global.'
  prefs: []
  type: TYPE_NORMAL
- en: Ambika, N., & Raju, G. T. (2010). Figment Authentication Scheme in Wireless
    Sensor Network. In Security Technology, Disaster Recovery and Business Continuity
    . Springer, Berlin, Heidelberg.
  prefs: []
  type: TYPE_NORMAL
- en: Atlam, H. F., & Wills, G. B. (2019). Technical aspects of blockchain and IoT.
    In Role of Blockchain Technology in IoT Applications (Vol. 115). doi:10.1016/bs.adcom.2018.10.006
  prefs: []
  type: TYPE_NORMAL
- en: Chen, G., Xu, B., Lu, M., & Chen, N. S. (2018). Exploring blockchain technology
    and its potential applications for education. Smart Learning Environments , 5(1),
    1\. doi:10.1186/s40561-017-0050-x
  prefs: []
  type: TYPE_NORMAL
- en: 'Dorri, A., Kanhere, S. S., Jurdak, R., & Gauravaram, P. (2017). Blockchain
    for IoT security and privacy: The case study of a smart home. In IEEE international
    conference on pervasive computing and communications workshops . IEEE.'
  prefs: []
  type: TYPE_NORMAL
- en: Dwivedi, A. D., Srivastava, G., Dhar, S., & Singh, R. (2019). A decentralized
    privacy-preserving healthcare blockchain for IoT. Sensors (Basel) , 19(2), 1–17\.
    doi:10.3390/s19020326
  prefs: []
  type: TYPE_NORMAL
- en: Kim, S., & Lee, I. (2018). IoT device security based on proxy re-encryption.
    Journal of Ambient Intelligence and Humanized Computing , 9(4), 1267–1273\. doi:10.1007/s12652-017-0602-5
  prefs: []
  type: TYPE_NORMAL
- en: 'LiangX.ZhaoJ.ShettyS.LiD. (2017). Towards data assurance and resilience in
    IoT using blockchain. In IEEE Military Communications Conference (MILCOM (pp.
    261-266). Baltimore, MD: IEEE. 10.1109/MILCOM.2017.8170858'
  prefs: []
  type: TYPE_NORMAL
- en: 'LiuB.YuX. L.ChenS.XuX.ZhuL. (2017). Blockchain based data integrity service
    framework for IoT data. In IEEE International Conference on Web Services (ICWS)
    (pp. 468-475). Honolulu, HI: IEEE. 10.1109/ICWS.2017.54'
  prefs: []
  type: TYPE_NORMAL
- en: 'Liu, S., Yu, J., Xiao, Y., Wan, Z., Wang, S., & Yan, B. (2020, May). BC-SABE:
    Blockchain-aided Searchable Attribute-based Encryption for Cloud-IoT. IEEE Internet
    of Things Journal , 7(9), 1–17\. doi:10.1109/JIOT.2020.2993231'
  prefs: []
  type: TYPE_NORMAL
- en: ManzoorA.LiyanageM.BraekeA.KanhereS. S.YlianttilaM. (2019). Blockchain based
    proxy re-encryption scheme for secure IoT data sharing. In International Conference
    on Blockchain and Cryptocurrency (ICBC) (pp. 99-103). IEEE. 10.1109/BLOC.2019.8751336
  prefs: []
  type: TYPE_NORMAL
- en: Nagaraj, A. (2021). Introduction to Sensors in IoT and Cloud Computing Applications.
    Bentham Science Publishers. doi:10.2174/97898114793591210101
  prefs: []
  type: TYPE_NORMAL
- en: Obour Agyekum, K. O., Xia, Q., Sifah, E. B., Gao, J., Xia, H. D., & Guizani,
    M. (2019). A Secured Proxy-Based Data Sharing Module in IoT Environments Using
    Blockchain. Sensors (Basel) , 19(5), 1–20\. doi:10.3390/s19051235
  prefs: []
  type: TYPE_NORMAL
- en: 'SamaniegoM.DetersR. (2016). Hosting virtual iot resources on edge-hosts with
    blockchain. In IEEE International Conference on Computer and Information Technology
    (CIT) (pp. 116-119). Nadi, Fiji: IEEE. 10.1109/CIT.2016.71'
  prefs: []
  type: TYPE_NORMAL
- en: ShafaghH.BurkhalterL.HithnawiA.DuquennoyS. (2017). Towards blockchain-based
    auditable storage and sharing of iot data. In Proceedings of the 2017 on Cloud
    Computing Security Workshop (pp. 45-50). ACM. 10.1145/3140649.3140656
  prefs: []
  type: TYPE_NORMAL
- en: Verma, P., & Sood, S. K. (2018). Fog assisted-IoT enabled patient health monitoring
    in smart homes. IEEE Internet of Things Journal , 5(3), 1789–1796\. doi:10.1109/JIOT.2018.2803201
  prefs: []
  type: TYPE_NORMAL
- en: Yao, X., Chen, Z., & Tian, Y. (2015). A lightweight attribute-based encryption
    scheme for the Internet of Things. Future Generation Computer Systems , 49, 104–112\.
    doi:10.1016/j.future.2014.10.010
  prefs: []
  type: TYPE_NORMAL
- en: 'Zhang, Y., He, D., & Choo, K. K. (2018). BaDS: Blockchain-based architecture
    for data sharing with ABS and CP-ABE in IoT. Wireless Communications and Mobile
    Computing , 2018, 1–10\. doi:10.1155/2018/2783658'
  prefs: []
  type: TYPE_NORMAL
