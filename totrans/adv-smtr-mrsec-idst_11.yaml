- en: Chapter 11
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: Secure File Storage in Cloud Computing Using a Modified Cryptography Algorithm
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用修改的密码算法在云计算中实现安全文件存储
- en: Manya Smriti
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Manya Smriti
- en: Vellore Institute of Technology, India
  id: totrans-3
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度维洛尔理工学院
- en: Shruti Varsha Venkatraman
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shruti Varsha Venkatraman
- en: Vellore Institute of Technology, India
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度维洛尔理工学院
- en: Aashish Raj
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aashish Raj
- en: Vellore Institute of Technology, India
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度维洛尔理工学院
- en: Vaishnavi Raj Shukla
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vaishnavi Raj Shukla
- en: Vellore Institute of Technology, India
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度维洛尔理工学院
- en: Aswani Kumar Aswani Cherukuri
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aswani Kumar Aswani Cherukuri
- en: '[![Orcid Image](i/orcid.svg) https://orcid.org/0000-0001-8455-9108](https://orcid.org/0000-0001-8455-9108)'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[![Orcid 图像](i/orcid.svg) https://orcid.org/0000-0001-8455-9108](https://orcid.org/0000-0001-8455-9108)'
- en: Vellore Institute of Technology, India
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度维洛尔理工学院
- en: ABSTRACT
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter investigates the security issues identified with the file cloud
    storage to ensure the security of client information in cloud information server.
    The authors have proposed a modified RSA algorithm with multiple keys and CRT
    to ensure confidentiality of data coupled with hashing through SHA-512 to maintain
    integrity. This work has made a secure data exchange app where files are encrypted
    using the RSA-CRT algorithm and hashed later. On successfully implementing the
    work, they observed that the proposed technique is more secure than the original
    RSA algorithm and RSA-CRT. Furthermore, it enhanced the algorithm performance
    for decryption because it employed the CRT for decryption; thus, the proposed
    technique proved to be faster than RSA with multi keys.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章调查了与文件云存储相关的安全问题，以保护云数据服务器中客户数据的安全。作者提出了一种使用多个密钥和CRT的修改后的RSA算法，以保证数据的机密性，并通过SHA-512哈希来保持数据完整性。该工作创建了一个安全的数据交换应用程序，其中文件使用RSA-CRT算法进行加密，然后进行哈希处理。在成功实施该工作后，他们观察到所提出的技术比原始RSA算法和RSA-CRT更安全。此外，它通过采用CRT进行解密来提高了解密的算法性能；因此，所提出的技术比具有多个密钥的RSA更快。
- en: INTRODUCTION
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 引言
- en: The algorithm of RSA is an asymmetric cryptography technique. This is working
    on two keys, i.e. public key and private key. The proposed model in our work takes
    four prime evaluating techniques and discovers extension to build up a far-off
    information reviewing strategy that can be utilized to check the uprightness of
    the redistributed information in numbers for modified RSA. Instead of sending
    one public key directly, send two public keys to the receiver. However, there
    is the problem of the speed, so that in RSA decryption used the Chinese remainder
    theorem to enhancement the speed of RSA decryption.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: RSA算法是一种非对称密码技术。它使用两个密钥，即公钥和私钥。我们工作中提出的模型采用了四种主要的评估技术，并发现了建立远程数据审阅策略的扩展，该策略可用于检查修订后的RSA中的数据完整性。与直接发送一个公钥不同，将两个公钥发送给接收者。然而，存在速度问题，因此在RSA解密中使用中国剩余定理来提高RSA解密的速度。
- en: BACKGROUND
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 背景
- en: Literature Survey
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 文献调研
- en: Yang et al. (Yang & Jia, 2012) proposed a proficient and intrinsically secure
    dynamic reviewing convention. It secures the information protection against the
    reviewer by consolidating the cryptography strategy with the bi-linearity property
    of bi-linear paring instead of utilizing the veil method. In this manner, their
    multi-cloud clump reviewing convention does not require any extra coordinator.
    Their cluster reviewing convention can likewise bolster the clump examining for
    numerous proprietors. Moreover, their evaluating conspire brings about less correspondence
    cost and less calculation cost of the evaluator by moving the registering loads
    of evaluating from the inspector to the worker, which enormously im- proves the
    evaluating execution and can be applied to enormous scope distributed storage
    frameworks.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 杨等人（杨和贾，2012年）提出了一种高效且本质安全的动态审阅规范。它通过将加密策略与双线性配对的双线性性质相结合，而不是使用面纱方法，来保护信息免受审阅者的侵犯。因此，他们的多云集群审阅规范不需要任何额外的协调者。他们的集群审阅规范还可以支持多个所有者的批量扫描。此外，他们的评估方案通过将评估的计算负载从检查员移至服务器，从而减少了通信成本和评估者的计算成本，极大地改善了评估性能，并可应用于大规模分布式存储系统。
- en: Li et al. (Li et al., 2017) concentrated on the issue of the cloud information
    stockpiling and planned to give a methodology that could stay away from the cloud
    administrators arriving at client’ delicate information. Tending to this objective,
    they proposed a novel methodology entitled as Security-Aware Effective Distributed
    Storage (SA-EDS) model. In this model, they utilized their proposed calculations,
    including Alternative Data Distribution (AD2), Secure Efficient Data Distributions
    (SED2) and Efficient Data Conflation (ED- Con) calculations. Their exploratory
    assessments had demonstrated that their proposed plan could viably shield significant
    dangers from the cloud side. The calculation time was shorter than current dynamic
    methodologies. Future work would address making sure about information duplications
    so as to increment the degree of information accessibility since any of datacentre’s
    down will cause the disappointment of information recoveries.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Li等人（Li等人，2017）集中关注云信息存储的问题，并计划提供一种方法，可以避免云管理员获取客户敏感数据。为了实现这一目标，他们提出了一种名为安全感知高效分布式存储（SA-EDS）模型的新方法。在这个模型中，他们使用了他们提出的算法，包括替代数据分布（AD2）、安全高效数据分布（SED2）和高效数据融合（ED-Con）算法。他们的实验评估表明，他们提出的方案可以有效地保护云端的重要风险。算法的运行时间比当前的动态方法更短。未来的工作将着重于确保数据的重复性，以增加数据可用性水平，因为任何数据中心的宕机都会导致数据恢复的失败。
- en: Bindu et al. (Shwetha Bindu & Yadaiah, 2011), contemplated the issue of information
    security in cloud servers. To en- sure the accuracy of clients’ information in
    cloud information server, they proposed a viable and adaptable plan with unequivocal
    unique information support, including square change, delete, and join. They use
    erasure-correcting code in the record dissemination planning to give repetition
    equality vectors and assurance the information reliability. Their plan achieves
    the joining of capacity rightness protection and information defilement has been
    recognized during the capacity accuracy check over the circulated workers. Their
    plan is exceptionally productive and tough to Byzantine disappointment, noxious
    information alteration assault, and even worker intriguing assaults. They accept
    that information stockpiling security in Cloud Computing, a zone loaded with difficulties
    and of prevailing essentials, is still in its early stages to be distinguished.
    They imagine a few potential bearings for future examination on this territory.
    It permits Third Parity Auditor to review the cloud information stockpiling without
    requesting clients’ time, likelihood.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Bindu等人（Shwetha Bindu＆Yadaiah，2011）研究了云服务器中的数据安全问题。为了确保云数据服务器中客户数据的准确性，他们提出了一个有效且灵活的设计，其中包括明确的动态数据支持，包括块转换、删除和连接。他们在文件分发计划中使用纠错码来提供冗余等式向量，并保护数据的可靠性。他们的设计实现了存储正确性保护和数据损坏在分布式服务器上的存储准确性检查期间已被检测到。他们的设计非常高效且耐受拜占庭失败、恶意数据篡改攻击，甚至服务器内部攻击。他们认为，云计算中的数据存储安全问题是一个充满挑战和卓越需求的领域，仍处于发展初期。他们设想了该领域未来研究的几个潜在方向。它允许第三方审计员审计云数据存储，而不需请求用户的时间和可能性。
- en: Sookhak (Sookhak, 2015) examines the issue of extra handling time in the current
    distributed computing.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Sookhak（Sookhak，2015）研究了当前分布式计算中额外处理时间的问题。
- en: It proposed a topical scientific classification based on the best in class information
    evaluating techniques to meet the necessities to distinguish the holes and remarkable
    issues in the zone of information stockpiling trustworthiness of distributed computing.
    The subjective examination is utilized to analyze the current strategies and feature
    the points of interest and impediments of them and open issues and difficulties
    of information inspecting plans in cloud and portable distributed computing condition
    that have not been tended to yet were distinguished and featured. The current
    information inspecting approaches were actualized in the genuine distributed computing
    condition, and the benchmark test was utilized to assess such strategies dependent
    on the calculation and correspondence cost on the customer and worker side. In
    addition, the effect of dynamic information update tasks was breaking down on
    the current information approaches in the genuine condition. It examined the impact
    of dynamic information update procedure for the enormous scope document size.
    At last, the effect of regular information refreshes was assessed for various
    size of the documents. Another far off information evaluating strategy was proposed
    based on mathematical mark procedure to satisfy the target of productive answer
    for checking the honesty of the redistributed information in distributed computing.
    The proposed conspire addresses the issue of extra calculation and correspondence
    cost for cloud information stockpiling framework. The D&CT information structure
    likewise enables their strategy to be pertinent for huge scope information with
    least preparing time on the customer. The proposed information examining plan
    is executed in the genuine condition by utilizing java and C++ language to address
    the target of assessing DRDA technique. The presentation of the DRDA plot was
    approved by utilizing the benchmark test in the copying condition and broke down
    the DRDA conspire by utilizing unmistakable boundaries, for example, length of
    mark, document size, and the likelihood of identification. The various situations
    likewise characterized to assess the proposed strategy.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 它提出了一种基于最先进的信息评估技术的主题分类，以满足云计算数据存储完整性领域的差距和突出问题的识别需求。定性分析用于比较现有方法，并突出它们的优点、缺点以及尚未解决但已识别和突出的云和移动计算环境中的数据审计方案的开放问题和挑战。目前的数据审计方法在实际云计算环境中得到了实施，并使用基准测试来评估这些方法在客户端和服务器端的计算和通信成本。此外，分析了动态数据更新操作对现有数据方法在真实环境中的影响。它研究了动态数据更新过程对大规模文件大小的影响。最后，评估了常规数据更新对不同文件大小的影响。提出了一种基于数学标记方法的新远程数据审计方法，以实现对云计算中重要数据完整性的有效检查。该方案解决了云数据存储系统额外计算和通信成本的问题。D&CT
    数据结构还使他们的方法能够适用于大规模数据，并且客户端的处理时间最少。提出的数据审计方案通过使用 Java 和 C++ 语言在真实环境中实施，以解决评估 DRDA
    方法的目标。通过在仿真环境中使用基准测试验证了 DRDA 方案的性能，并通过使用长度、文件大小和检测概率等明确参数分析了 DRDA 方案。还定义了不同的场景来评估所提出的方法。
- en: Moreover, it broke down the quality of the security based on mathematic to approve
    and verify the security of the DRDA technique. The outcomes indicated that the
    D&CT information structure lessens the handling season of dynamic information
    update activities by diminishing the quantity of moving. Furthermore, the D&CT
    information structure significantly declines the preparing season of dynamic information
    update for enormous scope re-appropriated record in distributed computing.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它根据数学来评估和验证 DRDA 技术的安全质量。结果表明，D&CT 信息结构通过减少移动数量，减少了动态信息更新活动的处理时间。此外，D&CT
    信息结构显著降低了云计算中大规模外包文件的动态数据更新处理时间。
- en: Chambre et al. (Shimbre & Deshpande, 2015) talks about the record circulation
    and SHA-1 strategy. At the point when the document is conveyed, then information
    is likewise isolated into numerous work- ers. So here the need of information
    security emerges. Each square of record contains its own hash code, utilizing
    hash code which will improve client verification process; just approved individual
    can get to the information. Here, the information is encoded utilizing propelled
    encryption standard, so information is effectively and safely put away on cloud.
    Outsider reviewer is utilized for open inspecting. This paper talks about the
    treatment of some security issues like Fast mistake limitation, information honesty,
    information security. The proposed plan permits clients to review the information
    with lightweight correspondence and calculation cost. Examination shows that the
    proposed framework is profoundly effective against noxious information adjustment
    assault and worker plotting assault. Execution and broad security examination
    shows that proposed frameworks are provably secure and exceptionally productive.
    They show that their plan is profoundly productive for worker conspiring assault
    and vindictive information adjustment assault with least calculation overhead.
    Execution investigation and broad security shows that the proposed plot is provably
    secure and profoundly productive. Behl (Behl, 2011) investigated the security
    issues identified with the cloud. The paper likewise talks about the current security
    ways to deal with secure the cloud framework and applications and their disadvantages.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Chambre等人（Shimbre & Deshpande，2015）讨论了文件分发和SHA-1方法。 当文件被分发时，数据也被分成多个工作者。 所以这里需要数据安全。
    每个文件块包含自己的哈希码，使用哈希码将改进用户认证过程；只有经授权的人员才能访问数据。 这里，数据使用高级加密标准进行加密，因此数据可以轻松且安全地存储在云上。
    第三方审计员用于公开审计。 本文讨论了一些安全问题的处理，如快速错误限制、数据完整性、数据安全性。 所提出的方案允许用户通过轻量级的通信和计算成本审计数据。
    分析表明，所提出的系统对恶意数据篡改攻击和工作者串通攻击具有高效性。 执行和广泛的安全分析表明，所提出的系统具有可证明的安全性和高效性。 他们表明，他们的设计对于工作者串通攻击和恶意数据篡改攻击非常高效，且计算开销最小。
    执行分析和广泛的安全性表明，所提出的方案是可以证明安全且非常有效的。 Behl（Behl，2011）探讨了与云相关的安全问题。 本文还讨论了保护云系统和应用程序的现有安全方法及其缺点。
- en: There are various security challenges in the haze of which, this paper has attempted
    to address the most widely recognized and basic ones. A protected cloud is unthinkable
    except if the virtual condition viz. foundation, VM, interfaces, organize transmissions
    are secure. Cloud condition request much over the customary security arrangements,
    which do not plan well to the virtualized situations, in view of the mind-boggling
    and dynamic nature of the distributed computing. As a venturing stone, cloud suppliers
    and clients should cooperate on characterizing the prerequisites and the points
    of interest. It is 220 2011 World Congress on Information and Communication Technologies
    certain that new virtualization-mindful security arrangements ought to be actualized
    to guarantee the pre-emptive security to the general framework. The cloud security
    arrangements ought to have the knowledge to act naturally safeguarding and be
    able to give constant checking, discovery and avoidance of known and obscure dangers.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这片朦胧之中存在着各种安全挑战，本文试图解决最广为认可和基本的挑战。 除非虚拟环境，即基础设施、虚拟机、接口、网络传输是安全的，否则安全的云是不可能的。
    由于复杂和动态的云计算性质，云环境需要比传统的安全解决方案更多的内容。 作为迈出的第一步，云提供商和用户应该共同制定需求和细节。 新的虚拟化感知安全解决方案应该被实施，以确保对整个系统的预防性安全。
    云安全解决方案应该具有自我防御的智能，能够提供对已知和未知威胁的实时监控、检测和预防。
- en: 'Usman et al. (Usman et al., 2017) scrambled mystery information in compacted
    video transfers is a moderately new examination region which is drawing in consideration
    of scientists. This is basically because of protection and security issues worried
    about the open mists. In this article, a made sure about conspire has been introduced
    which shrouds the mystery information in HEVC encoded video transfer, i.e., in
    packed area. The proposed plot comprises three significant stages: video encoding,
    information encryption, and unscrambling with/without interpreting. The proposed
    conspire attempts to keep up the first video transfer size after encryption with-
    out influencing the visual nature of video information. In this way, it creates
    a perfect stage for constant video applications. The mystery information is appropriated
    in encoded video transfer, so it is hard for programmers to remove whole mystery
    information. This is be- cause of the way that programmers do not have the foggiest
    idea about the specific areas and examples of the concealing plan, regardless
    of whether they take the mystery key. Another significant bit of leeway is that
    their proposed conspire completely bolsters the encoding and unraveling structure
    of the HEVC standard. The video transfer with encoded mystery information can
    undoubtedly be decoded without undermining or indicating extra concealed data.
    Test results have demonstrated that the proposed plot keeps up the visual quality
    with a slight trade-off on expanding the size of the encoded video transfer.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Usman等人（Usman等人，2017年）在紧凑的视频传输中混淆了神秘信息，这是一个相对较新的研究领域，吸引了科学家们的注意。这主要是因为涉及到公共云的隐私和安全问题。在本文中，提出了一种安全方案，该方案将秘密数据隐藏在HEVC编码的视频传输中，即在压缩区域内。所提出的方案包括三个重要阶段：视频编码、数据加密和解密（有/无解释）。所提出的方案旨在在加密后保持原始视频传输的大小，而不影响视频数据的视觉质量。因此，它为实时视频应用程序提供了理想的平台。秘密数据被分布在编码的视频传输中，因此黑客很难提取整个秘密数据。这是因为黑客不知道隐藏方案的具体位置和模式，即使他们获得了秘密密钥。另一个重要的优点是，他们提出的方案完全支持HEVC标准的编码和解码结构。具有编码秘密数据的视频传输可以轻松解码，而不会危及或显示额外的隐藏信息。测试结果表明，所提出的方案在维持视觉质量的同时，略微增加了编码视频传输的大小。
- en: Garg et al. (Garg & Sharma, 2014) discussed that at the point when an asset
    obliged cell phone stores its information on the cloud, there is consistently
    a major worry of whether the cloud specialist organization stores the documents
    accurately or not. Security is the principle worry in portable distributed computing.
    The proposed instrument gives a security component to making sure about the information
    in portable distributed computing with RSA calculation and hash work. This exploration
    paper has proposed an instrument to give classification and honesty to the information
    put away in portable cloud. The proposed plot utilizes RSA calculation with other
    encryption decoding procedures to make sure about the information in such a way
    that no spillage of information on cloud could be performed. In this plan, encryption
    is utilized to give security to the information while in communication. Since
    the scrambled record is put away on the cloud, so client can accept that his information
    is secure. In the plan record, just in scrambled structure is moved over the channel,
    which lessens the issue of data divulgence. No, third individual or gatecrasher
    can get the document since that individual do not knows the key of information
    proprietor. There is consistently an extension for development in each field of
    work, so here too. One of the suspicion made in all the models of security are
    that the TP An is nonpartisan. All the calculations and confirmations are offloaded
    to TP A, so there is a need to make TP A safer. Future work could be investigating
    the utilizations of other systems applied in secure capacity administrations of
    portable cloud condition. Some work should likewise be possible to diminish the
    overhead of versatile terminal.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Garg等人（Garg & Sharma，2014年）讨论了当资产所需的手机将其数据存储在云上时，是否始终存在云服务提供商是否正确存储文件的大问题。安全性是移动云计算的主要关注点。所提出的工具提供了一种使用RSA算法和哈希函数来确保移动云中数据安全的安全机制。这篇研究论文提出了一种工具，为移动云中存储的数据提供保密性和完整性。所提出的方案利用RSA算法和其他加密解密技术来保护数据，以确保在云上不会发生数据泄露。在这个方案中，加密用于在通信过程中为数据提供安全保障。由于加密文件存储在云上，因此用户可以相信他的数据是安全的。在设计文档中，只有加密形式的文件在通道上传输，这减少了信息泄露的问题。没有第三人或入侵者可以获得文件，因为该人不知道数据所有者的密钥。在每个工作领域都存在改进的空间，因此在这里也是如此。安全模型的所有假设中都假定了TP
    An是中立的。所有的算法和验证都被卸载到TP A上，因此需要使TP A更安全。未来的工作可能涉及到研究移动云环境中安全存储服务中应用其他网络的用途。还可以做一些工作来减少移动终端的开销。
- en: Samir et al. proposed model in the paper takes 4 prime number in RSA and instead
    of using one public key, 2 public key is sent to the receiver. The problem of
    speed is sorted out by using RSA with Chinese Remainder Theorem. Chinese Remainder
    Theorem, CRT, is a theorem in mathematics that can be used in cryptography .Its
    application is computing, which is very important in regard to calculations of
    algorithmic and computations modular. The Chinese remainder theorem (CRT) determines
    a single integer from its remainders from a set of modulos. It has also got applications
    in digital signal processing. CRT allows for RSA algorithm implementation very
    efficiently. If the same message is encrypted using random key more than one time
    makes the ciphertext look different every time is used here. The comparison in
    the paper clearly states the all-time encryption and decryption of RSA-CRT is
    nearly half to that of RSA. For a 640 bit length plaintext, RSA-CRT to RSA time
    taken is 26:42\. The paper shows in-depth research about how it claims RSA-CRT
    an enhanced algorithm than RSA.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Samir等人在论文中提出的模型采用了RSA中的4个素数，而不是使用一个公钥，而是将2个公钥发送给接收者。通过使用带有中国剩余定理的RSA来解决速度问题。中国剩余定理（CRT）是数学中的一个定理，可用于密码学中。其应用是计算，在算法和计算模块的计算方面非常重要。中国剩余定理（CRT）从一组模的剩余中确定一个单一的整数。它在数字信号处理中也有应用。CRT允许RSA算法的实现非常高效。如果使用随机密钥多次加密相同的消息，使得每次使用的密文看起来都不同。论文中的比较清楚地表明，RSA-CRT的全时加密和解密几乎是RSA的一半。对于640位长度的明文，RSA-CRT到RSA所花费的时间为26:42。该论文深入研究了如何宣称RSA-CRT比RSA更先进的算法。
- en: Pant et al. (Pant et al., 2015) discussed information and data security as a
    most significant issue of cloud processing and IT industry. In this paper they
    utilize some strategy to make sure about information in cloud or web. This paper
    examined security issues in distributed computing frameworks and how they can
    be forestalled, here they use cryptography and steganography strategy together
    to make sure about information. RSA calculation is safer than other calculation.
    They incorporate RSA calculation with other calculation to give greater security
    to information. In steganography, they get scrambled picture, which appears to
    be identical to a unique picture by the natural eye. In the event that they examination
    the picture double codes then the distinctions would be seen. Else they are incapable
    of recognizing the first picture. The methodology they have use in this paper
    will assist with making a solid structure for the security of information in distributed
    computing field or web.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Pant等人（Pant等人，2015）讨论了信息和数据安全作为云处理和IT行业最重要的问题。在这篇论文中，他们利用了一些策略来确保在云端或网络中的数据安全。这篇论文研究了分布式计算框架中的安全问题以及如何防止它们，在这里他们将密码学和隐写术策略结合在一起以确保数据安全。RSA算法比其他算法更安全。他们将RSA算法与其他算法结合起来，为数据提供更高的安全性。在隐写术中，他们得到的加密图像，在自然眼睛看来与原始图像相同。如果他们分析图像的二进制代码，那么差异就会被看到。否则，他们将无法识别原始图像。本文中所使用的方法将有助于为分布式计算领域或网络中的数据安全构建一个坚实的框架。
- en: Somani et al. (Somani et al., 2010) discussed that among the numerous IT powerhouses
    driven by pat- terns in distributed computing has not dicey. It gives nearly everybody
    has brought uplifting news. For ventures, cloud processing is deserving of thought
    and attempt to fabricate busi- ness frameworks as a path for organizations along
    these lines can without a doubt realize lower costs, higher benefits and more
    decision; for huge scope industry, After the monetary unrest will be the expense
    of framework for huge scope pressure appears to be likely; de- signers, when in
    the face of distributed computing, through the PaaS model can adequately improve
    their own limit, Therefore, the effect of cloud processing on the ISV is the biggest
    of the numerous jobs; for architects and engineers are concerned. There is the
    approach of cloud registering will undoubtedly birth various new openings. The
    mists will develop in size as before long as accessible transfer speed and the
    relating administration model develop enough, distributed computing will bring
    a progressive change in the Internet. Cloud register- ing reported a minimal effort
    supercomputing administrations to give the plausibility, while there are an enormous
    number of producers behind, there is no uncertainty that distributed computing
    has a splendid future.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Somani等人（Somani等人，2010）讨论了由云计算趋势驱动的众多IT强国中，没有任何疑问。几乎每个人都带来了好消息。对于企业来说，云计算值得考虑并尝试建立业务系统作为一种方式，因此公司可以确实实现降低成本、增加利润和更多选择；对于大规模产业，经济危机之后，大规模压力下的基础设施成本似乎是可能的；对于设计师来说，当面临云计算时，通过PaaS模型可以有效提高他们自己的能力，因此，云计算对ISV的影响是众多角色中最大的；对于工程师和开发人员来说，云计算的出现必然会诞生大量新的工作机会。一旦可用带宽和相应的服务模型足够发展，云计算将带来互联网的革命性变化。云计算提供了低成本的超级计算服务的可能性，虽然背后有大量的制造商支持，但毫无疑问，云计算拥有光明的未来。
- en: Arora et al. (Arora et al., 2013) discussed in this paper, encryption calculations
    have been proposed to make cloud information secure, helpless and offered worry
    to security issues, challenges and furthermore examinations have been made between
    AES, DES, Blowfish and RSA calculations to locate the best security calculation,
    which must be utilized in distributed computing for making cloud information secure
    and not to be hacked by assailants. Encryption calculations assume a significant
    job in information security on cloud, and by examination of various boundaries
    utilized in calculations, it has been discovered that AES calculation utilizes
    least an ideal opportunity to execute cloud information. Blowfish calculation
    has least memory prerequisite. DES calculation expends least encryption time.
    RSA devours longest memory size and encryption time. By doing execution for all
    calculations in IDE apparatus and JDK 1.7, the ideal yield for the information
    on distributed computing has been accomplished. In the present time request of
    cloud is expanding, so the security of the cloud and client is on top concern.
    Henceforth, proposed calculations are useful for the present prerequisite. In
    future a few correlations with various methodologies and results to show the adequacy
    of the proposed structure can be given.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Arora 等人（Arora et al., 2013）在本文中讨论了加密算法，以使云数据安全，脆弱，并对安全问题、挑战以及 AES、DES、Blowfish
    和 RSA 算法进行了比较，以找到最佳的安全算法，这必须在云计算中使用，以确保云数据安全，并且不被攻击者攻击。加密算法在云数据的安全中起着重要作用，并且通过对算法中使用的不同参数进行比较，发现
    AES 算法使用最少的时间来执行云数据。Blowfish 算法具有最少的内存需求。DES 算法消耗最少的加密时间。RSA 消耗最长的内存大小和加密时间。通过在
    IDE 工具和 JDK 1.7 中对所有算法进行执行，已经实现了对云计算数据的最佳输出。当前云的需求正在增加，因此，云和用户的安全性是首要关注的问题。因此，提出的算法对当前需求是有帮助的。将来可以与不同方法进行比较，并提供结果以展示所提出结构的有效性。
- en: Ruj et al. (Ruj et al., 2012) discussed a security safeguarding access control
    plot that gives fine-grained get to control and confirms clients who store data
    in the cloud. The cloud anyway does not have the foggiest idea about the personality
    of the client who stores data, however just confirm the client’s accreditations.
    Key appropriation is done in a decentralized manner. One restriction is that the
    cloud knows the entrance strategy for each record put away in the cloud. In future,
    they might want to ensure the security of client traits as well. In this paper,
    they propose another security saving validated access control conspire to make
    sure about mists’ information. In the proposed plot, the cloud checks the validness
    of the client without realizing the client’s personality before putting away data.
    Likewise, their plan has the additional element of access control where just legitimate
    clients can unscramble the put away data. The plot forestalls replay assaults
    and supports creation, adjustment, also, perusing information put away in the
    cloud. In addition, their validation also gets to control plot is decentralized
    and vigorous, in contrast to others getting to control plans intended for mists
    brought together. The correspondence, calculation, and capacity overheads are
    tantamount to brought together methodologies.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Ruj 等人（Ruj et al., 2012）讨论了一种安全保障访问控制方案，该方案提供了细粒度的访问控制，并确认在云中存储数据的用户。然而，云并不知道存储数据的用户的身份，而只是验证用户的凭据。密钥分发是以分散的方式进行的。一个限制是云知道云中存储的每个记录的访问策略。未来，他们还希望确保用户特征的安全性。在本文中，他们提出了一种新的安全保障验证访问控制方案来保护云数据。在所提出的方案中，云在存储数据之前检查用户的有效性，而不知道用户的身份。此外，他们的方案具有附加的访问控制功能，只有合法用户才能解密存储的数据。该方案防止了重放攻击，并支持创建、修改和读取存储在云中的数据。此外，他们的验证和访问控制方案是分散的和强大的，与为集中式云设计的其他访问控制方案相比。通信、计算和存储开销与集中式方法相当。
- en: Subashini et al. (Subashini & Kavitha, 2011) discussed in this paper, they examined
    the issues in security in in- formation capacity in cloud condition. This makes
    the information priceless regardless of whether an interloper gains admittance
    to this information. Even though this model will require some quantifiable exertion
    to be actualized continuously, it gives the essential answer for a situation like
    the cloud, indicating an antagonistic potential to turn into the cutting edge
    undertaking condition. Executing such a model during the prior periods of the
    development of the framework will be generally simpler as for actualizing it after
    part of information take exile in the cloud. This model in blend with their multi-level
    security model for making sure about information over transmission will give legitimate
    crossbars in the wires of malevolent clients.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Subashini等人（Subashini＆Kavitha，2011）在本文中讨论了云环境中信息存储安全性的问题。即使入侵者获得对这些数据的访问权，这使得数据变得无价。尽管这种模型需要一些可量化的努力才能在实时中实施，但它为像云这样的环境提供了基本的解决方案，表明了成为下一代企业环境的敌意潜力。在系统发展的早期阶段实施这种模型将相对容易，因为相比于在云中存储大量数据之后再实施它而言。这种模型与他们的多级安全模型相结合，用于确保数据在传输过程中的安全，将在恶意用户的网络中提供适当的防护。
- en: Wang et al. (Wang et al., 2010) discussed cloud computing has been imagined
    as the next-gen of big business IT. As opposed to conventional venture IT arrangements,
    where the IT administrations are under appropriate physical, coherent, and faculty
    controls, distributed computing moves the application programming and databases
    to workers in enormous server farms on the Internet, where the administration
    of the information and administrations are not completely dependable. In this
    article they center around cloud information stockpiling security. They first
    present a organize engineering for viably portraying, creating, also, assessing
    secure in- formation stockpiling issues. Through inside and out investigation,
    some current information stockpiling security building squares are inspected.
    The advantages and disadvantages of their pragmatic ramifications in the setting
    of distributed computing are summed up. Further testing issues for open examining
    administrations that should be engaged on are talked about as well. They accept
    security in cloud computing, a region brimming with difficulties and of vital
    significance, is still in its outset presently yet will pull in colossal measures
    of research exertion for a long time to come.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 王等人（Wang等，2010）讨论了云计算被想象为下一代大型企业IT。与传统的企业IT解决方案相反，在这些解决方案中，IT服务受到适当的物理、逻辑和人员控制，而云计算将应用软件和数据库转移到互联网上的大型数据中心的服务器上，其中数据和服务的管理并不完全可靠。在本文中，他们关注云数据存储安全性。他们首先提出了一种网络架构，用于有效地描述、开发和评估安全的信息存储问题。通过深入分析，审查了一些现有的数据存储安全构建模块。总结了它们在云计算环境中的实际影响的利弊。还讨论了公开审计服务的进一步测试问题。他们认为，云计算中的安全性，这是一个充满挑战和至关重要的领域，目前仍处于起步阶段，但将在未来的很多年里吸引大量的研究工作。
- en: Zhou et al. (Zhou et al., 2013) discussed in this paper, first it proposes RBE
    plot that accomplishes proficient client disavowal. At that point, they introduced
    a RBAC based distributed storage design which permits an association to store
    information safely in an open cloud, while keeping up the delicate data identified
    with the association’s structure in a private cloud. At that point, they have
    built up a safe distributed storage framework engineering and have indicated that
    the framework has a few unrivaled attributes, for example, steady size cipher
    text and decoding key. Their trials see that both encryption and decoding calculations
    are effective on the customer side, and decoding time at the cloud can be decreased
    by having different processors, which is normal in a cloud condition. They accept
    that the proposed framework can be valuable in business circumstances as it catches
    handy access arrangements dependent on jobs in an adaptable way. What’s more,
    it gives secure information stockpiling in the cloud authorizing these get to
    strategies.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Zhou等人（Zhou等人，2013）在本文中讨论了RBE图，首先提出了一种实现高效客户否认的方法。然后，他们介绍了一种基于RBAC的分布式存储架构，允许组织在公共云中安全存储数据，同时在私有云中保持与组织结构相关的敏感信息。接着，他们建立了一个安全的分布式存储系统架构，并表明该系统具有一些优越特性，例如恒定大小的密文和解密密钥。他们的试验表明，客户端的加密和解密算法都很有效，并且在云端的解密时间可以通过使用多个处理器来减少，这在云环境中是很常见的。他们认为，所提出的系统可以在商业环境中很有用，因为它以一种灵活的方式捕捉基于角色的实用访问策略。此外，它提供了在云中安全存储数据的方法，以实施这些访问策略。
- en: Hardik et al. (Gandhi & Gupta, 2015) discussed that in the current scenario,
    everything is being transferred on the web and other communication medium. We
    need to make our data secure from all other attacker and unauthorized person.
    By the use of Magic Rectangle, we can have different ciphertext for the same character.
    This approach gives enhancement to the public key cryptosystem. This work prohibits
    any intruders from obtaining the plain text in a readable form. The security aspect
    is enhanced as there is no repetition of values in Magic rectangle. Even if the
    intruders found the initial values of MR, it is very difficult to trace the row/column.
    One of the issues in the proposed work is additional time needed for the construction
    of Magic rectangle initially.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Hardik等人（Gandhi＆Gupta，2015）讨论了在当前情况下，一切都在网络和其他通信媒介上传输。我们需要使我们的数据免受所有其他攻击者和未经授权的人的攻击。通过使用魔方，我们可以为相同的字符获得不同的密文。这种方法提升了公钥加密系统。这项工作禁止任何入侵者以可读形式获取明文。由于魔方中没有值的重复，安全性得到了增强。即使入侵者找到了MR的初始值，要追踪行/列也是非常困难的。所提出的工作中的一个问题是初始构建魔方需要额外的时间。
- en: Shinde et al. (Shinde & Fadewar, 2008) discussed in this paper talks about the
    RSA cryptography algorithm. After the author gave a brief list and notes on cryptographic
    goals, they then elaborated on the working of the RSA cryptographic algorithm.
    How the keys are generated, and how the encryption and decryption is done. CRT
    is then introduced with an elaborate functioning. The author then shows the steps
    to using RSA with CRT, how to use them together in the process of encryption and
    decryption. The proposed approach (RSA-CRT) is then analyzed on the basis of security
    and performance. An approach of implementing the said proposed approach is done
    in java, displaying the message, the sender’s and receiver’s public and private
    keys and the encryption and decryption. The paper then concludes that the encryption
    is more effective with CRT.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Shinde等人（Shinde＆Fadewar，2008）在本文中讨论了RSA加密算法。在作者简要列举和注释了加密目标之后，他们详细阐述了RSA加密算法的工作原理。密钥是如何生成的，以及加密和解密是如何进行的。然后引入了CRT及其详细功能。作者随后展示了如何使用RSA和CRT，如何在加密和解密过程中将它们一起使用的步骤。提出的方法（RSA-CRT）然后根据安全性和性能进行了分析。在Java中实现了所述的提出方法的方法，并显示了消息、发送者和接收者的公钥和私钥以及加密和解密。然后，论文得出结论：使用CRT的加密更有效。
- en: Lakshmi and Chandravathi (Lakshmi, 2020) discussed in this paper the author
    discussed that the private data is prone to numerous noxious attacks. Henceforth,
    the requirement for ensuring secret data has gotten a significant challenge over
    the Internet. Cryptographic techniques are the most ideal decision for giving
    protection from pernicious attacks. By applying different strategies, data can
    be secured. For making sure about data over the cloud is another significant test,
    which is still must be thought of. The Homomorphic Encryption is a promising technique
    for making sure about data in the cloud. In this paper the author proposed RSA
    calculation utilizing numerous public key sets with Homomorphic Encryption. The
    thought is to produce a critical pair from numerous keys utilizing RSA homomorphic
    encryption, which is halfway homomorphic in nature, rather than a solitary key
    pair. This strategy uses one key for encryption and the other for decryption.
    The excellence of this plan is that a solitary key pair is chosen from numerous
    key sets which communicate with different users. Different key age strategies
    use some numerical rationale for acquiring public key straightforwardly, when
    contrasted with RSA with single key. Thusly, the attacks for finding the private
    key are halted.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Lakshmi 和 Chandravathi（Lakshmi, 2020）在本文中讨论，作者提到私有数据容易受到许多有害攻击的影响。因此，确保秘密数据的要求已经成为互联网上的一个重要挑战。加密技术是提供保护免受恶意攻击的最佳选择。通过应用不同的策略，数据可以得到保护。为了在云中保护数据，这是另一个重要的挑战，仍然需要考虑。同态加密是在云中保护数据的一种有前途的技术。在本文中，作者提出了使用同态加密的多个公钥集合的
    RSA 算法。这个想法是使用 RSA 同态加密从多个密钥中生成一个关键对，其性质是部分同态的，而不是一个单一的密钥对。该方法使用一个密钥进行加密，另一个进行解密。这种方案的优点在于，从多个密钥集合中选择一个单一的密钥对与其他用户进行交互。与使用单个密钥的
    RSA 相比，不同的密钥生成策略使用一些数学逻辑来直接获得公钥。因此，寻找私钥的攻击被阻止。
- en: Kim et al. (Kim et al., 2020) discussed that private exponent in RSA is generated
    from public exponent which are pre-selected by using Euclid’s algorithm. It is
    nearly as same as modulus number in terms of bit size. So, reduction in private
    and public exponent is not easy in RSA during key generation. CRT method discussed
    in which exponent is reduced and a fast and more secure method was introduced
    to reduce exponent. The paper discussed about prime number generation mechanism
    as well.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Kim 等人（Kim et al., 2020）讨论了 RSA 中的私有指数是如何通过使用欧几里得算法预先选择的公共指数生成的。在比特大小方面，它几乎与模数数字相同。因此，在
    RSA 密钥生成过程中不容易减少私钥和公钥指数。文章讨论了 CRT 方法，其中指数被减小，并且介绍了一种快速而更安全的方法来减少指数。该论文还讨论了素数生成机制。
- en: Balaji et al. (Balaji et al., 2018) discussed the limitations of Efficiencies
    in Cloud resource management which are largely determined by pre-set rules and
    are reactive. To overcome this, the authors adopted a cloud resource management
    done by a predictive method. AWS t2 micro instance was used to host a read-intensive
    application for on-off timesheets, and using historical data, simulation based
    workload patterns were made. Comparisons were made between the existing and proposed
    methods which showed that the proposed method had reduced the errors, decreased
    the waiting time for users, increased number of requests and improved utilization
    of resources.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Balaji 等人（Balaji et al., 2018）讨论了云资源管理效率的局限性，这在很大程度上是由预设规则决定的，并且是反应性的。为了克服这一点，作者采用了一种由预测方法进行的云资源管理。使用
    AWS t2 微实例来托管一个用于开关时间表的读密集型应用，并使用历史数据制作了基于模拟的工作负载模式。对现有方法和所提出方法进行了比较，结果显示所提出的方法减少了错误，减少了用户的等待时间，增加了请求的数量，并提高了资源的利用率。
- en: Balaji et al. (Balaji et al., 2019) discussed in this paper that by assuming
    enterprise workloads are constant, resource provisioning becomes ineffective.
    By analyzing synthetic bursty workloads, the current research aims to address
    this challenge. The researchers used Hurst Exponent and Sample Entropy metrics
    to build resource provisioning models. NASA datasets were used to compare the
    performance of the proposed method with the baseline reactive approach and the
    index of dispersion method.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Balaji 等人（Balaji et al., 2019）在本文中讨论，假设企业工作负载是恒定的，资源分配就会变得无效。通过分析合成的突发工作负载，当前的研究旨在解决这一挑战。研究人员使用赫斯特指数和样本熵度量构建资源分配模型。NASA
    数据集用于将所提出的方法与基准反应方法和离散度方法的性能进行比较。
- en: Narayanan et al. (Narayanan & Cherukuri, 2018) discussed that To acquire current
    information about a patient, along with tracking purpose, the Data Lake has to
    be moved to a Cloud for analyzing and analyzing the data would require moving
    the data to a Cloud. Based on this research, the authors recommend using Data
    Lake in Cloud as a cloud-based integration framework. The work presented here
    extends the information integration architecture through the design of using a
    mathematical model (Petri Net) to verify an architecture for Data Lake in Cloud.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Narayanan等人（Narayanan & Cherukuri, 2018）讨论了为了获取有关患者的当前信息，以及跟踪目的，必须将数据湖移至云端进行分析，而分析数据则需要将数据移至云端。根据这项研究，作者建议在云端使用数据湖作为基于云的集成框架。此处提出的工作通过设计使用数学模型（Petri网）来验证云中数据湖的架构，扩展了信息集成架构。
- en: Balaji et al. (Balaji et al., 2014) discussed that using predefined limits,
    cloud service providers provide or de-provision resources based on average consumption.
    As a consequence, it does not fully address the diverse range of enterprise use
    cases. There have been few cases reported of resource management using predictive
    techniques, even though they could perform more effectively. To manage resources
    effectively in a cloud environment, it is crucial to establish a model that can
    predict how the system will perform under load. As the metric for monitoring resource
    utilization, they used Request rate to compare the performances of two such predictions
    models, Holt-Winter and ARIMA. Several selected ARIMA models were shown to perform
    better than the Holt-Winter model, which would subsequently be useful for managing
    resources on the cloud if data request rates followed a similar trend
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Balaji等人（Balaji et al., 2014）讨论了云服务提供商使用预定义的限制，根据平均消耗提供或取消资源。因此，它并没有完全解决企业各种用例的不同范围。尽管可以更有效地执行，但仍然有少数案例报告使用预测技术来管理资源。在云环境中有效地管理资源，关键是建立一个能够预测系统在负载下的性能的模型。作为监视资源利用率的指标，他们使用请求速率来比较两种预测模型的性能，Holt-Winter和ARIMA。显示了几个选择的ARIMA模型比Holt-Winter模型表现更好，如果数据请求速率遵循类似的趋势，这随后将对在云上管理资源有用。
- en: PROBLEM DEFINITION
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 问题定义
- en: In Cloud Storage, we share data among many clients, server and people. Thus,
    the security of information present in the cloud is not guaranteed since it is
    easy for an intruder to access and demolish the first type of information. So,
    there is a requirement of some plainly key which help us to do cross breed encryption
    and protect the data. The algorithm of RSA is an asymmetric cryptography technique,
    this is working on two keys, i.e. public key and private key. The proposed model
    takes four prime numbers in RSA. Instead of sending one public key directly, send
    two public keys to the receiver. But there is the problem of the speed, so that
    in RSA decryption used the Chinese remainder theorem to enhance RSA decryption
    speed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在云存储中，我们将数据分享给许多客户端、服务器和人员。因此，云中存在的信息的安全性不能得到保证，因为入侵者很容易访问和破坏第一类信息。因此，需要一些明文密钥来帮助我们进行混合加密和保护数据。RSA算法是一种非对称加密技术，它使用两个密钥，即公钥和私钥。建议模型在RSA中采用四个素数。与直接发送一个公钥不同，将两个公钥发送给接收者。但是存在速度问题，因此在RSA解密中使用中国剩余定理来提高RSA解密速度。
- en: Contribution of the Work
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 工作的贡献
- en: 'Our work contributes the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的工作贡献如下：
- en: '1\. New approach of the RSA algorithm: Modified RSA with CRT and multiple keys:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. RSA算法的新方法：修改的RSA与CRT和多密钥：
- en: IN ITSELF, the RSA algorithm is an asymmetric algorithm, which is deemed to
    be secure, but lacks in the speed component. Especially when the prime numbers
    used to generate keys are very large, the time it takes to compute all the necessary
    computations can be long as it has to ensure the security.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，RSA算法是一种非对称算法，被认为是安全的，但在速度方面欠缺。特别是当用于生成密钥的素数非常大时，进行所有必要计算所需的时间可能很长，因为它必须确保安全性。
- en: 'Thus with our proposed approach, we are implementing both security and speed.
    With CRT in the midst of this approach, it breaks down the main parts of the algorithm
    to increase the throughput rate up to 4 times. This is done by partitioning the
    following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过我们提出的方法，我们正在实现安全性和速度。在此方法中，使用CRT将算法的主要部分分解以增加吞吐量高达4倍。这是通过对以下内容进行分区来完成的：
- en: DP; DQ; DR; DS < D and CP; CQ; CR; CS < C
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DP; DQ; DR; DS < D and CP; CQ; CR; CS < C
- en: By doing this, CRT reduces the size of the numbers to less than half their original
    sizes, which would automatically speed up the algorithm, making it take lesser
    time to compute.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，CRT将数字的大小减少到原始大小的一半以下，这将自动加快算法，使其计算时间更短。
- en: RSA with more than 2 prime numbers – RSA with multiple keys helps to ensure
    more security. In the normal RSA algorithm, there are 2 prime numbers present,
    which would be undergoing a few computations to generate a public key and a private
    keys, which in turn are used in the encryption and decryption process.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多个质数的RSA——使用多个密钥的RSA有助于确保更高的安全性。在普通的RSA算法中，存在2个质数，这些质数将进行一些计算以生成公钥和私钥，而这些密钥又用于加密和解密过程。
- en: In RSA with multiple keys, the number of prime numbers are doubled. There are
    4 prime numbers, which in turn will be undergoing computations to generate 4 keys.
    With the doubling of the prime numbers, naturally, all the computation processes
    will be doubled as well. There will 2 public keys and 2 private keys generated.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用多个密钥的RSA中，质数的数量翻了一番。有4个质数，这些质数将进行计算以生成4个密钥。随着质数的加倍，自然所有的计算过程也会加倍。将生成2个公钥和2个私钥。
- en: Encryption and decryption which had one step each in the normal RSA, now in
    RSA with multiple keys has two steps each. Both sets of public and private keys
    are used in the encryption and decryption processes. Double the amount of encryption
    and decryption are done which increases the security.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在普通的RSA中，加密和解密各有一步，而在使用多个密钥的RSA中，加密和解密各有两步。公钥和私钥的两组都用于加密和解密过程。加密和解密的数量翻倍，这增加了安全性。
- en: '2\. Hash to ensure authenticity and integrity of message:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用哈希来确保消息的真实性和完整性：
- en: Hash algorithms, particularly the SHA-512, are known for ensuring the authenticity
    and integrity of the messages sent from person to person. We are using SHA-512
    for the same. We hash the message after it is read from the file and store the
    hash in the database for further use in the receiver’s end.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希算法，特别是SHA-512，以确保从人到人发送的消息的真实性和完整性而闻名。我们正在使用SHA-512做同样的事情。我们在从文件读取消息后对消息进行哈希处理，并将哈希存储在数据库中，以便在接收端进一步使用。
- en: When the receiver is done with the decryption, and the message is uncovered,
    our pro- posed algorithm then hashes the decrypted message to compare with the
    other hash. If both the hashes match, then it implies that the message is authentic
    and has integrity. Otherwise, it shows a breach and that the message has lost
    its authenticity and integrity.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当接收者完成解密并揭示消息后，我们提出的算法会对解密后的消息进行哈希处理，然后与其他哈希进行比较。如果两个哈希值匹配，则意味着消息是真实且完整的。否则，它显示了一种违反，即消息失去了其真实性和完整性。
- en: '3\. Generating prime numbers from the user’s password:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从用户的密码生成质数：
- en: 'Normally, a function is used to generate random large prime numbers, which
    is in turn used for key generation. It does have its advantages. Nevertheless,
    we are proposing a new way of generating prime numbers: generating them from the
    user’s password. By using the password of the user who is trying to log in to
    the portal or interface, specific arithmetic operations are done on the user’s
    password.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，会使用函数生成随机大质数，然后用于密钥生成。这确实有其优点。然而，我们提出了一种新的生成质数的方法：从用户的密码生成质数。通过使用试图登录到门户或界面的用户的密码，在用户的密码上执行特定的算术操作。
- en: Taking the asci value of the password, operations such as multiplication, addition,
    multiplying the squares of the asci values, or adding the squares of the asci
    values are done. These operations will generate 4 prime numbers, and the same
    operation will not be done to generate all the numbers.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 获取密码的ASCII值，执行乘法、加法、乘以ASCII值的平方或加上ASCII值的平方等操作。这些操作将生成4个质数，并且不会对所有数字执行相同的操作。
- en: Thus we generated a method for computing big prime numbers, and it isn’t needed
    to be saved in the database. And this approach is also unique. The password is
    only known to the user, so we need to keep the password secure, which is necessary
    for every application or website. We didn’t save the private key in the database
    so even if the database is attacked, the attacker will just get encrypted text
    in a binary form which is almost impossible to decrypt without knowing the segment
    size and the private key and both aren’t available anywhere, they are generated
    when only we decipher the text in the application and it makes this process very
    much efficient and secure.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们生成了一种计算大素数的方法，并且不需要保存在数据库中。而且这种方法也是独一无二的。密码只为用户所知，因此我们需要保护密码，这对于每个应用程序或网站都是必要的。我们没有在数据库中保存私钥，因此即使数据库受到攻击，攻击者也只会得到以二进制形式的加密文本，而几乎不可能在不知道段大小和私钥的情况下解密，这两者在任何地方都不可用，只有当我们在应用程序中解密文本时才生成它们，这使得这个过程非常高效和安全。
- en: '4\. Another level of security for the ciphertext:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4. 对密文的另一层安全性：
- en: Considering the normal RSA algorithm, the ciphertext is an integer which is
    sent to the receiver for decryption. In case, an attacker gets or finds the public
    key, they can crack the ciphertext to access the message being sent by attacks.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到普通的RSA算法，密文是发送给接收者以进行解密的整数。如果攻击者获取或找到了公钥，则可以破解密文以访问被攻击者发送的消息。
- en: 'Our approach does the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的方法如下：
- en: a. Converts the message into its ASCII value.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: a. 将消息转换为其ASCII值。
- en: b. Each ASCII value, which is a decimal number, is encrypted.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: b. 加密每个ASCII值，即十进制数。
- en: c. Each ciphertext is converted to its binary equivalent and appended as a long
    binary string and stored in the database to be used by the receiver for decryption.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c. 将每个密文转换为其二进制等效值，并附加为长二进制字符串，并存储在数据库中，以供接收者用于解密。
- en: With the above steps in our approach, we can ensure that an attacker will find
    it extremely difficult to find out the number of bits that the binary string should
    be split into. With a binary string that is very long, figuring out its original
    form, whether it is an integer, an octal number, or a text would be incredibly
    hard. It would be a long process of trial error which would mostly end fruitless.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们方法中的上述步骤，我们可以确保攻击者将极其难以找出二进制字符串应该被分割成的位数。对于非常长的二进制字符串，找出其原始形式，无论是整数、八进制数还是文本，都将非常困难。这将是一个漫长的试错过程，大部分情况下都会以失败告终。
- en: PROPOSED MODEL
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的模型
- en: Detailed Architecture
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 详细的架构
- en: Figure 1 shows that for the first time, if a user signup for the portal, a dynamic
    table is created in the database for the user which stores his/her password for
    the portal. A separate table each for storing the private key and public key of
    every user. All the password/keys of the user is stored by applying cryptographic
    hash function MD5 in database as storing plain text passwords in the database
    is no less than a sin.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图1显示，如果用户首次注册门户，则在数据库中为用户创建动态表，该表存储其门户的密码。每个用户的私钥和公钥分别存储在单独的表中。所有用户的密码/密钥都通过应用密码哈希函数MD5存储在数据库中，因为在数据库中存储明文密码不亚于一种罪恶。
- en: When the user login successfully to the portal, he is redirected to his chatbox.(To
    do so, the contact’s stored in the database is extracted dynamically). All the
    previous exchanged files appears in the chatbox.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户成功登录门户时，他将被重定向到他的聊天框。（为此，从数据库中提取的联系人被动态提取）。所有以前交换的文件都显示在聊天框中。
- en: Figure 2 shows that when a file is sent, the file is uploaded in the database
    which serves as a Cloud to the user. Now, the file stored in the database is actually
    large binary values(as a result of RSA-CRT encryption). For implementing RSA-CRT,
    public key and private key is retrieved from the database. SHA-1 is used for ensuring
    integrity of the data. So the third party has no access to the data sent and received
    between two users. It acts as cloud since the user need not download the exchanged
    file, just by clicking on the file, he can view the current and previously exchanged
    file.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图2显示，当发送文件时，文件将上传到数据库中，该数据库作为用户的云服务。现在，存储在数据库中的文件实际上是大的二进制值（作为RSA-CRT加密的结果）。为了实现RSA-CRT，从数据库中检索公钥和私钥。使用SHA-1来确保数据的完整性。因此，第三方无法访问两个用户之间发送和接收的数据。它作为云，因为用户不需要下载交换的文件，只需点击文件，即可查看当前和以前交换的文件。
- en: 'Algorithm Architecture:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 算法架构：
- en: '| Figure 1\. Storing the log in information and generation of public and private
    key in the database |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 图1. 在数据库中存储日志信息并生成公钥和私钥 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f01](i/ch011.f01.png) |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f01](i/ch011.f01.png) |'
- en: '| Figure 2\. The sender sending a text file to a receiver, which is read, encrypted
    and decrypted by RSA-CRT with multiple keys and verified for authenticity and
    integrity using Hash. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 图2. 发送方向接收方发送文本文件，RSA-CRT使用多个密钥进行加密和解密，并使用哈希验证其真实性和完整性。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f02](i/ch011.f02.png) |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f02](i/ch011.f02.png) |'
- en: 'Figure 3 shows algorithm flow in the sender’s side. The key generation process
    is initiated when the user/sender logs in to the interface. As the proposed approach
    is Modified RSA with CRT, the number of steps in the RSA key generation and encryption
    decryption is doubled. Four big prime numbers are generated. Let them be ‘p’,’q’,’r’
    and ‘s’. Components of the keys ie., ‘n’ and ‘z’ are calculated using the generated
    primes. Their Euler Totient value of the components are also computed. Another
    set of components of the keys are enumerated, namely: ’I and ’g’. Following that
    the main elements of the keys are then determined using the enumerated numbers.
    The keys are generated and determined in this order. The file uploaded by the
    sender is read by the algorithm, which then converts each character into its ASCII
    decimal equivalent. Along with that, the context on the file is hashed using SHA-512
    and saved in the database for verifying in the receiver’s end. Each ASCII decimal
    equivalent is encrypted using the Modified RSA steps and stored in an array. Each
    element of the cipher array is then converted to its binary equivalent with a
    common block size, and appended. This binary string is then saved in the database
    for the receivers to use for decryption.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 发送方算法流程如图3所示。当用户/发送方登录到界面时，密钥生成过程被启动。由于所提出的方法是改进的RSA与CRT，RSA密钥生成和加密解密的步骤数量翻了一番。生成四个大素数，称为‘p’，‘q’，‘r’和‘s’。使用生成的素数计算密钥的组件，即‘n’和‘z’。还计算了组件的欧拉函数值。另一组密钥组件被枚举，即：‘I’和‘g’。然后，使用列举的数字确定密钥的主要元素。按照这个顺序生成和确定密钥。发送方上传的文件由算法读取，然后将每个字符转换为其ASCII十进制等价值。同时，使用SHA-512对文件上的内容进行哈希处理，并保存在数据库中以供接收方验证。使用修改后的RSA步骤加密每个ASCII十进制等价值，并存储在数组中。然后，将密码数组的每个元素转换为其二进制等价值，并附加。然后将此二进制字符串保存在数据库中，供接收者用于解密。
- en: 'Figure 4 shows algorithm flow in the receiver’s side: The algorithm in the
    receiver’s side first accesses the database for the binary string. The block size
    splits the string, and each block is stored in an array. Each binary element is
    converted to its decimal equivalent. Decryption is done for each decimal equivalent
    by the steps of Modified RSA. After each decryption, the computed values are again
    saved in an array. These values are then converted into their ASCII character
    equivalent. And they are appended as a string to put together the content. This
    string is hashed with SHA-512\. It is compared with the hash value already stored
    in the database to verify for authenticity and integrity. If the hashes are the
    same, the context is written to a file and made viewable to the receiver who can
    access it.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '图4显示了接收方算法流程：接收方算法首先访问二进制字符串的数据库。块大小将字符串分割，并将每个块存储在数组中。将每个二进制元素转换为其十进制等价值。对于每个十进制等价值，使用修改后的RSA步骤进行解密。在每次解密后，计算出的值再次保存在数组中。然后将这些值转换为它们的ASCII字符等价值。并将它们作为字符串附加在一起。使用SHA-512对此字符串进行哈希处理。将其与已存储在数据库中的哈希值进行比较，以验证其真实性和完整性。如果哈希值相同，则将内容写入文件，并使接收者可以查看。 '
- en: Functionality
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 功能
- en: Figure 5 shows a gist of application we have made, a secure data exchange app
    where files are encrypted using the RSA-CRT algorithm. For the first time, if
    a user signup for the portal, a dynamic table is created in the database for the
    user which stores his/her password for the portal. A separate table each for storing
    the private key and public key of every user. All the password/keys of the user
    is stored by applying cryptographic hash function MD5 in database as storing plain
    text passwords in the database is no less than a sin.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5展示了我们制作的应用程序的要点，这是一个安全的数据交换应用程序，其中文件使用RSA-CRT算法加密。首次，如果用户注册门户，将为用户在数据库中创建一个动态表，该表存储他/她的门户密码。每个用户的私钥和公钥都存储在单独的表中。用户的所有密码/密钥都通过在数据库中应用密码哈希函数MD5来存储，因为在数据库中存储明文密码不亚于一种罪行。
- en: When the user login successfully to the portal, he is redirected to his chatbox.
    (To do so, the contact’s stored in the database is extracted dynamically). All
    the previous exchanged files appear in the chatbox.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户成功登录到门户时，他将被重定向到他的聊天框。（为此，从数据库中提取存储的联系人动态）。所有以前交换的文件都会出现在聊天框中。
- en: Now when the user sends a file? What happens?
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当用户发送文件时？发生了什么？
- en: When a file is sent, the file is uploaded in the database which serves as a
    Cloud to the user. Now, the file stored in the database (which will be used further
    for retrieval purpose by the user) is actually large binary values (as a result
    of RSA-CRT encryption). For implementing RSA-CRT, public key and private key is
    retrieved from the database. SHA-1 is used for ensuring the integrity of the data
    (Fig 2). So the third party has no access to the data sent and received between
    two users. It acts as cloud since the user need not download the exchanged file,
    just by clicking on the file, he can view the current and previously exchanged
    file.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当发送文件时，文件会上传到数据库中，该数据库为用户提供云服务。现在，数据库中存储的文件（将由用户进一步用于检索目的）实际上是大型二进制值（由于RSA-CRT加密的结果）。为了实现RSA-CRT，从数据库中检索公钥和私钥。SHA-1用于确保数据的完整性（图
    2）。因此，第三方无法访问两个用户之间发送和接收的数据。它充当云，因为用户不需要下载交换的文件，只需点击文件，即可查看当前和以前交换的文件。
- en: '| Figure 3\. Flow of the algorithm in the sender’s side. This shows the key
    genera- tion and encryption of the RSA-CRT with multiple keys algorithm. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 图 3\. 发件人端算法流程。显示使用多密钥RSA-CRT进行密钥生成和加密的流程。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f03](i/ch011.f03.png) |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f03](i/ch011.f03.png) |'
- en: '| Figure 4\. Flow of the algorithm in the receiver’s side. This shows the decryption
    and verification using hash. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 图 4\. 接收方算法流程。显示使用哈希进行解密和验证。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f04](i/ch011.f04.png) |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f04](i/ch011.f04.png) |'
- en: '| Figure 5\. Functions of the algorithm and chat platform. A user can chat
    privately, and send files which will be encrypted and decrypted using Modified
    RSA-CRT. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 图 5\. 算法和聊天平台的功能。用户可以进行私人聊天，并发送文件，这些文件将使用修改后的RSA-CRT进行加密和解密。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f05](i/ch011.f05.png) |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f05](i/ch011.f05.png) |'
- en: 'Overview of Algorithm in work:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 算法工作概述：
- en: 'The RSA decryption and signature operation can be speeded up using the CRT,
    where the modulus N (i.e. and Q) factors are assumed to be known. By CRT, the
    computation of M can be partitioned into four parts:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CRT可以加速RSA解密和签名操作，其中假设已知模数N（即Q）的因数。通过CRT，可以将M的计算分成四部分：
- en: mp = Cp^dp mod p mq = Cq^dq mod q mr = Cr^dr mod r ms = Cs^ds mod s Where
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: mp = Cp^dp mod p mq = Cq^dq mod q mr = Cr^dr mod r ms = Cs^ds mod s 其中
- en: Cp = C1 mod p Cq = C1 mod q Cr = C1 mod r Cs = C1 mod s And
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Cp = C1 mod p Cq = C1 mod q Cr = C1 mod r Cs = C1 mod s 和
- en: C1 = Ct mod (z). [using the first private key (t,z)]
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: C1 = Ct mod (z)。[使用第一个私钥（t，z）]
- en: This reduces computation time since dp, dq, dr, ds< D and Cp,Cq,Cr,Cs< C. In
    fact, their sizes are about half the original sizes. In the ideal case, as both
    the sizes of d and n are reduced, we can have a speedup of about 4 times. But
    the proposed technique increased the security.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做可以减少计算时间，因为dp，dq，dr，ds < D，而Cp，Cq，Cr，Cs < C。实际上，它们的大小约为原始大小的一半。在理想情况下，由于d和n的大小都减小了，我们可以实现约4倍的加速。但是提出的技术增加了安全性。
- en: Table 1\. Comparison between RSA, RSA-CRT, RSA by multi keys and proposed technique
    with results.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1\. RSA、RSA-CRT、RSA多密钥和提出的技术的结果比较。
- en: '| Size in bits | Enc & Dec time of RSA in ms | Enc & Dec time of RSA in ms
    | Enc & Dec time of RSA in ms | Enc & Dec time of RSA in ms |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 位数 | RSA的加密和解密时间（毫秒） | RSA的加密和解密时间（毫秒） | RSA的加密和解密时间（毫秒） | RSA的加密和解密时间（毫秒）
    |'
- en: '| 640 | 42 | 26 | 84 | 66 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 640 | 42 | 26 | 84 | 66 |'
- en: '| 1040 | 48 | 29 | 93 | 71 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 1040 | 48 | 29 | 93 | 71 |'
- en: '| 1136 | 63 | 32 | 113 | 85 |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 1136 | 63 | 32 | 113 | 85 |'
- en: The proposed technique is more secure as compared to the original RSA algorithm
    and RSA-CRT. And it enhanced the performance of the algorithm in decryption because
    it used the CRT in decryption, thus the proposed technique faster than RSA by
    multi keys. It reduces the cost of computation. Although it takes a long time
    to perform it as compared to the original RSA.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '所提出的技术相比原始的 RSA 算法和 RSA-CRT 更安全。它增强了算法在解密方面的性能，因为它在解密中使用了 CRT，因此比 RSA 快速多密钥。它减少了计算成本。尽管与原始
    RSA 相比执行它需要很长时间。 '
- en: RSA USING MULTI-KEY AND CHINESE REMAINDER THEOREM
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多密钥和中国剩余定理的 RSA
- en: Take a document from the cloud, which is to be sent to another person. The document
    will be chomped by a Hash function into a few lines and will have a referral pair
    of words such as “message digest”. Using our software, we will encrypt the message
    using our private key which gives the digital signature. RSA with multiple keys
    and CRT will then be used to encrypt the signature with the receiver’s public
    key. The receiver can decrypt the ciphertext to plain text using their private
    key and our public key to verify the signature.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 从云中取出一个要发送给另一个人的文档。文档将被哈希函数切成几行，并将有一对诸如“消息摘要”之类的词的引用。使用我们的软件，我们将使用私钥加密消息，从而得到数字签名。然后使用多个密钥和中国剩余定理对签名使用接收方的公钥进行加密。接收方可以使用他们的私钥解密密文以获得明文，并使用我们的公钥验证签名。
- en: The proposed algorithm is trying to modify the RSA cryptosystem by improving
    its speed by using the Chinese remainder theorem and its security by taking 4
    prime numbers instead of 2 and two public key pairs instead of one (Fig 3).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 所提出的算法试图通过改进其速度来修改 RSA 加密系统，使用中国剩余定理提高其安全性，而不是使用 2 个素数和两个公钥对 (图 3)。
- en: The procedure for generating the key:-
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 生成密钥的过程如下：
- en: 1\. We generate four large prime numbers p, q, r and s
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 我们生成四个大素数 p, q, r 和 s
- en: 2\. We calculate the value of (n, z)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 我们计算 (n, z) 的值
- en: n = pq
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: n = pq
- en: z = rs.
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: z = rs。
- en: 3\. We find the value of ϕ(n) and ϕ(z) ϕ(n)= (p − 1)(q − 1)
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3\. 我们找到 ϕ(n) 和 ϕ(z) 的值，其中 ϕ(n)= (p − 1)(q − 1)
- en: ϕ(z) = (r − 1)(s − 1).
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: ϕ(z) = (r − 1)(s − 1)。
- en: 4\. We choose random integers e, g such that 1 < e <n and gcd(e, ϕ(n)) = 1
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4\. 我们选择随机整数 e, g 使得 1 < e < n 且 gcd(e, ϕ(n)) = 1
- en: 1 < g < z and gcd(g, ϕ(z)) = 1.
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 < g < z 且 gcd(g, ϕ(z)) = 1。
- en: 5\. We calculate the value of d and t such that ed = 1 mod (ϕ(n)).
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5\. 我们计算 d 和 t 的值，使得 ed = 1 mod (ϕ(n))。
- en: tg = 1 mod (ϕ(z)).
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: tg = 1 mod (ϕ(z))。
- en: 6\. We calculate the value of dp,dq,dr and ds dp = d mod (p − 1)
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6\. 我们计算 dp, dq, dr 和 ds 的值 dp = d mod (p − 1)
- en: dq = d mod (q − 1) dr = d mod (r − 1) ds = d mod (s − 1). NOW,
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: dq = d mod (q − 1) dr = d mod (r − 1) ds = d mod (s − 1)。现在，
- en: The Public key KU =< (e, n),(g, z) >
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥 KU =< (e, n),(g, z) >
- en: 'The Private key KV =< t, z, dp, dq, dr, ds>. Encryption for Proposed Technique
    (Fig 3):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥 KV =< t, z, dp, dq, dr, ds>。拟议技术的加密 (图 3)：
- en: 'For encryption of the message M, the following steps are as followed:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于消息 M 的加密，以下步骤如下：
- en: 1\. We convert the message M in integer form, in the range [0 to n − 1].
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 我们将消息 M 转换为整数形式，在范围 [0 到 n − 1] 内。
- en: 2\. We calculate ciphertext C1 using first public key i.e e by
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 我们使用第一个公钥即 e 计算密文 C1，公式为
- en: C1 = M^e mod (n)
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: C1 = M^e mod (n)
- en: 3\. We calculate Ciphertext C using second public key g and C1 by C = C1^g mod
    (z).
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3\. 我们使用第二个公钥 g 和 C1 计算密文 C，公式为 C = C1^g mod (z)。
- en: '4\. We send the ciphertext C to the receiver. Decryption for Proposed Technique
    (Fig 4):'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4\. 我们将密文 C 发送给接收方。拟议技术的解密 (图 4)：
- en: 'For decryption of ciphertext C, we follow these steps:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于密文 C 的解密，我们按照以下步骤进行：
- en: 1\. First we find C1 using the first private key (t, z) C1 = Ct mod (z).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 首先我们使用第一个私钥 (t, z) 找到 C1，公式为 C1 = Ct mod (z)。
- en: 2\. We do following Calculations Cp = C1 mod p
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 我们进行以下计算 Cp = C1 mod p
- en: Cq = C1 mod q Cr = C1 mod r Cs = C1 mod s
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cq = C1 mod q Cr = C1 mod r Cs = C1 mod s
- en: '3\. Then we calculate:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3\. 然后我们计算：
- en: mp = Cp^dp mod p mq = Cq^dq mod q mr = Cr^dr mod r ms = Cs^ds mod s
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: mp = Cp^dp mod p mq = Cq^dq mod q mr = Cr^dr mod r ms = Cs^ds mod s
- en: 4\. Now after combining mp, mq, mr and ms, we get back our original plaintext
    message M.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4\. 现在合并 mp、mq、mr 和 ms 后，我们恢复原始明文消息 M。
- en: Experimental Results
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 实验结果
- en: 'Executing the algorithm to the extent to which it was made, the following results
    were obtained:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 执行算法至所需程度后，得到以下结果：
- en: 'Sample values for variables when p,q,r,s are large values Sample values for
    variables when p,q,r,s are large values A look and feel of our experimental result:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当p、q、r、s为大值时变量的样本值 当p、q、r、s为大值时变量的样本值 我们实验结果的外观和感觉：
- en: 'User logged in:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 用户已登录：
- en: Fig 6 shows the login user interface of our chat portal where the registered
    user can login.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图6显示了我们聊天门户的登录用户界面，注册用户可以在其中登录。
- en: Table 2\. Unveiling the algorithm behind - sample values for variables when
    p,q,r,s are small values
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 表2\. 揭示背后的算法 - 当p、q、r、s是小值时的变量样本值
- en: 5\. The original text file (help_enc txt before getting encrypted
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5\. 原始文本文件（在加密之前的help_enc txt
- en: Figure 7 shows the text file the user wants to send using the chat portal.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图7展示了用户希望使用聊天门户发送的文本文件。
- en: 6\. Now uploading this file to the cloud
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6\. 现在将这个文件上传到云端
- en: 7\. The encrypted file which is stored in database
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7\. 存储在数据库中的加密文件
- en: Figure 9 shows the encrypted text stored in our database, ensuring secure data
    transmission of the text file uploaded by the user.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图9展示了存储在我们数据库中的加密文本，确保用户上传的文本文件的安全数据传输。
- en: Table 3\. Sample values for variables when p,q,r,s are large values
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 表3\. 当p、q、r、s为大值时变量的样本值
- en: '| VARIABLE | VALUES |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| VARIABLE | VALUES |'
- en: '| P | 5760005761 |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| P | 5760005761 |'
- en: '| Q | 57600032951 |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| Q | 57600032951 |'
- en: '| R | 331776232243207 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| R | 331776232243207 |'
- en: '| S | 331776351372017 |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| S | 331776351372017 |'
- en: '| N | 331776521631549830711 |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| N | 331776521631549830711 |'
- en: '| Z | 110075507805606161588078138519 |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| Z | 110075507805606161588078138519 |'
- en: '| Phin | 331776521568189792000 |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| Phin | 331776521568189792000 |'
- en: '| Phiz | 110075507805605498035494523296 |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| Phiz | 110075507805605498035494523296 |'
- en: '| E | 331776521568189791999 |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| E | 331776521568189791999 |'
- en: '| G | 110075507805605498035494523295 |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| G | 110075507805605498035494523295 |'
- en: '| D | 331776521568189791999 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| D | 331776521568189791999 |'
- en: '| T | 110075507805605498035494523295 |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| T | 110075507805605498035494523295 |'
- en: Table 4\. Output of algorithm
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 表4\. 算法的输出
- en: '| 5760005761 =p 57600032951 =q 331776232243207 =r 331776351372017 =s |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| 5760005761 =p 57600032951 =q 331776232243207 =r 331776351372017 =s |'
- en: '| 331776521631549830711 =n 110075507805606161588078138519 =z |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 331776521631549830711 =n 110075507805606161588078138519 =z |'
- en: '| 331776521568189792000 =phin 110075507805605498035494523296 =phiz |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 331776521568189792000 =phin 110075507805605498035494523296 =phiz |'
- en: '| 331776521568189791999 =e 110075507805605498035494523295 =g |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 331776521568189791999 =e 110075507805605498035494523295 =g |'
- en: '| 331776521568189791999 =d 110075507805605498035494523295 =t |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 331776521568189791999 =d 110075507805605498035494523295 =t |'
- en: '| 001100011011110110011001011101011101110100010111011101000101110111010000100100100100001
    |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 001100011011110110011001011101011101110100010111011101000101110111010000100100100100001
    |'
- en: '| Heyyy!!! This work is made by Manya, Aashish, Shruti and Vaishnavi is the
    messages to be sent. Hashes are the same. Heyyy!!! This work is made by Manya,
    Aashish, Shruti and Vaishnavi |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 嘿嘿嘿!!!这项工作是由Manya、Aashish、Shruti和Vaishnavi完成的，消息是要发送的哈希相同。 嘿嘿嘿!!!这项工作是由Manya、Aashish、Shruti和Vaishnavi完成的
    |'
- en: '| Figure 6\. Login user interface |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| 图6\. 登录用户界面 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f06](i/ch011.f06.png) |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f06](i/ch011.f06.png) |'
- en: 8\. The decrypted text when the user try to open it from the cloud
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8\. 当用户尝试从云中打开文件时解密的文本
- en: 'User can easily retrieve the file:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以轻松检索文件：
- en: Figure 10 shows the decrypted text when the user at the other end(receiver)
    try to open the file from the cloud.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图10展示了当用户在云中尝试打开文件时解密的文本。
- en: 'Files stored in the db:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 文件存储在数据库中：
- en: Figure 11 shows files name stored in the database.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图11展示了存储在数据库中的文件名。
- en: '| Figure 7\. Text file the user wants to send (before encryption). |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| 图7\. 用户希望发送的文本文件（加密前）。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f07](i/ch011.f07.png) |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f07](i/ch011.f07.png) |'
- en: '| Figure 8\. Uploading text file in the interface and cloud. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| 图8\. 在界面和云中上传文本文件。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f08](i/ch011.f08.png) |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f08](i/ch011.f08.png) |'
- en: '| Figure 9\. Encrypted text of the text file uploaded by the user. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| 图9\. 用户上传的文本文件的加密文本。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f09](i/ch011.f09.png) |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f09](i/ch011.f09.png) |'
- en: '| Figure 10\. Decrypted text file which the receiver will be able to view.
    |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| 图10\. 接收者将能够查看的解密文本文件。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f10](i/ch011.f10.png) |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f10](i/ch011.f10.png) |'
- en: '| Figure 11\. The file which the sender uploaded is stored in the database.
    |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 图11\. 发送者上传的文件存储在数据库中。 |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f11](i/ch011.f11.png) |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f11](i/ch011.f11.png) |'
- en: ANALYSIS
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 分析
- en: 'Attacks of RSA that can be mitigated using RSA-CRT:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过RSA-CRT减轻的RSA攻击：
- en: 'Mitigation of attacks on RSA-CRT: Low exponent attack d is the private exponent
    in RSA.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: RSA-CRT 的攻击缓解：低指数攻击 d 是 RSA 的私有指数。
- en: 'Let’s see it in detail:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看一下：
- en: • Given input, m, raise it to the d-th power modulo p and modulo q. The results
    interme- diate are then combined through addition and multiplication with some
    constant predefined to compute the final result.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 给定输入 m，将其提升为模 p 和模 q 的 d 次方。然后通过与某些预定义的常数进行加法和乘法来计算最终结果。
- en: • Since the exponentiation modular is performed on half the bit size of n, the
    execution time is less than 4 times.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 由于模幂是在 n 的位数的一半上执行的，所以执行时间不到 4 倍。
- en: • In RSA,
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在 RSA 中，
- en: Decryption M=Cd mod n
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 解密 M=Cd mod n
- en: Rely directly on size of d and n.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 直接依赖于 d 和 n 的大小。
- en: 'But in RSA-CRT:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 但在 RSA-CRT 中：
- en: After combining mp, mq, mr and ms, we get back our original plaintext message
    M.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mp、mq、mr 和 ms 结合后，我们得到原始的明文消息 M。
- en: '| Figure 12\. Calculating mp, mq, mr and ms in RSA-CRT |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 图 12. 在 RSA-CRT 中计算 mp、mq、mr 和 ms |'
- en: '| ![Figure978-1-7998-8367-8.ch011.f12](i/ch011.f12.png) |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-8367-8.ch011.f12](i/ch011.f12.png) |'
- en: Reduced size of both d and n is considered an important advantage in the Chinese
    Remainder Theorem.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 缩小 d 和 n 的大小被认为是中国剩余定理的一个重要优点。
- en: Timing Attack
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 时序攻击
- en: The timing attack can be mitigated by incorporating Montgomery Multiplication.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引入 Montgomery 乘法可以缓解时序攻击。
- en: Montgomery multiplication is modular multiplication that allows computing such
    mul- tiplications faster. Instead of dividing the product and subtracting n multiple
    times, it adds multiples of n to cancel out the lower bits and then just discards
    the lower bits.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Montgomery 乘法是一种模乘法，可以更快地计算这样的乘法。它不是除以乘积并多次减去 n，而是添加 n 的倍数来取消掉低位，然后只是丢弃低位。
- en: Benefits of using Multi-Keys RSA-CRT over RSA
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多密钥 RSA-CRT 相较于 RSA 的优点
- en: '1\. Secure option for application needing faster communication:'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1. 需要更快通信的应用的安全选项：
- en: 5 files are encrypted and decrypted using RSA and RSA-CRT. The time taken for
    encryption and decryption is as follows.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 RSA 和 RSA-CRT 对 5 个文件进行加密和解密。加密和解密所需的时间如下。
- en: Table 5\. The results of comparison time RSA encryption and RSA-CRT 1024 bits
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5。RSA 加密和 RSA-CRT 加密 1024 位的比较结果
- en: '| File | Enc of RSA in nano-sec | Enc of RSA-CRT in nano-sec |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| 文件 | RSA 加密时间（纳秒） | RSA-CRT 加密时间（纳秒） |'
- en: '| 1 | 330,130 | 371,148 |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 330,130 | 371,148 |'
- en: '| 2 | 316,803 | 348,592 |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 316,803 | 348,592 |'
- en: '| 3 | 330,131 | 358,845 |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 330,131 | 358,845 |'
- en: '| 4 | 344,485 | 375,250 |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 344,485 | 375,250 |'
- en: '| 5 | 351,661 | 382,426 |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 351,661 | 382,426 |'
- en: Table 6\. The results of comparison time decryption RSA and RSA-CRT 1024 bits
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6。RSA 解密和 RSA-CRT 解密 1024 位的比较结果
- en: '| File | Dec of RSA in nano-sec | Dec of RSA-CRT in nano-sec |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| 文件 | RSA 解密时间（纳秒） | RSA-CRT 解密时间（纳秒） |'
- en: '| 1 | 103,534,963 | 29,710,330 |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 103,534,963 | 29,710,330 |'
- en: '| 2 | 102,998,756 | 29,400,697 |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 102,998,756 | 29,400,697 |'
- en: '| 3 | 103,437,564 | 29,477,594 |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 103,437,564 | 29,477,594 |'
- en: '| 4 | 103,300,180 | 29,538,084 |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 103,300,180 | 29,538,084 |'
- en: '| 5 | 103,515,483 | 29,730,836 |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 103,515,483 | 29,730,836 |'
- en: We can see that on average encryption of RSA-CRT is 367252.2(Table 4) while
    that of RSA is 334642\. Thus the RSA-CRT takes 33610.2 nanoseconds more than RSA
    while encrypting 1024 bit block. But while decryption, on average, decryption
    of RSA-CRT is 29,571,508.2 while that of RSA is 103,357,389\. Thus the RSA-CRT
    takes 73,785,800.8 nanoseconds less than RSA while decrypting 1024 bit block (Table
    5).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，RSA-CRT 的平均加密时间为 367252.2(Table 4)，而 RSA 的加密时间为 334642。因此，RSA-CRT 在加密
    1024 位块时比 RSA 多花了 33610.2 纳秒。但在解密时，RSA-CRT 的平均解密时间为 29,571,508.2，而 RSA 的解密时间为
    103,357,389。因此，RSA-CRT 在解密 1024 位块时比 RSA 快了 73,785,800.8 纳秒（表 5）。
- en: Seeing the overall mechanism of encryption and decryption RSA-CRT is 3 times
    faster than RSA by 73,752,270.6 nanoseconds while applying the mechanism. This
    proves that despite of computational overhead, RSA- CRT is faster than RSA.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 观察加密和解密 RSA-CRT 的整体机制，应用该机制比 RSA 快 73,752,270.6 纳秒，快了 3 倍。这证明了尽管存在计算开销，但 RSA-CRT
    比 RSA 更快。
- en: Though the computational overhead is high, time taken by this mechanism is less.
    Thus it is a better option to be used in fast communication applications like
    transaction-oriented or business plans oriented. But more memory would have to
    be used as the number of variables in more with the modified approach. Therefore,
    the main limitations in this approach is the overhead time and the memory to be
    used for the same, which can be overcome with future research and improvements.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管计算开销很大，但此机制所花费的时间较少。因此，它是在面向事务或业务计划的快速通信应用中使用的更好选择。但随着修改方法中变量数量的增加，需要使用更多的内存。因此，这种方法的主要局限性是开销时间和用于相同目的的内存，这可以通过未来的研究和改进来克服。
- en: 1\. Key Generation Overhead but is less vulnerable to attacks
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 密钥生成开销大，但更不容易受到攻击。
- en: Attacks like Fault Injection or Side-Channel Analysis can’t be mitigated using
    RSA but RSA- CRT can protect user’s data from these attacks. RSA-CRT prevent the
    attacker from obtain- ing the signature when a fault has been induced during the
    computation. Not only this, it makes other attacks(with big prime numbers) like
    factoring large number or common modu- lus highly infeasible to be done in the
    exchanging data’s lifetime.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 像故障注入或侧信道分析这样的攻击无法使用 RSA 抵御，但 RSA- CRT 可以保护用户的数据免受这些攻击。当计算过程中引发故障时，RSA-CRT 可以防止攻击者获取签名。不仅如此，在数据交换的生命周期内，它还使其他攻击（使用大素数）如因子分解大数或公共模高度不可行。
- en: Timing attacks on RSA- CRT is highly infeasible since in timing attack precise
    time of decryption the card takes can help an attacker find or discover the private
    decryption exponent
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 对 RSA-CRT 的定时攻击是高度不可行的，因为在定时攻击中，卡片的解密精确时间可以帮助攻击者找到或发现私有解密指数。
- en: d. But in RSA-CRT, the decryption time is 3 times lesser than RSA (which is
    safe since it’s still in use).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 但在 RSA-CRT 中，解密时间比 RSA 少 3 倍（这是安全的，因为它仍在使用中）。
- en: 2\. Multi-keys with RSA-CRT makes attacking highly in- feasible in the data’s
    lifetime
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 具有 RSA-CRT 的多个密钥使攻击在数据的生命周期内变得高度不可行。
- en: Calculating private keys (t,z,dp,dq,dr,ds) where
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 计算私钥 (t,z,dp,dq,dr,ds) 其中
- en: t is obtained by tg = 1 mod (φ(z)). (g is random integers such that gcd(g, φ(z))
    = 1). dp = d mod (p − 1)
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: t 由 tg = 1 mod (φ(z)) 获得。（其中 g 是随机整数，使得 gcd(g, φ(z)) = 1）。dp = d mod (p − 1)
- en: dq = d mod (q − 1) dr = d mod (r − 1) ds = d mod (s − 1). Is highly infeasible
    in the data’s lifetime.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: dq = d mod (q − 1) dr = d mod (r − 1) ds = d mod (s − 1)。在数据的生命周期内是高度不可行的。
- en: The private key calculation of RSA is just {d,n} which is comparatively more
    prone to be hacked in data’s lifetime.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: RSA 的私钥计算仅为 {d,n}，在数据的生命周期内更容易受到攻击。
- en: 3\. Reduction in the value of d and n can still yield some promising result
    in RSA-CRT with multi-keys.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3\. 减小 d 和 n 的值仍然可以在具有多个密钥的 RSA-CRT 中产生一些有希望的结果。
- en: In the field of cryptosystem, many algorithms uses functionality of modular
    computation. The size of the exponent decryption, d and the modulus, n is very
    important because the complexity of the decryption in RSA depends directly on
    it. The exponent decryption specifies the numbers of multiplication modular, there
    are necessary to perform the exponentiation. The modulus, n play an important
    role in determined the size of the in- intermediate results. A way to reduce the
    size of both d and n is by using the Chinese Remainder theorem since the exponentiation
    modular is performed on half the bit size of n.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在密码系统领域，许多算法使用模运算的功能。解密指数 d 和模数 n 的大小非常重要，因为 RSA 解密的复杂性直接取决于它们。解密指数指定了模乘法的次数，必须执行指数运算。模数
    n 在确定中间结果的大小方面起重要作用。通过使用中国剩余定理来减小 d 和 n 的大小，这是一种减小解密过程中计算量的方法，因为模指数运算是在 n 的位数的一半上执行的。
- en: CONCLUSION
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 结论
- en: We proposed a technique which is based on traditional RSA, but we improved it
    by using multiple keys for more security and applied the Chinese remainder theorem
    for faster computation. We implemented our proposed technique to store a file
    in the cloud, which is a chatting application focused more on security of text
    files. This work has made a secure data exchange app where files are encrypted
    using RSA-CRT algorithm and hashed later. We observed that the proposed technique
    is more secure as compared to the original RSA algorithm and RSA-CRT.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出了一种基于传统 RSA 的技术，但我们通过使用多个密钥来提高安全性，并应用中国剩余定理来加速计算。我们将我们提出的技术应用于存储云中的文件，这是一个更加关注文本文件安全性的聊天应用程序。这项工作使得可以使用
    RSA-CRT 算法对文件进行加密，并稍后对其进行哈希处理的安全数据交换应用程序成为可能。我们观察到，与原始 RSA 算法和 RSA-CRT 相比，所提出的技术更安全。
- en: REFERENCES
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: 12Arora, R., Parashar, A., & Transforming, C. C. I. (2013). Secure user data
    in cloud computing using encryption algorithms. International Journal of Engineering
    Research and Applications , 3(4), 1922–1926.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 12Arora, R., Parashar, A., & Transforming, C. C. I. (2013). 利用加密算法在云计算中安全用户数据。工程研究与应用国际期刊
    , 3(4), 1922–1926.
- en: 21Balaji, M., Kumar, C. A., & Rao, G. S. V. (2018). Predictive Cloud resource
    management framework for enterprise workloads. Journal of King Saud University-Computer
    and Information Sciences , 30(3), 404–415\. doi:10.1016/j.jksuci.2016.10.005
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 21Balaji, M., Kumar, C. A., & Rao, G. S. V. (2018). 企业工作负载的预测云资源管理框架。沙特国王大学计算机与信息科学杂志
    , 30(3), 404–415\. [doi:10.1016/j.jksuci.2016.10.005](https://doi.org/10.1016/j.jksuci.2016.10.005)
- en: 22Balaji, M., Kumar, C. A., & Rao, G. S. V. (2019). Non-linear analysis of bursty
    workloads using dual metrics for better cloud resource management. Journal of
    Ambient Intelligence and Humanized Computing , 10(12), 4977–4992\. doi:10.1007/s12652-019-01183-8
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 22Balaji, M., Kumar, C. A., & Rao, G. S. V. (2019). 利用双度量对突发工作负载进行非线性分析以改善云资源管理。环境智能与人性化计算杂志
    , 10(12), 4977–4992\. [doi:10.1007/s12652-019-01183-8](https://doi.org/10.1007/s12652-019-01183-8)
- en: 24Balaji, M., Rao, G. S. V., & Kumar, C. A. (2014). A comparitive study of predictive
    models for cloud infrastructure management. In 2014 14th IEEE/ACM International
    Symposium on Cluster, Cloud and Grid Computing (pp. 923-926). IEEE. 10.1109/CCGrid.2014.32
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 24Balaji, M., Rao, G. S. V., & Kumar, C. A. (2014). 云基础设施管理的预测模型比较研究。2014年第14届IEEE/ACM国际簇、云和网格计算研讨会
    (pp. 923-926). IEEE. [10.1109/CCGrid.2014.32](https://doi.org/10.1109/CCGrid.2014.32)
- en: '6Behl, A. (2011). Emerging security challenges in cloud computing: An insight
    to cloud security challenges and their mitigation. 2011 World Congress on Information
    and Communication Technologies , 21, 217–222.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '6Behl, A. (2011). 云计算中新兴的安全挑战: 对云安全挑战及其缓解的洞察。2011年世界信息与通信技术大会 , 21, 217–222.'
- en: 17Gandhi, , & Gupta, . (2015). A Research on Enhancing Public Key Cryptography
    by the Use of MRGA with RSA and N-Prime RSA. International Journal for Innovative
    Research in Science and Technology , 16, 72–79.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 17Gandhi, , & Gupta, . (2015). 通过MRGA与RSA和N-Prime RSA增强公钥加密的研究。科技创新研究国际期刊 ,
    16, 72–79.
- en: 8GargP.SharmaV. (2014). An efficient and secure data storage in Mobile Cloud
    Com- puting through RSA and Hash function. 2014 International Conference on Issues
    and Challenges in Intelligent Computing Techniques (ICICT), 334–339.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 8GargP.SharmaV. (2014). 移动云计算中的高效安全数据存储通过RSA和哈希函数。2014年智能计算技术问题与挑战国际会议(ICICT),
    334–339.
- en: 20Kim, G.-C., Li, S.-C., & Hwang, H.-C. (2020). Fast rebalanced RSA signature
    scheme with typical prime generation. Theoretical Computer Science , 830-831,
    1–19\. doi:10.1016/j.tcs.2020.04.024
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 20Kim, G.-C., Li, S.-C., & Hwang, H.-C. (2020). 具有典型素数生成的快速再平衡RSA签名方案。理论计算机科学
    , 830-831, 1–19\. [doi:10.1016/j.tcs.2020.04.024](https://doi.org/10.1016/j.tcs.2020.04.024)
- en: 19Lakshmi, B. (2020). The Dark Phase of Cultural Conflict in The Novel ‘Twilight
    in Delhi’. Academic Press.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 19Lakshmi, B. (2020). 小说《德里的黄昏》中文化冲突的黑暗阶段。学术出版社.
- en: 2Li, Y., Gai, K., Qiu, L., Qiu, M., & Zhao, H. (2017). Intelligent cryptogra-
    phy approach for secure distributed big data storage in cloud computing. Information
    Sciences , 387, 103–115\. doi:10.1016/j.ins.2016.09.005
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 2Li, Y., Gai, K., Qiu, L., Qiu, M., & Zhao, H. (2017). 云计算中安全分布式大数据存储的智能密码学方法。信息科学
    , 387, 103–115\. [doi:10.1016/j.ins.2016.09.005](https://doi.org/10.1016/j.ins.2016.09.005)
- en: 23Narayanan, M., & Cherukuri, A. K. (2018). Verification of cloud based information
    integration architecture using colored petri nets. International Journal of Computer
    Network and Information Security , 12(2), 1–11\. doi:10.5815/ijcnis.2018.02.01
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 23Narayanan, M., & Cherukuri, A. K. (2018). 利用彩色彼得里网验证基于云的信息集成架构。计算机网络与信息安全国际期刊
    , 12(2), 1–11\. [doi:10.5815/ijcnis.2018.02.01](https://doi.org/10.5815/ijcnis.2018.02.01)
- en: 10PantV. K.PrakashJ.AsthanaA. (2015). Three-step data security model for cloud
    com- puting based on RSA and steganography. 2015 International Conference on Green
    Computing and Internet of Things (ICGCIoT), 490–494\. 10.1109/ICGCIoT.2015.7380514
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 10PantV. K.PrakashJ.AsthanaA. (2015). 基于RSA和隐写术的云计算三步数据安全模型。2015年绿色计算和物联网国际会议(ICGCIoT),
    490–494\. [10.1109/ICGCIoT.2015.7380514](https://doi.org/10.1109/ICGCIoT.2015.7380514)
- en: 13RujS.StojmenovicM.NayakA. (2012). Privacy-preserving access control with authen-
    tication for securing data in clouds. IEEE/ACM International Symposium on Cluster,
    Cloud and Grid Computing, 556–563.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 13RujS.StojmenovicM.NayakA. (2012). 云中用于保护数据的隐私保护访问控制与认证。IEEE/ACM国际簇、云和网格计算研讨会,
    556–563.
- en: 5ShimbreN.DeshpandeP. (2015). Enhancing distributed data storage security for
    cloud computing using TPA and AES algorithm. International Conference on Computing
    Communication Control and Automation, 35–39\. 10.1109/ICCUBEA.2015.16
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 5ShimbreN.DeshpandeP. (2015). 使用TPA和AES算法增强云计算的分布式数据存储安全性。计算通信控制与自动化国际会议，35–39。10.1109/ICCUBEA.2015.16
- en: '18ShindeG. N.FadewarH. S. (2008). Faster RSA algorithm for decryption using
    Chinese re- mainder theorem. ICCES: International Conference on Computational
    & Experimental Engineering and Sciences, 255–262.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 18ShindeG. N.FadewarH. S. (2008). 利用中国剩余定理进行更快的RSA解密算法。ICCES：计算与实验工程与科学国际会议，255–262。
- en: 3Shwetha Bindu & Yadaiah. (2011). Secure Data Storage In Cloud Computing. International
    Journal of Research in Computer Science, 1(1), 63–73.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 3Shwetha Bindu & Yadaiah. (2011). 云计算中的安全数据存储。《计算机科学研究国际期刊》，1(1)，63–73。
- en: 11SomaniU.LakhaniK.MundraM. (2010). Implementing digital signature with RSA
    en- cryption algorithm to enhance the Data Security of cloud in Cloud Computing.
    2010 First International Conference On Parallel, Distributed and Grid Computing,
    211– 216.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 11SomaniU.LakhaniK.MundraM. (2010). 采用RSA加密算法实现数字签名以增强云计算中的数据安全性。2010年第一届并行、分布式和网格计算国际会议，211–216。
- en: 4Sookhak, M. (2015). Dynamic remote data auditing for securing big data storage
    in cloud computing (Doctoral dissertation). University of Malaya.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 4Sookhak, M. (2015). 云计算中用于保护大数据存储的动态远程数据审计（博士论文）。马来亚大学。
- en: 14SubashiniS.KavithaV. (2011). A metadata-based storage model for securing data
    in a cloud environment. 2011 International Conference on Cyber-Enabled Distributed
    Computing and Knowledge Discovery, 429–434.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 14SubashiniS.KavithaV. (2011). 一种基于元数据的云环境数据安全存储模型。2011年国际网络分布式计算与知识发现会议，429–434。
- en: 7Usman, M., Jan, M. A., & He, X. (2017). Cryptography-based secure data storage
    and sharing using HEVC and public clouds. Information Sciences , 387, 90–102\.
    doi:10.1016/j.ins.2016.08.059
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 7Usman, M., Jan, M. A., & He, X. (2017). 使用HEVC和公共云的基于密码学的安全数据存储和共享。信息科学，387，90–102。doi:10.1016/j.ins.2016.08.059
- en: 15Wang, C., Ren, K., Lou, W., & Li, J. (2010). Toward publicly auditable secure
    cloud data storage services. IEEE Network , 24(4), 19–24\. doi:10.1109/MNET.2010.5510914
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 15Wang, C., Ren, K., Lou, W., & Li, J. (2010). 朝着可公开审计的安全云数据存储服务。IEEE网络，24(4)，19–24。doi:10.1109/MNET.2010.5510914
- en: 1Yang, K., & Jia, X. (2012). An efficient and secure dynamic auditing protocol
    for data storage in cloud computing. IEEE Transactions on Parallel and Distributed
    Systems , 24(9), 1717–1726\. doi:10.1109/TPDS.2012.278
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 1Yang, K., & Jia, X. (2012). 用于云计算数据存储的高效安全动态审计协议。IEEE并行与分布式系统交易，24(9)，1717–1726。doi:10.1109/TPDS.2012.278
- en: 16Zhou, L., Varadharajan, V., & Hitchens, M. (2013). Vijay Varadharajan, and
    Michael Hitchens. Achieving Secure Role-Based Access Control on Encrypted Data
    in Cloud Storage. IEEE Transactions on Information Forensics and Security , 8(12),
    1947–1960\. doi:10.1109/TIFS.2013.2286456
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 16Zhou, L., Varadharajan, V., & Hitchens, M. (2013). Vijay Varadharajan和Michael
    Hitchens。在云存储中实现安全的基于角色的访问控制。IEEE信息取证与安全交易，8(12)，1947–1960。doi:10.1109/TIFS.2013.2286456
