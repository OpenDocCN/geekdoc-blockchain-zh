- en: © The Author(s), under exclusive license to Springer Nature Switzerland AG 2021Y.
    Maleh et al. (eds.)Artificial Intelligence and Blockchain for Future Cybersecurity
    ApplicationsStudies in Big Data90[https://doi.org/10.1007/978-3-030-74575-2_12](https://doi.org/10.1007/978-3-030-74575-2_12)
  prefs: []
  type: TYPE_NORMAL
- en: A New Scheme for Detecting Malicious Attacks in Wireless Sensor Networks Based
    on Blockchain Technology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Mohammed Amin Almaiah^([1](#Aff7) [ ](#ContactOfAuthor1))(1)Department of Computer
    Networks and Communications, King Faisal University, Al-Ahsa, 31982, Saudi ArabiaMohammed Amin AlmaiahEmail:
    [malmaiah@kfu.edu.sa](mailto:malmaiah@kfu.edu.sa)'
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wireless sensor networks (WSNs) work in various domains such as smart cities,
    healthcare domains, smart buildings and transportation. These networks share sensitive
    data across multiple sensor nodes, smart devices and transceivers. These sensitive
    data in WSNs environment is susceptible to various cyber-attacks and threats.
    Therefore, an efficient security mechanism is needed to handle threats, attacks
    and security challenges in WSNs. This paper proposed a new scheme using Heuristic,
    Signature and voting detection methods to identify the optimal countermeasures
    to detect the malicious and security threats using Blockchain technology. In our
    scheme, the cluster head node (CN) use the three detection systems with Blockchain
    to detect the malicious sensor nodes. Also, CN uses important parameters such
    as sensor node-hash value, node-signature and voting degree for malicious to detect
    malicious nodes in WSNs. The overall results statistic showed that 94.9% of malicious
    messages were detected and identified successfully during our scheme’s simulation.
  prefs: []
  type: TYPE_NORMAL
- en: KeywordsWireless sensor networksBlockchain technologyMalicious sensor attacks
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wireless sensor networks (WSNs) have become a well-known and popular source
    of sensitive data sharing and other human life activities such as smart homes,
    bank transactions, etc. This huge increase in the use of WSNs has resulted in
    a significant raising in cybersecurity attacks. Security problems in WSNs are
    still a serious concern for many researchers due to the infrastructures’ heterogeneous
    nature and its weakness in the operational environment. This makes cyber attackers
    exploit these vulnerabilities to access the systems illegally [[1](#CR1)]. WSNs
    have several limitations in terms of lower power, computational processing and
    limited resources [[2](#CR2)]. WSNs contains millions of wireless sensor nodes,
    which collect data according to their assigned task and share it with other sensor
    nodes. This interconnection of these devices in a heterogeneous environment makes
    them more vulnerable to cybersecurity issues and threats. Therefore, cyber-attacks
    have become a serious concern, which led to many security solutions from the research
    community.
  prefs: []
  type: TYPE_NORMAL
- en: Cybersecurity is defined as a combination of security procedures, techniques,
    tools, and guidelines to protect the networks and devices over the internet [[3](#CR3)].
    Cybersecurity is one of the most critical issues for all countries of the world
    by protecting their assets and securing their information by detecting and mitigating
    the various cyber threats and attacks [[4](#CR4)]. Many researchers have presented
    many techniques to address multiple types of security issues and problems in WSNs.
    However, they are still insufficient to protect the wireless networks from the
    ever-increasing security vulnerabilities and attacks. As a result, protecting
    WSNs from cyber attacks and threats has become essential and has prompted many
    researchers to conduct more research in recent years.
  prefs: []
  type: TYPE_NORMAL
- en: Several mechanisms and approaches have been proposed in the literature for detecting
    and mitigating cybersecurity attacks and threats for WSNs environment [[2](#CR2)].
    Each of these approaches has different tools and features to tackle various security
    attacks and breaches [[5](#CR5)]. In this work, we conducted an overview analysis
    of the leading security issues related to WSNs to identify the significant cyber
    threats and provided the solutions in light of Blockchain technology. Blockchain
    technology includes hardware and software solutions to tackle the security challenges
    of WSNs, which is a novel approach. To fill this research gap, this paper aims
    to present a new scheme using Heuristic, Signature and voting detection methods
    to identify the optimal counter measures to detect the malicious and security
    threats using Blockchain technology.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain network uses a peer-to-peer network to record the data. In peer-to-peer
    policy, all wireless sensor nodes could be clients and servers simultaneously,
    so they communicate between peers. Based on the peer-to-peer approach, in our
    scheme, all nodes communicate as peers. This means each node can act as sender
    and receiver. All nodes share information (their neighbors’ nodes) with their
    direct observers’ nodes of every activity in the network. All the messages should
    be signed using asymmetric encryption technique to authenticate the information
    of the member nodes. The cluster head nodes have the public keys of all sensor
    nodes of the network to validate the identity of the member sensor nodes. Based
    on asymmetric encryption principles, each node in the network has its private
    key, and only this node can sign their sending messages using its ID (identifier).
    In this way, no one node can send a report of information (block) with a fake
    identity due to asymmetric encryption, one of the Blockchain principles. Thus,
    when a node observes an up-normal activity from another node, it directly reports
    it’s observantly. This node reports this message using its signature as a signed
    block into the Blockchain system and sharing it with other nodes using peer-to-peer
    network. Once this message is recorded in the Blockchain system is very difficult
    to modify as it is shared through the permanent peer-to-peer storage. In case
    one of the nodes is hijacked, the node will start to send fake information, but
    signed by its correct identifier, and then the voting technique will detect its
    up-normal activity as shown in the current experiment of our approach in this
    study.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this paper, we shed light on the use mechanisms and solutions of Blockchain
    technology to tackle the security challenges of WSNs, which is a novel approach.
    This paper, among the first studies that focus on analyzing the security problems
    of WSNs in light of Blockchain technology, is still a hot topic for many researchers
    to conduct more research in the future. Specifically, our research aims to address
    the following research question:'
  prefs: []
  type: TYPE_NORMAL
- en: How blockchain technology provides more security options to enhance the security
    of WSNs from malicious attacks?
  prefs: []
  type: TYPE_NORMAL
- en: The rest of the paper is organized as Sect. [2](#Sec2) of the paper contains
    the background of the study. Similarly, Sect. [3](#Sec8) overviews the proposed
    model. The experiment implementation and result statistics for our scheme are
    discussed in Sect. [4](#Sec13). Section [5](#Sec17) summarizes and concludes the
    paper.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Research Motivation and Significance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Despite many benefits related to WSNs, security concerns and vulnerabilities
    in sensor devices are still the main challenges for WSNs [[5](#CR5)]. This problem
    may allow intruders to breach the security of sensor devices and access the network.
    This may lead to steal sensitive information or damage the network [[6](#CR6),
    [7](#CR7)]. Therefore, to prevent such these security problems, there is a need
    to propose efficient security schemes and mechanisms to handle security breaches
    in WSNs. The current WSNs security schemes still have complexity in the high cost
    of energy consumption [[8](#CR8)]. Due to the limited resources of the WSNs, incorporating
    security features to prevent and avoid malicious attacks is a complex challenge
    [[9](#CR9), [10](#CR10)]. If we exploit the Blockchain technology and its solutions,
    we can provide high-level security for WSNs and prevent malicious attacks simultaneously.
    Blockchain could also provide better security for WSNs by detecting malicious
    sensor nodes, routing attacks and intrusion detection. If Blockchain technology
    is employed in WSNs, the security advantages will be immense for WSNs.
  prefs: []
  type: TYPE_NORMAL
- en: 2 Background of the Study
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 2.1 Security Issues in WSNs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Wireless sensor nodes are not intelligent enough to handle various cybersecurity
    threats solitarily. Therefore, a robust security mechanism is needed to help wireless
    devices to take cyber threats and vulnerabilities. Wireless devices have limited
    resources in terms of small memory to store security applications. Moreover, wireless
    devices are susceptible to various threats, due to their limited resources such
    as onboard power, memory, and processing. Furthermore, these devices’ structure
    is straightforward, consisting of small processing chips, sensors, and transceivers.
    Due to this fragile and straightforward structure of wireless devices, various
    cyber-attacks such as DDOS can be propagated, which causes many problems in the
    network and halting of devices. There are other security issues of WSNs, such
    as detecting malicious nodes, intrusion detection, and authentication should be
    taken into consideration. [[11](#CR11)] categorized the security issues into three
    levels: data security level (anonymity and freshness), access security level (accessibility,
    authorization and authentication) and network security level. The same study [[11](#CR11)]
    also mentioned that attacks in WSNs could occur in all layers from the application
    layer to the physical layer. For example, at the application layer level, a malicious
    node can be added along the communication link to generate fake messages and data
    to attack the ongoing communication and increase the data collision. The transport
    layer attack happens by sending unlimited connection requests to minimize the
    node’s energy and exhaust its resources, which leads to a denial of service. Another
    attack can be occurred in a network layer in several forms such as spoofing, sinkhole,
    flooding and replay attack to create and send fake messages or causing congestion
    in the network. Jamming attack at the Data link layer can cause loss of signals
    and data and destroy the channel and increased interference. At the physical layer
    level, the attacker can allow unauthorized nodes to access the network and damage
    it. Other researchers also have focused on the security issues in the IoT environment
    and how to detect security threats and vulnerabilities [[12](#CR12)–[14](#CR14)].
    In a first attempt by [[15](#CR15)] to design trust and authenticate scheme for
    WSNs based on Blockchain technology and to investigate the applicability of Blockchain
    in WSNs to address the security problems. This paper aimed to propose a new scheme
    using Heuristic, Signature and voting detection methods to identify the optimal
    countermeasures to detect the malicious and security threats using Blockchain
    technology.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 Overview of Blockchain Technology
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Blockchain is a robust technology that could be used to improve the security
    of WSNs by sharing and checking the data by the different sensor nodes deployed
    in the networks by using blockchain principles [[16](#CR16)–[18](#CR18)]. In this
    case, Blockchain can be defined as a distributed and collaborative security mechanism
    employed to guarantee the integrity, security and safety of information. In the
    Blockchain system, the data is stored in multiple records, which is called blocks.
    This information is distributed between all blocks deployed in the network by
    using links. These links between blocks are secured by using cryptography mechanisms,
    where each block has a hash of the content of the previous block. Based on that,
    any record cannot be modified without modifying all the next blocks. An important
    note, if any block in the chain were modified, the hash of the next block also
    would require to be modified, and this modification also would need a change in
    the upcoming block and so on. All of these blocks are saved in a distributed and
    decentralized manner in different nodes. In this way, no one of these blocks could
    be changed unless most nodes accept the change and do it. Thus, the data is safely
    and permanently stored in wireless sensor networks. In this way, cyber-attacks
    are very difficult to be propagated and implemented.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain could help improve the WSNs security from malicious attacks, prevent
    malicious activities through consensus mechanisms, and detect data tampering based
    on its underlying characteristics including data encryption, transparency, immutability,
    auditability and operational resilience [[19](#CR19)]. In addition, Blockchain
    characteristics provide an impenetrable platform for cyber-attacks due to include
    typical network cybersecurity controls, practice and procedures.
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 Applicability of Blockchain in WSNs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Blockchain principles inspire the current solution of wireless network security
    issue. Each wireless sensor node has a list of records of the sensor nodes’ identifiers
    (IDs) that have reported the existence of themselves based on direct observation
    node. This information is distributed along with the wireless network, so most
    sensor nodes must have this information permanently and securely. If a malicious
    node attempted to modify the blocks by inserting fake information such as false
    hash key, this would be dropped by other sensor nodes due to use the Peer-to-Peer
    principles of Blockchain, unless the majority of sensor nodes are malicious. Still,
    this scenario will not be happened according to the robust principles of Blockchain.
    Another scenario could happen when a sensor node reported to have observed abnormal
    activity from a node. This information cannot be ignored in wireless networks
    that used the Blockchain system, since it could have happened later. Thus, this
    fake information could be introduced in the blocks distributed in sensor nodes.
    To address this problem, trust policy is employed to cope with these cases by
    identifying behaviors, actions and activities of a node that are only reported
    by only one direct observer node repetitively, based on this hypothesis that other
    several sensor nodes normally observe each activity. Another scenario that can
    be happened is that a malicious node will ignore the detection of any other compromised
    malicious node and so on; however, normally these malicious nodes would probably
    also be observed by other nodes using trust table.
  prefs: []
  type: TYPE_NORMAL
- en: In our scheme, before the detection systems starting, all the sensor nodes (SN)
    and cluster head nodes (CN) should be registered in the Blockchain system. Each
    cluster head node has a list of all the neighbours’ nodes’ public keys in the
    network. Each node should be signed each message received and send it securely
    to all neighbours’ nodes to avoid malicious-attacks by the compromised malicious
    node. Thus, all nodes can sign and forward all messages over the network by asymmetric
    encryption [[20](#CR20)]. In this way, each sensor node in the wireless network
    can know a list of malicious nodes that the other nodes have observed.
  prefs: []
  type: TYPE_NORMAL
- en: In case one of the nodes is hijacked, the node will start to send fake information,
    but signed by its correct identifier, and then the voting method will detect its
    up-normal activity. In this way, each cluster node can know the list of malicious
    nodes that have been detected through a result of voting (malicious or benign)
    by the other nodes and send the result to the Blockchain system. Finally, according
    to the voting results on the Blockchain and detection systems on the CN, the detection
    system decides whether to eliminate the network’s suspect node.
  prefs: []
  type: TYPE_NORMAL
- en: 2.4 Research Contribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In our scheme, to exploit the benefits of Blockchain, we designed a private
    Blockchain. In our model, each cluster head node (CN) is responsible for authenticating
    the participating sensor nodes belonging to their location and storing the sensor
    nodes-IDs. The CN node also uses the Heuristic Detection System to calculate the
    hash value and check it if this value on the Blockchain system or not, so that
    it becomes easy to detect the malicious sensor nodes in the WSNs. Second, The
    CN node is responsible for validating the sensor node signature by using Signature-Based
    System. The Blockchain system has a list of all node signatures in the network
    and shares it with all CNs. It is assumed that each sensor node should sign each
    message received and send it securely to all neighbors’ nodes to avoid cyber-attacks
    through cluster head nodes. Thus, all nodes can sign and forward all messages
    over the network by using asymmetric encryption. In this way, each cluster head
    node can investigate whether signatures already exist on the Blockchain system
    or not. Thus, based on the result on the Blockchain, the signature detection system
    in the cluster head node can decide whether to delete the suspect node or not.
    Finally, the cluster node can know the list of malicious nodes that have been
    detected through a result of voting (malicious or benign) by the other nodes and
    send the result to the Blockchain system. According to the voting results on the
    Blockchain and detection systems on the CN, the detection system decides whether
    to eliminate the network’s suspect node.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Proposed System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we present an overview of the proposed scheme and some assumptions
    in the scheme. Then, we describe the detection systems used in the proposed system.
    Next, we calculate the malicious degree by applying the elimination decision formula.
    Finally, we present a countermeasure against mass voting by malicious nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Overview of Proposed Scheme
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this work, a new scheme of assigning three functions for the cluster head
    nodes (CNs) with communication with the Blockchain system. These three functions
    based on three detection systems are (1) heuristic-based system, (2) signature-based
    system and (3) voting-based system to detect the malicious sensor nodes. Figure [1](#Fig1)
    presents an overview of the proposed scheme in our work. There are three main
    components in this proposed model:![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig1_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig1_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 1
  prefs: []
  type: TYPE_NORMAL
- en: Overview of the proposed system
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig2_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig2_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 2
  prefs: []
  type: TYPE_NORMAL
- en: Flowchart of malicious sensor node detection performed by CN using Heuristic
    detection system and signature-based system
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig3_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig3_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 3
  prefs: []
  type: TYPE_NORMAL
- en: CN node results in analysis using Heuristic Detection to detect malicious sensor
    nodes in WSNs
  prefs: []
  type: TYPE_NORMAL
- en: (1)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Sensor Nodes (SNs): each sensor node has low computing power and memory space
    because batteries power it. (1) Sensor Nodes (SNs): each sensor node has low computing
    power and memory space because batteries power it.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (2)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Cluster head nodes (CNs): Cluster head node has the more computational capability,
    more storage space, and more communication distance. Also, all nodes’ public keys
    and signatures are preset in CN by Blockchain system to authenticate sensor nodes
    before laying out the network. It also has lightweight authentication certification
    (LAC) to verify the authentication and exchange the secret key between the Blockchain
    system and the cluster head nodes (CN).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (3)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Blockchain: This trusted system is used to initialize the sensor node and has
    a shared secret key (SK) with the CN. Also, Blockchain is used to store the authentication
    results of sensor nodes in CN in a distributed way.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For this proposed scheme, due to a large number of sensor nodes distributed
    in the network, we divided them into different groups according to cluster head
    nodes’ location. In our scheme, the authentication of all sensor nodes is distributed
    to each cluster-head node because of the large number of sensor nodes and limited
    resources. Then, each cluster-head node applies LAC with Blockchain system. The
    Blockchain system comprises sensor nodes and cluster head nodes who want to eliminate
    fake information and detect an intruder and malicious nodes. It is assumed that
    each cluster head node has a heuristic intruder detection system and a signature-based
    system. The Blockchain system records all signatures (hash values) of benign nodes
    and all signatures and information of suspected intruder and malicious nodes.
    In our scheme, before the detection process starts, we have the following assumptions:'
  prefs: []
  type: TYPE_NORMAL
- en: (1)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All the sensor nodes (SNs) should be registered in the Blockchain system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (2)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All cluster head nodes (CNs) should be registered in the Blockchain system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (3)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each cluster head node has all public keys and signatures of all sensor nodes
    that belong to the cluster node’s exact location.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (4)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each cluster head node has a shared secret key with Blockchain.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (5)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Blockchain system has a list of all sensor nodes’ public keys and signatures
    in the network.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (6)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Blockchain system has two lists: (a) benign identity list and (b) suspected
    malicious identity list.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (7)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Sensitive data and information stored on the Blockchain can be represented
    as a record, and the following five elements represent the record:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Suspected sensor node hash value.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of votes for “malicious”.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of votes for “benign”.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Addresses of sensor nodes who voted “malicious”.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Addresses of sensor nodes who voted “malicious”.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Addresses of sensor nodes who voted “benign”.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Where the numbers of votes for “malicious” and “benign” will be used to calculate
    the degree of malicious in the elimination decision formula (Sect. [4.4](#Sec16))
    to decide whether to eliminate the node. The recording of sensor nodes addresses
    prevents the same sensor node from illegally voting more than once. Here, the
    sensor node address is not an IP address but the address used on the Blockchain,
    such as “0yac46tu874458ef540ade6068dfe2f44e8fc6543”.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the current scheme, we assume that each cluster head node (CN) belonging
    to the Blockchain system installs the following two intruder detection methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '**(1) Malicious node detection using the heuristic-based method:** This system
    is running when the cluster head node (CN) receives a message from the sensor
    node (SN). In the current proposal, it is assumed that each CN detects the malicious
    or benign nodes by checking whether the hash value of the message is already registered
    as benign node identity or as suspected malicious node identity on the Blockchain
    system.'
  prefs: []
  type: TYPE_NORMAL
- en: '**(2) Malicious node detection using the signature-based method:** This technique
    ensures the authentication of the signatures of all nodes by investigating whether
    signatures already exist on the Blockchain system or not.'
  prefs: []
  type: TYPE_NORMAL
- en: A flowchart shows the process of malicious sensor node detection performed by
    CN using a Heuristic detection system and a signature-based system (Fig. [2](#Fig2)).
  prefs: []
  type: TYPE_NORMAL
- en: 3.2 Detection of Suspected Malicious Nodes Using Heuristic Detection System
    on CN with Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When a CN receives a message from a sensor node, CN calculates the hash value
    and checks it if this value is on the Blockchain system. If the hash value does
    not exist on the Blockchain, a heuristic malicious detection system is performed
    to validate the sensor node’s hash value. Suppose the heuristic or behaviour detection
    system determines that the received message is malicious. In that case, the CN
    sends the node hash value to the Blockchain system to share it and then eliminates
    the node and store it as a suspected malicious node identity. When other nodes
    receive the same message, the first validate whether the hash value of the message
    is already registered as benign node identity or as suspected malicious node identity
    on the Blockchain system by CN. If the same hash value of the message already
    exists on the suspected malicious identity list on the Blockchain system, the
    heuristic detection system on the CN judges that it is a malicious node and remove
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 3.3 Detection of Suspected Malicious Nodes Using Signature-Based System on CN
    with Blockchain
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In contrast, if the same hash value exits on the benign identity list, a signature-based
    system through asymmetric encryption is executed. This technique ensures the authentication
    of the signatures of all nodes. The Blockchain system has a list of all node signatures
    in the network and shares it with all CNs. It is assumed that each sensor node
    should sign each message received and send it securely to all neighbors’ nodes
    to avoid cyber-attacks through cluster head nodes. Thus, all nodes can sign and
    forward all messages over the network by using asymmetric encryption. In this
    way, each cluster head node can investigate whether signatures already exist on
    the Blockchain system or not. Thus, based on the result on the Blockchain, the
    signature detection system in the cluster head node can decide whether to delete
    the suspect node or not. Besides, Blockchain system shares this information among
    all cluster nodes, which includes all suspect malicious nodes. In this way, each
    cluster node can know the list of malicious nodes that have been detected through
    a result of voting (malicious or benign) by the other nodes and send the result
    to the Blockchain system. Finally, according to the voting results on the Blockchain
    and detection systems on the CN, the detection system decides whether to eliminate
    the network’s suspect node.
  prefs: []
  type: TYPE_NORMAL
- en: 3.4 Applying the Elimination Decision Formula
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we apply the elimination decision formula to calculate the
    maliciousness degree. Table[1](#Tab1) show definitions of some symbols used in
    the elimination decision formula.Table1
  prefs: []
  type: TYPE_NORMAL
- en: Definitions of some symbols used in the elimination decision formula
  prefs: []
  type: TYPE_NORMAL
- en: '| Symbols | Definitions |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| *D*[*m*] | Degree of malicious |'
  prefs: []
  type: TYPE_TB
- en: '| *T*[*m*] | Threshold of malicious degree |'
  prefs: []
  type: TYPE_TB
- en: '| *M*[*v*] | Total number of votes for malicious |'
  prefs: []
  type: TYPE_TB
- en: '| *b*[*v*] | Total number of votes for benign |'
  prefs: []
  type: TYPE_TB
- en: '| *T*[*v*] | Threshold of total votes |'
  prefs: []
  type: TYPE_TB
- en: '| *V*[*r*] | Rate of voting confidence |'
  prefs: []
  type: TYPE_TB
- en: '| *S*[*r*] | Rate of self-confidence |'
  prefs: []
  type: TYPE_TB
- en: '| *R*[*d*] | Result of the malicious detection system |'
  prefs: []
  type: TYPE_TB
- en: As we mentioned above, when the CN’s detection system validates the hash value
    of the sensor node and finds the hash value exists on the Blockchain records.
    Then, the CN detection system could decide whether to remove the suspected node
    based on the result of maliciousness degree, calculated by the elimination decision
    formula using the following equations below.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Eq. ([1](#Equ1)), when the degree of malicious *D*[*m*] is smaller or equal
    to a threshold of malicious degree *T*[*m*], the result is satisfied; therefore,
    the sensor node is not removed from the Blockchain network.![$${\varvec{D}}_{\varvec{m}}
    \, \le \,{\varvec{T}}_{\varvec{m}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ1.png)(1)In
    Eq. ([2](#Equ2)), when the degree of malicious *D*[*m*] is greater than the threshold
    of malicious degree *T*[*m*], the result is not satisfied; therefore, the sensor
    node is removed from the Blockchain network.![$${\varvec{D}}_{\varvec{m}} \, &gt;
    \,{\varvec{T}}_{\varvec{m}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ2.png)(2)When
    ***M***[***v***]** + *****b***[***v***]** ≥ *****T***[***v***]**: The** detection
    system uses only the voting result on the Blockchain and calculates the maliciousness
    degree using Eq. ([3](#Equ1)).![$${\varvec{D}}{\varvec{m}}=\frac{{{\varvec{M}}}_{{\varvec{v}}}}{{{\varvec{M}}}_{{\varvec{v}}}+{{\varvec{b}}}_{{\varvec{v}}}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ3.png)(3)The
    CN detection system calculates the maliciousness degree using Eq. ([4](#Equ2)),
    the results of voting on the Blockchain, and its malicious detection results by
    heuristic or signature-based methods. Here, it is assumed that the malicious detection
    system outputs 1 when the sensor node is malicious and 0 when the sensor node
    is benign. That is, *R*[*d*]* ∈ {*0*,* 1*}*.![$${\varvec{D}}{\varvec{m}}=\frac{{\varvec{M}}{\varvec{v}}}{{{\varvec{M}}}_{{\varvec{v}}}+{{\varvec{b}}}_{{\varvec{v}}}}\times
    {{\varvec{V}}}_{{\varvec{r}}}+{{\varvec{R}}}_{{\varvec{d}}}\times {{\varvec{S}}}_{{\varvec{r}}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ4.png)(4)where
    *V*[*r*] and *S*[*r*] are computed by the following Eqs. ([2](#Equ2)) and ([3](#Equ3)):![$${\mathbf{V}}_{\mathbf{r}}=\frac{{\mathbf{M}}_{\mathbf{v}+{{\varvec{b}}}_{{\varvec{v}}}}}{{\mathbf{T}}_{{\varvec{\upnu}}}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ5.png)(5)![$${\textbf{S}}_{\textbf{r}}
    = {\textbf{1}} - {\textbf{V}}_{\textbf{r}}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equ6.png)(6)Example:Assume
    that a message is sent from the sensor node to cluster head node, and voting for
    the sensor node hash value on the Blockchain is 10 “malicious” votes (*M*[*v*] = 20)
    and 5 “benign” votes (*b*[*v*] = 5). Also, the malicious detection system in the
    CN judges the sensor node to be malicious (*R*[*d*] = 1), the threshold for total
    votes is set to 20 (*T*[*v*] = 20), and the threshold for maliciousness degree
    is set to 0.5 (*T*[*m*] = 0.5). The malicious degree *D*[*m*] in this example
    is calculated as follows:![$${\varvec{D}}{\varvec{m}}=\frac{10}{10+5}\times\frac{10}{10+5}+{1}\,{\times
    }\,\left(1-\frac{10+5}{20}\right)=\frac{3}{4}$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_Equa.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the *D*[*m*] result, the sensor node will be deleted from the Blockchain
    network because of Dm’s value greater than the threshold of malicious degree (![$$\frac{3}{4}&gt;0.5$$](../images/507793_1_En_12_Chapter/507793_1_En_12_Chapter_TeX_IEq1.png)).
  prefs: []
  type: TYPE_NORMAL
- en: 4 Experimentation Analysis and Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The proposed scheme was implemented in the simulation environment using OMNeT++  software.
    OMNeT++ is considered a common tool to develop wireless sensor networks in the
    simulation environment as observed in wireless networks literature. The proposed
    scheme was performed by specifying network areas with the distribution of sensor
    nodes (SNs) based on cluster head nodes (CNs) in the network topological order.
    Also, we created a private virtual Blockchain with communication connectivity
    with cluster head nodes (CNs). To achieve that, we installed Geth, an Ethereum
    client, and interacted with Geth through a Python script. The simulation parameters
    were set in the cluster head nodes (CNs) with connectivity with sensor nodes.
    Also, the function assigned to CN nodes to detect malicious sensor nodes in the
    network such as hijacked nodes by the assessment of hash values of each sensor
    node, the signature of the sensor node, degree of malicious (*D*[*m*]) and a total
    number of votes for malicious (*Mv*). The simulation parameters used in the proposed
    scheme is presented in Table [2](#Tab2).Table 2
  prefs: []
  type: TYPE_NORMAL
- en: Wireless sensor network simulation setup
  prefs: []
  type: TYPE_NORMAL
- en: '| Simulation parameters | Value |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Simulation tool | OMNeT++  |'
  prefs: []
  type: TYPE_TB
- en: '| Simulation environment | 800 × 800 |'
  prefs: []
  type: TYPE_TB
- en: '| Number of sensor nodes *SNi* | 50, 100, 200, 400, 600,800 |'
  prefs: []
  type: TYPE_TB
- en: '| Number of cluster head nodes | 6 |'
  prefs: []
  type: TYPE_TB
- en: '| Numberofmalicious nodes | 100, 200, 300, 400, 500 |'
  prefs: []
  type: TYPE_TB
- en: '| Numberofbenign nodes | 100, 200, 300 |'
  prefs: []
  type: TYPE_TB
- en: '| Transmission range | 150 M |'
  prefs: []
  type: TYPE_TB
- en: '| Packet size | 256 Kbps |'
  prefs: []
  type: TYPE_TB
- en: '| The transmission interval of CN | 30 s |'
  prefs: []
  type: TYPE_TB
- en: '| Transmission of benignnodes time interval | 10 s |'
  prefs: []
  type: TYPE_TB
- en: 4.1 Result Analysis of CN Function Based on Heuristic Detection System
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The simulation results for the function of CN node were observed to verify the
    proposed scheme’s performance reliability in terms of detecting the malicious
    sensor nodes through computing the hash value and validate it through the Blockchain
    system. The results statistic seen for malicious sensor node detection and identification
    through CN and Blockchain using Heuristic Detection System was found quite consistent
    and remarkable. The CN nodes were determined for the detection and identification,
    where a malicious node send a fake message to the CN node in the network. Similarly,
    this message was also received by the CN node. The CN node performed the necessary
    security verification process to match the node hash value with hash values in
    the Blockchain system. The results indicated that this sensor node did not verify
    the security condition of the hash value by matching its value. After that, the
    CN node sends the node hash value to the Blockchain system to share it, and then
    eliminates it and stores it as a suspected malicious node identity. Also, the
    Blockchain generates an alarm message to acknowledge a malicious node’s existence
    in the network. The simulation results verify that the CN node with Blockchain
    successfully identified a malicious node in the network. This verifies that the
    CN node detection rate of malicious node based on hash value assessment was entirely
    accurate in the wireless sensor network against the fake message. Subsequently,
    the number of malicious sensor nodes was increased in the deployed WSN infrastructure
    to verify performance reliability with many fake news, which was also found quite
    exceptional for the CN node. The CN node detects the maximum number of fake messages
    in their location, whose statistics are shown in Fig. [5](#Fig5).
  prefs: []
  type: TYPE_NORMAL
- en: 4.2 Result Analysis of CN Function Based on Signature-Based System
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Our proposed model’s results have also been evaluated the CN function based
    on Signature-Based System, where this method ensures the authentication of the
    signatures of all nodes correctly by CN with Blockchain system. In the simulation,
    we used malicious nodes to send messages with fake signatures. Here in this scenario,
    the hash values and sensor nodes ID in fake messages were kept similar to benign
    nodes, but the signatures were different for all introduced malicious nodes. During
    the simulation, the CN nodes have checked for assessment of signatures fake of
    all malicious nodes, which was found quite remarkable by assessing sensor nodes
    signatures in the network with the Blockchain system. Moreover, the statistical
    analysis observed during the simulation for a CN node based on Signature-Based
    System is shown in Fig. [4](#Fig4), where the malicious node signature detection
    is presented in graphical form as captured during the simulation.![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig4_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig4_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 4
  prefs: []
  type: TYPE_NORMAL
- en: CN node results in analysis using signature-based system to detect malicious
    sensor nodes in WSNs
  prefs: []
  type: TYPE_NORMAL
- en: '![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig5_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig5_HTML.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig. 5
  prefs: []
  type: TYPE_NORMAL
- en: CN node results analysis using voting system to detect malicious and benign
    sensor nodes in WSNs
  prefs: []
  type: TYPE_NORMAL
- en: 4.3 Result Analysis of CN Function Based on Voting-System for Malicious or Benign
    Sensor Nodes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The CN results were also seen to detect malicious or benign sensor nodes during
    the operational network. In case one of the nodes is hijacked, the node will start
    to send fake information, but signed by its correct identifier, and then the voting
    method will detect its up-normal activity as shown in the current experiment of
    our approach in this study. In this way, each cluster node can know the list of
    malicious nodes that have been detected through a result of voting (malicious
    or benign) by the other nodes and send the result to the Blockchain system. Finally,
    according to the voting results on the Blockchain and detection systems on the
    CN, the detection system decides whether to eliminate the network’s suspect node.
    The statistical analysis extracted from the simulation tool is shown in Fig. [5](#Fig5),
    where both malicious and benign nodes broadcast messages in the network. However,
    those correct messages received by CN directly from sensor nodes are also assessed
    by a voting system based on the value of the degree of malicious (*D*[*m*]). The
    statistical results analysis for fake messages of malicious nodes by using a voting
    system, which was captured during the simulation, is shown in Fig. [5](#Fig5)
    (Fig. [3](#Fig3)).
  prefs: []
  type: TYPE_NORMAL
- en: 4.4 Result Analysis of CN Functions Based on Heuristic Detection System, Signature-Based
    System and Voting-System
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the simulation, the overall proposed scheme was also evaluated after combining
    the three detection systems to assess malicious nodes’ overall detection rate.
    The overall results statistic showed that 94.9% of malicious messages were detected
    and identified successfully during the simulation for our scheme, as shown in
    Fig. [6](#Fig6).![../images/507793_1_En_12_Chapter/507793_1_En_12_Fig6_HTML.png](../images/507793_1_En_12_Chapter/507793_1_En_12_Fig6_HTML.png)
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 6
  prefs: []
  type: TYPE_NORMAL
- en: Overall detection rate of malicious messages in WSNs
  prefs: []
  type: TYPE_NORMAL
- en: 5 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this research, a novel approach of Blockchain-based Heuristic, Signature
    and Voting methods for detecting malicious attacks for Wireless Sensor Networks
    was proposed. The proposed scheme will counter malicious sensor attacks in deployed
    WSNs with minimal network resource utilization. The proposed scheme uses three
    functions with Blockchain technology to ensure the security of the network and
    maintain a secure communication infrastructure for WSNs. The three functions of
    the proposed scheme back up each other to identify malicious attacks in a more
    precise way in the network. Similarly, the functions work independently in the
    network, but the authentication mechanism backs up each other to identify malicious
    attacks at a high rate. In the first function, the CN node performs a heuristic
    malicious detection system to validate the hash value of the sensor node. Suppose
    the heuristic detection system determines that the received message is malicious.
    In that case, the CN sends the node hash value to the Blockchain system to share
    it and then eliminates the node and store it as a suspected malicious node identity.
    The second function is the signature-based method. If the same hash value exits
    on the benign identity list, a signature-based system through asymmetric encryption
    is executed. This technique ensures the authentication of the signatures of all
    nodes. The Blockchain system has a list of all node signatures in the network
    and shares it with all CNs. It is assumed that each sensor node should sign each
    message received and send it securely to all neighbors’ nodes to avoid cyber-attacks
    through cluster head nodes. Thus, all nodes can sign and forward all messages
    over the network by using asymmetric encryption. In this way, each cluster head
    node can investigate whether signatures already exist on the Blockchain system
    or not. Thus, based on the result on the Blockchain, the signature detection system
    in the cluster head node can decide whether to delete the suspect node or not.
    The voting method is the third function, in case one of the nodes is hijacked,
    the node will start to send fake information, but signed by its correct identifier,
    and then the voting method will detect its up-normal activity. In this way, each
    cluster node can know the list of malicious nodes that have been detected through
    a result of voting (malicious or benign) by the other nodes and send the result
    to the Blockchain system. According to the voting results on the Blockchain and
    detection systems on the CN, the detection system decides whether to eliminate
    the network’s suspect node. Finally, we carried out simulation experiments; the
    overall experimental results show that our scheme can effectively suppress sensor
    nodes’ malicious attacks.
  prefs: []
  type: TYPE_NORMAL
