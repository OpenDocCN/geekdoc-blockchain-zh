- en: Chapter 1\. Fundamental Concepts of Blockchain
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章。区块链基本概念
- en: It’s important to understand that blockchain is not a simple concept for most
    to grasp without a solid understanding of its origin, core components, architecture,
    and the debates surrounding blockchain. Blockchain has many slightly varying definitions
    that elicit some very dogmatic opinions, and this confuses many when first beginning
    their blockchain journey. This confusion happens because blockchain is not a tangible
    thing that can be touched or seen; instead, it is a concept born out of algorithms,
    technology, and fresh ideas for the exchange of economic value.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，对于大多数人来说，区块链并不是一个简单的概念，如果没有对其起源、核心组件、架构以及围绕区块链的辩论有扎实的理解，就很难理解。区块链有许多略有不同的定义，引发了一些非常教条的意见，这让许多人在开始他们的区块链之旅时感到困惑。这种困惑是因为区块链不是可以触摸或看到的有形物体；相反，它是一种由算法、技术和对经济价值交换的新思想诞生的概念。
- en: In this chapter, we’ll explore the fundamental concepts of blockchain by first
    starting with a brief history of its origin. This background information will
    help you understand why blockchain has no single standardized and universally
    accepted definition.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将通过首先简要介绍其起源的历史，来探讨区块链的基本概念。这些背景信息将帮助您理解为什么区块链没有单一的标准化和普遍接受的定义。
- en: Following our discussion on blockchain’s origin, we will look briefly at several
    core components. Then we’ll delve into its architecture, followed by supporting
    technology and concepts.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论了区块链的起源之后，我们将简要介绍几个核心组件。然后我们将深入探讨其架构，接着是支持技术和概念。
- en: In our look at the core components, we begin with the decentralized network.
    Then we cover cryptography. You can think of cryptography as the secret sauce
    of blockchain because it is what makes blockchain work. Without cryptography,
    there would be no use for blockchain. Next, we discuss ledger implementation.
    The ledger represents the storage or database in blockchain. It maintains the
    state created as a result of the last committed transaction as well as the history
    from the beginning of the ledger’s creation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们对核心组件的讨论中，我们首先从去中心化网络开始。然后我们涵盖了密码学。你可以将密码学看作是区块链的秘密武器，因为它是使区块链工作的关键。没有密码学，就没有区块链的用处。接下来，我们讨论账本实现。账本代表了区块链中的存储或数据库。它维护了由上一次提交的交易产生的状态，以及从账本创建之初的历史。
- en: Next, we discuss the consensus, a protocol to find “agreement” among the nodes,
    which is the heart of blockchain. Consensus provides a secure means to complete
    transactions without relying on the traditional intermediaries in common transactional
    systems. Finally, we discuss smart contracts. The power in blockchain to perform
    complex transactions is a direct result of the employment of smart contracts.
    You can think of smart contracts as software programs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论共识，这是在节点之间找到“一致”的协议，是区块链的核心。共识提供了一种安全的方式来完成交易，而不依赖于普通交易系统中的传统中介。最后，我们讨论智能合约。区块链在执行复杂交易方面的能力直接源于智能合约的运用。您可以将智能合约视为软件程序。
- en: 'This chapter will help you understand the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助您理解以下内容：
- en: The architecture and core design components of blockchain
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链的架构和核心设计组件
- en: How ledger databases and world state databases work in a blockchain
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账本数据库和世界状态数据库在区块链中的工作原理
- en: The role of cryptography (such as public/private keys or hash functions) in
    a blockchain
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码学（例如公钥/私钥或哈希函数）在区块链中的作用
- en: The most popular consensus algorithms used in blockchain
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链中使用的最流行的共识算法
- en: How smart contracts work in a blockchain system
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约在区块链系统中的工作原理
- en: What Is Blockchain?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链是什么？
- en: In the generally accepted definition, *blockchain* is a subset of distributed
    ledger technology (DLT). Breaking down DLT, we get *distributed* by creating a
    peer-to-peer network of nodes, which are computers; together they form a distributed
    network ([Figure 1-1](#types_of_networks)). Each node processes transactions submitted
    by clients. These transactions become committed records—called the ledger—of a
    replicated database on all nodes. This ledger is immutable, and the records are
    grouped into blocks.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在普遍接受的定义中，*区块链*是分布式账本技术（DLT）的一个子集。分解DLT，我们通过创建节点的点对点网络来实现*分布式*，这些节点是计算机；它们一起形成一个分布式网络（[图1-1](#types_of_networks)）。每个节点处理客户端提交的交易。这些交易成为所有节点上的一个复制数据库的提交记录，称为账本。这个账本是不可变的，记录被分组成块。
- en: '![Types of networks](Images/HLF_0101.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![网络类型](Images/HLF_0101.png)'
- en: Figure 1-1\. Types of networks
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-1\. 网络类型
- en: Each node maintains a copy of this immutable ledger, typically implemented as
    an append-only file or database. Blockchain relies on the employment of digital
    signatures and consensus to commit records. Most DLTs do not use consensus; instead,
    DLTs require only digital signatures to be present to commit records. There is
    no consensus, just digitally signed transactions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每个节点维护着这个不可变账本的副本，通常实现为追加文件或数据库。区块链依赖于数字签名和共识来提交记录。大多数DLT不使用共识；相反，DLT只需要存在数字签名就可以提交记录。没有共识，只有数字签名的交易。
- en: The records are committed to the immutable ledger. In this append-only database,
    each record is ordered in time, and each block of records is cryptographically
    linked to the prior committed block. Each block contains additional metadata along
    with the hash code of the prior block and a set of committed records. The records
    are typically represented by a hash tree known as a *Merkle tree* ([Figure 1-2](#a_merkle_tree)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 记录被记录到不可变账本中。在这个只追加的数据库中，每条记录都按时间顺序排列，每个记录块都与之前提交的块进行了密码链接。每个块都包含附加的元数据，以及前一个块的哈希码和一组已提交的记录。这些记录通常由称为*Merkle树*的哈希树表示（参见[图
    1-2](#a_merkle_tree)）。
- en: '![A Merkle tree](Images/HLF_0102.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![默克尔树](Images/HLF_0102.png)'
- en: Figure 1-2\. A Merkle tree
  id: totrans-19
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-2\. 默克尔树
- en: This gives you a general idea of what blockchain is. But we can begin to gain
    greater clarity when we look at its origin, its architecture, and its components.
    The origin explains why definitions diverged. Blockchain’s architecture is the
    easiest aspect to grasp because it is the most concrete of the topics and provides
    a holistic view. The components are a set of legacy technologies and logical concepts,
    each of which can be separately understood. By examining the components, we can
    build a solid foundation for mastering the skills required to develop blockchain
    smart contracts and blockchain applications. Understand that blockchain technology
    is built on legacy technology such as digital signatures, peer-to-peer networking,
    and decades of prior work.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了你一个大致了解区块链是什么。但当我们看它的起源、架构和组成时，我们可以开始获得更清晰的认识。起源解释了为什么定义分歧。区块链的架构是最容易理解的方面，因为它是最具体的主题，提供了整体视角。组成部分是一组传统技术和逻辑概念，每个部分都可以单独理解。通过检查这些组成部分，我们可以为掌握开发区块链智能合约和区块链应用所需的技能打下坚实的基础。请理解，区块链技术是建立在数字签名、点对点网络和几十年的先前工作等传统技术之上的。
- en: Synergistic in nature, blockchain comes into existence when several legacy technologies
    join together as a single, complex, integrated system performing the fundamental
    task of executing transactions. Many, when discussing blockchain, see it as a
    database. Others see it as a transaction processor. Still others see it as a decentralized
    utopia free from any central control and a way to restructure society. Blockchain
    is all of these and more. Unfortunately, this paradigm is why it can be difficult
    to grasp the fundamental concept of blockchain.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的产生是一种协同性的过程，当几种传统技术联合起来作为一个单一的、复杂的、集成的系统来执行基本任务时，它就形成了。许多人在讨论区块链时，将其视为数据库。其他人将其视为交易处理器。还有人将其视为一个去中心化的乌托邦，摆脱了任何中央控制的束缚，是重构社会的一种方式。区块链既是这些，又不仅限于此。不幸的是，这种范式是为什么难以理解区块链的基本概念的原因之一。
- en: Typically, new technologies or inventions are defined by a single purpose or
    well-understood solution to a problem. For instance, the concept of NoSQL databases
    is easy to understand. Even software-defined networking is not a stretch to envision
    and define.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，新技术或发明都是通过单一目的或对问题的明确定义的解决方案来定义的。例如，NoSQL 数据库的概念很容易理解。即使软件定义网络也不难设想和定义。
- en: Many try to understand blockchain by equating it with Bitcoin, the cryptocurrency
    that employs blockchain technology. This happens because blockchain technology
    is the underlying mechanism that facilitates the operation of Bitcoin, and thus
    they are seen as one. You should understand that Bitcoin is an application using
    blockchain technology. The Bitcoin use case is a peer-to-peer financial exchange.
    To understand blockchain, we will break it down into discrete components. Then
    you can combine them and envision solutions to problems you want to solve.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人试图通过将其与采用区块链技术的加密货币比特币等同来理解区块链。这是因为区块链技术是促进比特币运作的基础机制，因此它们被视为一个整体。你应该明白，比特币是一个使用区块链技术的应用程序。比特币的用例是点对点的金融交易。要理解区块链，我们将其分解为离散的组件。然后你可以将它们组合起来，设想解决你想解决的问题的解决方案。
- en: Origin of Blockchain
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的起源
- en: Most people date the birth of blockchain with the beginning of Bitcoin—more
    specifically, the Bitcoin paper authored by Satoshi Nakamoto and published in
    2008\. Who is Satoshi Nakamoto? Nobody knows, because they have never made themselves
    publicly known. They could be a person, group, company, or government agency,
    like the US National Security Agency (NSA). Regardless, Nakamoto remains a mystery.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人认为区块链的诞生与比特币的开始有关——更具体地说，与中本聪撰写并于 2008 年发布的比特币论文有关。谁是中本聪？没有人知道，因为他们从未公开露面。他们可能是个人、团体、公司或者像美国国家安全局（NSA）这样的政府机构。尽管如此，中本聪仍然是个谜。
- en: There are those who claim to be Nakamoto, but no concrete proof has ever been
    presented. So, Nakamoto remains an unknown figure.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有人声称自己是中本聪，但从未提供过确凿的证据。因此，中本聪仍然是一个未知的人物。
- en: 'In Nakamoto’s paper, “[Bitcoin: A Peer-to-Peer Electronic Cash System](https://bitcoin.org/bitcoin.pdf),”
    you will not find the term *blockchain* or *block chain*. The closest you’ll find
    is *chain of blocks*. You must go to code line 596 in *main.h* to find the first
    instance of the term [block chain](https://github.com/trottier/original-bitcoin/blob/master/src/main.h).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在中本聪的论文《[比特币：一种点对点的电子现金系统](https://bitcoin.org/bitcoin.pdf)》中，你找不到 *区块链* 或 *区块链*
    这个术语。你最接近找到的是 *区块链*。你必须去 *main.h* 的代码第 596 行才能找到 *区块链* 这个术语的第一个实例。
- en: Satoshi cited eight papers, including “[How to Time-Stamp a Digital Document](https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=C01131148AF17AF93F2655C091376AF4?doi=10.1.1.46.8740&rep=rep1&type=pdf)”
    by Stuart Haber and W. Scott Stornetta that contains the phrase *chain of time-stamps*.
    This, no doubt, was inspiration for how to link blocks of transactions together
    in the design of Bitcoin. Other cited papers must have influenced the design.
    First was “[Protocols for Public Key Cryptosystems](http://www.weidai.com/bmoney.txt)”
    by Ralph C. Merkle, who was famous for the Merkle tree (see [Figure 1-2](#a_merkle_tree)),
    a cryptographic hash tree data structure widely used in blockchain. The other
    paper of great influence was “[b-money](http://www.weidai.com/bmoney.txt)” by
    Wei Dai, which was certainly thought about while designing Bitcoin to be a digital
    cryptocurrency for use as a peer-to-peer exchange of value.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Satoshi引用了八篇论文，其中包括斯图尔特·哈伯和W·斯科特·斯托内塔的 “[如何为数字文档加时间戳](https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=C01131148AF17AF93F2655C091376AF4?doi=10.1.1.46.8740&rep=rep1&type=pdf)”
    ，其中包含短语*时间戳链*。毫无疑问，这启发了如何在比特币设计中将交易区块链接在一起。其他引用的论文必然影响了设计。首先是拉尔夫·C·默克尔的 “[公钥密码系统协议](http://www.weidai.com/bmoney.txt)”
    ，他因Merkle树而闻名（见[图 1-2](#a_merkle_tree)），这是一种广泛用于区块链的密码哈希树数据结构。另一篇具有重大影响的论文是魏·戴的
    “[b-money](http://www.weidai.com/bmoney.txt)” ，在设计比特币成为用于对等价值交换的数字加密货币时肯定思考过。
- en: The Blockchain Revolution
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链革命
- en: Bitcoin was the spark that ignited the revolution of blockchain, but not the
    fuel for it. It also generated a subculture around Bitcoin with strong beliefs
    and a sense of ownership. This sparse and federated community, bound together
    by the common belief that “blockchain is only permissionless,” immediately took
    ownership of Bitcoin and replicated it into hundreds of incarnations. Some were
    identical and some divergent, but all united in a common thesis that represented
    an anarchist’s view of a new world possible with Bitcoin.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币是点燃区块链革命的火花，但不是它的燃料。它还在比特币周围形成了一个具有强烈信仰和归属感的亚文化。这个稀疏而联合的社区，以“区块链只是无需许可”的共同信念为纽带，立即接管了比特币，并将其复制成了数百个版本。有些是相同的，有些是不同的，但所有人都团结在一个共同的论题上，这个论题代表了一个具有比特币可能的新世界的无政府主义者的观点。
- en: Blockchain 2.0
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链2.0
- en: Prior to Bitcoin, Adam Back, known for [Hashcash](http://www.hashcash.org/papers/hashcash.pdf),
    wrote about a proof-of-work system used to prevent email spam in 2002\. Nick Szabo
    developed the terms [smart contracts](https://archive.is/wIUOA#selection-203.0-203.27)
    in 1997 and [bit gold](https://nakamotoinstitute.org/bit-gold/) in 2005, which
    many consider the precursors to Bitcoin. As far back as 1982, David Chaum, called
    the inventor of digital cash and inventor of blind signatures, was working on
    [electronic cash](https://www.chaum.com/publications/). The concept of blockchain
    has a rich history and was fully developed in 2013 in “[Ethereum Whitepaper](https://ethereum.org/whitepaper/)”
    by Vitalik Buterin into what we think of today as Blockchain 2.0.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在比特币之前，以太坊白皮书出现之前，Adam Back，以 [Hashcash](http://www.hashcash.org/papers/hashcash.pdf)
    著称，于 2002 年撰写了一篇关于用于防止电子邮件垃圾邮件的工作证明系统。Nick Szabo 在 1997 年开发了术语 [智能合约](https://archive.is/wIUOA#selection-203.0-203.27)，并在
    2005 年开发了 [bit gold](https://nakamotoinstitute.org/bit-gold/)，许多人认为这是比特币的前身。早在
    1982 年，被称为数字货币发明者和盲签名发明者的 David Chaum 就已经在研究 [电子现金](https://www.chaum.com/publications/)。区块链概念有着丰富的历史，并且在
    2013 年由 Vitalik Buterin 在 “[以太坊白皮书](https://ethereum.org/whitepaper/)” 中得以完整发展成为我们今天所认知的区块链
    2.0。
- en: Prior to the Ethereum whitepaper, we had Blockchain 1.0, which powers Bitcoin
    and represents blockchain technology without the concept of the smart contract.
    In Blockchain 2.0, we have smart contract technology, which Buterin expressed
    in his whitepaper. It facilitates rich transactions far beyond the capability
    of Bitcoin, a platform for the simple exchange of value. With smart contract capability,
    intelligent stateful execution of complex transactions are possible. It is Blockchain
    2.0 that started the blockchain revolution, the evolution of blockchain, and the
    attraction of enterprise organizations like IBM, Intel, Oracle, Amazon, Microsoft
    and many others, with the list expanding exponentially every day.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太坊白皮书出现之前，我们拥有区块链 1.0，它为比特币提供动力，并代表着没有智能合约概念的区块链技术。在区块链 2.0 中，我们拥有智能合约技术，Buterin
    在他的白皮书中表达了这一点。它促进了远远超出比特币能力范围的丰富交易，比特币只是一个简单价值交换的平台。有了智能合约功能，复杂交易的智能状态执行变得可能。正是区块链
    2.0 开启了区块链革命、区块链演进以及吸引了 IBM、英特尔、甲骨文、亚马逊、微软等企业组织的关注，名单每天都在呈指数级增长。
- en: By 2015, after Ethereum became the first platform under Blockchain 2.0 to implement
    a single ledger, enterprise companies saw the potential of Blockchain 2.0\. In
    December 2015, the Linux Foundation announced the creation of the Hyperledger
    project.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 到了 2015 年，在以太坊成为首个实现单一账本的区块链 2.0 平台之后，企业公司看到了区块链 2.0 的潜力。2015 年 12 月，Linux 基金会宣布创建
    Hyperledger 项目。
- en: We cover the Hyperledger project in [Part II](part02.xhtml#introduction_to_hyperledger_projects),
    which contains two chapters. One covers the projects and tools, and the other
    covers the Hyperledger Fabric architecture and components. These two chapters
    provide the knowledge you will need for [Part III](part03.xhtml#developing_smart_contracts_with_hyperle),
    which covers smart contract development, invocation, maintenance, and testing.
    In the next section, we discuss, on a high level, the many components of blockchain.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第二部分](part02.xhtml#introduction_to_hyperledger_projects)中介绍了Hyperledger项目，其中包含两章。
    其中一章涵盖了项目和工具，另一章涵盖了Hyperledger Fabric的架构和组件。 这两章提供了您将需要的知识，用于[第三部分](part03.xhtml#developing_smart_contracts_with_hyperle)，该部分涵盖了智能合约的开发、调用、维护和测试。
    在下一节中，我们将高层次地讨论区块链的许多组件。
- en: Core Components of Blockchain
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的核心组件
- en: Blockchain is not a single compilation of source code. It may have a common
    executable, but both logical and physical components work together to form a functioning
    blockchain. This separation of logical and physical components may help create
    the confusion you see when discussing blockchain technology, along with the fact
    that blockchain is more of a concept than an implementation. Implementations of
    the concept are rapidly evolving and will continue to change and shift as more
    and more technologists and entrepreneurs enter the world of blockchain.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链不是单一的源代码编译。 它可能有一个常见的可执行文件，但逻辑和物理组件共同工作以形成一个运行的区块链。 逻辑和物理组件的分离可能有助于在讨论区块链技术时产生您看到的混乱，以及区块链更像是一个概念而不是一个实现。
    概念的实现正在迅速发展，并将随着越来越多的技术人员和企业家进入区块链世界而继续变化和转变。
- en: Common components form the central concept of blockchain. First is the decentralized
    network. Second is cryptography. Third is an immutable ledger. Fourth is consensus.
    And fifth is smart contracts. These five elements form the core components you
    need to create the concept of blockchain. The way they are implemented will evolve
    as new methods and algorithms are developed over time.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 常见组件构成了区块链的核心概念。 第一个是分布式网络。 第二个是密码学。 第三个是不可变账本。 第四个是共识。 第五个是智能合约。 这五个元素构成了你创建区块链概念所需的核心组件。
    随着时间的推移，它们的实现方式将随着新的方法和算法的开发而不断发展。
- en: Which components you decide to use will shape your blockchain landscape and
    create a rich ecosystem of innovative solutions to new and existing problems.
    There are no rules.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你决定使用哪些组件将塑造你的区块链格局，并为新问题和现有问题创造丰富的创新解决方案生态系统。 没有规则。
- en: Decentralized Network
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分布式网络
- en: A blockchain employs a decentralized network (depicted previously in [Figure 1-1](#types_of_networks)).
    *Public blockchains* allow anyone to participate, while *private blockchains*
    enforce membership, and only parties with a valid membership can participate in
    the blockchain.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链采用分布式网络（如[图 1-1](#types_of_networks)所示）。 *公共区块链*允许任何人参与，而*私有区块链*则强制执行成员资格，只有具有有效成员资格的参与方才能参与区块链。
- en: 'Today there are two universally accepted types of blockchains: permissioned
    and permissionless. A *permissioned blockchain* requires a managing blockchain
    authority to enroll and grant membership to participate. The enrolled party may
    have rights to read only, or write only, or read and write. Hyperledger Fabric
    is a permissioned private blockchain.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 今天有两种被普遍接受的区块链类型：许可和无许可。*许可区块链*需要管理区块链机构来注册并授予成员资格参与。注册方可能只有阅读权限，或者只有写权限，或者读写权限。Hyperledger
    Fabric 是一种许可的私有区块链。
- en: A *permissionless blockchain* has no central authority, and anyone can participate.
    They can read and write the blockchain.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*无许可区块链*没有中央机构，任何人都可以参与。他们可以读写区块链。'
- en: The network can be internal or external, or a combination. The network can be
    self-contained or span the world. Today we think of decentralized networks as
    made up of nodes when we consider blockchain. Any discussion, lecture, or presentation
    on blockchain will tell you that a blockchain must have a decentralized network
    of nodes. Depending on the speaker and target audience, the message will be biased
    to open, closed, or hybrid networks, but they’re always decentralized.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 网络可以是内部的或外部的，或者二者兼有。网络可以是自包含的，也可以是全球范围的。如今，我们在考虑区块链时，会把分散网络视为由节点组成。关于区块链的任何讨论、讲座或演示都会告诉你，区块链必须具有分散的节点网络。根据演讲者和目标受众的不同，信息可能会偏向于开放、封闭或混合网络，但它们始终是分散的。
- en: Cryptography
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码学
- en: '*Cryptography* is the blood of blockchain. It is the art of creating and keeping
    secrets. Since ancient times, people have needed to create secrets and send secret
    messages. Today complex mathematical algorithms are used to create secrets. To
    send the secret messages, *protocols* are used, which are rules for connecting
    and communicating the messages between parties. Without cryptography, there is
    no blockchain or DLT. The primary use of cryptography is for encryption, keys,
    hashing, signatures, integrity, proof, and tamper resistance.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*密码学*是区块链的血液。它是创造和保持秘密的艺术。自古以来，人们就需要创造秘密并发送秘密信息。今天，复杂的数学算法用于创建秘密。为了发送秘密信息，使用*协议*，这是连接和交流各方消息的规则。没有密码学，就没有区块链或分布式账本技术。密码学的主要用途是加密、密钥、哈希、签名、完整性、证明和防篡改。'
- en: Digital signatures
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字签名
- en: '*Digital signatures* employ asymmetric cryptography, which employs a private
    and public key. Keys are pseudorandom generated bit strings. The private key is
    never revealed and kept secret. The public key, however, is revealed and distributed
    to the public or a designated party. Digital signing algorithms use the private
    key to encrypt text. The encrypted text can be decrypted by only the public key.
    Because the private and public keys are a pair, they work together and facilitate
    the creation of the concept of digital signatures.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*数字签名*采用非对称密码学，其中使用私钥和公钥。密钥是伪随机生成的位串。私钥永远不会被揭示并保密。然而，公钥是公开的并分发给公众或指定的一方。数字签名算法使用私钥加密文本。只有公钥可以解密加密文本。因为私钥和公钥是一对，它们一起工作并促进了数字签名概念的创建。'
- en: Digital signatures have three primary uses. The first is for *authentication*.
    When someone signs a blockchain transaction with a private key, the receiver can
    authenticate the party that signed the transaction by using the party’s public
    key.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名有三个主要用途。第一个是*认证*。当某人用私钥签署区块链交易时，接收方可以使用该方的公钥验证签署交易的一方。
- en: The second primary use is *integrity*. When a message is signed, any change
    in the message will invalidate the signature, and the receiving party will know
    the message has been tampered with.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*完整性*是第二个主要用途。当消息被签名时，消息的任何更改都会使签名无效，接收方将知道消息已被篡改。'
- en: The third important use is *nonrepudiation*. When a party signs a transaction
    and submits it, they cannot later try to claim they did not submit the transaction
    because their signature can be verified on the transaction submitted. They can
    claim only that their signature was stolen, but this too can be proven not true
    by employing additional signatures that belong to the device used to submit the
    transaction, including a timestamp and possible metadata that designates the location.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个重要的用途是*不可否认性*。当一方签署交易并提交后，他们不能后来试图声称他们没有提交交易，因为他们的签名可以在提交的交易上进行验证。他们只能声称他们的签名被盗，但这也可以通过使用属于提交交易的设备的额外签名来证明不是真实的，其中包括时间戳和可能指定位置的元数据。
- en: Hash functions
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 散列函数
- en: A *hash function* is a cryptographic one-way function. The function receives
    data as an argument, performs a cryptographic task, and then produces a string
    unique to the input data. If one bit of the input data is changed, the output
    string will change. If no bits are changed, the hash function will always produce
    the same output string.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*散列函数*是一种密码学单向函数。该函数将数据作为参数接收，执行密码学任务，然后生成与输入数据唯一的字符串。如果更改输入数据的任何一位，输出字符串将更改。如果没有更改位，散列函数将始终产生相同的输出字符串。'
- en: Using a hash function in blockchain means you cannot change data, or the result
    will not match what is recorded. By linking the hash outputs into a Merkle tree,
    large numbers of records can be linked and stored in a block. The blocks are hashed,
    and the prior block’s hash is part of the next block, creating the immutable chain
    of blocks.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中使用哈希函数意味着您不能更改数据，否则结果将不匹配记录的内容。通过将哈希输出链接成 Merkle 树，可以链接大量记录并存储在一个块中。这些块被哈希，并且前一个块的哈希是下一个块的一部分，从而创建了不可变的块链。
- en: The Merkle tree is a hash tree structure in which nodes are hashed together
    successively until a single node is created. This single node provides the integrity
    for the entire tree. The bottom nodes can be rehashed and verified for data integrity.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Merkle 树是一种哈希树结构，在此结构中，节点连续地进行哈希，直到创建一个单一的节点。此单一节点为整个树提供完整性。底部节点可以重新哈希和验证数据的完整性。
- en: Several secure hash algorithms exist, but SHA-256 and SHA-3 are the primary
    ones used in blockchain.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 存在几种安全哈希算法，但 SHA-256 和 SHA-3 是区块链中主要使用的算法。
- en: Wallet
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 钱包
- en: Private and public keys are used a lot in blockchains. Private keys are used
    to sign transactions and represent the secrets you want to secure and protect.
    You place your keys in a *digital wallet*, just like you place your credit cards
    in your physical wallet. You may have a wallet for each blockchain, or you may
    have separate wallets for different applications. Wallets are containers for your
    keys. They secure them, manage them, and can facilitate the function of signing.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中经常使用私钥和公钥。私钥用于签署交易并代表您想要保护和保护的秘密。您将您的密钥放在*数字钱包*中，就像您将信用卡放在您的物理钱包中一样。您可能为每个区块链拥有一个钱包，或者您可能为不同的应用程序拥有单独的钱包。钱包是您的密钥的容器。它们保护它们，管理它们，并可以促进签名的功能。
- en: The functionality of wallets is growing, and they are becoming more sophisticated.
    There are *physical wallets* that plug into your USB and keep your keys safe in
    a hardware enclave, and *software wallets* that can exist on your computers or
    in the cloud. As time goes on, the function and features of wallets will continue
    to grow and expand.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 钱包的功能正在增长，并且它们变得越来越复杂。有*物理钱包*，可以插入您的 USB 并将您的密钥安全地存储在硬件隔离区中，还有*软件钱包*，可以存在于您的计算机或云中。随着时间的推移，钱包的功能和特性将继续增长和扩展。
- en: Shared Ledger
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 共享账本
- en: The *shared ledger* represents the database in blockchain. There is no standard
    format as with relational databases. The blockchain shared ledger has two hard-and-fast
    rules. First, it is immutable, meaning it is tamper-proof. Second, it is ordered.
    The order is by time.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*共享账本*代表区块链中的数据库。与关系数据库不同，它没有标准格式。区块链共享账本有两个硬性规则。首先，它是不可变的，这意味着它是防篡改的。其次，它是有序的。顺序是按时间排序的。'
- en: 'These two rules create the feature in blockchain that makes it so powerful;
    a time-ordered record of immutable transactions. Combined with consensus and cryptography,
    the shared ledger yields a mechanism for delivering trust, transparency, and provenance.
    In Hyperledger, the ledger is divided into two components: the ledger database
    and the world state database.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这两条规则创造了区块链中使其如此强大的特性；一个按时间顺序记录的不可变交易。结合共识和密码学，共享账本提供了一种交付信任、透明度和溯源的机制。在 Hyperledger
    中，账本分为两个组件：账本数据库和世界状态数据库。
- en: Ledger database
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '*账本数据库* 是一个二进制文件。区块被附加到文件中。每个对等方都在本地托管文件。该文件不能轻易阅读，因为它是为了性能而采用的二进制格式。工具和应用程序编程接口（API）可用于探索文件中的区块。通过探索组成账本数据库的区块，可以读取每个交易，如果需要，这允许文件复制到新节点。'
- en: The *ledger database* is a binary file. Blocks are appended to the file. Each
    peer locally hosts the file. The file cannot easily be read because it is in a
    binary format for performance purposes. Tools and an application programming interface
    (API) are available for exploring the blocks in the file. By exploring the blocks
    that make up the ledger database, every transaction can be read, and this allows
    the file to be replicated to new nodes if needed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 账本数据库
- en: World state database
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 世界状态数据库
- en: The *world state database* is unique to Hyperledger Fabric. It is a traditional
    database. You can plug in your database of choice. Hyperledger Fabric defaults
    to LevelDB, and supports through configuration CouchDB. By switching to CouchDB,
    applications can perform rich queries against the world state database. It is
    called the world state database because it represents the current state of the
    blockchain at any point in time.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*世界状态数据库* 是 Hyperledger Fabric 独有的。它是一个传统的数据库。你可以使用你喜欢的数据库。Hyperledger Fabric
    默认使用 LevelDB，并通过配置支持 CouchDB。通过切换到 CouchDB，应用程序可以对世界状态数据库执行丰富的查询。它被称为世界状态数据库，因为它代表着区块链在任何时候的当前状态。'
- en: Consensus
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 共识
- en: The concept of trust is the heart of blockchain. *Consensus* is the mechanism
    that facilitates the utopian aspect of blockchain by providing a means for disparate
    parties to transact without the necessary trust provided by intermediaries prevalent
    in today’s transactional systems.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的核心概念是信任。*共识* 是区块链乌托邦特性的机制，它通过为不同方提供在今天的交易系统中所需的信任的手段来促进交易，而无需中介。
- en: 'Another way to think about consensus is this: every time you use your credit
    card, several intermediaries are involved, each performing a specific function
    and collecting a fee, which you are paying for in addition to the amount of your
    purchase. You may not see the fees, but they are built into the transaction either
    implicitly or explicitly, and you are paying for them. In blockchain, the mechanism
    of consensus performs this function of trust, void of intermediaries.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种理解共识的方式是：每次使用信用卡时，都会涉及几个中间人，每个中间人都会执行特定的功能并收取费用，你支付的费用包括购买金额和手续费。你可能看不到这些费用，但它们要么隐含在交易中，要么显式地计入其中，你支付了这些费用。在区块链中，共识机制执行了这种无需中间人的信任功能。
- en: Consensus has many implementations. Each is designed to provide trust based
    on probability. This probability is a function of agreement. Complete agreement
    is difficult to attain and requires a lot of time and resources, while partial
    agreement is faster, requires fewer resources, but is risky. How much risk is
    tolerable depends on blockchain governance and determines the attributes of the
    consensus mechanism used to reach agreement. Seldom, if ever, can the probability
    of agreement be 1, or 100%, and often less than 100% is acceptable.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 共识有许多实现方式。每种都旨在根据概率提供信任。这种概率是协议的函数。完全一致是很难实现的，并且需要大量时间和资源，而部分一致速度更快，需要更少的资源，但是存在风险。能够容忍多少风险取决于区块链治理，并决定用于达成一致的共识机制的属性。很少情况下，一致的概率会是1或100%，通常而言，少于100%的一致也是可以接受的。
- en: 'Many consensus algorithms exist, and new algorithms are continuously being
    designed. You should understand four: proof of work, proof of stake, practical
    Byzantine fault tolerance, and proof of elapsed time.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多共识算法，并且不断设计新的算法。你应该了解四种算法：工作证明、股权证明、实用拜占庭容错和已流逝时间的证明。
- en: PoW
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PoW
- en: '*Proof of work* (*PoW*) is a consensus algorithm used in Bitcoin and Ethereum
    (note that Ethereum is moving to proof of stake). This consensus algorithm relies
    on energy by solving a cryptographic puzzle. The energy is represented by the
    hashrate, which is the number of hashes generated per second. To generate a hash
    requires a finite amount of energy. This energy is the electricity used to produce
    a hash. The more hashes produced, the more energy required. The cost of energy
    is critical to the number of hashes that can be produced. The puzzle is to find
    an input that produces a hash number with a certain number of leading zeros. The
    complexity or average time to solve is controlled by designating the number of
    leading zeros.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*工作证明* （*PoW*）是比特币和以太坊（请注意，以太坊正在过渡到股权证明）中使用的共识算法。这种共识算法依赖通过解决一个密码谜题来产生能量。能量是由哈希率表示的，这是每秒生成的哈希数量。产生哈希需要有限的能量。这种能量就是用于生成哈希的电力。生产的哈希越多，需要的能量就越多。能源成本对能够生产的哈希数量至关重要。谜题是找到一个输入，使其产生具有一定数量前导零的哈希数。解决的复杂性或时间取决于指定前导零的数量。'
- en: For Bitcoin, the number of leading zeros is adjusted to keep the solving time
    around 10 minutes. Depending on how many miners are hashing, this number will
    vary up or down. This consensus model is energy dependent because miners who spend
    the most energy have a higher chance of finding the winning input and thus are
    rewarded with Bitcoin and get to commit the current block.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于比特币，前导零的数量会调整以保持求解时间在约`10分钟`左右。根据进行哈希运算的矿工数量不同，这个数字会上下浮动。这种共识模型是能源依赖型的，因为消耗最多能源的矿工有更高的机会找到获胜输入，并因此获得比特币并提交当前区块。
- en: PoS
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PoS
- en: '*Proof of stake* (*PoS*) is a consensus algorithm that depends on both randomization
    of and vested interest in the blockchain. Several PoS algorithms exist, but most
    employ routines for generating a random number from certain criteria such as the
    amount of coins held or the age of coins held. The lowest or highest random number
    generated wins and gets to commit the current block and receive a reward. Once
    a stakeholder wins, their stake criteria reverts to zero; this effectively eliminates
    them for the next round.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*Proof of stake* (*PoS*) 是一种依赖于区块链的随机化和利益相关的共识算法。存在几种PoS算法，但大多数都采用根据持有的硬币数量或持有的硬币的年龄等特定标准生成随机数的例程。生成的最低或最高随机数赢得并提交当前区块并获得奖励。一旦某个权益者获胜，他们的权益标准就会归零；这有效地将他们在下一轮中淘汰。'
- en: PBFT
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PBFT
- en: '*Practical Byzantine fault tolerance* (*PBFT*) is a consensus algorithm that
    dates back to 1999\. PBFT is a leader-based nonforking algorithm. It requires
    all nodes to be connected to all other nodes. All the nodes are known, and the
    algorithm does not permit random nodes joining the peering group. The algorithm
    supports up to one-third of the nodes faulting. As long as no more than one-third
    of the nodes fault, consensus can be reached.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*Practical Byzantine fault tolerance* (*PBFT*) 是一种可以追溯到1999年的共识算法。PBFT是基于领导者的非分叉算法。它要求所有节点都连接到所有其他节点。所有节点都是已知的，并且该算法不允许随机节点加入对等组。该算法支持最多三分之一的节点故障。只要不超过三分之一的节点出现故障，就可以达成共识。'
- en: PoET
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PoET
- en: '*Proof of elapsed time* (*PoET*) is a consensus algorithm that uses a trusted
    execution environment (TEE). In this algorithm, random peers are selected to execute
    requests at a predetermined rate. The selected peers sample an exponentially distributed
    random variable. They wait for time to pass, determined by the sample, and the
    peer with the smallest sample wins the election and gets to commit the block.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*Proof of elapsed time* (*PoET*) 是一种使用受信任执行环境（TEE）的共识算法。在这个算法中，随机对等体被选中以预定速率执行请求。选定的对等体对指数分布的随机变量进行取样。他们等待时间流逝，由取样决定，并且具有最小样本的对等体赢得选举并提交区块。'
- en: Smart Contracts
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能合约
- en: Blockchain applications are segmented into a client, smart contract, and blockchain.
    The *client* is the frontend that a user, either human or machine, interacts with
    to sign and submit transactions. The submission goes to a designated node, or
    peer, which accepts the transactions and forwards it to the smart contract. The
    *smart contract* executes the transaction in concert with the blockchain. This
    interaction between the smart contract and blockchain incorporates an API that
    the smart contract uses to perform specific functions exposed by the blockchain
    (for example, read or insert).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链应用程序分为客户端、智能合约和区块链。*客户端*是用户（无论是人还是机器）与之交互以签署和提交交易的前端。提交的交易发送到指定的节点或对等节点，该节点接受交易并将其转发给智能合约。*智能合约*与区块链一起执行事务。智能合约与区块链之间的交互包括智能合约用于执行区块链公开的特定功能的API（例如，读取或插入）。
- en: A smart contract can’t actually execute many functions against the blockchain
    because the blockchain is an immutable ledger. A smart contract can add or read
    data, but updating data is really an add data function that changes the current
    state. A smart contract cannot delete data even though it may execute an API for
    deleting data. The deletion is a change in state. This deletion would cause a
    read to return no data, but the data is there.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块链是一个不可变的分类帐，智能合约实际上不能对区块链执行许多功能。智能合约可以添加或读取数据，但更新数据实际上是一个更改当前状态的添加数据功能。智能合约不能删除数据，即使它可能执行用于删除数据的API。删除是状态的更改。这种删除会导致读取返回无数据，但数据实际上是存在的。
- en: The data can be audited by using a special application called a *blockchain
    explorer*. This special program reads the immutable ledger at the lowest level,
    effectively crawling the data structure of the blocks and reading recorded data.
    A smart contract can do this too, but that would not be a typical use case.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以通过使用称为*区块链浏览器*的特殊应用进行审计。这个特殊程序在最低层次读取不可变分类帐，有效地遍历块的数据结构并读取记录的数据。智能合约也可以做到这一点，但这不是一个典型的用例。
- en: A smart contract is best used to read the current state, perform logic on the
    state, and update (add) the state. Remember, the blockchain ledger is an immutable
    linked list of recorded data. That data represents the state. So the blockchain
    is really a running ledger of state transitions, a journal of immutable recordings.
    This is extremely powerful. Clients of the smart contract typically do the application-level
    logic and present the user experience (UX). Clients not only act as the interface
    to the smart contract, but in many ways, they represent the application to the
    user.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 智能合约最好用于读取当前状态，在状态上执行逻辑，并更新（添加）状态。请记住，区块链分类帐是一系列记录数据的不可变链表。这些数据代表了状态。因此，区块链实际上是一个状态转换的运行分类帐，是不可变记录的日志。这是非常强大的。智能合约的客户端通常执行应用级逻辑并提供用户体验（UX）。客户端不仅充当智能合约的接口，而且在很多方面，它们代表用户的应用程序。
- en: The thing to remember about the smart contract is it really isn’t that smart.
    It sits between the client and the blockchain. This is actually a good thing,
    because you don’t want the smart contract working that hard.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 关于智能合约要记住的一件事是它并不是那么智能。它位于客户端和区块链之间。这实际上是件好事，因为你不希望智能合约工作得太辛苦。
- en: You don’t want to be making a lot of round trips between the client and ledger—for
    example, a thousand reads to populate a list. You want to tell the smart contract
    to read a thousand states and send them to your client. This executes a single
    call to the smart contract, an expensive resource, and the smart contract can
    potentially bulk-read on the ledger.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你不想在客户端和账本之间进行大量的往返——例如，读取一千次来填充列表。你希望告诉智能合约读取一千个状态并将它们发送到你的客户端。这执行了对智能合约的单个调用，这是一种昂贵的资源，而且智能合约可能会在账本上进行批量读取。
- en: The typical interface is asynchronous, so keep this in mind and use your callbacks
    effectively. Try to give the user the perception of a lot of work being performed,
    when in reality, the blockchain is a turtle, not a rabbit like the databases we
    grew up with. Used wisely, smart contracts are powerful instruments; they can
    work for you or against you, so think about how you are using them. As a smart
    contract developer, you always want to keep your client in mind and support them
    with the most efficient API, based on what we have discussed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 典型接口是异步的，所以请记住并有效地使用你的回调函数。试着给用户一种大量工作正在进行的感觉，而实际上，区块链是一只乌龟，而不是我们成长过程中熟悉的兔子式数据库。明智地使用，智能合约是强大的工具；它们可以为你工作，也可以反对你，所以要考虑你是如何使用它们的。作为智能合约开发者，你总是希望把客户放在首位，并根据我们所讨论的内容为他们提供最有效的
    API 支持。
- en: Blockchain Architecture
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链架构
- en: The architecture of a blockchain consists of a decentralized and distributed
    network of nodes. Each node hosts a copy of the immutable ledger. The immutable
    ledger is a cryptographically linked set of append-only blocks. The nodes execute
    transactions and consensus to add blocks to the ledger. Clients sign transactions
    and submit them to the nodes. Nodes forward the validated transactions to the
    smart contracts for execution. Executed transactions are ordered and placed into
    blocks. The blocks are appended to the blockchain. The core design of a blockchain
    consists of blocks, chains, and a network.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的架构由一个分散和分布式的节点网络组成。每个节点托管一个不可变账本的副本。不可变账本是一个密码链接的追加只读区块集合。节点执行交易和共识以将区块添加到账本中。客户端对交易进行签名并将其提交给节点。节点将经过验证的交易转发给智能合约进行执行。执行的交易被排序并放入区块中。这些区块被追加到区块链上。区块链的核心设计包括区块、链和网络。
- en: Nodes
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 节点
- en: Computers are called *nodes* because of the role they play in creating the distributed
    network. They can be virtual machines in the cloud that are hosted by physical
    servers. They can be laptops participating in distributed networks. They can be
    Internet of Things devices operating in decentralized industrial networks. They
    can even be smart light bulbs. *Node* is a general term representing an endpoint
    in a network. The network can be wired or wireless. Another name for a node is
    *peer*, as in peer-to-peer networks, which are designed for decentralized applications.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机被称为 *节点* 是因为它们在创建分布式网络中所扮演的角色。它们可以是由物理服务器托管的云中的虚拟机。它们可以是参与分布式网络的笔记本电脑。它们可以是在分散工业网络中运行的物联网设备。它们甚至可以是智能灯泡。
    *节点* 是一个表示网络中端点的通用术语。网络可以是有线的或无线的。节点的另一个名称是 *同伴*，就像点对点网络中的同伴一样，这些网络被设计用于分散应用程序。
- en: For the Hyperledger Fabric blockchain, you will encounter both terms. In Hyperledger
    Fabric, the term *peer* represents a computing node that executes the endorsement
    and commitment of transactions and hosts an immutable ledger. In Bitcoin, nodes
    are *miners*, and like Hyperledger Fabric peers, commit transactions to the ledger.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于超级账本 Fabric 区块链，你会遇到这两个术语。在超级账本 Fabric 中，术语 *节点* 代表执行交易的认可和提交的计算节点，并托管不可变账本。在比特币中，节点是
    *矿工*，像超级账本 Fabric 的节点一样，提交交易到账本。
- en: Blocks
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块
- en: '*Blocks* contain the records of submitted and committed transactions. Each
    block also contains a header, a timestamp, and the hash of the prior block. The
    first block, called the *genesis block*, contains additional information that
    describes the blockchain, like policies. If it’s in a permissioned blockchain,
    like Hyperledger Fabric, the genesis block will contain a list of member organizations
    and their certificates as well as policy information describing the number of
    organizations that must endorse transactions. It will also contain the identity
    of the orderer node responsible for ordering the transaction and creating the
    blocks that peers append to the blockchain.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*区块* 包含提交和确认交易的记录。每个区块还包含一个头部、一个时间戳和前一个区块的哈希值。第一个区块，称为 *创世区块*，包含描述区块链的其他信息，比如政策。如果它在像超级账本
    Fabric 这样的权限区块链中，创世区块将包含一个成员组织及其证书的列表，以及描述必须背书交易的组织数量的策略信息。它还将包含负责订购交易和创建同伴追加到区块链的区块的订购者节点的标识。'
- en: The block contains additional data used to link the blocks together and provide
    integrity constraints, preventing any ability to tamper with the data contained
    in the block. The blocks are linked together, and this linking of blocks is responsible
    for the term *blockchain*.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 区块包含用于链接区块并提供完整性约束的附加数据，防止对区块中包含的数据进行任何篡改。区块被链接在一起，区块的这种链接负责术语 *区块链*。
- en: Cryptography is used to create and maintain the blockchain data structure and
    linking. The block is tamper-proof because of the use of the cryptography.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 加密学被用于创建和维护区块链数据结构和链接。由于使用了加密学，区块是防篡改的。
- en: The blocks together represent the immutable ledger, and many refer to them as
    the blockchain *database*. Blocks are appended to the last block created. Over
    time, this appending process creates a large data structure that must be managed.
    Other data structures are in use, like graphs, that are not linear and create
    network-like data structures. Data in a transaction is not always stored in the
    block and may be hosted in a traditional data store such as files or existing
    database technology.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 区块一起代表不可变账本，并且许多人将它们称为区块链*数据库*。区块附加到上一个创建的块上。随着时间的推移，这个附加过程会创建一个大型的数据结构，必须加以管理。其他数据结构也在使用中，比如图，它们不是线性的，并且创建类似网络的数据结构。交易中的数据并不总是存储在区块中，可能托管在传统数据存储中，比如文件或现有数据库技术。
- en: Chains
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 链
- en: '*Chains* are a linked list of blocks. They are immutable and append-only. A
    blockchain architecture may have one or more chains. Chains can grow to an infinite
    length, or number of blocks. This can be prevented or managed by pruning, but
    pruning has side effects that reduce the trust in the blockchain network and remove
    the ability to explore and audit the entire chain. This can reduce the integrity
    of the chain.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*链*是一个区块链的链表。它们是不可变的且仅追加的。区块链架构可能具有一个或多个链。链可以无限增长，或者说是区块数量。这可以通过修剪来预防或管理，但修剪会产生降低区块链网络信任的副作用，并且会移除探索和审计整个链的能力。这会降低链的完整性。'
- en: Channels
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通道
- en: Each blockchain in Hyperledger Fabric is called a *channel*, which is a consortium
    of organizations collaborating to execute transactions that are related to a specific
    purpose. Organizations in Hyperledger Fabric may belong to multiple channels.
    Bitcoin and Ethereum use a single main blockchain and multiple blockchains for
    test purposes.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 中的每个区块链被称为*通道*，这是一组组织合作执行与特定目的相关的交易的财团。 Hyperledger Fabric
    中的组织可能属于多个通道。比特币和以太坊使用单个主区块链和多个用于测试目的的区块链。
- en: Supporting Technology and Concepts
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持技术和概念
- en: Beyond the components (decentralized network, cryptography, immutable ledger,
    consensus, and smart contracts), you need to understand, or at least be aware
    of, many concepts and supporting technologies in order to develop a solid foundation
    for understanding blockchain. Let’s introduce each of these concepts and supporting
    technologies so you can later further your investigation and advance your knowledge
    over the course of your blockchain journey.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 超越组件（分散网络、加密学、不可变账本、共识和智能合约），你需要理解，或至少意识到，许多概念和支持技术，以便为理解区块链打下坚实基础。让我们介绍每个概念和支持技术，这样你就可以在区块链之旅中进一步探索和增进知识。
- en: DLT
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DLT
- en: '*Distributed ledger technology* is the parent of blockchain. With DLT, you
    use only digital signatures and do not use consensus, because you want scale and
    high throughput. It is consensus that creates the high latency and limits on scale
    in blockchain. This is why you see DLTs like Corda so popular in the financial
    and insurance sectors. When you have semi-trust among participants, as in insurance
    and banking, you can enforce remediation by relying on digital signatures; you
    can use DLT. But when you need a trust mechanism to enforce integrity among participants,
    as in supply chains, you want blockchain because the consensus mechanism provides
    this level of assurance and trust.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*分布式账本技术*是区块链的前身。使用 DLT，你只使用数字签名，不使用共识，因为你希望具有规模和高吞吐量。正是共识导致了区块链的高延迟和规模限制。这就是为什么你会看到像
    Corda 这样的 DLT 在金融和保险行业如此受欢迎的原因。当参与者之间存在半信任时，如保险和银行业，你可以通过依赖数字签名来强制实施补救措施；你可以使用
    DLT。但是当你需要信任机制来强制参与者之间的完整性，如供应链时，你会选择区块链，因为共识机制提供了这种保证和信任水平。'
- en: Decentralization
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 去中心化
- en: Blockchain is a *decentralized* technology. The ledger is hosted by a network
    of peer-to-peer nodes that form the decentralized network. The removal of a central
    control point is what creates the concept of decentralization. It is the ability
    to delegate control to all nodes that collaborate, to execute the goal of the
    network, that delivers power to blockchain. This delegated control and collaboration
    provides the means for performing consensus without a central authority influencing
    the outcome.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种*去中心化*技术。账本由一组点对点节点托管，形成去中心化网络。去中心化的概念是通过去除中央控制点而产生的。将控制权委托给所有协作节点执行网络目标的能力，赋予了区块链力量。这种委托控制和协作提供了在没有中央权威影响结果的情况下执行共识的手段。
- en: Peer-to-peer
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 点对点
- en: Blockchain networks are *peer-to-peer networks*. The network is designed to
    be decentralized. No central control exists in a decentralized network, and each
    peer (or node) is connected to one or more peers (or nodes) in the network. The
    peers cooperate to send and forward messages in the network. Using peer-friendly
    protocols like Gossip allow the fast replication of messages among numerous peers
    in a network. This allows millions of peers to receive messages within seconds.
    A peer-to-peer decentralized network facilitates the ability to maintain copies
    of a blockchain ledger.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链网络是*点对点网络*。网络设计为去中心化。在去中心化网络中不存在中央控制，并且每个节点与网络中的一个或多个节点相连接。节点合作在网络中发送和转发消息。使用像
    Gossip 这样的对等友好协议允许消息在网络中快速复制。这使得数以百万计的节点在几秒钟内接收消息成为可能。点对点的去中心化网络有助于保持区块链账本的副本。
- en: Immutability
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不可变性
- en: The concept of *immutability*, which means not changeable, or tamper-proof,
    is critical to blockchain, because it is the primary attribute of the ledger.
    Trust is created from the concept and implementation of immutability. Knowing
    that time-ordered transactions are immutable allows parties to create trust and
    finality.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*不变性*的概念，即不可改变或防篡改，对于区块链至关重要，因为这是分类帐的主要属性。信任是从不变性的概念和实施中创建的。知道按时间顺序排列的交易是不可变的，允许各方建立信任和最终性。'
- en: Identity
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份
- en: Blockchain and smart contracts need identities to function. *Identities* represent
    the entities (humans and machines) that participate in executing smart contract
    transactions and blockchain administration. For enterprise blockchains, organizations
    that are members enroll identities to represent them and perform transactions
    on behalf of the organization. Identities are assigned private and public keys
    for digital signing and encryption of data. The digital signatures authenticate
    the identities and authorize them to perform transactions.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链和智能合约需要身份来运行。*身份*代表参与执行智能合约交易和区块链管理的实体（人类和机器）。对于企业区块链，作为成员的组织登记身份来代表它们并代表组织执行交易。身份被分配私钥和公钥用于数字签名和数据加密。数字签名验证身份并授权其执行交易。
- en: Accounts
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账户
- en: The concept of accounts in blockchain enables us to perform a variety of roles
    and to execute a multitude of functions for a single identity. An *account* is
    a record of attributes that define specific rights for access and authorization
    to perform transactions on assets that belong to or are managed by the account.
    Roles are created and assigned to an account. The role defines a set of permissions
    mapped to an account. Identities are granted a role, which allows the identity
    to perform actions against the account permitted by a role. This means we do not
    need to create and manage an identity for every account permissioned to execute
    transactions on a blockchain. Accounts allow us to partition the roles and permissions
    available to one or more identities. Accounts can hold various forms of state
    and transact as a trusted entity on the blockchain.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的账户概念使我们能够为单个身份执行各种角色并执行多种功能。*账户*是定义特定访问权限和授权以执行属于或由账户管理的资产上的交易的属性记录。角色被创建并分配给一个账户。角色定义了映射到账户的一组权限。身份被授予一个角色，该角色允许身份执行角色允许的账户上的操作。这意味着我们不需要为每个被授予权限在区块链上执行交易的账户创建和管理一个身份。账户允许我们对一个或多个身份可用的角色和权限进行分区。账户可以保存各种形式的状态，并作为区块链上的可信实体进行交易。
- en: SDK
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SDK
- en: A *software development kit* (*SDK*) is used to integrate or develop software
    for a blockchain. Most developers are familiar with this component because many
    applications provide an SDK to develop software for their application. Blockchain
    is no different; most blockchain platforms provide one or more SDKs, each targeting
    a programming language and specific component of the platform. Several SDKs are
    available for Hyperledger Fabric, including JavaScript, Java, and Go, for developing
    Fabric blockchain applications.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件开发工具包* (*SDK*) 用于集成或开发区块链软件。大多数开发人员都熟悉这个组件，因为许多应用程序提供了一个 SDK 来开发其应用程序的软件。区块链也不例外；大多数区块链平台都提供一个或多个
    SDK，每个都针对特定编程语言和平台的特定组件。Hyperledger Fabric 有多个可用的 SDK，包括 JavaScript、Java 和 Go，用于开发
    Fabric 区块链应用程序。'
- en: API
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API
- en: An *application programming interface* (*API*) is a software contract between
    the application and client, expressed as a collection of methods or functions.
    The API may be implemented with an SDK or as a RESTful interface. The API defines
    the available functions you can execute. Some APIs have hundreds of methods or
    functions you can call to execute a variety of transactions. Others may have fewer
    than a dozen and target a very narrow and specific set of application features.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*应用程序编程接口* (*API*) 是应用程序和客户端之间的软件合约，表示为一组方法或函数。API 可以通过 SDK 或作为 RESTful 接口来实现。API
    定义了可执行的可用函数。一些 API 有数百种方法或函数可供调用，以执行各种交易。其他可能只有少于十几个，并且针对非常狭窄和特定的应用程序功能集。'
- en: The API is the intermediary interface between the client and the application.
    It must be managed well and support the continued evolution of the application’s
    life cycle. Versioning is often used to control and provide ease of migration
    to new or deprecated functionality.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: API 是客户端和应用程序之间的中间接口。它必须被良好管理，并支持应用程序生命周期的持续演进。版本控制通常用于控制和提供方便的迁移至新功能或弃用功能。
- en: Blockchain is an application and has an API. It is the API that smart contracts
    embed and expose to clients. The embedded API and exposed API are not the same
    intermediary. The *exposed API* is meant for the clients of the blockchain’s smart
    contract facility, while the *embedded API* is an internal contract between the
    smart contract facility and the core blockchain software responsible for operating
    the node, or peer. The smart contract facility may or may not be hosted by the
    node, or peer.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个应用程序，并拥有一个 API。智能合约嵌入和向客户端公开的是 API。嵌入式 API 和公开的 API 并不是同一个中间接口。*公开的 API*
    用于区块链智能合约设施的客户端，而 *嵌入的 API* 是智能合约设施与负责操作节点或对等体的核心区块链软件之间的内部合约。智能合约设施可能由节点或对等体托管，也可能不是。
- en: Transactions
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交易
- en: Clients submit *transactions*. These transactions are processed by the nodes,
    or peers, and, if accepted, committed to a block that is appended to the chain
    of blocks (or blockchain). Transactions can be anything, from a data update about
    an asset, or the payment for a service, to the purchase of a product. They may
    be simply the recording of information representing a known state or the execution
    of an action. Transactions can originate for human clients or machine clients.
    Transactions in blockchain are always time-stamped and ordered. They are immutable
    and cannot be tampered with. Transactions are signed with a private key when submitted
    for processing and may be authenticated depending on the blockchain permission
    for transaction submission.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 客户提交*交易*。这些交易由节点或对等方处理，如果被接受，就会被提交到一个区块中，然后追加到区块链中的区块链。交易可以是任何内容，可以是关于资产的数据更新，或者是支付服务费用，也可以是购买产品。它们可能只是记录代表已知状态的信息或执行操作。交易可以源自人类客户或机器客户。区块链中的交易始终带有时间戳并且有序。它们是不可变的，不能被篡改的。当提交交易进行处理时，交易会使用私钥签名，并根据区块链对交易提交的权限进行身份验证。
- en: Incentives
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 激励
- en: Incentives are rarely discussed in blockchain, and this hampers the success
    of many blockchain projects. A strong *incentive* is needed to create the behavior
    required to succeed in blockchain. The miners of Bitcoin know what incentive is
    because it is what drives them to mine. As a result, they execute transactions
    for clients and maintain the immutable and trusted blockchain that facilitates
    the exchange of value that clients seek to perform for a small fee. Their incentive
    is a reward if they can solve a cryptographic puzzle. The reward is a sizable
    monetary grant represented in Bitcoin.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 激励因素很少在区块链中讨论，这妨碍了许多区块链项目的成功。在区块链中，需要一个强大的*激励*来创造成功所需的行为。比特币的矿工知道什么是激励，因为这是驱使他们进行挖矿的原因。因此，他们为客户执行交易并维护不可变的、可信的区块链，从而为客户提供所需的价值交换，而只需支付少量费用。他们的激励是如果能解决密码难题就会得到奖励。奖励是用比特币表示的一笔可观的货币补助。
- en: For blockchains in the enterprise, there has been little or no incentive along
    the lines of Bitcoin or Ethereum. The absence of incentive has been a major reason
    for so many projects failing to succeed. Without a strong incentive, external
    partners have little reason to become enthusiastic about changing their mature
    business processes. They see only added cost and risk. The financial modeling,
    if done, is not enough to convince them this is a better and more efficient way
    to execute the business processes performed.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于企业中的区块链，很少或没有类似比特币或以太坊的激励。缺乏激励是许多项目未能成功的主要原因。没有强大的激励，外部合作伙伴就没有理由对改变他们成熟的业务流程感到兴奋。他们只看到增加的成本和风险。如果有的话，财务建模也不足以让他们相信这是执行业务流程的更好、更有效的方式。
- en: Privacy
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 隐私
- en: Keeping data and the identity of the participants of a transaction private is
    a major concern in blockchain. The ability to disclose selectively and operate
    on data that cannot be exposed is critical to blockchain’s advancement. When several
    parties need to transact and exchange information, they should adhere to *data
    privacy*. Likewise, when specific parties want required data to execute their
    portion of a complex transaction, that data must be kept private.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 保持数据和交易参与者的身份私密是区块链中的一个主要关注点。有选择地披露并操作不能暴露的数据对区块链的发展至关重要。当多个参与方需要进行交易和交换信息时，他们应该遵守*数据隐私*。同样，当特定方需要所需数据来执行他们在复杂交易中的部分时，该数据必须保持私密。
- en: One weakness in blockchain until recently has been the inability to mix varying
    levels of privacy within complex transactions. Hyperledger Fabric v2 supports
    the ability to perform transactions with private data. Within Hyperledger, work
    is being performed on zero-knowledge proofs (ZKPs). This cryptography facilitates
    the ability to prove facts without disclosing the source material used to determine
    a fact. Think of verifying an age without presenting the documentation that proves
    the age. This is powerful because it will allow transactions that protect the
    privacy of parties to the transaction. Because blockchain is a linked ledger and
    keys may represent parties or addresses, it is possible to build profiles that
    reveal enough information that could reduce the privacy a party thinks they possess.
    This is true with Bitcoin and Ethereum.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 直到最近，区块链的一个弱点是无法在复杂交易中混合不同级别的隐私。Hyperledger Fabric v2支持执行带有私有数据的交易的能力。在Hyperledger内部，正在进行零知识证明（ZKPs）的工作。这种密码学有助于在不披露用于确定事实的源材料的情况下证明事实。想象一下验证年龄而不提供证明年龄的文件。这是强大的，因为它将允许保护交易各方隐私的交易。因为区块链是一个链接账本，密钥可以代表各方或地址，所以可以建立揭示足够信息的配置文件，这可能会减少一方认为自己拥有的隐私。这在比特币和以太坊中是真实存在的。
- en: State
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 状态
- en: Blockchain has history, but it is the *state* we most often want. Being an immutable
    ledger of state transitions over time is what blockchain is built for. But when
    we put blockchain to use, we find it is the current state that manifests its power.
    We believe in the state because we know it was hard-earned, going through a gauntlet
    of validation and cryptographic proving. We enjoy the knowledge that it is tamper-proof,
    which adds even more value to the state.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链有历史，但我们最常想要的是*状态*。作为一个不可变的状态转换账本，区块链是为此而构建的。但当我们将区块链投入使用时，我们发现它的力量体现在当前状态上。我们相信这个状态，因为我们知道它是辛苦赚来的，经历了一系列验证和密码学证明的考验。我们享受这种防篡改的知识，这给状态增添了更多的价值。
- en: But the state is not history. Blockchain has the history, but we find that accessing
    that history is expensive and not something the blockchain is really all that
    good at. That is at scale. Because at scale, it is all about capturing state,
    reaching consensus, and committing it. We have learned to keep the state fresh,
    cached, and to put the history in a traditional database. If we need to prove
    the history, we can walk the ledger and prove the history. But history is history.
    State is what matters. You make your decision based on state. State can be a rolling
    record—for example, sales to date. You don’t need to run those reports to get
    state.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 但是状态并非历史。区块链拥有历史，但我们发现访问历史昂贵，并不是区块链真正擅长的事情。尤其是在规模化方面。因为在规模化的情况下，一切都集中于捕获状态、达成共识并提交它。我们已经学会保持状态的新鲜性、缓存，并把历史存储在传统数据库中。如果我们需要证明历史，我们可以遍历分类帐并证明历史。但历史毕竟是历史。状态才是重要的。你根据状态做出决策，状态可以是一个滚动记录，比如到目前为止的销售额。你不需要运行报告来获取状态。
- en: This is a sea change and a huge boost in productivity. Blockchain will change
    the world because the world will know the current state, now, not tomorrow, or
    at the end of the week or quarter. The ability to maintain accurate and trustful
    state is a power tool to be leveraged and exploited by smart contract developers
    to empower decision-makers, be they human or machine.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个巨大的变革和生产力的巨大提升。区块链将改变世界，因为世界将了解当前状态，现在，而不是明天，或者本周或季度末。保持准确和可信的状态的能力是一个强大的工具，由智能合约开发者利用，赋予决策者（无论是人还是机器）权力。
- en: Turing complete
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Turing complete
- en: The addition of the concept of *Turing complete* to blockchain was a turning
    point for blockchain’s separation from Bitcoin. It made blockchain a smart transactional
    engine for the 21st century. Smart contracts need to be Turing complete, and deterministic
    to reach finality. Being deterministic allows them to be decentralized and scaled.
    Turing complete and deterministic capabilities enable consensus mechanisms to
    perform the function of intermediaries, delivering a means to reach agreement
    on state and finality.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中加入*Turing complete*概念是区块链与比特币分道扬镳的转折点。这使得区块链成为了21世纪智能交易引擎的核心。智能合约需要是Turing
    complete和确定性的，以达到最终性。确定性使它们能够去中心化并实现规模化。Turing complete和确定性能力使共识机制能够执行中介功能，提供达成状态和最终性协议的方式。
- en: Gas
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gas
- en: Ethereum employs the concept of *gas*. This means you pay to compute, and the
    fees to compute are calculated by the instructions you execute. This concept is
    not new; mainframes charged users to compute, and calculated fees based on CPU
    time. In the world of the web, it is an explicit cost. We all pay fees to compute,
    but we cannot quantify them because of the layers of access and resources used.
    The closest we can get to the gas model is the Amazon Web Services (AWS) cloud
    computing service, which charges by the resource and time of use. AWS is much
    coarser than Ethereum’s granular cost model.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊采用了 *gas* 的概念。这意味着你需要支付计算费用，计算费用是根据你执行的指令来计算的。这个概念并不新鲜；主机计费用户的计算费用，并根据 CPU
    时间计算费用。在网络世界中，这是一种明确的成本。我们都支付计算费用，但由于访问层次和使用的资源，我们无法对其进行量化。我们能接近 gas 模型的最接近例子是亚马逊网络服务（AWS）云计算服务，其按资源和使用时间收费。AWS比以太坊的细粒度成本模型粗略得多。
- en: The volatility of Ether and all cryptocurrencies is problematic for trying to
    budget and launch applications on the Ethereum platform. With AWS, the currency
    is dollars, so you have a reasonable expectation of your long-term costs to launch
    and budget the resources required to operate your application. Your costs effectively
    do not vary from day to day, let alone minute to minute, as on Ethereum.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以太和所有加密货币的波动性对于试图在以太坊平台上预算和启动应用程序是有问题的。在AWS上，货币是美元，所以你对于启动和预算所需资源的长期成本有一个合理的期望。你的成本实际上从一天到另一天甚至从一分钟到另一分钟都不会变化，就像在以太坊上一样。
- en: In addition to the gas cost, you are using a shared resource and are thus competing
    directly with others who want to execute their application and will pay more for
    the opportunity. This can lead to a situation where you may never get your transactions
    executed or get them executed within a time period required to achieve your goal.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 gas 成本之外，你还在使用共享资源，因此直接与其他希望执行其应用程序并愿意支付更高费用的人竞争。这可能导致你永远无法执行你的交易，或者在达到目标所需的时间段内执行它们。
- en: Tokens
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代币
- en: Most will equate tokens with cryptocurrency, but they are evolving and will
    continue to evolve as they move further and further from the Bitcoin and Altcoin
    communities. A *token* is a digital voucher that can be exchanged. Tokens can
    be classified into types.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人会将代币等同于加密货币，但它们正在演变，并将随着它们与比特币和另类币社区越来越远而不断演变。*代币* 是一种可以交换的数字凭证。代币可以分类。
- en: The first is *cryptocurrency*, the first blockchain token. Note that cryptographic
    tokens have been around a long time and have been used for various purposes like
    identity and metadata. The newest token, a derivative of cryptocurrency, is called
    a *stable coin*. It is called a stable coin because its token value is designed
    to equal the token value of another token, currency, or asset that does not exhibit
    large value fluctuations. The term *pegged* represents this value relationship
    between the stable coin and the other token, currency, or asset, which the stable
    token is designed to mirror in value. For example, stable coins pegged to the
    US dollar are valued at one dollar plus or minus a very small change in value
    on the order of hundredths or thousandths of a dollar at any point in time. Stable
    coins were promoted by Goldman Sachs and Circle to create stability in cryptocurrency
    and offer a means for established companies to explore cryptocurrency.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是*加密货币*，也是第一个区块链代币。请注意，加密代币已经存在很长时间，并且已被用于各种用途，如身份和元数据。最新的代币，是加密货币的衍生品，被称为*稳定币*。它被称为稳定币，因为其代币价值被设计为等于另一个代币、货币或资产的代币价值，而后者不会出现大幅波动。术语*锚定*表示稳定币与其他代币、货币或资产之间的这种价值关系，稳定币被设计为与之价值相映。例如，与美元挂钩的稳定币在任何时候都被赋值为一美元加减很小的价值变化，大约是百分之一或千分之一美元。稳定币是由高盛和Circle推广的，旨在为加密货币创造稳定，并为已建立的公司探索加密货币提供一种手段。
- en: Crypto tokens, in the world of blockchain, are classified as cryptocurrency,
    security tokens, and utility tokens. You will find a variety of other names, but
    you need to focus on security and utility tokens.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链世界中，加密代币被分类为加密货币、安全代币和实用代币。你会发现各种其他名称，但你需要专注于安全和实用代币。
- en: '*Security tokens* are sold to investors through various means, including initial
    coin offerings (ICOs) and security token offerings (STOs). Security tokens are
    considered securities, which are regulated by the US Securities and Exchange Commission
    (SEC). Therefore, you cannot sell (issue) them without registering with the SEC.
    They are treated no different from stock.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*安全代币*通过各种方式向投资者出售，包括首次代币发行（ICO）和安全代币发行（STO）。安全代币被视为证券，受美国证券交易委员会（SEC）监管。因此，未经SEC注册，你不能出售（发行）它们。它们在法律上与股票无异。'
- en: '*Utility tokens* are like Ethereum’s gas. These are tokens you can sell, but
    have no air of investment surrounding them. The blockchain uses utility tokens
    as an internal means of operation. Creating and trying to sell utility tokens
    is risky. You should talk to legal professionals and seek a no-action letter from
    the SEC. You do this by submitting a detailed plan that explains how you will
    use the utility tokens. Some companies have received a no-action letter from the
    SEC and serve as a model for what the SEC considers utility tokens. Utility tokens
    do not appreciate and may fall in value, but no reward is associated with their
    purchase. They typically equal one dollar and can be redeemed for one dollar.
    An escrow account holds the funds exchanged for the utility token.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*实用令牌*类似于以太坊的气体。这些是您可以出售的代币，但没有与之相关的投资氛围。区块链使用实用令牌作为内部运营手段。创建和尝试出售实用令牌存在风险。您应该与法律专业人员进行交谈，并寻求SEC的无行动信函。您可以通过提交一份详细的计划来实现这一点，该计划解释了您将如何使用实用令牌。一些公司已经收到了SEC的无行动信函，并作为SEC认为实用令牌的典范。实用令牌不会升值，可能会贬值，但与其购买无关联的回报。它们通常等于一美元，并且可以兑换成一美元。托管账户保存用于交换实用令牌的资金。'
- en: Tokens are an exciting opportunity for innovation in smart contract development
    and blockchain use. They can be smart, hold value, and represent assets and rights.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 代币是智能合约开发和区块链使用中创新的激动人心的机会。它们可以是智能的，具有价值，并代表资产和权利。
- en: On-chain
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在链上
- en: When we execute work on the blockchain, this is referred to as *on-chain*. Or,
    when we store data on the blockchain, it may be referred to as *on-chain data*.
    Be judicious when deciding what data you store on-chain because the blockchain
    as it exists today is not suitable as a data warehouse. You should store transaction
    data off-chain (explained next). When you want to rapidly execute large numbers
    of transactions, you should investigate executing the transactions off-chain.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们 在区块链上执行工作时，这被称为*链上*。或者，当我们在区块链上存储数据时，它可能被称为*链上数据*。在决定在链上存储什么数据时要慎重，因为今天的区块链不适合作为数据仓库。你应该将交易数据存储在链下（接下来解释）。当你想要快速执行大量交易时，你应该调查在链下执行交易。
- en: Off-chain
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离链
- en: The ability to move work off the blockchain and perform it external to the blockchain
    is known as *off-chain*. Once the off-chain work is performed, the result is moved
    back on-chain to be committed via consensus to the blockchain. This is reasonable
    if you want to execute 10,000 rapid transactions, roll them up into one transaction,
    and then move that one transaction back on-chain to be subjected to consensus
    and committed to the blockchain. The off-chain transactions can be recorded on
    what is known as a *side-chain* and maybe via a DLT for fast execution. The Merkle
    tree of the transactions (shown previously in [Figure 1-1](#types_of_networks))
    is placed into a single transaction and placed on-chain for consensus and commitment
    to the primary blockchain.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 将工作从区块链上移走并在区块链之外执行的能力称为*离链*。一旦离链工作完成，结果就会被移回到链上，通过共识提交到区块链。如果你想要执行10,000次快速交易，将它们汇总成一次交易，然后将那一次交易移回链上，提交给共识并提交到区块链，这是合理的。离链交易可以记录在所谓的*侧链*上，也许通过分布式账本技术（DLT）实现快速执行。交易的默克尔树（在[图1-1](#types_of_networks)中
    previously展示）被放入一个交易中，并放置在链上以供共识和提交到主区块链。
- en: Scalability
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可扩展性
- en: '*Scalability* is one of blockchain’s biggest problems. Blockchain employs consensus,
    and this creates latency in the processing of transactions. Reaching agreement,
    which is what consensus is all about, takes time. Time is what you need to eliminate
    if you want to scale. You cannot reach consensus en masse. A lot of research and
    design work is going into solving this problem.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展性是区块链最大的问题之一。区块链采用共识，这使得交易处理出现延迟。达成一致，这是共识的核心，需要时间。如果你想实现扩展，你需要消除时间。你不能大规模达成共识。大量的研究和工作正在进行以解决这一问题。
- en: The finance and insurance sectors have decided to use only DLT, which does not
    use consensus, as discussed earlier. They can do this because their sectors have
    an element of trust built in due to being highly regulated industries. For sectors
    like supply chain, trust needs to exist between parties. This trust has been accomplished
    by intermediaries. Employing intermediaries carries a significant cost, both in
    dollars and efficiency. The promise and attraction of blockchain is to eliminate
    or greatly reduce the need for intermediaries by employing consensus. Scalability
    is an area of concern that all blockchain projects must plan for in their application
    design.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 金融和保险部门决定只使用分布式账本技术（DLT），如前所述，这种技术不使用共识。它们可以这样做，因为它们的部门由于受到高度监管而具有信任的要素。对于像供应链这样的部门，需要双方之间存在信任。这种信任是通过中介实现的。使用中介带来了显著的成本，无论是以美元计价还是效率方面。区块链的承诺和吸引力在于，通过使用共识，消除或大幅减少对中介的需求。可扩展性是所有区块链项目在应用设计中必须规划的关注领域。
- en: Cryptocurrency
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加密货币
- en: Bitcoin is a *cryptocurrency*, or digital asset, designed to be used as money.
    Hundreds of cryptocurrencies exist. You can think of cryptocurrency as digital
    cash. That was the inspiration behind its design, but that design has failed to
    manifest. Instead, it has become an asset like gold, with a devout following and
    marketplace for daily trading as the price fluctuates.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币是一种*加密货币*，或数字资产，设计用作货币。存在数百种加密货币。你可以将加密货币视为数字现金。这是其设计的灵感，但这种设计未能实现。相反，它已经成为一种像黄金一样的资产，有着虔诚的追随者和每天交易的市集，价格波动。
- en: Few vendors accept cryptocurrency because of its volatility. Fiat money, the
    currency issued by central banks like the Federal Reserve, is stable for the most
    part. It, too, could experience a wide variance but is not volatile like cryptocurrency.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有供应商接受加密货币，因为它具有波动性。法定货币，如美联储发行的中央银行货币，在大部分时间里都是稳定的。它也可能经历大的波动，但不像加密货币那样具有波动性。
- en: Most use cryptocurrency as a high-risk long-term investment, hoping it will
    appreciate, or as a trading vehicle trying to capitalize on the volatility. Central
    banks are now looking at moving into the issuance of cryptocurrency and adopting
    the term *digital cash* because it has many benefits for cross-border and trade
    finance payments.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人将加密货币视为高风险的长期投资，希望其升值，或者作为交易工具，试图利用其波动性。中央银行现在正在考虑转向发行加密货币，并采用术语*数字现金*，因为它对跨境和贸易融资支付有许多好处。
- en: Cryptocurrency is supported by blockchain technology and DLT. By using cryptocurrency
    and blockchain, central banks and governments will be able to extend and control
    the movement and use of cryptocurrency, which they cannot do with cash.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币得到区块链技术和分布式账本的支持。通过使用加密货币和区块链，中央银行和政府将能够扩展和控制加密货币的流动和使用，而他们无法控制现金。
- en: Enclaves
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 隔离区
- en: When you need to sign a transaction, you must use your private key. Anytime
    you access your private key, you are open to attack and events that may destroy,
    corrupt, or steal your private key. If something happens to your private key,
    anything that requires it for access is lost. There may be no way for you to recover
    your private key, and thus the asset or access granted is lost forever.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当您需要签署交易时，必须使用您的私钥。每当您访问您的私钥时，您就会面临攻击和可能会破坏、损坏或窃取您的私钥的事件。如果您的私钥出现问题，那么任何需要它进行访问的内容都将丢失。您可能无法恢复您的私钥，因此资产或授权的访问将永远丢失。
- en: 'You store your keys and anything else digital in an *enclave*, which you use
    to perform the signing of transactions for you. Enclaves come in two forms: hardware
    and software. They are like private vaults that allow no entry without a secret
    password or elaborate ritual. Using an enclave prevents the key from being exposed,
    thus protecting and safeguarding it. Enclaves can perform their own transactions
    too, so they can be used to execute routines you want to keep secret.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把你的密钥和任何其他数字资产存储在一个**隔离区**中，用来代表你执行交易签名。隔离区有硬件和软件两种形式。它们就像私人保险库，没有秘密密码或复杂仪式就无法进入。使用隔离区可以防止密钥暴露，从而保护和保障它。隔离区也可以执行它们自己的交易，因此它们可以用来执行你想保密的例行程序。
- en: J.P. Morgan’s Quorum blockchain, a modified clone of Ethereum, uses an enclave
    to perform its cryptographic functions, providing a level of security warranted
    by a regulated financial institution. The Hyperledger Sawtooth blockchain uses
    Intel’s Software Guard Extensions (SGX), which is a hardware enclave. Sawtooth
    uses the enclave for executing a secure version of its PoET consensus algorithm.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 摩根大通的 Quorum 区块链，一种修改过的以太坊克隆版本，使用一个隔离区来执行其密码功能，提供了一个由监管金融机构保证的安全级别。Hyperledger
    Sawtooth 区块链使用英特尔的软件保护扩展（SGX），这是一种硬件隔离区。Sawtooth 使用隔离区来执行其 PoET 共识算法的安全版本。
- en: Oracles
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 神谕
- en: When a blockchain needs external data or verification of internally submitted
    or generated data, it reaches out to an *oracle*. This is an API, interface, or
    website that can be scraped for information.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当区块链需要外部数据或验证内部提交或生成的数据时，它会访问一个**神谕**。这是一个可以获取信息的 API、接口或网站。
- en: A smart contract that is a betting application, gold futures application, or
    loan application, for example, needs to know external information. The betting
    application needs to know who won the game last night, so it scrapes the *USA
    Today* Sports page or a paid site that offers sports scores for the outcome of
    the game. The gold futures application accesses the *Wall Street Journal* or a
    paid brokerage site for the current price of gold. The loan application accesses
    a site publishing current interest rates.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一个智能合约，比如一个赌博应用、黄金期货应用或贷款应用，需要知道外部信息。赌博应用需要知道昨晚谁赢了比赛，因此它会从 *USA Today* 体育页面或提供体育比分结果的付费网站获取结果。黄金期货应用访问
    *华尔街日报* 或付费经纪网站获取当前黄金价格。贷款应用访问发布当前利率的网站。
- en: Oracles can also be other smart contracts. The idea behind the Oracle is that
    it is an external source of valid, trusted information.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 神谕也可以是其他智能合约。神谕背后的理念是它是一个外部的、可信的信息来源。
- en: DApps
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DApps
- en: '*Decentralized applications*, or *DApps*, are smart contract–based applications
    that seek to provide the same type of applications found on the web, from games
    to financial applications. DApps require fees to operate, unlike web applications.
    While many DApps exist, few have reached great success, except for a few used
    to trade virtual goods. The most popular are gambling DApps, which are not allowed
    in the United States. DApps suffer because of the UX and fees required to operate
    them.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '*去中心化应用*，或*DApps*，是基于智能合约的应用程序，旨在提供与网络上发现的应用程序相同类型的应用，从游戏到金融应用。与网络应用不同，DApps需要手续费才能运行。虽然存在许多DApps，但除了用于交易虚拟商品的几个之外，很少有取得巨大成功的。最受欢迎的是赌博DApps，在美国是不允许的。DApps由于用户体验和运行所需的费用而遭受影响。'
- en: DApps have not entered the enterprise space but may begin to emerge and transform
    as enterprises adopt blockchain and as a general-purpose hybrid blockchain is
    launched and goes viral. A hybrid blockchain spans the enterprise and public space
    and is architected along a federated design pattern. None exist today.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: DApps尚未进入企业领域，但随着企业采用区块链和普遍采用的混合区块链的推出和传播，它们可能开始出现并发生转变。混合区块链跨越企业和公共空间，并且按照联邦设计模式进行架构设计。目前还没有这样的区块链存在。
- en: Virtual Machine
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 虚拟机
- en: In blockchain, when we talk about a *virtual machine* (*VM*), we are talking
    about smart contract engines. The first blockchain virtual machine was the Ethereum
    Virtual Machine (EVM), which established Blockchain 2.0\. Since then, it has been
    cloned, extended, and enhanced by other blockchains. The VM executes the smart
    contract.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，当我们谈论*虚拟机*（*VM*）时，我们谈论的是智能合约引擎。第一个区块链虚拟机是以太坊虚拟机（EVM），它建立了区块链2.0。从那时起，它已被其他区块链克隆、扩展和增强。虚拟机执行智能合约。
- en: Fork
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分叉
- en: When a blockchain splits for any reason, it creates a *fork*, which is a diverging
    chain of blocks, thus creating two versions of the blockchain. This can be seen
    as a negative or positive event. If all participants agree to the fork and it
    is managed, then it is positive. This can happen when an update is needed, a severe
    bug is found in the blockchain software, or a corrupting event has taken place
    and correction is needed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当区块链因任何原因分割时，就会产生一个*分叉*，这是一个分叉的区块链，从而创建了两个版本的区块链。这可以被视为一个负面或正面的事件。如果所有参与者都同意分叉并进行管理，那么它就是积极的。这可能发生在需要更新、在区块链软件中找到严重的错误或发生了破坏性事件并需要进行纠正时。
- en: Governance
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 治理
- en: How you manage and control a blockchain is determined by the *governance model*
    or function. Governance is important for the operation of the blockchain, and
    without it, a blockchain will not last long. It needs governance to manage the
    life cycle, which includes upgrades, failures, participant rules, and operational
    constraints.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如何管理和控制区块链由*治理模型*或功能决定。治理对于区块链的运作非常重要，没有治理，区块链将无法长久存在。它需要治理来管理生命周期，包括升级、故障、参与者规则和运营约束。
- en: Genesis
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创世
- en: The first block in a ledger is called the *genesis block*. This special block
    marks the beginning of the blockchain. It will contain additional data that only
    the genesis block requires, like metadata describing specific characteristics
    and attributes about the ledger.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 账本中的第一个区块称为*创世区块*。这个特殊的区块标志着区块链的开始。它将包含只有创世区块需要的附加数据，比如描述账本特定特征和属性的元数据。
- en: Clients
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端
- en: Transactions are submitted to the blockchain by *clients*. Clients will sign
    their transaction by using their private key (or keys) and send the signed transactions
    to a blockchain node. Nodes then replicate the received transactions by sending
    them to known nodes; eventually, all the nodes have a copy of the client transactions.
    Clients may host wallets to store their keys and maintain receipts of committed
    transactions securely.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '*客户端*通过将交易提交到区块链上。客户端将使用他们的私钥（或密钥）对其交易进行签名，并将签名的交易发送到区块链节点。然后，节点通过将接收到的交易发送到已知节点来复制这些交易；最终，所有节点都有客户端交易的副本。客户端可以托管钱包来存储他们的密钥，并安全地维护已提交交易的收据。'
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter covered a lot of information to help you begin to understand the
    concept of blockchain. We began with a discussion on the origin of blockchain.
    Then we discussed several general components of blockchain, followed by its architecture,
    shared ledger, cryptography, consensus, and smart contract components. We kept
    the discussion at a high level so you could assimilate the fundamental concepts
    and formulate your own interpretation based on the knowledge we provided. We hope
    you research each item in greater detail as your blockchain journey continues
    and you master smart contract development.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了大量信息，帮助你开始理解区块链的概念。我们从讨论区块链的起源开始。然后我们讨论了几个区块链的一般组成部分，接着是它的架构、共享账本、密码学、共识和智能合约组件。我们保持讨论在一个较高的水平，这样你可以消化基本概念，并根据我们提供的知识制定自己的解释。我们希望随着你的区块链之旅的继续，你能更详细地研究每个项目，并掌握智能合约开发。
- en: In [Part II](part02.xhtml#introduction_to_hyperledger_projects), we’ll discuss
    the Hyperledger project and tools, followed by Hyperledger Fabric architecture
    and components to provide you with the necessary knowledge for [Part III](part03.xhtml#developing_smart_contracts_with_hyperle),
    where we cover smart contract development with Hyperledger Fabric.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第二部分](part02.xhtml#introduction_to_hyperledger_projects)中，我们将讨论Hyperledger项目和工具，随后是Hyperledger
    Fabric架构和组件，为你提供[第三部分](part03.xhtml#developing_smart_contracts_with_hyperle)所需的知识，我们在其中涵盖了使用Hyperledger
    Fabric进行智能合约开发。
