- en: CHAPTER 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CHAPTER 3
- en: Protocols
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 协议
- en: Blockchains are protocols, not specific implementations. Like HTTP, which defines
    how web servers and browsers should communicate, blockchain protocols define how
    nodes should work together to maintain the decentralized digital ledger.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是协议，而不是具体的实现。就像HTTP，它定义了Web服务器和浏览器应该如何通信，区块链协议定义了节点应该如何协同工作以维护去中心化的数字账本。
- en: Blockchain protocols are designed to incentivize the nodes in the blockchain
    network to work in its best interests while assuming that a certain percentage
    of nodes are greedy and potentially malicious. Blockchain protocols are designed
    to make it more profitable to play by the rules than to cheat.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链协议旨在激励区块链网络中的节点为其最佳利益工作，同时假设一定比例的节点是贪婪的，可能是恶意的。区块链协议旨在让遵守规则比作弊更有利可图。
- en: 'The blockchain''s ledger is regularly updated with the addition of new blocks.
    The two main protocols that enable new blocks define how the network should choose
    who creates the next one (consensus) and how that selected block creator should
    go about doing so.  ## Consensus'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '区块链账本定期通过添加新块进行更新。使新区块定义网络应如何选择下一个区块的创建者（共识）以及被选中的区块创建者应如何进行操作的两个主要协议。  ##
    共识'
- en: Distributed ledgers are designed to operate as distributed, decentralized systems.
    Each node in the network stores its own copy of the distributed ledger and is
    responsible for keeping that copy in sync with the rest of the network.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式账本被设计成作为分布式、去中心化系统运行。网络中的每个节点都存储分布式账本的一份副本，并负责将该副本与网络中的其他部分同步。
- en: In blockchain-based systems, this is accomplished using consensus algorithms.
    These algorithms formalize the process by which the creator of the next block
    in the blockchain is selected. In the following sections, I discuss how some of
    the major consensus algorithms work, their security assumptions, and some common
    attacks against them.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于区块链的系统中，这是通过共识算法实现的。这些算法通过定义确定区块链中下一个区块创建者的过程来形式化这一过程。在下面的章节中，我将讨论一些主要共识算法的工作原理、它们的安全假设以及针对它们的常见攻击。
- en: '### Key Concepts in Blockchain Consensus'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '### 区块链共识的关键概念'
- en: Blockchain consensus algorithms are designed to implement decentralized decision
    making. Each node in the network needs to be able to independently determine who
    the creator of the next block should be and come up with the same answer as everyone
    else.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链共识算法旨在实现去中心化决策。网络中的每个节点都需要能够独立地确定下一个区块的创建者，并得出与其他所有人相同的答案。
- en: While making these decisions, blockchain nodes need to account for a few potential
    problems. Malicious nodes in the network may attempt to mislead other nodes for
    their own gain. Simple majority vote is not a workable approach to making decisions.
    The network may not achieve consensus, leading to multiple versions of the blockchain.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在做出这些决定时，区块链节点需要考虑几个潜在的问题。网络中的恶意节点可能会试图为了自己的利益误导其他节点。简单的多数投票不是做出决策的可行方法。网络可能无法达成共识，导致区块链存在多个版本。
- en: One of the major contributions of Satoshi Nakamoto in the Bitcoin white paper
    was developing solutions for these problems that work for a blockchain network.
    These approaches support decentralized decision making and scale to networks the
    size of Bitcoin.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 中本聪在比特币白皮书中的一个主要贡献是提出了适用于区块链网络的这些问题的解决方案。这些方法支持去中心化决策，并可扩展到与比特币一样大的网络。
- en: '#### *Byzantine Generals Problem*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 拜占庭将军问题'
- en: The Byzantine Generals Problem (BGP) is a computer science problem designed
    by Leslie Lamport.[¹](#c03-note-0001) It describes the problem of distributed
    decision making in an environment where some decision-makers and communication
    paths cannot be trusted.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭将军问题（BGP）是由莱斯利·拉蒙特设计的计算机科学问题。[¹](#c03-note-0001) 它描述了在某些决策者和通信路径不能被信任的环境中分布式决策的问题。
- en: In BGP, multiple armies are laying siege to a city and need to decide on what
    to do next. The majority of the generals either need to agree to attack all at
    once or retreat all at once. If the group does not reach consensus, they will
    be defeated by the defenders of the city. Since the armies are spread around the
    city and the generals cannot leave their armies, they need to communicate via
    messenger.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在BGP中，多个军队正在围困一个城市，并需要决定接下来做什么。大多数将军要么需要达成一致，同时发起攻击，要么同时撤退。如果群体没有达成共识，他们将被城市的守卫者击败。由于军队分布在城市周围，将军们不能离开他们的军队，他们需要通过信使进行沟通。
- en: The situation is complicated by the fact that some of the generals can be traitors,
    sending false messages or failing to send messages at all. To achieve consensus,
    the king sends a message to every general with his orders, and every general relays
    this message to every other general. As a result, every general receives multiple
    messages stating the king's wishes. Since some generals may be malicious, these
    messages may be contradictory. However, as long as two-thirds of the generals
    are good, it is possible to achieve consensus.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 情况因一些将军可能是叛徒而变得复杂，他们会发送虚假信息或根本不发送信息。为了达成共识，国王给每一位将军发送一条包含他命令的信息，每位将军都将这条信息转发给其他每一位将军。结果，每位将军都收到了多条表达国王愿望的信息。由于一些将军可能是恶意的，这些信息可能相互矛盾。然而，只要三分之二以上的将军是忠诚的，就有可能达成共识。
- en: 'Solutions to the Byzantine Generals Problem have existed for some time now,
    but they were too inefficient for large-scale use. In order to operate, blockchains
    need to solve the Byzantine Generals Problem since they are also a distributed
    system trying to come to an agreement (the contents of the next block) while dealing
    with potential traitors (malicious nodes). Blockchain consensus algorithms are
    designed to provide a scalable solution to BGP and are called Byzantine Fault
    Tolerant (BFT) if they manage to do so.  #### *Security via Scarcity*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭将军问题的解决方案已经存在一段时间了，但它们对于大规模应用来说效率太低。为了运行，区块链需要解决拜占庭将军问题，因为它们也是一个分布式系统，在处理潜在的叛徒（恶意节点）的同时，试图就下一个区块的内容达成一致。区块链共识算法旨在提供一个可扩展的拜占庭将军问题解决方案，如果它们能够做到这一点，就被称为拜占庭容错（BFT）。####
    *通过稀缺性实现安全*
- en: The simplest approach to decentralized decision making is majority vote. However,
    a straightforward majority vote doesn't work for blockchain due to the potential
    for a Sybil attack.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 去中心化决策的最简单方法是多数投票。然而，由于Sybil攻击的可能性，简单的多数投票对区块链来说并不适用。
- en: Blockchain systems are designed to be anonymous, and anyone can create a blockchain
    account. In a Sybil attack, a malicious user creates many fake accounts, which
    only requires generating a private key for a new address on the blockchain. If
    a blockchain implemented consensus via majority vote, a Sybil attacker has a disproportionate
    vote and potentially could control the majority of accounts.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链系统被设计成匿名的，任何人都可以创建一个区块链账户。在Sybil攻击中，恶意用户创建了许多虚假账户，这只需要在区块链上为新地址生成一个私钥。如果一个区块链通过多数票实现共识，Sybil攻击者会拥有不成比例的投票权，理论上可能控制大多数账户。
- en: The name *Sybil attack* is inspired by a book titled *Sybil*, which is about
    a woman with dissociative identity disorder. However, the subject of the book
    later admitted that the multiple identities were fake, just like an attacker's
    multiple accounts on the blockchain.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 名字*Sybil攻击*来源于一本名为《Sybil》的书，书中讲述了一个患有解离性身份障碍的女子。然而，书中的主人公后来承认，那些多重身份都是假的，就像区块链上的攻击者的多个账户一样。
- en: Instead of providing each account with equal control over the state of the ledger,
    blockchain consensus algorithms use a scarce resource to represent control over
    the blockchain. While different consensus algorithms use different scarce resources
    and apply them in different ways, a user's control over the block creation process
    is proportional to the percentage of the scarce resource they control. Since the
    block creator decides what is and isn't included in the ledger, this control over
    the scarce resource equates to control over the blockchain's ledger and its history.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的共识算法并不是给每个账户提供对账本状态的平等控制权，而是用一种稀缺资源来表示对区块链的控制。尽管不同的共识算法使用不同的稀缺资源并以不同的方式应用它们，但用户对区块创建过程的控制力与他们控制的稀缺资源的百分比成正比。由于区块创建者决定哪些内容会被记录在账本中，这种对稀缺资源的控制等同于对区块链账本及其历史的控制。
- en: The relationship between a resource's supply, demand, and price is a core principle
    of economics. If an item's demand increases relative to the supply, the price
    increases as well. An attacker attempting to accumulate enough of the finite resource
    to gain control of a blockchain's ledger increases the demand for a resource with
    a fixed supply. As the demand increases and the available supply shrinks (as the
    attacker accumulates all that is for sale), the price continues to rise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 资源供应、需求和价格之间的关系是经济学的一个核心原则。如果某项物品的需求相对于供应增加，价格也会随之增加。试图积累足够有限资源以控制区块链账本的攻击者增加了对固定供应资源的
    demand. As the demand increases and the available supply shrinks (as the attacker
    accumulates all that is for sale), the price continues to rise.
- en: 'In a decentralized system, there is no authority that can punish misbehavior,
    so users must want to behave in order for the system to work. Blockchain attempts
    to incentivize participation in the block creation process and stimulates demand
    for the scarce resource by paying nodes to create blocks. At the same time, it
    tries to prevent any one user from accumulating too much power by making such
    an attack too expensive to be feasible or profitable.  #### *The Longest Chain
    Rule*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个去中心化系统中，没有权威可以惩罚不良行为，因此用户必须想要遵守规则，系统才能运行。区块链试图通过支付节点创建区块来激励参与区块创建过程，并刺激对稀缺资源的需求。同时，它试图防止任何单一用户积累过多权力，使得这种攻击要么成本过高不可行，要么无利可图。####
    最长链规则
- en: A valid version of the blockchain is one whose blocks contain only valid transactions
    and that follows the rules of the blockchain consensus algorithm. For many consensus
    algorithms, this means that it is possible to have multiple valid versions of
    the same block and multiple divergent blockchains.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的一个有效版本是指其区块只包含有效交易，并遵循区块链共识算法的规则。对于许多共识算法来说，这意味着可能存在同一个区块的多个有效版本和多个分叉的区块链。
- en: Blockchain systems lack a centralized authority that can decide which of two
    versions of the blockchain's distributed ledger is the “correct” one. Blockchains
    require a way to do so in a decentralized fashion, so they use the longest chain
    rule.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链系统缺乏一个可以决定区块链分布式账本两个版本中哪一个是“正确”的中心化权威。区块链需要一种去中心化的方式来达成这一决定，因此它们采用了最长链规则。
- en: Under the longest chain rule, the “longer” of two conflicting blockchains is
    the one that a node should accept. In this context, *longer* means the version
    that required more work to create. For some consensus algorithms, this is literally
    the one with a greater number of blocks, but in others, a short chain of difficult-to-create
    blocks may beat out a longer one of easier blocks.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在最长链规则下，“更长”的两个冲突区块链中的哪一个是一个节点应该接受的。在这个上下文中，“更长”意味着需要更多工作来创建的版本。对于一些共识算法，这实际上是指具有更多区块的那一个，但在其他算法中，一个由难以创建的区块组成的短链可能会胜过一个由更容易的区块组成的较长链。
- en: The longest chain rule implements the principle of majority vote using the scarce
    resources mentioned previously. Whichever version of the blockchain is longer
    should be the one supported by the majority of the scarce resource. The percentage
    of the scarce resource that a node or group controls is proportional to the probability
    of being selected to create a block. If more blocks are created by the supporters
    of one chain than by the creators of the other, then that chain should logically
    control more of the scarce resource.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最长链规则通过前面提到的稀缺资源实现了多数投票的原则。无论哪种版本的区块链更长，都应该得到稀缺资源大多数的支持。节点或群体控制的稀缺资源的百分比与被选中创建区块的概率成比例。如果支持一条链的节点比支持另一条链的创造者创建了更多的区块，那么逻辑上那条链应该控制更多的稀缺资源。
- en: 'Under the longest chain rule, a node may be forced to replace its previously
    accepted version of the blockchain with a new one. This is why blockchain transactions
    are said to only offer probabilistic finalization. While any block can theoretically
    be replaced by a different version, this becomes more difficult as more blocks
    are built on top of it. The blocks'' chains and blockchain consensus algorithms
    are designed to make major reorganizations of the blockchain difficult to the
    point of being impossible.  ### Proof of Work'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在最长链规则下，一个节点可能被迫用一个新的区块链替换它之前接受的区块链。这就是为什么说区块链交易只提供概率性的最终确定。尽管任何区块理论上都可以被不同的版本替换，但当更多的区块建立在其之上时，这会变得更加困难。区块的链和区块链共识算法旨在使区块链的重大重组变得如此困难以至于不可能。###
    工作量证明
- en: Proof of Work is the oldest blockchain consensus algorithm. Satoshi Nakamoto
    described it in 2008 in the Bitcoin white paper, which introduced the concept
    of blockchain to the world.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明（Proof of Work）是最古老的区块链共识算法。中本聪在2008年的比特币白皮书中描述了它，从而向世界介绍了区块链的概念。
- en: Proof of Work uses computational power as its scarce resource. The more calculations
    that a miner can perform, the higher probability of finding a valid block that
    the rest of the network will accept.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明使用计算能力作为其稀缺资源。矿工能执行的计算越多，找到网络其他部分将接受的有效区块的概率就越高。
- en: '#### *Introduction to Proof of Work*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**工作量证明简介**'
- en: 'Blocks in a Proof of Work blockchain have two parts: the header and the body.
    The body contains the transaction data stored in the block, while the header contains
    four important fields:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链工作量证明中的区块分为两部分：头部和体部。体部包含了存储在区块中的交易数据，而头部包含了四个重要字段：
- en: '**Timestamp:** When the block was created'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳：**区块创建的时间'
- en: '**Transaction Hash:** Root hash of the Merkle tree containing the transactions
    in the block'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易哈希：**包含区块中交易的默克尔树根哈希'
- en: '**Previous Block Hash:** Hash of previous block, chaining them together'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前一个区块哈希：**前一个区块的哈希，将它们链接在一起'
- en: '**Nonce:** A random value generated by the block creator'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Nonce：**由区块创建者生成的随机值'
- en: The Proof of Work consensus algorithm is designed to make it difficult to create
    a valid block but easy to validate one. In Proof of Work, a valid block is one
    whose header hashes to a value less than a certain threshold. Often, this threshold
    is referred to as the hash of the header having a certain number of leading zeros.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明共识算法旨在使创建有效区块变得困难，但验证却变得容易。在工作量证明中，有效的区块是指其头部哈希值小于某个阈值的区块。通常，这个阈值指的是头部哈希具有特定数量的前导零的哈希值。
- en: The properties of hash functions make the Proof of Work algorithm both possible
    and secure. Hash function nonlocality means that similar inputs produce very dissimilar
    outputs. By modifying the value of the nonce in the block header, Proof of Work
    miners can create headers with very different hashes that potentially fulfill
    the requirement that this value be less than the threshold.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数的特性既使得工作量证明算法成为可能，又保证了其安全性。哈希函数的非局部性意味着相似的输入会产生非常不相似的输出。通过修改区块头中的nonce值，工作量证明矿工可以创建具有非常不同哈希的头部，这些哈希可能满足这个值小于阈值的要求。
- en: Hash function preimage resistance means that the hash of a given block header
    is unpredictable. As a result, the only method of finding a valid block is by
    trying different nonce values until a miner hits upon a usable one. This is where
    the scarce resource of computational power comes into play. The greater the amount
    of computing power that a miner controls, the more hash calculations they can
    perform and the higher the probability that they are the one who finds a valid
    version of the current block.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数反向映射抵抗意味着给定区块头的哈希是不可预测的。因此，找到有效区块的唯一方法是尝试不同的nonce值，直到矿工找到一个可用的nonce。这里计算能力的稀缺资源就发挥作用了。矿工控制的计算能力越大，他们可以执行的哈希计算就越多，他们找到当前区块有效版本的概率也就越高。
- en: '##### Difficulty Targets in Proof of Work'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '##### 工作量证明中的难度目标'
- en: The threshold used to determine whether or not a block is valid is based on
    the current difficulty target. This difficulty target can change over time as
    the total hash rate of the blockchain network grows or shrinks. The goal is to
    set the difficulty target so that the network is able to create a new valid block
    at a set rate.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 用于判断区块是否有效的阈值基于当前的难度目标。这个难度目标会随着区块链网络总哈希率的增减而随时间变化。目标是设置难度目标，使网络能够以设定的速率创建新的有效区块。
- en: For example, Bitcoin's target block rate is 10 minutes. This means that, on
    average, a block is created every 10 minutes. Due to the unpredictability of the
    mining process, some blocks are created more quickly and some take longer. However,
    the difficulty target is set so that the average number of potential nonces that
    it takes to find a valid block can be tested within 10 minutes at the blockchain's
    current hash rate.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，比特币的目标区块生成率是10分钟。这意味着，平均而言，每10分钟创建一个区块。由于挖矿过程的不可预测性，有些区块生成得更快，有些则更慢。然而，难度目标是设置为在区块链当前的哈希率下，可以在10分钟内测试到一个有效区块所需的潜在nonce数的。
- en: 'Difficulty targets are adjusted at regular intervals in a decentralized fashion.
    All users in the blockchain network can see the times that each block was created
    and determine the actual block creation rate. At predefined intervals, they will
    multiply the current difficulty target by the ratio of the actual and target block
    times to create a new target that reflects the current resources of the blockchain
    network.  #### *Security of Proof of Work*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明中的难度目标以去中心化的方式定期调整。区块链网络中的所有用户都能看到每个区块的创建时间，并确定实际的区块生成速率。在预定义的间隔，他们会将当前难度目标与实际和目标区块时间的比率相乘，以创建一个反映当前区块链网络资源的新目标。####
    *工作量证明的安全性*
- en: While many different types of attacks can be performed against a Proof of Work
    blockchain, three are designed specifically to attack the Proof of Work consensus
    algorithm. A 51% attack is a “brute-force” approach to taking over the network,
    while selfish and SPV mining are designed to allow an attacker to take over without
    committing the same number of resources as in a 51% attack.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管针对工作量证明（Proof of Work）区块链可以实施多种不同类型的攻击，但其中有三种是专门针对工作量证明共识算法的。51%攻击是一种“暴力破解”方法，旨在控制网络，而自私挖矿和简单支付验证（SPV）挖矿则旨在让攻击者在不投入与51%攻击相同数量资源的情况下控制网络。
- en: An attacker can also take advantage of the mechanics of Proof of Work to disrupt
    the operation of the blockchain. One method is by forcing artificial difficulty
    updates for Proof of Work consensus.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者还可以利用工作量证明的机制来破坏区块链的运行。一种方法是通过强制工作量证明共识的人工难度更新。
- en: '##### 51% Attack'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '##### 51% 攻击'
- en: The 51% attack is probably the most well-known attack against a blockchain and
    is described in the Bitcoin white paper. Proof of Work is designed to enforce
    consensus based upon majority vote where the “votes” are the hash calculations
    performed by miners during the block creation process.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 51%攻击可能是针对区块链最著名的攻击方式，并在比特币的白皮书中进行了描述。工作量证明旨在基于多数票来强制达成共识，这里的“票”是指矿工在区块创建过程中执行的哈希计算。
- en: If an attacker has a majority of the network's hash power (i.e., 51%), they
    are likely to win the race to create every new block and have control over the
    blockchain. While it's possible that the rest of the network could beat the attacker
    to creating one or more blocks, it is statistically unlikely that they will be
    able to maintain this lead. If the attacker can create and maintain the longest
    version of the blockchain, users following the blockchain protocol are obliged
    to accept it over the shorter option.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者拥有网络哈希算力的多数（即51%），他们很可能会赢得创建每一个新区块的竞赛，并控制区块链。尽管其他网络节点可能能够在创建一个或多个区块的速度上超过攻击者，但从统计学上讲，他们维持这种领先的可能性很小。如果攻击者能够创建并维持区块链的最长版本，那么遵循区块链协议的用户有义务接受它，而不是更短的选项。
- en: '###### *Countermeasures*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '###### *对策*'
- en: A 51% attack is extremely difficult to prevent if an attacker has the resources
    to perform it. In fact, it has been said that it's impossible to have a truly
    decentralized system without being vulnerable to a 51% attack. Two approaches
    that have been tried are checkpointing and fining miners who attempt to perform
    one.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者拥有执行51%攻击的资源，那么防止51%攻击将极其困难。实际上，有人认为，没有漏洞可被51%攻击利用的系统是无法真正实现去中心化的。已经尝试过的两种方法是设置检查点以及罚款尝试执行51%攻击的矿工。
- en: '***Checkpointing***     In a blockchain using checkpointing, miners occasionally
    checkpoint a block on the chain and refuse to accept a version of the blockchain
    with a different version of that block, even if the other blockchain version is
    longer. The issue with this approach is that it risks either dividing the network
    or centralization.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '***检查点机制***    在采用检查点机制的区块链中，矿工偶尔会在链上设置检查点，并拒绝接受具有不同版本块的区块链，即使其他区块链版本更长。这种方法的问题在于，它可能导致网络分裂或中心化。'
- en: If each user individually checkpoints blocks, there is the possibility that
    users will checkpoint different versions of the same block. As a result, these
    nodes will refuse to accept each other's version of the ledger, making it impossible
    for the network to be reunited.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果每个用户单独设置检查点，用户可能会对同一个块设置不同的版本。因此，这些节点将拒绝接受彼此的账本版本，使得网络无法重新合并。
- en: If a single user generates checkpoints and distributes them (to avoid network
    fragmentation), then the blockchain system has become centralized. Neither of
    these options is good for blockchain security, so checkpointing is rarely used.  ***Fining***
        Another option for preventing 51% is fining miners who are performing a 51%
    attack. In general, 51% attacks are intended to facilitate double-spends, where
    an attacker publishes one version of a transaction, waits for it to be accepted,
    and then publishes a longer version of the blockchain that includes a contradictory
    version of the transaction. Since the longer version will be accepted and only
    one version of the transaction can be accepted, the original transaction is ignored.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个用户生成检查点并分发它们（以避免网络碎片），那么区块链系统已经变得中心化。这两个选项对区块链安全都不好，因此检查点很少使用。  ***惩罚***
        防止51%的另一方法是对执行51%攻击的矿工进行罚款。一般来说，51%攻击旨在促成双重支付，攻击者发布交易的其中一个版本，等待它被接受，然后发布一个包含与原交易矛盾的区块链更长版本。因为更长的版本会被接受，且只能接受一个交易版本，所以原交易被忽略。
- en: In order to successfully perform a double-spend attack, the attacker must build
    the contradictory version of the blockchain in secret and not reveal it until
    the original transaction is accepted, which is typically after three blocks have
    been built on top of the block containing the transaction. This means that the
    early blocks in this divergent chain are only visible to the network long after
    they were created. On Bitcoin, the earliest block on the divergent chain would
    be published over half an hour after its creation time, which is significantly
    longer than can be explained by network delays.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功执行双重支付攻击，攻击者必须在秘密中构建区块链的矛盾版本，并在原交易被接受后才揭露它，通常是在包含交易的区块上构建了三个区块之后。这意味着这个分叉链的早期区块在创建后很久才能被网络看到。在比特币上，分叉链的最早区块在其创建时间半小时后发布，这比可以归因于网络延迟的时间长得多。
- en: One option is to fine miners who created blocks that are first seen by the network
    long after their creation time. This disincentivizes a 51% attack by making the
    miner lose money creating malicious blocks instead of being rewarded.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是对创建的第一个被网络看到的区块进行罚款。这通过让矿工因创建恶意区块而损失资金，而不是获得奖励，从而消除了51%攻击的激励。
- en: 'The issue with this approach is that delays in block creations can also happen
    for legitimate reasons. Later, we''ll talk about denial-of-service attacks where
    an attacker can cause the rate at which blocks are created to slow. If blocks
    cannot be created before the cutoff that incurs a penalty, the blockchain may
    cease to function, as legitimate miners will not create blocks for fear of being
    penalized.  ###### *Case Studies*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '这种方法的问题在于，区块产生的延迟也可能有合法的原因。稍后，我们将讨论拒绝服务攻击，攻击者可以减缓区块产生的速度。如果区块在惩罚截止时间前无法产生，区块链可能无法运行，因为合法矿工害怕被惩罚而不创建区块。  ######
    *案例研究*'
- en: The cost of performing a 51% attack depends on the amount of computing power
    devoted to performing Proof of Work calculations on the blockchain. The greater
    the hash rate, the more expensive and less likely a 51% attack.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 执行51%攻击的成本取决于用于在区块链上执行工作量证明计算的计算能力。算力越高，执行51%攻击的成本越高，且越不可能发生51%攻击。
- en: Over a dozen smaller blockchains have experienced a 51% attack, including well-known
    ones such as Ethereum Classic (ETC) and Bitcoin Satoshi's Vision (BSV).[²](#c03-note-0002)
    These cryptocurrencies have a relatively low hash rate, making 51% attacks using
    rented cloud-based hashing infrastructure possible.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有超过十几个小型区块链经历过51%攻击，包括知名如以太坊经典（ETC）和比特币萨诸塞愿景（BSV）。[²](#c03-note-0002)这些加密货币的算力相对较低，使得利用租借的基于云的算力基础设施进行51%攻击成为可能。
- en: The Verge cryptocurrency was the victim of a 51% attack in which the attacker
    took advantage of the design of the protocol to perform the attack with approximately
    10 percent of the blockchain's hash rate.[³](#c03-note-0003) This attack exploited
    the design of the blockchain's protocol to drive down the difficulty threshold
    on one of its five mining algorithms.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘币（The Verge）成为51%攻击的受害者，攻击者利用协议的设计执行了大约10%的区块链算力的攻击。[³](#c03-note-0003)这次攻击利用了区块链协议的设计，降低了一个五挖掘算法之一的难度阈值。
- en: 'As a result, miners using the Scrypt algorithm could find blocks much more
    easily than those using the other four algorithms. Assuming an even distribution
    of hash power across the five algorithms, this meant that 20 percent of the hash
    power was guaranteed to find every block. This allowed the attacker to create
    blocks faster than everyone else simply by controlling 10 percent of the overall
    hash rate and beating out other Scrypt miners.  ##### SPV Mining'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '因此，使用Scrypt算法的矿工比使用其他四种算法的矿工更容易找到区块。假设hash power在五种算法中均匀分布，这意味着20%的hash power保证能找到每个区块。这使得攻击者仅仅通过控制整体hash
    rate的10%，就能比其他人更快地创建区块，只需打败其他Scrypt矿工即可。  ##### SPV挖矿'
- en: SPV mining takes advantage of the existence of Simplified Payment Verification
    (SPV) node software. When a new block is created, an SPV node will download only
    the header of the block for verification. It ignores the Merkle tree containing
    transaction data unless it needs to verify a particular transaction within a block.
    These nodes are not intended for use in mining but only for taking advantage of
    the services provided by the blockchain system.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: SPV挖矿利用了简化支付验证（SPV）节点软件的存在。当一个新的区块被创建时，一个SPV节点只会下载该区块的头部用于验证。它忽略了包含交易数据的Merkle树，除非它需要验证区块中的特定交易。这些节点并非用于挖矿，而只是利用区块链系统提供的服务。
- en: 'SPV miners take advantage of the rules of the blockchain protocol to give themselves
    a head start at mining. When a traditional miner receives a new block, they take
    the following steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: SPV矿工利用区块链协议的规则给自己在挖矿中提供一个先发优势。当传统矿工收到一个新区块时，他们会采取以下步骤：
- en: Download and verify the block header.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并验证区块头部。
- en: Download and validate transaction data.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并验证交易数据。
- en: Update pool of pending transactions.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新待处理交易池。
- en: Build a new block using valid transactions.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用有效交易构建新区块。
- en: Begin mining the new block.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始挖矿新区块。
- en: The steps of downloading and validating transactions can be time-consuming but
    are necessary. It's possible that a malicious user has created two contradictory
    transactions and transmitted them to the network. If one has already been added
    to the ledger, the other cannot be included as well. Before building a block,
    a miner needs to ensure that both the previous block and their current block contain
    only legitimate transactions. If not, they are wasting their time and resources
    mining the block as no legitimate user will accept it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 下载和验证交易的过程可能很耗时，但却是必要的。有可能恶意用户创建了两个相互矛盾的交易并将它们传输到网络中。如果其中一个已经添加到账本中，另一个也无法包含在内。在构建区块之前，矿工需要确保前一个区块和当前区块只包含合法交易。如果不是，他们挖矿区块就是在浪费时间和资源，因为没有合法用户会接受这样的区块。
- en: 'SPV miners skip steps 2 and 3 in the mining process in order to give themselves
    a head start. They do so by mining a block that contains only a single transaction:
    the one paying them the set reward for creating a block. This block is perfectly
    valid and has no chance of including invalid transactions, allowing them to start
    mining as soon as they have the hash of the previous block.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SPV矿工跳过挖矿过程中的第2步和第3步，以给自己提供一个先发优势。他们通过挖掘只包含一个交易的区块来实现：即为创建区块支付给他们设定的奖励。这个区块完全有效，不可能包含无效交易，使他们能够在获取到前一个区块的哈希值后立即开始挖矿。
- en: '###### *Countermeasures*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '###### *对策*'
- en: SPV mining relies on the fact that it takes some time to perform verification
    of transactions in the previous and current blocks. The Bitcoin network has had
    some success in reducing SPV mining attacks by increasing the efficiency of these
    operations for their clients.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: SPV挖矿依赖于这样一个事实：验证前一个区块和当前区块中的交易需要一些时间。比特币网络通过提高这些操作对客户端的效率，在一定程度上成功减少了SPV挖矿攻击。
- en: 'An SPV miner is making a trade-off between the increase in block rewards gained
    by mining more blocks (due to their head starts) and the loss of transaction fees
    due to mining empty blocks. Increasing the efficiency of verification code and
    the fact that block rewards decrease over time in most cryptocurrency blockchains
    will quickly make SPV mining an unprofitable form of attack.  ###### *Case Study*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '一个SPV矿工在挖矿更多区块以获得更多区块奖励（由于他们的先发优势）和由于挖掘空区块而损失的交易费之间做出权衡。验证代码效率的提高以及大多数加密货币区块链中区块奖励随时间减少的事实，将很快使SPV挖矿成为一种无利可图的攻击方式。  ######
    *案例研究*'
- en: 'In 2018, the Etherdig Ethereum mining pool performed extensive SPV mining.[⁴](#c03-note-0004)
    In three months, the pool created 1,250 blocks that did not validate a single
    transaction. This attack netted the pool 3,750 ETH worth $862,500 at the time.  #####
    Selfish Mining'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在2018年，以太坊挖矿池Etherdig进行了广泛的SPV挖矿。[⁴](#c03-note-0004)在三个月内，该池创建了1,250个区块，而这些区块没有验证过任何交易。这次攻击使该池获得了价值86.25万美元的3,750个ETH。#####
    自私挖矿
- en: A 51% attack requires significant resources on the part of the attacker, which
    may be infeasible to acquire. Selfish mining allows an attacker to perform a 51%
    attack with less than half of the network's total hash rate. It also can be used
    by malicious miners to increase their probability of creating a new block.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 51%攻击需要攻击者投入大量资源，这可能是不切实际的。自私挖矿允许攻击者用不到网络总哈希率的一半来执行51%攻击。它还可以被恶意矿工用来增加创建新块的概率。
- en: In a Proof of Work blockchain, the block rate is just a target. The difficulty
    is set so that it takes that amount of time to find a solution to the Proof of
    Work puzzle on average; however, a solution could also be found on the first try
    or require much longer than the target.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作量证明区块链中，区块率只是一个目标。难度设置为平均需要那么长时间来找到一个工作量证明谜题的解决方案；然而，也有可能在第一次尝试时就找到解决方案，或者所需时间远超过目标。
- en: A selfish miner uses this knowledge to gain an advantage in block creation.
    If they have found a valid block for the current round, it is unlikely that another
    one will be found soon. Creation of a new block in the blockchain requires knowledge
    of the previous block since its hash is included in the new block's header. At
    the moment of block creation, only the creator of the block has this knowledge
    and is able to start mining the next block.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 自私矿工利用这个知识在区块创建中获得优势。如果他们为当前轮次找到了一个有效区块，那么在不久的将来找到另一个的可能性很小。在区块链中创建新块需要知道前一个块，因为其哈希包含在新块的头部。在区块创建的时刻，只有区块的创建者拥有这个知识并能够开始挖下一个块。
- en: A selfish miner will deliberately conceal their knowledge of a valid version
    of the current block in order to gain a head start in creating the next block
    in the chain. This head start allows them to try some potential nonce values before
    any other node can begin mining that block.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 自私矿工会故意隐藏他们关于当前区块有效版本的知识，以便在创建链中下一个区块时获得先发优势。这个先发优势让他们可以在其他节点开始挖该区块之前尝试一些潜在的非ce值。
- en: With this head start, an attacker with only 49 percent of the network's hash
    rate may be capable of launching a 51% attack. For miners without this much hash
    rate, selfish mining still provides an increase in their probability of finding
    the next block, which increases their chances of earning block rewards.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个先发优势，一个只有网络49%哈希率的攻击者可能有能力发起51%攻击。对于没有这么多哈希率的矿工来说，自私挖矿仍能提高他们找到下一个区块的概率，从而增加他们获得区块奖励的机会。
- en: '###### *Countermeasures*'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '###### 应对措施'
- en: 'Unfortunately, it''s difficult to protect against selfish mining. These attackers
    take advantage of the longest chain rule and the difficulty of Proof of Work mining
    to game the system and earn increased rewards.  ###### *Case Study*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，自私挖矿很难防范。这些攻击者利用最长链规则和工作量证明挖矿的难度来操控系统，获得增加的奖励。###### 案例研究
- en: In 2018, the Ethereum mining pool F2Pool potentially performed a selfish mining
    attack.[⁵](#c03-note-0005) This pool controlled 12.5 percent of the blockchain's
    hash rate and combined selfish and SPV mining techniques. F2Pool created an alternative
    version of the blockchain faster than the rest of the network, taking advantage
    of the fact that empty blocks could be created about 15 percent faster than legitimate
    ones.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在2018年，以太坊挖矿池F2Pool可能进行了自私挖矿攻击。[⁵](#c03-note-0005)这个池控制了区块链的12.5%的哈希率，并结合了自私挖矿和SPV挖矿技术。F2Pool创建了一个比网络其他部分更快的区块链替代版本，利用了空块可以比有效块大约快15%创建的空块事实。
- en: 'When the pool''s blockchain surpassed the legitimate one in length, it published
    it, causing other nodes to accept it under the longest chain rule. While this
    attack was not used to perform double-spends, it did net the pool additional block
    rewards.  ##### Denial of Service: Artificial Difficulty Increases'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当该池的区块链长度超过合法的区块链时，它就发布该区块链，导致其他节点根据最长链规则接受它。虽然这次攻击没有用来执行双重花费，但它确实使该池获得了额外的区块奖励。#####
    服务拒绝：人工难度增加
- en: Proof of Work blockchains attempt to tune the difficulty of finding a valid
    block to the network's hash rate. As hash rate rises and falls, the difficulty
    target changes as well to keep the block rate near the target.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明区块链试图调整找到有效区块的难度以适应网络的哈希率。随着哈希率的上升和下降，难度目标也会随之变化，以保持区块率接近目标。
- en: This provides an opportunity for an attacker to perform a Denial-of-Service
    (DoS) attack to degrade the blockchain's ability to create new blocks. By adding
    more hash power to the blockchain network, the attacker can drive up the difficulty
    target at the next update because the network perceives that it is creating blocks
    too quickly.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这为攻击者提供了一个机会，执行拒绝服务（DoS）攻击，以降低区块链创建新区块的能力。通过向区块链网络添加更多的哈希能力，攻击者在下一次更新时可以推高难度目标，因为网络认为它创建区块的速度太快。
- en: If the attacker then removes this extra computational power from the blockchain,
    then the difficulty target is set too high for the remaining nodes. As a result,
    blocks will be created more slowly until the next time the network updates its
    difficulty threshold. In the case of the Bitcoin network, updates are performed
    every 2,016 blocks, which is two weeks at a 10-minute block interval. With a slower
    block rate, this update will take even longer to perform, extending the impacts
    of the DoS attack.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者随后从区块链中移除了这种额外的计算能力，那么剩余节点的难度目标就会设置得过高。结果，区块将被创建得更慢，直到网络下次更新其难度阈值。在比特币网络上，每2,016个区块进行一次更新，即在10分钟一个区块间隔的情况下，这是两周一次。区块率变慢，这次更新将需要更长的时间来完成，从而延长DoS攻击的影响。
- en: Another variant on this attack involves performing a DoS attack against legitimate
    miners via malware, Distributed DoS (DDoS), and so on. This has the same effect
    of dropping the hash rate, slowing block production.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击的另一种变体涉及通过恶意软件、分布式拒绝服务（DDoS）等方式对合法矿工进行DoS攻击。这会降低哈希率，减缓区块生产。
- en: '###### *Countermeasures*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '###### *对策*'
- en: 'Proof of Work blockchains'' difficulty targets are designed to rise and fall
    as the hash rate changes. Also, it can be difficult to differentiate between an
    artificial difficulty increase and one caused by benign miners leaving the network.  ###
    Proof of Stake'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 工作量证明区块链的难度目标设计为随着哈希率的变化而上升和下降。此外，很难区分人为的难度增加和良性矿工离开网络所引起的变化。### 权益证明
- en: After Proof of Work (PoW), Proof of Stake is probably the most famous blockchain
    consensus algorithm. It consumes much less energy than PoW and does not require
    specialized hardware, making it “greener” and easier for newcomers to enter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作量证明（Proof of Work，PoW）之后，权益证明可能是最著名的区块链共识算法。它比PoW消耗的能量少得多，且不需要专用硬件，使其更加“绿色”，并且对新手的进入更为容易。
- en: '#### *Introduction to Proof of Stake*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '#### *权益证明简介*'
- en: In Proof of Stake, the blockchain's own cryptocurrency is the scarce resource
    used to limit users' control over the blockchain. The more cryptocurrency a user
    owns, the more control they can exert over the block creation process.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在权益证明中，区块链自身的加密货币是限制用户对区块链控制的稀缺资源。用户拥有的加密货币越多，他们就能在区块创建过程中施加越多的控制。
- en: Proof of Stake works a lot like buying stock in a company. If you own stock
    in a company, you have the potential to receive dividends proportional to the
    amount of stock you own.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 权益证明的运作方式与购买公司的股票类似。如果你拥有一家公司的股票，你就有潜力根据你拥有的股票数量获得股息。
- en: In Proof of Stake, a user can stake some of their cryptocurrency, meaning that
    they promise not to spend it and send it to a special address. As long as that
    cryptocurrency remains staked, the user has the opportunity to be selected to
    create blocks. The user can withdraw their stake at any time but loses the ability
    to be selected as a block creator.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在权益证明（Proof of Stake，PoS）中，用户可以抵押他们的一些加密货币，这意味着他们承诺不会花费并将其发送到一个特殊地址。只要这些加密货币仍然被抵押，用户就有机会被选中创建区块。用户可以随时提取他们的抵押品，但将失去被选为区块创建者的能力。
- en: 'The algorithms used to select Proof of Stake block creators fall into two groups:
    randomized block selection and coin-age-based selection. The main distinction
    is the probability of a user being selected to create blocks. In randomized block
    selection, this probability is proportional to the percentage of the total amount
    of staked cryptocurrency that the user owns. In coin-age-based selection, both
    the size of the user''s stake and the time since the last time the user created
    a block are taken into account.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 用于选择Proof of Stake区块创建者的算法分为两组：随机区块选择和币龄基础选择。主要的区别是一个用户被选中创建区块的概率。在随机区块选择中，这个概率与用户拥有的总质押加密货币的百分比成比例。在币龄基础选择中，考虑了用户的股份大小和自上次创建区块以来经过的时间。
- en: 'All implementations of Proof of Stake must be capable of performing the block
    creator selection process in a decentralized and secure manner. Centralization
    defeats the purpose of blockchain, and an insecure block creator selection process
    could allow a user to game the system. To accomplish this, the calculation of
    the next block creator takes several inputs (the hash of the previous block, stake
    sizes, coin ages, etc.) and passes them through a function that involves a hash
    calculation. Since all inputs are known to all users, anyone can perform the calculation.
    However, the use of the previous block hash and a hash function make it difficult
    for someone to game the system since they can''t predict what allocation of stakes
    across multiple accounts would give them an advantage in time to make the necessary
    adjustments.  #### *Variants of Proof of Stake*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Proof of Stake的实现都必须能够以去中心化和安全的方式执行区块创建者选择过程。中心化消解了区块链的目的，不安全的区块创建者选择过程可能会让用户操纵系统。为了实现这一点，下一个区块创建者的计算需要几个输入（前一个块的哈希、股份大小、币龄等）并将它们通过涉及哈希计算的函数。由于所有输入对所有用户都是已知的，任何人都可以执行计算。然而，使用前一个块的哈希和哈希函数使得某人操纵系统变得困难，因为他们无法预测股份在多个账户中的分配会让他们在时间上做出必要的调整。####
    *Proof of Stake的变体*
- en: Multiple different variants of Proof of Stake exist. Chain-based Proof of Stake
    uses stake to directly select block creators and the longest chain rule to determine
    which of two competing versions of the blockchain is the correct one. We'll focus
    on this version in this chapter.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 存在多种不同的Proof of Stake变体。基于链的Proof of Stake使用股份直接选择区块创建者，并利用最长链规则确定两个竞争的区块链版本中哪个是正确的。在本章中，我们将关注这个版本。
- en: Another version of Proof of Stake is called BFT-style Proof of Stake. This variant
    uses a multistage consensus protocol where a randomly selected block producer
    proposed a block and the rest of the staked validators vote on whether to accept
    it. This can enable them to achieve transaction finalization, unlike the probabilistic
    finalization offered by consensus algorithms using the longest chain rule.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种Proof of Stake称为BFT风格的Proof of Stake。这种变体使用多阶段共识协议，其中随机选择的区块生产者提出一个区块，其余的质押验证者投票是否接受它。这可以使他们实现与使用最长链规则的共识算法提供的概率性最终化不同的交易最终化。
- en: 'Delegated Proof of Stake (DPoS) implements representative democracy using staked
    assets. Stakeholders vote for delegates, and a certain number of candidates with
    the most votes are selected. In this scheme, delegates perform the work of block
    production and pass rewards down to stakers.  #### *Security of Proof of Stake*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Delegated Proof of Stake (DPoS) 使用质押资产实现代表民主。股东为代表投票，票数最多的 certain number of
    候选人被选中。在这个方案中，代表执行区块生产的工作，并将奖励传递给质押者。#### *Proof of Stake的安全性*
- en: The security of Proof of Stake relies on the security of the block creator selection
    process and digital signatures. For the block creator selection process to be
    secure, it needs to be impossible for someone to predict block creators in advance
    and modify their stake to improve their probability of being selected. Proof of
    Stake uses hash functions to assure this, so the security of Proof of Stake relies
    on the security of hash functions. Namely, hash functions must be pseudorandom
    (to prevent prediction of future states) and one way (to prevent someone reverse-engineering
    a winning solution).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Proof of Stake的安全性依赖于区块创建者选择过程和数字签名的安全性。为了使区块创建者选择过程安全，必须不能让任何人提前预测区块创建者并修改他们的股份以提高被选中的概率。Proof
    of Stake使用哈希函数来确保这一点，因此Proof of Stake的安全性依赖于哈希函数的安全性。具体来说，哈希函数必须是伪随机的（以防止预测未来状态）且是单向的（以防止某人反向工程一个获胜的解决方案）。
- en: Digital signature security is also vital to the security of Proof of Stake blockchains.
    Unlike Proof of Work, where creating a valid block is difficult, creating a valid
    block in Proof of Stake is very easy. Proof of Stake relies on the fact that users
    will only accept a block created by the chosen block creator. The authenticity
    of a block is protected by a digital signature, so digital signatures must be
    secure and unforgeable for a Proof of Stake blockchain to be secure.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名安全对权益证明区块链的安全性也至关重要。与工作量证明（Proof of Work）不同，在权益证明中创建有效区块非常容易。权益证明依赖于这样的事实：用户只接受由选定区块创建者创建的区块。区块的真实性由数字签名保护，因此数字签名必须安全且不可伪造，才能使权益证明区块链安全。
- en: As with Proof of Work, the goal of many attacks against Proof of Stake is to
    enable double-spend attacks on the blockchain. In the following sections, we'll
    discuss five methods by which an attacker can gain control of the blockchain,
    be incentivized to allow a double-spend attack, or perform a denial-of-service
    attack against blockchain nodes.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 与工作量证明（Proof of Work）类似，许多针对权益证明（Proof of Stake）的攻击目标是使区块链上的双重支付攻击成为可能。在以下各节中，我们将讨论攻击者可以控制的区块链的五种方法，激励攻击者允许双重支付攻击，或对区块链节点执行拒绝服务攻击。
- en: '##### XX% Attack'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '##### XX% 攻击'
- en: The XX% attack is the Proof of Stake equivalent of the 51% attack in Proof of
    Work. In this attack, the malicious user accumulates enough of the scarce resource,
    in this case cryptocurrency, to have a high probability of being chosen as the
    creator of each new block.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: XX% 攻击是权益证明中的 51% 攻击的对应物。在这种攻击中，恶意用户积累足够的稀缺资源（在本例中为加密货币），以高概率被选为每个新区块的创建者。
- en: Unlike with Proof of Work, owning 51 percent of the staked cryptocurrency does
    not guarantee control of the distributed ledger, but it provides a 51 percent
    chance of being selected to create each block. In order to launch an effective
    double-spend attack, the attacker needs to control enough of the staked cryptocurrency
    to have a high probability of being selected as the block creator for the desired
    number of continuous blocks (typically at least three).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 与工作量证明（Proof of Work）不同，拥有51%的抵押加密货币并不能保证分布式账本的控制权，但它提供了51%的机会被选为每个区块的创建者。为了发起有效的双重支付攻击，攻击者需要控制足够的抵押加密货币，以高概率被选为所需连续区块（通常是至少三个）的区块创建者。
- en: 'The exact percentage of the staked cryptocurrency needed to perform this attack
    depends on the desired probability that the attack will succeed. This can be modeled
    using the equation:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此攻击所需的抵押加密货币的确切百分比取决于攻击成功的期望概率。这可以使用以下方程进行建模：
- en: '![normal upper S equals normal upper P Superscript 1 slash normal upper N](images/c03-disp-0001.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![正常上标 S 等于正常上标 P 除以正常上标 N](images/c03-disp-0001.png)'
- en: where S is the percentage of the stake pool that the attacker needs to control
    in order to achieve a probability, P, of success in being chosen to create N consecutive
    blocks that the attacker needs to control in order to launch a successful attack.
    For reference, a 90 percent probability of success in controlling three blocks
    requires control of over 96 percent of the stake. The attacker has to decide on
    an acceptable probability of failure since it is unlikely that they will ever
    control all of the staked coins.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 S 是攻击者需要控制的股份池的百分比，以实现成功创建 N 个连续区块的概率 P。作为参考，控制三个区块以90%的成功率需要控制超过96%的股份。攻击者必须决定一个可接受的失败概率，因为它们不太可能控制所有抵押的货币。
- en: '###### *Countermeasures*'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '###### 应对措施'
- en: In the original Proof of Stake algorithms, “staking” simply referred to owning
    a cryptocurrency, which meant no penalty existed for misbehavior. The logic was
    that an attacker would devalue the cryptocurrency, which would hurt the attacker
    as well.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在原始的权益证明算法中，“抵押”仅仅是指拥有加密货币，这意味着不存在不当行为惩罚。逻辑是攻击者会贬值加密货币，这也会伤害攻击者自己。
- en: 'Modern Proof of Stake algorithms require stakers to deposit their cryptocurrency
    at a special address to participate in consensus. This gives these algorithms
    the ability to penalize nodes that misbehave, such as creating divergent versions
    of the blockchain.  ##### Proof of Stake “Time Bomb”'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现代权益证明（Proof of Stake）算法要求抵押者将他们的加密货币存入特殊地址，以参与共识。这使得这些算法能够惩罚行为不当的节点，例如创建区块链的分支版本。#####
    权益证明“定时炸弹”
- en: The Proof of Stake “time bomb” refers to the fact that the user with the highest
    percentage of stake on the blockchain will eventually be able to perform an XX%
    attack without any malicious action. This is due to the fact that this user can
    take advantage of “compounding interest” by staking all cryptocurrency that they
    earn through block rewards.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 权益证明“定时炸弹”指的是这样一个事实：持有区块链上最高股份比例的用户最终将能够不采取任何恶意行为进行XX%的攻击。这是由于该用户可以利用“复利”通过投注通过区块奖励获得的全部加密货币。
- en: In Proof of Stake, the percentage of block rewards that a user earns is proportional
    to the percentage of the total set of staked coins that they own. The user with
    the largest percentage of the stake will earn the largest block reward, allowing
    their stake to grow the most quickly.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在权益证明中，用户获得的区块奖励百分比与他们拥有总投注硬币百分比成比例。拥有最大股份比例的用户将获得最大的区块奖励，使他们的股份增长最快。
- en: As a result, their percentage of the total stake will grow over time, allowing
    them to earn greater and greater block rewards. Eventually, either the cryptocurrency
    will die (since all coin is tied up in users' stakes) or the controlling player
    will own all of the stake (as other users give up their stakes in order to use
    the coins in transactions).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，他们的总股份比例将随时间增长，使他们能够获得越来越大的区块奖励。最终，加密货币将会消亡（因为所有硬币都绑定在用户的股份中）或者控制玩家将拥有所有股份（因为其他用户放弃他们的股份以便在交易中使用硬币）。
- en: '###### *Countermeasures*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '###### *对策*'
- en: 'This is more of a theoretical attack than a practical one. Accumulating a controlling
    stake in a Proof of Stake blockchain via block rewards would take a very long
    time. Also, if an attacker controlled enough of a blockchain''s cryptocurrency
    to make this attack possible, most or all of the blockchain''s other users would
    likely have abandoned it, devaluing the currency and making the attack pointless.  #####
    Long-Range Attack'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这更多的是一个理论上的攻击，而不是一个实践中的攻击。通过区块奖励在权益证明区块链中积累控制性股份需要花费很长时间。此外，如果攻击者控制了区块链加密货币的足够份额从而使这种攻击成为可能，大多数或全部区块链用户可能已经放弃了它，导致货币贬值，使攻击变得毫无意义。#####
    长期攻击
- en: A long-range attack is designed to allow a user without the largest stake in
    a Proof of Stake blockchain to still take advantage of the “time bomb” effect.
    In this attack, the attacker chooses a point in the history of the blockchain
    (typically the genesis block) where they control some of the stake and creates
    a divergent blockchain.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 长期攻击旨在允许一个在权益证明区块链中不拥有最大股份的用户仍能利用“定时炸弹”效应。在此攻击中，攻击者选择区块链历史中的一个点（通常是创世区块），他们在那里控制一些股份，并创建一个分叉区块链。
- en: On the main blockchain, they decline every opportunity they have to create a
    block. As a result, the main blockchain grows more slowly since any blocks that
    they fail to create are skipped. This decreases the throughput of the blockchain
    and is crucial to the attack. The attacker's ability to affect the main blockchain
    will decrease over time though, since they are earning no new block rewards and
    their percentage of the total stake is likely shrinking as a result.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在主区块链上，他们拒绝了自己创造区块的每一个机会。结果是，主区块链增长得更慢，因为任何他们未能创造的区块都被跳过了。这降低了区块链的吞吐量，这是攻击的关键。尽管如此，攻击者对主区块链的影响能力会随时间降低，因为他们没有获得新的区块奖励，而且他们总股份的比例很可能因此缩小。
- en: On the attacker's version of the blockchain, they create a block whenever possible.
    As a result, they are the only one earning block rewards, which they reinvest
    as stake. In the long run, they achieve the same control over the blockchain as
    the “time bomb.”
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在攻击者的区块链版本上，他们尽可能地创建区块。结果是，他们是唯一获得区块奖励的人，他们将奖励重新投注为股份。从长远来看，他们实现了与“定时炸弹”相同的区块链控制。
- en: The challenge in this attack is getting the attacker's version of the blockchain
    accepted as the official version. To do so, they need their version to contain
    more blocks than the official one. Unless they own more than half of the stake
    at the beginning, their version of the chain will grow more slowly at first. Over
    time, their ability to create blocks on their side chain will increase and eventually
    surpass the main chain since the main chain will miss any blocks that they are
    chosen to create as well as occasional ones due to natural errors (chosen block
    creator failing to create a block within their window). As a result, they will
    eventually close the gap and become the longest chain, completing the attack.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击的挑战在于使攻击者的区块链版本被接受为官方版本。为此，他们需要确保其版本包含比官方版本更多的区块。除非他们在开始时拥有超过一半的权益，否则他们的链条会一开始增长得更慢。随着时间的推移，他们在侧链上创建区块的能力将增加，并最终超过主链，因为主链将错过他们被选中创建的任何区块，以及由于自然错误（选定的区块创建者未能在他们的窗口内创建区块）偶尔错过的区块。结果，他们最终会缩小差距，成为最长的链，完成攻击。
- en: '###### *Countermeasures*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '##### *对策*'
- en: A long-range attack exploits the longest chain rule that governs how nodes should
    treat conflicting versions of the blockchain. In theory, all nodes in the network
    should accept the malicious version of the blockchain, providing the attacker
    with complete control over the network and its ledger.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 长期攻击利用了最长链规则，该规则规定了节点应如何处理区块链的冲突版本。从理论上讲，网络中的所有节点都应该接受恶意的区块链版本，从而使攻击者完全控制网络及其账本。
- en: 'In practice, the nodes in the blockchain are more likely to simply reject the
    alternative blockchain as obviously malicious even if it should be accepted under
    the longest chain rule. While this breaks the rules of blockchain, it would enable
    the blockchain to continue to function.  ##### Resource Exhaustion Attacks'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，区块链中的节点更有可能简单地拒绝明显恶意的替代区块链，即使它应该根据最长链规则被接受。虽然这打破了区块链的规则，但它将使区块链能够继续运行。#####
    资源耗尽攻击
- en: Proof of Stake blockchains require more work to validate than Proof of Work
    ones. In a Proof of Work blockchain, it is possible to perform a high-level validation
    of a potential blockchain by verifying the chain of block headers. A valid chain
    is hard to compute but easy to verify. As a result, nodes can check the chain
    as an initial verification step before validating each transaction to check that
    a divergent blockchain is completely legitimate.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 权益证明（Proof of Stake）区块链比工作量证明（Proof of Work）区块链需要更多的验证工作。在工作量证明区块链中，可以通过验证区块头链来进行潜在区块链的高级验证。有效的区块难以计算但易于验证。因此，节点可以在验证每个交易之前，先检查链条作为初步验证步骤，以确认分叉的区块链是完全合法的。
- en: In Proof of Stake, the validity of the blockchain depends on the allocation
    of stake and whether each block is created by the appropriate block producer.
    As a result, a divergent blockchain is relatively easy to create but hard to verify
    because it requires access to block bodies to identify and track the staking and
    unstaking of cryptocurrency.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在权益证明中，区块链的有效性取决于权益的分配以及每个区块是否由合适的区块生产者创建。因此，创建分叉的区块链相对容易，但验证起来却很困难，因为这需要访问区块体以识别和跟踪加密货币的抵押和解除抵押。
- en: As a result, fake versions of the blockchain can be used to perform resource
    exhaustion attacks on chain-based Proof of Stake blockchains. Under the longest
    chain rule, a node is obligated to determine if a potentially longer chain is
    valid and to build on it if it is. An attacker who sends invalid divergent blockchains
    to a node can waste its resources and potentially slow the creation of new blocks
    due to resources being diverted to inspecting the invalid chain.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，可以使用伪造的区块链对基于链的权益证明区块链执行资源耗尽攻击。根据最长链规则，节点有义务确定潜在更长链的有效性，并在确认后在其基础上构建。攻击者向节点发送无效的分叉区块链，可以浪费其资源，并可能由于资源被用于检查无效链而减缓新块的创建。
- en: '###### *Countermeasures*'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '##### *对策*'
- en: 'These resource exhaustion attacks take advantage of the design and rules of
    chain-based Proof of Stake blockchains to attack nodes. Some heuristics exist
    to determine if a blockchain is likely to be valid before performing an in-depth
    inspection; however, many of these are vulnerable to attack.[⁶](#c03-note-0006)  #####
    Nothing at Stake Problem'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '这些资源耗尽攻击利用了基于链的权益证明区块链的设计和规则来攻击节点。在深入检查之前，有一些启发式方法可以确定区块链是否可能有效；然而，许多这些方法都容易受到攻击。[⁶](#c03-note-0006)  #####
    无利害关系问题'
- en: The Nothing at Stake problem in Proof of Stake refers to the fact that there
    is no incentive in many blockchain systems for block creators not to misbehave.
    If a fork occurs in the blockchain, whether accidentally or due to an attacker's
    double-spend attack, there is no mechanism to prevent a block creator from adding
    a block to both versions of the blockchain.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在权益证明中的**无利害关系问题**指的是在许多区块链系统中，区块创建者没有动机不去行为不端。如果区块链发生分叉，无论是意外还是因为攻击者的双重支付攻击，都没有机制阻止区块创建者将区块添加到两个版本中。
- en: In fact, doing so is the best move for them. By adding their block to both versions
    of the blockchain, a block creator guarantees that they will receive their block
    reward no matter which version of the blockchain eventually is selected as the
    official one via the longest block rule. Choosing one or the other runs the risk
    of guessing wrong and having their legitimate block dropped from the ledger.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，这样做对他们来说是最好的选择。通过将他们的区块添加到区块链的两个版本中，区块创建者保证无论最终哪个版本被选为官方版本，他们都能收到区块奖励。选择其中一个或另一个版本的风险是猜错，导致他们的合法区块从账本中被删除。
- en: '###### *Countermeasures*'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '###### **对策**'
- en: The Nothing at Stake problem assumes that validators have no incentive not to
    build on multiple versions of the blockchain. Some Proof of Stake blockchains,
    such as Ethereum 2.0, require nodes to send a security deposit to a particular
    address to be considered as a potential block creator.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**无利害关系问题**假设验证者没有理由不去在区块链的多个版本上构建。一些权益证明区块链，比如以太坊2.0，要求节点向特定地址发送一笔安全押金，以被视为潜在的区块创建者。'
- en: 'This security deposit provides a mechanism for these blockchains to punish
    nodes that break the rules. If a Proof of Stake validator creates blocks on conflicting
    chains, they may lose part of their stake or be ejected as a validator entirely.  ######
    *Case Studies*'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '这笔安全押金为这些区块链提供了一种惩罚违反规则的节点的机制。如果权益证明验证者在冲突链上创建区块，他们可能会失去部分股份或完全被排除在验证者之外。  ######
    **案例研究**'
- en: Since the launch of Ethereum 2.0, multiple nodes have been penalized for signing
    multiple conflicting versions of blocks. Often, this is due to configuration errors
    and restarting nodes, but some attempts may have been malicious.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 自以太坊2.0启动以来，多个节点因签署多个冲突版本的区块而被惩罚。通常，这是由于配置错误和重新启动节点，但有些尝试可能是恶意的。
- en: 'One example is the “slashing” of 75 Eth2 validators operated by Staked, a staking
    infrastructure provider.[⁷](#c03-note-0007) These nodes unexpectedly restarted
    due to configuration changes and mistakenly signed an alternative version of a
    previously signed block. As a result, the nodes incurred a penalty of 18 ETH worth
    $29,000 at the time.  ### Threat Modeling for Consensus'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '一个例子是Staked，一个权益基础设施提供商，运营的75个Eth2验证者被“削减”。[⁷](#c03-note-0007) 这些节点由于配置更改和错误地签署了一个先前签署块的替代版本而意外重新启动。结果，这些节点遭受了18
    ETH，即当时价值29,000美元的惩罚。  ### 共识的安全建模'
- en: 'Most blockchain consensus attacks are designed to help an attacker achieve
    a 51% attack or otherwise increase their control over the digital ledger. The
    following list includes some of the impacts of these attacks mapped to the STRIDE
    threat model:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数区块链共识攻击都是为了帮助攻击者实现51%攻击或以其他方式增加他们对数字账本的控制。以下是一些这些攻击对STRIDE威胁模型的影响：
- en: '**Tampering:** 51% attacks allow the digital ledger to be rewritten, breaking
    blockchain immutability.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**篡改**：51%攻击可以让数字账本被重写，打破区块链的不变性。'
- en: '**Repudiation:** 51% attacks permit double-spend attacks that allow an attacker
    to overwrite and repudiate past transactions.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**否认**：51%攻击允许进行双重支付攻击，允许攻击者覆盖并否认过去的交易。'
- en: '**Denial of Service:** An attacker can artificially raise the difficulty threshold
    of a Proof of Work blockchain, slowing block creation. A 51% attacker can refuse
    to add transactions to the blockchain, blocking them from being added to the digital
    ledger.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务拒绝攻击**：攻击者可以人为提高工作量证明区块链的难度阈值，减缓区块创建。一个51%的攻击者可以拒绝将交易添加到区块链中，阻止它们被添加到数字账本。'
- en: '**Elevation of Privileges:** 51%, long-range, selfish mining, and SPV mining
    attacks are designed to provide an attacker with complete or elevated control
    over the state of the digital ledger.  ## Block Creation'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限提升**：51%攻击、长程攻击、自私挖矿和SPV挖矿攻击旨在为攻击者提供对数字账本状态的完全或提升控制。  ## 区块创建'
- en: The blockchain is designed to be a distributed, decentralized ledger. Each node
    in the blockchain network has the ability to store a complete copy of the blockchain.
    This makes it necessary to have a formalized method of updating the ledger so
    that the network can remain synchronized.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链被设计成一个分布式、去中心化的账本。区块链网络中的每个节点都有能力存储区块链的完整副本。这使得有必要 formalized 一种更新账本的方法，以便网络能够保持同步。
- en: Blockchain achieves this by collecting individual transactions into blocks and
    updating the ledger a block at a time. The blockchain protocol is designed to
    perform these updates at (near) regular intervals, making it possible to predict
    how quickly information will be added to the distributed ledger.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链通过将单独的交易收集到区块中，一次更新账本来实现这一点。区块链协议被设计成在（接近）规律的时间间隔内执行这些更新，这使得能够预测信息被添加到分布式账本的速度。
- en: '### Stages of Block Creation'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '### 区块创建阶段'
- en: 'Adding a new block to the distributed ledger is a multistage process. The five
    main stages of ledger update are as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 向分布式账本添加新区块是一个多阶段的进程。账本更新的五个主要阶段如下：
- en: Transaction transmission
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易传输
- en: Block creator selection (consensus)
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块创建者选择（共识）
- en: Block building
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块构建
- en: Block transmission
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块传输
- en: Block validation
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块验证
- en: Each of these stages is important to the effectiveness and security of the blockchain's
    distributed ledger.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些阶段对于区块链分布式账本的有效性和安全性都是非常重要的。
- en: '#### *Transaction Transmission*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '#### *交易传输*'
- en: The first stage of the block creation process happens continuously. In this
    stage, people who are using the blockchain system generate transactions and transmit
    them to their peers in the blockchain network.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 区块创建过程的第一个阶段是持续发生的。在这个阶段，使用区块链系统的人们生成交易并将其传输到区块链网络中的同伴。
- en: For example, a Bitcoin user may generate and digitally sign a transaction before
    sending it to the nodes in the network that the user is directly connected to.
    Upon receipt of this transaction, these nodes send it on to their peers, allowing
    it to propagate across the network.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，比特币用户可能会在将交易发送到直接相连的网络节点之前生成并数字签名一个交易。收到这笔交易后，这些节点将其转发给他们的同伴，使得交易能够传播遍整个网络。
- en: 'At the time of transmission, this transaction is not considered part of the
    distributed ledger. Nodes maintain a pool of pending transactions that have not
    yet been included in blocks. When the time comes to create a block, the block
    creator will draw from this pool to create the next piece of the distributed ledger.  ####
    *Block Creator Selection (Consensus)*'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '在传输时，这笔交易不被认为是分布式账本的一部分。节点维护着一个包含尚未包含在区块中的待处理交易的数据池。当创建区块的时候，区块创建者会从这个池中提取信息来构建分布式账本接下来的部分。  ####
    *区块创建者选择（共识）*'
- en: This stage of the block creation process uses the consensus algorithms described
    earlier to select the creator of the next block. The blockchain network has no
    central authority that determines the contents of each block; however, it needs
    someone to create the official version of the block that the rest of the network
    will accept. The blockchain consensus algorithm ensures that this is completed
    in a decentralized fashion to ensure that no one can control the blockchain's
    ledger.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这个区块创建过程的这一阶段使用前面描述的共识算法来选择下一个区块的创建者。区块链网络没有中央权威来决定每个区块的内容；然而，它需要某个人来创建网络其余部分将接受的区块的官方版本。区块链共识算法确保以去中心化的方式完成这一过程，以确保没有人能控制账本。
- en: 'This step may fall earlier or later in the block creation process depending
    on the consensus algorithm used by the blockchain. In Proof of Work, the block
    needs to be created before consensus is completed since the criteria for becoming
    the block creator is the ability to generate a valid block. In Proof of Stake,
    the choice of block creator is not dependent on the contents of the block, so
    it is completed before the new block is built.  #### *Block Building*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '这一步骤可能根据区块链使用的共识算法在区块创建过程的早期或晚期发生。在工作量证明中，由于成为区块创建者的标准是生成有效区块的能力，因此需要在共识完成之前创建区块。在权益证明中，选择区块创建者的依据不是区块的内容，因此在新区块构建之前完成。  ####
    区块构建'
- en: The chosen block creator has a couple of responsibilities. The first is to put
    together a block that meets the requirements of the blockchain (maximum size,
    etc.). The second is to ensure that the block is a valid one.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 选定的区块创建者有几个责任。第一个是为区块链（最大尺寸等）的要求组装区块。第二个是确保区块是有效的。
- en: When generating a new block, block creators have complete control over its contents.
    Many blockchains include the concept of transaction fees, where users can pay
    for their transaction to be prioritized when a new block is created. A greedy
    block creator should create a block with the highest possible transaction fees
    since they receive fees included in their blocks; however, there is no obligation
    to do so. For this reason, block creators have a great deal of power in the blockchain
    network, which is why it is so important that the system remains decentralized.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 生成新区块时，区块创建者对其内容拥有完全控制权。许多区块链包含了交易费用的概念，用户可以为他们的交易支付费用以在新块创建时获得优先权。一个贪婪的区块创建者应该创建包含最高可能交易费用的区块，因为他们将收到他们区块中的费用；然而，并没有义务这样做。正因为如此，区块创建者在区块链网络中拥有很大的权力，这也是为什么系统保持去中心化如此重要的原因。
- en: 'The other important responsibility of block creators is ensuring the validity
    of the blocks that they create. One of the main threats in blockchain is a double-spend
    attack, where a user creates mutually conflicting transactions (i.e., sends the
    same cryptocurrency to two different recipients). The creator of a block is obliged
    to ensure that their block does not create any double spends within the ledger.
    Failure to do so risks a future block creator choosing not to build on top of
    their block, orphaning it and denying the block creator the rewards that they
    receive for creating the block.  #### *Block Transmission*'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '区块创建者的另一个重要责任是确保他们创建的区块的有效性。区块链中的主要威胁之一是双重支付攻击，用户创建相互冲突的交易（即向两个不同的收款人发送相同的加密货币）。区块创建者有义务确保他们的区块在账本中不创建任何双重支付。不这样做的话，未来区块创建者可能选择不在其区块上构建，使区块孤立并使区块创建者失去他们创建区块所获得的奖励。  ####
    区块传输'
- en: 'Once a block has been completed, its creator digitally signs it and transmits
    it to the rest of the blockchain network. This mimics the process of transaction
    transmission, where each node in the network transmits it to their peers once
    they receive it.  #### *Block Validation*'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦一个区块完成，它的创建者会数字签名并将其传输到区块链网络的其余部分。这模仿了交易传输的过程，其中网络中的每个节点在收到它后将其传输给他们的同伴。  ####
    区块验证'
- en: 'Finally, each node in the network needs to validate a block before adding it
    to their official copy of the distributed ledger. The consensus algorithm attempts
    to ensure that only one node in the network creates a block, but it doesn''t guarantee
    that the node is not malicious. Each node in the network performs the same search
    for double-spends that the block creator should have done and accepts the block
    only if it meets all of the blockchain''s requirements.  ### Attacking Block Creation'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，网络中的每个节点在将区块添加到他们分布式账本官方副本之前需要验证一个区块。共识算法试图确保网络中只有一个节点创建区块，但它不能保证节点不是恶意的。网络中的每个节点执行与区块创建者应该做的相同的双重支付搜索，并且仅当它满足区块链的所有要求时才接受区块。####
    攻击区块创建
- en: The block creation process is essential to updating the distributed ledger and
    making the blockchain function. However, the design of this process leaves it
    vulnerable to attacks on the blockchain's availability and the integrity of the
    data that it contains.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 区块创建过程对于更新分布式账本和使区块链运行至关重要。然而，这一过程的设计使它容易受到针对区块链可用性和它所包含数据完整性的攻击。
- en: '#### *Denial of Service*'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 服务拒绝'
- en: A denial-of-service attack is a common type of attack against any system. By
    overwhelming some component of the system's ability to process inputs, it degrades
    or destroys the effectiveness of the system as a whole. While blockchain's decentralization
    makes it immune to some types of denial-of-service attacks, others are still possible.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 服务拒绝攻击是针对任何系统的常见攻击类型。通过使系统某个组件处理输入的能力过载，它降低了或破坏了系统整体的有效性。尽管区块链的去中心化使其对某些服务拒绝攻击免疫，但其他攻击仍然可能发生。
- en: One type of denial-of-service attack that targets the block creation process
    involves transaction flooding. By creating a large number of spam transactions
    and posting them to the blockchain, an attacker can have both short-term and long-term
    impacts on the blockchain's functioning.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一种针对区块创建过程的服务拒绝攻击涉及交易洪水。通过创建大量垃圾交易并将其发布到区块链，攻击者可以对区块链的功能产生短期和长期影响。
- en: In the short term, transaction flooding impacts the ability of legitimate transactions
    to be added to the distributed ledger. Blockchains often have set block sizes
    and block rates, meaning they have a set maximum capacity. If an attacker's spam
    transactions take up any part of this capacity, it reduces the ability of the
    blockchain to process legitimate transactions.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在短期内，交易洪水影响合法交易添加到分布式账本的能力。区块链通常具有固定的区块大小和区块率，这意味着它们有一个固定的最大容量。如果攻击者的垃圾交易占据了这部分容量，它就会降低区块链处理合法交易的能力。
- en: One way that blockchains combat spam transactions is by including transaction
    fees, making an attacker pay to attack the blockchain. However, if an attacker
    is undeterred by the cost, this can have another short-term impact on the blockchain.
    In order to have their transactions added to the ledger during an attack, legitimate
    users will have to pay higher fees for priority. Increasing the cost of using
    the system decreases its usability.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链对抗垃圾交易的一种方式是通过包含交易费用，使攻击者支付攻击区块链的成本。然而，如果攻击者不因成本而却步，这可能会对区块链产生另一种短期影响。为了在攻击期间将交易添加到账本，合法用户将不得不支付更高的费用以获得优先权。增加系统使用的成本会降低其可用性。
- en: The potential long-term impact of this attack is bloat on the blockchain. A
    crucial feature of blockchain technology is its immutability, meaning that every
    transaction that makes it onto the ledger must be stored forever (and checked
    during validation). Every spam transaction that makes it onto the distributed
    ledger makes the system that much less usable.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击的潜在长期影响是区块链的膨胀。区块链技术的一个关键特性是其不可变性，意味着一旦交易记录在账本上，就必须永远保存（并在验证时进行检查）。分布式账本上的每一个垃圾交易都会使系统变得不那么可用。
- en: This is only one form of denial-of-service attack that can impact the block
    creation process. Block creation can also be disrupted by any attack that inhibits
    the creation, transmission, or validation of blocks, such as a distributed denial-of-service
    (DDoS) attack against the block creator or an attempt to disrupt communications
    over the peer-to-peer network.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是可能影响区块创建过程的一种服务拒绝攻击。区块创建也可能因任何抑制区块创建、传输或验证的攻击而受到干扰，例如针对区块创建者的分布式拒绝服务（DDoS）攻击或试图干扰点对点网络上的通信。
- en: '##### Countermeasures'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '##### 应对措施'
- en: Protection against these types of denial-of-service attacks requires individual
    action by the affected nodes. For example, block creators can refuse to include
    spam transactions in their blocks, keeping them from affecting the digital ledger,
    and deploy DDoS mitigation solutions.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 保护免受这类服务拒绝攻击需要受影响节点的单独行动。例如，区块创建者可以拒绝在他们的区块中包含垃圾交易，以防止它们影响数字账本，并部署DDoS缓解解决方案。
- en: 'However, these approaches have their challenges, such as differentiating legitimate
    from spam transactions. Additionally, this requires relying on a particular node
    to protect the blockchain, which violates blockchain''s goals of decentralization
    and not requiring trust in other nodes.  ##### Case Studies'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '然而，这些方法有其挑战，例如区分合法交易和垃圾交易。此外，这需要依赖特定的节点来保护区块链，这违反了区块链的去中心化目标和对其他节点的信任要求。  #####
    案例研究'
- en: The Solana blockchain has suffered from repeated incidents that may be transaction
    flooding DDoS attacks or legitimate traffic overwhelming the network.[⁸](#c03-note-0008)
    These incidents take advantage of the fact that the Solana blockchain has extremely
    low transaction fees (0.00025 per transaction), making it affordable to flood
    the blockchain network with spam transactions.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 索拉纳区块链曾多次遭遇可能为交易洪水DDoS攻击或合法流量压垮网络的事件。[⁸](#c03-note-0008) 这些事件利用了索拉纳区块链交易费用极低（每笔交易0.00025美元）的事实，使得用垃圾交易淹没区块链网络变得负担得起。
- en: 'Other blockchains have experienced DDoS attacks designed to make a profit for
    the attackers. An attack in March 2020 caused significant congestion on the Ethereum
    network at the same time that Ether''s value decreased significantly. These price
    decreases caused collateral on the MakerDAO lending platform to be auctioned off.
    The attackers were able to win auctions with zero-bid transactions because competing
    bids couldn''t get through, netting them $8.3 million.[⁹](#c03-note-0009)  ####
    *Frontrunning*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '其他区块链经历过旨在为攻击者获利的DDoS攻击。2020年3月的一次攻击导致以太坊网络出现重大拥堵，同时以太币的价值大幅下跌。这种价格下跌导致MakerDAO借贷平台上的抵押品被拍卖。攻击者能够以零出价交易赢得拍卖，因为竞争性出价无法通过，从而获得830万美元。[⁹](#c03-note-0009)  ####
    *抢跑交易*'
- en: In blockchain, the delay between the public transmission of a transaction and
    its inclusion in the distributed ledger creates the potential for “frontrunning”
    attacks. A blockchain system can have situations where being the first to submit
    a solution has a tangible benefit. For example, an auction can be run on the blockchain
    where, if two bidders have the same maximum that they are willing to bid, whichever
    one can place their bid first wins.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链上，交易公开传输与分布式账本中纳入之间的时间延迟创造了“抢跑”攻击的潜在可能。一个区块链系统可能存在这样的情况：第一个提交解决方案具有实际利益。例如，可以在区块链上运行拍卖，如果两个出价者愿意出的最高价相同，那么先提交出价的人获胜。
- en: On blockchain, submitting a bid would require creating and broadcasting a transaction
    to the network. At the time of broadcast, this transaction is not trusted or considered
    part of the distributed ledger. Instead, it is stored in a pool of similar, untrusted
    transactions until the next block is ready to be created. At this point, the block
    creator will build a block that may contain this transaction and add it to the
    blockchain.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链上，提交出价需要创建并广播一个交易给网络。在广播时，这个交易不被信任或被视为分布式账本的一部分。相反，它被存储在与类似的不信任交易池中，直到下一个区块准备好被创建。在这个时刻，区块创建者将构建一个可能包含此交易的区块并将其添加到区块链上。
- en: If this block creator is motivated by self-interest (which blockchain encourages),
    they will order transactions in the block based upon their associated transaction
    fees. This means that a transaction created later but with a higher transaction
    fee will be given priority. Therefore, a participant in the auction who observes
    the bid transaction and makes the same bid but with a higher transaction fee is
    likely to be the one seen first and chosen by the auctioneer. On blockchain, the
    first transaction created isn't necessarily the first one processed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个区块创建者是由自我利益驱动的（这是区块链所鼓励的），他们将会根据相关交易费用来排序区块中的交易。这意味着后来创建但费用更高的交易将会被优先考虑。因此，在拍卖中观察到出价交易并做出相同出价但费用更高的参与者很可能会首先被拍卖师看到并选择。在区块链上，第一个创建的交易不一定是最先处理的。
- en: '##### Countermeasures'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '##### 应对措施'
- en: Frontrunning attacks take advantage of the fact that transactions are publicized
    to the blockchain network before they are included within a block. This provides
    an attacker with a window in which to create a competing transaction that might
    be added and processed first.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 抢跑攻击利用了交易在包含在区块之前先公布于区块链网络的事实。这为攻击者提供了一个窗口，在窗口期内创建一个可能首先被添加和处理的有竞争关系的交易。
- en: One solution to this problem is exclusive mining, in which a transaction creator
    only shares a transaction with a single potential block creator. When this node
    is next selected to create a block, they can include the transaction in it. This
    prevents frontrunning because the transaction is only made public once it has
    already been added to the ledger. Unless an attacker performs a 51% attack, there
    is no way for a frontrunning transaction to come before it.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的一种方法是独家采矿，即交易创建者只与一个潜在的区块创建者分享交易。当这个节点下一次被选中创建区块时，他们可以在其中包含该交易。这防止了前置运行，因为只有在交易已经添加到账本后，它才会被公开。除非攻击者进行51%攻击，否则前置运行交易无法出现在之前。
- en: 'This approach has been used in the past to protect transactions designed to
    exploit a vulnerability before a hacker can. In 2020, a white-hat hack of a vulnerability
    in a Lien Finance smart contract protected over $9.6 million in tokens from being
    stolen by an attacker.[^(10)](#c03-note-0010) The exploit involved the use of
    exclusive mining by the SparkPool mining pool to protect against frontrunning
    attacks.  ##### Case Studies'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法在过去曾被用来在黑客之前利用漏洞保护交易。2020年，一个针对Lien Finance智能合约的白色黑客利用了独家采矿，保护了超过960万美元的代币免遭攻击者盗窃。[^(10)](#c03-note-0010)这次利用涉及SparkPool矿池的独家采矿，以保护免受前置运行攻击。#####
    案例研究
- en: Frontrunning attacks are common occurrences in the decentralized finance (DeFi)
    spots. Automated bots scan the pools of pending transactions for trades that they
    can exploit, frontrunning the transaction to buy low and sell high.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 前置运行攻击在去中心化金融（DeFi）领域很常见。自动化机器人扫描待处理的交易池，寻找可以利用的交易，通过前置运行交易以低价买入和高价卖出。
- en: 'While these bots are designed to exploit other blockchain users, they occasionally
    end up doing more good than evil. In a hack against the DODO decentralized exchange
    (DEX), for example, a bot “front ran” transactions by an attacker trying to exploit
    the vulnerable DEX.[^(11)](#c03-note-0011) Of the $3.8 million in tokens extracted
    from the protocol, $1.89 million was taken by the bot and later returned to the
    protocol by the bot''s owner.  #### *SPV Mining*'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些机器人旨在利用其他区块链用户，但它们偶尔会带来更多的好处而非坏处。例如，在针对DODO去中心化交易所（DEX）的攻击中，一个机器人通过“前置运行”攻击者试图利用脆弱的DEX的交易。[^(11)](#c03-note-0011)从协议中提取的380万美元代币中，189万美元由机器人取出，后来由机器人的所有者归还给协议。####
    SPV采矿
- en: SPV mining was mentioned previously since it is an attack against Proof of Work
    consensus. However, it also applies to the block creation process. SPV miners
    deliberately skip steps of the block creation process in order to gain an advantage.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 前面提到了SPV采矿，因为它是对工作量证明（Proof of Work）共识的攻击。然而，它也适用于区块创建过程。SPV矿工故意跳过区块创建过程中的步骤，以获得优势。
- en: 'A legitimate miner must download a complete copy of each block in the blockchain
    and then validate that they are not creating double-spends with their new block.
    An SPV miner skips both of these steps since a block that only contains the miner''s
    block reward can''t possibly include a double-spend.  ### Threat Modeling for
    Block Creation'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 一个合法的矿工必须下载区块链中每个块的完整副本，然后验证他们的新块是否在与自己的块奖励相同的区块中创造了双重花费。SPV矿工跳过这两步，因为只包含矿工的块奖励的区块不可能包含双重花费。###
    区块创建的威胁建模
- en: 'Mapping attacks against block creation to the STRIDE threat model highlights
    the following threats:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 将针对区块创建的攻击映射到STRIDE威胁模型中，突出了以下威胁：
- en: '**Tampering:** Frontrunning attacks are designed to allow later transactions
    to be processed before earlier ones, changing the impacts of these transactions.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**篡改：**前置运行攻击旨在允许后来者先处理较早的交易，从而改变这些交易的影响。'
- en: '**Denial of Service:** An attacker can perform a denial-of-service attack in
    various ways, slowing or stopping block creation and the addition of transactions
    to the digital ledger.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务拒绝：**攻击者可以以多种方式执行服务拒绝攻击，减缓或阻止区块创建以及数字账本中交易的添加。'
- en: '**Elevation of Privileges:** SPV mining provides an attacker with an increased
    probability of creating blocks and greater control over the contents of the digital
    ledger.  ## Conclusion'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限提升：**SPV采矿为攻击者提供了创建区块的概率增加和更大程度地控制数字账本内容的机会。## 结论'
- en: The blockchain protocols define the theory of blockchain. Consensus algorithms
    describe how mutually distrusting blockchain nodes work together to choose block
    producers, and the block creation protocol outlines how the network will organize
    and validate transactions to update the blockchain's ledger.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链协议定义了区块链的理论。共识算法描述了如何让相互不信任的区块链节点共同选择区块生产者，而区块创建协议概述了网络将如何组织和验证交易以更新区块链账本。
- en: 'In the next chapter, we''ll move on from theory to practice. Blockchain systems
    are implemented as software that runs on computers and communicates over modern
    networks. This underlying infrastructure introduces new security considerations
    and potential attack vectors.  ## Notes'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从理论转向实践。区块链系统作为运行在计算机上的软件，并通过现代网络进行通信。这种底层基础设施带来了新的安全考虑和潜在的攻击向量。##
    注释
- en: '[1](#R_c03-note-0001).  `[https://lamport.azurewebsites.net/pubs/byz.pdf](https://lamport.azurewebsites.net/pubs/byz.pdf)`'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[1](#R_c03-note-0001). `[https://lamport.azurewebsites.net/pubs/byz.pdf](https://lamport.azurewebsites.net/pubs/byz.pdf)`'
- en: '[2](#R_c03-note-0002).  `[https://hacked.slowmist.io/en/?c=Blockchain](https://hacked.slowmist.io/en/?c=Blockchain)`'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[2](#R_c03-note-0002). `[https://hacked.slowmist.io/en/?c=Blockchain](https://hacked.slowmist.io/en/?c=Blockchain)`'
- en: '[3](#R_c03-note-0003).  `[https://blog.theabacus.io/the-verge-hack-explained-7942f63a3017](https://blog.theabacus.io/the-verge-hack-explained-7942f63a3017)`'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[3](#R_c03-note-0003). `[https://blog.theabacus.io/the-verge-hack-explained-7942f63a3017](https://blog.theabacus.io/the-verge-hack-explained-7942f63a3017)`'
- en: '[4](#R_c03-note-0004).  `[https://decrypt.co/3506/spy-mining-hits-ethereum](https://decrypt.co/3506/spy-mining-hits-ethereum)`'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[4](#R_c03-note-0004). `[https://decrypt.co/3506/spy-mining-hits-ethereum](https://decrypt.co/3506/spy-mining-hits-ethereum)`'
- en: '[5](#R_c03-note-0005).  `[https://decrypt.co/3506/spy-mining-hits-ethereum](https://decrypt.co/3506/spy-mining-hits-ethereum)`'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[5](#R_c03-note-0005). `[https://decrypt.co/3506/spy-mining-hits-ethereum](https://decrypt.co/3506/spy-mining-hits-ethereum)`'
- en: '[6](#R_c03-note-0006).  `[https://medium.com/@dsl_uiuc/fake-stake-attacks-on-chain-based-proof-of-stake-cryptocurrencies-b8b05723f806](https://medium.com/@dsl_uiuc/fake-stake-attacks-on-chain-based-proof-of-stake-cryptocurrencies-b8b05723f806)`'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[6](#R_c03-note-0006). `[https://medium.com/@dsl_uiuc/fake-stake-attacks-on-chain-based-proof-of-stake-cryptocurrencies-b8b05723f806](https://medium.com/@dsl_uiuc/fake-stake-attacks-on-chain-based-proof-of-stake-cryptocurrencies-b8b05723f806)`'
- en: '[7](#R_c03-note-0007).  `[https://cointelegraph.com/news/expensive-lesson-75-eth2-validators-slashed-for-introducing-potential-chain-split-bug](https://cointelegraph.com/news/expensive-lesson-75-eth2-validators-slashed-for-introducing-potential-chain-split-bug)`'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[7](#R_c03-note-0007). `[https://cointelegraph.com/'
- en: '[8](#R_c03-note-0008).  `[https://cryptonews.com/news/solana-reportedly-went-down-again-after-ddos-attack.htm](https://cryptonews.com/news/solana-reportedly-went-down-again-after-ddos-attack.htm)`'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[8](#R_c03-note-0008). `[https://cryptonews.com/news/solana-reportedly-went-down-again-after-ddos-attack.htm](https://cryptonews.com/news/solana-reportedly-went-down-again-after-ddos-attack.htm)`'
- en: '[9](#R_c03-note-0009).  `[www.coindesk.com/tech/2020/07/22/mempool-manipulation-enabled-theft-of-8m-in-makerdao-collateral-on-black-thursday-report](https://www.coindesk.com/tech/2020/07/22/mempool-manipulation-enabled-theft-of-8m-in-makerdao-collateral-on-black-thursday-report)`'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[9](#R_c03-note-0009). `[www.coindesk.com/tech/2020/07/22/mempool-manipulation-enabled-theft-of-8m-in-makerdao-collateral-on-black-thursday-report](https://www.coindesk.com/tech/2020/07/22/mempool-manipulation-enabled-theft-of-8m-in-makerdao-collateral-on-black-thursday-report)`'
- en: '[10](#R_c03-note-0010). `[https://samczsun.com/escaping-the-dark-forest](https://samczsun.com/escaping-the-dark-forest)`'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[10](#R_c03-note-0010). `[https://samczsun.com/escaping-the-dark-forest](https://samczsun.com/escaping-the-dark-forest)`'
- en: '[11](#R_c03-note-0011). `[https://dodoexhelp.zendesk.com/hc/en-us/articles/900004851126-Important-update-regarding-recent-events-on-DODO](https://dodoexhelp.zendesk.com/hc/en-us/articles/900004851126-Important-update-regarding-recent-events-on-DODO)`'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[11](#R_c03-note-0011). `[https://dodoexhelp.zendesk.com/hc/en-us/articles/900004851126-Important-update-regarding-recent-events-on-DODO](https://dodoexhelp.zendesk.com/hc/en-us/articles/900004851126-Important-update-regarding-recent-events-on-DODO)`'
