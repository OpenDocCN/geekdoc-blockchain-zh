- en: © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2022M.
    Dutta Borah et al. (eds.)AI and Blockchain Technology in 6G Wireless NetworkBlockchain
    Technologies[https://doi.org/10.1007/978-981-19-2868-0_7](https://doi.org/10.1007/978-981-19-2868-0_7)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者（们），在独家许可下授予 Springer Nature Singapore Pte Ltd. 2022M. Dutta Borah 等人（编辑）AI
    和区块链技术在 6G 无线网络中的应用区块链技术[https://doi.org/10.1007/978-981-19-2868-0_7](https://doi.org/10.1007/978-981-19-2868-0_7)
- en: Computation Time Estimation of Switches and Controllers Process on 6G-Based
    SDN-Cyber Security Forensics Architecture in the Blockchain-Based IoT Environment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于区块链的物联网环境中 6G 基础 SDN-网络安全取证架构上的交换机和控制器处理的计算时间估算
- en: 'Deepashika J. Rathnayake^([1](#Aff7) [ ](#ContactOfAuthor1)) and Malka Halgamuge^([2](#Aff8) [ ](#ContactOfAuthor2))(1)Charles
    Sturt University, Melbourne, VIC, Australia(2)Department of Electrical and Electronic
    Engineering, The University of Melbourne, Parkville, VIC, AustraliaDeepashika J. Rathnayake (Corresponding
    author)Email: [deepashika.r@gmail.com](mailto:deepashika.r@gmail.com)Malka HalgamugeEmail:
    [malka.nisha@unimelb.edu.au](mailto:malka.nisha@unimelb.edu.au)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Deepashika J. Rathnayake^([1](#Aff7) [ ](#ContactOfAuthor1)) 和 Malka Halgamuge^([2](#Aff8) [ ](#ContactOfAuthor2))(1)Charles
    Sturt 大学，澳大利亚墨尔本，维多利亚州(2)墨尔本大学电气与电子工程系，澳大利亚墨尔本，帕克维尔，维多利亚州Deepashika J. Rathnayake（通讯作者）电子邮件：[deepashika.r@gmail.com](mailto:deepashika.r@gmail.com)Malka Halgamuge电子邮件：[malka.nisha@unimelb.edu.au](mailto:malka.nisha@unimelb.edu.au)
- en: Abstract
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: Improving the security of blockchain-based Software-Defined Networking (SDN)
    is discussed in recent studies. The blockchain is utilized on the SDN-based Internet
    of Things to meet some security provisioning challenges, data integrity, and evidence
    alternation in digital forensics in cybersecurity. Finding a computation time
    estimation solution is prominent to overcome the computational time complexity
    of the 6G-based SDN-forensic architecture in a blockchain-based IoT environment.
    Functionalities of Software-Defined Networking dynamically control the network
    flow on the 6G-based SDN-forensic architecture. We develop a model to estimate
    the computational time on the SDN-cyber forensics architecture that works in a
    blockchain-based IoT environment in the 6G network. Our results demonstrate the
    total time consumption on the SDN-forensic network is high regardless of the number
    of IoT devices. We show the time consumption of controllers is higher than the
    time consumption on switches. Additionally, we observe the impact of the number
    of IoT devices on time consumption in switches and controllers. Basic sense, forensic-based
    processing delay affects the total network progress in the SDN-forensic network.
    The lower scalability of the 6G-based forensic network is not able to perform
    securely, as the traffic provided is less. As a result, it can have a significant
    impact on the final productivity. The low scalable forensic network continuously
    engages in a wasteful activity and thus is unable to fully benefit as a result
    of latency and scalability concerns. Therefore, it has the potential to significantly
    affect final throughput. In conclusion, this chapter presents a comprehensive
    analysis of computation time for future research to find ways to overcome the
    time complexity of blockchain-based Software-Defined Networking in the 6G environment.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 近期研究讨论了改善基于区块链的软件定义网络（SDN）的安全性。在基于 SDN 的物联网中利用区块链解决了一些安全性提供挑战，数据完整性以及数字取证中的证据篡改问题。找到计算时间估算的解决方案对于克服区块链基础的物联网环境中
    6G 基础 SDN-取证架构的计算时间复杂性至关重要。软件定义网络的功能可以动态控制 6G 基础 SDN-取证架构上的网络流量。我们开发了一个模型来估算在
    6G 网络中运行的基于区块链的物联网环境中 SDN-网络取证架构上的计算时间。我们的结果表明，无论 IoT 设备数量如何，SDN-取证网络的总耗时都很高。我们展示了控制器的时间消耗高于交换机的时间消耗。此外，我们观察到
    IoT 设备数量对交换机和控制器的时间消耗的影响。基本上，基于取证的处理延迟会影响 SDN-取证网络的总体进度。6G 基础取证网络的低可扩展性无法安全地执行，因为提供的流量较少。因此，这可能对最终生产率产生重大影响。低可扩展性的取证网络持续参与低效活动，因此无法充分利用由于延迟和可扩展性问题导致的潜在影响。因此，它有可能对最终吞吐量产生重大影响。总之，本章对未来研究的计算时间进行了全面分析，以找到克服区块链技术在
    6G 环境中的软件定义网络的时间复杂性的方法。
- en: KeywordsBlockchain6GCybersecurityLatency Software-Defined NetworkingSDN-forensic
    architectureSwitchesControllersComputational timeThroughput
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 关键词 区块链 6G 网络安全 延迟 软件定义网络 SDN-取证架构 交换机 控制器 计算时间 吞吐量
- en: 1 Introduction
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: The network management system in 6G is evolving toward integration, distribution,
    diversity, and intelligence as information technology advances. The 6G will enable
    revolutionary applications by merging sensing, imaging, and precise timing with
    mobility and truly leveraging artificial intelligence and intelligent networks
    such as forensic software-defined networks. The 6G-based forensic network system
    will improve 5G in terms of performance and user Quality of Service (QoS) while
    also adding some fascinating new features in the SDN-forensic network. It will
    protect the forensic system and user information. It will offer convenient services.
    The SDN is also seen as a key technology for the 6G network. One of the most significant
    criteria for a 6G network architecture is flexibility, as well as the improvement
    of 6G network performance, which SDN technology can achieve. There is a novel
    network management approach which has a massive network with heterogeneous devices.
    By decoupling the control plane from the data plan in the 6G network, SDN can
    overcome the vertical integration.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 6G 中的网络管理系统随着信息技术的进步正在向集成、分布、多样性和智能发展。6G 将通过将感知、成像和精确定时与移动性相结合，并真正利用人工智能和智能网络，如法庭软件定义的网络，实现革命性的应用。基于
    6G 的法庭网络系统将在性能和用户服务质量（QoS）方面改进 5G，同时在 SDN-法庭网络中增加一些引人入胜的新功能。它将保护法庭系统和用户信息。它将提供便利的服务。SDN
    也被视为 6G 网络的关键技术之一。6G 网络架构的最重要标准之一是灵活性，以及 SDN 技术可以实现的改进 6G 网络性能。有一种新颖的网络管理方法，其具有大量异构设备的大型网络。通过在
    6G 网络中解耦控制平面和数据平面，SDN 可以克服垂直集成。
- en: Blockchain is the solution for SDN that can audit forensically unchanged logs.
    Blockchain is the leading software platform globally that helps for security enhancement
    and the quality control perspective of digital forensics. Private key cryptography,
    shared ledger distributed network, and network service transaction incentives
    are the three technologies that keep blockchain records securely [[1](#CR1)].
    In previous studies, secure automation is discussed. However, it is becoming increasingly
    difficult to ignore controllers’ computation time and switches in 6G SDN-cyber
    forensics architecture in cybersecurity in the blockchain-based IoT environment.
    The computation time of switches and controllers plays a vital role in SDN-forensics
    architecture in cybersecurity. Usually, a large number of IoT devices connect
    with blockchain networks through a gateway.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是可以对 SDN 进行审计以确保不可更改日志的解决方案。区块链是全球领先的软件平台，有助于数字取证的安全增强和质量控制。私钥加密、共享账本分布式网络和网络服务交易激励是保持区块链记录安全的三种技术
    [[1](#CR1)]。在先前的研究中，讨论了安全自动化。然而，在基于区块链的物联网环境中的 6G SDN-网络取证体系结构中，越来越难以忽视控制器的计算时间和交换机的作用。交换机和控制器的计算时间在网络安全中的
    SDN-取证架构中起着至关重要的作用。通常，大量的物联网设备通过网关连接到区块链网络。
- en: Estimating computation time allows identifying the time consumption of switches
    in the data plane and controllers in the control plane. Furthermore, we study
    the effect of security in signature verification and the digital signature providing
    secure control ownership. The purpose of this chapter is to review the recent
    estimation of computation time during the SDN-forensics lifecycle in cybersecurity
    of the blockchain-based IoT environment. A novel blockchain-based distributed
    cloud architecture with software defined networking enables controller fog nodes
    at the edge of the network to meet the required design principles [[1](#CR1),
    [2](#CR2)]. Cyber Forensics users are validated by using the hash algorithm in
    the control plane, and data is secured by homomorphic encryption with high privacy
    in a decentralized model. It protects non-authorized modifications, authenticity,
    and non-repudiation. The novel blockchain-based architecture provides low-cost,
    secure, and on-demand access and addresses high availability, real-time data delivery,
    scalability, security, resilience, and low latency.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 估算计算时间允许识别数据平面中交换机和控制平面中控制器的时间消耗。此外，我们研究了签名验证中安全性的影响以及数字签名提供的安全控制所有权。本章的目的是在区块链物联网环境中回顾SDN取证生命周期中的最近计算时间估算。一种新颖的基于区块链的分布式云架构结合软件定义网络使得网络边缘的控制器雾节点能够满足所需的设计原则[[1](#CR1)，[2](#CR2)]。通过在控制平面中使用哈希算法验证网络取证用户，并且在分布式模型中采用同态加密对数据进行了高隐私保护。它保护了非授权修改、真实性和不可否认性。这种新颖的基于区块链的架构提供了低成本、安全和按需访问，并解决了高可用性、实时数据传递、可扩展性、安全性、韧性和低延迟等问题。
- en: An electric vehicle power trading model based on blockchain and smart contract
    dramatically improves energy efficiency and cost-effectiveness, achieving efficient
    operation [[4](#CR4)]. The SDN-based energy internet is a distributed architecture
    supported by blockchain that achieves a good match of the transaction object protection
    [[5](#CR5)]. So far, there has been little discussion about the security and privacy
    of blockchain and SDN. We have found a computational time estimation model on
    the 6G-based SDN-forensics architecture in a cybersecurity blockchain-based IoT
    environment.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链和智能合约的电动汽车功率交易模型显著提高了能源效率和成本效益，实现了高效运行[[4](#CR4)]。基于SDN的能源互联网是一种由区块链支持的分布式架构，实现了交易对象保护的良好匹配[[5](#CR5)]。到目前为止，关于区块链和SDN的安全性和隐私性讨论很少。我们在基于网络安全区块链的IoT环境中找到了一个基于6G的SDN取证架构的计算时间估算模型。
- en: 1.1 Motivation
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.1 动机
- en: The time estimation of SDN-forensic architecture in a blockchain-based IoT environment
    is the prominent solution to overcome the computation complexity of blockchain-based
    6G SDN. Most of the previous work focused on security issues, network complexity,
    and latency issues of Software-Defined Networking. To address these security issues,
    blockchain technology is used. However, there is no systematic model to estimate
    the computational time on SDN-forensics architecture in a cybersecurity blockchain-based
    6G IoT environment. Therefore, our motivation is to propose a model to estimate
    total time consumption to overcome the high-level complexity of computational
    time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于区块链的6G SDN的计算复杂性上，SDN取证架构的时间估算是克服的主要解决方案。大多数以前的工作都集中在软件定义网络的安全问题、网络复杂性和延迟问题上。为了解决这些安全问题，使用了区块链技术。然而，在区块链物联网环境中，没有系统的模型来估算SDN取证架构的计算时间。因此，我们的动机是提出一个模型来估算总时间消耗，以克服高水平的计算时间复杂性。
- en: 1.2 Main Contribution of the Chapter
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.2 本章的主要贡献
- en: 'The computational time estimation model proposed in this study analyzes the
    time consumption of switches and controllers on 6G-based SDN-forensic architecture
    in a cybersecurity blockchain-based 6G IoT environment. Therefore:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本研究提出的计算时间估算模型分析了基于6G的SDN取证架构中交换机和控制器的时间消耗。因此：
- en: We propose a model to estimate the total time consumption on SDN-forensic architecture
    in cybersecurity for switches and controllers on SDN-cyber forensic architecture
    in a blockchain-based IoT environment.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提出了一个模型，用于估算区块链物联网环境中基于SDN取证架构的交换机和控制器在网络安全中的总时间消耗。
- en: We observe the time consumption for switches and controllers with the increment
    of the number of IoT devices and the amount of data.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们观察了随着物联网设备数量和数据量的增加而交换机和控制器的时间消耗。
- en: 'The rest of this chapter is organized as follows: Sect. [2](#Sec2) begins by
    laying out the materials and methodology of the research, and Sect. [3](#Sec3)
    illustrates the significant achievements of the proposed work, along with the
    results obtained. Finally, Sect. [4](#Sec4) concludes this chapter by outlining
    future directions.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分组织如下：[2](#Sec2)节首先介绍了研究的材料和方法，[3](#Sec3)节阐述了提出工作的重大成就以及所获得的结果。最后，[4](#Sec4)节总结了本章并概述了未来的方向。
- en: 2 Materials and Methods
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 材料和方法
- en: The digital signature is the critical control in forensic SDN. The forensic
    network uses a mathematical algorithm to provide authenticity of the data and
    protection against forgery. Blockchain allows multiple signatures. Blockchain
    adds the most value in the concept of consensus; transactions cannot be edited
    or deleted, which significantly secures transactions and signature technologies.
    Hence, the security issues related to the blockchain are essential in conditions
    for cybersecurity. In this sense, security experts need to fully understand the
    scope and impact of security and privacy challenges related to the blockchain
    before predicting potential harm from an attack and checking if current technology
    can withstand constant hacking attempts. There is a threat from hackers that they
    use many different ways to infiltrate a cyber-forensic network, this could be
    a phishing attack in which hackers mimic a Wi-Fi network or program and urge employees
    of an organization to log in and give them their credentials. The hash key is
    utilized for integrity checking as it is the digital signature. When considering
    SDN controller forensics architecture in cybersecurity, it develops an algorithm
    to verify the user. Each user signature validates before getting permission to
    the data logs, and then it becomes authentic and legitimate. Blockchain is utilized
    in the control plane, and y has made significant contributions to cybersecurity
    due to its immutability, traceability, decentralization, and transparency. Encryption
    and verification are two of the essential parts of a cybersecurity network, and
    blockchain offers both. In cyber-forensic architecture, the algorithm is running
    in a blockchain network. Block 1, block 2, block 3, and block 4 are the secondary
    evidence databases, and each block contains *block_header, block_body, hash, previous_block_hash,
    time_stamp, forensic_data_set, consensus_algorithm, nonce, version,* and *evidence
    source*. Once the evidence reaches from the IoT device, its destination is signed.
    The signature is created using a private key and securely stored by the signer.
    No matter about any kind of cyber-attack, we use a decentralized database in the
    forensic network as the blockchain is decentralized by nature, which means there
    is no single point of penetration for hackers to invade. Also, it mitigates the
    risk that comes from any single node being compromised. The blockchain is also
    operating on a multi-signature authentication model, which avoids usernames and
    passwords in favor of user authentication by confirming that they have access
    to multiple devices. This is a more secure way to grant network access, ultimately
    reducing the ease and frequency of breaches and better protecting forensic data
    (Fig. [1](#Fig1)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名是法庭 SDN 中的关键控制。司法网络使用数学算法提供数据的真实性和防伪保护。区块链允许多重签名。区块链在共识概念中增加了最大的价值；交易无法被编辑或删除，这极大地保障了交易和签名技术。因此，与区块链相关的安全问题对于网络安全至关重要。在这方面，安全专家在预测攻击可能造成的潜在伤害并检查当前技术是否能够抵御持续的黑客攻击之前，需要充分了解与区块链相关的安全和隐私挑战的范围和影响。黑客存在使用许多不同方式渗透网络取证的威胁，这可能是一种钓鱼攻击，其中黑客模仿一个
    Wi-Fi 网络或程序，并敦促组织的员工登录并提供他们的凭据。哈希密钥被用于完整性检查，因为它是数字签名。在考虑网络安全中的 SDN 控制器取证架构时，它开发了一种算法来验证用户。每个用户签名在获得数据日志权限之前都会验证，然后它变得真实和合法。区块链在控制平面中被使用，并由于其不可变性、可追溯性、去中心化和透明性而对网络安全做出了重大贡献。加密和验证是网络安全网络中的两个重要部分，而区块链提供了这两者。在网络取证架构中，算法正在一个区块链网络中运行。块
    1、块 2、块 3 和块 4 是次要证据数据库，每个块包含 *块头、块体、哈希、上一个块哈希、时间戳、取证数据集、共识算法、随机数、版本* 和 *证据来源*。一旦证据从物联网设备到达，它的目的地就被签署。签名是使用私钥创建的，并由签署者安全地存储。无论任何类型的网络攻击，我们都使用分布式数据库在取证网络中，因为区块链天生是分散的，这意味着黑客没有单一的渗透点可以侵入。此外，它减轻了来自任何单一节点被破坏的风险。区块链还采用了多重签名认证模型，这避免了用户名和密码，而是通过确认他们有多个设备的访问权限来进行用户认证。这是一种更安全的网络访问授权方式，最终降低了入侵的便利性和频率，并更好地保护了取证数据（图[1](#Fig1)）。
- en: 3 Computation Time Estimation on SDN-Forensic Architecture in Blockchain-IoT
    Environment
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在区块链-物联网环境中的 SDN-取证架构上的计算时间估算
- en: Blockchain technology is utilized in the cyber forensics environment to facilitate
    modern digital cyber forensics. The Internet of Things is incorporated with digital
    cyber forensics introducing complexity to cyberspace. Records generated by IoT
    devices can assist with event reconstruction. The ubiquitous deployment of IoT
    devices enhances connectivity and communication through the 6G network. Its integrity
    and thus, its acceptability can only be achieved if the chain of custody (CoC)
    is maintained as its blockchain within the broader context of the ongoing digital
    investigation. Therefore, the blockchain acts as a controller of lacking data
    and server compromise of service quality in the digital forensics’ environment
    with cybersecurity 6G network.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术被应用于网络取证环境，以促进现代数字网络取证。物联网与数字网络取证相结合，为网络空间引入了复杂性。物联网设备生成的记录可以协助事件重建。物联网设备的普遍部署通过
    6G 网络增强了连接性和通信。只有在维护链式监管（CoC）作为其区块链的情况下，其完整性及其可接受性才能实现，并纳入正在进行的数字调查的更广泛背景中。因此，区块链在网络取证环境中扮演着缺失数据和服务器受损以及网络安全
    6G 网络服务质量的控制器角色。
- en: Figure [2](#Fig2) demonstrates the total Time Computation Estimation for 6G
    SDN-forensic architecture in the blockchain-IoT environment:![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig1_HTML.png)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图[2](#Fig2)展示了基于区块链-IoT环境中的 6G SDN-取证架构的总时间计算估算：![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig1_HTML.png)
- en: Figure presents the relationship between the Signing process, Verification Process,
    and blockchain network.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图表展示了签名过程、验证过程和区块链网络之间的关系。
- en: Fig. 1
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1
- en: Digital signature works in SDN-forensic architecture in the blockchain-based
    IoT environment with secure access for the evidence database. The forensic user
    enters the digital signature on an electronic document that is encrypted. After
    the verification process, the user obtains a block of evidence for the blockchain
    network
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于区块链的物联网环境中，数字签名在SDN-取证架构中起作用，为证据数据库提供安全访问。取证用户在加密的电子文档上输入数字签名。在验证过程之后，用户获得了区块链网络的证据块。
- en: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig2_HTML.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig2_HTML.png)'
- en: Figure presents the relationship between the Signing process, Verification Process,
    and blockchain network.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图表展示了签名过程、验证过程和区块链网络之间的关系。
- en: Fig. 2
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2
- en: Total computation time estimation for SDN-forensic architecture in the blockchain-IoT
    environment. Step 1 to Step 5 is used to obtain the total time consumption on
    switches in data plane as Section A. Step 6 to Step 13 is run in the data plane
    as Section B. Finally, combining Section A and Section B, the total computational
    time of SDN-forensic architecture in the blockchain-IoT environment can be estimated
    (Fig. [3](#Fig3) corresponds to Fig. [2](#Fig2))
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链-IoT环境中的SDN-取证架构的总计算时间估计。步骤 1 到步骤 5 用于获得数据平面交换机的总时间消耗，作为部分 A。步骤 6 到步骤 13
    在数据平面运行，作为部分 B。最后，结合部分 A 和部分 B，可以估算出区块链-IoT环境中SDN-取证架构的总计算时间（图[3](#Fig3) 对应于图[2](#Fig2)）。
- en: '**Step 1**: there are n number of IoT devices that come from the device plane
    and start the IoT device initialization at the data plane.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 1**：从设备平面中出现 n 个物联网设备，并在数据平面开始 IoT 设备初始化。'
- en: '**Step 2** identifying network traffic of each data packet allows traffic types
    of VoIP, HTTP, and FTP.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 2**：识别每个数据包的网络流量，允许 VoIP、HTTP 和 FTP 的流量类型。'
- en: '**Step 3** the endpoint of logical connection in the 6G SDN-forensic network
    that is used for specialized services.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 3**：6G SDN-取证网络中逻辑连接的端点，用于专门的服务。'
- en: '**Step 4**: priority scheduling engages with traffic processing; generally,
    the packet priority is used only when the service requires consistent high performance,
    which is extremely important.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 4**：优先级调度与流量处理相关联；通常，仅当服务需要一致高性能时才使用数据包优先级，这是非常重要的。'
- en: '**Step 5**: flow entries verification typically updates the switch with new
    flow entries while receiving new packet patterns, whereas the switch can handle
    it locally.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 5**：流条目验证通常在接收到新的数据包模式时更新交换机的流条目，而交换机可以在本地处理它。'
- en: '**Step 6**: time consumption for packet identification, in the blockchain network,
    which is done by the packet parser, dynamically monitors the packets which are
    coming from the devices.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 6**：在区块链网络中对数据包进行识别的时间消耗，由数据包解析器完成，动态监视来自设备的数据包。'
- en: '**Step 7**: OpenFlow controllers in manipulating flow tables allow for the
    control of switching rules because OpenFlow is a control protocol that communicates
    policies and traffic management information between switches and controllers.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 7**：通过操作流表，OpenFlow 控制器允许控制交换规则，因为 OpenFlow 是一种控制协议，用于在交换机和控制器之间通信策略和流量管理信息。'
- en: '**Step 8**: the creation of binary backups is essential to store binary images
    of forensic evidence.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 8**：创建二进制备份对于存储司法证据的二进制图像至关重要。'
- en: '**Step 9**: a new block is added into the forensic network with a hash key.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 9**：使用哈希键将新区块添加到司法网络中。'
- en: '**Step 10**: the feature analysis is used to extract packet features that arrived
    from the data plane. All packet features are not extracted at this stage, except
    for specific features.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 10**：使用特征分析提取从数据平面到达的数据包特征。在此阶段并非提取所有数据包特征，仅提取特定特征。'
- en: '**Step 11**: signature validation phase-in, authenticates the blockchain which
    is running to complete the validation process.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 11**：签名验证阶段，对运行以完成验证过程的区块链进行身份验证。'
- en: '**Step 12**: packet classification is always done after the feature extraction.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 12**：特征提取后始终进行数据包分类。'
- en: '**Step 13**: controllers store evidence records to data logs with the hash
    keys for secure access after the packet classification. Then time consumption
    on switches (*T*[*S*]), controllers (*T*[*C*]), and the total time consumption
    on SDN-forensic architecture in the blockchain-based IoT environment (*T*[*FSDN*])
    are represented in Fig.  [2](#Fig2).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 13**：控制器在数据包分类后使用哈希键将证据记录存储到数据日志中，以确保安全访问。然后在交换机 (*T*[*S*])、控制器 (*T*[*C*])
    上的时间消耗以及在基于区块链的物联网环境中 SDN 司法架构的总时间消耗 (*T*[*FSDN*]) 在图 [2](#Fig2) 中表示。'
- en: Figure [3](#Fig3) corresponds to Fig. [2](#Fig2) and is explained as follows.
    Equation ([1](#Equ1)) shows the data plane with appropriate steps from Step 1
    to Step 5 and Eq. ([2](#Equ2)) shows the control plane with respective steps from
    Step 6 to Step 13 on SDN-forensic architecture (Fig. [3](#Fig3)). There are four
    separate layers in the SDN-forensic network, including IoT device plane, data
    plane, control plane, and application plane. An IoT gateway maintains the communication
    gap between the IoT device plane and the data plane. We assume IoT devices offer
    local processing and storage solutions when systematically connected with the
    data plane. Each block contains an OpenFlow controller to support 6G SDN. The
    northbound interface is the connection between the controller and the forensic
    network's applications, and the southbound interface is the connection between
    the controllers. Blockchain is set for transaction verification where it has become
    an emerging technology with decentralized, transparent, and immutable features.
    Clusters of computers manage and distribute a time-stamped series of records of
    evidence in the 6G SDN-forensic network, which is used by the blockchain network.
    Forensic users carry out every write operation, and these operations are validated
    through consensus checks, where the entire network should agree to make the changes.
    The software-defined network is protected from attacks that provide automatic
    and programmable rules. The flexibility and resilience of the forensic network
    can be improved by a distributed control plane. The OpenFlow controllers take
    routing decisions allowed by OpenFlow switches, push forwarding rules, and security
    rules on switches to control the network switches. This would help manage traffic
    in the forensic network. The control plane automatically stores evidence in a
    forensic database that can be modified according to forensic purposes and can
    create binary backups. However, the primary evidence database is the main database
    that stores binary images of evidence. We present Algorithm 1 for the time estimation
    process and Eq. ([3](#Equ3)) for time calculation.![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig3_HTML.png)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [3](#Fig3) 对应于图 [2](#Fig2)，并且解释如下。方程 ([1](#Equ1)) 显示了数据平面的适当步骤，从第 1 步到第 5
    步，方程 ([2](#Equ2)) 显示了 SDN 取证架构（图 [3](#Fig3)）上的控制平面，从第 6 步到第 13 步的各个步骤。SDN-取证网络中有四个独立的层，包括物联网设备平面、数据平面、控制平面和应用平面。物联网网关维持物联网设备平面和数据平面之间的通信间隔。我们假设物联网设备在与数据平面系统连接时提供本地处理和存储解决方案。每个区块都包含一个
    OpenFlow 控制器，以支持 6G SDN。北向接口是控制器与取证网络应用程序之间的连接，南向接口是控制器之间的连接。区块链用于交易验证，其中已成为一种新兴技术，具有去中心化、透明和不可变的特性。计算机集群管理和分发时间戳记录的证据系列，在
    6G SDN-取证网络中使用该区块链网络。取证用户执行每个写操作，这些操作通过共识检查进行验证，整个网络应同意进行更改。软件定义网络受到提供自动和可编程规则的攻击的保护。通过分布式控制平面可以提高取证网络的灵活性和韧性。OpenFlow
    控制器根据 OpenFlow 开关允许的路由决策、在开关上推送转发规则和安全规则来控制网络开关。这将有助于管理取证网络中的流量。控制平面自动将证据存储在取证数据库中，该数据库可以根据取证目的进行修改并创建二进制备份。然而，主要证据数据库是存储证据二进制图像的主要数据库。我们提出算法
    1 用于时间估计过程和方程 ([3](#Equ3)) 用于时间计算。![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig3_HTML.png)
- en: Flow chart presents the relationship of the application plane, intrusion detection,
    security enhancement, firewall, data planes and IoT nodes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 流程图展示了应用层、入侵检测、安全增强、防火墙、数据平面和物联网节点之间的关系。
- en: Fig. 3
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3
- en: Switches and controllers’ behavior in SDN-forensic architecture in blockchain-IoT
    environment. IoT devices send packets to the data plane, then start the operation
    with the IoT device initialization. After traffic processing is completed, validate
    the port numbers. Packets reach the switches after the priority scheduling, start
    flow entries verification process, then packets migrate to the next available
    switch when the switch is overloaded. Step 1 to Step 5 are in the data plane.
    After the process of the data plane, packets reach the control plane. Step 6 to
    Step 13 is explained as follows. Once the packet identification is made, the controllers
    manipulate the flow tables. Next, create binary backups to store binary images,
    feature extraction, which is completed by feature analyzer, and validate the signature
    of the forensic user for authentication purposes. When packet classification is
    completed, evidence records are stored in the blockchain with the hash key
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链-IoT 环境中 SDN-取证架构中交换机和控制器的行为。IoT 设备将数据包发送到数据平面，然后开始与 IoT 设备初始化的操作。流量处理完成后，验证端口号。数据包在优先级调度后到达交换机，开始流入条目验证过程，然后当交换机过载时，数据包迁移到下一个可用交换机。步骤
    1 到步骤 5 在数据平面中。数据平面的处理完成后，数据包到达控制平面。步骤 6 到步骤 13 如下所述。一旦进行了数据包识别，控制器将操作流表。接下来，创建二进制备份以存储二进制图像，由特征分析器完成的特征提取，并验证取证用户的签名以进行身份验证。完成数据包分类后，证据记录将使用哈希密钥存储在区块链中。
- en: Time estimation is based on the IoT environment due to IoT generating vast amounts
    of forensic data and delivers large amounts of data in real-time. Developing a
    computation model on SDN is that separating the control plane from the data plane
    and the network is centrally managed and programmable. Although the Network Function
    Virtualization (NFV) is a function of 6G SDN, there are some limitations not to
    use in the forensic deployment computation model. Because NFV environments are
    more dynamic and might require scaling up with additional features to cope. We
    are also not supposed to develop the computation model on any SDN-based architecture,
    and security issues come with routers and switches. Also, the computation model
    we proposed is unique, and the steps of the forensic network steps are not similar
    to any SDN/NFV architecture based on 6G (Fig. [4](#Fig4)).![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig4_HTML.png)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 时间估计基于 IoT 环境，因为 IoT 生成大量取证数据并实时传送大量数据。在 SDN 上开发计算模型是将控制平面与数据平面分开，并且网络是集中管理和可编程的。虽然网络功能虚拟化（NFV）是
    6G SDN 的一个功能，但在取证部署计算模型中有一些限制不使用。因为 NFV 环境更加动态，可能需要缩放以适应额外的功能。我们也不应该在任何基于 SDN
    的架构上开发计算模型，并且安全问题伴随着路由器和交换机。另外，我们提出的计算模型是独特的，取证网络步骤与任何基于 6G 的 SDN/NFV 架构的步骤不相似（见图
    [4](#Fig4)）。![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig4_HTML.png)
- en: There are two mind maps. The first mind map represents the process of data plane
    from the beginning. The second mind map represents the process of control plane
    till the end.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个思维导图。第一个思维导图代表了从开始的数据平面的过程。第二个思维导图代表了从控制平面到结束的过程。
- en: Fig. 4
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4
- en: Flowchart for switch and controller operations in the SDN-forensic architecture
    in blockchain-based IoT environment
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于区块链的 IoT 环境中，SDN-取证架构中交换机和控制器操作的流程图
- en: 'Algorithm 1: Computation time on data plane, and blockchain network plane of
    the 6G SDN-forensic architecture in blockchain-based IoT environment.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 1：6G SDN-取证架构的数据平面和区块链网络平面的计算时间。
- en: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Figa_HTML.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Figa_HTML.png)'
- en: An image depicts the algorithm for computation time on the data plane and blockchain
    network plane of 6 G S D N-forensic architecture. The algorithm begins with starting
    the process, Establishing a connection, and Initializing I o T devices. Then,
    the loop starts; if the status is equal to true, then verify IoT Device, and malicious
    traffic is true, allow I o T Device to access the network. If malicious traffic
    is false, discard I o T Device access.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一张图片描述了 6 G S D N 取证架构的数据平面和区块链网络平面的计算时间算法。算法从开始处理、建立连接和初始化 I o T 设备开始。然后，循环开始；如果状态等于
    true，则验证 IoT 设备，如果恶意流量为 true，则允许 I o T 设备访问网络。如果恶意流量为 false，则丢弃 I o T 设备访问。
- en: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Figb_HTML.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/517376_1_En_7_Chapter/517376_1_En_7_Figb_HTML.png)'
- en: An image exhibits the continuation of the Algorithm. It ends for I o T devices
    initialization, process traffic loop starts to grant and deny access for network
    traffics, validate the port numbers to accept or discard the user, schedule the
    priority by verifying the entries flow to accept or migrate the data packets,
    Identify the packet status - regular or irregular, Manipulate flow tables on switches
    add, update, and delete, create binary backups, add the block, analyze the features,
    validate the signature to authenticate or block the user, classify packet, and
    store forensic records.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图像展示了算法的延续。它结束于 I o T 设备的初始化，流量处理循环开始为网络流量授予和拒绝访问，验证端口号以接受或丢弃用户，通过验证条目流以接受或迁移数据包，识别数据包状态
    - 正常或异常，操作交换机上的流表添加、更新和删除，创建二进制备份，添加区块，分析特征，验证签名以验证或阻止用户，分类数据包，并存储取证记录。
- en: Algorithm 1 describes the complete process of SDN-forensic architecture in the
    blockchain-based IoT environment of the 6G network. If device status is true at
    the initial stage, it is malicious traffic and allows access to the network otherwise,
    discards the IoT device. Port numbers belong to *VoIP*, *FTP*, and *HTTP*. At
    the port number validation phase, the users are accepted who have valid port numbers.
    Packet prioritization is done using basic scheduling, First Come First Serve-Push
    Out (FCFS-PO), or First Come First Serve-Push Out-Priority (FCFS-PO-P) scheduling.
    The maximum size of flow entries is identified at the flow entry verification
    phase. Both regular and irregular packets are identified using a packet parser,
    then manipulated flow tables in the next stage. After creating binary backups,
    a new block is added to the blockchain with a timestamp. Thereafter, the packet
    features are analyzed. At the signature validation, the valid and invalid user
    access is identified. The packets are classified according to packet features
    at the next stage and finally stored in the evidence records after the modification.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 1 描述了 6G 网络的基于区块链的物联网环境中 SDN 取证架构的完整流程。如果在初始阶段设备状态为真，则属于恶意流量并允许访问网络，否则丢弃物联网设备。端口号属于
    *VoIP*、*FTP* 和 *HTTP*。在端口号验证阶段，接受具有有效端口号的用户。使用基本调度进行数据包优先级排序，先到先服务-推出（FCFS-PO）或先到先服务-推出-优先级（FCFS-PO-P）调度。在流入条目验证阶段确定流入条目的最大大小。使用数据包解析器识别常规和异常数据包，然后在下一阶段操作流表。创建二进制备份后，将新区块添加到区块链中并附带时间戳。此后，分析数据包特征。在签名验证时，识别有效和无效的用户访问。在下一阶段根据数据包特征对数据包进行分类，最后在修改后将其存储在取证记录中。
- en: 3.1 Computation Time of Data Plane in Which IoT Devices Work
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 IoT 设备工作的数据平面计算时间
- en: Attacks targeting southbound API and data plane components are included in the
    SDN-forensic network. We identify device attacks, protocol attacks, and slide
    channel attacks. The most common attack in the forensic network is a device attack.
    A vast number of devices reach the data plane. Therefore, a device attack is a
    major threat to the 6G-based SDN-forensic network because it refers to all attacks.
    The device attack targets software or hardware vulnerabilities of switches to
    compromise the SDN data plan. In the simple term of cybersecurity, an attacker
    may target forwarding devices’ software bugs or hardware features. OpenFlow allows
    direct access to the infrastructure or redirection level of a cybersecurity forensic
    network with software to allow manipulation and control of its operation. With
    OpenFlow, provide control of all elements, including switches and other devices
    at the infrastructure level. There are some forwarding policies that are associated
    with the data plane, and they are dependent upon the type of device. These devices
    can be either collocated or dislocated. At the same time, both types of devices
    might reach the forensic data plane. The collocated devices can be either physical
    or virtual, and these devices use distributed control planes. The dislocated devices
    distribute across multiple elements that are centrally controlled. OpenFlow enables
    the control plane to define the required forwarding behavior of the data plane
    in a centralized manner. The specified network control policies are reflected
    by traffic forwarding decisions and are translated by controllers into actual
    packet-forwarding rules which are in flow tables of OpenFlow switches.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SDN 取证网络中，针对南向 API 和数据平面组件的攻击被包括在内。我们识别出设备攻击、协议攻击和滑动通道攻击。在取证网络中最常见的攻击是设备攻击。大量的设备进入数据平面。因此，设备攻击是基于
    6G 的 SDN 取证网络的主要威胁，因为它涉及所有攻击。设备攻击针对交换机的软件或硬件漏洞，以破坏 SDN 数据平面。简单来说，在网络安全领域，攻击者可能针对转发设备的软件漏洞或硬件特性。OpenFlow
    允许使用软件直接访问取证网络的基础设施或重定向级别，以允许操纵和控制其运行。通过 OpenFlow，可以在基础设施级别提供对所有元素（包括交换机和其他设备）的控制。有一些与数据平面相关的转发策略，它们依赖于设备的类型。这些设备可以是共置或分置的。同时，两种类型的设备都可能达到取证数据平面。共置设备可以是物理的或虚拟的，这些设备使用分布式控制平面。分置设备分布在多个由中央控制的元素之间。OpenFlow
    使控制平面能够以集中的方式定义数据平面所需的转发行为。指定的网络控制策略通过流量转发决策来体现，并由控制器转换为实际的数据包转发规则，这些规则位于 OpenFlow
    交换机的流表中。
- en: In more specific terms, a flow table and an OpenFlow secure channel consist
    of OpenFlow switches for external OpenFlow controllers. Flow entries are maintained
    by forwarding tables, and each flow entry compromises match fields containing
    header values. The switch processes all incoming packets compared against flow
    tables that match the entries with packets based on priority order which the controller
    specifies. If a matching entry was found, increasing the flow counter and the
    procedures associated with entering a specific flow entry are performed on an
    incoming package that belongs to the flow counter. According to the Open flow
    specification, there are several actions including forwarding a packet out on
    a specific port, dropping the packet, removing, or updating packet headers. The
    SDN-forensic network links the advantages including flexibility and innovation
    to network management. There are some issues such as scalability and performances
    that mainly all forensic network intelligence and control the logic to OpenFlow
    controllers, hence restricting the OpenFlow task to dumb execution of redirect
    actions. DevoFlow, which is an OpenFlow rule, claims to reduce switch interactions
    to the controller by introducing new control mechanisms inside the switches. In
    this way, local control decisions can be taken by switches while dealing with
    recurring events, without engaging controllers whose primary tasks will be limited
    to maintaining centralized control over a much smaller number of important events
    that require network-wide visibility. The forensic network uses OpenFlow switches
    using additional state tables to reduce reliance on remote controllers for applications
    involving local states such as MAC learning processes and port knocking on firewalls.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 具体而言，流表和 OpenFlow 安全通道由外部 OpenFlow 控制器的 OpenFlow 交换机组成。流条目由转发表维护，每个流条目都包含头部值的匹配字段。交换机处理所有传入的数据包，与控制器指定的优先级顺序匹配流表中的条目的数据包进行比较。如果找到匹配的条目，就会增加流计数器，并在属于流计数器的传入数据包上执行与进入特定流条目相关的程序。根据
    OpenFlow 规范，有几种操作，包括在特定端口上转发数据包、丢弃数据包、删除或更新数据包头部。SDN-法庭网络将灵活性和创新与网络管理联系起来。存在一些问题，如可伸缩性和性能，主要是所有法庭网络智能和控制逻辑限制在
    OpenFlow 控制器上，因此将 OpenFlow 任务限制为重定向操作的哑执行。DevoFlow 是一种 OpenFlow 规则，声称通过在交换机内引入新的控制机制来减少与控制器的交互。通过这种方式，交换机可以在处理重复事件时进行本地控制决策，而不需要让主控制器参与，主控制器的主要任务将被限制在对需要网络范围可见性的少数重要事件进行集中控制。法庭网络使用
    OpenFlow 交换机，并使用额外的状态表来减少对远程控制器的依赖，以处理涉及本地状态的应用，如 MAC 学习过程和防火墙上的端口敲击。
- en: The OpenFlow protocol is the core of the 6G-based SDN technology, SDN with OpenFlow
    key promises flexibility and the forensic network's rapid configuration. It is
    important to note that the forensic network has a dynamic environment that continually
    changes its evidence and decision-making process. Therefore, OpenFlow protocol
    is the programmable protocol that is used by the forensic network as it separates
    the programming of network devices from the underlying hardware and offers a standardized
    way of delivering a centralized, programmable network that can quickly adapt to
    changing network requirements. Therefore, the OpenFlow switch enables data to
    communicate over the OpenFlow channel to an external controller. The packet lookup
    and forwarding are performed following one or more flow tables and a group table.
    The SDN-forensic architecture in the 6G network has functioned with three essential
    elements that are flow tables installed on switches, a controller, and a proprietary
    OpenFlow protocol for the controller to talk securely with switches. Controllers
    impose policies on flows through switches and paths designed by controllers on
    OpenFlow switches to provide traffic management consistency. Enabling OpenFlow
    on physical keys and migrating to an OpenFlow key is something that most clients
    are working toward. We assume that the 100 GB switch supports OpenFlow 1.3, which
    OpenFlow switches in the 6G-based SDN-forensic networking environment. The packet-forwarding
    plane is disaggregated from the control plane, and switching decisions are made
    by the forwarding plane. OpenFlow aims to enable an open-source network architecture.
    There are some benefits due to the decoupling of the data plane from the control
    plane, including improvement of traffic management capabilities.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: OpenFlow协议是基于6G的SDN技术的核心，SDN与OpenFlow的关键承诺是灵活性和法庭网络的快速配置。值得注意的是，法庭网络具有不断变化其证据和决策过程的动态环境。因此，OpenFlow协议是法庭网络使用的可编程协议，因为它将网络设备的编程与底层硬件分开，并提供了一种标准化的方法来提供一个集中式、可编程的网络，可以快速适应不断变化的网络需求。因此，OpenFlow开关使数据可以通过OpenFlow通道与外部控制器通信。数据包查找和转发是根据一个或多个流表和一个组表来执行的。在6G网络中，SDN-法庭架构具有三个基本要素，即安装在开关上的流表、控制器和专有的OpenFlow协议，以便控制器与开关进行安全通信。控制器通过开关对流施加策略，并设计由控制器在OpenFlow开关上提供的路径以提供流量管理一致性。在物理键上启用OpenFlow并迁移到OpenFlow键是大多数客户正在努力实现的目标。我们假设100
    GB开关支持OpenFlow 1.3，这是6G基于SDN-法庭网络环境中的OpenFlow开关。数据包转发平面与控制平面分离，并且转发平面进行切换决策。OpenFlow旨在实现开源网络架构。由于将数据平面与控制平面解耦，存在一些好处，包括改善流量管理能力。
- en: '***(1) Time for Initializing IoT Devices (t***[***ID***]***).***'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '***(1) IoT设备初始化时间（t***[***ID***]***）。***'
- en: IoT device initialization is the process of identifying devices on the software-defined
    network. The Internet of Things (IoT) is becoming an increasingly attractive target
    for cybercriminals. Furthermore, IoT devices are not high-power devices that have
    minimal embedded security solutions. Therefore, IoT devices gain access to the
    forensic network after providing identities appropriately and accurately. These
    device identifiers are closely related to its features, either hardware or software.
    However, the IoT plane does not reside in the middle of the SDN-forensic architecture
    of the 6G network as it is the initial point of the network that the entire forensic
    network depends on the IoT device plane. IoT devices work individually and independently
    in the forensic network. Many illegitimate device attempts are neglected by themselves.
    Alongside, IoT devices fail to handle vast amounts of attacks at the same time
    due to a lack of computing capabilities to handle these attacks. IoT devices use
    network scanning for particular attacks because certain IoT ports open all the
    time. Each IoT device in the forensic network can consist of a sensor, actuator,
    and communication infrastructure.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备初始化是识别软件定义网络上的设备的过程。物联网成为网络犯罪分子日益吸引的目标。此外，物联网设备并不是具有最小嵌入式安全解决方案的高性能设备。因此，物联网设备在提供适当和准确的身份后才能访问取证网络。这些设备标识符与其特征密切相关，无论是硬件还是软件。然而，物联网平面并不位于6G网络的SDN-取证架构的中间，因为它是整个取证网络依赖于物联网设备平面的初始点。物联网设备在取证网络中独立工作。许多非法设备尝试被它们自己忽略。此外，由于缺乏处理这些攻击的计算能力，物联网设备无法同时处理大量攻击。物联网设备使用网络扫描进行特定攻击，因为某些物联网端口始终开放。取证网络中的每个物联网设备都可以由传感器、执行器和通信基础设施组成。
- en: As we mentioned before, some more devices are identified by using explicit identities,
    including IP address, MAC address, and other network identities. In the SDN-forensic
    network, IoT devices are classified as resource-constrained devices that have
    the processing power, communication capability, memory, and energy when there
    are some complex cryptography algorithms used for the security of device identity.
    We identify two phases in IoT device initialization. IoT devices that are connected
    to the forensic network are first authenticated. These IoT devices use a lightweight
    authentication protocol, as the IoT devices are resource-constrained. The sharp
    rise in the use of Internet of Things (IoT) devices has imposed new challenges
    in device identification due to a variety of devices, protocols, and control interfaces.
    Also, all devices are heterogeneous with different operating systems and connectivity
    capabilities. In the second phase, the forensic network determines that service
    requests from authenticated IoT devices are authorized.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，一些设备通过使用明确的身份识别到，包括IP地址、MAC地址和其他网络身份。在SDN取证网络中，物联网设备被分类为资源受限的设备，这些设备在用于设备身份安全的复杂加密算法时具有处理能力、通信能力、内存和能量。我们确定物联网设备初始化中的两个阶段。首先对连接到取证网络的物联网设备进行身份验证。这些物联网设备使用轻量级身份验证协议，因为物联网设备资源受限。由于各种设备、协议和控制接口的多样性，物联网设备的广泛使用导致了设备识别方面的新挑战。此外，所有设备都是异构的，具有不同的操作系统和连接能力。在第二阶段，取证网络确定来自经过身份验证的物联网设备的服务请求是经过授权的。
- en: Connectivity, interoperability, and dynamic composability to facilitate communication,
    data flow, device management, system customization, and service personalization
    are offered by the IoT device platform. Also, it integrates with all other layers;
    data plane, control plane, and application plane to streamline infrastructure
    management and support security at multiple points across the IoT stack. Then
    data packets are forwarded to the switches, and the algorithm is executed in a
    loop until all n number of IoT devices are identified. An increase of malware-loaded
    IoT devices is a threat for the Software-Defined Network and filters malicious
    traffic by IoT device initializing.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备平台提供了连接性、互操作性和动态可组合性，以促进通信、数据流、设备管理、系统定制和服务个性化。此外，它与所有其他层次集成；数据平面、控制平面和应用平面，以简化基础设施管理，并在物联网堆栈的多个点支持安全性。然后数据包被转发到交换机，并在循环中执行算法，直到所有n个物联网设备被识别。恶意软件加载的物联网设备的增加对软件定义网络构成威胁，并通过物联网设备初始化来过滤恶意流量。
- en: '***(2) Time for Traffic Processing (t***[***TP***]***).***'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '***(2) 交通处理时间 (t***[***TP***]***).***'
- en: In the traffic processing stage, forensic data is moving across the network.
    The important component for network traffic measurement, control, and simulation
    is network traffic. Certain flow rules are used by switches that are present on
    the data plane that are generated based on the type of traffic, protocol, and
    port numbers. Traffic is classified with a more advanced monitoring approach following
    flow’s importance. Traffic types can be identified as VoIP, FTP, and HTTP in the
    forensic architecture and generated on switches in the data plane. The IoT devices
    are allowed only with these traffic types and unnecessary illegitimate network
    traffic is ignored. Network traffic processing is one part of security analysis
    and it is a critical element in the 6G forensic network as it detects network
    threats earlier. More advanced monitoring approaches try to classify traffic according
    to the flow’s importance. Then it takes time for this process. There is specific
    maximum traffic for each traffic type and when exceeds the size of relevant traffic,
    which is suspected.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在流量处理阶段，取证数据正在网络中传输。用于网络流量测量、控制和模拟的重要组件是网络流量。交换机使用特定的流规则来分类流量，这些规则是基于流量类型、协议和端口号生成的。遵循流的重要性，采用更高级的监控方法对流量进行分类。在取证架构中，流量类型可以识别为
    VoIP、FTP 和 HTTP，并在数据平面上的交换机中生成。只有这些流量类型才允许 IoT 设备，不必要的非法网络流量会被忽略。网络流量处理是安全分析的一部分，它是
    6G 取证网络中的关键元素，因为它能更早地检测到网络威胁。更高级的监控方法尝试根据流的重要性对流量进行分类。然后，这个过程需要时间。每种流量类型都有特定的最大流量，当超过相关流量的大小时，就会被怀疑。
- en: '***(3) Time for Port Number Validation (t***[***PN***]***).***'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '***(3) 端口号验证时间 (t***[***PN***]***).***'
- en: Network ports are standardized connected devices, and each port is assigned
    a number. Most ports are reserved for certain protocols, and messages go to the
    relevant port. A port number is always associated with an IP address of a host,
    and the type of transport protocol used for communication and specific port numbers
    are reserved to identify specific services. The ports are closed when required
    transactions are completed. This provides another layer of security by not leaving
    these ports open for attack. The flow rules are majorly defined from the port
    numbers for each traffic. There are different Internet-based apps such as email,
    web browser, and cloud storage drivers connected with the forensic network. Each
    of these applications has one or more port numbers. The forensic network allows
    VoIP, HTTP, and FTP, respective port numbers are 5060, 80, and 21 and they are
    unique identifiers over a forensic network by specifying both the host and the
    service. Generally, a port number is associated with an IP address of a network
    host and the type of transport protocol used for communication in the forensic
    network.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 网络端口是标准化的连接设备，每个端口都被分配一个数字。大多数端口都保留用于特定的协议，并且消息会发送到相关的端口。端口号始终与主机的 IP 地址相关联，并且用于通信的传输协议类型和特定端口号都保留用于识别特定服务。当需要完成交易时，端口会关闭。这通过不将这些端口开放以供攻击来提供另一层安全性。流规则主要根据每个流量的端口号来定义。与取证网络连接的不同基于互联网的应用程序如电子邮件、网络浏览器和云存储驱动程序。每个应用程序都有一个或多个端口号。取证网络允许
    VoIP、HTTP 和 FTP，各自的端口号分别为 5060、80 和 21，它们通过同时指定主机和服务来成为取证网络上的唯一标识符。通常，端口号与网络主机的
    IP 地址以及在取证网络中用于通信的传输协议类型相关联。
- en: Port numbers provide firewall security by stipulating the destination of forensic
    information on the network. We assume that IoT devices within both the internet
    and the internet access the forensic network through IoT device users’ web servers
    via 6G, by the way, a firewall can be set for network security purposes and then
    prohibit other packets destined to port 5060,80, and 21 from passing through switches.
    In the port number validation, reserved specific port numbers to identify specific
    services. Then an arriving forensic data packet can be easily forwarded to a running
    application. We suppose that the algorithm runs for each traffic type, then discards
    the illegitimate users. In simple terms, if any software requires communication
    with a forensic network system, it will expose a port for the particular software.
    Allowed port numbers are already identified in the forensic network system, and
    they are well-known port numbers. Running an algorithm of port number validation
    for each traffic takes time to proceed and cannot be ignored.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 端口号通过规定网络上的取证信息的目的地提供防火墙安全性。我们假设 IoT 设备通过 6G 访问取证网络，通过 IoT 设备用户的 Web 服务器访问取证网络的因特网和因特网内的
    IoT 设备，顺便说一句，防火墙可以设置用于网络安全目的，然后禁止其他包通过交换机的 5060、80 和 21 端口。在端口号验证中，保留特定端口号以识别特定服务。然后，到达的取证数据包可以轻松地转发到正在运行的应用程序。我们假设算法针对每种流量类型运行，然后丢弃非法用户。简而言之，如果任何软件需要与取证网络系统通信，它将为特定软件公开一个端口。允许的端口号已在取证网络系统中标识，并且它们是众所周知的端口号。对于每种流量运行端口号验证算法需要时间来处理，并且不能被忽视。
- en: '***(4) Time for Priority Scheduling with Multiple Switches (t***[***PS***]***).***'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '***(4) 使用多个交换机进行优先级调度所需的时间 (t***[***PS***]***).***'
- en: We assume that there is at least one flow table in an OpenFlow switch. The first
    flow table matches the incoming packets. The next step is done following the current
    stage and forms the basic structure. The next scheduling method is FCFS-PO. If
    the buffer is full when a packet reaches the buffer, it is put at the tail of
    the queue while the packet at the head is pushed out. Then all the packets move
    forward in one position. The number of waiting packets decided the position of
    a packet in the buffer. The last scheduling method is FCFS-PO-P and the process
    of both arrival and incoming packets are the same as the previous scheduling method.
    The newly incoming packet has the highest priority, and it will be put in the
    front position to get service first. Packet prioritization depends on an algorithm
    that shows log end-to-end data transmission delay, high energy consumption, and
    deprivation of high priority real-time data packets. Improper allocation of data
    packets to the queue is the result of this process. The algorithm is static for
    every priority scheduling method that does not matter on the forensic network's
    changing requirements.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设 OpenFlow 交换机中至少有一个流表。第一个流表匹配传入的数据包。接下来的步骤根据当前阶段进行，并形成基本结构。下一个调度方法是 FCFS-PO。如果数据包到达缓冲区时缓冲区已满，则将其放在队列的尾部，而头部的数据包则被推出。然后所有数据包向前移动一个位置。等待数据包的数量决定了缓冲区中数据包的位置。最后一个调度方法是
    FCFS-PO-P，其到达和传入数据包的过程与前一个调度方法相同。新到达的数据包具有最高优先级，并将被放置在最前面优先服务。数据包优先级取决于一个算法，该算法显示了对数端到端数据传输延迟，高能耗以及高优先级实时数据包的剥夺。数据包分配不当到队列的结果就是这个过程。每种优先级调度方法的算法对于法庭网络的变化要求都是静态的，这并不重要。
- en: In simple terms, the purpose of packet scheduling is to select which packet
    to be dropped or serviced. Therefore, forensic users ensure that the forensic
    data packet is delivered based on priority and fairness with minimum latency.
    Also, it ensures the Quality of Service (QoS) of forensic data which in turn increases
    the transmission rate. There are several network parameters in the 6G-based SDN-forensic
    network such as bandwidth, packet arrival rate, packet deadline, and packet size.
    The data packet servicing and dropping are based on these parameters. Therefore,
    packet scheduling time is based on these parameters. However, time needs to be
    considered based on which schedule is selected. Therefore, priority scheduling
    is a long process, together with these three scheduling types.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，数据包调度的目的是选择哪个数据包被丢弃或服务。因此，网络取证用户确保根据优先级和公平性以及最小延迟传递网络取证数据包。此外，它确保了网络取证数据的服务质量
    (QoS)，从而提高了传输速率。6G 基础 SDN-网络取证网络中存在几个网络参数，例如带宽、数据包到达率、数据包截止时间和数据包大小。数据包的服务和丢弃基于这些参数。因此，数据包调度时间基于这些参数。然而，需要根据所选的时间表考虑时间。因此，优先调度是一个长时间的过程，还有这三种调度类型。
- en: '***(5) Time for Flow Entries Verification (t***[***Fe***]***).***'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '***(5) 时间用于流表项验证 (t***[***Fe***]***).***'
- en: Flexible routing control is enabled by transferring packets according to the
    flow inputs on the switch. There are a specific number of flow entries for every
    switch; meanwhile, the verifier chooses the switch's maximum size of flow entries.
    When packets arrive at a switch during network operation, the arrival packet flow
    is compared to the flow entries in the flow table. If no match is found, the switch
    will contact the controller to update the flow table with entries that allow the
    packet to reach its destination. In the forensic network, medium access control
    source and destination address, ethernet type, Internet protocol source–destination
    address are packet meta information, and matching fields are used to match this
    information. In the flow entry verification, flow entry installation is the critical
    role, and time for flow entry verification is considered based on every task relative
    flow entry verification. Then there are two modes of flow entries installation
    as reactive and proactive mode. In case, the occurrences of failure or change
    of flow table rules, the flow table is to be updated. Then old flow entries need
    to be deleted, and new flow entries need to be installed. Apart from that, the
    flow entry update operation is complicated and takes a long delay due to the flow
    table reaching its highest capacity. Initially, the primary flow table stores
    flow entries with timeout calculated by the controller using flow entry knowledge.
    The secure cyber-forensic SDN environment is maintained through flow entry verification
    in a forensic 6G SDN. We assume that the running time of flow entries can vary.
    The flow table is relatively small when compared with the number of required flow
    rules. There are some performance and security issues in the flow tables, and
    majorly attackers may overwhelm the flow table with multiple Denial of Service
    (DoS) attacks. Also, legitimate flow entries will be refused by manipulating the
    controller.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 灵活的路由控制通过根据交换机上的流输入传输数据包来实现。每个交换机都有一定数量的流表项；同时，验证器选择交换机的最大流表项大小。在网络操作期间，当数据包到达交换机时，到达的数据包流与流表中的流表项进行比较。如果找不到匹配项，交换机将与控制器联系，以更新流表，以使数据包达到其目的地。在法庭网络中，媒体访问控制源和目的地地址、以太网类型、互联网协议源-目的地地址是数据包元信息，匹配字段用于匹配此信息。在流表项验证中，流表项安装是关键角色，流表项验证时间基于每个任务相对流表项验证而考虑。然后，流表项安装有两种模式，即被动模式和主动模式。如果流表规则发生故障或更改，流表将被更新。然后需要删除旧的流表项，并安装新的流表项。除此之外，由于流表达到最高容量，流表项更新操作复杂且延迟很长。最初，主要流表存储由控制器使用流表项知识计算超时的流表项。通过法庭
    6G SDN 中的流表项验证来维护安全的网络取证 SDN 环境。我们假设流表项的运行时间可能有所不同。与所需流规则数量相比，流表相对较小。流表存在一些性能和安全问题，主要攻击者可能通过多个拒绝服务
    (DoS) 攻击来压倒流表。此外，通过操纵控制器，合法的流表项将被拒绝。
- en: Time consumption on switches of SDN is given by![$$T_S \, = \,n(t_{ID} \, +
    \,t_{TP} \, + \,t_{PN} \, + \,t_{PS} \, + \,t_{Fe} )$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ1.png)(1)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: SDN 切换的时间消耗由![$$T_S \, = \,n(t_{ID} \, + \,t_{TP} \, + \,t_{PN} \, + \,t_{PS}
    \, + \,t_{Fe} )$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ1.png)(1)
    给出。
- en: 3.2 Computation Time of Blockchain Network Layer Which SDN Controllers Work
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 区块链网络层的计算时间，SDN 控制器的工作。
- en: The SDN-forensic architecture does not specify the SDN controller's internal
    implementation, and it is the strategic control point in the 6G SDN-forensic network.
    The most fundamental building entity in the 6G-based SDN-forensic architecture,
    the control plane contains distributed software controllers which handle the communication
    through forensic network devices and application via open interfaces. SDN controllers
    play a significant role in the forensic network as clients of the blockchain,
    demonstrating excellent network scalability. Once SDN controllers install the
    flow in switches, associating network states are recorded. SDN controllers manage
    flow control to switches via southbound APIs and the application plane via northbound
    APIs. The SDN controller receives instructions and requirements from the SDN application
    layers as it is the logical entity of the SDN-forensic network and relays them
    to the networking components. The controller extracts forensic information once
    received from hardware devices and communication back to the SDN application plane,
    which contains virtual services including statistics and events. In the specific
    term, application layer requirements are translated by SDN controllers which underline
    data plane elements and provide necessary forensic information up to SDN applications.
    The network control logic is supported, and the application layer abstracted view
    is provided by the SDN control layer, which is referred to as the Network Operating
    System (NOS). Apart from that, it contains enough information to specify policies
    while hiding the implementation details of the forensic network architecture.
    The forensic network's infrastructure layer is associated with IoT devices with
    basic network functionality for handling and forwarding data packets based on
    decisions given by the SDN controller.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: SDN 取证架构不指定 SDN 控制器的内部实现，它是第六代 SDN 取证网络的战略控制点。在基于第六代 SDN 取证架构中最基本的构建实体中，控制平面包含分布式软件控制器，这些控制器通过开放接口处理取证网络设备和应用之间的通信。SDN
    控制器在取证网络中扮演着重要角色，作为区块链的客户端，展示出优秀的网络可扩展性。一旦 SDN 控制器在交换机上安装流量，相关联的网络状态就被记录下来。SDN
    控制器通过南向 API 管理对交换机的流量控制，通过北向 API 管理对应用平面的流量控制。SDN 控制器接收来自 SDN 应用层的指令和需求，因为它是 SDN
    取证网络的逻辑实体，并将它们中继给网络组件。控制器一旦从硬件设备接收到取证信息，就会将其通信回 SDN 应用平面，其中包含统计信息和事件等虚拟服务。在具体术语上，SDN
    控制器通过 SDN 应用来翻译应用层要求，这些要求强调了数据平面元素，并提供了直到 SDN 应用所需的取证信息。SDN 控制层支持网络控制逻辑，并提供了应用层的抽象视图，称为网络操作系统（NOS）。除此之外，它包含足够的信息来指定策略，同时隐藏取证网络架构的实现细节。取证网络的基础设施层与基本网络功能的物联网设备相关联，用于根据
    SDN 控制器给出的决策处理和转发数据包。
- en: Blockchain technology solves the problems of consensus and synchronization of
    multiple distributed SDN controllers in the SDN-forensic network. Each controller
    gathers OpenFlow commands, and forensic messages are digitally signed with an
    authentication code to ensure integrity and authentication. Later, it issues a
    consensus to the third-party blockchain system. The access of validated and unvalidated
    blocks is verified by controllers and forwarded to blocks to the remaining controllers.
    There is a heavy workload in the forensic network, as many actions will be carried
    out at the same time. Therefore, forensic SDN controllers help to simplify network
    management and reduce the workload of configuration. However, controllers must
    make sure the information it receives is trustworthy. The SDN controller uses
    OpenFlow protocols to communicate with switches. The main purpose of the controller
    is for path calculation. Further individual users are submitting the messages,
    and controllers are identifying the packets at the initial stage. The message
    is formed as packet =  < *sourceIP, destinationIP, sourcePort, destinationPort,
    protocol* > in the absence of an existing flow rule. Controllers are responsible
    for managing the resources with fine-grained access by encrypting each resource
    with a set of related attributes. The data packets will reach the controller through
    switches and gateway. For each forensic data stored in the forensic database server,
    the SDN controller creates a block, distributes it over the blockchain network,
    and supports evidence collection. SDN implementations allow users to access network
    resources, deploy new rules, and manipulate network behavior by interacting with
    a control plane. There may be some abnormal behavior flowing between blockchain
    nodes and controllers. Then, it immediately blocks the attacking node, such as
    IoT devices with malicious traffic.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术解决了 SDN 司法网络中多个分布式 SDN 控制器的共识和同步问题。每个控制器收集 OpenFlow 命令，并使用认证码对司法消息进行数字签名，以确保完整性和身份验证。随后，它向第三方区块链系统发出共识。已验证和未验证块的访问由控制器验证并转发到其余控制器的块。在司法网络中存在大量工作负载，因为许多操作将同时进行。因此，司法
    SDN 控制器有助于简化网络管理并减少配置的工作量。但是，控制器必须确保其接收的信息是可信的。SDN 控制器使用 OpenFlow 协议与交换机通信。控制器的主要目的是路径计算。进一步的，个别用户正在提交消息，控制器在初始阶段识别数据包。在缺乏现有流规则的情况下，消息被形成为数据包 =  < *源IP，目标IP，源端口，目标端口，协议* >。控制器负责通过使用一组相关属性对每个资源进行加密来管理细粒度访问的资源。数据包将通过交换机和网关到达控制器。对于存储在司法数据库服务器中的每个司法数据，SDN
    控制器创建一个块，将其分布到区块链网络上，并支持证据收集。SDN 实现允许用户通过与控制平面交互来访问网络资源、部署新规则和操纵网络行为。可能会有一些异常行为在区块链节点和控制器之间流动。然后，它立即阻止攻击节点，例如具有恶意流量的物联网设备。
- en: The SDN controller efficiently works and controls both physical and virtual
    switching in forensic architecture, as well as provides comprehensive network
    monitoring. However, the control plane is logically centralized and implemented
    as a physically distributed system. There are two types of controllers that can
    be used in software-defined networking, such as centralized and distributed. When
    distributed controllers are compared to centralized controllers, there are some
    advantages of centralized controllers such as scalability and high performance
    during the increment of demand requests. As the key component of a software-defined
    network is the control plane, it ensures smooth management and operation of the
    entire forensic network. The SDN single centralized controller offers network
    resilience and availability; however, it is likely to cause single-point failure.
    Therefore, distributed controllers are recommended for the forensic network rather
    than ensuring network resilience and availability. We consider that control logic
    solves the specific networking issues and adjusts the network policy's particular
    network policy and provides a facility to change the configuration on the SDN-forensic
    network. Multiple controllers are enabled in the forensic system's blockchain
    control network to communicate with each other and exchange forensic data over
    the network, and it is the distributed control configuration. Despite numerous
    attempts to standardize SDN protocols, there has not yet been any East–West API
    standard that remains every controller vendor's property. Additional protocols
    are not required at the datastore level of the SDN-forensic network; however,
    communication happens there. Therefore, the standardized communication interface
    provides more comprehensive interoperability between controllers in the SDN-forensic
    network. Simple high-level policies are allowed by the SDN-forensic network to
    modify the forensic network as the device level dependency is eliminated to some
    extent. The controller is designed as a single software console as it facilitates
    viewing the entire forensic network globally. The forensic SDN controllers introduce
    new functionality or programs. Nevertheless, it just places them in the centralized
    controller. There are various controllers with their pros and cons. In the 6G-based
    SDN-forensic network, we develop a model based on distributed controllers as it
    brings fruitful results for the forensic requirements. On the other hand, the
    control plane contains the server as it is the distributed SDN, and it performs
    the controller's task.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: SDN（软件定义网络）控制器在取证架构中高效地工作，并控制物理和虚拟交换，同时提供全面的网络监控。然而，控制平面是逻辑上集中的，并作为一个物理分布式系统实现。在软件定义网络中可以使用两种类型的控制器，例如集中式和分布式。当分布式控制器与集中式控制器进行比较时，集中式控制器具有一些优点，例如在需求请求增加时具有可扩展性和高性能。作为软件定义网络的关键组件，控制平面确保整个取证网络的平稳管理和运行。SDN单一集中式控制器提供了网络的弹性和可用性；然而，它可能导致单点故障。因此，取证网络建议使用分布式控制器，而不是确保网络的弹性和可用性。我们认为控制逻辑解决了特定的网络问题，并调整了网络策略的特定网络策略，并提供了在SDN-取证网络上更改配置的便利。在取证系统的区块链控制网络中启用了多个控制器，以便彼此通信并通过网络交换取证数据，这是分布式控制配置。尽管有大量尝试标准化SDN协议，但尚未出现任何东西方API标准，仍然是每个控制器供应商的属性。在SDN-取证网络的数据存储级别不需要额外的协议；然而，通信在那里发生。因此，标准化的通信接口在SDN-取证网络中的控制器之间提供了更全面的互操作性。SDN-取证网络允许简单的高级策略来修改取证网络，因为在某种程度上消除了设备级别的依赖性。控制器设计为单一软件控制台，因为它便于全局查看整个取证网络。取证SDN控制器引入了新的功能或程序。然而，它只是将它们放置在集中式控制器中。各种控制器都有其优缺点。在基于6G的SDN-取证网络中，我们开发了一个基于分布式控制器的模型，因为它为取证需求带来了丰硕的结果。另一方面，控制平面包含了服务器，因为它是分布式SDN，并执行控制器的任务。
- en: Logical functionalities are implemented on controllers as it is the brain of
    the SDN-forensic network architecture. Forensic SDN controllers perform various
    tasks that are really based on forensic investigation. They build flow entries
    inside the routing devices and keep track of forensic data packets. The flow table
    is similar to the routing table as flow entries are stored in the SDN controller
    flow tables. Matching rules, action, and counter are three portions of the flow
    table. Matching rules include the set of various fields of header portions such
    as source IP and destination IP. Then, action compromises of operations that perform
    on the packet processing include packet forwarding to its destination port, packet
    dropping, and more. Each packet's default action is forward to the controller
    as the switch does not contain the entry for the relevant flow. Therefore, packets
    are passed toward the controller. Then controllers begin the packet processing
    task once it is done and send them back to the switches along with the flow entries.
    The forensic information which is passed through the network can be grouped based
    on flow, table, port basis. The controller decided to flow rules in the switch
    forwarding table. As previously mentioned OpenFlow is the most widely deployed
    southbound standard from the open-source community. The event-based messages are
    generated by the OpenFlow controller when it is needed.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑功能在控制器上实现，因为它是 SDN 司法网络架构的大脑。司法 SDN 控制器执行各种基于司法调查的任务。它们在路由设备内建立流条目并跟踪司法数据包。流表类似于路由表，因为流条目存储在
    SDN 控制器流表中。匹配规则、动作和计数器是流表的三个部分。匹配规则包括头部各个字段的集合，如源 IP 和目标 IP。然后，动作包括在数据包处理中执行的操作，包括将数据包转发到其目标端口、丢弃数据包等。每个数据包的默认动作是转发到控制器，因为交换机没有相关流的条目。因此，数据包被传递到控制器。然后，一旦完成，控制器开始数据包处理任务并将它们与流条目一起发送回交换机。通过网络传递的司法信息可以根据流、表、端口进行分组。控制器决定在交换机转发表中的流规则。正如前面提到的，OpenFlow
    是开源社区中部署最广泛的南向标准。当需要时，OpenFlow 控制器会生成基于事件的消息。
- en: '***(1) Time for Packet Identification (t***[***PP***]***).***'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '***(1) 包识别时间 (t***[***PP***]***).***'
- en: 'The controller''s first step is packet identification, which dynamically monitors
    the packets from devices by packet parser as the forensic data is transmitted
    along with the network as packets. At the same time, several packets reach the
    control plane, and controllers will look at the destination address in the header
    and compare it to their lookup table to find out where to send the packet. There
    are two phases in jacket identification: identifying fragmented packets and identifying
    when the sender transmits individual packets. The Control plane combines the identification
    with the source address to identify a packet uniquely and uses these unique identifiers
    to reassemble data from packets. However, the IP ID value is specific to each
    packet, not specific for the entire forensic network. Although data packets get
    fragmented for packet identification, the IP ID number is the same for all. It
    is easy to identify switching loops in the forensic network due to the same IP
    IDs’ in the same packet capture.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器的第一步是数据包识别，它通过数据包解析器动态监视来自设备的数据包，因为司法数据随着数据包一起传输到网络。与此同时，多个数据包到达控制平面，控制器将查看头部中的目标地址并将其与查找表进行比较，以找出应将数据包发送到何处。数据包识别有两个阶段：识别分段数据包和识别发送者传输单个数据包的情况。控制平面将识别与源地址相结合以唯一识别数据包，并使用这些唯一标识符从数据包中重新组装数据。然而，IP
    ID 值对于每个数据包都是特定的，而不是针对整个司法网络。尽管数据包为了数据包识别而被分段，但所有数据包的 IP ID 号都相同。由于在相同数据包捕获中存在相同的
    IP ID，因此很容易识别出司法网络中的交换机环路。
- en: 'Fragmentations travel to their destination and where they are reassembled.
    The packet identification is a 16-bit value used to identify all fragments of
    a data packet, allowing the destination host to perform packet reassembly. However,
    In the packet transmission, some packets were dropped, and the IP packet identification
    numbers facilitated the identification of which packet was dropped. Each packet
    contains the same attributes: header, payload, and trailer. The packet includes
    Flow_Mod, Packet_In, Stats_Reply, and other necessary packet features, and we
    assume that many packets with various sizes are exchanged in the SDN-cyber-forensic
    network, and the running time varies depending on the packet length.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 分段数据包传输到其目的地并进行重组。数据包标识是一个 16 位值，用于标识数据包的所有分段，允许目的主机执行数据包重组。然而，在数据包传输过程中，一些数据包会丢失，并且
    IP 数据包标识号有助于确定哪个数据包已丢失。每个数据包包含相同的属性：头、有效载荷和尾部。数据包包括 Flow_Mod、Packet_In、Stats_Reply
    和其他必要的数据包特性，我们假设在 SDN-网络安全法医网络中交换了许多具有不同大小的数据包，并且运行时间取决于数据包长度。
- en: '***(2) Time for Manipulating Flow Tables of the Switch (t***[***MF***]***).***'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '***(2) 控制器操作流表时间（t***[***MF***]***）。***'
- en: 'It is essential to manipulate the flow table at the SDN switch effectively.
    Flow information is stored and managed by the flow entry unit in the flow table.
    OpenFlow switches have flow tables and packet-forwarding information that they
    obtain from a controller, and the controller in software-defined networking manipulates
    these flow tables. There are two types of flow tables that are used in switches
    as hash-based flow tables and wildcard-based flow tables. The hash-based flow
    table requires a large memory capacity while the wildcard-based flow table utilizes
    wildcards to store large amounts of flow information in small memory. Although
    the flow entry search speed is fast in hash-based flow, entry searching speed
    is slow in wildcard-based flow tables. Therefore, each type of flow table has
    its own processing time and processing speed to manipulate in its own way. The
    controller is responsible for maintaining the cybersecurity forensic network state
    in real time. Typically, a flow table is populated with rules or policies ex:
    quality of service (QoS), access control lists (ACLs), and IP route tables for
    fast-forwarding. We can identify the two various occurrences where this operation
    is done. The first one is reactive as the controller receives a packet from the
    switch, and the second one is proactive according to the implementation of the
    OpenFlow controller. Manipulating flow tables is compulsory because it writes
    legitimate flow entries.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地操作 SDN 开关的流表至关重要。流信息由流表中的流入单元存储和管理。OpenFlow 开关具有流表和来自控制器的数据包转发信息，软件定义网络中的控制器操作这些流表。交换机中使用两种类型的流表，即基于哈希的流表和基于通配符的流表。基于哈希的流表需要大容量的内存，而基于通配符的流表利用通配符在小内存中存储大量的流信息。尽管基于哈希的流表中的流入搜索速度快，但基于通配符的流表中的流入搜索速度较慢。因此，每种类型的流表都有自己的处理时间和处理速度以自己的方式进行操作。控制器负责实时维护网络安全法医状态。通常，流表填充有规则或策略，例如服务质量（QoS）、访问控制列表（ACL）和
    IP 路由表以进行快速转发。我们可以识别两种不同的操作发生场景。第一种是反应式的，即控制器从开关接收数据包，第二种是主动式的，根据 OpenFlow 控制器的实现。操纵流表是强制性的，因为它编写了合法的流入条目。
- en: '***(3) Time for Creating Binary Backups (t***[***CB***]***).***'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '***(3) 创建二进制备份时间（t***[***CB***]***）。***'
- en: Original data considered as binary backups, therefore, are not used in the analysis
    phase, whereas secondary data is used. In the software-defined forensic network,
    binary backups create guesswork and complication in the process. The binary images
    are used due to the reason that they are the replica of the original data. SDN-forensic
    network consults the backup controller only when there is a suspicious attack
    on its primary controller. There is a possibility of missing important data in
    standard backups, and hence binary backups are used to avoid this issue. Backup
    data stores ensure that each master controller has a view of the whole network.
    These data stores can save the forensic network state during the failure time.
    The backup controllers guarantee the resilience of the control plane with minimum
    cost. Software-defined backups automate backup and restore while enabling the
    ability to perform restore independently and on-demand. We consider the software-defined
    backup environment as it requires individual deployment, configuration, monitoring,
    and provisioning. We assume that the time is different for each backup due to
    the size of the original data file. It takes a very long time for and restoring
    backups for a large database and that could make forensic backups useless.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到原始数据被视为二进制备份，因此在分析阶段不使用原始数据，而使用辅助数据。在软件定义的取证网络中，二进制备份在过程中创建了猜测和复杂性。使用二进制镜像的原因是它们是原始数据的副本。在软件定义的取证网络中，仅当主控制器受到可疑攻击时，才会向备份控制器查询。标准备份可能会丢失重要数据，因此使用二进制备份以避免此问题。备份数据存储确保每个主控制器都可以查看整个网络。这些数据存储可以在故障时保存取证网络状态。备份控制器保证了以最低成本确保控制平面的弹性。软件定义的备份自动化了备份和恢复，同时使能够独立和按需执行恢复。我们考虑软件定义的备份环境，因为它需要单独的部署、配置、监视和提供。我们假设每个备份的时间都不同，这是由于原始数据文件的大小。对于大型数据库，备份和还原备份需要很长时间，这可能使取证备份无效。
- en: 'There is a possibility that the backup path may fail before the primary path
    due to dynamic network updates. Therefore, when the link fails, the proactively
    configured route will not be available to route packets on the alternate path.
    Furthermore, the binary backups may fail earlier than the binary images. As a
    result of this, the performance is affected, because the incoming data packets
    are matched with the flow rules, because of the redundancy of backup flow entries.
    Apart from that, the Backup algorithm is running and uses fewer processing cycles
    on dedicated controllers, and more parallel backups can be taken, more often.
    Creating binary backups is not a simple task. Some steps need to be followed to
    complete the creating binary backups: configure forensic data file, configure
    sender processes, configure authentication, and create backups. As we see, the
    whole process of creating binary backups is more complicated.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一种可能性，即由于动态网络更新，备用路径可能在主路径之前失败。因此，当链路失败时，主动配置的路由将无法用于在备用路径上路由数据包。此外，二进制备份可能比二进制镜像提前失败。由于备份流表的冗余，由于备份流项的冗余，入站数据包与流规则匹配，因此性能受到影响。除此之外，备份算法正在运行，并在专用控制器上使用更少的处理周期，可以更频繁地进行更多的并行备份。创建二进制备份并不是一项简单的任务。需要遵循一些步骤来完成创建二进制备份的过程：配置取证数据文件、配置发送进程、配置身份验证并创建备份。正如我们所见，创建二进制备份的整个过程更加复杂。
- en: '***(4) Time for Adding Block (t***[***AB***]***).***'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '***(4) 添加区块时间（t***[***AB***]***）。***'
- en: All nodes in the forensic blockchain network are involved in the verification
    of freshly mined blocks. In simple terms, block time is a measure of the time
    it takes to produce a new blockchain network block. Similarly, new forensic data
    needs to be added into the 6G-based SDN-forensic blockchain for the investigation
    decision process as new forensic information is found in a timely manner. It's
    basically the amount of time it takes a blockchain miner to find a hash solution,
    which is a random string of characters associated with a block. However, the exact
    time to mine the next block is unknown. The actual amount of time it takes to
    create the block varies depending on the difficulty of hashing. Thus, block time
    is the average time it takes a miner to solve a math puzzle and build a blockchain
    block. Therefore, a newly mined block is added to the forensic blockchain based
    on a consensus algorithm, and it becomes publicly available for anyone to view.
    The new transaction means a new block that contains transactions and miners validate
    new transactions. The last block is mined every 10 min, thus adding these transactions
    to the blockchain. Then transactions become part of a block. Thereby new blocks
    allow the new owners, and the blocks are considered as confirmed.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 所有位于法证区块链网络中的节点都参与验证最新挖掘出的区块。简单来说，区块时间是生成新的区块链网络区块所需的时间度量。同样地，随着新的法证数据及时发现，需要将新的法证数据添加到基于6G的SDN法证区块链中进行调查决策流程。它基本上是区块链矿工找到哈希解决方案所需的时间，这是与区块相关的一串随机字符。然而，挖掘下一个区块的确切时间是未知的。创建区块的实际时间取决于哈希难度，因此，区块时间是矿工解决数学难题并构建区块链区块所需的平均时间。因此，根据共识算法，新挖掘的区块将添加到法证区块链中，并且对任何人公开查看。新交易意味着包含交易的新区块，矿工验证新交易。每10分钟挖掘出最后一个区块，因此将这些交易添加到区块链中。然后交易成为区块的一部分。因此，新区块允许新的所有者，这些区块被视为已确认。
- en: Any new transaction added to the blockchain will change the state of the ledger.
    New transactions are constantly processed by the miners in new blocks added to
    the end of the chain. However, each block contains its current time. We identify
    seven steps for adding new blocks into the blockchain as transaction data, chaining
    the blocks, creating hash signatures, and deciding whether a person can sign the
    block once the signature is qualified, making the blockchain immutable, governing
    blockchain, and determining rules. The time is considered based on all the steps.
    In simple terms, whenever any new block is added to the blockchain, numerous nodes
    within the same blockchain implementation are required to execute algorithms to
    evaluate, verify, and process the blockchain block's history. It's common for
    any blockchain network to include SDN-forensic blockchain. If most of the nodes
    authenticate the blockchain record and signature, the new block of blockchain
    transactions will be accepted into the ledger, and the new block containing the
    data is added to the blockchain. Each blockchain block consists of certain forensic
    data in the forensic network, the block hash, and the hash from the previous block.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到区块链的任何新交易都会改变账本的状态。新交易不断由矿工在链的末端添加的新区块中进行处理。然而，每个区块都包含其当前时间。我们确定了将新区块添加到区块链中的七个步骤，包括交易数据、链接区块、创建哈希签名以及确定一旦签名符合资格，人是否可以签署区块，使区块链不可变，管理区块链和确定规则。时间是基于所有步骤考虑的。简单来说，每当向区块链添加新区块时，同一区块链实现内的众多节点都需要执行算法来评估、验证和处理区块链区块的历史。任何区块链网络都包括SDN法证区块链是很常见的。如果大多数节点都验证了区块链记录和签名，则区块链交易的新区块将被接受到账簿中，并且包含数据的新区块将添加到区块链中。每个区块链区块由法证网络中的特定法证数据、区块哈希和前一个区块的哈希组成。
- en: From a cybersecurity perspective, there is an additional level of assurance
    that the forensic data block is authentic and has not been tampered with. Then,
    the time for adding blocks increases with the number of IoT devices. The validity
    of the blocks plays a major role in the cybersecurity forensic network. All the
    forensic network nodes will check the mined block and add them to the blockchain
    if it follows the rules stated by the consensus mechanism. The SDN-forensic network
    simply rejects an invalid block. During the normal operation of the SDN-forensic
    network, authorized users pay attention to the data logs and periodically check
    the forensic data blocks’ status to ensure the performance of the blockchain network.
    A blockchain-based log system confirms the forensic network's security as it avoids
    log tampering by sealing the forensic logs cryptographically. Thus, adding the
    data logs to a hierarchical ledger, hence, provides an immutable platform for
    data log storage.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 从网络安全的角度来看，取证数据块的真实性和未被篡改的额外保障。然后，随着物联网设备数量的增加，添加块的时间也会增加。块的有效性在网络安全取证网络中起着重要作用。所有取证网络节点都将检查挖掘的块，并根据共识机制规则将其添加到区块链中。SDN-取证网络简单地拒绝无效块。在SDN-取证网络的正常操作期间，授权用户会关注数据日志，并定期检查取证数据块的状态，以确保区块链网络的性能。基于区块链的日志系统确认了取证网络的安全性，因为它通过加密封存取证日志避免了日志篡改。因此，将数据日志添加到分层账本中，从而为数据日志存储提供了一个不可变的平台。
- en: '***(5) Time for Feature Analyzing (t***[***FA***]***).***'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '***(5) 特征分析时间（t***[***FA***]***）。***'
- en: Forensic data packets are used in forensic investigations after being captured,
    stored, and processed efficiently and provide admissible evidence against a suspect
    in a court case. In the SDN-forensic network, packet analysis is a primary traceback
    technique. It provides sufficiently detailed packet details and playback even
    the entire network traffic for a particular point in time. The purposes of feature
    analysis in the forensic network are finding traces of nefarious online behavior,
    unauthorized user access, data breaches, malware infection, intrusion attempts,
    reconstructing forensic data files, etc. Network devices communicate using protocols.
    These protocols establish connections, and format rules and conventions for data
    transfer in the forensic network. Packet analyzers do packet feature analysis.
    These software tools intercept and log network traffic over a digital network
    or part of a network through packet capture. The utilization of packet feature
    analysis to its full potential relies on full packet capture,
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 取证数据包在捕获、存储和高效处理后用于取证调查，并提供法庭案件中对嫌疑人的证据。在SDN-取证网络中，数据包分析是一种主要的追溯技术。它提供了足够详细的数据包细节，甚至可以回放特定时间点的整个网络流量。取证网络中的特征分析目的是查找恶意在线行为的痕迹、未经授权的用户访问、数据泄露、恶意软件感染、入侵尝试、重建取证数据文件等。网络设备使用协议进行通信。这些协议建立连接，并为取证网络中的数据传输制定规则和约定。数据包分析器进行数据包特征分析。这些软件工具通过数据包捕获拦截和记录数字网络或网络部分上的网络流量。充分利用数据包特征分析取决于完整的数据包捕获，
- en: We identify the message features such as *source_port_number, source_IP, destination_port_number,
    destination_IP, header_length, protocol, time_to_live,* and *service_type.* Each
    packet feature is analyzed with proper evidence, and the feature analysis of messages
    is performed by running the algorithm providing the final output. In practice,
    time consumption may not be performed by an individual feature, where all features
    need to get the total duration of feature extraction.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确定消息特征，如*源端口号、源IP、目标端口号、目标IP、头部长度、协议、生存时间*和*服务类型*。对每个数据包特征进行适当的证据分析，通过运行算法提供最终输出来执行消息的特征分析。在实践中，可能不会由单个特征执行时间消耗，需要获取所有特征的特征提取总持续时间。
- en: Features are extracted by a feature analyzer and therefore, no difference between
    feature extraction and feature analyzing. A feature extraction algorithm does
    feature analysis. We identify two stages of feature extraction as primary feature
    extraction and secondary feature extraction. In the primary stage, the subset
    of features is extracted from the dataset having the highest percentage of the
    target population. Features that can differentiate the target and nested classes
    are added to the subset of features in the secondary stage. Similarly, feature
    extraction is an essential component in the forensic network's anomaly detection,
    summarizing network behavior from a packet stream. Forensic data gathering in
    high-speed links is a complex process, and therefore existing techniques analyze
    a small number of packet features and limit their effectiveness. More forensic
    information is available once the feature extraction is done at the packet level.
    Besides, a single packet does not offer much information at the packet payload.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 特征由特征分析器提取，因此，特征提取和特征分析之间没有区别。特征提取算法进行特征分析。我们将特征提取分为主要特征提取和次要特征提取两个阶段。在主要阶段，从具有最高目标人口百分比的数据集中提取特征子集。在次要阶段，将能够区分目标和嵌套类的特征添加到特征子集中。同样，特征提取是法庭网络异常检测中的一个重要组成部分，它从数据包流中总结网络行为。在高速链路中进行法庭数据收集是一个复杂的过程，因此现有技术分析了少量的数据包特征，并限制了它们的有效性。一旦在数据包级别完成特征提取，就会获得更多的法庭信息。此外，单个数据包在数据包负载中并不提供太多信息。
- en: '***(6) Time for Signature Validation (t***[***SV***]***).***'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '***(6)签名验证时间(t***[***SV***]***).***'
- en: The algorithm is running for signature validation and for the computation of
    network paths and slices. The algorithm runs linearly making all steps to submit
    at each entry. If user input matches with the system, the signature becomes valid
    and allows the user. The logger needs to have a keypair as the private key is
    used to encrypt the forensic data, and the public key is used for decryption.
    There are several steps in the signature validation phase, such as creating digital
    signatures, signing forensic messages with private keys, and verifying the forensic
    message with a public key. These steps took a considerable amount of time to proceed.
    At this stage, the cryptographic value of the signature is checked using signature
    verification data. Signature validity is determined by validating the authenticity
    of the signature's digital ID certificate status and document integrity.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法用于签名验证和计算网络路径和切片。该算法线性运行，使每个条目的所有步骤都能提交。如果用户输入与系统匹配，则签名变为有效并允许用户通过。记录器需要具有密钥对，因为私钥用于加密法庭数据，而公钥用于解密。签名验证阶段有几个步骤，例如创建数字签名、使用私钥对法庭消息进行签名以及使用公钥验证法庭消息。这些步骤需要相当长的时间来进行。在此阶段，使用签名验证数据来检查签名的加密值。通过验证签名的数字ID证书状态和文档完整性来确定签名的有效性。
- en: Authenticity verification confirms that the signer's certificate or its original
    certificates are in the validator's trusted identities list. Thus, it confirms
    the signing document's validity based on the user's Acrobat and Reader configuration.
    The document integrity check confirms whether the signed content has changed after
    it was signed. If the content changes, a document integrity check confirms whether
    the content has changed in the way the signer allows. There is a signature panel
    that displays information about each digital signature in the forensic document.
    Each digital signature contains an icon to identify the verification status. Verification
    details are listed in each signature and can be viewed by expanding the signature.
    The signature panel provides information about the signed time and the signer's
    details. Similarly, a digital signature verifies the integrity of a forensic data
    file, and it is non-repudiation. The reason is to use the digital signature in
    the 6G-based SDN-forensic network as it can well adapt to its characteristics
    in the blockchain system. It will be more secure, applicable, and has the potential
    to increase value.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 真实性验证确认签名者的证书或其原始证书是否在验证者的受信任身份列表中。因此，它根据用户的Acrobat和Reader配置来确认签署文件的有效性。文档完整性检查确认签名内容在签名后是否发生了更改。如果内容发生更改，则文档完整性检查确认内容是否以签署者允许的方式发生了更改。签名面板显示取证文档中每个数字签名的信息。每个数字签名都包含一个图标来识别验证状态。每个签名中列出了验证详细信息，并且可以通过展开签名来查看。签名面板提供了有关签名时间和签名者详细信息的信息。同样，数字签名验证取证数据文件的完整性，并且它是不可否认的。使用数字签名的原因是为了在基于6G的SDN-取证网络中，它可以很好地适应其在区块链系统中的特性。它将更加安全、适用，并且具有增加价值的潜力。
- en: '***(7) Time for Packet Classification (t***[***PC***]***).***'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '***(7) 数据包分类时间（t***[***PC***]***）。***'
- en: Packet classification is the process of categorizing packets into flows. In
    the SDN-forensic network, all packets go to the same destination equally. Packets
    are classified based on their headers, and they are classified into flows that
    are searched in flow tables. However, providing premium services to different
    users based on their quality requirements has become an issue that requires more
    requirements. All packets belonging to the same flow obey predefined rules and
    are similarly processed by the switch. For this, routers should be capable of
    distinguishing and isolating traffic belonging to different flows. This ability
    to determine packet flow is called packet classification. The forensic network
    uses an algorithmic solution for packet classification as it provides a deterministic
    performance, support for dynamic updates, and added flexibility for the forensic
    network as it takes advantage of the availability of cheap.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 包分类是将数据包分为流的过程。在SDN-取证网络中，所有数据包均平等地到达相同的目的地。数据包根据其标头进行分类，并被分类到在流表中搜索的流中。然而，根据用户的质量要求为不同用户提供优质服务已成为需要更多需求的问题。所有属于同一流的数据包都遵守预定义的规则，并由交换机类似地进行处理。为此，路由器应能够区分和隔离属于不同流的流量。这种确定数据包流的能力称为数据包分类。取证网络使用算法解决方案进行数据包分类，因为它提供了确定性能力、支持动态更新，并且利用了廉价的可用性，为取证网络提供了额外的灵活性。
- en: 'The forensic network''s key task is to run an algorithm for packet classification
    and handle large databases of classification rules. The primary task of routers
    is to forward packets from the input links to the appropriate output links. As
    packet classification arose out of the router''s need to classify traffic into
    various streams, the longest-running prefix matching techniques used in routing
    lookup tables formed the origin of packet classification techniques. The packet
    classification searches in a rules table for the highest priority rule or set
    of rules that match the packet. Packet classification is necessary to facilitate
    packet filtering for security reasons - firewall, packet delivery within specified
    delay limits (QoS), enabling premium services, policy-based routing, traffic and
    policing rate limitation, traffic shaping, and billing. Also, packet classification
    supports high network throughput in the forensic network. Packets are discriminated
    against, and many differentiated functionalities are enabled by packet classification.
    There are five tuples from packet headers used for classification: the protocol,
    destination and source ports, and source and destination addresses. There are
    two main metrics for packet classification that are speed in-memory access and
    memory. Packets are classified by source, destination ports, address, and protocol
    type.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 司法网络的关键任务是运行用于数据包分类的算法，并处理大型分类规则数据库。路由器的主要任务是将数据包从输入链路转发到适当的输出链路。由于数据包分类起源于路由器需要将流量分类到各种流中，所以路由查找表中使用的最长前缀匹配技术形成了数据包分类技术的起源。数据包分类在规则表中搜索与数据包匹配的最高优先级规则或一组规则。数据包分类对于促进出于安全原因的数据包过滤是必要的
    - 防火墙、在指定延迟限制内的数据包传递（QoS）、启用优质服务、基于策略的路由、流量和监管速率限制、流量整形和计费。此外，数据包分类支持司法网络中的高网络吞吐量。数据包被区分开，并且数据包分类启用了许多不同的功能。用于分类的数据包头有五个元组：协议、目的地和源端口以及源和目的地地址。数据包分类的两个主要指标是速度内存访问和内存。数据包根据源、目的地端口、地址和协议类型进行分类。
- en: Usually, packet classification is applied in the forwarding plane; however,
    we assume this process is applied in the controller plane due to its complexity,
    and blockchain is running on the controller network. At this stage, the context
    of the packets is identified, and important actions are performed. Some actions
    identified at this phase are dropping unauthorized packets, scoping, scheduling,
    prioritizing, and encrypting secure packets. We identify packet classification
    attributes such as user-identity, *devise_source_IP, destination_IP, time, location,*
    and *action*. The controller enables the communication of user authentication.
    However, the device which produces fake identity misleads the network resulting
    in the high-level packet feature complexity. Changes in packet attributes can
    cause a significant amount of time consumption.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据包分类应用于转发平面；然而，由于其复杂性，我们假设此过程应用于控制器平面，而区块链正在控制器网络上运行。在这个阶段，识别数据包的上下文，并执行重要的操作。在这个阶段识别到的一些行动包括丢弃未经授权的数据包，范围、调度、优先级和加密安全数据包。我们确定了数据包分类属性，如用户身份、*设备源IP、目标IP、时间、位置*和*动作*。控制器使用户认证通信得以实现。然而，产生假身份的设备误导了网络，导致高级数据包特征的复杂性。数据包属性的更改可能导致大量的时间消耗。
- en: '***(8) Time for Storing Records (t***[***R***]***).***'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '***(8) 存储记录的时间 (t***[***R***]***).***'
- en: 'Record storing and report generating are an essential part of the forensic
    software-defined network. All forensic records should be considered the evidence
    and should be fully accountable in the chain of custody. Likewise, documenting
    samples is vital, from the first point of entry into the investigation. Once the
    investigation agent uses the forensic data for his decision-making process, then
    transfer the updated forensic information and generate a report at this stage.
    Once forensic users do the modification for investigation purposes, the evidence
    is sent to either database or generated reports. In this stage, some objectives
    need to be achieved: ensure confidentiality and integrity of forensic evidence
    during its modification and storage time, ensure the evidence is collected from
    a secure system, and compute a non-repudiated proof of the existence of the forensic
    evidence.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 记录存储和报告生成是法证软件定义网络的重要组成部分。所有法证记录都应被视为证据，并在责任链中完全负责。同样，从调查的第一步开始记录样本至关重要。一旦调查人员使用法证数据进行决策过程，然后在此阶段传输更新的法证信息并生成报告。一旦法证用户对调查目的进行修改，证据就会被发送到数据库或生成的报告中。在这个阶段，需要实现一些目标：确保在修改和存储法证证据期间的保密性和完整性，确保证据是从安全系统中收集的，并计算出法证证据存在的不可否认的证据。
- en: Each record takes a specific time period for its own processing. The logger
    generates evidence log events and at the time, newly updated evidence materials
    with forensic results being inserted into the data log. The final output of the
    6G-based SDN-forensic network is producing forensic reports, and we consider them
    as data or evidence logs. The time complexity of report generation is high when
    volumes of data increase with more complex requests. The total computation time
    on the controllers during the forensic cycle is given by:![$$T_C \, = \,n{\text{
    }}(t_{PP} \, + \,t_{MF} \, + \,t_{CB} \, + \,t_{AB} \, + \,t_{FA} \, + \,t_{SV}
    \, + \,t_{PC} \, + \,t_R )$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ2.png)(2)We
    estimate the computational time of controllers and switches considered to be the
    best method to adopt in this investigation. Equations ([1](#Equ1)) and ([2](#Equ2))
    are obtained at processing times, where the total time consumption on the switch
    is *T*[*S*], and the total time consumption of controllers is *T*[*C*]. Therefore,
    the total computation time on SDN-forensics architecture in a cybersecurity blockchain
    6G-based IoT environment, *T*[*FSDN*] = *CT*[*S*] + C*T*[*C,*] is given by.![$$\begin{gathered}
    T_{FSDN} \, = \,n{\text{ }}(t_{ID} \, + \,t_{TP} \, + \,t_{PN} \, + \,t_{PS} \,
    + \,t_{Fe} )_ + \hfill \\ n{\text{ }}(t_{PP} \, + \,t_{MF} \, + \,t_{AB} \, +
    \,t_{CB} \, + \,t_{FA} \, + \,t_{SV} \, + \,t_{PC} \, + \,t_R ) \hfill \\ \end{gathered}$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ3.png)(3)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 每个记录都需要一定的时间来进行处理。记录器生成证据日志事件，并在此时，将新更新的法证结果插入到数据日志中。基于6G的SDN法证网络的最终输出是生成法证报告，我们将其视为数据或证据日志。随着数据量和请求的复杂性增加，报告生成的时间复杂度也很高。在法证周期内，控制器的总计算时间由以下公式给出：![$$T_C
    \, = \,n{\text{ }}(t_{PP} \, + \,t_{MF} \, + \,t_{CB} \, + \,t_{AB} \, + \,t_{FA}
    \, + \,t_{SV} \, + \,t_{PC} \, + \,t_R )$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ2.png)(2)我们估计控制器和交换机的计算时间是在此调查中采用的最佳方法。公式([1](#Equ1))和([2](#Equ2))是在处理时间得到的，其中交换机的总计算时间为*T*[*S*]，控制器的总计算时间为*T*[*C*]。因此，在网络安全区块链6G
    IoT环境中SDN法证架构的总计算时间，*T*[*FSDN*] = *CT*[*S*] + C*T*[*C,*]由以下公式给出：![$$\begin{gathered}
    T_{FSDN} \, = \,n{\text{ }}(t_{ID} \, + \,t_{TP} \, + \,t_{PN} \, + \,t_{PS} \,
    + \,t_{Fe} )_ + \hfill \\ n{\text{ }}(t_{PP} \, + \,t_{MF} \, + \,t_{AB} \, +
    \,t_{CB} \, + \,t_{FA} \, + \,t_{SV} \, + \,t_{PC} \, + \,t_R ) \hfill \\ \end{gathered}$$](../images/517376_1_En_7_Chapter/517376_1_En_7_Chapter_TeX_Equ3.png)(3)
- en: 4 Simulation Results
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 仿真结果
- en: 4.1 Simulation Setup
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1 仿真设置
- en: 'A detailed comparative study is presented on the following metrics: computation
    time on the data plane, computation time on the control plane associated with
    blockchain, and total time consumption in the forensic network. These parameters
    are significant for validating the achievements of the SDN-forensics in the cybersecurity
    blockchain-based IoT environment.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对以下指标进行了详细的比较研究：数据平面的计算时间，与区块链相关的控制平面的计算时间，以及法证网络的总耗时。这些参数对于验证基于SDN的网络安全区块链环境中SDN法证的成就至关重要。
- en: All parameter values used in our time estimation (for both simulation and the
    analysis) are listed in Table [1](#Tab1). Since our results are based on IoT device
    parameters, they are expected to estimate the real computational time on SDN-forensic
    architecture in a cybersecurity blockchain-based IoT environment. In our simulation,
    we consider the SDN-forensic network with *n* = 500 number of IoT devices. Consider
    our developed model as the square {(0,110), (100,115), (200,117), (300,118), (400,119),
    (450,120)} as in [[6](#CR6)]. We generate 500 random setups. Initially, OpenFlow
    switches are randomly placed to provide consistency in traffic management and
    engineering, by making the control function independent of the hardware it’s intended
    to control. The FS.COM switch product line consists of 100GbE switch (100G L2/L3
    Switch Loaded with ICOS, 48*25GbE ports + 6*100GbE ports) and supports OpenFlow
    1.3, which can be used as OpenFlow switches in the open networking environment.
    We generate 500 random setups, each with the following simulation setting. Therefore,
    each simulation data point is obtained by averaging over 500 random setups. We
    assume that the total number of nodes in the entire network ***n*** is 500, and
    each node reports data once every millisecond.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们时间估算中使用的所有参数值（用于模拟和分析）列在表 [1](#Tab1) 中。由于我们的结果基于物联网设备参数，因此预计它们将在基于区块链的网络安全物联网环境中估算SDN-法庭架构的实际计算时间。在我们的模拟中，我们考虑具有*n* = 500个物联网设备数量的SDN-法庭网络。将我们开发的模型视为[[6](#CR6)]中的方形
    {(0,110), (100,115), (200,117), (300,118), (400,119), (450,120)}。我们生成500个随机设置。最初，OpenFlow交换机被随机放置，以确保交通管理和工程具有一致性，使控制功能独立于其打算控制的硬件。FS.COM交换机产品线包括100GbE交换机（100G
    L2/L3交换机，配备ICOS，48*25GbE端口 + 6*100GbE端口），支持OpenFlow 1.3，可用作开放式网络环境中的OpenFlow交换机。我们生成500个随机设置，每个设置具有以下模拟设置。因此，每个模拟数据点是对500个随机设置进行平均得到的。我们假设整个网络中的节点总数***n***为500，每个节点每毫秒报告一次数据。
- en: The results and analysis in this study are performed using MATLAB (MathWorks
    Inc., Natick, MA, USA) R20202b on a computer with macOS High Catalina with Processor
    2 GHz Quad-Core Intel Core i5 and RAM (Random Access Memory) 16 GB 3733 MHz LPDDR4X.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本研究的结果和分析使用MATLAB（MathWorks Inc.，Natick，MA，美国）R20202b在具有macOS High Catalina处理器2 GHz四核Intel
    Core i5和RAM（随机存取存储器）16 GB 3733 MHz LPDDR4X的计算机上执行。
- en: Table 1
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 表1
- en: Simulation parameter values
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟参数值
- en: '| Symbol | Description | Value |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 符号 | 描述 | 值 |'
- en: '| --- | --- | --- |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| *T*[*S*] | Total time consumption of switches | – |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| *T*[*S*] | 交换机总耗时 | – |'
- en: '| *t*[*ID*] | Time for IoT device initialization | 0.02 ms [[2](#CR2)] |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*ID*] | 物联网设备初始化时间 | 0.02 毫秒 [[2](#CR2)] |'
- en: '| *t*[*TP*] | Time for traffic processing | 4 ms [[6](#CR6)] |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*TP*] | 交通处理时间 | 4 毫秒 [[6](#CR6)] |'
- en: '| *t*[*PN*] | Time for port number validation | 2 ms |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*PN*] | 端口号验证时间 | 2 毫秒 |'
- en: '| *t*[*PS*] | Time for packet priority scheduling | 3 ms [[7](#CR7)] |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*PS*] | 包优先级调度所需时间 | 3 毫秒 [[7](#CR7)] |'
- en: '| *t*[*Fe*] | Time for flow entries verification | 0.5 ms [[8](#CR8)] |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*Fe*] | 流表项验证时间 | 0.5 毫秒 [[8](#CR8)] |'
- en: '| *T*[*c*] | Total time consumption of controllers | – |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| *T*[*c*] | 控制器总耗时 | – |'
- en: '| *t*[*PP*] | Time for packet identification | 0.135 ms [[9](#CR9)] |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*PP*] | 包识别时间 | 0.135 毫秒 [[9](#CR9)] |'
- en: '| *t*[*MF*] | Time for manipulating flow tables | 0.4 ms [[10](#CR10)] |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*MF*] | 操作流表所需时间 | 0.4 毫秒 [[10](#CR10)] |'
- en: '| *t*[*CB*] | Time for creating backups | 1 ms [[11](#CR11)] |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*CB*] | 创建备份所需时间 | 1 毫秒 [[11](#CR11)] |'
- en: '| *t*[*AB*] | Time for adding up block | 2.85 ms |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*AB*] | 区块添加时间 | 2.85 毫秒 |'
- en: '| *t*[*SV*] | Time for signature validation | 100 ms [[12](#CR12)] |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*SV*] | 签名验证时间 | 100 毫秒 [[12](#CR12)] |'
- en: '| *t*[*PC*] | Time for packet classification | 0.0004 ms [[1](#CR1)] |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*PC*] | 包分类所需时间 | 0.0004 毫秒 [[1](#CR1)] |'
- en: '| *t*[*R*] | Time for storing records | 0.02 ms |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| *t*[*R*] | 记录存储时间 | 0.02 毫秒 |'
- en: We assume that ***t***[***ID***] is not a constant value because each device
    has its own capabilities. There are four major categories of capabilities including
    transducer capabilities, data capabilities, interface capabilities, and supporting
    capabilities. Transducer capabilities include sensing, actuating, and data capabilities
    include data processing, data storing, application capabilities include application
    interface, human user interface, network interface, supporting capabilities, device
    management, cybersecurity capabilities, privacy capabilities. However, the initial
    stage of the SDN-forensic network is the device initialization. Therefore, total
    time consumption corresponds to IoT devices. The time consumption on switches
    is based on the IoT device initialization and traffic processing because IoT devices
    contain unique identifiers that provide fast access to the network. However, artificial
    intelligence and machine learning of IoT devices are making the process easier
    and more dynamic. A firewall is configured not to allow devices with unwanted
    traffic except ***T***[***V***], ***T***[***f***], and ***T***[***h***], and time
    for traffic processing increases in the natural order to the number of IoT devices.
    In the switches, the ***t***[***TP***], ***t***[***PN***], and ***t***[***Fe***]
    have a mutual connection. Therefore, the time consumption of port number validation
    and flow entry verification is high in accordance with IoT device initialization.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设***t***[***ID***]不是一个固定值，因为每个设备都有其自己的能力。能力的四个主要类别包括传感器能力、数据能力、接口能力和支持能力。传感器能力包括感知和执行，数据能力包括数据处理和数据存储，应用能力包括应用接口、人机界面、网络接口，支持能力包括设备管理、网络安全能力、隐私能力。然而，SDN取证网络的初始阶段是设备初始化。因此，总时间消耗与物联网设备相对应。在交换机上的时间消耗基于物联网设备初始化和流量处理，因为物联网设备包含提供快速访问网络的唯一标识符。然而，物联网设备的人工智能和机器学习正在使这一过程变得更加简单和动态化。防火墙被配置为不允许具有不需要的流量的设备，除了***T***[***V***]、***T***[***f***]和***T***[***h***]外，流量处理的时间按照物联网设备数量的自然顺序增加。在交换机上，***t***[***TP***]、***t***[***PN***]和***t***[***Fe***]之间存在相互关系。因此，端口号验证和流入验证的时间消耗随着物联网设备初始化而增加。
- en: We consider the time consumption of packet identification is usually high due
    to the variation of packet size. Every packet needs to be monitored to filter
    the malicious traffic at the beginning. While processing a packet, switches may
    check for bit-level errors in the packet that occurred during transmission and
    determine where the packet's next destination is. When the packet identification
    time is high, the time consumption of packet processing is high. Thus, we identify
    the packet processing delay as a constant delay that faces the source and destination.
    The turnaround time of flow table manipulation is related to the speed at which
    the controller handles packet in, we assume it takes a considerable amount of
    time to proceed. In order, ***t***[***CB***], ***t***[***AB***], ***t***[***FA***],
    ***t***[***SV***], ***t***[***PC***], and ***t***[***R***] increases in accordance
    with ***t***[***PP***]. Further analysis of Fig. [5](#Fig5) shows that regardless
    of the number of IoT devices, the total time consumption on the SDN-forensic network
    of 6G environment is high when the time consumption of controllers increases in
    the natural order to time consumption of switches. Therefore, it is interesting
    to note that *CT*[*S*] < C*T*[*C*] and ***T***[***FSDN***] are high (Table [2](#Tab2)).![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig5_HTML.png)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们考虑数据包识别的时间消耗通常较高，因为数据包大小的变化。每个数据包都需要监视以在开始时过滤恶意流量。在处理数据包时，交换机可能会检查数据包中发生的传输过程中的位级错误，并确定数据包的下一个目的地。当数据包识别时间较长时，数据包处理的时间消耗也较高。因此，我们将数据包处理延迟识别为面向源和目的地的常量延迟。流表操作的周转时间与控制器处理数据包的速度有关，我们假设这需要相当长的时间。按照***t***[***PP***]的顺序，***t***[***CB***]、***t***[***AB***]、***t***[***FA***]、***t***[***SV***]、***t***[***PC***]和***t***[***R***]的进一步分析图 [5](#Fig5)表明，无论物联网设备的数量如何，在控制器时间消耗自然增长到交换机时间消耗时，6G环境下SDN取证网络的总时间消耗都很高。因此，值得注意的是*CT*[*S*] < C*T*[*C*]和***T***[***FSDN***]较高（表 [2](#Tab2)）。![](../images/517376_1_En_7_Chapter/517376_1_En_7_Fig5_HTML.png)
- en: A graph is drawn where the x-axis represents the number of IoT devices, whereas
    the y-axis represents time consumption (ms). Switches are on the blue line, and
    controllers are on a green line. The Red line gives the total.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制了一张图，其中x轴表示物联网设备数量，y轴表示耗时（毫秒）。交换机在蓝线上，控制器在绿线上。红线表示总计。
- en: Fig. 5
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5
- en: The total time consumption corresponding to the number of IoT devices on SDN-forensic
    architecture. Here we consider n=500 number of IoT devices. This shows the time
    difference between the switches operation and controllers operation has a significant
    effect on the SDN-forensic networks total computation time
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备数量对SDN取证架构的总耗时有影响。在这里我们考虑了n=500个物联网设备。这显示了交换机操作和控制器操作之间的时间差异对SDN取证网络的总计算时间有显著影响。
- en: Table 2
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2
- en: Time consumption in ms
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 消耗时间（毫秒）
- en: '| Number ofIoT devices | Switches(ms) | Controllers(ms) | Total(ms) |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 物联网设备数量 | 交换机（毫秒） | 控制器（毫秒） | 总计（毫秒） |'
- en: '| --- | --- | --- | --- |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 7.7 | 102 | 109 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 7.7 | 102 | 109 |'
- en: '| 50 | 395.8 | 5180 | 5576 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 50 | 395.8 | 5180 | 5576 |'
- en: '| 100 | 786.4 | 10,264 | 11,051 |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 100 | 786.4 | 10,264 | 11,051 |'
- en: '| 150 | 1206.7 | 15,347 | 16,554 |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 150 | 1206.7 | 15,347 | 16,554 |'
- en: '| 200 | 1654.0 | 20,430 | 22,084 |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 200 | 1654.0 | 20,430 | 22,084 |'
- en: '| 250 | 2211.9 | 25,518 | 27,729 |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 250 | 2211.9 | 25,518 | 27,729 |'
- en: '| 300 | 2697.2 | 30,602 | 33,299 |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 300 | 2697.2 | 30,602 | 33,299 |'
- en: '| 350 | 3162.6 | 35,715 | 38,878 |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 350 | 3162.6 | 35,715 | 38,878 |'
- en: '| 400 | 3754.3 | 40,805 | 44,559 |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 400 | 3754.3 | 40,805 | 44,559 |'
- en: '| 450 | 4287.6 | 45,902 | 50,189 |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 450 | 4287.6 | 45,902 | 50,189 |'
- en: For our simulation, we consider the increase in the number of IoT devices. Note
    that we should examine controllers because the amount of data transmitted to controllers
    increases and then, it is a challenge in the IoT environment. The time consumption
    on switches slowly increases, and therefore, we do not consider switches. As in
    our simulation, the time consumption increment of controllers is high. As a result
    of this, expanding the network then impacts the latency. Network latency is referred
    to as block time, and this is the most crucial factor affecting the overall performance
    of the 6G-based SDN-forensic network. Latency is a big issue in the real world.
    The reason is latency drives the responsiveness of the network. Therefore, in
    the forensic network, latency becomes a particular problem.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的模拟，我们考虑了物联网设备数量的增加。请注意，我们应该检查控制器，因为传输到控制器的数据量增加了，这在物联网环境中是一个挑战。交换机上的时间消耗逐渐增加，因此我们不考虑交换机。在我们的模拟中，控制器的时间消耗增量很高。由于这个原因，扩展网络会影响延迟。网络延迟被称为块时间，这是影响基于6G的SDN取证网络整体性能的最关键因素。延迟在现实世界中是一个大问题。原因在于延迟驱动网络的响应性。因此，在取证网络中，延迟成为一个特别的问题。
- en: Network latency, scalability, bandwidth, and throughput are all interrelated
    components of the SDN-forensic network. However, they all measure different things.
    There are many IoT devices that need to reach a consensus for a transaction to
    be verified. The forensic network does not allow any number of data packets at
    the same time. It has a maximum amount of data that can pass through the network
    in the given time. It is the way bandwidth integrates with the 6G-based SDN-forensic
    network. Thus, there is an average amount of data that passes through over the
    network, and it's the throughput of the forensic network. According to our results,
    throughput is not equivalent to bandwidth, because latency affects it. Each node
    requires access to the entire forensic blockchain. Therefore, it takes a long
    time for a data packet to be sent to the forensic network's destination. Therefore,
    it has a high latency network connection. In the data packet transmission, time
    is the major constraint that causes latency. When data packets get delayed traveling
    to their destination, the entire network process gets delayed. Latency and scalability
    are the primary aspects of the SDN-forensic architecture of the 6G network. Network
    latency impacts the forensic network's scalability, and therefore, controllers
    are unable to grab many packets. Thus, poor scalability can result in poor network
    performance.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 网络延迟、可扩展性、带宽和吞吐量都是SDN取证网络的相互关联的组成部分。然而，它们衡量的是不同的东西。有许多物联网设备需要达成一致意见才能验证交易。取证网络不允许同时传输任意数量的数据包。它在给定时间内可以通过网络的数据量有一个最大值。这就是带宽与基于6G的SDN取证网络相结合的方式。因此，有一个平均通过网络的数据量，这就是取证网络的吞吐量。根据我们的结果，吞吐量并不等同于带宽，因为延迟会影响它。每个节点都需要访问整个取证区块链。因此，将数据包发送到取证网络目的地需要很长时间。因此，它具有高延迟的网络连接。在数据包传输中，时间是导致延迟的主要约束。当数据包延迟到达目的地时，整个网络过程都会延迟。延迟和可扩展性是6G网络SDN取证架构的主要方面。网络延迟影响了取证网络的可扩展性，因此，控制器无法抓取许多数据包。因此，较差的可扩展性可能导致网络性能不佳。
- en: This latency is a specifically sensitive issue. However, the forensic network
    will lead to poor quality, if not handled properly. Network latency heavily influences
    the SDN-forensic network. Also, controllers find it hard to tolerate several IoT
    devices and amounts of data. Therefore, forensic network processing time is increased.
    In simple terms, in the SDN-forensic-based processing delay impacts the entire
    network progress. Less scalability of the forensic network is not capable of performing
    gracefully, as the offered traffic decreases. The poor scalable forensic network
    repeatedly engages in a wasteful activity, and therefore, it cannot fully take
    advantage due to latency and scalability issues. In consequence, it can have a
    huge impact on final throughput.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 此延迟是一个特别敏感的问题。然而，如果不正确处理，取证网络将导致质量不佳。网络延迟严重影响SDN取证网络。此外，控制器发现很难容忍多个物联网设备和大量数据。因此，取证网络处理时间增加。简单来说，在基于SDN取证的处理中，延迟会影响整个网络进度。取证网络的可扩展性较差，无法在提供的流量减少时优雅地执行。可扩展性较差的取证网络反复从事浪费性活动，因此，由于延迟和可扩展性问题，它无法充分利用。因此，它可能对最终吞吐量产生巨大影响。
- en: Providing access to the entire blockchain network to hundreds of nodes also
    increases the computation time. We cannot ignore computation time as it has an
    insignificant high-level time consumption. However, in the 6G SDN-forensic network
    computation time is quite large, especially where controllers are performing complex
    encryption algorithms. In the controller's process, data packets are examined
    for their security which can cause substantial delays in some other steps in the
    controllers’ process. Another point of view, although the switches process has
    less time consumption than controllers, we cannot decide that the switches process
    does not have a delay. OpenFlow switches in the forensic network perform network
    address translation, and there are higher than average processing delays due to
    switches examining and modifying both incoming and outgoing packets. The forensic
    network's scalability issue will be the major drawback of the SDN-forensic network
    as the scalability has a growing demand, which is crucial to the long-term success
    of the forensic network.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将整个区块链网络提供给数百个节点也会增加计算时间。我们不能忽视计算时间，因为它消耗了高水平的时间。然而，在6G SDN-取证网络中，计算时间相当大，特别是在控制器执行复杂的加密算法的情况下。在控制器的过程中，数据包会被检查其安全性，这可能会在控制器的其他步骤中造成重大延迟。另一种观点，虽然交换机的处理时间消耗比控制器少，但我们不能断定交换机的处理过程没有延迟。取证网络中的OpenFlow交换机执行网络地址转换，并且由于交换机检查和修改传入和传出的数据包，导致高于平均水平的处理延迟。取证网络的可扩展性问题将是SDN-取证网络的主要缺点，因为可扩展性具有日益增长的需求，这对取证网络的长期成功至关重要。
- en: We can apply the observation of this analysis in a real-world scenario. The
    IoT applications such as vehicular ad-hoc networks and SDN-based 6G network models,
    where the computation time estimation is essential. These systems require reliable
    data transmission. Therefore, computation time estimation is a crucial part of
    these systems, ensuring the time complexity to improve the throughput. Finally,
    the topic of interest may benefit the vital topic of SDN-based IoT as well as
    blockchain. Integrating a blockchain with fog computing and IoT to store and compute
    data at the edge hubs, associated with the off-chain system, may answer scalability
    issues.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将此分析的观察应用于现实场景。物联网应用，如车载自组网和基于SDN的6G网络模型，在这些系统中，计算时间估计是至关重要的。这些系统需要可靠的数据传输。因此，计算时间估计是这些系统的重要部分，确保时间复杂度以提高吞吐量。最后，感兴趣的主题可能也有益于基于SDN的物联网以及区块链的重要主题。将区块链与雾计算和物联网集成，以在边缘集线器存储和计算数据，并与离链系统关联，可能会解决可扩展性问题。
- en: To a certain extent, sharding is a prominent solution [[13](#CR13)–[16](#CR16)]
    for making transaction verification in parallel rather than linearly.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在一定程度上，分片是一个突出的解决方案[[13](#CR13)–[16](#CR16)]，可以使事务验证并行进行，而不是线性进行。
- en: 5 Future Directions
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未来的五个方向
- en: However, more research on this topic needs to be undertaken before the association
    between switches and controllers is more clearly understood.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在更清楚地理解交换机和控制器之间的关联之前，需要进行更多关于这个主题的研究。
- en: '***Enhancing for forwarding plane***'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '***增强转发平面***'
- en: As the SDN is improved, the control plane becomes more flexible and scalable
    with new Open-Flow apps. The processing power of software-based controllers can
    be improved through parallel processing or installing a powerful server's controller.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 随着软件定义网络（SDN）的改进，控制平面变得更加灵活和可扩展，具有新的OpenFlow应用程序。基于软件的控制器的处理能力可以通过并行处理或安装强大服务器的控制器来提高。
- en: '***Improving manageability***'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '***提高可管理性***'
- en: Improving network management using software-defined networks explores the advantage
    of the software-defined network, simplifying network policy management, in high-
    evel language, that provides expression and flexibility.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 使用软件定义网络改进网络管理探索了软件定义网络的优势，在高级语言中，简化网络策略管理，提供表达和灵活性。
- en: '***Languages for Software-Defined Network***'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '***软件定义网络的语言***'
- en: High-level abstractions investigate the high-level programming abstractions
    that need to simplify the creation of SDN applications.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 高级抽象研究了需要简化SDN应用程序创建的高级编程抽象。
- en: '***SDN Platform for Cloud Network Services***'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '***云网络服务的SDN平台***'
- en: The SDN platform explores the SDN application to enable application-level abstractions
    to communicate in cloud environments.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: SDN平台探索了SDN应用程序，以实现在云环境中进行应用级抽象的通信。
- en: '***Routing and service convergence using SDN***'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '***使用SDN进行路由和服务收敛***'
- en: The major challenges for operators in the near future pertain to providing convergent,
    dynamic, and adaptive networks in the context of a multi-services, multi-protocols,
    and multi-technology environment.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 运营商未来面临的主要挑战涉及在多服务、多协议和多技术环境中提供一体化、动态和自适应网络。
- en: '***Prototype testbed to implement SDN features***'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '***用于实现 SDN 功能的原型测试平台***'
- en: The 6G-based SDN's various features, such as a controller node provides responsibility
    for collecting routing information and making routing decisions centrally. The
    SDN data plane will be the hypervisor (compute node) in the prototype model and
    the Software-Defined Networking functionality in a private cloud built using OpenStack.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 6G 的 SDN 的各种特性，例如控制器节点负责收集路由信息并集中做出路由决策。在原型模型中，SDN 数据平面将是虚拟化管理程序（计算节点），并且使用
    OpenStack 构建的私有云中的软件定义网络功能。
- en: '***Energy-efficient edge computing model***'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '***能源高效的边缘计算模型***'
- en: Develop an energy-efficient edge computing model using SDN, NFV, and blockchain
    technology to mitigate or prevent end-to-end delay, network bandwidth, other network
    vulnerabilities, and various passive and active network attacks.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 SDN、NFV 和区块链技术开发一个能源高效的边缘计算模型，以减轻或预防端到端延迟、网络带宽、其他网络漏洞以及各种被动和主动网络攻击。
- en: 6 Conclusion
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 结论
- en: We developed a model to estimate the computational time on the SDN-forensics
    architecture with cybersecurity through a 6G network that works in the blockchain-based
    IoT environment. Our study presented results to demonstrate the effectiveness
    of the model. We modeled the computation process and time estimation. We have
    concluded that the total time consumption on the 6G SDN-forensic network increases
    with the time consumption of controllers and the time consumption on switches
    regardless of the number of IoT devices used. On the other hand, time consumption
    is higher in controllers than switches, and time consumption increment is higher
    in controllers than switches. Therefore, our study enhanced the understanding
    of the computational time on 6G-based SDN-forensic architecture in a blockchain-based
    IoT environment. However, the current study was not specifically designed to evaluate
    the computational time estimation on SDN for each application. The current findings
    substantially add to our understanding of signature validation's time duration,
    which is not a standard step in all applications. This chapter also provided a
    time estimation for achieving efficient results, with all the essential factors
    that influence the life expectancy on SDN-forensics architecture in the cybersecurity
    blockchain-based IoT environment.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开发了一个模型，通过一个在区块链物联网环境中运行的 6G 网络的 SDN 取证架构，来估计计算时间。我们的研究呈现了结果，以证明该模型的有效性。我们对计算过程和时间估计进行了建模。我们得出的结论是，在使用的物联网设备数量不变的情况下，6G
    SDN 取证网络的总耗时随控制器的耗时和交换机的耗时而增加。另一方面，控制器的耗时高于交换机，而控制器的耗时增量高于交换机。因此，我们的研究增进了对基于区块链物联网环境中的
    6G SDN 取证架构的计算时间的理解。然而，当前研究并未专门设计用于评估 SDN 中每个应用程序的计算时间估计。当前的发现在我们对签名验证的时间持续性的理解方面做出了实质性的贡献，这不是所有应用程序的标准步骤。本章还提供了一个时间估计，用于在网络安全区块链物联网环境中实现高效结果的生命周期的所有基本因素。
