- en: esting to most people, that is, the current state of ownership.
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人，也就是说，所有权的当前状态。
- en: How It Works
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如何运作
- en: 'Documenting ownership with the blockchain involves the following aspects:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用区块链记录所有权涉及以下方面
- en: • Describing the transfer of ownership
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: •描述所有权的转移
- en: • Maintaining the history of transfers
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: •维护转账历史记录
- en: Describing the Transfer of Ownership
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 描述所有权转移
- en: A *transaction* is the act of transferring ownership from one owner to someone
    else. The act of transferring ownership relies on data that descibe the
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*交易* 是将所有权从一个所有者转移给其他人的行为。所有权转移的行为依赖于描述的数据'
- en: intended transfer. These data contain all information necessary to execute
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的转移。这些数据包含执行所需的所有信息
- en: the transfer of ownership. An example of data that describe an intended
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权的转移。描述预期的数据示例
- en: transfer of ownership would be a bank transfer form that is used to request
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，转移所有权将是用于请求的银行转账表
- en: a bank to make a money transfer on behalf of a customer. The bank transfer
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一家银行代表客户进行汇款。银行转账
- en: form requires you to provide all information necessary to allow the bank to
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 表格要求您提供允许银行进行的所有必要信息
- en: make the transfer on your behalf. In a similar fashion, the information used
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 代表您进行转账。类似地，使用的信息
- en: 'by the blockchain to describe a transaction are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链用于描述交易的数据为：
- en: • An identifier of the account that is to hand off ownership
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: •要转移所有权的帐户的标识符
- en: to another account
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 到另一个账户
- en: • An identifier of the account that is to receive ownership
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: •要接收所有权的帐户的标识符
- en: • The amount of the goods to be transferred
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: •要转移货物的金额
- en: • The time the transaction is to be done
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: •交易要进行的时间
- en: • A fee to be paid to the system for executing the
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: •为执行支付给系统的费用
- en: transaction
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 交易
- en: • A proof that the owner of the account that hands off
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: •证明移交账户所有者
- en: ownership indeed agrees with that transfer
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权确实同意该转移
- en: Most of these data are familiar to anyone who has made a money transfer
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据大多对已经进行过汇款的人来说是熟悉的
- en: with a bank. However, the analogy with a bank transfer ends when fees are
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与银行。但是，与银行转账的类比在收取费用时结束
- en: considered. Due to the fact that banks are centralized institutions, they main-
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 被考虑。由于银行是中央机构，他们主要-
- en: tain a central fee schedule that is applied to all customers. In contrast to
    that, the blockchain is a distributed system without any central point of control.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 包含适用于所有客户的中央费用计划。与此相反，区块链是一个没有任何中央控制点的分布式系统。
- en: Hence, the blockchain cannot have a central fee schedule. When using the
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，区块链不能有中央费用计划。在使用时
- en: '66'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '66'
- en: '***Step 9 | Documenting Ownership***'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '***第9步 |文档所有权***'
- en: blockchain, each user has to tell the system in advance how much he or she is
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链，每个用户都必须提前告诉系统他或她愿意支付多少
- en: willing to pay for having the transaction executed. The account that hands off
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 愿意支付以执行交易的帐户。移交帐户
- en: ownership also pays the transaction fee.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权还支付交易费用。
- en: Maintaining the History of Transfers
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 维护转移历史记录
- en: Transaction data provide the mandatory information necessary to execute a
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据提供了执行所必需的强制信息
- en: transfer of ownership as intended. Executing a transaction means making the
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的所有权转移。执行交易意味着进行
- en: transfer of ownership happen as described by the transaction data. Executing
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通过交易数据描述的方式发生的所有权转移。执行
- en: a transaction means adding the transaction data to a ledger. By adding transac-
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 意。向账本中添加交易数据来添加交易
- en: tion data to a ledger, the transaction becomes part of the transaction history,
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 向账本添加交易数据，交易成为交易历史记录的一部分，
- en: which is used to clarify ownership. When the ledger is used the next time
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 用于澄清所有权。下次使用账本时
- en: to clarify ownership by aggregating the transaction data it contains, the newly
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过聚合它包含的交易数据来澄清所有权，新添加的
- en: added transaction will be included in the aggregation and hence will impact
    the
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 添加的交易将被包括在汇总中，因此会对
- en: resulting state of ownership.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的所有权状态。
- en: The blockchain maintains the whole history of all transactions that have ever
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链维护了有史以来发生的所有交易的整个历史
- en: happened by storing their transaction data in the blockchain-data-structure
    in
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将其交易数据存储在区块链数据结构中发生
- en: the order in which they occurred. Any transaction not being part of that his-
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 他们发生的顺序。任何不是这样的交易His-
- en: tory is regarded as if it never happened. Hence, adding transaction data to
    the
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 被视为从未发生过。因此，将交易数据添加到
- en: blockchain-data-structure means making this transaction happen and allowing
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构意味着进行这笔交易并允许
- en: it to influence the result of using the history in order to identify the current
    owner.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 它影响使用历史记录的结果来识别当前所有者。
- en: Why It Works
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么它有效
- en: Since transaction data contain all the information about the account that
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于交易数据包含有关帐户的所有信息
- en: hands off ownership, the account that receives ownership, and the item and
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 交接所有权、接收所有权的帐户以及物品和
- en: the amount to be transferred, one can reconstruct ownership information
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要转移的金额，可以重建所有权信息
- en: for each account as long as the whole history of transactions is available.
    As
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 只要所有交易的完整历史记录都可用。由于
- en: a result, the whole history of all transaction data is sufficient to document
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，所有交易数据的完整历史足以记录
- en: ownership.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权。
- en: Importance of Ordering
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 订单的重要性
- en: Aggregating transaction data is done for the purpose of recovering the current
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合交易数据是为了恢复当前
- en: state of ownership and clarifying ownership. It is important to recognize that
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权状态并澄清所有权。重要的是要认识到
- en: the order in which the transactions occurred must be preserved in order to
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 交易发生的顺序必须得保持，以便
- en: arrive at the identical result every time the data are aggregated. Changing
    the
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 每次聚合数据时都会到达相同的结果。改变
- en: order of transaction data will change the result of aggregating them. At first
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据的顺序将改变聚合它们的结果。起初
- en: glance, the result does not seem to change very much whether I receive a
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一览，结果似乎并没有发生太大的改变，无论是我先收到
- en: payment of $50 from a friend first and transferred $50 afterward in order to
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 朋友的$50支付，然后转账了$50，以便
- en: pay a bill or whether these two transactions occurred in the opposite order.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 付款或这两笔交易发生的顺序相反。
- en: But what happens if my bank account does not contain any money at all and I
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果我的银行账户根本没有任何钱
- en: '***Blockchain Basics***'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '67'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '67'
- en: am not allowed to overdraw it? In this case, my ability to pay my bill depends
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许透支吗？在这种情况下，我支付账单的能力取决于
- en: on having received the payment from my friend first. Otherwise, the bank will
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在我朋友那里收到付款。否则，银行将
- en: refuse to transfer the money to pay the bill due to a lack of funds. Hence,
    the
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 拒绝转移资金支付账单，因为资金不足。因此
- en: order in which transactions occur does indeed matter.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据的顺序确实很重要。
- en: Integrity of the Transaction History
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 交易历史的完整性
- en: Without exaggeration, one can state that the history of transaction data is
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不夸张地说，交易数据的历史是
- en: the heart of any blockchain that manages ownership because it is the basis for
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 管理所有权的任何区块链的核心，因为它是
- en: reconstructing the state of ownership. As a result, it is necessary to keep
    that history of data safe, complete, correct, and consistent in order to maintain
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 重建所有权状态。因此，有必要确保数据的历史安全、完整、正确和一致，以维持
- en: the integrity of the whole system and, as a result, be able to make true state-
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 整个系统的完整性，因此能够制作真实状态-
- en: ments regarding the current state of ownership. Hence, the blockchain needs
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 关于所有权当前状态的陈述。因此，区块链需要
- en: to provide security measures to ensure that only valid transaction data are
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 提供安全措施，以确保只有有效的交易数据
- en: added to the blockchain-data-structure. Examining validity of transaction data
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到区块链数据结构中。检验交易数据的有效性
- en: 'involves three aspects:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 包括三个方面：
- en: • Formal correctness
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: • 形式正确性
- en: • Semantic correctness
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: • 语义正确性
- en: • Authorization
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: • 授权
- en: Formal Correctness
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 形式正确性
- en: '*Formal correctness* means that the description of a transaction contains all
    required data and that the data are provided in the correct format.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*形式正确性*意味着交易描述包含所有必需的数据，并且数据以正确的格式提供。'
- en: Semantic Correctness
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 语义正确性
- en: '*Semantic correctness* focuses on the meaning of transaction data and their
    intended effect. Hence, validating semantic correctness requires knowledge'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*语义正确性*关注交易数据的含义及其预期效果。因此，验证语义的正确性需要知识'
- en: of the business domain. Examining semantic correctness of transaction data is
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 的业务域。检验交易数据的语义正确性是
- en: 'often done based on business rules, such as:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 通常是基于业务规则完成的，比如：
- en: • Ensuring that an account does not hand off more than it
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: • 确保账户未超出更多
- en: currently owns
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当前拥有
- en: • Preventing double spending
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: • 防止双重支付
- en: • Limiting the amount of items that can be transferred in a
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: • 限制可以在一定时间内转移的物品数量
- en: single transaction
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 单个交易
- en: • Limiting the number of transactions per user
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: • 限制每个用户的交易次数
- en: • Limiting the total amount of items spent in a given time period
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: • 限制在给定时间段内花费的物品总数
- en: • Enforcing that an account keeps an item for a minimum
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: • 强制帐户至少保留一件物品的时间
- en: time period before it can be transferred further
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的时间段才能进一步转移
- en: '68'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '68'
- en: '***Step 9 | Documenting Ownership***'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤9 | 记录所有权***'
- en: Authorization
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 授权
- en: Only the owner of the account who hands off ownership should be allowed
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 只有账户所有者可以转移所有权
- en: to advise the blockchain to execute a transaction on his or her behalf. As a
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以代表区块链执行其交易。作为
- en: result, the blockchain requires every transaction to carry information that
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，区块链要求每笔交易携带信息
- en: proves that the owner of the account who hands off ownership indeed agrees
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 证明账户所有者的所有权转让确实同意
- en: with that transfer.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与该转移。
- en: Outlook
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step explained transactions and their role for clarifying ownership. The
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步解释了交易及其在澄清所有权方面的作用。该
- en: following steps are mainly concerned with how the blockchain enforces that
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤主要涉及区块链如何强制执行
- en: only valid transaction data are added to the history and how the history is
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 只有有效的交易数据被添加到历史中，以及历史是如何
- en: protected from being manipulated or forged.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 受到操纵或伪造的保护。
- en: Summary
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: • Transaction data provide the following information for
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: • 交易数据为以下信息提供
- en: 'describing a transfer of ownership:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 描述所有权转移：
- en: • An identifier of the account who initiates the transaction
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: • 发起交易的账户的标识符
- en: and is to transfer ownership to another account
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 并且要将所有权转让给另一个账户
- en: • An identifier of that account that is to receive ownership
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: • 接收所有权的帐户的标识符
- en: • The amount of the goods to be transferred
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: • 要转移的货物数量
- en: • The time the transaction is to be done
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: • 交易应完成的时间
- en: • A fee to be paid to the system for executing the
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: • 要支付给系统以执行交易的费用
- en: transaction
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 交易
- en: • A proof that the owner of the account who hands off
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: • 证明账户所有者的所有权转让
- en: ownership agrees with that transfer
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权者同意转移
- en: • The complete history of transaction data is an audit
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: • 交易数据的完整历史是一种审计
- en: trail that provides evidence of how people acquired and
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 为人们如何获取和
- en: handed off ownership.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 转让了所有权。
- en: • Any transaction not being part of that history is regarded
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: • 任何未参与历史的交易都被视为
- en: as if it never happened.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 好像它从未发生过。
- en: • A transaction is executed by adding it to the history of
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: • 通过将其添加到历史记录中来执行交易
- en: transaction data and allowing it to influence the result of
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据且允许其影响结果
- en: aggregating them.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合它们。
- en: '***Blockchain Basics***'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '69'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '69'
- en: • The order in which transaction data are added to the his-
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: • 添加到他的顺序中的交易数据
- en: tory must be preserved in order to yield identical results
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 必须保留才能产生相同的结果
- en: when aggregating these data.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在聚合这些数据时
- en: • In order to maintain integrity, only those transaction data
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: • 为了保持完整性，只有那些交易数据
- en: are added to the blockchain-data-structure that fulfill the
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 被添加到满足的区块链数据结构中
- en: 'following three criteria:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三个标准：
- en: • Formal correctness
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: • 正式正确性
- en: • Semantic correctness
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: • 语义正确性
- en: • Authorization
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: • 授权
- en: '**S T E P**'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤**'
- en: '10'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '10'
- en: Hashing Data
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 散列数据
- en: Identifying data from their digital fingerprint
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过其数字指纹识别数据
- en: This step explains one of the most important base technologies of the
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步解释了区块链最重要的基础技术之一
- en: 'blockchain: hash values. It discusses important properties of cryptographic'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链：哈希值。它讨论了密码哈希值的重要特性
- en: hash functions and introduces patterns of applying hash functions to data.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数并介绍了应用哈希函数到数据的模式。
- en: The Metaphor
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 隐喻
- en: Fingerprints are impressions of the friction ridges of all or any part of the
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹是所有或者任何部分的摩擦褶皱的印记
- en: fingers of the human hand. They are considered to be able to identify humans
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 人手指的摩擦褶皱印记。它们被认为能够识别人类
- en: uniquely. They have been used to investigate crimes, identify offenders, and
    to
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 独特地。它们已被用于调查犯罪，识别犯罪分子，并
- en: exonerate the innocent. This step introduces a concept for identifying data,
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 使无辜者免责。这一步引入了一种用于识别数据的概念，
- en: which can be seen as the digital equivalent to fingerprints. The concept is
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这可视为指纹的数字等效物。这一概念是
- en: called cryptographic hash value, and the blockchain makes extensive use of it.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 称为密码哈希值，并且区块链广泛使用它。
- en: Hence, understanding cryptographic hashing is mandatory for understanding
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，了解加密哈希是理解的强制性
- en: the blockchain.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链。
- en: The Goal
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: In the distributed peer-to-peer system, you will deal with a huge number
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式对等系统中，您将处理大量
- en: of transaction data. As a result, you will need to identify them uniquely and
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据。因此，您需要将它们唯一地识别并
- en: compare them as quickly and as easily as possible. Hence, the goal is to iden-
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 尽快简单地比较它们。因此，目标是识别-
- en: tify transaction data and possibly any kind of data uniquely by their digital
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一地识别交易数据和可能任何类型的数据
- en: fingerprints.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹。
- en: © Daniel Drescher 2017
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: © 丹尼尔·德雷施 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_10
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: D. 德雷施，《区块链基础》，DOI 10.1007/978-1-4842-2604-9_10
- en: '72'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '72'
- en: '***Step 10 | Hashing Data***'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '***第10步 | 哈希数据***'
- en: How It Works
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理
- en: Hash functions are small computer programs that transform any kind of data
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数是小型计算机程序，可以转换任何类型的数据
- en: into a number of fixed lengths, regardless of the size of the [input data.1](index_split_001.html#76)
    Hash functions only accept one piece of data at any given time as input and create
    a
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为一定长度的固定长度，而不管[输入数据。1](index_split_001.html#76)哈希函数一次只接受一个数据作为输入，并创建一个
- en: hash value based on the bits and bytes that make up the data. Hash values can
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 基于构成数据的位和字节。哈希值可以
- en: have leading zeros in order to provide the required length. There are many
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供所需的长度，哈希值要求有前导零。有许多
- en: different hash functions that differ among others with respect to the length
    of
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的哈希函数在长度方面不同，其他哈希函数和
- en: the hash value they produce. An important group of hash functions is called
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 它们产生的哈希值。一个重要的哈希函数组被称为
- en: '*cryptographic hash functions*, which create digital fingerprints for any kind
    of data. Cryptographic hash functions have the following properties[2](index_split_001.html#76):'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*加密哈希函数*，可以为任何类型的数据创建数字指纹。加密哈希函数具有以下特性[2](index_split_001.html#76)：'
- en: • Providing hash values for any kind of data quickly
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: • 快速为任何类型数据提供哈希值
- en: • Being deterministic
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: • 具有确定性
- en: • Being pseudorandom
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: • 伪随机
- en: • Being one-way functions
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: • 一次函数
- en: • Being collision resistant
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: • 具有碰撞抵抗性
- en: Providing Hash Values for Any Data Quickly
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 快速为任何数据提供哈希值
- en: This property is actually a combination of two properties. First, the hash
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性实际上是两个属性的组合。首先，哈希
- en: function is able to calculate hash values for all kinds of data. Second, the
    hash function does its calculation quickly. These properties are important, as
    you
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 函数能够快速计算所有类型数据的哈希值。第二，哈希函数迅速进行计算。这些特性非常重要，因为您
- en: do not want the hash function to yield useless things like error messages or
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 不希望哈希函数产生无用的东西，如错误消息或
- en: to take a large amount of time to return the results.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 花费大量时间返回结果。
- en: Deterministic
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 确定性
- en: Deterministic means that the hash function yields identical hash values for
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 确定性意味着哈希函数对于
- en: identical input data. This means that any observed discrepancies of the hash
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的输入数据。这意味着哈希的任何观察到的差异
- en: values of data must be solely caused by the discrepancies of the input data
    and
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的值必须仅仅由输入数据的差异引起，并且
- en: not by the internals of the hash function.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 不是由哈希函数的内部。
- en: '1Weisstein, Eric W. Hash function. From MathWorld: [http://mathworld.wolfram.com/](http://mathworld.wolfram.com/HashFunction.html)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 1魏斯坦，埃里克W.哈希函数。来源于MathWorld：[http://mathworld.wolfram.com/](http://mathworld.wolfram.com/HashFunction.html)
- en: '[HashFunction.html.](http://mathworld.wolfram.com/HashFunction.html)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[HashFunction.html.](http://mathworld.wolfram.com/HashFunction.html)'
- en: '2Rogaway, Phillip, and Thomas Shrimpton. Cryptographic hash-function basics:
    definitions, implications, and separations for preimage resistance, second-preimage
    resistance, and collision resistance. In B. Roy and W. Meier (eds.), *Fast software
    encryption. FSE 2004\. Lecture* *Notes in Computer Science,* vol. 3017\. International
    Workshop on Fast Software Encryption.'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 2罗格维，菲利普，和托马斯·莱普顿。密码哈希-函数基础：定义，涵义以及抗原图攻击、第二原像攻击和碰撞抵抗的分离。在B·罗伊和W·梅尔（主编）， *快速软件加密。FSE
    2004年。 计算机科学讲座* *笔记，卷3017. 国际快速软件加密研讨会。
- en: 'Berlin Heidelberg: Springer, 2004\.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 柏林海德堡：施普林格，2004年。
- en: '***Blockchain Basics***'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '73'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '73'
- en: Pseudorandom
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 伪随机
- en: Being pseudorandom means that the hash value returned by a hash function
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 伪随机意味着哈希函数返回的哈希值
- en: changes unpredictably when the input data are changed. Even if the input data
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入数据发生变化时，它会不可预测地更改。即使输入数据
- en: were changed only a little bit, the resulting hash value will differ unpredictably.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 变化很小，生成的哈希值将不可预测地不同。
- en: To put it differently, the hash value of changed data must always be a surprise.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，改变数据的哈希值必须始终是一个惊喜。
- en: It should not be possible to predict the hash value based on the input data.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 不应该能够根据输入数据预测哈希值。
- en: One-Way Function
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 单向函数
- en: A one-way function does not provide any way to trace its input values by its
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 单向函数不提供任何追踪其输入值的方法
- en: outputs. Hence, being a one-way function means that it cannot be used the
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 输出。因此，单向函数意味着它不能被使用
- en: other way around. To put it differently, it is impossible to recover the original
    input data based on the hash value. This means that hash values do not tell you
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，换句话说，根据哈希值无法恢复原始输入数据。这意味着哈希值不告诉你
- en: anything about the content of the input data in the same way as an isolated
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 有关输入数据的内容的任何信息与孤立
- en: fingerprint does not tell you anything about the person whose finger created
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹不告诉你任何有关其指纹创建的人员的信息
- en: it. One-way functions are also said to be noninvertible.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 它。单向函数也被称为不可逆的。
- en: Collision Resistant
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 抗碰撞
- en: A hash function is called collision resistant if it is very hard to find two
    or
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果非常难以找到两个或
- en: more distinct pieces of data for which it yields the identical hash value. Or,
    to put it differently, if the chance to receive an identical hash value for distinct
    pieces of data is small, then the hash function is collision resistant. In this
    case, you can consider the hash values created by the hash function as being unique
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 更不同的数据片段，对它们产生相同的哈希值。或者换句话说，如果不同数据片段获得相同的哈希值的机会很小，那么哈希函数是抗碰撞的。在这种情况下，你可以将哈希函数创建的哈希值视为唯一的。
- en: and hence being usable to identify data. If you obtained an identical hash value
    for different pieces of data, you would face a hash collision. A hash collision
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 因此可用于识别数据。如果对不同的数据片段获得相同的哈希值，那么就会发生哈希碰撞。哈希碰撞
- en: is the digital equivalent to having two people with identical fingerprints.
    Being collision resistant is mandatory for hash values to be usable as digital
    fingerprints. How collision resistant hash functions work internally is beyond
    the
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 是具有相同指纹的两个人的数字等效物。对于哈希值来说，抗碰撞是强制性的，以便作为数字指纹使用。哈希函数内部如何工作是超出了
- en: scope of this book, but you can be assured that huge effort has been spent on
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不涵盖的范围，但可以肯定的是已经花费了大量精力在
- en: reducing their risk to produce hash collisions.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 减少它们产生哈希碰撞的风险。
- en: Trying It Out Yourself
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 亲自试一试
- en: This section will help you become comfortable with applying hash functions
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将帮助你熟悉应用哈希函数
- en: by guiding you through a simple example. For this purpose, I refer to the
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个简单的示例来指导你。为此，我参考
- en: accompanying website that provides a tool for creating hash values of simple
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 提供一个工具来创建简单哈希值的附带网站
- en: 'text data: [http://www.blockchain-basics.com/HashFunctions.html](http://www.blockchain-basics.com/HashFunctions.html).'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 文本数据：[http://www.blockchain-basics.com/HashFunctions.html](http://www.blockchain-basics.com/HashFunctions.html)。
- en: When you open that webpage in your Internet browser, you will see an input
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在您的Internet浏览器中打开该网页时，您将看到一个输入框
- en: box and an output box, as shown in Figure [10-1](index_split_001.html#78). Type
    the text Hello World!
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口和一个输出框，如图 [10-1](index_split_001.html#78)所示。在输入框中键入文本 Hello World!
- en: in the input box on the left-hand side and click the button with the label
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧的输入框中填写文本并单击标签
- en: “Calculate Hash Value” located below the text field. Make sure that you type
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: “计算哈希值”位于文本字段下方。确保你在输入框中完全输入
- en: Hello World! exactly in the input box, otherwise you will get results that differ
    from those shown in Figure [10-1\.](index_split_001.html#78)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Hello World!，否则你将得到与图 [10-1\.](index_split_001.html#78)中显示的结果不同的结果
- en: '![](index-78_1.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](index-78_1.png)'
- en: '![](index-78_2.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](index-78_2.png)'
- en: '74'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '74'
- en: '***Step 10 | Hashing Data***'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '***第10步 | 哈希化数据***'
- en: '**Figure 10-1\.** Calculating hash values of a short text'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-1\.** 计算短文本的哈希值'
- en: As a result of clicking the button, the output box on the right-hand side will
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 点击按钮后，右侧的输出框将
- en: present the hash value of the input text calculated with four different hash
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 提供输入文本计算出的哈希值的不同哈希函数
- en: functions. Hash values are often regarded as hash numbers since they use
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 函数。哈希值通常被视为哈希数字，因为它们使用
- en: not only the digits 0 to 9 but also the letters A to F, which represent the
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅包括数字0到9，还包括表示16进制数的字母A到F。
- en: values 11 to 16 in order to express numerical values. Those numbers are
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 值11到16以便表示数字值。这些数字是
- en: called *hexadecimal numbers*. Computer scientists love them for reasons I do
    not want discuss here. Notice that the hash values differ due to the different
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 称为*十六进制数*。计算机科学家因某些原因而喜欢它们，这里我不想讨论。请注意，由于不同
- en: implementation details of the hash functions that produce them. These values
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的实现细节产生这些值。这些值
- en: are taken for granted, since we do not want to lose ourselves in the wide
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 都是理所当然的，因为我们不想在广泛的领域中迷失自己
- en: topic of implementation of hash functions.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数的实现方式的课题。
- en: Cryptographic hash values are quite long and therefore hard to read or to
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 加密哈希值很长，因此很难阅读或比较。
- en: compare for the human eye. However, in the course of this step, you will
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 这种比较对人眼来说很困难。然而，在这一步骤中，你将
- en: compare different ways of hashing data, which involves reading and comparing
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 比较不同的数据哈希方式，涉及阅读和比较
- en: hash values. Doing so with cryptographic hash values will quickly become
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值。用加密哈希值这样做会很快变得
- en: a tedious task. Hence, for didactical reasons, I use a shortened version of
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 一项繁琐的任务。因此，出于教学目的，我使用了缩短版的
- en: the SHA256 cryptographic hash value in the remainder of this step. You can
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在本步骤的剩余部分中使用SHA256加密哈希值。你可以
- en: reproduce all hash values by using the tool provided on the accompanying
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 使用附带工具重新生成所有哈希值。
- en: 'website: [www.blockchain-basics.com/Hashing.html.](http://www.blockchain-basics.com/Hashing.html)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 网站：[www.blockchain-basics.com/Hashing.html.](http://www.blockchain-basics.com/Hashing.html)
- en: When you open that website in your Internet browser, you will see an input box
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在互联网浏览器中打开该网站时，你会看到一个输入框。
- en: for simple texts, a button with an arrow that points to an output box, as shown
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 对于简单的文本，有一个按钮，上面有一个指向输出框的箭头，就像
- en: in Figure [10-2](index_split_001.html#78). When you click the button with the
    arrow, the output box will present the shortened hash value of the text provided
    in the input box.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在图[10-2](index_split_001.html#78)中。当你点击带箭头的按钮，输出框将呈现输入框中提供的文本的缩短哈希值。
- en: '**Figure 10-2\.** Calculating the shortened hash value of a text'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-2。** 计算文本的缩短哈希值'
- en: '![](index-79_1.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](index-79_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '75'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '75'
- en: Patterns of Hashing Data
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 数据哈希的模式
- en: So far you have learned that a piece of data can be used as input for a hash
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经了解到一段数据可以作为哈希函数的输入。
- en: function, which in turn yields the hash value of that data. This implies that
    each independent piece of data has its own unique cryptographic hash value. But
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 函数，这反过来又产生了该数据的哈希值。这意味着每个独立的数据片段都有自己独特的加密哈希值。但是
- en: what would you do if you were asked to provide one single hash value for a
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要求你为一大堆独立数据提供一个哈希值，你会怎么做？
- en: bunch of independent pieces of data? Remember, hash functions only accept
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 一堆独立的数据一次性被哈希吗？记住，哈希函数只接受
- en: one piece of data at a given time. There is no hash function that accepts a
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 一次只处理一个给定时间的数据。没有一个哈希函数能够接受一个
- en: bunch of independent data at once, but, in reality, we often need one single
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 一次性哈希一堆独立的数据，但实际上我们经常需要一个单一的
- en: hash value for a large collection of data. In particular, the blockchain-data-
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 大量数据集的哈希值。特别是区块链数据
- en: structure has to deal with many transaction data at once and requires one
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 结构必须一次处理许多交易数据，并且需要一个
- en: single hash value for all of them. How do you deal with this task?
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的哈希值。你如何处理这个任务？
- en: 'The answer is to utilize one of the following patterns in applying hash functions
    to data:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是使用以下一种模式来应用哈希函数到数据：
- en: • Independent hashing
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: • 独立哈希
- en: • Repeated hashing
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: • 重复哈希
- en: • Combined hashing
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: • 组合哈希
- en: • Sequential hashing
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: • 顺序哈希
- en: • Hierarchical hashing
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: • 分层哈希
- en: Independent Hashing
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 独立哈希
- en: Independent hashing means applying the hash function to each piece of data
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 独立哈希意味着对每个数据片段应用哈希函数
- en: independently. Figure [10-3 illustrates this concept b](index_split_001.html#79)y
    calculating the shortened hash value of two distinct words separately.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 独立地。通过计算两个不同单词分别的缩短哈希值来说明这个概念。
- en: '**Figure 10-3\.** Schematic illustration of hashing different data independently'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-3。** 哈希不同数据的示意图'
- en: '![](index-80_1.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](index-80_1.png)'
- en: '76'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '76'
- en: '***Step 10 | Hashing Data***'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '***第10步| 数据哈希***'
- en: The white boxes that each contain a word represent the data to be hashed
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 每个包含一个单词的白色框代表要被哈希的数据
- en: and the gray circles exhibit the corresponding hash values. The arrows that
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 灰色圆圈展示了对应的哈希值。指示
- en: point from the boxes to the circles schematically illustrate the transformation
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 箱子到圆圈的箭头从图示地说明了转换
- en: of data into hash values. As one can see in Figure [10-3,](index_split_001.html#79)
    the distinct words yield different hash values.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分为哈希值。正如在图[10-3](index_split_001.html#79)中所示，不同的单词产生不同的哈希值。
- en: Repeated Hashing
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 反复哈希
- en: You have learned that hash functions transform any arbitrary piece of data
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了哈希函数如何将任意一段数据转换
- en: into a hash value. A hash value itself can be considered a piece of data. Hence,
    it should be possible to provide a hash value as input to a hash function and
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 转化为哈希值。哈希值本身可以被视为一段数据。因此，应该可以将哈希值提供为哈希函数的输入并
- en: calculate its hash value too. And this in fact works! Repeated hashing is the
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 也计算其哈希值。实际上是有效的！反复哈希是
- en: repeated application of a hash function to its own outcome. Figure [10-4](index_split_001.html#80)
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数对其自身输出的反复应用。图[10-4](index_split_001.html#80)
- en: illustrates the concept by calculating the shortened hash value repeatedly.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反复计算缩短的哈希值来说明这一概念。
- en: The text Hello World! yields the hash value 7F83B165, which in turn yields
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 文本“Hello World！”产生哈希值7F83B165，然后产生
- en: the shortened hash value of 45A47BE7\.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 缩短的哈希值为45A47BE7。
- en: '**Figure 10-4\.** Calculating hash values repeatedly'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-4。** 反复计算哈希值'
- en: Combined Hashing
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 组合哈希
- en: The goal of combined hashing is to get a single hash value for more than one
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 组合哈希的目标是为多个
- en: piece of data in one attempt. Combining all independent pieces of data into
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个尝试中的一段数据。将所有独立的数据片段组合成
- en: one piece of data and calculating its hash value afterward is the way to achieve
    this. This is in particular useful if you want to create one single hash value
    for a collection of data that is available at a given time. Since combining data
    costs computing power, time, and memory space, combined hashing should only be
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 一块数据，并在之后计算其哈希值是实现这一目标的方法。特别是，在给定时间创建一种单一数据集的哈希值非常有用。由于组合数据会消耗计算能力、时间和内存空间，因此组合哈希应当仅
- en: used when the individual pieces of data are small. Another drawback of com-
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 当个别数据片段很小时使用。组合哈希的另一个缺点是
- en: bined hashing is that the hash values of the individual pieces of data are not
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 因为数据的各个部分的哈希值不
- en: available since only the combined data are handed over to the hash function.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 由于仅将组合数据传递给哈希函数。
- en: Figure [10-5 depicts the concept of combined hashing.](index_split_001.html#81)
    The individual words are first combined into one word with a letter space between
    them and the resulting phrase is hashed afterward. The resulting hash value shown
    in Figure [10-5](index_split_001.html#81)
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [10-5描述了组合哈希的概念。](index_split_001.html#81) 首先将个别单词组合成一个单词，单词间有一个字母空格，然后对结果短语进行哈希。图中显示的结果哈希值
- en: is consequently identical to the first hash value in Figure [10-4](index_split_001.html#80).
    Note that the
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 和图 [10-4](index_split_001.html#80)中的第一个哈希值相同。请注意
- en: '![](index-81_1.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![](index-81_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '77'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '77'
- en: hash value of the combined data critically depends on the way the data are
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 组合数据的哈希值关键取决于数据组合的方式
- en: combined. In Figure [10-4,](index_split_001.html#80) the two words were combined
    by writing them next to each other with a letter space between them, which consequently
    yields
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 被组合。在图中[10-4](index_split_001.html#80)中，两个字通过将它们紧挨在一起，字之间有一个空格，因此产生
- en: Hello World! Sometimes specific symbols such as the plus sign (+) or hashtag
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！有时会使用特定符号，如加号（+）或井号符
- en: sign (#) are used to mark the point where the data are connected, which, as
    a
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 标记连接数据的地方，作为
- en: result, influences the resulting hash value.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，影响了最终的哈希值。
- en: '**Figure 10-5\.** Combining data and subsequently calculating the hash value
    Sequential Hashing'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-5。** 组合数据并随后计算哈希值 顺序哈希'
- en: The goal of sequential hashing is the incremental update of a hash value as
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 顺序哈希的目标是作为
- en: new data arrive. This is achieved by using combined and repeated hashing at
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 新数据到达。这是通过使用组合和重复哈希来实现的
- en: the same time. The existing hash value is combined with new data and is then
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 相同时。现有的哈希值与新数据组合，然后
- en: handed over to the hash function in order to get the updated hash value.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 将被传递给哈希函数，以获得更新后的哈希值。
- en: Sequential hashing is in particular useful if you want to maintain a single
    hash value over time and update it as soon as new data arrive. An advantage of
    this
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 顺序哈希特别有用的是如果您想随着时间的推移保持单一哈希值并在新数据到达时更新它。这种方法的优势
- en: type of hashing is that at any given point in time you have a hash value whose
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 类型的哈希是，在任何时间点，你都有一个哈希值
- en: evolution can be traced back to the arrival of new data.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 进化可以追溯到新数据到达的时刻。
- en: Figure [10-6](index_split_001.html#82) illustrates the concept of sequential
    hashing by starting with hashing the word Hello individually, which yields the
    shortened hash value
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [10-6](index_split_001.html#82) 阐明了从单独哈希单词 Hello 开始的顺序哈希的概念，得到了缩短的哈希值
- en: 185F8DB3\. Once new data represented by the word World! arrive, it is
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 185F8DB3\. 一旦由单词 World! 表示的新数据到达，它就是
- en: combined with the existing hash value and provided as input to a hash func-
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 结合现有的哈希值，并以输入方式提供给哈希函数-
- en: tion. The hash value 5795A986 is the shortened hash value of the input text
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 样。哈希值 5795A986 是输入文本的缩短哈希值
- en: World! 185F8DB3\.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 世界！185F8DB3\.
- en: '![](index-82_1.png)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![](index-82_1.png)'
- en: '![](index-82_2.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](index-82_2.png)'
- en: '78'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '78'
- en: '***Step 10 | Hashing Data***'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤 10 | 哈希数据***'
- en: '**Figure 10-6\.** Calculating hash values sequentially'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-6\.** 顺序计算哈希值'
- en: Hierarchical Hashing
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 分级哈希
- en: Figure [10-7 illustrates the concept of hierar](index_split_001.html#82)chical
    hashing.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [10-7 阐述了分级哈希的概念](index_split_001.html#82)。
- en: '**Figure 10-7\.** Calculating hash values hierarchically'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-7\.** 分级计算哈希值'
- en: The application of combined hashing to a pair of hash values forms a small
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 应用联合哈希到一对哈希值形成一个小
- en: hierarchy of hash values with a single value on its top. Similar to combined
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 一系列哈希值的层次结构，顶部只有一个值。类似于组合
- en: hashing, the idea of hierarchical hashing is the creation of one single hash
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希，分级哈希的想法是创建一个单一哈希
- en: value for a collection of data. Hierarchical hashing is more efficient because
    it combines hash values that are always of fixed size instead of the original
    data
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集的值。分级哈希更有效，因为它结合了始终是固定大小的哈希值，而不是原始
- en: that could be of any size. Additionally, hierarchical hashing only combines
    two
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是任何大小。此外，分级哈希只组合两个
- en: hash values in every step, while combined hashing will combine as many data
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 每一步的哈希值，而组合哈希将组合尽可能多的数据
- en: as you provide in one attempt.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 你提供在一次尝试中。
- en: '***Blockchain Basics***'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '79'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '79'
- en: Outlook
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step was devoted to the concept of hash functions. Step [11 illustrates](http://dx.doi.org/10.1007/978-1-4842-2604-9_11)
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步致力于哈希函数的概念。步骤 [11 阐明了](http://dx.doi.org/10.1007/978-1-4842-2604-9_11)
- en: how hash values are used in real life and highlights how the blockchain
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值在现实生活中的使用以及区块链的突出特点
- en: uses them.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 使用它们。
- en: Summary
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: • Hash functions transform any kind of data into a number
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: • 哈希函数将任何类型的数据转换为一个数字
- en: of fixed length, regardless of the size of the input data.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 固定长度，无论输入数据的大小。
- en: • There are many different hash functions that differ among
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: • 有许多不同的哈希函数，它们在
- en: others with respect to the length of the hash value they
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 其他哈希值与它们的长度相比
- en: produce.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 产出。
- en: • Cryptographic hash functions are an important group of
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: • 密码哈希函数是一个重要的
- en: hash functions that create digital fingerprints for any kind
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数字指纹的哈希函数，适用于任何类型
- en: of data.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 的数据。
- en: • Cryptographic hash functions exhibit the following
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: • 密码哈希函数表现出以下特点
- en: 'properties:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: • Provide hash values for any kind of data quickly
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: • 快速提供任何类型数据的哈希值
- en: • Deterministic
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: • 确定性
- en: • Pseudorandom
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: • 伪随机
- en: • One-way usage
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: • 单向使用
- en: • Collision resistant
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: • 抗碰撞
- en: • Application of hash functions to data can be accomplished
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: • 哈希函数对数据的应用可以在很快的时间内完成
- en: 'by using the following patterns:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '通过以下模式使用:'
- en: • Repeated hashing
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: • 重复哈希
- en: • Independent hashing
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: • 独立哈希
- en: • Combined hashing
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: • 组合哈希
- en: • Sequential hashing
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: • 顺序哈希
- en: • Hierarchical hashing
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: • 分级哈希
- en: '**S T E P**'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '**S T E P**'
- en: '11'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '11'
- en: Hashing in the
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希在
- en: Real World
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 真实世界
- en: A tale of comparing data and creating
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 一个比较数据和创建的故事
- en: computational puzzles
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 计算难题
- en: '[Step 10](http://dx.doi.org/10.1007/978-1-4842-2604-9_10) introduced cryptographic
    hash functions and discussed different patterns of applying hash functions to
    data. S[tep 10 ma](http://dx.doi.org/10.1007/978-1-4842-2604-9_10)y have appeared
    to be a dry intellectual exercise, but it is actually of highly practical relevance.
    Hence, this step focuses on the application of hash functions and hash values
    in the real'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10步](http://dx.doi.org/10.1007/978-1-4842-2604-9_10)介绍了密码哈希函数并讨论了应用哈希函数到数据的不同模式。S'
- en: world. It considers major use cases of hash functions in real life and explains
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 世界。它考虑了现实生活中哈希函数的主要用例，并解释了
- en: the idea behind them. This step also sketches why these use cases work out
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 这些用例背后的想法。这一步还概述了为什么这些用例起作用
- en: as intended. Finally, this step points out where the blockchain uses hash values.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样。最后，这一步指出了区块链使用哈希值的地方。
- en: Comparing Data
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 比较数据
- en: Because it is the most straightforward use case of hash values, comparing data
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这是哈希值的最简单的用途之一，所以比较数据
- en: based on their hash values is considered first.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 首先考虑基于它们的哈希值比较数据。
- en: The Goal
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal is to compare data (e.g., files or transaction data) without comparing
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是比较数据（例如文件或交易数据），而不比较
- en: their content piece by piece and to make comparing any kind of data, regard-
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 按部分比较它们的内容并作出任何种类的数据比较，
- en: less of their size and content, as easy as comparing two numbers.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 少量大小和内容，与比较两个数字一样容易。
- en: © Daniel Drescher 2017
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: © Daniel Drescher 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_11
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher，*区块链基础*，DOI 10.1007/978-1-4842-2604-9_11
- en: '82'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '82'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '***第11步|现实世界中的哈希算法***'
- en: The Idea
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 主意
- en: Instead of comparing data by explicitly comparing their content piece by piece,
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是通过显式地逐个比较它们的内容来比较数据
- en: you compare their cryptographic hash values.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 您比较它们的加密哈希值。
- en: How It Works
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理
- en: You calculate and compare the cryptographic hash value of all data under
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 您计算并比较所有数据的加密哈希值
- en: consideration. If all of the cryptographic hash values differ, all the data
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑。如果所有的加密哈希值不同，所有数据
- en: under consideration differ as well. If two or more of the cryptographic hash
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑未考虑也因此在考虑之前。
- en: values are identical, their corresponding input data ar[e also identical.1](index_split_001.html#85)
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 值相同，则它们对应的输入数据也相同。
- en: Why It Works
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么它起作用
- en: Comparing data by comparing their cryptographic hash values works due to
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 通过比较它们的加密哈希值来比较数据是因为
- en: collision resistance of cryptographic hash functions.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 密码哈希函数的碰撞抵抗性。
- en: Detecting Changes in Data
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 检测数据中的更改
- en: The idea of comparing data based on their hash values can be easily extended
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 根据它们的哈希值比较数据的想法可以很容易扩展
- en: to the case of detecting changes.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 以便检测更改的情况。
- en: The Goal
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal is to determine whether data (e.g., a file or transaction data) that
    is supposed to stay unchanged was changed after a certain date or after sending
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是确定数据（例如文件或交易数据）是否在特定日期或发送后发生了变化
- en: it to someone or after it was stored in a database.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据传送给某人或将其存储在数据库中之后。
- en: The Idea
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 主意
- en: Comparing the cryptographic hash value of the data under consideration that
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 比较正在考虑的数据的加密哈希值
- en: was created in the past with a newly created cryptographic hash value of the
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去创建的数据的新创建加密哈希值
- en: same data is the key in identifying changes. If both hash values are identical,
    the data were not changed after the time at which the old hash value was created.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的数据是识别变化的关键。如果两个哈希值相同，则数据在旧哈希值创建的时间之后没有发生变化。
- en: How It Works
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理
- en: You create the cryptographic hash value of the data that are supposed to stay
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建了数据的加密哈希值，这些数据应该保持不变
- en: unchanged. When you need to verify whether the data were changed at a
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 不变。当您需要验证数据是否在特定时间内发生变化时
- en: later time, you create the cryptographic hash value of the data again. You then
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，再次创建数据的加密哈希值。然后
- en: compare the newly created hash value with the hash value that was created
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 将新创建的哈希值与已创建的哈希值进行比较
- en: 1Tsudik, Gene. Message authentication with one-way hash functions. *ACM SIGCOMM*
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 1Tsudik，Gene。使用单向哈希函数进行消息认证。*ACM SIGCOMM*
- en: '*Computer Communication Review* 22.5 (1992): 29–38\.'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '*计算机通信评论*22.5（1992年）：29-38。'
- en: '***Blockchain Basics***'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '83'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 83年
- en: in the past. If both hash values are identical, the data were not changed after
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 过去。如果两个哈希值相同，则数据在传输后未被更改。
- en: the first hash value was created. Otherwise, the data have been changed in
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 创建第一个哈希值时。否则，数据已经发生了变化
- en: the meantime. The same idea can be applied when sending data to someone.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 同时。当将数据发送给别人时，同样的想法也可以应用。
- en: If you create the hash value of the data before they are sent and the receiver
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在发送数据之前创建数据的哈希值，并且接收方
- en: creates the hash value of the data he or she receives, both the sender and the
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 创建他接收的数据的哈希值，发送方和接收方
- en: receiver compare both hash values. If both hash values are identical, the data
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 接收者比较两个哈希值。如果两个哈希值相同，则数据
- en: were not altered in the course of the transfer.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 在传输过程中未被改变。
- en: Why It Works
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么它有效
- en: Detecting changes in data is actually a process of comparing data with them-
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 检测数据的更改实际上是一个将数据与它们进行比较的过程
- en: selves before and after certain events, such as lapses of time, storing to or
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些事件之前和之后自身，例如时间的流逝，存储或
- en: retrieval from a database, or sending them through a network. Detecting
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据库中检索，或通过网络发送它们。检测
- en: changes in data that are supposed to stay unchanged works due to collision
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 那些应该保持不变的数据中的更改是由于冲突
- en: resistance of cryptographic hash functions.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 密码哈希函数。
- en: Referring to Data in a Change-Sensitive
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个敏感于更改的数据中引用数据
- en: Manner
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 方式
- en: Comparing data and detecting changes based on their hash values can be con-
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 基于它们的哈希值来比较数据并检测更改可以
- en: sidered basic use cases of hash values. A slightly more advanced application
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑哈希值的基本用例。稍微复杂一点的应用
- en: case of hash values is hash references, which are introduced in the following.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值案例是哈希引用，以下将介绍哈希引用。
- en: The Goal
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal is to refer to data (e.g., transaction data) that are stored somewhere
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是引用存储在某处的数据（例如交易数据）
- en: else (e.g., on a hard disk or in a database) and ensure that the data have remain
    unchanged.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 其他地方（例如硬盘或数据库）并确保数据保持不变。
- en: The Idea
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法
- en: The idea is to combine the cryptographic hash value of the data being stored
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是将正在存储的数据的密码哈希值与
- en: with information about the place where the data are located. If the data were
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据所在位置的信息相结合。如果数据被更改
- en: changed, both pieces of information would no longer be consistent and hence
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 更改，两者的信息将不再一致，因此
- en: the hash reference would become invalid.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用将变得无效。
- en: How It Works
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: References to data are the digital equivalent to cloakroom tickets. Cloakroom
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据的引用是衣帽间票据的数字等效物。衣帽间
- en: tickets point to the physical location at which your jacket is stored in the
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 票据指向您的夹克衣在哪里存放的物理位置
- en: cloakroom. You use the cloakroom ticket for retrieving your jacket later
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 衣帽间。您可以使用衣帽间票据稍后找回您的夹克衫
- en: 'on. References to data in computers work the same way: they are pieces of'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 上。计算机中的数据引用方式相同：它们是一小片
- en: data that refer to other data. Computer programs use references in order to
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 引用其他数据。计算机程序使用引用来
- en: '![](index-87_1.png)'
  id: totrans-450
  prefs: []
  type: TYPE_IMG
  zh: '![](index-87_1.png)'
- en: '84'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '84'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '***第11步|现实世界中的哈希***'
- en: remember the place where the data have been stored and to retrieve them
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 记住数据存储的位置并检索
- en: later on. Hash references are a specific kind of reference that utilize the
    power of cryptographic hash values. For simplicity, you could think of hash references
    as cloakroom tickets that display hash values instead of ordinary numbers.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 以后。哈希引用是一种利用密码哈希值的特定引用。简单来说，您可以将哈希引用视为显示哈希值而不是普通数字的衣帽间票据。
- en: Hash references refer to other data, and they additionally verify that the data
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用指的是其他数据，并额外验证数据
- en: being referred to were not changed since the reference was created. In the
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 被引用的数据自引用创建后未被更改。在
- en: case where the data being referred have been changed, the reference no lon-
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 引用的数据已更改，引用不再
- en: ger allows retrieval of the data. In this case, the hash reference is deemed
    broken or invalid. This is similar to having a cloakroom ticket that points to
    a coat hook that no longer carries your jacket. In this case, the cloakroom attendant
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 者允许检索数据。在这种情况下，哈希引用被视为不可靠或无效。这类似于拿着指向不再挂有您夹克衫的衣钩的衣帽间票据。在这种情况下，衣帽间管理员
- en: can no longer hand over your jacket.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 您再也无法交出您的夹克衫。
- en: The whole idea of hash reference is to protect its users from retrieving data
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用的整个理念是保护其用户不会检索到数据
- en: that have been changed accidently due to technical errors or intentionally by
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 由于技术错误或者故意修改导致发生变化的
- en: someone else without informing you about that. Hence, hash references are
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 某人在不通知你的情况下更改。因此，哈希引用是
- en: used in all occasions where data are supposed to stay unchanged once created.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 所有场合都要使用数据一旦创建就应该保持不变的情况。
- en: A Schematic Illustration
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 一个图解
- en: The blockchain heavily depends on hash references. Hence, understanding
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链高度依赖哈希引用。因此，理解
- en: them is crucial for understanding the blockchain and for comprehending the
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 对于理解区块链和理解
- en: 'following steps of this book. For this reason, the following three figures
    serve two purposes: First, they schematically illustrate the functioning of hash
    references. Second, they introduce a pictorial representation of hash references'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的后续步骤。因此，以下三个图的作用有两个：首先，它们形象地说明了哈希引用的功能。其次，它们引入了哈希引用的图示表示
- en: that is used in the following steps when illustrating the functioning of the
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中使用，用来说明
- en: blockchain-data-structure.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构的功能。
- en: Figure [11-1 illustrates the functioning of hash r](index_split_001.html#87)eferences
    schematically by presenting a valid hash reference. The gray circle labeled R1
    represents a valid
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 图[11-1用图示的方式说明了哈希r](index_split_001.html#87)引用的功能。标有R1的灰色圆圈代表一个有效的哈希引用。
- en: hash reference. The white box represents some data that are supposed to
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用。白色方框代表一些数据，应该
- en: stay unchanged. The arrow that goes from the circle to the box depicts the
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 保持不变。从圆圈到方框的箭头描述
- en: functioning of the hash reference. The arrow points from the reference to the
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用的功能。箭头指向引用
- en: data it refers to.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 它所引用的数据。
- en: '**Figure 11-1\.** Schematic illustration of a valid hash reference'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-1\.** 一个有效哈希引用的图解'
- en: '![](index-88_1.png)'
  id: totrans-476
  prefs: []
  type: TYPE_IMG
  zh: '![](index-88_1.png)'
- en: '![](index-88_2.png)'
  id: totrans-477
  prefs: []
  type: TYPE_IMG
  zh: '![](index-88_2.png)'
- en: '***Blockchain Basics***'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '85'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '85'
- en: Figure [11-2](index_split_001.html#88) illustrates the symbolic representation
    of a broken or invalid hash reference.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 图[11-2](index_split_001.html#88)说明了一个破损或无效的哈希引用的象征性表示。
- en: '**Figure 11-2\.** Schematic illustration of an invalid hash reference'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-2\.** 一个无效哈希引用的图解'
- en: The black box containing a modified greeting represents data that were altered
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 包含一个修改后的问候语的黑匣子代表被更改的数据
- en: after the reference was created. The gray circle still represents the originally
    created hash reference. The jacked arrow that points from the circle to the
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 引用被创建后。灰色圆圈仍然代表最初创建的哈希引用。指向
- en: altered box highlights that the hash reference R1 is broken, it no longer allows
    access to retrieve the data because they have been changed in the meantime.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 被更改的方框强调了哈希引用R1已经破损，它不再允许检索数据，因为它们在这段时间内已经被更改。
- en: Figure [11-3](index_split_001.html#88) illustrates the situation when a new
    hash reference was created after the data were changed. This situation is depicted
    by a black box representing altered data, a black circle representing a newly
    created hash reference, and the straight arrow pointing from the circle to the
    box.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 图[11-3](index_split_001.html#88)说明了当数据更改后创建了一个新的哈希引用的情况。这种情况由一个代表被更改的数据的黑匣子、一个代表新创建的哈希引用的黑圆圈和指向方框的直箭头表示。
- en: '**Figure 11-3\.** Schematic illustration of a newly created hash reference
    after altering the data being referred'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-3\.** 修改后新创建的哈希引用的图解'
- en: '86'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '86'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '***第11步 | 现实中的哈希化***'
- en: Why It Works
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么它起作用
- en: The key point of hash references is the fact that they utilize cryptographic
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用的关键点是它们利用了加密技术
- en: hash values, which can be seen as unique fingerprints of data. Hence, it is
    very unlikely to have two different pieces of data that have an identical hash
    value.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值，可以看作是数据的唯一指纹。因此，几乎不可能有两个具有相同哈希值的不同数据。
- en: As a result, a broken hash reference is considered to be evidence that the data
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个破碎的哈希引用被视为证据表明数据
- en: were altered after the hash reference was created.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建哈希引用之后被更改。
- en: Storing Data in a Change-Sensitive Manner
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 以变化敏感的方式存储数据
- en: The idea of referring to data based on their hash values can be extended
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 基于它们的哈希值引用数据的想法可以被扩展
- en: further. A natural extension of that idea is storing data in a change-sensitive
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步。这个想法的自然扩展是以变化敏感的方式存储数据
- en: manner.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 方式。
- en: The Goal
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal is to store a large amount of data e.g., transaction data that are
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是存储大量数据，例如交易数据
- en: supposed to stay unchanged. Any changes to these data are to be detected
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 应该保持不变。对此类数据的任何更改都应该被检测到。
- en: quickly and easily.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 迅速且轻松。
- en: The Idea
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 想法
- en: Cloakroom tickets point to coat hooks that carry jackets. This is simple and
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 衣帽间票指向携带夹克的衣钩。这很简单且
- en: straightforward. But what precludes you from putting a cloakroom ticket in
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 直接了当。但是什么阻止你把一个衣帽间票放在
- en: the pocket of another jacket and storing that second jacket in the cloakroom
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 放在另一件夹克的口袋里并将这第二件夹克放在衣帽间里
- en: as well? As a result, the latter cloakroom ticket points to a jacket that contains
    a cloakroom ticket, which in turn points to another jacket. Actually you can
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 同样吗？结果，后一个衣帽间票指向包含衣帽间票的夹克，后者又指向另一个夹克。实际上，你可以
- en: create long and complicated chains of jackets that have cloakroom tickets
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 创建长且复杂的连锁衣钩，它们口袋里有衣帽间票
- en: in their pockets, which point to other jackets, which also have a cloakroom
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 它们分别指向其他夹克的衣帽间票，这些夹克也有
- en: ticket in their pockets, and so on and so forth. In a similar fashion, one can
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 他们口袋里有一张衣帽间票，等等。同样，人们可以
- en: store data together with hash references that point to other data, which in
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 存储数据与指向其他数据的哈希引用在一起，这
- en: turn store hash reference that refer to further data, and so on and so forth.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 并将存储哈希引用，指向更多的数据，依此类推。
- en: If any of the data or hash references is changed after their creation, all the
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任何数据或哈希引用在它们的创建后更改，那么所有的
- en: hash references are broken. Since broken hash references serve as evidence
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用损坏。由于损坏的哈希引用作为证据
- en: that data were changed after the reference was created, the whole construct
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 在引用创建后，数据被更改，整个构造
- en: stores data in a change-sensitive manner.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 以一种改变敏感的方式存储数据。
- en: How It Works
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理
- en: There are two classical patterns of using hash references in order to store
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种使用哈希引用以存储数据的经典模式
- en: 'data in a change-sensitive manner:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 以一种改变敏感的方式存储数据：
- en: • The chain
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: •链
- en: • The tree
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: •树
- en: '![](index-90_1.png)'
  id: totrans-521
  prefs: []
  type: TYPE_IMG
  zh: '![](index-90_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '87'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '87'
- en: The Chain
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 链
- en: A chain of linked data, also called a linked list, [2](index_split_001.html#90)
    is formed when each piece of data also contains a hash reference to another piece
    of data. Such a structure is useful for storing and linking data together that
    are not fully available at one given point in time but instead arrive step by
    step in an ongoing fashion. Figure [11-4 illustrates this idea b](index_split_001.html#90)y
    using the symbols introduced above.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 当每个数据片段还包含指向另一数据片段的哈希引用时，就会形成一条链接数据的链，也称为链表。这种结构对于存储和链接在一个给定时间点上并非完全可得的数据非常有用，而是步骤性地以持续方式到达。图[11-4通过使用上面介绍的符号来说明了此概念，](index_split_001.html#90)
- en: The creation of such a chain starts with the piece of data labeled Data 1 and
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的链的创建始于标记为Data 1的数据片段，
- en: the creation of the hash reference R1\. Being the first piece of data, Data
    1
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 创建哈希引用R1的过程。作为第一片数据，Data 1
- en: does not contain any hash reference. When new data arrive, they are put
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含任何哈希引用。当新的数据到达时，它们被放置
- en: together with the hash reference that points to Data 1\. The hash reference
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 与指向Data 1的哈希引用。哈希引用
- en: R2 refers to the newly arrived data and the hash reference R1\. The hash
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: R2指向新到达的数据和哈希引用R1。哈希
- en: reference R3, which refers to Data 3 and the hash reference R2, is created
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 引用R3，指向Data 3和哈希引用R2，被创建
- en: in a similar fashion.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 以相似的方式。
- en: '**Figure 11-4\.** Data linked together in a chain-like fashion'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-4。**数据以链式方式相互关联'
- en: Hash reference R3 is all you need in order to access all the data in the chain
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希引用R3是为了访问链中的所有数据
- en: in the reverse order of their arrival. The reference R3 is also called the **head**
    **of the chain** because it refers to the most currently added piece of data.
    It is important not to mix up the term “**head**” (that is the most currently
    added piece of data) with the term “**header**”, which will be intr[oduced in
    Step 14](http://dx.doi.org/10.1007/978-1-4842-2604-9_14)
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 以它们到达的相反顺序。引用R3也被称为**链的头部**，因为它指向最新添加的数据。重要的是不要混淆术语“**头部**”（即最新添加的数据）和术语“**头部**”，它将在[步骤14中引入](http://dx.doi.org/10.1007/978-1-4842-2604-9_14)
- en: when we discuss the blockchain-data-structure.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们讨论区块链数据结构时。
- en: The Tree
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 树
- en: Figure [11-5 illustrates ho](index_split_001.html#91)w transaction data can
    be linked together with hash references in a tree-like fashion.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 图[11-5说明](index_split_001.html#91)了交易数据如何以树形方式通过哈希引用链接在一起。
- en: '2Cormen, Thomas H. *Introduction to algorithms* (3rd ed.). Cambridge: MIT Press,
    2009\.'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 2Cormen，Thomas H. *算法导论*（第三版）。剑桥：麻省理工学院出版社，2009年。
- en: '![](index-91_1.png)'
  id: totrans-540
  prefs: []
  type: TYPE_IMG
  zh: '![](index-91_1.png)'
- en: '88'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '88'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '***第11步|在现实世界中进行哈希***'
- en: '**Figure 11-5\.** Data linked together in a tree-like fashion'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-5。** 数据以树状方式链接在一起'
- en: Such a structure is also called a Merkle tree[3](index_split_001.html#91) because
    a computer scientist named Merkle proposed it and it looks like a tree that was
    turn upside down.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的结构也被称为默克尔树[3](index_split_001.html#91)，因为一个名叫默克尔的计算机科学家提出了这个概念，它看起来像一棵上下颠倒的树。
- en: It is very useful for grouping many distinct pieces of data that are available
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 它非常适用于对许多不同的数据片段进行分组
- en: at the same time and to make them accessible via a single hash reference.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 同时并通过单个哈希引用使它们可访问。
- en: In order to create the tree illustrated in Figure [11-5,](index_split_001.html#91)
    you start with the four transaction data represented by the boxes at the bottom
    of the figure. At first
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建图[11-5中](index_split_001.html#91)所示的树形结构，首先从图底部的四个交易数据开始。一开始
- en: the hash references to the individual transaction data are created (R1 to R4),
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 为个别交易数据创建哈希引用（R1到R4），
- en: which are grouped together in a pair-wise fashion afterward. Subsequently,
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 接着两两分组。随后，
- en: hash references to the pairs of hash references are created (R12 and R34).
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 创建哈希引用对（R12和R34）的哈希引用。
- en: This procedure is repeated until you eventually arrive at a single hash refer-
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程重复进行，直到最终得到单一的哈希引用
- en: ence, which is also called the root of the Merkle tree (labeled R).
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，也称为默克尔树的根（标为R）。
- en: Why It Works
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么它有效
- en: The explained data structures store data in a change-sensitive fashion because
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 所解释的数据结构以一种敏感于变化的方式存储数据，因为
- en: they connect and combine data with hash references. These references get
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 它们如何连接和组合数据以哈希引用。这些引用获得
- en: broken when the data they refer to are changed after the references were
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据引用的数据在引用后发生变化时，它们会被损坏
- en: created. Hence, observing a broken reference in such a construct is proof that
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 创建。因此，在这样的结构中观察到一个损坏的引用证明
- en: some of the data were changed after the structure was created. Otherwise,
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 一些数据在生成结构后发生了变化。否则，
- en: it could be concluded that the whole construct has not been changed since
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 可以推断整个结构自创建以来没有发生过变化
- en: it was created.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 它是如何创建的。
- en: 3Merkle, Ralph C. Protocols for Public Key Cryptosystems. *IEEE Symposium on
    Security and* *Privacy* 122 (1980).
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 3Merkle，Ralph C.用于公钥密码系统的协议。 *IEEE安全和隐私研讨会* 122（1980）。
- en: '***Blockchain Basics***'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '89'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: '89'
- en: Causing Time-Consuming Computations
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 导致耗时的计算
- en: Hash values are not only useful for making basic file operations such as com-
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值不仅有助于进行基本的文件操作，比如
- en: paring, referring and storing data secure and efficient. Hash values can also
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 比较、引用和存储数据的安全和有效。哈希值也可以
- en: be used to allow computers to challenge other computers with elaborate
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 用于让计算机通过复杂的
- en: puzzles. While this may sound a bit odd it will turn out that this usage of
    hash values is one of the most important concept of the blockchain.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 难题挑战其他计算机。虽然这听起来有点奇怪，但事实证明哈希值的这种用法是区块链中最重要的概念之一。
- en: The Goal
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: For reasons that will become understandable in later steps of this book, you
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在本书的后续步骤中将变得可理解的原因，您
- en: may need to create puzzles that require computational resources in order to
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 可能需要创建需要计算资源的谜题，以便
- en: be solved. It should not be possible to solve these puzzles based on knowl-
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决。不应该基于知识来解决这些难题
- en: edge or data stored somewhere or by means of thinking, like an IQ test or a
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘或数据存储在某处或通过思考，如智商测试或
- en: knowledge test. The only way to solve these puzzle is by sheer computational
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 知识测试。解决这些难题的唯一方法就是通过纯粹的计算
- en: power and hard computational work.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 功率和艰苦的计算工作。
- en: The Idea
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 思路
- en: A combination lock is a specific lock that requires a unique sequence of num-
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 一个组合锁是一种特定的锁，需要一串独特的数字
- en: bers in order for it to be opened. If you do not know the sequence that opens
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 数字，以便能够打开它。如果你不知道打开的顺序
- en: the lock, you would systematically try all possible combinations until you
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 锁，你会系统地尝试所有可能的组合直到你
- en: eventually arrived at the unique combination that opens the lock. This proce-
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 最终到达了打开锁的独特组合。这一过程-
- en: dure is guaranteed to open the lock, but it is time-consuming. Systematically
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 这一过程保证打开锁，但非常耗时。系统地
- en: trying all possible combinations has nothing to do with knowledge or intel-
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 试图所有可能的组合与知识或智力无关
- en: lectual reasoning. The approach of opening a combination lock is based on
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 知识推理的方法。打开组合锁的方法基于
- en: sheer diligence and hard work. Hash puzzles are computational puzzles that
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问是纯粹的勤奋和努力工作。哈希拼图是计算拼图
- en: can be seen as the digital equivalent to the task of opening a combination lock
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 可以被看作是数字化任务相当于打开组合锁的任务
- en: by trial and error.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 通过试错来完成。
- en: How It Works
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理
- en: Elements of a hash puzzle are[4:](index_split_001.html#92)
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希拼图的元素为[4:](index_split_001.html#92)
- en: • Given data that have to be kept unchanged
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: • 必须保持不变的给定数据
- en: • Data that can be freely changed, the so-called nonce
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: • 可自由更改的数据，所谓的nonce
- en: • The hash function to be applied
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: • 要应用的哈希函数
- en: • Restrictions on the hash value of the combined hashing,
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: • 对组合哈希的哈希值的限制，
- en: also called the difficulty level
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 也称为难度级别
- en: 4Back, Adam. Hashcash—a denial of service counter-measure. 2002\. [http://www.hashcash.](http://www.hashcash.org/papers/hashcash.pdf)
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 4Back, Adam. Hashcash—a denial of service counter-measure. 2002\. [http://www.hashcash.](http://www.hashcash.org/papers/hashcash.pdf)
- en: '[org/papers/hashcash.pdf](http://www.hashcash.org/papers/hashcash.pdf).'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '[org/papers/hashcash.pdf](http://www.hashcash.org/papers/hashcash.pdf).'
- en: '![](index-93_1.png)'
  id: totrans-596
  prefs: []
  type: TYPE_IMG
  zh: '![](index-93_1.png)'
- en: '90'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '90'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤11 | 现实世界中的哈希***'
- en: Figure [11-6](index_split_001.html#93) illustrates the setting of the hash puzzle.
    Combined hashing is applied to the data and the nonce. The resulting hash value
    has to fulfill the
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 图[11-6](index_split_001.html#93)说明了哈希拼图的设置。组合哈希被应用于数据和nonce。生成的哈希值必须满足
- en: given restrictions.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的限制条件。
- en: '**Figure 11-6\.** Schematic illustration of a hash puzzle'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-6\.** 哈希拼图的示意图'
- en: Hash puzzles can only be solved by trial and error. This requires guessing a
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希拼图只能通过试错来解决。这需要猜测一个
- en: nonce, calculating the hash value of the combined data with the required hash
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: nonce，计算所要求的哈希值的组合数据的哈希值
- en: function, and evaluating the resulting hash value based on the restrictions.
    If
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 函数，并根据限制条件评估生成的哈希值。如果
- en: the hash value satisfies the restrictions, you will have solved the hash puzzle;
    otherwise, you would continue with another nonce until you eventually solve
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 如果哈希值满足限制条件，那么你已经解决了哈希拼图；否则，你就需要继续尝试另一个nonce，直到最终解决
- en: the puzzle. The nonce that, when combined with the given data, yields a hash
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 与给定数据组合的nonce产生一个哈希
- en: value that satisfies the restrictions is called the solution. You always have
    to present that particular nonce when claiming that you solved a hash puzzle.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 满足限制条件的值被称为解决方案。当你声称你解决了一个哈希拼图时，你必须提供那个特定的nonce。
- en: An Illustrative Example
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 一个说明性例子
- en: Let’s consider a real hash puzzle for illustrating its functioning. In S[tep
    10 y](http://dx.doi.org/10.1007/978-1-4842-2604-9_10)ou saw that the shortened
    hash value of Hello World! is 7F83B165\. But what data
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个真实的哈希拼图来说明它的功能。在第10步中，你看到了Hello World!的缩短哈希值为7F83B165\. 但是，什么样的数据
- en: combined with Hello World! would yield a shortened hash value with three
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 与Hello World!组合将产生一个首部带有三个零的缩短哈希值
- en: 'leading zeros? So the hash puzzle is: Find the nonce that combined with Hello'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 领先的零？所以哈希拼图是：找到与Hello
- en: World! yields a shortened hash value that starts with three leading zeros.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: World!产生首三个领先零的缩短哈希值。
- en: Let’s get our hands dirty and try some nonce. Table [11-1](index_split_001.html#94)
    shows the nonce, the text to be hashed, and the resulting shortened hash value.
    As you can see,
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们动手尝试一些nonce。表 [11-1](index_split_001.html#94)显示了nonce，要进行哈希的文本以及结果缩短的哈希值。正如你所看到的那样，
- en: the nonce 614 solves the hash puzzle, which implies that starting with a nonce
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: nonce 614解决了哈希拼图，这意味着从一个nonce开始
- en: 0 and incrementing sequentially by 1 you would need 615 steps to find the
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 0和逐步递增1，你需要615步才能找到
- en: solution. If the restriction were to find a hash value with one leading zero,
    you would have solved it already after four steps, since Hello World! 3 yields
    a
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案。如果限制条件是找到一个具有一个领先零的哈希值，那么你只需经过四个步骤就已经解决了，因为Hello World! 3产生一个
- en: hash value with one leading zero.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 具有一个领先零的哈希值。
- en: '***Blockchain Basics***'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '91'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: '91'
- en: '**Table 11-1\.** Nonces for Solving a Hash Puzzle'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: '**表11-1\.** 解决哈希拼图的Nonce'
- en: '**Nonce**'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nonce**'
- en: '**Text to Be Hashed**'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '**要散列的文本**'
- en: '**Output**'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '0'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: '0'
- en: Hello World! 0
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！0
- en: 4EE4B774
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 4EE4B774
- en: '1'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: Hello World! 1
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！1
- en: 3345B9A3
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 3345B9A3
- en: '2'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: Hello World! 2
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！2
- en: '72040842'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: '72040842'
- en: '3'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: Hello World! 3
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！3
- en: 02307D5F
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 02307D5F
- en: …
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '613'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '613'
- en: Hello World! 613
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！613
- en: E861901E
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: E861901E
- en: '614'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: '614'
- en: Hello World! 614
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！614
- en: '**00068A3C**'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '**00068A3C**'
- en: '615'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '615'
- en: Hello World! 615
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，世界！615
- en: 5EB7483F
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 5EB7483F
- en: You can try this y[ourself at www.blockchain-basics.com/HashPuzzle.](http://www.blockchain-basics.com/HashPuzzle.html)
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 www.blockchain-basics.com/HashPuzzle 自行尝试。
- en: '[html](http://www.blockchain-basics.com/HashPuzzle.html).'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: '[html](http://www.blockchain-basics.com/HashPuzzle.html).'
- en: The Difficulty Level
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 难度级别
- en: Requiring the hash value to fulfill a certain restriction is the core of the
    hash puzzle. Hence, neither the restriction nor its description is arbitrary.
    Instead, the restriction used by hash puzzles is standardized so that computers
    can
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 要求哈希值满足某些限制是散列谜题的核心。因此，限制和其描述都不是任意的。相反，哈希谜题使用的限制是标准化的，以便计算机可以
- en: challenge other computers with hash puzzles. In the context of hash puzzles,
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战其他计算机，执行散列谜题。在散列谜题的背景下，
- en: the restrictions are often called *difficulty* or *difficulty* *level*, respectively.
    The difficulty is expressed as a natural number and refers to the number of leading
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 这些限制通常被称为*难度*或*难度*
- en: zeros the hash value has to have. Hence, a difficulty of 1 means that the hash
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 散列值必须为零。因此，难度为1意味着散列
- en: value has to have (at least) one leading zero, while a difficulty of 10 means
    that the hash value has to have at least 10 leading zeros. The higher the difficulty
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 值必须具有（至少）一个前导零，而难度为10意味着散列值必须至少有10个前导零。难度越
- en: level, the more leading zeros are required and the more complicated the hash
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 级别，需要的前导零越多，哈希值越复杂
- en: puzzle is. The more complicated the hash puzzle is, the more computational
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 谜题。哈希谜题越复杂，所需的计算量越大
- en: power or time are needed to solve it.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 力或时间，需要解决它。
- en: Why It Works
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 为何有效
- en: The functioning of hash puzzles critically depends on the fact that hash
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 散列谜题的运作关键依赖于哈希
- en: functions are one-way functions. It is not possible to solve a hash puzzle by
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 函数是单向函数。不可能通过解决哈希谜题
- en: inspecting the restrictions that the hash value has to fulfill and applying
    the
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 检查哈希值必须满足的约束条件并应用
- en: hash function in the opposite direction afterward (i.e., going from the desired
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数然后以相反的方向进行（即，从所需的
- en: output to the required input). Hash puzzles can only be solved by trial and
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 输出到所需的输入）。哈希谜题只能通过试验和
- en: error, which consumes a lot of computing power and hence a lot of time and
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 错误，这需要大量的计算能力，因此也需要大量时间和
- en: energy. The level of difficulty directly influences the number of trials needed
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 能量。难度级别直接影响所需的试验次数
- en: on average for finding the solution, which in turn influences the computational
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 平均找到解决方案，从而影响计算
- en: resources or the time needed to find the solution.
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 资源或寻找解决方案所需的时间。
- en: '92'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: '92'
- en: '***Step 11 | Hashing in the Real World***'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '***第11步 | 实际中的散列***'
- en: Hash functions are deterministic and quickly produce hash values for any kind
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数是确定性的，可以快速产生任何类型的哈希值
- en: of data. Hence, once a solution is found, it is easy to verify that the data
    combined with the nonce indeed yield a hash value that satisfies the restrictions.
    If the calculated value does not satisfy the restriction, the hash function cannot
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的组合再加上随机数组合产生一个满足约束的哈希值。如果计算出的值不满足约束条件，则哈希函数无法
- en: be blamed because the deviation is only caused by the fact that the puzzle has
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 责任，因为偏差只是由于谜题
- en: not been solved.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 尚未解决。
- en: ■ **Note** In the context of the blockchain, hash puzzles are often called *proof
    of work*, as their solution proves that someone has done the work necessary to
    solve it.
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: ■ **注意** 在区块链的背景下，散列谜题通常被称为*工作证明*，因为其解决证明了某人已经做了必要的工作来解决它。
- en: Usage of Hashing in the Blockchain
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中使用散列
- en: 'Within the blockchain, hashing is used in the following instances:'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链内部，散列用于以下情况：
- en: • Storing transaction data in a change-sensitive manner
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: • 以敏感变化的方式存储交易数据
- en: • As a digital fingerprint of transaction data
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: • 作为交易数据的数字指纹
- en: • As a way to incur computational costs for changing the
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: • 作为增加计算成本的手段，以改变
- en: blockchain-data-structure
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构
- en: Outlook
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step explained major use cases of hash values and sketched their usage
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步解释了哈希值的主要用例，并勾画了它们的用法
- en: in the blockchain. The next steps will discuss in greater detail the way hashing
    is utilized by the blockchain.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中。接下来的步骤将更详细地讨论哈希算法是如何被区块链利用的。
- en: Summary
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 概要
- en: '• Hash values can be used:'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: • 哈希值可以使用：
- en: • To compare data
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: • 比较数据
- en: • To detect whether data that were supposed to stay
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: • 检测本来应该保持不变的数据是否已被更改
- en: unchanged have been altered
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 未被改变的已经被改变
- en: • To refer to data in a change-sensitive manner
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: • 以一种变化敏感的方式引用数据
- en: • To store a collection of data in a change-sensitive manner
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: • 以变化敏感的方式存储一组数据
- en: • To create computationally expensive tasks
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建计算昂贵的任务
- en: '**S T E P**'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤**'
- en: '12'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: '12'
- en: Identifying and
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 辨识和
- en: Protecting User
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 保护用户
- en: Accounts
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: 账户
- en: A gentle introduction to cryptography
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 一个关于密码学的温和介绍
- en: Besides hash functions, the blockchain uses another base technology exten-
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 除哈希函数之外，区块链还使用另一种基础技术扩展
- en: 'sively: asymmetric cryptography. It is the foundation for identifying users
    in the blockchain and protecting their property. Cryptography is often considered'
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 非对称密码学。这是在区块链中识别用户并保护其财产的基础。密码学通常被认为是
- en: complicated and hard to understand. Hence, this step focuses on introducing
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂并且难以理解。因此，这一步集中介绍
- en: cryptography in a gentle way that is easy to comprehend and sufficient for
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的密码学是为了以一种易于理解并且足够的方式对其进行。
- en: understanding the security concept of the blockchain.
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 理解区块链安全概念。
- en: The Metaphor
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 隐喻
- en: Long before e-mails, facsimiles, telephones, and chat apps were invented,
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 早在电子邮件、传真、电话和即时聊天应用被发明之前
- en: people used conventional mail to send messages. Along with its modern
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 人们使用传统邮件发送消息。随着现代
- en: competitors, conventional mail still exists and is still used by many people.
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 竞争对手，传统邮件仍在使用且被许多人使用。
- en: Conventional letters are still delivered by postal employees, who deliver let-
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 传统信件仍然由邮政员递送，他们将信件交给收件人。功能
- en: ters by putting them in the mailboxes of the addressees. Mailboxes functioning
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 放入收件人信箱。信箱的功能
- en: like trapdoors. By design, it is easy to insert a letter through the letter
    slot, but
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 像陷阱一样。按照设计，通过信封槽插入信件很容易，但
- en: © Daniel Drescher 2017
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: © Daniel Drescher 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_12
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher, *区块链基础*, DOI 10.1007/978-1-4842-2604-9_12
- en: '94'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: '94'
- en: '***Step 12 | Identifying and Protecting User Accounts***'
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤 12 | 辨识和保护用户账户***'
- en: it is very hard to pull a letter out that way because taking out letters is
    sup-
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: 这样拉取一个字母出来是非常困难的，因为那样做是令人吃力的
- en: posed to be done only by the addressee who owns the key necessary to open
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 通常仅由拥有必要打开的密钥的收件人完成
- en: the mailbox. This concept has been used for a very long time and we still use
    a
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 信箱。这个概念已经使用了很长时间，我们仍然使用
- en: similar concept when we send an e-mail to an e-mail address, when we send a
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们向一个邮件地址发送电子邮件时，存在一个类似的概念
- en: message in the latest chat app, or when we transfer money to a bank account.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 在最新的聊天应用中发送消息，或者当我们向银行账户转账时。
- en: In all these cases, the security concept is based on a separation of two kinds
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些情况下，安全概念基于两种不同
- en: 'of information: first, publicly known information that serves as an address
    to a trapdoor-like box; and second, private information that serves as the key
    for'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: 信息的：首先，作为通向类似陷阱的盒子的公开已知信息；第二，作为密钥的私人信息
- en: opening the box and accessing the things it contains. The blockchain applies
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 打开盒子并访问它包含的东西。区块链应用
- en: the same concept when protecting private data. Hence, keeping this metaphor
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: 保护私人数据时，也会涉及类似的概念。因此，保持这个隐喻
- en: in mind may provide some guidance on your way in learning about the world
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习有关在区块链中识别用户并保护其财产的过程中，心中或许提供一些指导
- en: of cryptography.
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 密码学。
- en: The Goal
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal is to identify owners and property uniquely and to ensure that only
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是唯一标识所有者和财产，并确保只有
- en: the lawful owner can access his or her property.
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 合法所有者可以访问他或她的财产。
- en: The Challenge
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战
- en: The blockchain is a peer-to-peer system that is open to everyone. Everyone
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是对所有人开放的点对点系统。每个人
- en: can connect and contribute computational resources or submit new transac-
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 可以连接和贡献计算资源或提交新的交易
- en: tion data to the system. However, it is not desirable for everyone to access
    the property assigned to the accounts managed by the blockchain. A constituting
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 向系统提交信息数据。然而，每个人都可以访问由区块链管理的账户分配的财产并不是理想的。构成
- en: characteristic of private property is its exclusiveness. The right to transfer
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: characteristic of private property is its exclusiveness. The right to transfer
- en: ownership to another account is restricted to the owner of the account who
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: ownership to another account is restricted to the owner of the account who
- en: hands off ownership. Hence, the challenge of the blockchain is to protect the
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: hands off ownership. Hence, the challenge of the blockchain is to protect the
- en: property assigned to the accounts without restricting the open architecture
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: property assigned to the accounts without restricting the open architecture
- en: of the distributed system.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: of the distributed system.
- en: The Idea
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: The Idea
- en: 'The idea is to treat accounts like mailboxes: everyone can transfer property
    to'
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 'The idea is to treat accounts like mailboxes: everyone can transfer property
    to'
- en: it, but only the owner of the account can access the things that are collected
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: it, but only the owner of the account can access the things that are collected
- en: inside. The major characteristic of a mailbox is that its location is known
    and
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: inside. The major characteristic of a mailbox is that its location is known
    and
- en: hence anyone can put something in but only the owner can open it with a
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: hence anyone can put something in but only the owner can open it with a
- en: key. The duality of a public mailbox, on the one hand, and a privately held
    key,
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: key. The duality of a public mailbox, on the one hand, and a privately held
    key,
- en: '***Blockchain Basics***'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '***Blockchain Basics***'
- en: '95'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '95'
- en: 'on the other hand, has an equivalent in the digital world: public-private-key'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 'on the other hand, has an equivalent in the digital world: public-private-key'
- en: encryption. One uses public keys for identifying accounts to which everyone
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: encryption. One uses public keys for identifying accounts to which everyone
- en: can transfer ownership, while access is restricted to those who possess the
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: can transfer ownership, while access is restricted to those who possess the
- en: corresponding private keys. [1](index_split_001.html#98)
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: corresponding private keys. [1](index_split_001.html#98)
- en: A Short Detour to Cryptography
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: A Short Detour to Cryptography
- en: In order to help you understand cryptography, I will discuss the following
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: In order to help you understand cryptography, I will discuss the following
- en: 'aspects:'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 'aspects:'
- en: • The major idea of cryptography
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: • The major idea of cryptography
- en: • Terminology
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: • Terminology
- en: • Symmetric cryptography
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: • Symmetric cryptography
- en: • Asymmetric cryptography
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: • Asymmetric cryptography
- en: The Major Idea of Cryptography
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: The Major Idea of Cryptography
- en: The major idea of cryptography is to protect data from being accessed by
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: The major idea of cryptography is to protect data from being accessed by
- en: unauthorized people. It is the digital equivalent to door locks or bank safes,
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: unauthorized people. It is the digital equivalent to door locks or bank safes,
- en: which also protect their content from being accessed by unauthorized people.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: which also protect their content from being accessed by unauthorized people.
- en: Similar to locks and keys in the physical world, cryptography also uses keys
    to
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: Similar to locks and keys in the physical world, cryptography also uses keys
    to
- en: protect data.
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: protect data.
- en: Terminolog[y2](index_split_001.html#98)
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: Terminolog[y2](index_split_001.html#98)
- en: The digital equivalent to closing a lock is encryption, while the digital equivalent
    to opening a lock is decryption. Hence, when talking about protecting data by
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: The digital equivalent to closing a lock is encryption, while the digital equivalent
    to opening a lock is decryption. Hence, when talking about protecting data by
- en: using cryptography, we use the terms encryption and decryption for protect-
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: using cryptography, we use the terms encryption and decryption for protect-
- en: ing data and unprotecting data, respectively. Encrypted data are called cypher
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: ing data and unprotecting data, respectively. Encrypted data are called cypher
- en: text. Cypher text looks like a useless pile of letters and figures to everyone
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: text. Cypher text looks like a useless pile of letters and figures to everyone
- en: who does not know how to decrypt it. However, cypher text is indeed useful
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: who does not know how to decrypt it. However, cypher text is indeed useful
- en: but only for those who possess the key necessary to decrypt it. Decrypted
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: but only for those who possess the key necessary to decrypt it. Decrypted
- en: cypher text is identical to the original data that have been encrypted. Hence,
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: cypher text is identical to the original data that have been encrypted. Hence,
- en: 'the whole round trip through cryptography can be summed up as: start with'
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 'the whole round trip through cryptography can be summed up as: start with'
- en: some data, produce cypher text by encrypting the original data with a cryp-
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: some data, produce cypher text by encrypting the original data with a cryp-
- en: tographic key, preserve the cypher text or send it to someone, and finally
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: tographic key, preserve the cypher text or send it to someone, and finally
- en: recover the original data by decrypting the cypher text with a cryptographic
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: recover the original data by decrypting the cypher text with a cryptographic
- en: key. Figure [12-1](index_split_001.html#99) illustrates the basic functioning
    of cryptography.
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: key. Figure [12-1](index_split_001.html#99) illustrates the basic functioning
    of cryptography.
- en: '1Nakamoto, Satoshi. Bitcoin: A peer-to-peer electronic cash system. 2008\.
    [https://bitcoin.](https://bitcoin.org/bitcoin.pdf)'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: '1Nakamoto, Satoshi. Bitcoin: A peer-to-peer electronic cash system. 2008\.
    [https://bitcoin.](https://bitcoin.org/bitcoin.pdf)'
- en: '[org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf).'
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: '[org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf).'
- en: '2See Van Tilborg, Henk, and Sushil Jajodia, eds. *Encyclopedia of cryptography
    and security*. New York: Springer Science & Business Media, 2014\.'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 2请参见Van Tilborg, Henk 和Sushil Jajodia，编。*密码和安全的百科全书*。纽约：斯普林格科学与商业媒体，2014年。
- en: '![](index-99_1.png)'
  id: totrans-777
  prefs: []
  type: TYPE_IMG
  zh: '![](index-99_1.png)'
- en: '![](index-99_2.png)'
  id: totrans-778
  prefs: []
  type: TYPE_IMG
  zh: '![](index-99_2.png)'
- en: '96'
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: '96'
- en: '***Step 12 | Identifying and Protecting User Accounts***'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: '***第12步|识别和保护用户帐户***'
- en: '**Figure 12-1\.** Schematic illustration of basic cryptographic concepts and
    their terminology What happens if someone tries to decrypt cypher text by using
    an incorrect'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '**图12-1。**基本密码概念及其术语的示意图 如果有人尝试使用不正确的方式解密密文会发生什么'
- en: key? The result is a useless pile of numbers, letters, and signs that do not
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥？结果是一堆无用的数字、字母和符号
- en: reveal any of the data that were encrypted.
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 揭示任何加密的数据。
- en: Symmetric Cryptography
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 对称加密
- en: For many years people utilized methods of cryptography where the identical
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，人们利用了相同的密码方法
- en: key was used to do both the encrypting and decrypting of data. Hence, every-
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 用于加密和解密数据。因此，每个-
- en: one who was able to encrypt data with such a key was automatically able to
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 有人能够使用这样的密钥加密数据，就能自动完成
- en: decrypt cypher text created with that key as well. Since the identical key was
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 解密使用该密钥创建的密文。由于相同的密钥是
- en: used for both methods, this was called symmetric cryptography. Figure [12-2](index_split_001.html#99)
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两种方法都使用，这被称为对称加密。图[12-2](index_split_001.html#99)
- en: illustrates the basic functioning of symmetric cryptography where the identi-
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: 说明了具有相同信标的对称加密的基本功能-
- en: cal key is used to encrypt and to decrypt a short greeting.
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 用于加密和解密短信。
- en: '**Figure 12-2\.** Schematic illustration of symmetric cryptography'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '**图12-2。**对称加密的原理示意图'
- en: However, it turned out that having one key for encryption and decryption
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，事实证明，拥有加密和解密的一个密钥
- en: was not always desirable. As a result, asymmetric cryptography was invented.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 并不总是可取的。因此，非对称加密被发明了。
- en: Asymmetric Cryptography
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 非对称加密
- en: Asymmetric cryptography always uses two complementary keys. But there
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: 非对称加密总是使用两个互补的键。但是有
- en: 'is a trick to this: cypher text created with one of these keys can only be'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点技巧：使用其中一个键创建的密文只能
- en: decrypted with the other key and vice versa.
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: 使用其他密钥解密，反之亦然。
- en: 'Figure [12-3 illustrates the encr](index_split_001.html#100)yption-decryption
    round trip for asymmetric cryptography. You can view this figure in the following
    way: The upper part of'
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 图[12-3说明了加密](index_split_001.html#100)-解密的往返旅程对于非对称加密。您可以以以下方式查看此图：上部
- en: Figure [12-3 illustrates encr](index_split_001.html#100)yption, while the lower
    part illustrates decryption.
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 图[12-3说明了加密](index_split_001.html#100)，下部说明了解密。
- en: '![](index-100_1.png)'
  id: totrans-801
  prefs: []
  type: TYPE_IMG
  zh: '![](index-100_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '97'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: '97'
- en: 'There are two keys: a white key and a black key. Together they form the pair'
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: '有两个键: 白色键和黑色键。它们一起形成了一对'
- en: of corresponding keys. The original message is encrypted with the black key,
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: 相应密钥。原始消息使用黑键加密，
- en: which yields cypher text represented by the black box containing white let-
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: 产生由包含白色字母的白色盒子表示的密文
- en: ters. The original message can also be encrypted with the second key, which
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 信。原始消息也可以使用第二个密钥加密
- en: yields different cypher text represented by the white box containing black
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: 产生由包含黑色字母的白色框表示的不同密文
- en: letters. For didactical reasons, the colors of the boxes representing cypher
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 信。出于教学目的，代表密文的框的颜色
- en: text and the colors of the keys used to produce them are identical in order
    to
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: 文本和用于生成它们的键的颜色相同，以便
- en: 'highlight their relation: The black key yields black cypher text, while the
    white key produces white cypher text.'
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: '突出它们之间的关系: 黑键产生黑色密文，而白键产生白色密文。'
- en: '**Figure 12-3\.** Schematic illustration of asymmetric cryptography'
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: '**图12-3。**非对称加密的原理示意图'
- en: The lower part of Figure [12-3](index_split_001.html#100) illustrates how decryption
    works in asymmetric cryptography. Black cypher text can only be decrypted with
    the white key and
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: 图[12-3](index_split_001.html#100)的下半部分说明了非对称加密中解密的工作原理。黑色密文只能使用白色密钥解密
- en: vice versa.
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 反之亦然。
- en: The trick to asymmetric cryptography is that you can never decrypt cypher
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: 非对称加密的诀窍在于您永远不能解密密文
- en: text with the key that was used to create it. The decision on which key to
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: 使用生成它的密钥的密钥。关于使用哪个密钥的决定
- en: use for encryption and which to use for decryption is up to you. You can
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 选择用于加密和解密的哪个密钥由你决定。 你可以
- en: switch the roles of the keys as you like for every new piece of data you want
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 随意切换密钥的角色，用于每一个新的你想要的数据
- en: to encrypt, but you always have to keep both keys for doing both encryption
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 用于加密，但是做加密和解密都需要保持两个密钥
- en: and decryption. If you have only one of the keys, your power is limited. While
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: 和解密。 如果你只有其中之一，你的权力是有限的。 虽然
- en: you can always create cypher text by applying your key to data, you cannot
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 你总是可以通过将你的密钥应用于数据来创建密码文本，你不能
- en: decrypt it because you are missing the complementary key. However, you can
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: 解密，因为你缺少互补的密钥。 但是，你可以
- en: decrypt cypher text that was created with the corresponding complementary
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 解密相应的互补
- en: 'key. An isolated key is like a one-way street: You can drive down the street'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥。 孤立的密钥就像单行道：你可以沿着这条街开车
- en: '98'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '98'
- en: '***Step 12 | Identifying and Protecting User Accounts***'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '***第12步 | 识别和保护用户帐户***'
- en: but you can never drive back on the identical street. Due to the asymmetric
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: 但是你永远不能在同一条街上开车回去。 由于非对称
- en: distribution of their cryptographic power, the two keys allow you to separate
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: 在它们的加密权力的分发，这两个密钥允许您分离
- en: the group of people who are able to create cypher text from those who can
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: 能够从创建密码文本的人群到那些可以
- en: decrypt it.
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: 解密它。
- en: Asymmetric Cryptography in the Real World
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 实际生活中的非对称密码学
- en: 'Using asymmetric cryptography in real life consists of two major steps:'
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中使用非对称密码学包括两个主要步骤：
- en: • Creating and distributing the keys
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建和分发密钥
- en: • Using the keys
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: • 使用密钥
- en: Creating and Distributing the Keys
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和分发密钥
- en: When using asymmetric cryptography in real life, you would give the two keys
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际生活中使用非对称加密时，你会给予两个密钥
- en: specific names in order to highlight each one’s role. Typically these keys are
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 为了突出每个密钥的作用。 通常这些密钥是
- en: called the private key and public key. For that reason, asymmetric cryptography
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: 称为私钥和公钥。 因此，非对称密码学
- en: is called public-private-key cryptography. However, there are no such things
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: 被称为公私钥加密。 但是，没有这样的东西
- en: as the private key and public key in asymmetric cryptography per se because
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: 如私钥和非对称密码学中的公钥因为
- en: you know that you can encrypt data and decrypt cypher text with each of
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道你可以用每一个来加密数据和解密密码文本
- en: them. It is the role that is assigned to these keys that makes them private
    or
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 他们。 它是分配给这些密钥的角色使它们私有或
- en: public. The public key is given to everyone, regardless of their trustworthiness.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 公开。 公钥是给每个人的，不管他们的可信度如何。
- en: Literally anyone can have a copy of the public key. However, the private key
    is
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上任何人都可以拥有公钥的副本。 但是，私钥是
- en: kept safe and private.
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 保持安全和私密。
- en: Hence, the first steps to be performed in any application of asymmetric cryp-
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，应用非对称密码学的第一步是执行
- en: 'tography are:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 图表是：
- en: 1\. Create a pair of complementary keys by using crypto-
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 通过使用加密来创建一对互补的密钥
- en: graphic software
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 图形软件
- en: 2\. Give one key the name public key
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 给一个密钥起名叫公钥
- en: 3\. Give the other key the name private key
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 给另一个密钥取名私钥
- en: 4\. Keep the private key for yourself
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将私钥保留给自己
- en: 5\. Give your public key to everyone else
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 将你的公钥给每个人
- en: Using the Keys
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 使用密钥
- en: There are two general ways to use the pair of keys, which differ in the direc-
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种一般使用密钥的方式，它们在方向上有所不同
- en: 'tion to which the data flows:'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 数据流向的方向：
- en: • Public to private
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: • 公钥到私钥
- en: • Private to public
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: • 私钥到公钥
- en: '***Blockchain Basics***'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '99'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '99'
- en: Public to Private
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 公共到私人
- en: By using the keys in this way, the information flows from the public key, where
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式使用密钥，信息从公钥流向
- en: it is encrypted, to the private key, where it is decrypted. This usage of the
    two complementary keys is similar to a mailbox, where everyone can put letters
    in
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 它是加密的，到私钥，那里它是解密的。 这种使用两个互补密钥的方式类似于邮箱，每个人都可以把信件放入
- en: but only the owner can open it. It is the straightforward usage of asymmetric
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: 但是只有所有者才能打开它。 这是非对称的简单用法
- en: cryptography because it fits our intuition about privacy and publicity in the
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 加密术是因为它符合我们对隐私和公开的直觉
- en: same way as our address and our mailbox is public but its content is private.
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的地址和我们的邮箱是公开的，但它的内容是私有的
- en: Hence, this way of using asymmetric cryptography is all about sending infor-
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这种使用非对称密码学的方式是关于发送信息
- en: mation in a secured fashion to the owner of the private key. It works because
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 以安全方式将加密权力分配给私钥的所有者。 它有效因为
- en: everyone can create cypher text with the public key, but only the owner of the
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都可以使用公钥创建密文，但只有所有者
- en: private key can decrypt the cypher text and read the message.
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥可以解密密文并阅读消息。
- en: Private to Public
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 私有到公共
- en: By using the keys in this way, the information flows from the private key, where
    it is encrypted, to the public key, where it is decrypted. This way of using the
    two keys is similar to a public news board or public notice board where everyone
    who has a copy of the public key can read messages but only the owner
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以这种方式使用密钥，信息从加密的私钥流向解密的公钥。使用这两个密钥的方式类似于公共新闻板或公共布告板，每个拥有公钥副本的人都可以阅读消息，但只有所有者
- en: of the private key can create messages. Hence, this way of using asymmetric
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥可以创建消息。因此，使用非对称加密的这种方式
- en: cryptography is all about proving authorship. It works because everyone can
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: 密码术是关于证明作者身份。它起作用是因为每个人都可以
- en: use the public key to decrypt cypher text that was created with the corre-
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: 使用公钥解密使用正确私钥创建的密文
- en: sponding private key. The fact that cypher text created with the private key
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的私钥。使用私钥创建的密文的事实
- en: can only be decrypted with the corresponding public key serves as proof that
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 只能用相应的公钥解密的密文作为证据表明
- en: the owner of the corresponding private key has encrypted the message.
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 具有相应私钥的所有者已加密消息。
- en: Asymmetric Cryptography in the Blockchain
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的非对称加密
- en: 'The blockchain uses asymmetric cryptography in order to achieve two goals:'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链使用非对称加密实现两个目标：
- en: • Identifying accounts
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: • 辨识账户
- en: • Authorizing transactions
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: • 授权交易
- en: Identifying Accounts
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 辨识账户
- en: The blockchain needs to identify users or user accounts, respectively, in order
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链需要分别识别用户或用户账户，以便
- en: to maintain the mapping between owner and property. The blockchain uses
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 保持所有者和属性之间映射的。区块链使用
- en: the public-to-private approach of asymmetric cryptography for identifying
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: 用于识别的非对称加密的公共到私有方法
- en: user accounts and transferring ownership between them. Account numbers
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 用户账户和它们之间的所有权转移。账号号码
- en: in the blockchain are actually public cryptographic keys. Hence, transaction
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中实际上是公共加密密钥。因此，交易
- en: data use the public cryptographic keys for identifying the accounts involved
    in
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 数据使用公共加密密钥来识别涉及的账户
- en: the transfer of ownership. In this regard, the blockchain treats user accounts
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权的转移。在这方面，区块链处理用户账户
- en: 'similar to mailboxes: They have a publicly known address and everyone is able'
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于邮箱：它们有一个众所周知的地址，每个人都能够
- en: to send messages to them.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 发送消息给他们。
- en: '100'
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: '100'
- en: '***Step 12 | Identifying and Protecting User Accounts***'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤12 | 辨识和保护用户账户***'
- en: Authorizing Transactions
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 授权交易
- en: Transaction data always have to include a piece of data that serves as proof
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据始终必须包括作为证据的一部分的数据，
- en: that the owner of the account who hands off ownership indeed agrees with
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 确实同意转让所有权的账户所有者
- en: the described transfer of ownership. The flow of information implied by this
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 所描述的所有权转让。这种信息流暗示的流动
- en: agreement starts at the owner of the account who hands off ownership and
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 协议始于转让所有权的账户所有者，并
- en: is supposed to reach everyone who inspects the transaction data. This kind of
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: 应该达到所有检查交易数据的人。这种类型的
- en: information flow is similar to that implied by the private-to-public use case
    of asymmetric cryptography. The owner of the account who hands off ownership creates
    some cypher text with his or her private key. All others can verify this proof
    of agreement by using the public cryptographic key, which happens
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: 信息流与非对称加密的私钥-公钥使用场景所暗示的类似。同意转让所有权的账户所有者使用他或她的私钥创建了一些密文。所有其他人可以通过使用公钥来验证此协议的证据，这发生在
- en: to be the number of the account that hands off ownership. The details of this
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 作为转让所有权的帐户号码的细节
- en: procedure, which is called digital signature, will be explained in more detail
    in the next step.
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 程序，称为数字签名，将在下一步中详细解释。
- en: Outlook
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: Outlook
- en: This step explained the concept of asymmetric cryptography and how it is
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步解释了非对称加密的概念以及它是如何
- en: used as public-private-key cryptography in real life. Furthermore, this step
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中作为公私钥加密使用。此外，这一步
- en: explained that cryptographic public keys are used in the blockchain to iden-
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 解释了区块链中使用加密公钥来识别-
- en: tify user accounts. Furthermore, the lawful owner authorizes transactions by
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴定用户帐户。此外，合法所有者通过
- en: creating a digital signature that can be traced back to his or her private cryp-
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 创建可以追溯到他或她的私人密码的数字签名-
- en: tographic key. The next step explains this concept in more detail, as this usage
    of asymmetric cryptography is less intuitive than the identification of accounts
    by public keys.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥。下一步将更详细地解释这一概念，因为非对称加密的这种用法不如公钥对用户帐户进行标识直观。
- en: Summary
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: • The major goal of cryptography is to protect data from
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: • 密码学的主要目标是保护数据免受
- en: being accessed by unauthorized people.
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 被未经授权的人访问。
- en: '• The major cryptographic activities are:'
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: • 主要的加密活动包括：
- en: '• Encryption: Protecting data by turning them into cypher'
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: • 加密：将数据转化为密码来保护数据
- en: text by utilizing a cryptographic key
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: 使用加密密钥的文本
- en: '• Decryption: Turning cypher text back into useful data'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: • 解密：将密文转换回实用数据
- en: by utilizing a matching cryptographic key
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 使用匹配的加密密钥
- en: • Asymmetric cryptography always uses two complemen-
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: • 非对称加密总是使用两个互补的-
- en: 'tary keys: cypher text created with one of these keys can'
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: 钥：使用其中一个密钥创建的密文可以
- en: only be decrypted with the other key and vice versa.
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 只能通过另一个密钥解密，反之亦然。
- en: '***Blockchain Basics***'
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '101'
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: '101'
- en: • When utilizing asymmetric cryptography in real life, these
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: • 在现实生活中利用非对称加密时，这些
- en: keys are typically called the public key and private key in
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥通常称为公钥和私钥
- en: order to highlight their role. The public key is shared with
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 以突出它们的作用。公钥与
- en: everyone, while the private key is kept secret. For this
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人，而私钥是保密的。为此
- en: reason, asymmetric cryptography is also called public-
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 原因，非对称加密也被称为公开-
- en: private-key cryptography.
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥加密。
- en: • There are two classical use cases of public and private
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: • 公钥和私钥有两个经典的用例
- en: 'keys:'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥：
- en: • Everyone uses the public key to encrypt data that can
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: • 每个人使用公钥来加密数据，这些数据可以
- en: only be decrypted by the owner of the corresponding
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: 只能由相应所有者解密
- en: private key. This is the digital equivalent to a public
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥。这是相当于公开
- en: mailbox where everyone can put letters in but only
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: 所有人都可以将信件放入其中，但只有
- en: the owner can open it.
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者才能打开它。
- en: • The owner of the private key uses it to encrypt data
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: • 拥有私钥的所有者使用它来加密数据
- en: that can be decrypted by everyone who possesses the
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 可以被所有拥有相应公钥的人解密
- en: corresponding public key. This is the digital equivalent
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的公钥。这是数字等价物
- en: to a public notice board that proves authorship.
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: 公共公告牌上证明作者身份。
- en: • The blockchain uses asymmetric cryptography in order
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链使用非对称加密来
- en: 'to achieve two goals:'
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 实现两个目标：
- en: '• Identifying accounts: User accounts are public'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: • 身份验证账户：用户账户是公开的
- en: cryptographic keys.
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 密码密钥。
- en: '• Authorizing transactions: The owner of the account'
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: • 授权交易：账户所有者
- en: who hands off ownership creates a piece of cypher
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: 谁接手所有权创建一段密文
- en: text with the corresponding private key. This piece of
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: 与相应私钥的文本。这是一块
- en: cypher text can be verified by using the corresponding
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 密文可以通过使用相应的
- en: public key, which happens to be the number of the
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥，这恰好是该
- en: account that hands off ownership.
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: 账户交接所有权。
- en: '**S T E P**'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '**S T E P**'
- en: '13'
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: '13'
- en: Authorizing
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: 授权
- en: Transactions
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: 交易
- en: Utilizing the digital equivalent to
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: 利用数字等价物
- en: handwritten signatures
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: handwritten signatures
- en: Step [12](http://dx.doi.org/10.1007/978-1-4842-2604-9_12) provided a gentle
    introduction to asymmetric cryptography. It also pointed out that the blockchain
    uses public cryptographic keys as account
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: 第[12](http://dx.doi.org/10.1007/978-1-4842-2604-9_12) 步骤提供了非对称加密的简要介绍。它还指出，区块链使用公共加密密钥作为账户
- en: numbers and utilizes the public-to-private approach of asymmetric cryptog-
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 数字并利用非对称密码的公共到私有途径-
- en: raphy for transferring ownership among accounts. However, that was only
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: 用于转让所有权。然而，这只是
- en: half of the story. The blockchain needs to ensure that only the lawful owner
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: 故事的一半。区块链需要确保只有合法所有者
- en: can transfer his or her property to other accounts. This is the point were
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将其财产转移给其他账户。这是这一点
- en: the concept of authorization enters the scene. Hence, this step explains how
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: 授权的概念进入场景。因此，本步骤解释了如何
- en: asymmetric cryptography is used within the blockchain for authorizing trans-
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链内部使用非对称加密来授权交换-
- en: actions. In particular, this step is devoted to the concept of digital signatures,
    which utilize the private-to-public approach of asymmetric cryptography.
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: 行动。特别是，这一步致力于数字签名概念，利用了非对称加密的私有到公共方法。
- en: The Metaphor
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: 隐喻
- en: 'Handwritten signatures serve an important purpose: they state agreement with'
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 手写签名起到了重要作用：它们表示对
- en: the content of a document and agree with its execution. The reason why we
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: 文档的内容并同意其执行。我们接受手写签名作为同意的证据的原因是
- en: accept handwritten signatures as evidence for agreement is the uniqueness of
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: 接受手写签名作为同意的证据之所以重要是因为
- en: each person’s handwriting. Every human being has his or her own characteristic
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人的笔迹。每个人都有自己独特的特征
- en: © Daniel Drescher 2017
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: © Daniel Drescher 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_13
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher，《区块链基础》，DOI 10.1007/978-1-4842-2604-9_13
- en: '104'
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: '104'
- en: '***Step 13 | Authorizing Transactions***'
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: '***第13步 | 授权交易***'
- en: way of writing his or her name. Hence, when we identify a name being written
    in
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: 的一种方式。因此，当我们识别出以这种方式书写名字的时候
- en: a specific way, we conclude that the person who writes his or her name in that
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: 特定方式，我们得出这样一个结论：以这种方式书写名字的人
- en: particular way has indeed produced that handwritten signature, and, as a result,
    we can conclude that this person has agreed with the content of the document
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 特定方式确实产生了手写签名，因此我们可以得出结论，这个人已经同意了文档的内容。
- en: and its implementation. This step explains the concept of stating agreement
    with transactions in an electronic ledger that is similar to handwritten signatures.
    This concept is crucial for the security of individual transactions in the blockchain.
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: 及其实现。这一步解释了在电子分类帐中声明对交易的同意的概念，类似于手写签名。这个概念对区块链中个人交易的安全非常重要。
- en: The Goal
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: It is important to ensure that only the owner of an account can transfer
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 确保只有账户所有者才能转移
- en: the property associated with it to other accounts. Every attempt to access
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: 与其关联的财产转移到其他账户。每次尝试访问
- en: an account and its associated property by any person other than the lawful
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: 一个账户及其相关财产任何其他人
- en: owner should be identified as unauthorized and should be rejected.
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者应当被识别为未经授权，并应当被拒绝。
- en: The Challenge
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战
- en: The peer-to-peer system under consideration is open to everyone. Hence,
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑中的点对点系统对所有人开放。因此，
- en: everyone may create transactions and can submit them to the system.
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都可以创建交易，并将其提交给系统。
- en: Transaction data are the foundation of describing and clarifying ownership.
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据是描述和澄清所有权的基础。
- en: Only the lawful owner of an account should be able to transfer property or
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 只有合法的账户所有者才能转移财产或
- en: ownership rights associated with his or her account to another account. The
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: 与其它账户进行的所有权转让。这
- en: challenge of the blockchain is to maintain its openness while restricting the
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的挑战在于保持其开放性的同时限制着
- en: transfer of ownership to the lawful owner.
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有权的转移授权给合法所有者。
- en: The Idea
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: 思想
- en: The main idea of ensuring that only the lawful owner can transfer ownership
    is
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: 确保只有合法所有者才能转移所有权的主要思想
- en: 'to utilize a digital security measure that is equivalent to handwritten signatures
    and serves the same purpose: identifying an account, stating the agreement of'
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: 以利用相当于手写签名的数字安全措施，起到相同的目的：识别一个账户，声明同意
- en: its owner with the content of specific transaction data, and approving its execution
    by allowing the data to be added to the history of transaction data.
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: 其所有者与特定交易数据的内容进行验证，通过允许将数据添加到交易数据历史记录来批准其执行。
- en: A Short Detour to Digital Signatures
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 对数字签名的简短介绍
- en: Digital signatures are the equivalent of handwritten signatures. They utilize
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名是手写签名的等价物。它们利用
- en: cryptographic hashing and the private-to-public information flow of asym-
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: 加密哈希和非对称加密的私有到公共信息流
- en: metric cryptography. The following short example illustrates the three major
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: 度密码学的特点。以下是三个主要
- en: 'elements of digital signatures:'
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名的要素：
- en: • Creating a signature
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建签名
- en: • Verifying data by using the signature
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: • 使用签名验证数据
- en: • Identifying fraud by using the signature
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: • 使用签名识别欺诈
- en: '![](index-107_1.png)'
  id: totrans-1003
  prefs: []
  type: TYPE_IMG
  zh: '![](index-107_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '105'
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: '105'
- en: Creating a Signature
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 创建签名
- en: Let’s say I want to send a Hello World! greeting to the world in an authorized
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我想向世界发送一个“Hello World！”的问候
- en: way. Hence, I create a message that contains the greeting and a corresponding
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: 方式。因此，我创建了一个包含问候和相应的
- en: digital signature. Figure [13-1](index_split_001.html#107) depicts the whole
    process of signing data digitally.
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名相同。图[13-1](index_split_001.html#107)描绘了整个数字签名过程。
- en: The process starts with the white box in the top left area of Figure [13-1 that](index_split_001.html#107)
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 过程从图[13-1](index_split_001.html#107)左上角的白色盒子开始
- en: contains the greeting. I create the hash value of the greeting, which is 7F83B165,
    and encrypt it with my private key. The cypher text of the greeting’s hash value
    (the black box containing white letters) is my digital signature of the greeting.
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: 包含问候。我创建问候的哈希值，即7F83B165，并用我的私钥加密。问候的哈希值的密文（黑色框内的白色字母）是我对问候的数字签名。
- en: 'It is unique with respect to two aspects: First, it can be traced back to me'
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: 它在两个方面是独特的：首先，可以追溯到我
- en: uniquely because I created it with my unique private key. Second, it is unique
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: 独特的，因为我用我的唯一私钥创建了它。其次，它是独特的
- en: regarding the text of the greeting because it is based on the digital fingerprint
    of the greeting. Both the greeting and the digital signature are put together
    in a file (the gray box), which is my digitally signed message to the world.
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 关于问候文本，因为它基于问候的数字指纹。问候和数字签名都被放在一个文件中（灰色框），这是我向世界发送的数字签名消息。
- en: '**Figure 13-1\.** Schematic illustration of creating a digital signature'
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-1**。创建数字签名的示意图'
- en: Verifying Data by Using the Signature
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用签名验证数据
- en: The message, that is, my greeting together with the digital signature, is sent
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: 信息，也就是我的问候和数字签名一起发送
- en: to the whole world. Everyone can verify that I authorized this message by
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: 对整个世界。每个人都可以验证我通过授权这条消息
- en: utilizing my public key. Figure [13-2](index_split_001.html#108) illustrates
    the process of verifying the message by using the digital signature. The process
    starts with the greeting. At
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: 利用我的公钥。图[13-2](index_split_001.html#108)说明了使用数字签名验证消息的过程。过程以问候开始。在
- en: first the recipient of the message calculates the hash value of the greeting
    by
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，消息的接收者计算问候的哈希值
- en: himself, which yields the value 7F83B165\. Then the recipient of my message
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: 自己，得到的值为7F83B165。然后我消息的接收者
- en: decrypts the attached cypher text (the digital signature) with my public key.
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: 用我的公钥解密附加的密文（数字签名）。
- en: Doing so yields the value 7F83B165, which is the hash value of that version
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做得到的值为7F83B165，这是那个版本的哈希值
- en: of the greeting I wanted to send to the world. Comparing both hash values
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 我想发送给世界的问候。比较两个哈希值
- en: '![](index-108_1.png)'
  id: totrans-1025
  prefs: []
  type: TYPE_IMG
  zh: '![](index-108_1.png)'
- en: '![](index-108_2.png)'
  id: totrans-1026
  prefs: []
  type: TYPE_IMG
  zh: '![](index-108_2.png)'
- en: '106'
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
  zh: '106'
- en: '***Step 13 | Authorizing Transactions***'
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤13 | 授权交易***'
- en: completes the verification. Since both hash values are identical, the recipient
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 完成验证。由于两个哈希值相同，接收者
- en: correctly concludes, first, that the message was signed by me, because he was
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: 正确地得出结论，首先，消息是我签署的，因为他是
- en: able to decrypt the signature with my public key, and second, that the greet-
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 能够使用我的公钥解密签名，并且第二个，问候
- en: ing text found in the message is indeed the one I wanted to send because the
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: 文本找到的确实是我想要发送的那个，因为
- en: decrypted cypher text is identical with the hash value of the greeting in the
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: 解密后的密文与问候的哈希值在
- en: message.
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 消息。
- en: '**Figure 13-2\.** Using a digital signature to verify a message'
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-2**。使用数字签名验证消息'
- en: Identifying Fraud by Using the Signature
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用签名来识别欺诈
- en: Figure [13-3 illustrates ho](index_split_001.html#108)w the digital signature
    points out a forged greeting.
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: 图[13-3说明了](index_split_001.html#108)数字签名如何指出伪造的问候。
- en: '**Figure 13-3\.** Using a digital signature to identify fraud'
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-3**。使用数字签名识别欺诈'
- en: '***Blockchain Basics***'
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '107'
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: '107'
- en: Figure [13-3](index_split_001.html#108) shows the message that arrived in my
    friend’s mailbox. Note the change of the greeting text. Some hacker replaced the
    exclamation mark with
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: 图[13-3](index_split_001.html#108)展示了到达我朋友邮箱的消息。请注意问候文本的变化。一些黑客用
- en: a question mark and hence changed the whole tone of the greeting. This is
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 一个问号，从而改变了问候的整个语气。这就是
- en: not the way I wanted to greet the world. Fortunately, the digital signature
    will point out to everyone that the message has been altered against my will.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 不是我想要向世界问候的方式。幸运的是，数字签名会告诉所有人，消息已经被违背了我的意愿进行了修改。
- en: At first the recipient of the message will create the hash value of the greeting
    by himself, which yields the value 8A0B7C66\. Then the recipient of my message
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，消息的接收者将自己创建问候的哈希值，得到值为8A0B7C66。然后我的消息的接收者
- en: decrypts the digital signature with my public key. Doing so yields 7F83B165,
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
  zh: 用我的公钥解密数字签名。这样得到7F83B165，
- en: which is the hash value of the version of the greeting I wanted to send to the
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我想要发送给
- en: world. Comparing both hash values reveals that they are not identical. This
  id: totrans-1047
  prefs: []
  type: TYPE_NORMAL
  zh: 世界。对比两个哈希值发现它们不一致。这
- en: clearly points out that the greeting in the message is not the greeting I wanted
    to send to the world. Hence, everyone concludes that I did not authorize this
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: 明确指出消息中的问候不是我想要发送给世界的问候。因此，每个人都得出结论，我没有授权这个
- en: message, and, therefore, no one will make me responsible for its content.
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: 消息，因此没有人会因其内容而责怪我。
- en: How It Works
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 它是如何起作用的
- en: 'Digital signatures in the blockchain fulfill the following requirements:'
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中的数字签名满足以下要求：
- en: • They state agreement of the owner of the account who
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: • 他们声明账户的所有者的同意
- en: hands off ownership with specific transaction data.
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: 以特定交易数据转移所有权。
- en: • They are unique for the whole content of transaction
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: • 它们对整个交易数据是唯一的
- en: data in order to prevent it from being used to authorize
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止其被用来授权
- en: other transactions without the agreement of its author.
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 其他交易，未经其作者的同意。
- en: • Only the owner of the account who hands off ownership
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
  zh: • 只有转移所有权的账户的所有者可以执行以下步骤：
- en: can create such a signature.
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: 可以创建这样的签名。
- en: • They are easy to verify by everyone.
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: •  他们易于被每个人所验证。
- en: 'There are two use cases of digital signatures in the blockchain:'
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中数字签名有两个用例：
- en: • Signing a transaction
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: • 签署交易
- en: • Verifying a transaction
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: • 验证交易
- en: Signing a Transaction
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: 签署交易
- en: In order to create a digital signature for a transaction, the owner of the
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为交易创建数字签名，转移所有权的账户的
- en: 'account who hands off ownership performs the following steps:'
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: 转移所有权的账户所有者执行以下步骤：
- en: 1\. Describes the transaction with all necessary informa-
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 描述包含账号号码、转移金额等所有必要信息的交易
- en: tion such as the involved account numbers, amount being
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: 涉及的账户号码、转移金额等的交易
- en: transferred, and so on except the signature itself as it is
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: 转移，等等，除了签名本身
- en: not yet available.
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: 目前尚不可用
- en: 2\. Create the cryptographic hash value of the transaction
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 创建交易的加密哈希值
- en: data.
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: 数据。
- en: '108'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: '108'
- en: '***Step 13 | Authorizing Transactions***'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: '***第13步|授权交易***'
- en: 3\. Encrypt the hash value of the transaction with the private
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 用私钥加密交易的哈希值
- en: key of the account that hands off ownership.
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: 转移所有权的账户的密钥。
- en: 4\. Add the cypher text created in point 3 to the transaction
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将第3点创建的密码文本添加到交易中
- en: as its digital signature.
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数字签名。
- en: Verifying a Transaction
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: 验证交易
- en: 'In order to verify a transaction, the following steps must be performed:'
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证交易，必须执行以下步骤：
- en: 1\. Create the hash value of the transaction data to be veri-
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 创建待验证的交易数据的哈希值
- en: fied except the signature itself.
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
  zh: 除了签名本身，交易的整个内容是唯一的。
- en: 2\. Decrypt the digital signature of the transaction under
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 用我的公钥解密交易的数字签名
- en: consideration with the account number that hands off
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: 与转移所有权的账户号码相关的考虑事项
- en: ownership.
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 所有权。
- en: 3\. Compare the hash value of step [1](http://dx.doi.org/10.1007/978-1-4842-2604-9_1)
    with the value gained in step [2\.](http://dx.doi.org/10.1007/978-1-4842-2604-9_2)
    If both are identical, the transaction is authorized by the owner of the private
    key that corresponds to the
  id: totrans-1085
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 比较步骤[1](http://dx.doi.org/10.1007/978-1-4842-2604-9_1)中获取的值与步骤[2](http://dx.doi.org/10.1007/978-1-4842-2604-9_2)中获取的值。如果两者相同，则该交易由对应于
- en: account that hands off ownership, otherwise it is not.
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: 转移所有权的账户，否则不行。
- en: Why It Works
  id: totrans-1087
  prefs: []
  type: TYPE_NORMAL
  zh: 它如何起作用
- en: 'Digital signatures of transaction data are a combination of the following:'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据的数字签名是以下内容的组合：
- en: • Cryptographic hash values of transaction data
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: • 交易数据的加密哈希值
- en: • Cypher text that can be traced back to the correspond-
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: • 可以追溯到对应的密码文本
- en: ing private key of an account
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥加密的分散的用途
- en: Due to the fact that cryptographic hash values can be considered digital fin-
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: 由于加密哈希值可以被视为数字化
- en: gerprints, they are unique for each transaction. A constituting property of
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹，它们对每个交易都是唯一的。 构成特性的一个属性
- en: public-private-key cryptography is that cypher text created with one key can
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: 使用公私钥加密法，用一个秘钥创建的密码文本可以
- en: only be decrypted with the corresponding key. The association of both keys
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: 只能使用相应的密钥解密。 两个密钥的关联
- en: is unique. Hence, a successful decryption of cypher text with a specific public
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 是唯一的。 因此，成功解密具有特定公共密钥的密码文本
- en: key serves as proof that it was created with the corresponding private key.
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥作为证据表明它是使用相应的私钥创建的。
- en: Both concepts combined are used to create cypher text that can be traced
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: 结合使用这两个概念来创建可追溯的密码文本
- en: back uniquely to one specific transaction data and to one specific private
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到一个特定的交易数据和一个特定的私钥
- en: key in one process. This property make digital signatures suitable to serve
    as
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: 一次过程中的密钥。 这种属性使数字签名适合用作
- en: proof that the owner of the private key that was used to create the digital
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: 证明使用来创建数字签名的私钥的所有者
- en: signature indeed agrees with the content of the transaction.
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 签名确实与交易的内容一致。
- en: '***Blockchain Basics***'
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '109'
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: '109'
- en: Outlook
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step completes the process of how the blockchain protects ownership
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步完成了区块链如何保护所有权的过程
- en: on the level of individual transaction data. As a result, transactions and their
    purpose to transfer and prove ownership are safe and secure. However, it is
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: 在个别交易数据的水平上。 因此，交易及其用于转移和证明所有权的目的是安全的和可靠的。然而，它
- en: important to ensure that transaction data are not only secured on the indi-
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: 确保交易数据不仅在个别上得到保障很重要
- en: vidual level. There is still a need to store the whole history of transaction
    data in a secure way. The next steps will explain in more detail how to achieve
    this.
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: 个别水平上。 仍然需要以安全的方式存储整个交易数据的完整历史。接下来的步骤将详细解释如何实现这一点。
- en: Summary
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
  zh: 总结
- en: • Handwritten signatures on documents state the agree-
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: •文件上的手写签名陈述同意
- en: ment of their authors with the content of the signed
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: 其作者的声明与签署内容相匹配
- en: documents and authorize their implementation.
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 文件并授权其实施。
- en: • The evidential power of handwritten signatures is based
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: •手写签名的证据力是基于
- en: on the uniqueness of the handwriting.
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: 根据手写的独特性。
- en: • Digital signatures are the digital equivalent to handwrit-
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: • 数字签名是手写的数字等价物
- en: ten signatures.
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: 十个签名。
- en: '• Digital signatures serve two purposes:'
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: • 数字签名有两个目的：
- en: • Identify its author uniquely
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
  zh: •唯一识别其作者
- en: • State agreement of its author with the content of a
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: •其作者对交易内容的状态一致性
- en: document and authorize its execution
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: 文件并授权其执行
- en: • In the blockchain, digital signatures of transactions are
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: •在区块链中，交易的数字签名
- en: cryptographic hash values of transaction data encrypted
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: 交易的加密哈希值
- en: with the private key that corresponds to the account that
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: 与对应于帐户的私钥对的私钥
- en: hands off ownership.
  id: totrans-1125
  prefs: []
  type: TYPE_NORMAL
  zh: 接手所有权。
- en: • Digital signatures in the blockchain can be trace back
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链中的数字签名可以被追溯
- en: uniquely to one specific private key and to one specific
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一对应一个特定的私钥和一个特定的
- en: transaction in one process.
  id: totrans-1128
  prefs: []
  type: TYPE_NORMAL
  zh: 一个过程中的交易。
- en: '**S T E P**'
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: '**S T E P**'
- en: '14'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: '14'
- en: Storing
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
  zh: 存储
- en: Transaction
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: 交易
- en: Data
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
  zh: 数据
- en: Building and maintaining a history of
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: 建立和维护历史记录
- en: transaction data
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据
- en: Based on the previous five steps, you should now be able to trace ownership
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: 基于前面的五个步骤，您现在应该能够追溯所有权
- en: based on the whole history of transaction data and to describe individual
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
  zh: 基于整个交易数据的历史以及描述个别
- en: transfers of ownership in a secure way by authorizing transactions with digital
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: 通过数字签名授权交易的所有权转移
- en: signatures and identifying user accounts uniquely. However, I have not spent
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: 签名和唯一识别用户帐户。 但我还没花
- en: any time discussing how to store all the transaction data that make up the
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: 随时讨论如何存储构成
- en: transaction history in a secure fashion. This is the point where the block-
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: 交易历史记录以安全的方式。 这是区块链的地方
- en: chain-data-structure enters the discussion. This step introduces the block-
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: 进入讨论。 这一步介绍了区块链数据结构。
- en: chain-data-structure and explains how it is constructed.
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构，并解释其构造方法。
- en: © Daniel Drescher 2017
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: ©丹尼尔·德雷施尔2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_14
  id: totrans-1145
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher，《区块链基础》，DOI 10.1007/978-1-4842-2604-9_14
- en: '112'
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: '112'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤14 | 存储交易数据***'
- en: The Metaphor
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: 隐喻
- en: Do you remember the last time you visited a library and used one of the tra-
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: 你还记得你上次去图书馆并使用了一个tra-吗？
- en: ditional card catalogs? Library catalogs are registers of all of the books owned
    by a library. Some traditional libraries still use card catalogs for managing
    their inventory. Each card in one of these catalogs represents one book, and the
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: 附加卡录？图书馆目录是图书馆拥有的所有书籍目录的注册表。一些传统图书馆仍然使用卡录来管理他们的库存。这些目录中的每张卡片代表一本书，而
- en: card displays the major information about that book, such as the name of the
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片显示关于那本书的主要信息，如书名
- en: author, the title of the book, the date of publication, and the location of
    the
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: 作者、书名、出版日期和位置等
- en: book within the library such as floor, room, shelf, and rack number. In order
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: 图书馆内的书籍，如楼层、房间、书架和架子号码。为了
- en: to identify books, the catalog cards often contain unique reference numbers
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: 以识别书籍，目录卡通常包含唯一的参考号
- en: that are also displayed on the books’ spines. Most libraries maintain more than
  id: totrans-1155
  prefs: []
  type: TYPE_NORMAL
  zh: 这也显示在书脊上。大多数图书馆都维护了超过
- en: one card catalog, which differ with respect to the criterion used to order the
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: 一个卡片目录，其根据用于排序的标准不同
- en: cards. For example, in an author catalog, the cards are sorted alphabetically
  id: totrans-1157
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片。例如，在作者目录中，卡片按字母顺序排序
- en: according to the names of authors, while in a title catalog the cards are sorted
    alphabetically according to the titles. One could also come up with an ordering
    catalog whose cards are sorted according the order in which the books
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: 按照作者的名称，而在标题目录中，卡片根据书名按字母顺序排列。还可以提出一种排序目录，其卡片根据书籍添加的顺序进行排序
- en: where added to the library. This step explains how the blockchain stores
  id: totrans-1159
  prefs: []
  type: TYPE_NORMAL
  zh: 在图书馆中添加。本步骤解释了区块链如何存储
- en: transaction data in a way that is similar to a library with an ordering catalog.
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据的方法与具有排序目录的图书馆类似。
- en: The Goal
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: The goal of the blockchain is to maintain the whole history of transaction data
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的目标是维护整个交易数据的历史
- en: in an ordered fashion.
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
  zh: 有序地展示。
- en: The Challenge
  id: totrans-1164
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战
- en: The challenge is to store all transaction data that have ever happened in a
    way
  id: totrans-1165
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战是以一种方式存储所有曾经发生的交易数据。
- en: that preserves the order in which the transactions happened and in a way that
  id: totrans-1166
  prefs: []
  type: TYPE_NORMAL
  zh: 保留了交易发生顺序，并以一种方式
- en: quickly and easily detects any changes made to the data. Detecting changes
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
  zh: 快速、容易地检测对数据的任何更改。检测更改
- en: quickly is important since it is the basis to prevent manipulation or forgery
    of the transaction history.
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: 非常重要，因为这是防止操纵或伪造交易历史的基础。
- en: The Idea
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法
- en: The idea is to create a library of transaction data and to maintain an ordering
  id: totrans-1170
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是创建一个交易数据的图书库，并维护一个排序
- en: catalog, which preserves the order in which transactions were added to the
  id: totrans-1171
  prefs: []
  type: TYPE_NORMAL
  zh: 目录，保留了交易添加到其中的顺序
- en: library. In order to detect any changes made either to the ordering catalog
  id: totrans-1172
  prefs: []
  type: TYPE_NORMAL
  zh: 图书馆。为了检测对排序目录或书籍做出的任何更改
- en: or to the individual transaction data, the data must be stored in a change-
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
  zh: 或个别交易数据，数据必须存储在一个改变-
- en: sensitive manner by using hash references.
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希引用进行敏感方式排序。
- en: '***Blockchain Basics***'
  id: totrans-1175
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '113'
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: '113'
- en: Transforming a Book into a Blockchain-Data-
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: 将一本书转变为区块链数据-
- en: Structure
  id: totrans-1178
  prefs: []
  type: TYPE_NORMAL
  zh: 结构
- en: This section explains how to turn a book into a small library with an ordering
    catalog, which turns out to be a simplified version of the blockchain-data-structure.
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何将一本书转变为一个带有排序目录的小型图书馆，实际上是区块链数据结构的简化版本。
- en: 'Starting Point: A Book'
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: 起点：一本书
- en: For many centuries, written information was preserved on unwieldy spools of
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: 多个世纪以来，书面信息保存在笨重的卷轴上
- en: parchment, which were called scrolls. Nowadays, we are used to having writ-
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 羊皮卷，被称为卷轴。今天，我们习惯于有着写作-
- en: 'ten information preserved in codices: hardback-bound bundles of numbered'
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: 保存在圣约的十条信息：编号的精装束
- en: pages, which we call books. Because books are so commonplace, we may take
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: 页，我们称之为书。由于书籍如此常见，我们可能认为
- en: 'their innovation for granted. Some of their important properties include:'
  id: totrans-1185
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的创新。他们的一些重要特性包括：
- en: '• Storing content: Books store content on their pages.'
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: • 存储内容：书籍在它们的页面上存储内容。
- en: '• Ordering: The sentences on the pages as well as the pages'
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
  zh: • 排序：页面上的句子以及页面
- en: within the book are kept in order.
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: 在书中保持顺序。
- en: '• Connecting pages: Pages are physically connected via the'
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: • 连接页：页面通过物理方式连接
- en: book spine and logically connected via their content and
  id: totrans-1190
  prefs: []
  type: TYPE_NORMAL
  zh: 书脊，并通过它们的内容和逻辑连接
- en: the page numbers.
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
  zh: 页码。
- en: As a result of these properties, we can browse through books forward and
  id: totrans-1192
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些特性，我们可以前进浏览书籍和
- en: backward by moving pages or we can jump directly to specific pages by utiliz-
  id: totrans-1193
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向后移动页面或直接跳转到特定页面利用
- en: ing the page numbers. Let’s see what we could achieve if we changed some of
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 维持页码。让我们看看如果我们改变一些
- en: these properties.
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: 这些属性。
- en: 'Transformation 1: Making Page Dependency Explicit'
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
  zh: 转化 1：使页面依赖明确
- en: Figure [14-1](index_split_001.html#115) exhibits a schematic illustration of
    two pages from a very simple book. Each page contains a top margin that presents
    the page number and a
  id: totrans-1197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [14-1](index_split_001.html#115)展示了一本非常简单书的两页的示意图。每页包含一个顶部边距，显示页码和
- en: content area that carries only one word.
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: 仅包含一个单词的内容区域。
- en: '![](index-115_1.png)'
  id: totrans-1199
  prefs: []
  type: TYPE_IMG
  zh: '![](index-115_1.png)'
- en: '114'
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: '114'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: '***第 14 步 | 存储交易数据***'
- en: '**Figure 14-1\.** A schematic illustration of book pages'
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 14-1\.** 书页的示意图'
- en: 'The page numbers serve an important purpose: You can find out whether'
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
  zh: 页码有重要作用：你可以找出是否
- en: someone removed a page from the book by verifying that the page numbers
  id: totrans-1204
  prefs: []
  type: TYPE_NORMAL
  zh: 有人移除了一页，通过验证页码
- en: continue without leaving out a number. Imagine you are currently reading page
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: 继续而不遗漏任何数字。想象一下你目前正在阅读第
- en: number 42 of our simplified book. What page number should the preceding
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: 简化书籍的第 42 页。前一页应该是什么页码？
- en: 'page have? This is very simple: The preceding page should have the number 41,'
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: 页码应该是多少？这很简单：前一页应该是 41 号，
- en: which equals 42 minus 1\. In order to verify that indeed no one has removed
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: 即等于 42 减 1\. 为了验证确实没有人移除
- en: the preceding page, we compare the number being displayed on the preceding
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一页上，我们比较显示在前
- en: page with the expected page number, which is the number of the current page
  id: totrans-1210
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的页码，即当前页的页码
- en: minus 1\. If both numbers are equal, we can conclude that the preceding page
  id: totrans-1211
  prefs: []
  type: TYPE_NORMAL
  zh: 减去 1\. 如果两个数字相等，我们可以得出结论，前一页
- en: has not been removed.
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: 没有被移除。
- en: Why do we know that the number of the preceding page should equal the
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何知道前一页的号码应该等于
- en: current page’s number minus 1? The answer is that we assume that all books
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: 当前页的页码减去 1？答案是我们假设所有书
- en: follow the convention of labeling the pages consecutively with natural numbers.
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循连续标记页面的约定。
- en: But what if that assumption is not true because the author or the publisher
    of
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果这个假设不成立，因为作者或出版商
- en: the book decided to use a different page numbering schema (e.g., by only using
  id: totrans-1217
  prefs: []
  type: TYPE_NORMAL
  zh: 书中决定使用不同的页码方案（例如，仅使用
- en: even numbers or multiples of three)? In this case, our approach of verifying
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至数字或三的倍数）？在这种情况下，我们验证的方式
- en: that the preceding page has not been removed fails. In order to make it easy
    to
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页未被移除，失败。为了让这变得容易
- en: verify that no page has been removed from the book, we could point out the
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: 验证书中没有一页被移除，我们可以指出
- en: connection of each page to its predecessor explicitly. Figure [14-2 sho](index_split_001.html#116)ws
    how this is done in our simple book. Each page not only exhibits its own number
    but
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
  zh: 每页与其前身的连接。图 [14-2 展示](index_split_001.html#116)了我们简单书中是如何实现的。每页不仅展示自己的页码，还
- en: also exhibits the number of its preceding page. This page numbering schema
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 也展示其前一页的号码。这种页码方案
- en: makes the dependency between any page and its preceding page explicit. The
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: 使得任何一页与其前一页的依赖关系变得明确。这本
- en: explicit referencing of the preceding page makes verifying that no page has
    been removed very easy since it does not rely on implicit assumptions anymore.
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: 明确引用前一页使得验证没有一页被移除变得非常容易，因为不再依赖隐含的假设。
- en: '![](index-116_1.png)'
  id: totrans-1225
  prefs: []
  type: TYPE_IMG
  zh: '![](index-116_1.png)'
- en: '![](index-116_2.png)'
  id: totrans-1226
  prefs: []
  type: TYPE_IMG
  zh: '![](index-116_2.png)'
- en: '***Blockchain Basics***'
  id: totrans-1227
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '115'
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: '115'
- en: '**Figure 14-2\.** Book pages with explicit reference to their preceding pages
    Transformation 2: Outsourcing the Content'
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 14-2\.** 带有明确引用其前身页的书页 转化 2：外包内容'
- en: The pages of our book contain the content and the information necessary to
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的书包含内容和信息
- en: 'maintain their ordering: the page numbers. We can make our book handier'
  id: totrans-1231
  prefs: []
  type: TYPE_NORMAL
  zh: 维持它们的顺序：页码。我们可以使我们的书更方便
- en: by outsourcing the content and let it solely focus on the task of maintain-
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: 通过外包内容并让其专注于维护任务的唯一目标
- en: ing the order. Figure [14-3](index_split_001.html#116) shows how the pages of
    our schematic book look after we outsourced the content. The pages no longer contain
    any content,
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
  zh: 页的顺序。图 [14-3](index_split_001.html#116)展示了我们的示意书中内容外包后的页面外观。页面不再包含任何内容，
- en: instead they contain reference numbers that point to the content, which can
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 反而它们包含指向内容的参考数字，这些内容可以
- en: be stored wherever we want (e.g., in a box, on a shelf, or somewhere else).
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: 可以被存放在任何我们想要的地方（例如，盒子里，书架上，或其他地方）。
- en: '**Figure 14-3\.** Book pages with reference values to the outsourced content'
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
  zh: '**图14-3.** 书页与外包内容的参考值'
- en: '![](index-117_1.png)'
  id: totrans-1237
  prefs: []
  type: TYPE_IMG
  zh: '![](index-117_1.png)'
- en: '116'
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
  zh: '116'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤14 | 存储交易数据***'
- en: 'The achievement of this step is the following: We turned our book into a small'
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤的成就是：我们将书籍变成了一本小册子
- en: library. The book that once stored content and page numbers together has
  id: totrans-1241
  prefs: []
  type: TYPE_NORMAL
  zh: 图书馆。曾经存储内容和页码的书籍已经
- en: been turned into a catalog, whose sole purpose is maintaining the order of the
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
  zh: 被转换成了一个目录，其唯一目的是维护页面的顺序
- en: content while the content is stored on separated pages that are identified by
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: 内容，而内容存储在单独的标识的页面上
- en: unique reference numbers.
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的参考数字。
- en: 'Transformation 3: Replacing Page Numbers'
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
  zh: 变换3：替换页码
- en: Our book that is now an ordering catalog maintains the order of its pages in
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的订货目录保持了页面的顺序
- en: 'two distinct ways: First, by the physical location of the pages within the
    book'
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 两种不同的方式：首先，通过书中页面的物理位置
- en: fixated in the book spine; second, by the page numbers and the explicit refer-
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
  zh: 固定在书脊上;其次，通过页码和明确的参考
- en: encing of the preceding page. Due to the fact that the physical construction
    of
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: 由于事实，书的实际构造
- en: the book preserves the order of the pages, we can experiment with a different
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: 保持书页的顺序，我们可以尝试不同
- en: page numbering schema. We can actually replace the natural numbers used to
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: 页码架构。我们实际上可以用自然数取代
- en: label the pages with reference numbers. Figure [14-4](index_split_001.html#117)
    shows the result of this transformation. For example, the page previously carrying
    the page number
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: 标记带有参考数字的页面。图[14-4](index_split_001.html#117)显示了此次转换的结果。例如，原先带有页码
- en: 42 is now identified with the page reference number 8118E736\. In a similar
  id: totrans-1253
  prefs: []
  type: TYPE_NORMAL
  zh: 42现在标识为页面参考数字8118E736。类似地
- en: fashion, the page that previously carried the page number 41 is now identified
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
  zh: ，先前标有页码 41 的页面现在标识为
- en: with the page reference number B779E800\. Notice that the references to the
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: 用页面参考数字B779E800。请注意，对
- en: preceding page have been updated as well. The page with the reference num-
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前的页面上也更新了。具有参考数字的页面-
- en: ber 8118E736 contains the correct reference number to its preceding page.
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: 者8118E736包含其前一页的正确参考编号
- en: '**Figure 14-4\.** Book pages using reference numbers as page numbers'
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: '**图14-4.** 使用参考数字作为页码的书页'
- en: '***Blockchain Basics***'
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '117'
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
  zh: '117'
- en: 'Transformation 4: Creating Reference Numbers'
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: 转换4：创建参考编号
- en: In the previous transformation, we replaced page numbers in our book with
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的转换中，我们用替代
- en: reference numbers. However, I have not discussed how they would be created.
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: 参考数字。但是，我尚未讨论它们将如何创建。
- en: The best way to create unique reference numbers is to use cryptographic
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: 创建唯一参考编号的最佳方法是使用密码
- en: hash values. Hence, we can identify pages in our catalog as well as the corre-
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值。因此，我们可以识别我们目录中的页面以及相应的
- en: sponding content pages with their cryptographic hash values, which are digital
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
  zh: 与其关联的前面的内容页面及其密码哈希值，这些是数字化的
- en: fingerprints of their content. For simplicity, both Figure [14-3 and Figur](index_split_001.html#116)e
    [14-4](index_split_001.html#117)
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: 它们的内容指纹。为了简单起见，图 [14-3 and Figur](index_split_001.html#116)e [14-4](index_split_001.html#117)两者都已被更新
- en: use shortened hash values. (You can verify the results by using the tool pro-
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: 使用缩短的哈希值。（您可以使用该工具验证结果
- en: '[vided at www.blockchain-basics.com/Hashing.html.) F](http://www.blockchain-basics.com/Hashing.html)or
    example, the content page that contains the word Hello is identified by the shortened
    hash'
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: '[vide于www.blockchain-basics.com/Hashing.html。] F](http://www.blockchain-basics.com/Hashing.html)
    例如，包含词Hello的内容页面由缩短的哈希标识'
- en: value of Hello that is 185F8DB3\. The reference value of our book pages are
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: Hello的值为185F8DB3。我们书页的参考值
- en: calculated based on their content, which is the content reference number and
  id: totrans-1271
  prefs: []
  type: TYPE_NORMAL
  zh: 根据它们的内容计算出的，即内容参考数字和
- en: the reference number of the preceding page. For example, the page reference
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页的参考数字。例如，页面参考
- en: number B779E800 is the hash value of 011C01C1 185F8DB3\.
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: 号B779E800是011C01C1 185F8DB3的哈希值。
- en: 'Transformation 5: Getting Rid of the Book Spine'
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: 转换5：摆脱书脊
- en: Our ordering catalog is an unusual book because each of its pages contains its
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的排序目录是一本不寻常的书，因为每一页都包含其
- en: own reference number, the reference number of the preceding page, and the
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
  zh: 自己的参考编号，前一页的参考编号以及
- en: reference number of the corresponding content page. However, our ordering
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
  zh: 相应内容页的参考编号。然而，我们的排序
- en: catalog is still a traditional book whose pages are fixated in the book spine.
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 目录仍然是一本传统的书，其页面固定在书脊上。
- en: What happens if we get rid of the book spine and turn our ordering book
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们摆脱书脊并将我们的排序书变成
- en: into a pile of loose pages? By doing so we destroy the physical connection of
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: 成为一堆散页？这样做会破坏
- en: the pages and as a result we lose the physical ordering of our pages as well.
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: 页，结果我们也失去了页面的物理排序。
- en: Fortunately, the ordering of the pages is not completely lost. Every page con-
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，页面的排序并没有完全丢失。每一页都包含
- en: tains the reference number of its preceding page. As a result, we can move
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: 包含其前一页的参考编号。因此，我们可以逐个移动
- en: from page to page backward by following the page reference numbers to the
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 从一页到下一页向后遵循页面参考编号
- en: preceding page. If we keep the last page of the ordering catalog separated,
    we
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页。如果我们将排序目录的最后一页分开，我们
- en: can always browse through all pages in reverse order.
  id: totrans-1286
  prefs: []
  type: TYPE_NORMAL
  zh: 可以始终反向浏览所有页面。
- en: 'Goal Achieved: Appreciating the Result'
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: 达到的目标：欣赏结果
- en: Let’s summarize what we have achieved in this example. We turned a classi-
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下这个例子中取得的成就。我们将一个经典的
- en: cal book into two physically unordered piles of loose pages that are linked
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: 的一页，它们通过独特的参考编号链接
- en: together with unique reference numbers. One pile of pages contains the
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: 在一起。一堆页面包含
- en: content, while the other pile of pages maintains the ordering. For simplicity,
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: 内容，而另一堆页面保留排序。为简单起见，
- en: we refer to the latter pile of pages as an ordering catalog. Each page of the
  id: totrans-1292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称后面一摞页面为排序目录。书中的每一页
- en: ordering catalog contains the reference number to its preceding page and
  id: totrans-1293
  prefs: []
  type: TYPE_NORMAL
  zh: 排序目录包含其前一个页面的参考编号以及
- en: the reference number of the corresponding content page. As a result, we
  id: totrans-1294
  prefs: []
  type: TYPE_NORMAL
  zh: 相应内容页的参考编号。因此，我们
- en: have separated ordering from storing information and the logical location
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: 已将排序与存储信息和逻辑位置分离
- en: (the order) from the physical location of the pages. Due to the fact that we
  id: totrans-1296
  prefs: []
  type: TYPE_NORMAL
  zh: （顺序）从页面的物理位置。由于我们
- en: used hash values as reference numbers, everyone can verify their correctness
  id: totrans-1297
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希值作为参考编号，每个人都可以验证其正确性
- en: '118'
  id: totrans-1298
  prefs: []
  type: TYPE_NORMAL
  zh: '118'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: '***步骤14 | 存储交易数据***'
- en: by simply recalculating them. Since the pages of the ordering catalog are no
  id: totrans-1300
  prefs: []
  type: TYPE_NORMAL
  zh: 通过简单地重新计算它们。由于排序目录的页不再
- en: longer fixated on a book spine, we can only browse through it backward in a
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: 不再固定在书脊上，我们只能向后浏览
- en: page-by-page fashion by following the page reference numbers that point to
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: 逐页地遵循指向的页面参考编号
- en: the preceding page. For easy reference, Table [14-1 summarizes the pr](index_split_001.html#119)operties
    of our book before and after the transformations.
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页。为了方便参考，表[14-1](index_split_001.html#119)总结了变换前后书本的属性。
- en: '**Table 14-1\.** Comparing the Book Before and After the Transformation'
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
  zh: '**表14-1。** 比较转换前后的书本'
- en: '**Property**'
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: '**属性**'
- en: '**Book**'
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: '**书**'
- en: '**Transformed Book**'
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: '**转换后的书**'
- en: Storing content
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: 存储内容
- en: On the pages themselves
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上
- en: On separate content pages
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: 在单独的内容页上
- en: Each content page is identified
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: 每个内容页都有一个标识符
- en: by a unique reference number
  id: totrans-1312
  prefs: []
  type: TYPE_NORMAL
  zh: 通过独特的参考编号
- en: Ordering content
  id: totrans-1313
  prefs: []
  type: TYPE_NORMAL
  zh: 排序内容
- en: 'Physically: Based on the location'
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: 物理上：基于位置
- en: 'Logically: Via an ordering catalog'
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑上：通过排序目录
- en: of the pages within the book
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: 书页
- en: that contains reference values
  id: totrans-1317
  prefs: []
  type: TYPE_NORMAL
  zh: 包含参考值
- en: 'Logically: Based on the page'
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑上：基于页面
- en: to the content pages
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: 到内容页
- en: numbers
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: 数字
- en: Connecting pages
  id: totrans-1321
  prefs: []
  type: TYPE_NORMAL
  zh: 连接页面
- en: 'Physically: By fixating pages in the'
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: 物理上：通过固定页面在
- en: 'Logically: Via reference numbers'
  id: totrans-1323
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑上：通过参考编号
- en: book spine
  id: totrans-1324
  prefs: []
  type: TYPE_NORMAL
  zh: 书脊
- en: 'Logically: Based on page numbers'
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑上：基于页面编号
- en: Browsing through
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览
- en: Forward
  id: totrans-1327
  prefs: []
  type: TYPE_NORMAL
  zh: 向前
- en: 'Backward only: By following'
  id: totrans-1328
  prefs: []
  type: TYPE_NORMAL
  zh: 仅向后：通过遵循
- en: the pages
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: 页面
- en: Backward
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: 回退
- en: the reference numbers to the
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: 参考编号
- en: preceding page
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页
- en: Jumping to pages directly by using
  id: totrans-1333
  prefs: []
  type: TYPE_NORMAL
  zh: 直接跳转到页面，使用
- en: page numbers
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: 页码
- en: The Blockchain-Data-Structure
  id: totrans-1335
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构
- en: What is the blockchain-data-structure? Actually, you already know the answer
  id: totrans-1336
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构是什么？实际上，你已经知道答案
- en: because the preceding example developed a simplified blockchain-data-struc-
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
  zh: 因为前面的示例开发了一个简化的区块链数据结构-
- en: ture. However, we used different terminology. This section finishes the analogy
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们使用了不同的术语。本节完成了类比
- en: by linking the elements of the transformed book with the terminology used in
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用转换后的书中使用的术语将转换的书的元素链接起来-
- en: the context of the blockchain.
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的背景。
- en: 'Our transformed book consists of:'
  id: totrans-1341
  prefs: []
  type: TYPE_NORMAL
  zh: 我们转换的书包括：
- en: • A mental unit consisting of a page of the ordering catalog
  id: totrans-1342
  prefs: []
  type: TYPE_NORMAL
  zh: • 由订购目录的一页组成的心理单位
- en: and its corresponding content page
  id: totrans-1343
  prefs: []
  type: TYPE_NORMAL
  zh: 和其对应的内容页面
- en: • A pile of loose pages called the ordering catalog
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
  zh: • 一个散页堆叠称为订单目录
- en: • A pile of loose pages that contain the content
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
  zh: • 包含内容的散页堆叠
- en: • Page reference numbers for identifying and linking pages
  id: totrans-1346
  prefs: []
  type: TYPE_NORMAL
  zh: • 用于识别和链接页面的页面参考号码
- en: of the ordering catalog
  id: totrans-1347
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录的
- en: • Content reference numbers for identifying and linking
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: • 用于识别和链接的内容参考号码
- en: content pages
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
  zh: 内容页面
- en: '***Blockchain Basics***'
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '119'
  id: totrans-1351
  prefs: []
  type: TYPE_NORMAL
  zh: '119'
- en: For easy reference Table [14-2 at the end of this section summarizes the r](index_split_001.html#120)esults
    by comparing the elements of our simplified book after transformation with
  id: totrans-1352
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于参考，表[14-2在本节末尾通过比较转换后的简化书籍的元素总结了结果](index_split_001.html#120)，与
- en: elements of the blockchain-data-structure.
  id: totrans-1353
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构的元素。
- en: '**Table 14-2\.** Comparing the Transformed Book with the Blockchain-Data-Structure
    **Transformed Book**'
  id: totrans-1354
  prefs: []
  type: TYPE_NORMAL
  zh: '**表14-2\.** 将转换后的书与区块链数据结构进行比较 **转换后的书**'
- en: '[**Blockchain-Data-Structure1**](index_split_001.html#120)'
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: '[**区块链数据结构1**](index_split_001.html#120)'
- en: A page in the ordering catalog
  id: totrans-1356
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录中的一页
- en: A block header
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 一个块头
- en: The whole ordering catalog
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
  zh: 整个订购目录
- en: The chain of block headers
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头链
- en: The reference number of a page in the
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录中页面的参考编号
- en: The cryptographic hash value of a block
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: 一个块的密码哈希值
- en: ordering catalog
  id: totrans-1362
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录
- en: header
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: 头部
- en: The reference number to the preceding page
  id: totrans-1364
  prefs: []
  type: TYPE_NORMAL
  zh: 前一页的参考编号
- en: The cryptographic hash value of the
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构的密码哈希值
- en: preceding block header
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: 前块头
- en: Content
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
  zh: 内容
- en: Transaction data
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据
- en: A content page
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: 一个内容页面
- en: A Merkle tree containing transaction data
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: 包含交易数据的默克尔树
- en: Reference to the content page
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 对内容页面的参考
- en: The root of the Merkle tree that contains
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: 包含的默克尔树根
- en: transaction data
  id: totrans-1373
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据
- en: The mental unit of a page of the ordering
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录页的心理单位
- en: One block of the blockchain-data-structure
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构的一个块
- en: catalog and its corresponding content page
  id: totrans-1376
  prefs: []
  type: TYPE_NORMAL
  zh: 目录及其对应的内容页面
- en: The whole ordering catalog and all content
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 整个订购目录和所有内容
- en: The blockchain-data-structure
  id: totrans-1378
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构
- en: pages together
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: 一起的页面
- en: The Mental Unit of a Page of the Ordering Catalog
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录的心理单位
- en: and Its Corresponding Content Page
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: 和其对应的内容页面
- en: The mental unit of a page of the ordering catalog and its corresponding con-
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
  zh: 订购目录页面的心理单位及其对应的内
- en: tent page relates to one block in the blockchain-data-structure. All these
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: 到内容页面的关系与区块链数据结构中的一个块相关。所有这些
- en: blocks together form the blockchain-data-structure. It is important to point
  id: totrans-1384
  prefs: []
  type: TYPE_NORMAL
  zh: 块一起形成区块链数据结构。指出重要的一点
- en: out that the unit of ordering page and corresponding content page is only a
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: 得出，订购页面和对应的内容页面的单位只是一个
- en: mental unit because the pages of the ordering catalog and the content pages
  id: totrans-1386
  prefs: []
  type: TYPE_NORMAL
  zh: 心理单位因为订购目录的页面和内容页面
- en: are physically distinct entities. The former refer to the latter via hash refer-
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: 是物理上不同的实体。前者通过哈希引用后者-
- en: ences, which as a result constitutes the mental unity.
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: 作为结果构成心理统一的参考，
- en: Ordering Catalog
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: 订单目录
- en: The ordering catalog of our transformed book equates to the chain of block
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: 我们转换的书的订购目录等价于块链的链
- en: headers in the blockchain-data-structure. Each page of the ordering catalog
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构中的块头。每个订购目录页
- en: equates to a single block header in the blockchain-data-structure. Since the
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: 等同于区块链数据结构中的一个单独的块头。由于
- en: '1Nakamoto, Satoshi. Bitcoin: A peer-to-peer electronic cash system. 2008\.
    [https://](https://bitcoin.org/bitcoin.pdf)'
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: '1Nakamoto, Satoshi. 比特币: 一个点对点的电子现金系统. 2008\. [https://](https://bitcoin.org/bitcoin.pdf)'
- en: '[bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf).'
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
  zh: '[bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)。'
- en: '120'
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: '120'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
  zh: '***第14步|存储交易数据***'
- en: block headers are connected with one another via references in a linear fash-
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: 块头通过一种线性方式相互连接-
- en: ion, like the links of a chain, they form a chain of block headers. Similar
    to
  id: totrans-1398
  prefs: []
  type: TYPE_NORMAL
  zh: 就像链条的链接一样，它们形成了一个区块头链。类似于
- en: our ordering catalog, the chain of block headers does not store transaction
  id: totrans-1399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的订购目录，区块头的链不存储交易
- en: data directly, but only stores hash references to the corresponding transac-
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: 直接存储交易的数据，而仅存储对应的哈希引用
- en: tion data. This is the point where the mental unit of the ordering catalog and
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: 了。这是订单目录和
- en: content becomes important.
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: 内容变得重要。
- en: Content Pages
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
  zh: 内容页
- en: The content of the transformed book is equivalent to the transaction data
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: 转换书的内容等同于交易数据
- en: being maintained by the blockchain. They are specific to our application area
  id: totrans-1405
  prefs: []
  type: TYPE_NORMAL
  zh: 由区块链维护。它们特定于我们的应用领域
- en: that is managing ownership. There are no content pages in real-world block-
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: 正在管理所有权。真实世界区块中没有内容页面-
- en: chain applications; I made up the term content pages for didactical reasons.
  id: totrans-1407
  prefs: []
  type: TYPE_NORMAL
  zh: 链应用；我为教学目的创造了术语内容页。
- en: Real-world blockchain applications store the content data (e.g., transaction
  id: totrans-1408
  prefs: []
  type: TYPE_NORMAL
  zh: 真实世界的区块链应用存储内容数据（例如，交易
- en: data) directly in a database, and we refer to them as Merkle trees, whose roots
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
  zh: 数据）直接存储在数据库中，并且我们将它们称为默克尔树，其根
- en: are stored in block headers.
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在区块头中。
- en: Catalog Page Reference Numbers
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 目录页参考编号
- en: The page reference numbers of our transformed book used to identify pages
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
  zh: 我们变换的书中用于识别页面的页面引用编号
- en: of the ordering catalog equate to cryptographic hash values of individual block
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
  zh: 订单目录的重要单位等同于个别区块的加密哈希值
- en: headers in the blockchain-data-structure. They are called block hash or pre-
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构中的区块头。它们称为块哈希或前
- en: vious block’s hash, respectively. They are used to identify each block header
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
  zh: 先区块的哈希，分别。它们用于识别每个区块头
- en: uniquely and to refer to the previous block header. The actual referencing
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 独特并且引用前一个区块头。实际的引用
- en: from one block header to its predecessor is done by hash reference.
  id: totrans-1417
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个区块头到其前任的引用是通过哈希引用完成的。
- en: Content Reference Numbers
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 内容参考编号
- en: The content reference numbers in our transformed book used to identify
  id: totrans-1419
  prefs: []
  type: TYPE_NORMAL
  zh: 我们变换的书中用于识别
- en: content pages equate to hash references in the chain of block headers that
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: 内容页相当于区块头链中的哈希引用
- en: point to the associated transaction data. To be more specific, the content ref-
  id: totrans-1421
  prefs: []
  type: TYPE_NORMAL
  zh: 指向相关的交易数据。更具体地说，内容引用
- en: erence number that is stored in a block header is the root of a Merkle tree
  id: totrans-1422
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在区块头中的参考编号是默克尔树的根
- en: of the transaction data being stored in a database. This is the point where
    the
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在数据库中的交易数据。这是关键
- en: mental unit of the ordering catalog (block header) and its corresponding con-
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: 订单目录（区块头）及其对应的内
- en: tent (Merkle tree with transaction data) are constituted.
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
  zh: （带交易数据的默克尔树）都是由构成的。
- en: Storing Transactions in the Blockchain-Data-
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链数据中存储交易-
- en: Structure
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: 结构
- en: Figure [14-5](index_split_001.html#122) summarizes what you have learned by
    schematically depicting a blockchain-data-structure that stores four transactions.
    The illustration given
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [14-5](index_split_001.html#122) 通过图示显示了一个存储四笔交易的区块链数据结构所学到的内容。给出的图示
- en: in Figure [14-5 sho](index_split_001.html#122)ws a simplified blockchain-data-structure
    that consists of
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 [14-5 显](index_split_001.html#122)示了一个简化的区块链数据结构，由
- en: '![](index-122_1.png)'
  id: totrans-1430
  prefs: []
  type: TYPE_IMG
  zh: '![](index-122_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '121'
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: '121'
- en: two blocks labeled BLOCK 1 and BLOCK 2\. In order to emphasize the men-
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 两个标记为BLOCK 1和BLOCK 2的块。为了强调
- en: tal nature of the blocks, they are drawn with dashed lines. Both blocks con-
  id: totrans-1434
  prefs: []
  type: TYPE_NORMAL
  zh: 区块的天性，它们用虚线绘制。两个区块均
- en: tain block headers labeled Block Header 1 and Block Header 2, respectively.
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: 保持区块头标为区块头1和区块头2。
- en: BLOCK 1 is the very first block in this data structure, hence, it does not have
  id: totrans-1436
  prefs: []
  type: TYPE_NORMAL
  zh: BLOCK 1是此数据结构中的第一个区块，因此它没有
- en: a preceding block, and, consequently, Block Header 1 does not contain any ref-
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: 一个前任，并且因此，区块头1不包含任何
- en: erence to a preceding block header. Since BLOCK 2 has a predecessor, Block
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: 对之前区块头的引用。由于BLOCK 2有一个前任，区块
- en: Header 2 maintains a hash reference to its preceding block header labeled as
  id: totrans-1439
  prefs: []
  type: TYPE_NORMAL
  zh: 标题2保持对其前一个块标题的哈希引用，标记为
- en: B1\. The depicted blockchain-data-structure maintains hash reference to two
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: B1\. 所示的区块链数据结构维护对两个的哈希引用
- en: distinct Merkle trees whose roots are labeled R12 and R34, respectively. The
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的默克尔树，它们的根分别标记为R12和R34。这
- en: labels of the Merkle roots already give us an indication of the transaction
    data they contain (e.g., the Merkle tree with the root R12 contains the first
    two
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: Merkle 根的标签已经给我们一个提示，表明它们包含的交易数据（例如，根为 R12 的 Merkle 树包含前两个
- en: transactions labeled as Transaction 1 and Transaction 2 and their correspond-
  id: totrans-1443
  prefs: []
  type: TYPE_NORMAL
  zh: 交易标记为 Transaction 1 和 Transaction 2 及其对应值 -
- en: ing hash references R1 and R2 that point to them).
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: 的哈希引用 R1 和 R2）。
- en: If you joined a distributed peer-to-peer system that maintained a blockchain-data-structure,
    as shown in Figure [14-5](index_split_001.html#122), you would receive all transaction
    data, all hash reference values, and all block headers. Based on these data, your
    local computer would create the blockchain-data-structure including the hash references
    that
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您加入了一个维护区块链数据结构的分布式对等系统，如[图 14-5](index_split_001.html#122)，您将接收所有交易数据，所有哈希引用值以及所有区块头。根据这些数据，您的本地计算机将创建包括哈希引用的区块链数据结构
- en: point to data stored on your local computer. Equipped with these data and the
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: 指向存储在您的本地计算机上的数据。凭借这些数据和
- en: reference to the most current block header, you could browse through the
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
  zh: 对最新区块头的引用，你可以浏览
- en: history of all transaction data that were ever submitted to the system since
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: 自从系统建立以来，曾经提交到系统的所有交易数据的历史。
- en: its creation in reverse order, which in our case is just four transactions.
    Note that the reference to the most currently added block header is called the
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
  zh: 它的创建是相反的顺序，也就是我们这里只有四笔交易。注意，对最新添加的区块头的引用称为
- en: '**head** of the blockchain-data-structure because it is the place where the
    next block will be added. Sometimes both the most currently added block header'
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: '**区块链数据结构的头部**，因为它是下一个区块将添加的地方。有时，最近添加的区块头'
- en: and the reference that points to it is called the head of the blockchain-data-
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
  zh: 以及指向它的引用称为区块链头部的
- en: structure. In Figure 14-5 the reference labeled B2 is the head of the block-
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: 结构。在图 14-5 中，标记为 B2 的引用是区块链的头部，
- en: 'chain-data-structure. It is important not to mix the terms “head” and “header”:'
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
  zh: 链数据结构。重要的是不要混淆术语“头部”和“头部”：
- en: The blockchain-data-structure consists of many blocks that each has its own
  id: totrans-1454
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构由许多每个都有其自身的区块
- en: header, but the whole blockchain-data-structure has only one head.
  id: totrans-1455
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头，但整个区块链数据结构只有一个头部。
- en: '**Figure 14-5\.** A simplified blockchain-data-structure containing four transactions'
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 14-5\.** 包含四笔交易的简化区块链数据结构'
- en: '122'
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: '122'
- en: '***Step 14 | Storing Transaction Data***'
  id: totrans-1458
  prefs: []
  type: TYPE_NORMAL
  zh: '***第 14 步 | 存储交易数据***'
- en: ■ **Caution** The blockchain-data-structure discussed in this step and illustrated
    in Figure [14-5](index_split_001.html#122)
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: ■ **注意** 在本步骤中讨论的区块链数据结构，并在[图 14-5](index_split_001.html#122)中
- en: has been simplified for didactical reasons. Many details regarding the information
    stored in the block headers have been left out deliberately. Some of them will
    be covered in the next steps as you complete your understanding of the blockchain.
  id: totrans-1460
  prefs: []
  type: TYPE_NORMAL
  zh: 由于教学目的，本书简化了该区块链数据结构。故意略去了一些关于区块头中存储的信息的细节。某些信息将在接下来的步骤中涉及，随着您对区块链的理解
- en: Outlook
  id: totrans-1461
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step introduced the blockchain-data-structure and explained its con-
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤介绍了区块链数据结构，并解释了它的构造方式。
- en: struction. The way in which the blockchain-data-structure makes extensive
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: 结构。区块链数据结构的使用大大
- en: use of hash references makes it a very change-sensitive data store. The next
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希引用使其成为非常敏感的数据存储。下一个
- en: step explains that property in more detail, as it is the key to understanding
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤更详细地解释了该属性，因为它是理解
- en: how the blockchain is made secure.
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链如何确保安全。
- en: Summary
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: 概要
- en: • The blockchain-data-structure is a specific kind of data
  id: totrans-1468
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构是一种特定类型的数据
- en: structure that is made up of ordered units called blocks.
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: 由有序单元组成的结构。
- en: • Each block of the blockchain-data-structure consists of a
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构的每个区块包括一个
- en: block header and a Merkle tree that contains transaction
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头和包含交易的 Merkle 树
- en: data.
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: 数据。
- en: • The blockchain-data-structure consists of two major data
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构包括两个主要数据
- en: 'structures: an ordered chain of block headers and Merkle'
  id: totrans-1474
  prefs: []
  type: TYPE_NORMAL
  zh: 结构：一个有序的区块头链和 Merkle
- en: trees.
  id: totrans-1475
  prefs: []
  type: TYPE_NORMAL
  zh: 树。
- en: • One can imagine the ordered chain of block headers as being
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: • 人们可以想象有序的区块头链就像是
- en: the digital equivalent to an old-fashioned library card catalog,
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
  zh: 是老式图书馆卡目录的数字化等价物，
- en: where the individual catalog cards are sorted according to
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: 个人目录卡根据排序
- en: the order in which they were added to the catalog.
  id: totrans-1479
  prefs: []
  type: TYPE_NORMAL
  zh: 他们被添加到目录中的顺序。
- en: • Having each block header referencing its preced-
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: • 每个区块头引用其前面的区块头
- en: ing block header preserves the order of the individual
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: 保留个别的顺序
- en: block headers and blocks, respectively, that make up the
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头和区块，分别组成
- en: blockchain-data-structure.
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构。
- en: • Each block header in the blockchain-data-structure is
  id: totrans-1484
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构中的每个区块头部
- en: identified by its cryptographic hash value and contains a
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: 通过其加密哈希值标识，包含一个
- en: hash reference to its preceding block header and a hash
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
  zh: 指向其前一个区块头的哈希引用和一个哈希
- en: reference to the application-specific data whose order it
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: 指向其产生的应用特定数据的顺序
- en: maintains.
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
  zh: 维护。
- en: • The hash reference to the application-specific data is
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: • 对应用特定数据的哈希引用是
- en: typically the root of a Merkle tree that maintains hash
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: 通常是维护哈希的默克尔树根
- en: references to the application-specific data.
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: 对应用特定数据的引用。
- en: '**S T E P**'
  id: totrans-1492
  prefs: []
  type: TYPE_NORMAL
  zh: '**S T E P**'
- en: '15'
  id: totrans-1493
  prefs: []
  type: TYPE_NORMAL
  zh: '15'
- en: Using the Data
  id: totrans-1494
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数据
- en: Store
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: 存储
- en: Chaining blocks of data
  id: totrans-1496
  prefs: []
  type: TYPE_NORMAL
  zh: 链接数据块
- en: 'Step [14 intr](http://dx.doi.org/10.1007/978-1-4842-2604-9_14)oduced the blockchain-data-structure.
    It turns out that the blockchain-data-structure consists of two major components:
    an ordered chain of'
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 [14 intr](http://dx.doi.org/10.1007/978-1-4842-2604-9_14)内：介绍了区块链数据结构。结果表明，区块链数据结构由两个主要组成部分组成：有序链和
- en: block headers and Merkle trees containing transaction data. This data structure
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: 包含交易数据的区块头部和默克尔树。这种数据结构
- en: was invented with the goal of storing transaction data in a secure fashion.
    But
  id: totrans-1499
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是以安全的方式存储交易数据。但
- en: what does storing data in a secure fashion mean in this context? Answering
  id: totrans-1500
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，以安全的方式存储数据意味着什么？回答
- en: this question is the purpose of this step. This step points out the consequences
    of changing data in the blockchain and it illustrates how the blockchain-data-structure
    detects changes. Furthermore, this step highlights the power of hash
  id: totrans-1501
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题就是这一步的目的。这一步指出了更改区块链中的数据的后果，并且说明了区块链数据结构如何检测更改。此外，这一步突出了哈希的威力
- en: references when storing data in a change-sensitive manner. Finally, this step
    explains how to add new blocks to the blockchain-data-structure in a correct way.
  id: totrans-1502
  prefs: []
  type: TYPE_NORMAL
  zh: 存储数据时的引用。最后，这一步解释了如何以正确的方式将新区块添加到区块链数据结构中。
- en: The Metaphor
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: 比喻
- en: Knitting is the craft of turning yarn into a textile or fabric by creating a
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: 编织是通过纱线创建纺织品或织物的工艺，方法是
- en: sequence of multiple interlocking loops of yarn, the so-called stitches. When
  id: totrans-1505
  prefs: []
  type: TYPE_NORMAL
  zh: 多个相互锁定的纱线环的序列，即所谓的针脚。当
- en: produced manually, the sizes of knitting stitches vary significantly. Hence,
    during the process of knitting, it is sometimes necessary to correct individual
    stitches.
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: 手工生产，编织针织针大小差别很大。因此，在编织过程中，有时需要纠正个别针脚。
- en: In order to correct a knitting stitch located somewhere in the fabric, one has
  id: totrans-1507
  prefs: []
  type: TYPE_NORMAL
  zh: 为了纠正位于织物某处的编织针脚，必须
- en: © Daniel Drescher 2017
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
  zh: © Daniel Drescher 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_15
  id: totrans-1509
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher，*区块链基础*，DOI 10.1007/978-1-4842-2604-9_15
- en: '124'
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: '124'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1511
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步 | 使用数据存储***'
- en: to rip out all of its succeeding stitches in reverse order starting from the
    end of the row until one eventually arrives at the stitch to be corrected. After
    the stitch under consideration has been corrected, one has to re-create all its
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: 从织物的最后一行开始逆序拆下所有后续的针脚，直到最终到达要纠正的针脚。在考虑的针脚被纠正后，必须重新创建所有的
- en: succeeding stitches. Since this procedure is quite elaborate, it is important
    to ensure that all stitches fulfill the quality requirements when they are created
  id: totrans-1513
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的针脚。由于这个过程相当复杂，所以在创建时，必须确保所有针脚满足质量要求。
- en: the first time. This step explains that using the blockchain-data-structure
    is
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次。这一步解释了使用区块链数据结构
- en: 'very similar to knitting: Adding a new block at the end of the blockchain-data-'
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
  zh: 与编织非常相似：在区块链数据的末端添加一个新区块
- en: structure is easy, while changing data located somewhere in the chain is quite
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: 结构很容易，而在链条某处更改数据相当
- en: elaborate. With this metaphor in mind, you should easily be able to understand
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂。有了这个比喻，你应该很容易理解
- en: how the blockchain-data-structure detects changes, on the one hand, and how
  id: totrans-1518
  prefs: []
  type: TYPE_NORMAL
  zh: 是区块链数据结构如何检测更改的一方面，以及如何
- en: data are added and changed correctly, on the other hand.
  id: totrans-1519
  prefs: []
  type: TYPE_NORMAL
  zh: 数据被正确添加和更改，另一方面。
- en: Adding New Transactions
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: 添加新的交易
- en: In order to understand how to add new transactions to an existing block-
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解如何向现有块添加新交易-
- en: chain-data-structure in an orderly way, let’s consider a simple example.
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 以有序的方式理解链数据结构，让我们考虑一个简单的例子。
- en: Figure [15-1](index_split_001.html#126) illustrates the initial situation of
    a blockchain-data-structure that consist of one block only. The existing blockchain-data-structure
    only maintains two transactions. Transaction 3 and Transaction 4 at the bottom
    of
  id: totrans-1523
  prefs: []
  type: TYPE_NORMAL
  zh: '[图15-1](index_split_001.html#126)说明了仅包含一个块的区块链数据结构的初始情况。现有的区块链数据结构仅维护两笔交易。[图15-3\.](index_split_001.html#127)说明了如果我们改变交易2会发生什么。这笔交易是默克尔树的一部分，由哈希引用组成。通过改变一些'
- en: 'Figure [15-1](index_split_001.html#126) are not yet added to the blockchain-data-structure.
    The steps to be performed in order to add new transaction data are:'
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: '[图15-1](index_split_001.html#126)还未添加到区块链数据结构中。为了添加新交易数据，必须执行以下步骤：'
- en: 1\. Create a new Merkle tree that contains all new transac-
  id: totrans-1525
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 创建一个包含所有新交易的新默克尔树
- en: tion data to be added, as shown in Figure [15-2\.](index_split_001.html#126)
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加的交易数据，如[图15-2\.](index_split_001.html#126)所示。
- en: 2\. Create a new block header (Block Header 2) that con-
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 创建一个新的块头（块头2），其中包含
- en: tains both the hash reference (B1) that points to the
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: 同时包含指向其前一块头的哈希引用
- en: header of its preceeding block (Block Header 1) and the
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
  zh: 其前序块的头（块头1）和
- en: root of the Merkle tree that contains the new transaction
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: 默克尔树的根
- en: data (R34), as shown in Figure [15-3\.](index_split_001.html#127)
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
  zh: 数据（R34），如[图15-3\.](index_split_001.html#127)所示。
- en: 3\. Create a new hash reference (B2) to the new block
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 创建一个新的哈希引用（B2）指向新块
- en: header, as shown in Figure [15-4,](index_split_001.html#127) and declare it
    the the new **head** of the updated blockchain-data-structure.
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: 头，如[图15-4,](index_split_001.html#127)所示，并将其声明为更新的整个链式数据结构的新**head**。
- en: Remember that the reference that points to the most
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，指向大部分的引用
- en: currently added piece of data in a chain is also called the
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: 目前添加的数据片在链中也被称为
- en: '**head** of the whole chain (see Step [11](http://dx.doi.org/10.1007/978-1-4842-2604-9_11)).'
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: 整个链的**head**（见[11](http://dx.doi.org/10.1007/978-1-4842-2604-9_11)步）。
- en: '![](index-126_1.png)'
  id: totrans-1537
  prefs: []
  type: TYPE_IMG
  zh: '![](index-126_1.png)'
- en: '![](index-126_2.png)'
  id: totrans-1538
  prefs: []
  type: TYPE_IMG
  zh: '![](index-126_2.png)'
- en: '***Blockchain Basics***'
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '125'
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: '125'
- en: '**Figure 15-1\.** Initial situation: Two new transactions (Transaction 3 and
    Transaction 4) should be added to the existing blockchain-data-structure'
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-1\.** 初始情况：两笔新交易（交易3和交易4）应该被添加到现有的区块链数据结构中'
- en: '**Figure 15-2\.** [Step 1](http://dx.doi.org/10.1007/978-1-4842-2604-9_1):
    Creating a new Merkle tree that contains the new transactions'
  id: totrans-1542
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-2\.** [步骤1](http://dx.doi.org/10.1007/978-1-4842-2604-9_1)：创建一个包含新交易的新默克尔树'
- en: '![](index-127_1.png)'
  id: totrans-1543
  prefs: []
  type: TYPE_IMG
  zh: '![](index-127_1.png)'
- en: '![](index-127_2.png)'
  id: totrans-1544
  prefs: []
  type: TYPE_IMG
  zh: '![](index-127_2.png)'
- en: '126'
  id: totrans-1545
  prefs: []
  type: TYPE_NORMAL
  zh: '126'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步 | 使用数据存储***'
- en: '**Figure 15-3\.** [Step 2](http://dx.doi.org/10.1007/978-1-4842-2604-9_2):
    Create a new block header that contains both the hash reference to its preceding
    header and the root of the Merkle tree that contains the new transaction data
    **Figure 15-4\.** [Step 3](http://dx.doi.org/10.1007/978-1-4842-2604-9_3): Create
    a new hash reference that points to the new block header, which is now the new
    head of the whole updated blockchain-data-structure'
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-3\.** [步骤2](http://dx.doi.org/10.1007/978-1-4842-2604-9_2)：创建一个包含新交易数据的新块头，其中包含指向其前一块头的哈希引用和新交易数据的默克尔树根
    **图15-4\.** [步骤3](http://dx.doi.org/10.1007/978-1-4842-2604-9_3)：创建一个指向新块头的新哈希引用，现在它是整个更新的区块链数据结构的新**head**'
- en: '![](index-128_1.png)'
  id: totrans-1548
  prefs: []
  type: TYPE_IMG
  zh: '![](index-128_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '127'
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: '127'
- en: Detecting Changes
  id: totrans-1551
  prefs: []
  type: TYPE_NORMAL
  zh: 检测变化
- en: The step depicted in Figure [15-4 ser](index_split_001.html#127)ves as the initial
    situation for studying the impact of changing data that are already part of the
    blockchain-data-structure.
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: '[图15-4 ser](index_split_001.html#127)表现的步骤作为研究已经是区块链数据结构一部分的数据更改的初始情况。'
- en: 'I will discuss the following cases:'
  id: totrans-1553
  prefs: []
  type: TYPE_NORMAL
  zh: 我会讨论以下情况：
- en: • Changing the content of transaction data
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: • 改变交易数据的内容
- en: • Changing a reference in the Merkle tree
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: • 改变默克尔树中的引用
- en: • Replacing a transaction
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: • 替换交易
- en: • Changing the Merkle root
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: • 改变默克尔根
- en: • Changing a block header reference
  id: totrans-1558
  prefs: []
  type: TYPE_NORMAL
  zh: • 改变块头引用
- en: Changing the Content of Transaction Data
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: 改变交易数据内容
- en: Figure [15-5](index_split_001.html#128) illustrates what happens if we change
    Transaction 2\. This transaction is part of a Merkle tree, which consists of hash
    references. By changing some
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: '[图15-5](index_split_001.html#128)说明了如果改变交易2会发生什么。这笔交易是默克尔树的一部分，由哈希引用组成。通过改变一部分'
- en: properties of the Transaction 2 (e.g., the amount of goods being transferred
  id: totrans-1561
  prefs: []
  type: TYPE_NORMAL
  zh: 财物数量）
- en: or the account that receives ownership), one also changes its fingerprint or
    its cryptographic hash value, respectively. As a result, the hash reference R2
    that
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
  zh: 或接收所有权的帐户）时，也将更改其指纹或加密哈希值。因此，哈希参考R2
- en: pointed to the original transaction data is broken. It detects that the transaction
    data it originally referred were changed in the meantime and hence violates the
  id: totrans-1563
  prefs: []
  type: TYPE_NORMAL
  zh: 指向的原始交易数据已被破坏。它检测到原始参考的交易数据在此期间已更改，因此违反了
- en: rules of staying unchanged. As a result, the whole blockchain-data-structure
    is
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
  zh: 保持不变的规则。因此，整个区块链数据结构是
- en: invalid.
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
  zh: 无效。
- en: '**Figure 15-5\.** Changing the details of a transaction invalidates the hash
    reference that pointed to the original data, which invalidates the whole data
    structure'
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-5。**更改交易的细节使指向原始数据的哈希参考无效，从而使整个数据结构无效'
- en: '![](index-129_1.png)'
  id: totrans-1567
  prefs: []
  type: TYPE_IMG
  zh: '![](index-129_1.png)'
- en: '128'
  id: totrans-1568
  prefs: []
  type: TYPE_NORMAL
  zh: '128'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1569
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步|使用数据存储***'
- en: Changing a Reference in the Merkle Tree
  id: totrans-1570
  prefs: []
  type: TYPE_NORMAL
  zh: 更改默克尔树中的参考
- en: Figure [15-6](index_split_001.html#129) illustrates what happens if one not
    only changes details of a transaction but also changes the hash reference that
    points to the updated trans-
  id: totrans-1571
  prefs: []
  type: TYPE_NORMAL
  zh: 图[15-6](index_split_001.html#129)说明了如果不仅更改交易的细节还更改指向更新的交易的哈希参考时会发生什么-
- en: action. The updated hash reference (R2) is valid as it correctly points to the
  id: totrans-1572
  prefs: []
  type: TYPE_NORMAL
  zh: 操作。更新的哈希参考(R2)有效，因为它正确指向
- en: new transaction data. However, the updated hash reference is part of a Merkle
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: 新交易数据。但是，更新的哈希参考是默克尔树的一部分
- en: tree whose root is a hash reference as well. The root of the Merkle tree (R12)
  id: totrans-1574
  prefs: []
  type: TYPE_NORMAL
  zh: 其根为哈希参考的树。默克尔树(R12)的根
- en: points to a piece of data that contains the hash references R1 and R2\. The
  id: totrans-1575
  prefs: []
  type: TYPE_NORMAL
  zh: 指向包含哈希参考R1和R2的数据片段。这
- en: latter one has been changed in order to be consistent with the manipulated
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
  zh: 后者已更改以与被操纵的内容保持一致
- en: version of Transaction 2\. Hence, the cryptographic hash value of the piece
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
  zh: 交易2的版本。因此，数据片段的加密哈希值
- en: of data containing the updated version of R2 changes as well, which in turn
  id: totrans-1578
  prefs: []
  type: TYPE_NORMAL
  zh: 包含更新版本的R2的数据被同时更改，进而
- en: invalidates the root of the Merkle tree R12\.
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
  zh: 使默克尔树根R12失效。
- en: '**Figure 15-6\.** Changing a transaction and its hash reference in the Merkle
    tree invalidates the root of the Merkle tree, which invalidates the whole data
    structure'
  id: totrans-1580
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-6。**更改默克尔树中的交易和其哈希参考将使默克尔树的根无效，从而使整个数据结构无效'
- en: Replacing a Transaction
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: 替换交易
- en: Figure [15-7](index_split_001.html#130) considers the case of replacing a whole
    transaction instead of only manipulating details of an existing transaction and
    updating its hash reference.
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
  zh: 图[15-7](index_split_001.html#130)考虑了替换整个交易而不仅是操纵现有交易的细节并更新其哈希参考的情况。
- en: '![](index-130_1.png)'
  id: totrans-1583
  prefs: []
  type: TYPE_IMG
  zh: '![](index-130_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-1584
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '129'
  id: totrans-1585
  prefs: []
  type: TYPE_NORMAL
  zh: '129'
- en: '**Figure 15-7\.** Replacing a transaction and its hash reference in the Merkle
    tree invalidates the root of the Merkle tree, which invalidates the whole data
    structure'
  id: totrans-1586
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-7。**更换默克尔树中的交易和其哈希参考将使默克尔树的根无效，从而使整个数据结构无效'
- en: When you compare Figure [15-6](index_split_001.html#129) with Figure [15-7](index_split_001.html#130),
    you can only find minor difference regarding the name of the transaction and its
    hash reference.
  id: totrans-1587
  prefs: []
  type: TYPE_NORMAL
  zh: 当您比较图[15-6](index_split_001.html#129)和图[15-7](index_split_001.html#130)时，您只会发现关于交易名称及其哈希参考名称的微小差异。
- en: Concerning the consequences, both illustrations are identical. In both cases
  id: totrans-1588
  prefs: []
  type: TYPE_NORMAL
  zh: 关于后果，两个示例是相同的。在这两种情况下
- en: the root of the Merkle tree R12 will be invalid due to changes that happened
  id: totrans-1589
  prefs: []
  type: TYPE_NORMAL
  zh: 默克尔树根R12将由于发生的更改而无效
- en: within the Merkle tree. As a result, we find that changing a transaction or
  id: totrans-1590
  prefs: []
  type: TYPE_NORMAL
  zh: 在默克尔树内。因此，我们发现更改交易或
- en: replacing a transaction will have the same impact on the blockchain-data-
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: 替换交易将对区块链数据
- en: structure. The manipulation will be detected in both cases and will invalidate
  id: totrans-1592
  prefs: []
  type: TYPE_NORMAL
  zh: 结构。在两种情况下都将被检测到并将使之无效
- en: the whole data structure.
  id: totrans-1593
  prefs: []
  type: TYPE_NORMAL
  zh: 整个数据结构。
- en: ■ **Note** Changing or replacing data in the blockchain-data-structure will
    have identical results as both have identical effects on hash references.
  id: totrans-1594
  prefs: []
  type: TYPE_NORMAL
  zh: ■ **注意** 在区块链数据结构中更改或替换数据将产生相同的结果，因为两者对哈希参考具有相同的影响。
- en: Changing the Merkle Root
  id: totrans-1595
  prefs: []
  type: TYPE_NORMAL
  zh: 更改默克尔树根
- en: Figure [15-8 illustrates](index_split_001.html#131) what happens if a whole
    Merkle tree, including its root, is changed.
  id: totrans-1596
  prefs: []
  type: TYPE_NORMAL
  zh: 图[15-8说明](index_split_001.html#131)了如果整个默克尔树，包括其根节点，被改变会发生什么。
- en: '![](index-131_1.png)'
  id: totrans-1597
  prefs: []
  type: TYPE_IMG
  zh: '![](index-131_1.png)'
- en: '130'
  id: totrans-1598
  prefs: []
  type: TYPE_NORMAL
  zh: '130'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1599
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步 | 使用数据存储***'
- en: '**Figure 15-8\.** Changing a Merkle tree invalidates the hash reference that
    points to the block header that contains it, which in turn invalidates the whole
    data structure'
  id: totrans-1600
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-8\.** 更改默克尔树会使指向包含它的区块头的哈希引用无效，从而使整个数据结构无效'
- en: The root of the manipulated Merkle tree (R12) is part of a block header
  id: totrans-1601
  prefs: []
  type: TYPE_NORMAL
  zh: 操纵的默克尔树的根（R12）是一个区块头
- en: (Block Header 1). The change of the Merkle root changes the cryptographic
  id: totrans-1602
  prefs: []
  type: TYPE_NORMAL
  zh: （区块头1）。更改默克尔根会改变密码学的
- en: hash value of Block Header 1, which in turn causes the hash reference that
  id: totrans-1603
  prefs: []
  type: TYPE_NORMAL
  zh: 区块头1的哈希值，这反过来引起了指向它的哈希引用的无效。
- en: points to it (B1) to be invalid. The hash reference B1 that maintains the con-
  id: totrans-1604
  prefs: []
  type: TYPE_NORMAL
  zh: 它指向它（B1）变为无效。维持连接的哈希引用B1使得连-
- en: nection or serves as a link from Block Header 2 to Block Header 1 becomes
  id: totrans-1605
  prefs: []
  type: TYPE_NORMAL
  zh: 或者作为从区块头2指向区块头1的链接变为
- en: invalid as it detects the change. As a result, the whole blockchain-data-struc-
  id: totrans-1606
  prefs: []
  type: TYPE_NORMAL
  zh: 无效，因为它检测到了变化。因此，整个区块链数据结构
- en: ture becomes invalid.
  id: totrans-1607
  prefs: []
  type: TYPE_NORMAL
  zh: 结构变得无效。
- en: Changing a Block Header Reference
  id: totrans-1608
  prefs: []
  type: TYPE_NORMAL
  zh: 更改区块头引用
- en: Figure [15-9](index_split_001.html#132) illustrates what happens if not only
    a whole Merkle tree but also the hash reference to the manipulated block header
    is changed.
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
  zh: 图[15-9说明](index_split_001.html#132)了如果不仅整个默克尔树，还有指向操纵区块头的哈希引用都被改变会发生什么。
- en: '![](index-132_1.png)'
  id: totrans-1610
  prefs: []
  type: TYPE_IMG
  zh: '![](index-132_1.png)'
- en: '***Blockchain Basics***'
  id: totrans-1611
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础***'
- en: '131'
  id: totrans-1612
  prefs: []
  type: TYPE_NORMAL
  zh: '131'
- en: '**Figure 15-9\.** Changing a hash reference within a block header invalidates
    the hash reference that points to the manipulated block header, which in turn
    invalidates the whole data structure'
  id: totrans-1613
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-9\.** 在区块头内更改哈希引用会使指向操纵块头的哈希引用无效，从而使整个数据结构无效'
- en: If the hash reference (B1) to the manipulated block header (Block Header 1)
  id: totrans-1614
  prefs: []
  type: TYPE_NORMAL
  zh: 如果向操纵的区块头（区块头1）的哈希引用
- en: 'is changed, the following happens: Starting with hash reference B1, all hash
    references that point toward the manipulated data are consistent and valid since'
  id: totrans-1615
  prefs: []
  type: TYPE_NORMAL
  zh: 被更改，结果如下：从哈希引用B1开始，所有指向操纵数据的哈希引用均一致且有效，因为
- en: they were adjusted to the performed manipulation. However, the manipulated
  id: totrans-1616
  prefs: []
  type: TYPE_NORMAL
  zh: 它们已经调整以适应所做的操作。然而，操纵的
- en: hash reference B1 is part of Block Header 2 and hence its cryptographic hash
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: B1的哈希引用是区块头2的一部分，因此其密码哈希
- en: value changes, which in turn invalidates the hash reference B2 that pointed
    to
  id: totrans-1618
  prefs: []
  type: TYPE_NORMAL
  zh: 值的改变，导致指向它的哈希引用B2无效
- en: the original data block header containing the original version of the hash ref-
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: 原始的数据区块头，包含原始版本的哈希引用的
- en: erence B1\. As a result, the whole blockchain-data-structure is invalid as well.
  id: totrans-1620
  prefs: []
  type: TYPE_NORMAL
  zh: B1。结果，整个区块链数据结构也无效。
- en: Changing Data Orderly
  id: totrans-1621
  prefs: []
  type: TYPE_NORMAL
  zh: 有序地更改数据
- en: After this discussion of the many approaches to manipulate the blockchain-data-
  id: totrans-1622
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了许多操纵区块链数据的方法之后
- en: structure, which all yielded an invalid data structure, it is time to illustrate
    what needs to be done to change or update the blockchain-data-structure orderly.
  id: totrans-1623
  prefs: []
  type: TYPE_NORMAL
  zh: 结构，这些结构都导致了一个无效的数据结构，现在是时候阐明如何有条不紊地改变或更新区块链数据结构了。
- en: Figure [15-10 illustrates ho](index_split_001.html#133)w to change the blockchain-data-structure
    in the correct way.
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
  zh: 图[15-10说明](index_split_001.html#133)了正确地改变区块链数据结构的方法。
- en: '![](index-133_1.png)'
  id: totrans-1625
  prefs: []
  type: TYPE_IMG
  zh: '![](index-133_1.png)'
- en: '132'
  id: totrans-1626
  prefs: []
  type: TYPE_NORMAL
  zh: '132'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1627
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步 | 使用数据存储***'
- en: '**Figure 15-10\.** Changing a transaction orderly includes changing all subsequent
    hash references'
  id: totrans-1628
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-10\.** 更改交易顺序包括更改所有后续的哈希引用'
- en: If we consider changing or updating some details of Transaction 2, we have
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: 如果考虑更改或更新交易2的某些细节，我们有
- en: 'to subsequently update the whole sequence of hash references: R2, R12, B1,'
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
  zh: 以便随后更新所有哈希引用的整个序列：R2，R12，B1，
- en: and B2\. This means that all hash references, starting with the one that directly
    points to the manipulated data and ending with the hash reference that points
  id: totrans-1631
  prefs: []
  type: TYPE_NORMAL
  zh: 和B2。这意味着所有哈希引用，从直接指向操纵的数据开始，一直到指向
- en: to the most recent block header as well as all hash references in between
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: 到最新的区块头以及两者之间的所有哈希引用
- en: them, need to be changed and updated so that they reflect the changes of
  id: totrans-1633
  prefs: []
  type: TYPE_NORMAL
  zh: 它们，需要被改变和更新以反映
- en: their targets. This is quite an elaborate task. And it is an elaborate process
  id: totrans-1634
  prefs: []
  type: TYPE_NORMAL
  zh: 它们的目标。这是一个相当复杂的任务。也是一个复杂的过程
- en: on purpose. All of this work is necessary to keep the whole blockchain-data-
  id: totrans-1635
  prefs: []
  type: TYPE_NORMAL
  zh: 故意的。为了保持整个区块链数据的完整性
- en: structure consistent and to keep its integrity. All other attempts to change
  id: totrans-1636
  prefs: []
  type: TYPE_NORMAL
  zh: 使结构一致并保持其完整性。所有其他尝试更改
- en: or manipulate data that are part of the blockchain-data-structure will cause
  id: totrans-1637
  prefs: []
  type: TYPE_NORMAL
  zh: 或操纵作为区块链数据结构一部分的数据将会导致
- en: invalid hash references, which in turn will invalidate the whole data structure.
  id: totrans-1638
  prefs: []
  type: TYPE_NORMAL
  zh: 无效的哈希引用会使整个数据结构无效。
- en: Intended vs. Unintended Changes
  id: totrans-1639
  prefs: []
  type: TYPE_NORMAL
  zh: 有意与无意的变化
- en: The preceding discussion showed that the blockchain-data-structure pur-
  id: totrans-1640
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的讨论显示了区块链数据结构的目的-
- en: 'sues a radical all-or-nothing approach when it comes to changing its data:'
  id: totrans-1641
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到改变它的数据时，它遵循一种极端的全有或全无的方式：
- en: One either changes the whole data structure completely from the point that
  id: totrans-1642
  prefs: []
  type: TYPE_NORMAL
  zh: 要么完全从
- en: causes the change until the head of the whole chain or one better leave it all
  id: totrans-1643
  prefs: []
  type: TYPE_NORMAL
  zh: 导致变化，直到整个链的头或最好是全部离开
- en: unchanged in the first place. All other half-hearted, halfway through, or par-
  id: totrans-1644
  prefs: []
  type: TYPE_NORMAL
  zh: 首先保持不变。所有其他半心半意，一半途中或部分-
- en: tial changes will leave the whole blockchain-data-structure in an inconsistent
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: 初始的更改会使整个区块链数据结构变得不一致
- en: state, which will be detected easily and quickly. This is due to the properties
    of hash references, where the blockchain-data-structure does not differentiate
  id: totrans-1646
  prefs: []
  type: TYPE_NORMAL
  zh: 状态，这将很容易被发现并快速。这是由于哈希引用的属性，区块链数据结构不区分
- en: between intended or unintended changes. Actually there are no such things
  id: totrans-1647
  prefs: []
  type: TYPE_NORMAL
  zh: 有意或无意的变化之间。实际上并不存在这种事情
- en: as intended or unintended changes in the blockchain. These words refer to a
  id: totrans-1648
  prefs: []
  type: TYPE_NORMAL
  zh: 作为有意或无意的改变在区块链中。这些词指的是一种
- en: valuation of the motives or the person who caused a change. But the block-
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: 评估动机或导致变化的人。但区块-
- en: chain-data-structure values neither the motives nor the person who causes an
  id: totrans-1650
  prefs: []
  type: TYPE_NORMAL
  zh: 链数据结构既不关心动机也不关心导致
- en: '***Blockchain Basics***'
  id: totrans-1651
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '133'
  id: totrans-1652
  prefs: []
  type: TYPE_NORMAL
  zh: '133'
- en: inconsistency. The blockchain only cares about correctness and consistency
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: 不一致。区块链只关心正确性和一致性
- en: of all its hash references. If one of them is invalid, the whole data structure
    is invalid, regardless of who or what caused that change or why it was made. And
  id: totrans-1654
  prefs: []
  type: TYPE_NORMAL
  zh: 所有哈希引用。如果其中一个无效，则整个数据结构无效，无论是谁或什么导致了那个变化或为什么做出了改变。和
- en: this property makes the blockchain-data-structure very valuable.
  id: totrans-1655
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性使区块链数据结构非常有价值。
- en: Outlook
  id: totrans-1656
  prefs: []
  type: TYPE_NORMAL
  zh: 展望
- en: This step illustrated in great detail how the blockchain-data-structure deals
  id: totrans-1657
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步详细说明了区块链数据结构如何处理
- en: with changes of its data. It turned out that the blockchain-data-structure is
  id: totrans-1658
  prefs: []
  type: TYPE_NORMAL
  zh: 随着数据的变化。结果表明区块链数据结构是
- en: very change sensitive. It pursues a radical all-or-nothing approach when it
  id: totrans-1659
  prefs: []
  type: TYPE_NORMAL
  zh: 非常敏感于变化。当涉及到改变数据时
- en: comes to changing its data. The next step explains how this property can be
  id: totrans-1660
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改其数据时的意图或无意。
- en: used to make data unchangeable, which makes the blockchain-data-structure
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
  zh: 用于使数据不可更改，这正是使区块链数据结构
- en: the perfect candidate for storing data in an unreliable and untrustworthy
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
  zh: 存储数据的理想候选人。在不可靠和不可信任的地方
- en: environment.
  id: totrans-1663
  prefs: []
  type: TYPE_NORMAL
  zh: 环境。
- en: Summary
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
  zh: 总结
- en: • The steps to be performed in order to add new transac-
  id: totrans-1665
  prefs: []
  type: TYPE_NORMAL
  zh: • 所需执行的步骤以添加新的交易-
- en: 'tion data to the blockchain-data-structure are:'
  id: totrans-1666
  prefs: []
  type: TYPE_NORMAL
  zh: 向区块链数据结构添加交易数据的步骤是：
- en: • Create a new Merkle tree that contains all new
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建一个包含所有新内容的默克尔树
- en: transaction data to be added.
  id: totrans-1668
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据要添加。
- en: • Create a new block header that contains both a hash
  id: totrans-1669
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建一个包含哈希的新块头
- en: reference to its preceding header and the root of the
  id: totrans-1670
  prefs: []
  type: TYPE_NORMAL
  zh: 对其前一个标题和根的引用
- en: Merkle tree that contains the new transaction data.
  id: totrans-1671
  prefs: []
  type: TYPE_NORMAL
  zh: 包含新的交易数据的默克尔树。
- en: • Create a hash reference to the new block header,
  id: totrans-1672
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建对新块头的哈希引用，
- en: which is now the current head of the blockchain-
  id: totrans-1673
  prefs: []
  type: TYPE_NORMAL
  zh: 这现在是区块链数据结构的当前头
- en: data-structure.
  id: totrans-1674
  prefs: []
  type: TYPE_NORMAL
  zh: 数据结构。
- en: • Changing data in the blockchain-data-structure requires
  id: totrans-1675
  prefs: []
  type: TYPE_NORMAL
  zh: • 改变区块链数据结构中的数据需要
- en: renewing all hash references starting with the one that
  id: totrans-1676
  prefs: []
  type: TYPE_NORMAL
  zh: 更新所有哈希引用，从第一个开始
- en: directly points to the manipulated data and ending with
  id: totrans-1677
  prefs: []
  type: TYPE_NORMAL
  zh: 直接指向被篡改的数据，并以
- en: the head of the whole blockchain-data-structure as well
  id: totrans-1678
  prefs: []
  type: TYPE_NORMAL
  zh: 整个区块链数据结构的头部也是如此
- en: as all hash references in between them.
  id: totrans-1679
  prefs: []
  type: TYPE_NORMAL
  zh: 就像它们之间的所有哈希引用一样。
- en: • The blockchain-data-structure pursues a radical all-or-
  id: totrans-1680
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构实行一种极端的全-
- en: 'nothing approach when it comes to changing its data:'
  id: totrans-1681
  prefs: []
  type: TYPE_NORMAL
  zh: 一种全无的方式，当涉及到改变其数据时：
- en: One either changes the whole data structure completely
  id: totrans-1682
  prefs: []
  type: TYPE_NORMAL
  zh: 要么完全改变整个数据结构
- en: starting from the point that causes the change until the
  id: totrans-1683
  prefs: []
  type: TYPE_NORMAL
  zh: 从导致改变的点开始，直到
- en: head of the whole chain or one better leave it unchanged
  id: totrans-1684
  prefs: []
  type: TYPE_NORMAL
  zh: 整个链的头或者更好地保持它不变
- en: in the first place.
  id: totrans-1685
  prefs: []
  type: TYPE_NORMAL
  zh: 首先。
- en: '134'
  id: totrans-1686
  prefs: []
  type: TYPE_NORMAL
  zh: '134'
- en: '***Step 15 | Using the Data Store***'
  id: totrans-1687
  prefs: []
  type: TYPE_NORMAL
  zh: '***第15步 | 使用数据存储***'
- en: • All half-hearted, halfway through, or partial changes will
  id: totrans-1688
  prefs: []
  type: TYPE_NORMAL
  zh: • 所有半心半意、中途或部分变更都不会
- en: leave the whole blockchain-data-structure in an inconsis-
  id: totrans-1689
  prefs: []
  type: TYPE_NORMAL
  zh: 留下整个区块链数据结构不一致-
- en: tent state, which will be detected easily and quickly.
  id: totrans-1690
  prefs: []
  type: TYPE_NORMAL
  zh: 容易和快速地检测到。
- en: • Changing the blockchain-data-structure completely is a
  id: totrans-1691
  prefs: []
  type: TYPE_NORMAL
  zh: • 完全改变区块链数据结构是一个
- en: very elaborate process on purpose.
  id: totrans-1692
  prefs: []
  type: TYPE_NORMAL
  zh: 故意很复杂的过程。
- en: • The high sensitivity of the blockchain-data-structure
  id: totrans-1693
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块链数据结构的高灵敏度
- en: regarding changes is due to the properties of hash
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
  zh: 关于改变的咋是由哈希属性导致的
- en: references.
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: 参考。
- en: '**S T E P**'
  id: totrans-1696
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤**'
- en: '16'
  id: totrans-1697
  prefs: []
  type: TYPE_NORMAL
  zh: '16'
- en: Protecting the
  id: totrans-1698
  prefs: []
  type: TYPE_NORMAL
  zh: 保护
- en: Data Store
  id: totrans-1699
  prefs: []
  type: TYPE_NORMAL
  zh: 数据存储
- en: Discovering the power of immutability
  id: totrans-1700
  prefs: []
  type: TYPE_NORMAL
  zh: 发现不可变性的力量
- en: Step [15](http://dx.doi.org/10.1007/978-1-4842-2604-9_15) concluded with the
    finding that the blockchain-data-structure stores data in a change-sensitive manner.
    Any alteration of data stored in the blockchain-data-structure will stand out
    and require an elaborate process for
  id: totrans-1701
  prefs: []
  type: TYPE_NORMAL
  zh: 第 [15](http://dx.doi.org/10.1007/978-1-4842-2604-9_15) 步以发现区块链数据结构以敏感于改变的方式存储数据为结论。在区块链数据结构中存储的任何数据的改变都会显现出来，并需要一个复杂的过程才能进行
- en: incorporating it into the existing structure. This step explains how that prop-
  id: totrans-1702
  prefs: []
  type: TYPE_NORMAL
  zh: 将其并入已有的结构。这一步解释了如何利用这种属
- en: erty can be used to prepare the history of transaction data to be shared
  id: totrans-1703
  prefs: []
  type: TYPE_NORMAL
  zh: 性用于准备要分享的交易数据历史
- en: and distributed in an untrustworthy environment without having to fear that
  id: totrans-1704
  prefs: []
  type: TYPE_NORMAL
  zh: 并在一个不可信的环境中分发，而无需担心
- en: dishonest members of a peer-to-peer system can manipulate its content for
  id: totrans-1705
  prefs: []
  type: TYPE_NORMAL
  zh: 诚实的对等系统成员可能操纵其内容
- en: its own advantage.
  id: totrans-1706
  prefs: []
  type: TYPE_NORMAL
  zh: 自己的好处。
- en: The Metaphor
  id: totrans-1707
  prefs: []
  type: TYPE_NORMAL
  zh: 比喻
- en: Let’s assume I want to pretend to be a member of a prestigious aristocratic
  id: totrans-1708
  prefs: []
  type: TYPE_NORMAL
  zh: 假如我想假装是贵族家族的一员
- en: family. How could I achieve that? Forging my family tree could do that. For
  id: totrans-1709
  prefs: []
  type: TYPE_NORMAL
  zh: 家庭。我怎么能做到？伪造我的家谱可以做到。关于
- en: example, I could make up an aristocratic grandfather and connect myself to
  id: totrans-1710
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我可以编造一个贵族祖父并把自己
- en: him with a forged family tree. Will this suffice to convince others from my
  id: totrans-1711
  prefs: []
  type: TYPE_NORMAL
  zh: 用一个虚假的家谱来欺骗他。这足以说服别人吗？
- en: fake aristocratic roots? Well, this fake will be quickly uncovered since family
  id: totrans-1712
  prefs: []
  type: TYPE_NORMAL
  zh: 虚假的贵族血统？好吧，这个假冒行为很快就会被揭穿，因为家庭
- en: trees rarely exist in isolation; instead, they are connected and interwoven
    with other family trees via family relationships. Hence, if none of the family
    trees
  id: totrans-1713
  prefs: []
  type: TYPE_NORMAL
  zh: 树很少单独存在；相反，它们通过家族关系与其他家族谱联系和交织在一起。因此，如果没有一个家族谱
- en: © Daniel Drescher 2017
  id: totrans-1714
  prefs: []
  type: TYPE_NORMAL
  zh: © Daniel Drescher 2017
- en: D. Drescher, *Blockchain Basics*, DOI 10.1007/978-1-4842-2604-9_16
  id: totrans-1715
  prefs: []
  type: TYPE_NORMAL
  zh: D. Drescher, *区块链基础*，DOI 10.1007/978-1-4842-2604-9_16
- en: '136'
  id: totrans-1716
  prefs: []
  type: TYPE_NORMAL
  zh: '136'
- en: '***Step 16 | Protecting the Data Store***'
  id: totrans-1717
  prefs: []
  type: TYPE_NORMAL
  zh: '***第16步 | 保护数据存储***'
- en: of the established aristocratic families have a reference or relation to my
    fic-
  id: totrans-1718
  prefs: []
  type: TYPE_NORMAL
  zh: 已建立的贵族家族中的一些人有参考或和我虚构的
- en: tional grandfather, my fictional family history will be quickly discovered as
    fake.
  id: totrans-1719
  prefs: []
  type: TYPE_NORMAL
  zh: 非官方的祖父，我的虚构的家庭历史很快就会被发现是假的。
- en: In order to get my fictional family accepted, I would need to forge the family
  id: totrans-1720
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我的虚构家庭被接受，我需要伪造家庭
- en: documents of some of the established aristocratic families by embedding ref-
  id: totrans-1721
  prefs: []
  type: TYPE_NORMAL
  zh: 已建立的贵族家庭的一些文件通过嵌入参考来制造参
- en: erences to my fictional family tree in their family history. But even this may
    not suffice. Real people have real lives and leave their footprints in our world.
    But my fictional grandfather never really lived. Hence, I have to make up his
    life in order to make the fake appear real. This implies that I have to invent
    the entire life of my fictional grandfather, including his childhood as well as
    his education and career history. Additionally, the supporting documents would
    also need to
  id: totrans-1722
  prefs: []
  type: TYPE_NORMAL
  zh: 他们家族历史中对我的虚构家谱的引用。但这可能还不够。真实的人有真实的生活并留下他们在我们世界的足迹。但是我的虚构祖父从未真正活过。因此，我必须捏造他的生活，使假像看起来真实。这意味着我必须编造我虚构祖父的整个人生，包括他的童年以及他的教育和职业历史。此外，支持文件也需要
- en: be faked, such as the birth certificate, school registration documents, school
  id: totrans-1723
  prefs: []
  type: TYPE_NORMAL
  zh: 被伪造，比如出生证明、学校注册文件、学校
- en: certificates, university degrees, professional certifications, memberships,
    and
  id: totrans-1724
  prefs: []
  type: TYPE_NORMAL
  zh: 证书、大学学位、专业认证、会员资格、和
- en: so on. Schools, universities, and employers maintain records of their students
  id: totrans-1725
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。学校、大学和雇主会保留他们学生的记录
- en: and employees and publish almanacs and photographs of social events. Hence,
  id: totrans-1726
  prefs: []
  type: TYPE_NORMAL
  zh: 并出版社交活动的年鉴和照片。 因此，
- en: it would be necessary to manipulate their documents as well in order to make
  id: totrans-1727
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要操纵他们的文件，这将是必要的
- en: my fictional grandfather a former member of these institutions. Since manipu-
  id: totrans-1728
  prefs: []
  type: TYPE_NORMAL
  zh: 我的虚构祖父是这些机构的前成员。 由于操纵-
- en: lating all these documents would be complicated and costly, I probably would
  id: totrans-1729
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些文件，这将是复杂和昂贵的，我可能会
- en: decide to stay with my real but nonaristocratic family history.
  id: totrans-1730
  prefs: []
  type: TYPE_NORMAL
  zh: 决定留在我真实但非贵族的家族历史。
- en: This intellectual game illustrates that forging the past is possible but extremely
    expensive, since it requires rewriting and forging large parts of history in
  id: totrans-1731
  prefs: []
  type: TYPE_NORMAL
  zh: 这个智力游戏说明过去的伪造是可能的，但非常昂贵，因为它需要重写和伪造大部分历史
- en: order to embed the fake information into many documents and references of
  id: totrans-1732
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将假信息嵌入到许多文档和引用中
- en: the true history. The costs of doing so are prohibitively high; hence, it is
    much easier and less expensive to stick with the truth. This step explains how
    the
  id: totrans-1733
  prefs: []
  type: TYPE_NORMAL
  zh: 真实的历史。 这样做的成本是极其高昂的； 因此，坚持真相要容易得多，成本要低得多。 此步骤解释了如何
- en: blockchain utilizes this finding in order to protect its history of transaction
  id: totrans-1734
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链利用这一发现来保护其交易历史
- en: data from being forged.
  id: totrans-1735
  prefs: []
  type: TYPE_NORMAL
  zh: 预防数据被伪造。
- en: The Goal
  id: totrans-1736
  prefs: []
  type: TYPE_NORMAL
  zh: 目标
- en: It is important that the whole history of transaction data maintained by the
  id: totrans-1737
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，由
- en: blockchain always represents the truth and therefore makes it a trustworthy
  id: totrans-1738
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链总是代表真相，因此使其成为值得信赖的
- en: source for clarifying ownership-related matters.
  id: totrans-1739
  prefs: []
  type: TYPE_NORMAL
  zh: 用于澄清与所有权相关事项的来源。
- en: The Challenge
  id: totrans-1740
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战
- en: The blockchain is a purely distributed peer-to-peer system that is open to
  id: totrans-1741
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是纯粹的分布式点对点系统，对
- en: everyone. Hence, there is a risk that dishonest peers could manipulate or
  id: totrans-1742
  prefs: []
  type: TYPE_NORMAL
  zh: 所有人。 因此，不诚实的同行可能操纵或
- en: forge the history of transaction data for their own advantage. The challenge
    is
  id: totrans-1743
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得自己的利益而伪造交易历史的挑战是
- en: to keep the system open to everyone yet protect the history of transaction
  id: totrans-1744
  prefs: []
  type: TYPE_NORMAL
  zh: 保持系统对所有人开放，但保护交易历史
- en: data from being forged or manipulated.
  id: totrans-1745
  prefs: []
  type: TYPE_NORMAL
  zh: 防止数据被伪造或操纵。
- en: '***Blockchain Basics***'
  id: totrans-1746
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '137'
  id: totrans-1747
  prefs: []
  type: TYPE_NORMAL
  zh: '137'
- en: The Idea
  id: totrans-1748
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法
- en: Distinguishing honest from dishonest nodes in an open system in advance is
  id: totrans-1749
  prefs: []
  type: TYPE_NORMAL
  zh: 在开放系统中事先区分诚实和不诚实的节点是必要的
- en: hard or even impossible. Hence, in order to protect the history of transac-
  id: totrans-1750
  prefs: []
  type: TYPE_NORMAL
  zh: 很难甚至不可能。 因此，为了保护交易的历史
- en: tions from being manipulated by dishonest nodes, we want to prevent anyone
  id: totrans-1751
  prefs: []
  type: TYPE_NORMAL
  zh: 由于不诚实的节点的操纵，我们要防止任何人
- en: from manipulating the history in the first place. If no one can change the his-
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
  zh: 自从一开始操纵历史。 如果没有人能改变他的-
- en: tory of transaction data, regardless of whether it is honest or dishonest, we
  id: totrans-1753
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数据的历史，无论诚实与否，我们
- en: do not have to fear that it can be manipulated at all. Hence, making the history
    of transaction data unchangeable in the first place solves the problem. As a
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
  zh: 不必担心它会被操纵。 因此，首先使交易历史数据无法更改就解决了问题。 作为
- en: result, the system can stay open to everyone and no one has to worry about
  id: totrans-1755
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，该系统可以对所有人保持开放，没人需要担心
- en: dishonest nodes manipulating the history of transactions.
  id: totrans-1756
  prefs: []
  type: TYPE_NORMAL
  zh: 不诚实的节点操纵交易历史。
- en: A Short Detour to Immutability
  id: totrans-1757
  prefs: []
  type: TYPE_NORMAL
  zh: 一段短暂的不可变性之旅
- en: Immutability means that something cannot be changed. Data that are immu-
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: 不变性意味着某物无法改变。 被感染的数据是不会变的-
- en: table cannot be changed once they have been created or written. For that
  id: totrans-1759
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建或写入后，表格就无法更改。 为了
- en: reason, these data are also called read-only data. Their whole benefit is solely
    presenting information for reading or presentation purposes. This fact is particularly
    desirable if one needs to give data to others and hence loses control
  id: totrans-1760
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这些数据也被称为只读数据。 它们的唯一好处仅仅是呈现信息以供阅读或演示。 如果需要将数据给其他人并因此失去了控制，那么这个事实尤为可取
- en: on how the data are used. Handing over immutable data is an effective way
  id: totrans-1761
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据如何使用。 交接不可变数据是一种有效的方式
- en: of preventing changes or manipulation of data. Driver’s licenses, passports,
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: 防止数据被更改或操纵。 驾驶执照，护照，
- en: and educational certificates are examples of immutable objects in real life.
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
  zh: 和教育证书是现实生活中不可变的对象的例子。
- en: Authorities produce them in order to document something and their only
  id: totrans-1764
  prefs: []
  type: TYPE_NORMAL
  zh: 当局者根据需要制作文件以及他们唯一
- en: legible use is to be shown and to be read.
  id: totrans-1765
  prefs: []
  type: TYPE_NORMAL
  zh: 可读的用途是被展示和阅读。
- en: 'How It Works: The Big Picture'
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理：大局观
- en: The main idea used by the blockchain to make the transaction history immu-
  id: totrans-1767
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链使用的主要思想是使交易历史不可变
- en: table is to make changing it prohibitively costly and make those costs deter
  id: totrans-1768
  prefs: []
  type: TYPE_NORMAL
  zh: 向区块链数据结构中添加新块的过程，就像
- en: everyone from changing it. Making the history of transaction data immutable
  id: totrans-1769
  prefs: []
  type: TYPE_NORMAL
  zh: 所有人都不会改变它。使交易数据历史不可变
- en: 'has three elements:'
  id: totrans-1770
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个要素：
- en: 1\. Storing the history of transaction data in a way that even
  id: totrans-1771
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 将交易数据历史存储在一种即使
- en: the smallest manipulation of its content stands out and
  id: totrans-1772
  prefs: []
  type: TYPE_NORMAL
  zh: '139'
- en: becomes noticeable.
  id: totrans-1773
  prefs: []
  type: TYPE_NORMAL
  zh: 变得明显
- en: 2\. Enforcing that embedding a manipulation in the transac-
  id: totrans-1774
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 实施了将操作嵌入到交易
- en: tion history requires rewriting a huge part of it.
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
  zh: 历史记录需要重写其中的一大部分。
- en: 3\. Making adding, writing, or rewriting of data to the history
  id: totrans-1776
  prefs: []
  type: TYPE_NORMAL
  zh: 表格是为了使其不可承受的代价以及使这些成本能够阻止
- en: computationally expensive.
  id: totrans-1777
  prefs: []
  type: TYPE_NORMAL
  zh: 计算成本极高。
- en: '138'
  id: totrans-1778
  prefs: []
  type: TYPE_NORMAL
  zh: '138'
- en: '***Step 16 | Protecting the Data Store***'
  id: totrans-1779
  prefs: []
  type: TYPE_NORMAL
  zh: '***第16步 | 保护数据存储***'
- en: Making Manipulations Stand Out
  id: totrans-1780
  prefs: []
  type: TYPE_NORMAL
  zh: 使操纵显而易见
- en: The blockchain-data-structure that stores data in a change-sensitive manner
  id: totrans-1781
  prefs: []
  type: TYPE_NORMAL
  zh: 以一种敏感于变化的方式存储数据的区块链数据结构
- en: fulfills the first element. As a result, one cannot silently manipulate data
    that are part of the blockchain-data-structure and hope that no one will notice
    it.
  id: totrans-1782
  prefs: []
  type: TYPE_NORMAL
  zh: 满足第一个要素。因此，无法悄悄地操纵属于区块链数据结构的数据，然后希望没有人注意到。
- en: Any change will stand out with a huge “noise” caused by breaking hash refer-
  id: totrans-1783
  prefs: []
  type: TYPE_NORMAL
  zh: 任何变化都将因改变其所指向的数据而引起的巨大的“噪音”而显现
- en: ences that become invalid as a result of changing the data they refer to.
  id: totrans-1784
  prefs: []
  type: TYPE_NORMAL
  zh: 使无效的哈希引用变得无效。
- en: Enforcing Rewriting the History for Embedding
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
  zh: 强制重写历史以嵌入
- en: Changes
  id: totrans-1786
  prefs: []
  type: TYPE_NORMAL
  zh: 变化
- en: The blockchain-data-structure also fulfills the second element because it pur-
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构还满足第二个要素，因为它净化了
- en: 'sues a radical all-or-nothing approach when it comes to changing its data:'
  id: totrans-1788
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到改变其数据时，区块链数据结构采取一种激进的全有全无的方式：
- en: One either changes the data structure starting from the point that causes the
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: 要么从导致
- en: change until the head of the whole chain or one better leave it unchanged in
  id: totrans-1790
  prefs: []
  type: TYPE_NORMAL
  zh: 在不改变整个链或最好不改变的情况下，一
- en: the first place.
  id: totrans-1791
  prefs: []
  type: TYPE_NORMAL
  zh: 首先。
- en: Making Adding Data Computationally Expensive
  id: totrans-1792
  prefs: []
  type: TYPE_NORMAL
  zh: 使添加数据的计算成本极高
- en: The third element is for those who are not afraid to rewrite large parts of
  id: totrans-1793
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个元素是给那些不怕重写大部分内容的人
- en: the blockchain-data-structure in the course of having a manipulation embed-
  id: totrans-1794
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构在进行操作嵌入时产生巨大的计算成本
- en: ded in the transaction history. But as soon as writing or rewriting the block-
  id: totrans-1795
  prefs: []
  type: TYPE_NORMAL
  zh: 植入事务历史不但减小，完全是因为要维持计算难题的
- en: chain-data-structure incurs huge computational costs, people will think twice
  id: totrans-1796
  prefs: []
  type: TYPE_NORMAL
  zh: 链数据结构会产生巨大的计算成本，人们会三思而行
- en: about whether changing it was a good idea in the first place.
  id: totrans-1797
  prefs: []
  type: TYPE_NORMAL
  zh: 关于是否最初改变它是个好主意。
- en: The blockchain-technology-suite makes the content of the blockchain-data-
  id: totrans-1798
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术套件使区块链数据的内容
- en: structure immutable by incurring significant computational costs for every
  id: totrans-1799
  prefs: []
  type: TYPE_NORMAL
  zh: 每次对其进行最小的更改都会显著增加计算成本
- en: block being written, rewritten, or added to the blockchain-data-structure. The
  id: totrans-1800
  prefs: []
  type: TYPE_NORMAL
  zh: 正在写入、重写或添加到区块链数据结构中的块。这
- en: computational costs are incurred by hash puzzles that are unique for each
  id: totrans-1801
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希难题充当唯一的计算成本。
- en: block header. [1](index_split_001.html#139) As a result, one either accepts
    the whole cost of changing the data structure from the point that causes the change
    until the head of the
  id: totrans-1802
  prefs: []
  type: TYPE_NORMAL
  zh: 块头开始进行数据结构的整体成本，或者最好是
- en: chain by solving a hash puzzle for every block header involved or it is better
  id: totrans-1803
  prefs: []
  type: TYPE_NORMAL
  zh: 链，需要为每个涉及到的块头解决一个哈希难题，或者最好
- en: to leave it unchanged.
  id: totrans-1804
  prefs: []
  type: TYPE_NORMAL
  zh: 使改变变得代价高昂，并使这些成本能够阻止
- en: '1Nakamoto, Satoshi. Bitcoin: A peer-to-peer electronic cash system. 2008\.
    [https://bitcoin.](https://bitcoin.org/bitcoin.pdf)'
  id: totrans-1805
  prefs: []
  type: TYPE_NORMAL
  zh: '1Nakamoto, Satoshi. Bitcoin: A peer-to-peer electronic cash system. 2008\.
    [https://bitcoin.](https://bitcoin.org/bitcoin.pdf)'
- en: '[org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf).'
  id: totrans-1806
  prefs: []
  type: TYPE_NORMAL
  zh: '[org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)'
- en: '***Blockchain Basics***'
  id: totrans-1807
  prefs: []
  type: TYPE_NORMAL
  zh: '***区块链基础知识***'
- en: '139'
  id: totrans-1808
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 添加、写入或重写到历史记录的数据
- en: 'How It Works: The Details'
  id: totrans-1809
  prefs: []
  type: TYPE_NORMAL
  zh: 工作原理：细节
- en: The procedure to add a new block to the blockchain-data-structure, as dis-
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
  zh: 改变的最小操作就会显现出来，并且
- en: '[cussed in Step 15,](http://dx.doi.org/10.1007/978-1-4842-2604-9_15) is not
    computationally expensive because it only requires adding the hash reference that
    points to the current head of the chain to the'
  id: totrans-1811
  prefs: []
  type: TYPE_NORMAL
  zh: '[15步讨论](http://dx.doi.org/10.1007/978-1-4842-2604-9_15)不会因为其只需要添加指向当前链头的哈希引用而产生巨大的计算成本'
- en: new block header and declaring it as the new head of the chain. The challenge
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
  zh: 新的区块头并将其声明为链的新头。挑战
- en: of making the blockchain-data-structure immutable is to make adding a new
  id: totrans-1813
  prefs: []
  type: TYPE_NORMAL
  zh: 使区块链数据结构不可变的挑战在于添加新
- en: block a computationally expensive task. The following aspects need to be con-
  id: totrans-1814
  prefs: []
  type: TYPE_NORMAL
  zh: 区块成为一个计算密集型的任务。需要考虑以下几个方面：
- en: 'sidered in the course of achieving this:'
  id: totrans-1815
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现这一目标的过程中需要考虑以下几个方面：
- en: • Compulsory data of block headers
  id: totrans-1816
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块头的强制性数据
- en: • The process of creating a new block header
  id: totrans-1817
  prefs: []
  type: TYPE_NORMAL
  zh: • 创建新区块头的过程
- en: • Validation rules for block headers
  id: totrans-1818
  prefs: []
  type: TYPE_NORMAL
  zh: • 区块头的验证规则
- en: Compulsory Data
  id: totrans-1819
  prefs: []
  type: TYPE_NORMAL
  zh: 强制数据
- en: Every block header of the blockchain-data-structure has to carry at least the
  id: totrans-1820
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链数据结构的每个区块头至少要携带以下内容：
- en: following data[2:](index_split_001.html#140)
  id: totrans-1821
  prefs: []
  type: TYPE_NORMAL
  zh: 跟随数据[2:](index_split_001.html#140)
- en: • The root of a Merkle tree containing transaction data
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
  zh: • 包含交易数据的 Merkle 树的根节点
- en: • A hash reference to the header of the preceding block
  id: totrans-1823
  prefs: []
  type: TYPE_NORMAL
  zh: • 前一个区块头的哈希引用
- en: • The difficulty level of the hash puzzle
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
  zh: • 哈希难题的难度级别
- en: • The time when solving the hash puzzle started
  id: totrans-1825
  prefs: []
  type: TYPE_NORMAL
  zh: • 解决哈希难题开始的时间
- en: • The nonce that solves the hash puzzle
  id: totrans-1826
  prefs: []
  type: TYPE_NORMAL
  zh: • 解决哈希难题的随机数
