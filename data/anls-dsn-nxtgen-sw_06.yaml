- en: © Springer Nature Switzerland AG 2020A. M. LangerAnalysis and Design of Next-Generation
    Software Architectures[https://doi.org/10.1007/978-3-030-36899-9_6](https://doi.org/10.1007/978-3-030-36899-9_6)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © Springer Nature Switzerland AG 2020A. M. Langer下一代软件架构的分析与设计[https://doi.org/10.1007/978-3-030-36899-9_6](https://doi.org/10.1007/978-3-030-36899-9_6)
- en: 6. The Internet of Things
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 物联网
- en: 'Arthur M. Langer^([1](#Aff2) [ ](#ContactOfAuthor2))(1)Center for Technology
    Management, Columbia University, New York, NY, USAArthur M. LangerEmail: [al261@columbia.edu](mailto:al261@columbia.edu)While
    5G is the initiator of possibilities to bring forth the next generation of computing,
    the Internet of Things (IoT) represents the actual devices that will be the vehicle
    for its success. For it is IoT that represents the physical components that will
    make a technology feasible by placing intermediate smart hardware in every place
    imaginable around the globe. The objective then of IoT is to allow 5G to become
    a reality by reducing its operational costs while increasing network reliability
    for consumers and businesses. The identity of IoT is to increase the uptime and
    real time processing of an agile architecture and to eliminate any notion of an
    unscheduled network failure. Thus, IoT must catch problems before they occur and
    provide a train that has alternative tracks should a disturbance occur during
    the any process. Ultimately IoT must ensure no single point of failure in any
    supply chain process. In order to accomplish this challenge, IoT devices must
    contain four components:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Arthur M. Langer^([1](#Aff2) [ ](#ContactOfAuthor2))(1)哥伦比亚大学科技管理中心，美国纽约州纽约市Arthur M. Langer电子邮件：[al261@columbia.edu](mailto:al261@columbia.edu)虽然5G是带来下一代计算可能性的初始者，但物联网（IoT）才是将成功的载体的实际设备。因为物联网代表着将中间智能硬件放置在全球各地的每一个可能的地方，从而使技术变得可行。因此，物联网的目标是通过降低运营成本，同时提高消费者和企业的网络可靠性，使5G成为现实。物联网的身份是提高敏捷架构的正常运行时间和实时处理，并消除任何不定时网络故障的概念。因此，物联网必须在问题发生之前发现问题，并提供具有备用轨道的列车，以应对任何过程中的干扰。最终，物联网必须确保任何供应链过程中都不存在单点故障。为了完成这一挑战，物联网设备必须包含四个组成部分：
- en: '1.'
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Hardware: Sensors, stress devices, friction measurements, and strain indicators.'
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 硬件：传感器、压力装置、摩擦测量和应力指示器。
- en: '2.'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Applications: Rules engine, modification of software functions, remote cooling
    or lubrication.'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应用：规则引擎，修改软件功能，远程冷却或润滑。
- en: '3.'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Analytics: AI and ML to predict failure based on assumptions and prior historical
    data. Handling of change capacities to avoid future failures.'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分析：利用人工智能和机器学习来基于假设和先前的历史数据预测故障。处理变化容量以避免未来故障。
- en: '4.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'Network: A large network or system that offers dynamic connections and alternative
    paths or “tracks.”'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 网络：提供动态连接和备用路径或“轨道”的大型网络或系统。
- en: 'IoT must accomplish five key tasks, reactive, preventive, proactive, predictive,
    and prescriptive. So, any analysist should start this design by ensuring that
    these five objectives are addressed in every process. IoT then needs multiple
    use cases and transforming them into a connected system that fully integrates
    physical devices, sensors, data extraction, secured communication, gateways, cloud
    servers, analytics, and real time dash boards. The following analysis and design
    considerations and principles must be adhered to:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网必须完成五项关键任务，即反应性、预防性、主动性、预测性和规范性。因此，任何分析人员在设计时都应确保每个过程都解决了这五个目标。然后，物联网需要多个用例，并将其转化为一个完全整合了物理设备、传感器、数据提取、安全通信、网关、云服务器、分析和实时仪表板的连接系统。必须遵守以下分析和设计考虑因素和原则：
- en: 'Interoperability: all IoT eventually requires sensor machines, equipment and
    physical sites to communicate with, and the ability to exchange data.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互操作性：所有物联网最终都需要传感器、设备和物理站点进行通信，并具有交换数据的能力。
- en: 'Information Transparency: IoT must have a continuous bridge between the physical
    and digital world. In other words, physical processes should be recorded and stored
    virtually which creates a digital twin.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息透明度：物联网必须在物理世界和数字世界之间建立持续的桥梁。换句话说，物理过程应该被记录并在虚拟环境中存储，从而创建数字孪生体。
- en: 'Technical Assistance: provide and display data that helps people to make better
    operational decisions and solve problems better and faster. IoT must especially
    help people to complete laborious tasks to improve productivity as well as safety.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术支持：提供并显示能帮助人们做出更好运营决策并更快解决问题的数据。物联网必须特别帮助人们完成繁重的任务，以提高生产力和安全性。
- en: 'Decentralized Decisions: Help make decisions and execute requirements according
    to its defined logic.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去中心化决策：根据其定义的逻辑帮助做出决策和执行要求。
- en: IoT simulation is a significant part of being able to design complex IoT interface
    systems. Market products must provide digital prototypes to visualize how to connect
    devices, edge and cloud services, web, and mobile applications. All of these components
    make up the IoT architecture and must interact based on multiple simulation runs.
    IoT analytics includes dashboard and alert systems that are typically dependent
    on valid data sources. Consequently, IoT analysis and design must use a lean and
    agile approach. It must incorporate design thinking, that is, people, technology,
    and business all integrated in product design decisions. IoT must also be consumer
    centric and likely will need iterations of how business needs and consumer needs
    can be integrated into one requirements document. The relationship between what
    consumers and business need from 5G is consistent with what IoT must deliver,
    so the objective and relationship between these two forces must be very closely
    aligned.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网仿真是设计复杂物联网接口系统的重要部分。市场产品必须提供数字原型，以可视化如何连接设备、边缘和云服务、Web和移动应用程序。所有这些组件构成了物联网架构，并且必须根据多次模拟运行进行交互。物联网分析包括通常依赖于有效数据源的仪表板和警报系统。因此，物联网分析和设计必须采用精益和敏捷的方法。它必须包含设计思维，即人、技术和业务都融入产品设计决策中。物联网还必须以消费者为中心，并且可能需要多次迭代，以将业务需求和消费者需求整合到一个需求文档中。消费者和业务对5G的需求与物联网必须提供的需求一致，因此这两股力量之间的目标和关系必须非常紧密地对齐。
- en: IoT requires analysts to become more proficient with device-level application
    programming interfaces or APIs. These IoT APIs expose data that enables devices
    to transmit data to applications, so it is the data gateway. The APIs can also
    act as a way for an application to instruct a device, serving as a way to enact
    certain functions as shown in Fig. [6.1](#Fig1).![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig1_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig1_HTML.png)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网（IoT）要求分析人员提高对设备级应用程序接口或API的熟练程度。这些物联网API公开数据，使设备能够将数据传输到应用程序，因此它是数据网关。这些API还可以作为应用程序指示设备的一种方式，用作执行某些功能的方式，如图[6.1](#Fig1)所示。
- en: Fig. 6.1
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1
- en: API data transmission data flow
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: API数据传输数据流
- en: Figure [6.1](#Fig1) shows a new data element from the cloud that gets transformed
    by process A who sends to IoT device B. The transformed data is forwarded by device
    B to either a direct user or by another device/machine interface. The second example
    shown in Fig. [6.2](#Fig2) reflects the data as a value used to instruct the IoT
    device B to do something based on that value—say a “1” value might mean to process
    a certain way.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig2_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig2_HTML.png)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图[6.1](#Fig1)显示了来自云的新数据元素，该数据经过A过程转换后发送给物联网设备B。经过设备B转发的转换数据可由直接用户接收，也可由另一个设备/机器接口接收。图[6.2](#Fig2)中显示的第二个示例反映了数据作为一个值，用于根据该值指示物联网设备B执行某些操作
    - 比如“1”值可能意味着以某种方式处理。
- en: Fig. 6.2
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2
- en: API value transmission data flow
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: API值传输数据流
- en: Because so many IoT vendors might supply open source APIs, analysts will need
    to examine whether they need to develop the API as a requirements document or
    use it from a library source offered by a vendor. There is also a third possibility;
    use a third-party open source and modify it to work with the specific requirements
    of the system. In other words, there is no reason to “reinvent the wheel.” There
    actually is nothing new about this approach in analysis. For example, functional
    macro libraries of routines have been available in almost every legacy architecture
    dating back to the mainframe. No one would think of designing a new program to
    calculate the square root of a number; the code exists in many libraries and it
    can be embedded easily in another application!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多物联网供应商可能提供开源API，分析人员需要检查他们是否需要将API开发为需求文档，还是从供应商提供的库源中使用它。还有第三种可能性；使用第三方开源并修改它以适应系统的特定要求。换句话说，没有理由“重新发明轮子”。在分析中，这种方法实际上并不新鲜。例如，几乎每个遗留架构都提供了功能宏库的例程。没有人会考虑设计一个计算一个数字的平方根的新程序；该代码存在于许多库中，并且可以轻松地嵌入到另一个应用程序中！
- en: 6.1 Logical Design of IoT and Communication Models
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.1 物联网的逻辑设计和通信模型
- en: 'According to Mishra ([2019](#CR2)), logical design of IoT consists of three
    terminologies:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据米什拉（[2019](#CR2)）的说法，物联网的逻辑设计包括三个术语：
- en: '1'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1'
- en: IoT Functional Blocks
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 物联网功能块
- en: '2'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2'
- en: IoT Communication Models
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 物联网通信模型
- en: '3'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3'
- en: IoT Communication APIs.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 物联网通信 API。
- en: This section will map Mishra’s concept to the role of the analyst.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将米什拉的概念映射到分析员的角色。
- en: 6.1.1 IoT Functional Blocks
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.1.1 物联网功能块
- en: Functional blocks consist 6 integrated parts; Applications, Management, Services,
    Communication, Security, and Device as shown in Fig. [6.3](#Fig3).![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig3_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig3_HTML.png)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 功能块包括 6 个集成部分；应用程序、管理、服务、通信、安全和设备，如图[6.3](#Fig3)所示。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig3_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig3_HTML.png)
- en: Fig. 6.3
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3
- en: Functional block architecture. *Source* Mishra ([2019](#CR2))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 功能块架构。*来源* 米什拉（[2019](#CR2)）
- en: The analyst must define each of the blocks of a device in Fig. [6.3](#Fig3).
    First, the analyst has to do the necessary use cases of each block, defining the
    needed data, applications, and performance requirements. As discussed earlier,
    many devices like sensors have software that may provide many of the services
    needed by a developer. However, if such APIs are not available the analyst must
    provide the requirements to be programmed internally. We shall see later in this
    book that this decision may also come under the auspices of build versus buy,
    especially if a third-party API is deemed too expensive or does not contain enough
    of the necessary feature functions to satisfy the requirements. Such a decision
    may also involve determining which device best fits the needs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 分析员必须定义图中设备的每个块，如图[6.3](#Fig3)所示。首先，分析员必须做出每个块的必要用例，定义所需的数据、应用程序和性能要求。正如前面讨论的，许多设备（如传感器）具有可能为开发人员提供所需服务的软件。但是，如果此类
    API 不可用，则分析员必须提供内部编程的要求。在本书后面我们将看到，这个决定也可能属于构建与购买的范畴，特别是如果第三方 API 被认为太昂贵或者不包含足够的必要功能函数来满足要求。这样的决定还可能涉及确定哪个设备最适合需求。
- en: 6.2 IoT Communication Alternatives
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.2 物联网通信备选方案
- en: There are four different types of communication alternative architectures. Multiple
    alternatives of course can exist across complex network systems that engage various
    types of IoT devices.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 存在四种不同类型的通信备选架构。当然，在涉及各种类型的物联网设备的复杂网络系统中，可能存在多种备选方案。
- en: 6.2.1 Request-Response Model
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2.1 请求-响应模型
- en: This model resembles the traditional client/server architecture discussed in
    Chap. [4](480347_1_En_4_Chapter.xhtml). Although the 5G enhanced agile architecture
    is more distributed and less hierarchical, the client/server model is still applicable
    within certain device designs. As shown in Fig. [6.4](#Fig4) the web browser or
    smartphone will likely be the client in this case and the application on a device
    will act as the server.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig4_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig4_HTML.png)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型类似于第 [4](480347_1_En_4_Chapter.xhtml) 章讨论的传统客户端/服务器架构。尽管 5G 增强的灵活架构更为分布式且层次较少，但在某些设备设计中，客户端/服务器模型仍然适用。如图 [6.4](#Fig4) 所示，在这种情况下，Web
    浏览器或智能手机很可能是客户端，而设备上的应用程序将充当服务器。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig4_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig4_HTML.png)
- en: Fig. 6.4
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4
- en: Request-response model. *Source* Mishra ([2019](#CR2))
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请求-响应模型。*来源* 米什拉（[2019](#CR2)）
- en: It is also possible for IoT devices to integrate with multiple tiers of client/server
    architecture. Figure [6.5](#Fig5) shows an IoT devices that exists as a middle
    tier and providing both client and server activities depending on the requestor.
    In this example the dedicated server would be a cloud database likely residing
    on a separate physical hardware server.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig5_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig5_HTML.png)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备也可以与多个层次的客户端/服务器架构集成。图 [6.5](#Fig5)显示了一种物联网设备，它存在于中间层，并根据请求者提供客户端和服务器活动。在这个例子中，专用服务器可能是一个云数据库，很可能存在于单独的物理硬件服务器上。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig5_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig5_HTML.png)
- en: Fig. 6.5
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5
- en: IoT Device as a Client and Server. *Source* Mishra ([2019](#CR2))
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备作为客户端和服务器。*来源* 米什拉（[2019](#CR2)）
- en: 6.2.2 Publish-Subscribe Model
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2.2 发布-订阅模型
- en: 'The publish-subscribe model involves three components: Publishers, Brokers,
    and Consumers. A Publisher sends out data to intermediates called Brokers. Brokers
    then can make the data available to a specific Consumer as the ultimate client
    or subscriber of the information as shown in Fig. [6.6](#Fig6).![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig6_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig6_HTML.png)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 发布-订阅模型涉及三个组件：发布者、经纪人和消费者。发布者将数据发送到称为经纪人的中间件。然后，经纪人可以将数据提供给特定的消费者，作为信息的最终客户或订阅者，如图[6.6](#Fig6)所示。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig6_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig6_HTML.png)
- en: Fig. 6.6
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6
- en: Publisher-subscribe model. *Source* Mishra ([2019](#CR2))
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 发布者-订阅者模型。*来源* Mishra ([2019](#CR2))
- en: Obviously, the Publisher-Subscribe model is common among data providers who
    work through intermediate organizations that then have some membership of users
    that they manage.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，发布者-订阅者模型在通过中间组织进行工作的数据提供者中很常见，这些中间组织然后管理一些用户成员。
- en: 6.2.3 Push-Pull Model
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2.3 推拉模型
- en: This model eliminates the intermediary broker and thus consumers are getting
    data access directly from the Publisher (Fig. [6.7](#Fig7)). However, the Publisher
    does not know who is accessing the information. The broker is somewhat replaced
    by a queue, where data is stored and made available. The publisher updates the
    queue at various intervals. In this design the publisher has no need for a broker
    since there is no interest to know the consumer. This model does alleviate the
    dilemma of consumers who need more timely data from the publisher. Simply put,
    the queue defines what is available to the consumer at any given time. The analyst
    will need to address the update frequency during the requirements gathering phase
    of the SDLC .![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig7_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig7_HTML.png)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型消除了中间经纪人，因此消费者直接从发布者（图[6.7](#Fig7)）获取数据访问。然而，发布者不知道谁正在访问信息。经纪人在某种程度上被队列取代，数据被存储并提供。发布者以不同的间隔更新队列。在这种设计中，发布者不需要经纪人，因为不需要知道消费者。该模型确实解决了需要从发布者获取更及时数据的消费者的困境。简单地说，队列定义了消费者在任何给定时间内可以获取的内容。分析师需要在SDLC的需求收集阶段解决更新频率的问题。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig7_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig7_HTML.png)
- en: Fig. 6.7
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7
- en: Push-pull model. *Source* Mishra ([2019](#CR2))
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 推拉模型。*来源* Mishra ([2019](#CR2))
- en: 6.2.4 Exclusive Pair Model
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2.4 独占对模型
- en: This model is bi-directional or full-duplex with an ongoing open two-way communication
    between a client and server (Fig. [6.8](#Fig8)). The server is aware of all connections
    from clients. The connections remain open until a client send a message to close
    the connection. The analyst needs to provide definitions of the messages and how
    the client and the server response, that is, what the messages carry and processes
    they enact based on the message value.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig8_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig8_HTML.png)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型是双向或全双工的，客户端和服务器之间保持着持续的开放双向通信（图[6.8](#Fig8)）。服务器知道来自客户端的所有连接。连接保持打开状态，直到客户端发送消息关闭连接。分析师需要提供消息的定义以及客户端和服务器如何响应，即消息携带的内容以及基于消息值执行的过程。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig8_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig8_HTML.png)
- en: Fig. 6.8
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8
- en: Exclusive pair communication model. *Source* Mishra ([2019](#CR2))
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 独占对通信模型。*来源* Mishra ([2019](#CR2))
- en: 6.3 IoT as an Inversion of Traditional Analysis and Design
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.3 物联网作为传统分析与设计的反转
- en: As previously discussed throughout this book thus far, digital transformation’s
    major impact on analysis and design is the shift from designing systems that are
    product focused on performing specific user needs to one that is based more on
    what consumers want! Bernardi et al. ([2017](#CR1)) states “the global economy
    is rapidly shifting from an economy of products to a “what if” economy” (p. 6).
    The authors define this shift as an “inversion paradigm” that transforms systems
    thinking from a product-first to a needs-first perspective. So the question that
    needs to be asked is, “How can technology help us reimagine and fill a need?”
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本书迄今所讨论的那样，数字转型对分析与设计的主要影响是从设计着眼于满足特定用户需求的产品导向系统转变为更多地基于消费者需求！Bernardi等人([2017](#CR1))指出，“全球经济正迅速从产品经济转向“假如”经济”（第6页）
    。作者将这种转变定义为一种“反转范式”，将系统思维从以产品为先的视角转变为以需求为先的视角。因此，需要问的问题是，“技术如何帮助我们重新想象和满足需求？”
- en: While many IT professionals have historically supported this perspective, especially
    will agile and object design, it is the proliferation of IoT supported by 5G performance
    improvements that has made the world of possibilities feasible. In other words,
    IoT is at the center of the next wave of digital disruption and transformation
    as shown in Fig. [6.9](#Fig9).![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig9_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig9_HTML.png)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管许多IT专业人员历来支持这种观点，特别是在敏捷和对象设计方面，但是IoT得到了5G性能改进的支持，使得各种可能性成为现实。换句话说，IoT处于数字颠覆和转型的下一波浪潮的中心，如图 6.9所示。
- en: Fig. 6.9
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9
- en: IoT at the center
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: IoT处于中心
- en: Now that I have laid the foundation and architectural models for IoT, it is
    critical to focus on the new roles and responsibilities of the analyst in the
    IoT world. This will require further transformation from a product/user perspective
    to one that is more functional and predictive. This is particularly evident in
    IoT because a device can perform many functions and cater to various consumer
    and machine requests. Indeed, IoT analyst must design smart objects that can integrate
    what is real and digital can co-exist (Bernardi et al. [2017](#CR1)).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我已经为IoT奠定了基础和架构模型，集中关注IoT世界中分析员的新角色和责任至关重要。这将需要从产品/用户的角度转变到更具功能性和预测性的角度。这在IoT中尤为明显，因为一个设备可以执行许多功能并满足各种消费者和机器的请求。的确，IoT分析师必须设计智能对象，使真实和数字可以共存（Bernardi等人[2017](#CR1)）。
- en: 6.4 Sensors, Actuators, and Computation
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传感器、执行器和计算
- en: 'The IoT digital devices contain three major components and functions: sensors,
    actuators, and computation.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: IoT数字设备包含三个主要组成部分和功能：传感器、执行器和计算。
- en: 6.4.1 Sensors
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 传感器
- en: Analysts must provide or identify APIs in a sensor that can measure the physical
    world and logically convert the information into digital data. Sensors essentially
    capture information, do some types of measurement, record activity and then perform
    applications that transform the data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 分析师必须提供或识别传感器中能够测量物理世界并将信息逻辑转换为数字数据的API。传感器实质上是捕获信息，进行某些类型的测量，记录活动然后执行将数据转换的应用程序。
- en: 6.4.2 Actuators
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 执行器
- en: Actuators actually does the reverse function of a sensor, that is, it uses digital
    logic on the sensor and sends messages to a physical device. An example would
    be to send a message to shut down a device like an oven. Analysts must define
    the algorithms which provide a change in a state on a device and its response
    to the change. The response would typically be a machine-to-machine or machine-to-consumer
    message.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 执行器实际上执行与传感器相反的功能，即它在传感器上使用数字逻辑并向物理设备发送消息。例如，发送关闭烤箱等设备的消息。分析师必须定义提供设备状态变化及其对变化的响应的算法。响应通常是机器到机器或机器到消费者的消息。
- en: 6.4.3 Computation
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算
- en: Computation represents the computer logic that determines the behavior between
    sensors and actuators. This logic results from a device sensing a situation and
    then applying an algorithm that instructs the sensor to send a message to the
    actuator to perform a function. It’s like the instruction that results from pressing
    the ignition button on your car. The sensor receives a message and then checks
    the system to see if the engine in the car can safely engaged. The analyst would
    need to provide the data flow (Fig. [6.10](#Fig10)) and also define the logic
    of the steps to take before engaging the engine. This logic likely would check
    the automatic transmission to ensure it is in the “Park” state before allowing
    the engine to be started. This algorithm would be part of the process specification
    of a use case.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig10_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig10_HTML.png)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 计算表示确定传感器和执行器之间行为的计算机逻辑。此逻辑是由设备感知情况然后应用指令的算法产生的，该指令指示传感器发送消息给执行器执行某项功能。这就像按下汽车的点火按钮后所产生的指令。传感器接收到消息然后检查系统，看看汽车的发动机是否可以安全启动。分析师需要提供数据流并定义引擎启动前要执行的步骤的逻辑。这种逻辑通常会检查自动变速器，以确保其处于“停车”状态，然后才允许启动发动机。此算法将是用例过程规范的一部分。
- en: Fig. 6.10
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.10
- en: Data flow diagram represented the computation to start a car engine
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数据流图表示启动汽车发动机的计算。
- en: 6.5 Connectivity
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连通性
- en: The analyst must also provide definitions for IoT devices that are always connected.
    Such devices are always operating and initiate messages when a state changes.
    For example, if the temperature drops below 50% it might require the sensor to
    send a message to the heat device to start the heat unit. Of course, the internet
    provides the digital highway that allows these types of activities to occur over
    distances. Once again, we see how state transition diagrams can be an effective
    flow tool for defining logic for constant operating IoT devices.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 分析师还必须为始终连接的物联网设备提供定义。这些设备始终在运行，并在状态发生变化时发起消息。例如，如果温度降到 50% 以下，则可能需要传感器向加热设备发送消息以启动加热单元。当然，互联网提供了数字高速公路，允许这些类型的活动在距离上发生。再次，我们看到状态转换图可以是定义常量操作物联网设备逻辑的有效流程工具。
- en: 6.6 Composability
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.6 可组合性
- en: Another interesting capability with IoT devices is their ability to communicate
    with each other directly thru the internet. Device to Device connectivity allows
    users to monitor their own systems and use a monitoring device to directly tell
    another device to do something. Smartphones are great examples of a monitoring
    device. Installing software to monitor the temperature in your house remotely
    for example. Composability also allows users to mix multiple monitoring communications
    without asking for the developer or company to make a modification. Your smartphone
    device can actually communicate with multiple other devices and in cases with
    open source can combine commands—increase temperature and also lower lights and
    put on music for instance.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备的另一个有趣功能是它们能够直接通过互联网与彼此通信。设备到设备的连接允许用户监视其自己的系统，并使用监视设备直接告诉另一个设备要执行的操作。智能手机是监视设备的绝佳示例。例如，远程安装软件监控您家中的温度。可组合性还允许用户混合多个监视通信而无需要求开发者或公司进行修改。您的智能手机设备实际上可以与多个其他设备进行通信，在开源情况下可以结合命令，例如提高温度，降低灯光并播放音乐。
- en: 'The analysis of connectivity and composability are dependent on two types of
    architectures: mediation and API.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 连通性和可组合性的分析依赖于两种类型的架构：中介和 API。
- en: Mediation
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 中介
- en: While having devices talk to other devices seems attractive, it does have disadvantages.
    Having separate machine-to-machine (M2M) capabilities can cause conflict among
    devices and can affect the overall performance in the network. Therefore, having
    a “mediator” device residing in the cloud is actually a preferable solution. The
    mediator approach is similar to a star topology where the mediator is in the center
    and each device is a “spoke” as shown in Fig. [6.11](#Fig11).![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig11_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig11_HTML.png)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管让设备与其他设备进行通信看起来很有吸引力，但它确实有缺点。拥有单独的机器对机器（M2M）功能可能会导致设备之间发生冲突，并且可能会影响网络的整体性能。因此，实际上，将“中介”设备驻留在云中是一种更可取的解决方案。中介方法类似于星型拓扑，其中中介位于中心，每个设备都是一个“辐射”，如图 [6.11](#Fig11)
    所示。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig11_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig11_HTML.png)
- en: Fig. 6.11
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11
- en: IoT star topology using a mediator
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用中介的物联网星型拓扑
- en: Another benefit of a mediator is the simplification it brings when adding new
    devices or updating existing ones. This allows the mediator to act as a centralized
    hub that can coordinate all new software updates by tracking all devices across
    the network. The analyst may need to design a mediator or obtain a third-party
    product.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 中介的另一个好处是在添加新设备或更新现有设备时带来的简化。这使得中介可以充当一个集中的中心，可以通过跟踪网络上的所有设备来协调所有新软件更新。分析师可能需要设计一个中介或获取第三方产品。
- en: Suitable APIs
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的 API
- en: The design of the API is significant as it is the controlling software that
    holds the architecture of IoT together. The analyst should consider accumulating
    all the features and functions needed and then designing an inventory of APIs
    which would be stored in the mediator. The mediator, in effect, becomes the shopping
    outlet of all applications needed across the network. The other advantage of this
    design approach relates to the need to add new applications to the system. The
    mediator can simply be updated and used to distribute the new program to the relevant
    devices.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: API 的设计非常重要，因为它是控制着物联网架构的软件。分析人员应该考虑积累所需的所有功能和功能，然后设计一个 API 清单，该清单将存储在中介者中。中介者实际上成为网络中所有应用程序的购物中心。这种设计方法的另一个优点与向系统添加新应用程序的需要有关。中介者可以简单地更新并用于将新程序分发到相关设备。
- en: 6.7 Recruitability
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.7 招聘能力
- en: The idea of recruitability is closely aligned with reusability and polymorphism.
    Simply put it allows devices to be used for different applications. For example,
    a device that turns on an engine in a car, could be “recruited” by another operation
    that could initiate different types of operation that replicate the logic of turning
    on an engine. This supports functional decomposition, object-oriented analysis,
    and common API libraries. This also requires documentation of the functional primitive
    in the form of a process specification. Furthermore, the documentation should
    also include the routines abilities to be reused in other contexts. Finally, there
    are instances where a group of primitives can be combined to create functional
    and reusable sensors, actuators, and communication devices. This is a tradeoff
    decision as it establishes devices with very focused capabilities but with higher
    reusability.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 招聘能力的概念与可重用性和多态性密切相关。简单地说，它允许设备用于不同的应用程序。例如，一台打开汽车发动机的设备可以被另一个操作“招募”，该操作可以启动不同类型的操作，复制打开发动机的逻辑。这支持功能分解、面向对象分析和公共
    API 库。这还需要以流程规范的形式记录功能原语。此外，文档还应包括例程在其他上下文中重新使用的能力。最后，有些原语的组合可以创建功能性和可重用的传感器、执行器和通信设备。这是一种权衡决策，因为它建立了具有非常专注能力但具有更高可重用性的设备。
- en: 6.8 A Word About IoT Security and Privacy
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.8 关于物联网安全性和隐私性的一点说明
- en: The analyst must of course be concerned with the security and privacy of any
    IoT device used on the network. The analyst in these circumstances must consider
    all the possible functions of the device and determined and its level of security
    exposure. I will cover much more on this topic in Chap. [9](480347_1_En_9_Chapter.xhtml).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 分析人员当然必须关注网络上使用的任何物联网设备的安全性和隐私性。在这种情况下，分析人员必须考虑设备的所有可能功能，并确定其安全风险水平。我将在第九章中更详细地讨论这个话题。[9](480347_1_En_9_Chapter.xhtml)。
- en: 6.9 Immersion
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.9 沉浸
- en: Immersion is a device’s ability to be shared. Indeed, devices can share its
    processes with other requestors if the device is available. Thus, immersion is
    a form of recruitment and is very useful when the original intended device is
    too distant in the network or is malfunctioning. The most important factor in
    immersion is the ability to discover available resources or devices. This can
    be associated with a smartphone when you “pair” it using Bluetooth technology.
    The analyst needs to define the context of a device’s requests so that a receiving
    device can determine its ability to be recruited. This involves some level of
    intelligent messaging capability among a family of devices that can be joined
    under a common communication protocol.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 沉浸是设备共享的能力。事实上，如果设备可用，设备可以与其他请求者共享其进程。因此，沉浸是一种招聘形式，在原始意图的设备在网络中太远或故障时非常有用。沉浸中最重要的因素是发现可用资源或设备的能力。这可以与智能手机相关联，当您使用蓝牙技术进行“配对”时。分析人员需要定义设备请求的上下文，以便接收设备可以确定其被招募的能力。这涉及一定水平的智能消息传递能力，在一个能够在共同通信协议下加入的设备家族之间。
- en: 'Given the power of immersion the analyst must address several complexities:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于沉浸的力量，分析人员必须解决几个复杂性问题：
- en: '*Discoverability*: not all devices can be accessed without considering certain
    levels of authorization. These are called static devices which essentially require
    both linked devices going through acceptance setup or what is typically known
    as a handshake. These handshakes ordinarily have two pieces, compatibility of
    the sharing; and identification check. Dynamic devices, on the other hand, can
    be linked automatically without agreement. Security in these devices, however,
    can also require some levels of authorization to gain access.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*发现性*：并非所有设备都可以在不考虑某些级别的授权的情况下访问。这些被称为静态设备，实质上需要两台连接设备通过接受设置或通常被称为握手的方式。这些握手通常有两个部分，分享的兼容性；和身份检查。另一方面，动态设备可以自动连接而无需同意。然而，这些设备的安全性也可能需要一定级别的授权才能访问。'
- en: '*Context*: this requires definitions of “what else” a device needs to communicate.
    For example, if a car device is linked to a toll booth it might also want to communicate
    more things about the environment, like direction, speed, license plate, time
    of day, date, etc.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*背景*：这需要定义设备需要传输的“其他”内容。例如，如果汽车设备连接到收费站，它可能还想传输有关环境的更多信息，如方向、速度、车牌、时间、日期等。'
- en: '*Orchestration*: this is typically a program that tracks all activity among
    the devices connected to the system. In many ways, orchestration can be compared
    to mediation in that it is a central repository of behavior among the devices.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编排*：这通常是一个跟踪连接到系统的设备之间所有活动的程序。在许多方面，编排可以与调解相比较，因为它是设备行为的中央存储库。'
- en: '*Recruitment of Non*-*Digital Objects*: not all objects are digital-based.
    As a result, non-digital objects like food need an indirect method to track and
    communicate with them. Typical indirect objects include RFID tagging, barcodes,
    and digital watermarks (that uses shades of color).'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*招募非*-*数字对象*：并非所有对象都是基于数字的。因此，非数字对象如食物需要一种间接的方法来跟踪和与它们通信。典型的间接对象包括RFID标记、条形码和数字水印（使用颜色的色调）。'
- en: '*Predictive Maintenance*: another unique feature of smart IoT devices is their
    ability to self-test and communicate conditions that require levels of maintenance.
    Using the network, devices can provide valuable feedback regarding their operating
    status so that various kinds of maintenance can be accomplished in a timely manner.
    These preventive maintenance capabilities all need to be part of the process specification
    which links hardware behavior and conditions with software intelligence.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*预测性维护*：智能物联网设备的另一个独特功能是它们具有自我测试并传达需要维护的条件的能力。使用网络，设备可以提供有关其操作状态的宝贵反馈，以便各种类型的维护可以及时完成。所有这些预防性维护能力都需要成为过程规范的一部分，该规范将硬件行为和条件与软件智能联系起来。'
- en: It should be obvious that the IoT analyst must be fully equipped to deal with
    the myriad of details that are not only limited to traditional software design,
    but deeply extended to include behaviors of intelligent hardware devices.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 很显然，物联网分析师必须充分装备，以处理不仅限于传统软件设计的各种细节，而且深入扩展到包括智能硬件设备行为在内的细节。
- en: 6.10 The IoT SDLC
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.10 物联网软件开发生命周期（IoT SDLC）
- en: Many and certainly all existing organizations will need to determine how best
    to move forward in assimilating IoT. This will, in addition to many organizational
    changes, require an SDLC that addresses many of the needs discussed in this chapter.
    Thus, the need to modify or establish a lifecycle that managers and staff can
    follow.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 许多，甚至所有现有组织都需要确定如何最好地前进以吸收物联网。除了许多组织变革之外，这还需要一种SDLC，其中包含本章讨论的许多需求。因此，需要修改或建立一个生命周期，管理人员和员工可以遵循。
- en: '1.'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Go through Object-Orientation and create functional primitives to API specifications.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经过对象取向并创建API规范的功能原语。
- en: '2.'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: Move or create Process Specifications.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 移动或创建过程规范。
- en: '3.'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Identify new and existing data elements.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 识别新的和现有的数据元素。
- en: '4.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: Update (2) and (3) with any new functions based on existing and/or possible
    consumer experiences.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据现有和/或可能的消费者体验更新（2）和（3）中的任何新功能。
- en: '5.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: Design API equivalents.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设计API等效物。
- en: '6.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '6.'
- en: Add available third-party APIs.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加可用的第三方API。
- en: '7.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '7.'
- en: Map to IoT devices.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射到物联网设备。
- en: '8.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '8.'
- en: Select IoT configurations and interfaces based on type of device (sensor, actuator,
    computation).
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据设备类型（传感器、执行器、计算）选择物联网配置和接口。
- en: '9.'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '9.'
- en: Determine AI and ML functions.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定人工智能和机器学习功能。
- en: '10.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '10.'
- en: Select type of I/O device communication functions.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择I/O设备通信功能类型。
- en: '11.'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '11.'
- en: Design communication APIs or use third-party libraries.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设计通信 API 或使用第三方库。
- en: '12.'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '12.'
- en: Add/modify data element definitions to be added to data dictionary including
    dependencies.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加/修改要添加到数据字典的数据元素定义，包括依赖项。
- en: '13.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '13.'
- en: Consider connections to non-digital products using indirect connections (RFID).
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑使用间接连接（RFID）连接到非数字产品。
- en: '14.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '14.'
- en: Determine needed API and data on the Fog or Edge.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定雾端或边缘所需的 API 和数据。
- en: 6.11 Transitioning to IoT
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.11 转向物联网
- en: 'The way most businesses will ultimately implement IoT is through what Sinclair
    ([2017](#CR3)) coined the “IoT Business Model Continuum.” This model suggests
    that most companies cannot just overhaul their entire systems, rather they must
    start with their core and established business model and add the value of IoT
    over a period of time as shown in Fig. [6.12](#Fig12). The continuum eventually
    leads to the most important objective: business outcomes. Figure [6.12](#Fig12)
    example defines maximum business outcomes as the highest “per surgical profit”
    attainable. It accomplishes this maximized business outcomes by a gradual movement
    to efficiency by improving product-service, then service in general, to service-outcomes,
    before finally reaching per unit profits.![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig12_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig12_HTML.png)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数企业最终将实施物联网的方式是通过辛克莱（[2017](#CR3)）所称的“物联网商业模式连续性”。该模型建议大多数公司不能只是彻底改变他们的整个系统，而是必须从他们的核心和已建立的业务模型开始，并随着时间的推移逐步增加物联网的价值，如图 [6.12](#Fig12)
    所示。连续性最终导致最重要的目标：业务成果。图 [6.12](#Fig12) 的示例将最大业务成果定义为可达到的最高“每手术利润”。通过逐步提高产品服务的效率，然后是一般服务，再到服务结果，最后实现单位利润，从而实现了最大化的业务成果。![../images/480347_1_En_6_Chapter/480347_1_En_6_Fig12_HTML.png](../images/480347_1_En_6_Chapter/480347_1_En_6_Fig12_HTML.png)
- en: Fig. 6.12
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Fig. 6.12
- en: Example of IoT Business Model Continuum. *Source* Sinclair ([2017](#CR3))
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网商业模式连续性的示例。*来源* 辛克莱（[2017](#CR3)）
- en: 6.11.1 Summary
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.11.1 摘要
- en: 'The challenge with Sinclair’s model is that time may not be as available as
    companies think. We have experienced what digital disruption can do in an accelerated
    timeframe. Companies in the past that have delayed efforts to go digital have
    failed. The list us getting long in fact: Toys-R-Us, Nokia, and Sears certainly
    come to mind. CEOs and Boards must pay attention to what has occurred in the retail
    industry, which historically spent only 2% of their gross revenues on information
    technology. What is even more serious is what recently happened at GE. GE invested
    in a division of the company called GE-Digital which was designed to provide new
    types of digital services to its customers. Their initial effort has failed because
    the established business units used the new digital division to support its legacy
    needs. Bottom line GE never generated the forecasted revenues from new business.
    The message here is to be careful with the existing and dominant core businesses;
    it appears historically such units tend to unconsciously do everything they can
    to preserve the old way of doing things! Remember that many people feel that the
    majority of IoT products will be developed without a plan!'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 辛克莱模型的挑战在于公司认为的时间可能不像他们想的那样充裕。我们已经经历了数字颠覆在加速时间框架内所能带来的影响。过去推迟数字化努力的公司已经失败。事实上，名单越来越长：玩具反斗城、诺基亚和西尔斯无疑会让人想起。CEO
    和董事会必须关注零售行业发生的事情，历史上他们只将 2% 的总收入用于信息技术。更严重的是最近发生在 GE 的事情。GE 投资于公司的一个部门叫做 GE-Digital，旨在为其客户提供新类型的数字服务。他们最初的努力失败了，因为现有的业务部门利用新的数字部门来支持其传统需求。归根结底，GE
    从新业务中没有产生预期的收入。这里的信息是要小心现有和主导的核心业务；历史上这样的部门倾向于无意识地竭尽所能地保留旧的做事方式！记住，许多人认为大多数物联网产品将在没有计划的情况下开发！
- en: Next we need to understand Blockchain analysis and design and its contribution
    to security!
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要了解区块链分析与设计及其对安全性的贡献！
