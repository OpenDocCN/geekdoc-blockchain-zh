- en: A. Getting Started with CyberMiles
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一. 开始使用 CyberMiles
- en: CyberMiles is an Ethereum-compatible public blockchain with delegated proof-of-stake
    (DPoS) consensus. While it brings many feature enhancements to the Ethereum ecosystem,
    it can also serve as a much faster, much cheaper, and more reliable alternative
    to the Ethereum blockchain. All Ethereum smart contracts can run without modification
    on the CyberMiles blockchain. Furthermore, the CyberMiles ecosystem has easy-to-use
    developer tools that are improved versions of their Ethereum counterparts. Therefore,
    CyberMiles is a good choice for you to learn the Ethereum protocol and get started
    with application development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CyberMiles 是一个支持委托权益证明（DPoS）共识的以太坊兼容公共区块链。虽然它为以太坊生态系统带来了许多功能增强，但它也可以作为一个更快、更便宜、更可靠的以太坊区块链替代品。所有以太坊智能合约都可以在
    CyberMiles 区块链上无需修改地运行。此外，CyberMiles 生态系统拥有易于使用的开发者工具，这些工具是其以太坊对应工具的改进版本。因此，CyberMiles
    是你学习以太坊协议和开始应用开发的不错选择。
- en: While there are many tools that can get you quickly started with Lity, smart
    contracts, and dapp development on the CyberMiles public blockchain, to really
    learn how the blockchain works, you should start a node and synchronize it with
    the blockchain network. The node can run on a server or even on your own laptop
    if needed. In this appendix, I will describe how to run a CyberMiles node using
    Docker and how to interact with the node using command-line tools.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有许多工具可以帮助您快速开始在 CyberMiles 公共区块链上使用 Lity 智能合约和 dapp 开发，但为了真正了解区块链如何工作，您应该启动一个节点并将其与区块链网络同步。节点可以在服务器上运行，甚至可以在需要时在您自己的笔记本电脑上运行。在本附录中，我将描述如何使用
    Docker 运行 CyberMiles 节点以及如何使用命令行工具与节点交互。
- en: Deploy a Node
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署 Node
- en: 'The quickest way to deploy a CyberMiles node is to use Docker for the latest
    node software and to use a snapshot for the up-to-date blockchain data. The following
    instructions show you how to build a CyberMiles testnet node. First, you have
    to install the Docker software: [https://docs.docker.com/install/](https://docs.docker.com/install/).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 CyberMiles 节点的最快方法是使用 Docker 获取最新的节点软件并使用快照获取最新的区块链数据。以下说明将指导你如何构建一个 CyberMiles
    测试网节点。首先，你必须安装 Docker 软件：[https://docs.docker.com/install/](https://docs.docker.com/install/)。
- en: A Docker image for Travis is stored on Docker Hub. The testnet environment uses
    the `vTestnet` release, which can be pulled automatically from Travis.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Docker Hub 上存储了用于 Travis 的 Docker 镜像。测试网环境使用 `vTestnet` 版本，可以从 Travis 自动拉取。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_1)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 请[点击此处查看代码图片](Images/app_images.xhtml#pro_a_1)
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, let’s download the blockchain configuration and data into a local directory,
    `$HOME/.travis`, which we can then make accessible to the Docker container. The
    configuration files are here:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们将区块链配置和数据下载到本地目录 `$HOME/.travis` 中，这样我们就可以将其对 Docker 容器可见。配置文件在这里：
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_2)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请[点击此处查看代码图片](Images/app_images.xhtml#pro_a_2)
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You should edit the `config.toml` file to change the node’s name to your own.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该编辑 `config.toml` 文件，将节点名称更改为你自己的。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_3)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 请[点击此处查看代码图片](Images/app_images.xhtml#pro_a_3)
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, download the latest block data snapshot here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，从这里下载最新的区块数据快照：
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_4)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 请[点击此处查看代码图片](Images/app_images.xhtml#pro_a_4)
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Extract the tar file and copy the `data` and `vm` subdirectories from the uncompressed
    directory to `$HOME/.travis.` Finally, start the Docker container by mapping the
    local computer’s `$HOME/.travis` directory to the Docker container’s `/travis`
    directory.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 解压 tar 文件，并将 `data` 和 `vm` 子目录从解压缩的目录复制到 `$HOME/.travis`。最后，通过将本地计算机的 `$HOME/.travis`
    目录映射到 Docker 容器的 `/travis` 目录来启动 Docker 容器。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_5)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请[点击此处查看代码图片](Images/app_images.xhtml#pro_a_5)
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can start a CyberMiles mainnet node using a similar process. The only difference
    is that the configuration and blockchain data download URLs. You can learn more
    at [https://travis.readthedocs.io/en/latest/connect-mainnet.html](https://travis.readthedocs.io/en/latest/connect-mainnet.html).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用类似的过程启动 CyberMiles 主网节点。唯一不同的是配置和区块链数据下载 URL。你可以在 [https://travis.readthedocs.io/en/latest/connect-mainnet.html](https://travis.readthedocs.io/en/latest/connect-mainnet.html)
    了解更多。
- en: Interactive Console on the Node
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Node 上进行交互式控制台
- en: 'Once a CyberMiles node is synchronized to the blockchain, you can use the Travis
    program to connect to it and send commands and interactions to the network. All
    you need to do is to attach the `travis` command to the node. The following command
    should be run on the same computer as Docker:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦CyberMiles节点与区块链同步，你可以使用Travis程序连接到它，并向网络发送命令和交互。你只需要将`travis`命令附加到节点。以下命令应该在运行Docker的同一台计算机上运行：
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_6)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_6)'
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Note**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: Never expose port 8545 outside the firewall when you have the `personal` module
    enabled. Hackers will be able to steal all your cryptocurrencies stored on the
    node if you do so.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启用`personal`模块时，永远不要将端口8545暴露在防火墙外。如果你这样做，黑客将能够窃取存储在节点上的所有加密货币。
- en: Travis opens an interactive console in the new terminal, and you can use the
    `web3-cmt` JavaScript API to access the blockchain. For instance, the following
    commands will create a new account to hold virtual currency on this network. Just
    repeat the `newAccount()` command a few times, and you will see a few accounts
    in the `cmt.accounts` list. As mentioned earlier, each account consists of a pair
    of private and public keys. Only the public key is recorded on the blockchain
    in each transaction that involves this account.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Travis在新终端中打开一个交互式控制台，你可以使用`web3-cmt` JavaScript API来访问区块链。例如，以下命令将在这个网络上创建一个新的账户来持有虚拟货币。只需重复几次`newAccount()`命令，你将在`cmt.accounts`列表中看到几个账户。如早前所述，每个账户都包含一对私钥和公钥。在涉及此账户的每笔交易中，只记录公钥在区块链上。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_7)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_7)'
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When you create or unlock accounts from the Travis console, the private key
    of the account is stored in the keystore file on the attached node’s file system.
    Next, you can send some of your CMT from one account to another. Or, if your node
    is on the testnet, you can get some testnet CMT from the faucet at [https://travis-faucet.cybermiles.io/](https://travis-faucet.cybermiles.io/).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从Travis控制台创建或解锁账户时，账户的私钥存储在与附加节点文件系统上的keystore文件中。然后，你可以将一些CMT从一个账户发送到另一个账户。或者，如果你的节点在测试网
    上，你还可以从[https://travis-faucet.cybermiles.io/](https://travis-faucet.cybermiles.io/)获取一些测试网CMT。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_8)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_8)'
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The last line is the transaction ID for the transaction to send 0.05 CMT between
    the two accounts. In the next example, let’s see how to build and deploy a smart
    contract and then call its function.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行是向两个账户之间发送0.05 CMT的交易ID。在下一个例子中，让我们看看如何构建并部署智能合约，然后调用其函数。
- en: 'To build a smart contract from source, you can use the Europa integrated development
    environment (IDE). Or, you can use the command-line `lityc` compiler, which provides
    more advanced features than Europa, such as security and compliance checks (see
    [Chapter 15](ch15.xhtml#ch15)). The goal is the same: to generate application
    binary interface (ABI) and bytecode from the Lity/Solidity source code so that
    they can be deployed on the blockchain. Let’s see how to use `lityc` for this
    purpose. You can install `lityc` following the instructions at [https://lity.readthedocs.io/](https://lity.readthedocs.io/).
    The following commands generate the bytecode and ABI definition from the `HelloWorld.lity`
    source code:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要从源代码构建智能合约，你可以使用Europa集成开发环境（IDE）。或者，你可以使用命令行`lityc`编译器，它比Europa提供更多高级功能，如安全和合规性检查（参见[第15章](ch15.xhtml#ch15)）。目标是一样的：从Lity/Solidity源代码生成应用程序二进制接口（ABI）和字节码，以便它们可以部署在区块链上。让我们看看如何为此目的使用`lityc`。你可以按照[https://lity.readthedocs.io/](https://lity.readthedocs.io/)的说明安装`lityc`。以下命令从`HelloWorld.lity`源代码生成字节码和ABI定义：
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_9)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_9)'
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: On the Travis console, you can now deploy the contract bytecode and ABI to the
    CyberMiles blockchain.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在Travis控制台上，你现在可以部署CyberMiles区块链上的合约字节码和ABI。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_10)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_10)'
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Once the contract is deployed with a confirmation from the blockchain, you will
    see its contract address printed on the console. You can now call its functions.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦合约在区块链上部署并获得确认，你将在控制台上看到其合约地址。你现在可以调用其函数。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_11)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_11)'
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Alternatively, you can get the contract instance from its deployed address and
    then call its functions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，您还可以从其部署地址获取合约实例，然后调用其函数。
- en: '[Click here to view code image](Images/app_images.xhtml#pro_a_12)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此处查看代码图片](Images/app_images.xhtml#pro_a_12)'
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The Travis console provides reliable and interactive access to the CyberMiles
    blockchain. We highly recommend you get familiar with it and use it to explore
    the blockchain.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Travis控制台为用户提供可靠且互动的CyberMiles区块链访问方式。我们强烈建议您熟悉并使用它来探索区块链。
- en: Conclusion
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: The CyberMiles blockchain is optimized for e-commerce applications. It is fully
    compatible with the Ethereum blockchain yet is much faster, cheaper, and safer.
    It has a full suite of development and deployment tools to facilitate smart contract
    and dapp development. Hence, the CyberMiles blockchain is an excellent alternative
    to get started with Ethereum application development and beyond.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: CyberMiles区块链针对电子商务应用进行了优化。它与以太坊区块链完全兼容，但速度更快、成本更低、更安全。它拥有完整的一套开发和部署工具，以促进智能合约和dapp的开发。因此，CyberMiles区块链是开始以太坊应用开发和更广泛应用的绝佳选择。
