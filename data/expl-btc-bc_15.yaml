- en: '[CHAPTER 13](toc.xhtml#c13)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[第 13 章](toc.xhtml#c13)'
- en: '[Lightning Network](toc.xhtml#c13)'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[闪电网络](toc.xhtml#c13)'
- en: In the previous chapter, you learned about an important enhancement called **Segregated
    Witness**. The enhancement eliminated the possibility of transaction malleability
    by moving the signature out of transaction ID calculation. This improvement helped
    exchanges and wallets by enhancing their security.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您了解了一个重要的增强功能，称为 **隔离见证**。这个增强功能通过将签名从交易 ID 计算中移出来，消除了交易篡改的可能性。这一改进通过增强其安全性，帮助了交易所和钱包。
- en: The enhancement also opened the possibility of secure off-chain transaction,
    leading to development of layer two protocols such as **Lightning Network**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这一增强功能还打开了安全链下交易的可能性，导致了第二层协议的发展，比如 **闪电网络**。
- en: 'In this chapter, we will cover the most successful layer two protocol, called
    Lightning Network. Lightning Network is based on the creation of channels by adding
    fund of both parties and performing off-chain transaction. This was first conceptualized
    by *Satoshi Nakamoto* himself. Later in 2015, it was first proposed by *Thaddeus
    Dryja* and *Joseph Poon* in a paper titled **The Bitcoin Lightning Network. The
    paper is available for public at** the **following** weblink:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍最成功的第二层协议，称为闪电网络。闪电网络是通过添加双方资金并执行链下交易来创建通道的。这最初是由 *中本聪* 本人构想的。稍后在
    2015 年，*Thaddeus Dryja* 和 *Joseph Poon* 在一篇题为 **比特币闪电网络** 的论文中首次提出了这一概念。该论文公开发表于以下链接：
- en: '**[https://lightning.network/lightning-network-paper.pdf](https://lightning.network/lightning-network-paper.pdf)**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**[https://lightning.network/lightning-network-paper.pdf](https://lightning.network/lightning-network-paper.pdf)**'
- en: A few months after SegWit was activated in October 2017, Lightning Labs launched
    the beta version of Lightning Network in March 2018.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月后，SegWit 在 2017 年 10 月激活后，闪电实验室在 2018 年 3 月推出了闪电网络的 beta 版本。
- en: Lightning Network works by routing payments over Lightning node channels. The
    more widespread the network, the better is the user experience. Due to this, its
    growth has been parabolic, slow in the beginning and rapid now. To help the technology
    grow, a pseudonymous Twitter user launched Lightning Torch in January 2019\. It
    was based on the concept of relay race in Olympics. It was quite successful and
    lasted for 4 months, but beyond that, adoption remained slow at the global scale.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络通过在闪电节点通道上路由支付来运作。网络越广泛，用户体验就越好。因此，它的增长呈抛物线，一开始缓慢，现在迅速。为了帮助技术增长，一个化名的 Twitter
    用户在 2019 年 1 月推出了闪电火炬。它基于奥运会中的接力赛的概念。它非常成功，并持续了 4 个月，但在那之后，全球范围内的采用仍然缓慢。
- en: Things changed in 2021 because of more than 2 years of work of Bitcoin Beach,
    a surfing community, and Jack Mallers’ launch of strike, a Lightning Network wallet,
    in *El Salvador*. After that, Bitcoin got Legal Tender status with the support
    of *Nayib Bukele*, the president of *El Salvador*. Additionally, Chivo, a Lightning
    Network wallet, was launched by the government, covering whole country of more
    than a million people in *El Salvador*. Since then, Lightning adoption has been
    rapid.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2021年发生了一些变化，因为比特币海滩，一个冲浪社区，进行了两年多的工作，以及杰克·马勒斯在*萨尔瓦多*推出了闪电网络钱包 strike。之后，在*萨尔瓦多*总统*纳伊布·布凯莱*的支持下，比特币获得了法定货币地位。此外，政府推出了
    Chivo，一个覆盖*萨尔瓦多*全国超过一百万人口的闪电网络钱包。自那时以来，闪电采用一直很快。
- en: In 2021, Twitter also integrated Lightning payment.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 2021年，Twitter 也集成了闪电支付。
- en: Lightning Network is an essential element to build circular economy based on
    Bitcoin. In this chapter, you will learn what makes Lightning Network so special.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络是构建基于比特币的循环经济的重要元素。在本章中，您将了解到什么使闪电网络如此特殊。
- en: '[Structure](toc.xhtml#s273a)'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[结构](toc.xhtml#s273a)'
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Simplified working of Lightning Network
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电网络的简化工作原理
- en: Payment between connected peers
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接的节点之间的支付
- en: Payment though multiple channels
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过多个通道进行支付
- en: Bolt specifications
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bolt 规范
- en: Contracts involved in Lightning Network
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电网络中涉及的合约
- en: Offline payments between connected peers
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接的节点之间的离线支付
- en: Channel creation
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道创建
- en: '![](images/ent.jpg) Instant or turbo channels'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![](images/ent.jpg) 即时或涡轮通道'
- en: Offline transactions
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 离线交易
- en: Channel closure
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道关闭
- en: '![](images/ent.jpg) Mutually agreed close'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![](images/ent.jpg) 双方协商关闭'
- en: '![](images/ent.jpg) Unilateral close'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![](images/ent.jpg) 单方关闭'
- en: '![](images/ent.jpg) Revoked transaction closure'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![](images/ent.jpg) 撤销的交易关闭'
- en: Bidirectional dual funded channel
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双向双资助通道
- en: Channel creation
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道创建
- en: Offline payments involving intermediaries
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 涉及中介的离线支付
- en: Monitoring of channels
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道监控
- en: Watchtower
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 观察塔
- en: Drawback of justice transaction
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公正交易的缺点
- en: Routing mechanism and considerations
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由机制和考虑因素
- en: Trampoline nodes
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蹦床节点
- en: Channel management
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道管理
- en: Circular rebalancing
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环再平衡
- en: Splicing
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拼接
- en: Lightning Loop or submarine swaps
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电循环或潜水交换
- en: Multi-Part Payments or MPP
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多部分支付或 MPP
- en: End user experience
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终用户体验
- en: Lightning wallets
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电钱包
- en: Lightning invoice
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电发票
- en: LNURL
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LNURL
- en: Merchant integration
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商家集成
- en: Social media integrations
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社交媒体集成
- en: Adoption by exchanges
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易所的采用
- en: Other cryptocurrencies
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他加密货币
- en: Cross-chain atomic swap
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨链原子交换
- en: Network topology
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络拓扑结构
- en: '[Objectives](toc.xhtml#s274a)'
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[目标](toc.xhtml#s274a)'
- en: In this chapter, we will focus on learning about Lightning Network and touch
    upon its internals a bit. Lightning Network protocol specifications are defined
    as the BOLT specifications. Each BOLT specification defines specific network abstraction.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点介绍闪电网络并稍微涉及其内部。闪电网络协议规范被定义为BOLT规范。每个BOLT规范都定义了特定的网络抽象。
- en: Bitcoin network only contributes to Lightning Network by providing scripting
    opcodes in the same way a computer microprocessor provides machine instructions
    to high-level language compilers. As a result, Lightning Network can add complexity
    without needing changes in the base layer.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币网络只通过提供脚本操作码来为闪电网络做出贡献，就像计算机微处理器为高级语言编译器提供机器指令一样。因此，闪电网络可以增加复杂性，而无需更改基础层。
- en: Consequently, the development in Lightning Network is quite dynamic, and the
    protocol is evolving rapidly, allowing improvement and extension of use-cases.
    This requires quicker software development and testing cycle, which is different
    from the way Bitcoin development happens.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，闪电网络的发展非常动态，协议正在迅速演进，允许改进和扩展用例。这需要更快的软件开发和测试周期，这与比特币开发的方式不同。
- en: Since Lightning Network is quite a wide and dynamic topic, there is a possibility
    that by the time the readers will be reading this chapter, there are already quite
    a few changes in the specifications. We will try to cover as much as possible
    within the limits of this chapter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于闪电网络是一个广泛而动态的主题，读者在阅读本章时，规范可能已经发生了相当多的变化。我们将尽量在本章的范围内涵盖尽可能多的内容。
- en: '[Simplified working of Lightning Network](toc.xhtml#s275a)'
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[闪电网络的简化工作原理](toc.xhtml#s275a)'
- en: We discussed Lightning Network in *[Chapter 4, Bitcoin in the Real World](c04.xhtml)*
    under a highlighted section of *Lightning Network*.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*[第四章，比特币在现实世界中](c04.xhtml)*的*闪电网络*突出部分中讨论了闪电网络。
- en: 'The following is the summary of what you learned in *[Chapter 4, Bitcoin in
    the Real World](c04.xhtml)*:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你在*[第四章，比特币在现实世界中](c04.xhtml)*中学到的内容的摘要：
- en: Two parties create a channel by locking their bitcoins.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个参与方通过锁定比特币来创建通道。
- en: Any party can send bitcoins to the other party if the current balance on their
    side of the channel still has funds.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果通道当前的余额仍然有资金，任何一方都可以向另一方发送比特币。
- en: Payment between the parties is peer-to-peer and does not involve the Bitcoin
    network.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双方之间的支付是点对点的，不涉及比特币网络。
- en: Any party can close the channel anytime by broadcasting the final cumulative
    transaction over the Bitcoin network.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何一方都可以随时通过在比特币网络上广播最终累积交易来关闭通道。
- en: This is the simplest view of Lightning payment between two parties. Since Lightning
    Network is a complex protocol, it is lot more than simple peer to peer payment.
    This time, we are going deeper into the working of protocol.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是两个参与方之间闪电支付的最简单视图。由于闪电网络是一个复杂的协议，它不仅仅是简单的点对点支付。这一次，我们将深入研究协议的工作原理。
- en: '[Payment between connected peers](toc.xhtml#s276a)'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[连接的对等方之间的支付](toc.xhtml#s276a)'
- en: If Amazon had the option to pay with lightning as a buyer or seller, we could
    open a channel and continue making transaction with Amazon till there is balance
    in the channel.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果亚马逊作为买家或卖家有使用闪电支付的选项，我们就可以打开一个通道，并直到通道中有余额，就可以继续与亚马逊进行交易。
- en: As an example, Alice creates a channel with milk vendor Bob by loading 0.001![](images/Bitcoin.jpg)
    at her side. In this case, Alice uses UTXOs to fund a transaction that is paying
    2-of-2-multisig contract. This transaction needs to pay network fees and be confirmed
    by getting included in the Bitcoin blockchain.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，Alice通过向她的一边加载0.001![](images/Bitcoin.jpg)与卖奶的Bob创建了一个通道。在这种情况下，Alice使用UTXOs来资助一个支付2-of-2-multisig合约的交易。这笔交易需要支付网络费用，并通过包含在比特币区块链中得到确认。
- en: 'Here’s the illustration of the creation of a channel:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通道的创建插图：
- en: '![](images/Figure-13.1.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.1.jpg)'
- en: '**Figure 13.1:** Creation of channel'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.1：** 通道的创建'
- en: In this, Alice buys milk from Bob every day, and she pays him every day as she
    buys milk.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，Alice每天都从Bob那里买牛奶，然后每天都付钱给他。
- en: Consider that she pays 0.0001![](images/Bitcoin.jpg) for 5 days and mutually
    agrees with Bob to close the channel.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 假设她为5天付了0.0001![](images/Bitcoin.jpg)，并与Bob达成共识关闭通道。
- en: 'The following illustration shows the three days of intermediate transactions:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下插图显示了三天的中间交易：
- en: '![](images/Figure-13.2.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.2.jpg)'
- en: '**Figure 13.2:** Offline transactions sent each time'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.2：** 每次离线交易的发送'
- en: Each new transaction needs to invalidate the previous transaction so that Alice
    cannot publish it and cheat Bob. None of the intermediate transactions sent by
    Alice to Bob gets published.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 每一笔新的交易需要失效之前的交易，这样Alice就无法发布并欺骗Bob。Alice发送给Bob的任何中间交易都不会被发布。
- en: Alice and Bob mutually agree and publish transactions after 5 days.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Alice和Bob在5天后达成共识并发布交易。
- en: 'The following is the published transaction that closes the channel:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关闭通道的已发布交易：
- en: '![](images/Figure-13.3.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.3.jpg)'
- en: '**Figure 13.3:** Transaction published on-chain'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.3：** 在链上发布的交易'
- en: The illustration does not include the transaction fees, which is also paid along
    with the output. In the actual closing of the channel, Alice and Bob cooperate
    on network fees they wish to pay, and then the transaction which is the cumulative
    sum of all preceding transactions gets published.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这幅插图不包括交易费用，这些费用也是与输出一起支付的。在实际关闭通道时，Alice和Bob会就他们希望支付的网络费用进行合作，然后发布累积了所有前置交易的交易。
- en: '[Payment though multiple channels](toc.xhtml#s277a)'
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通过多个通道进行支付](toc.xhtml#s277a)'
- en: In the real-world scenario, each node will have few channels, so it will be
    connected to only a few other nodes. As the network grows, there will be billions
    of nodes. So, for anyone to connect to others, there will be routing like the
    one we have with internet.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界的场景中，每个节点将有少量的通道，因此它只会连接到少数其他节点。随着网络的增长，将会有数十亿个节点。因此，任何人要想与其他人连接，就会有像我们在互联网上所看到的路由。
- en: This means there are going to be intermediaries that will facilitate payment
    between nodes. Additionally, there will be multiple routes between source and
    destination, and the protocol will need to make smart decision in selecting the
    routing path. The nodes provide better connectivity, and latency and funds will
    be favored by routing algorithms, so the node will try to incentivize this service
    by charging a routing fee.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着将会有中间商在节点之间促进支付。此外，源点和目的地之间会有多条路由，并且协议需要在选择路由路径时做出明智的决策。节点提供更好的连通性，延迟和资金将受到路由算法的青睐，因此节点将尝试通过收取路由费来激励这项服务。
- en: To make this possible, nodes in Lightning Network can make payment through the
    intermediate nodes, and intermediate nodes can charge fees.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，闪电网络中的节点可以通过中间节点进行支付，并且中间节点可以收取费用。
- en: Consider that Alice wants to pay Carol, but she does not have direct channel
    with Carol. However, Alice can pay Bob and Bob can pay Carol. We also need to
    make sure Bob cannot steal the money.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 假设爱丽丝想要支付卡罗尔，但她与卡罗尔没有直接的通道。然而，爱丽丝可以支付鲍勃，而鲍勃可以支付卡罗尔。我们还需要确保鲍勃不能偷走钱。
- en: This can work only if Alice and Bob create contract between them such that Bob
    can redeem bitcoins only if he can prove that he has paid Carol. This means first
    Bob pays Carol, and then Bob proves to Alice that he has paid.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这只有在爱丽丝和鲍勃之间创建合同的情况下才能实现，这样鲍勃只有在能够证明他已经支付了卡罗尔时才能兑现比特币。这意味着首先鲍勃支付卡罗尔，然后鲍勃向爱丽丝证明他已经支付。
- en: To achieve this, Carol creates a secret and both Bob and Alice know its hash.
    The contract between Alice and Bob requires secret, which Bob obtains after paying
    to Carol. And Carol can only redeem the bitcoin she is being paid when she reveals
    the secret. This mechanism ensures that no one can cheat the other person.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，卡罗尔创建了一个秘密，鲍勃和爱丽丝都知道它的哈希值。爱丽丝和鲍勃之间的合同需要秘密，鲍勃在向卡罗尔支付后获得。卡罗尔只有在揭示了秘密后才能兑现她所收到的比特币。这种机制确保了没有人能够欺骗对方。
- en: 'The following is the illustration of routing of payment from Alice to Carol
    via Bob:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是爱丽丝通过鲍勃向卡罗尔路由支付的示例：
- en: '![](images/Figure-13.4.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图13.4](images/Figure-13.4.jpg)'
- en: '**Figure 13.4:** Payment through intermediaries'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.4：** 通过中介进行支付'
- en: '[Bolt specifications](toc.xhtml#s278a)'
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[Bolt 规范](toc.xhtml#s278a)'
- en: Lightning Network requires nodes to communicate through messages. They need
    to set conditions to manage failures and attacks, discover each other and remain
    anonymous, and also pass receipts.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络要求节点通过消息进行通信。它们需要设置条件来管理失败和攻击，发现彼此并保持匿名，还需要传递收据。
- en: Since Lightning Network is open and decentralized, the software implementation
    needs specifications. Bolt is the set of specifications that Lightning Network
    Software follows so that a node using one Lightning Network software can interact
    with nodes running different Lightning Network software.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 由于闪电网络是开放且去中心化的，软件实现需要规范。Bolt是闪电网络软件遵循的一组规范，以便使用某个闪电网络软件的节点可以与运行不同闪电网络软件的节点进行交互。
- en: Bolt stands for ***Basis of Lightning Technology***.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Bolt代表***闪电技术的基础***。
- en: 'Here’s the active list of Bolt specification:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Bolt规范的活跃列表：
- en: '| **Bolt Specification Number** | **Information** |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| **Bolt规范编号** | **信息** |'
- en: '| Bolt 1 | Base Layer |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 1 | 基础层 |'
- en: '| Bolt 2 | Peer Protocol for Channel Management |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 2 | 通道管理的对等协议 |'
- en: '| Bolt 3 | Bitcoin Transaction and Script Formats |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 3 | 比特币交易和脚本格式 |'
- en: '| Bolt 4 | Onion Routing Protocol |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 4 | 洋葱路由协议 |'
- en: '| Bolt 5 | Recommendations for On-chain Transaction Handling |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 5 | 关于链上交易处理的建议 |'
- en: '| Bolt 7 | P2P Node and Channel Discovery |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 7 | P2P节点和通道发现 |'
- en: '| Bolt 8 | Encrypted and Authenticated Transport |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 8 | 加密和认证传输 |'
- en: '| Bolt 9 | Assigned Feature Flags |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 9 | 分配的功能标志 |'
- en: '| Bolt 10 | DNS Bootstrap and Assisted Node Location |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 10 | DNS引导和辅助节点位置 |'
- en: '| Bolt 11 | Invoice Protocol for Lightning Payments |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| Bolt 11 | 闪电支付的发票协议 |'
- en: '**Table 13.1:** Bolt specifications'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**表13.1：**Bolt规范'
- en: Bolt 6 was removed and replaced by Bolt 7.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Bolt 6已被移除并由Bolt 7替代。
- en: '[Contracts involved in Lightning Network](toc.xhtml#s279a)'
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[涉及闪电网络的合约](toc.xhtml#s279a)'
- en: In the previous section, you learned the basic working of Lightning Network.
    Now, we will look at the actual contract and the way in which different situations
    are handled.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，你学习了闪电网络的基本工作原理。现在，我们将看看实际的合约以及处理不同情况的方式。
- en: '[Offline payments between connected peers](toc.xhtml#s280a)'
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[连接的对等方之间的离线支付](toc.xhtml#s280a)'
- en: First, we will look at the condition when payment happens on a single channel
    between connected peers. We look at actual contracts involved in the creation
    of channel, structure of offline transactions, and the different ways by which
    a channel can be closed and funds settled on-chain.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将看看在连接的对等方之间的单个通道上发生支付时的情况。我们将研究涉及通道创建的实际合约、离线交易的结构，以及通道可以被关闭并在链上结算资金的不同方式。
- en: We will also understand how fees is paid at the time of channel creation and
    channel closure, and how each off-chain transaction takes this into consideration.
    We will also understand how the protocol handles cheating through contract.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将了解在通道创建和通道关闭时如何支付费用，以及每个离线交易如何考虑这一点。我们还将了解协议如何通过合约处理作弊行为。
- en: '[Channel creation](toc.xhtml#s281a)'
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通道创建](toc.xhtml#s281a)'
- en: Alice is a client of Bob and wants to create channel with Bob so that she can
    continue paying Bob and pay little fees. As Alice is the client, and she is the
    one who is going to pay, and Bob is always going to receive bitcoins. The channel
    is created such that only Alice has balance at her side of the channel.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝是鲍勃的客户，希望与鲍勃创建通道，以便她可以继续支付鲍勃并支付少量费用。由于爱丽丝是客户，她将支付，鲍勃将始终收到比特币。通道被创建为只有爱丽丝在通道的她一侧有余额。
- en: Once the channel is created and intermediate off-chain transaction happens,
    anyone should be able to close the channel unilaterally. Closing a channel requires
    network fees to be paid so that at the time of opening a channel, network fee
    needs to be negotiated.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦通道创建并进行中间的离链交易，任何人都应该能够单方面关闭通道。关闭通道需要支付网络费用，因此在打开通道时需要协商网络费用。
- en: The nodes communicate by interchanging defined message formats. The message
    format is defined in Bolt 2 specification. This facilitates network fee negotiation,
    channel establishments, etc.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 节点通过交换定义好的消息格式进行通信。消息格式在Bolt 2规范中定义。这有助于网络费用协商、通道建立等。
- en: The contract value is defined as sum of fund locked in channel and network fee.
    The sum locked in channel is only used for transferring value from Alice to Bob.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 合约价值定义为通道中锁定的资金和网络费用的总和。通道中锁定的总和仅用于从爱丽丝向鲍勃转移价值。
- en: 'The following is the illustration of contract value and its composition:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是合约价值及其构成的说明：
- en: '![](images/Figure-13.5.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.5.jpg)'
- en: '**Figure 13.5:** Contract value compositions'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.5：** 合约价值构成'
- en: 'Initially, the fund locked in channel is fully on Alice’s side as she funded
    the 2-of-2-multisig contract between Alice and Bob. This is represented as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，通道中锁定的资金完全位于爱丽丝一侧，因为她为爱丽丝和鲍勃之间的2-of-2多重签名合约提供了资金。这表示为：
- en: '![](images/Figure-13.6.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.6.jpg)'
- en: '**Figure 13.6:** Payment channel'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.6：** 付款通道'
- en: 'Here’s the funding transaction that goes into Bitcoin blockchain:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这是进入比特币区块链的资金交易：
- en: '![](images/Figure-13.7.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.7.jpg)'
- en: '**Figure 13.7:** Funding transaction'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.7：** 资金交易'
- en: Instant or turbo channels
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 即时通道或涡轮通道
- en: In Lightning Network, it is expected that fully funded channel will be on chain
    before off-chain transactions may happen. However, channel mostly gets opened
    at the time of payment, and to wait for half an hour may lead to bad customer
    experience.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在闪电网络中，预计完全资助的通道将在离链事务发生之前上链。然而，通道大多在支付时打开，并且等待半个小时可能会导致糟糕的客户体验。
- en: We saw that when the transaction malleability bug was fixed by segregated witness
    softfork, unconfirmed transaction became quite reliable. There is still a risk
    of 0-confirmation attack, in which attacker can publish two transactions simultaneously.
    As most channels do not hold large value on a single channel, relying on an unconfirmed
    channel is a fair tradeoff between security and customer experience.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到，当交易可篡改性错误被隔离见证软分叉修复时，未确认的交易变得相当可靠。仍然存在 0-确认攻击的风险，即攻击者可以同时发布两个交易。由于大多数通道不会在单个通道上持有大量价值，依赖未确认的通道是安全和客户体验之间的公平权衡。
- en: Not waiting for funding transaction confirmation has one important advantage.
    A low network fee can be paid. Just by waiting for a few hours for confirmation
    can significantly reduce fees.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 不等待资金交易确认有一个重要优势。可以支付低网络费用。仅仅等待几个小时的确认就可以显著降低费用。
- en: '[Offline transactions](toc.xhtml#s282a)'
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[离线交易](toc.xhtml#s282a)'
- en: Once the funds are locked in 2-of-2-multisig contract, Alice can pay Bob if
    there is balance at the Alice’s side of the channel.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦资金被锁定在 2-of-2 多重签名合同中，如果 Alice 通道的一侧有余额，Alice 可以支付 Bob。
- en: However, Alice can publish an older transaction that gives greater value to
    her. To protect Bob from getting cheated by Alice, all the older transactions
    need to be invalidated before performing the next transaction.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，Alice 可以发布一个给她更大价值的较旧交易。为了保护 Bob 不被 Alice 欺骗，所有旧交易在执行下一笔交易之前都需要无效化。
- en: To invalidate the latest transaction, Alice needs to provide revocation key
    to Bob before she can make the next transaction. The revocation key gives Bob
    the power to claim all the funds locked in the channel before Alice could take
    away her claim of funds. To avoid Alice from taking away her share, the new contract
    doesn’t allow Alice to take away her share of funds before a specific duration
    of time has lapsed.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要使最新的交易无效，Alice 需要在执行下一笔交易之前向 Bob 提供撤销密钥。撤销密钥赋予了 Bob 主张通道中锁定的所有资金的权力，以防止 Alice
    在撤销她对资金的索取之前取走她的份额。为了避免 Alice 取走她的份额，新合同不允许 Alice 在特定时间段之前取走她的资金份额。
- en: 'The following are the first two commitment transactions, including revocation
    for initial commitment transaction:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前两个承诺交易，包括初始承诺交易的撤销：
- en: '![](images/Figure-13.8.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.8.jpg)'
- en: '**Figure 13.8:** Commitment transactions and revocation key sharing'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.8：** 承诺交易与撤销密钥共享'
- en: Here, we are only protecting only Bob from being cheated by Alice because Alice
    cannot be cheated by Bob. If Alice and Bob had bidirectional payment channel,
    there would be different commitment transaction for Bob and Alice, and revocation
    would also be shared both ways.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只保护了 Bob 不被 Alice 欺骗，因为 Alice 不会被 Bob 欺骗。如果 Alice 和 Bob 拥有双向支付通道，那么 Bob
    和 Alice 将有不同的承诺交易，撤销也将双向共享。
- en: In the commitment transaction, we can observe that if Alice tries to cheat Bob,
    then he can use the revocation key to claim Alice’s share of the funds immediately.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在承诺交易中，我们可以观察到如果爱丽丝试图欺骗鲍勃，那么他可以使用撤销密钥立即索取爱丽丝的份额。
- en: '[Channel closure](toc.xhtml#s283a)'
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通道关闭](toc.xhtml#s283a)'
- en: 'There are three ways to close a channel:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭通道有三种方法：
- en: A channel can be closed by mutual coordination between parties. This way, the
    fees can be renegotiated.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通道可以由各方相互协调关闭。这样，费用可以重新协商。
- en: A channel can be closed unilaterally. This means any one of the parties can
    publish their last transaction.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个通道可以单方面关闭。这意味着任何一方都可以发布他们的最后一笔交易。
- en: One party can cheat the other party by publishing the older state of a transaction.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一方可以通过发布交易的旧状态来欺骗另一方。
- en: The Bolt 2 specification also details closing of channels.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Bolt 2 规范还详细说明了通道的关闭。
- en: Mutually agreed close
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 双方协商关闭
- en: In the case of mutually negotiated closing, Alice and Bob send protocol messages
    to decide on fees and then recreate and sign the last transaction. Alice and Bob
    then publish the transaction on the Bitcoin blockchain. Unlike unilateral close,
    the mutually coordinated closure transaction does not have any relative time lock,
    so Alice gets her funds immediately by paying lower fees.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在双方协商关闭的情况下，爱丽丝和鲍勃发送协议消息以决定费用，然后重新创建并签署最后一笔交易。然后爱丽丝和鲍勃将交易发布到比特币区块链上。与单方关闭不同，双方协调的关闭交易没有任何相对时间锁定，因此爱丽丝通过支付较低的费用可以立即获得她的资金。
- en: 'The following is the illustration of mutually negotiated final transaction:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是双方协商的最终交易示意图：
- en: '![](images/Figure-13.9.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.9.jpg)'
- en: '**Figure 13.9:** Mutually negotiated channel closure'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.9：** 双方协商的通道关闭'
- en: Unilateral close
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单方关闭
- en: In the case of unilateral close, the last transaction is published, and Bob
    can take his funds immediately, while Alice must wait till the relative time lock
    expires.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在单方关闭的情况下，最后一笔交易被发布，鲍勃可以立即取出他的资金，而爱丽丝必须等待相对时间锁定过期。
- en: 'Here’s the illustration of unilateral close:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是单方关闭的示意图：
- en: '![](images/Figure-13.10.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.10.jpg)'
- en: '**Figure 13.10:** Unilateral channel closure'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.10：** 单方通道关闭'
- en: In this case, revocation key was never shared. So, Bob cannot take out his funds,
    but Alice must wait till the relative time lock expires to claim her share.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，撤销密钥从未被共享。因此，鲍勃无法取出他的资金，但是爱丽丝必须等待相对时间锁定过期才能索取她的份额。
- en: Revoked transaction closure
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 撤销的交易关闭
- en: If Alice publishes an old transaction that is already revoked, then Bob can
    create a transaction to claim all of Alice’s funds.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果爱丽丝发布了一笔已经被撤销的旧交易，那么鲍勃可以创建一笔交易来索取爱丽丝所有的资金。
- en: 'The following is the transaction published by Alice:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是爱丽丝发布的交易：
- en: '![](images/Figure-13.11.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.11.jpg)'
- en: '**Figure 13.11:** Revoked transaction published by Alice'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.11：** 爱丽丝发布的已撤销交易'
- en: 'Bob then creates another transaction to punish Alice using his revocation key.
    This transaction is called **j*****ustice*** **t*****ransaction***. Here’s the
    illustration:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Bob 使用他的吊销密钥创建另一个用于惩罚Alice的交易。这个交易被称为**正**义**交**易。这里是说明：
- en: '![](images/Figure-13.12.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.12.jpg)'
- en: '**Figure 13.12:** Justice transaction published by Bob'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.12:** Bob发布的正义交易'
- en: 'If Bob has lost the revocation key, then Alice can move the locked funds to
    her address after 1 day has passed. Here’s the illustration:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Bob丢失了吊销密钥，那么在经过1天后，Alice可以将锁定的资金转移到她的地址。这里是说明：
- en: '![](images/Figure-13.13.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.13.jpg)'
- en: '**Figure 13.13:** Alice moves funds to her address after 1 day'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.13:** Alice在1天后将资金转移到她的地址'
- en: '[Bidirectional dual-funded channel](toc.xhtml#s284a)'
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[双向资助通道](toc.xhtml#s284a)'
- en: The case we discussed in the previous sections only involved unidirectional
    payment. Many times, payments between peers can be bidirectional. In this case,
    the new channel is created by using funds from both Alice and Bob.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前几节中讨论的案例仅涉及单向支付。很多时候，对等方之间的支付是双向的。在这种情况下，新的通道是通过使用Alice和Bob的资金创建的。
- en: '[Channel creation](toc.xhtml#s285a)'
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通道创建](toc.xhtml#s285a)'
- en: 'The following is the illustration of a dual-funded channel:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个双向资助通道的插图：
- en: '![](images/Figure-13.14.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.14.jpg)'
- en: '**Figure 13.14:** Funding transaction for dual-funded channel'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.14:** 双向资助通道的资金交易'
- en: In this case, at the time of payments between Alice and Bob, both create a transaction
    and send it to the other party, and to revoke the transaction, both parties transfer
    the revocation key to their counterpart. This happens at every instance, irrespective
    of who pays to whom.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，在Alice和Bob之间的支付时，双方都创建并发送交易给对方，并且为了吊销交易，双方将吊销密钥转移给对方。这在每个实例中都会发生，不论是谁向谁支付。
- en: 'This can be understood with the help of the following illustration:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下插图理解：
- en: '![](images/Figure-13.15.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.15.jpg)'
- en: '**Figure 13.15:** Commitment transactions and revocation sequence'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.15:** 承诺交易和吊销顺序'
- en: In the preceding transaction, Alice needs to send 10 m![](images/Bitcoin.jpg)
    to Bob to buy coffee. As Bob is the receiver in the previous transaction, Alice
    will be having more funds than Bob. So, Alice can cheat Bob by posting the previous
    transaction. To avoid the risk of getting cheated, Bob needs to get a signed transaction
    from Alice for the coffee, and only then he can revoke his previous transaction
    and sign Alice’s transaction.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述交易中，Alice需要向Bob发送10 m![](images/Bitcoin.jpg)来买咖啡。由于Bob是前一笔交易的接收方，Alice会比Bob拥有更多的资金。因此，Alice可以通过发布前一笔交易来欺骗Bob。为了避免被欺骗的风险，Bob需要从Alice那里获得有关咖啡的已签名交易，只有这样他才能吊销他的前一笔交易并签署Alice的交易。
- en: This allows Alice and Bob to have bidirectional channel funded by both parties.
    Closing of the channel remains the same as we learned in the previous section.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得Alice和Bob可以拥有由双方资助的双向通道。通道的关闭方式与我们在前一节中学习的方式相同。
- en: '[Offline payments involving intermediaries](toc.xhtml#s286a)'
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[涉及中介的离线支付](toc.xhtml#s286a)'
- en: In this case, Alice wants to pay Carol 10mB, but she only has a channel with
    Bob, and Bob has a channel with Carol. Bob charges fees to forward the transaction
    through his node, and Alice needs to pay to Bob this fee because she is paying
    Carol. In Lightning Network payment, it is expected that the sender will pay for
    the fees.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Alice 想要支付给 Carol 10mB，但她只与 Bob 拥有一个通道，而 Bob 与 Carol 有一个通道。Bob 通过他的节点转发交易收取费用，并且
    Alice 需要支付给 Bob 这个费用，因为她要支付给 Carol。在闪电网络支付中，预期发送方会支付费用。
- en: Bob uses Lightning Network protocol messages to inform Alice about the fee she
    needs to pay.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Bob 使用闪电网络协议消息通知 Alice 需要支付的费用。
- en: As we learned in one of the previous topics, Carol needs to generate a secret
    and give hash of its secret. Carol only needs to share hash of secret with Alice,
    and when Alice and Bob create contract, Bob gets to know the hash of secret, which
    he can use to create contract with Carol or another intermediary.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在之前的一个主题中学到的那样，Carol 需要生成一个秘密并给出其哈希。Carol 只需与 Alice 共享秘密的哈希，当 Alice 和 Bob
    创建合同时，Bob 获得秘密的哈希，他可以用来与 Carol 或另一个中介创建合同。
- en: When Carol reveals the secret to Bob, Carol can claim her funds. This allows
    Bob to know the secret, which he reveals to Alice to claim his funds. Since Bob
    can only reveal secret to Alice, when Carol has revealed secret to Bob, the timeout
    in transaction between Bob and Carol needs to be less than transaction between
    Alice and Bob.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Carol 向 Bob 揭示秘密时，Carol 可以索取她的资金。这使得 Bob 知道秘密，他向 Alice 揭示以索取他的资金。由于 Bob 只能向
    Alice 揭示秘密，所以当 Carol 向 Bob 揭示秘密时，Bob 和 Carol 之间的交易超时时间需要小于 Alice 和 Bob 之间的交易时间。
- en: To achieve this, offline transactions have ***Hash Time Locked Contract*** (**HTLC**).
    HTLC is a class of contract that requires either hash condition or time condition
    to be met; otherwise, the locked funds can be forfeited. HTLC is the additional
    output in offline transactions.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，离线交易具有***哈希时间锁定合同***（**HTLC**）。HTLC 是一类合同，要求满足哈希条件或时间条件中的一个；否则，锁定的资金可能会被没收。HTLC
    是离线交易的附加输出。
- en: 'The following is the illustration of transactions held at each end for channels:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在每个通道端进行的交易的示意图：
- en: '![](images/Figure-13.16.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.16.jpg)'
- en: '**Figure 13.16:** Contract exchange for offline transactions through intermediaries'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.16：** 通过中介进行离线交易的合同交换'
- en: In the preceding transaction, we can see that in the HTLC output, if secret
    is not revealed and revocation key is not used, then Alice can take back her funds
    in the channel with Bob 14 days after 1,000 blocks are mined, and Bob can take
    his funds in the channel with Carol 13 days after 1,000 blocks are mined.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述交易中，我们可以看到在 HTLC 输出中，如果秘密未被揭示且撤销密钥未被使用，则 Alice 可以在挖掘了 1,000 个区块后的 14 天内收回与
    Bob 通道中的资金，而 Bob 则可以在挖掘了 1,000 个区块后的 13 天内收回与 Carol 通道中的资金。
- en: HTLC is a separate output, so it adds to the cost of transaction and mostly
    carries small value. This means when this transaction is published, the UTXO value
    of the HTLC may make it less usable. To avoid HTLC in final transaction, after
    Bob gets the secret from Carol and he verifies it, a new transaction is created
    by removing HTLC output and merging it with the receiver output.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: HTLC 是一个单独的输出，因此它增加了交易成本，并且大多数情况下携带小额价值。这意味着当此交易被发布时，HTLC 的 UTXO 值可能使其不太可用。为了避免最终交易中的
    HTLC，在 Bob 从 Carol 那里获取秘密并验证它后，通过移除 HTLC 输出并将其与接收者输出合并来创建新的交易。
- en: 'The following is the sequence diagram of secret and hash sharing:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是秘密和哈希共享的顺序图：
- en: '![](images/Figure-13.17.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.17.jpg)'
- en: '**Figure 13.17:** Sequence diagram of payment through intermediaries'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.17：** 通过中介支付的顺序图'
- en: 'In the following illustration, the new modified transaction after secret is
    shared with Bob by Carol:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的插图中，当 Carol 向 Bob 分享秘密后，新的修改后的交易如下所示：
- en: '![](images/Figure-13.18.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.18.jpg)'
- en: '**Figure 13.18:** Removal of HTLC output after secret is known by Bob'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.18：** 当 Bob 知道秘密后移除 HTLC 输出'
- en: After this, Bob shares secret with Alice, and both agree to remove HTLC from
    transaction.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，Bob 与 Alice 共享秘密，并且双方同意从交易中移除 HTLC。
- en: '![](images/Figure-13.19.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.19.jpg)'
- en: '**Figure 13.19:** Removal of HTLC output after secret is known by Alice'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.19：** 当 Alice 知道秘密后移除 HTLC 输出'
- en: We can see that the preceding updated transaction eliminates the need for settlement
    of transactions.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，前面更新的交易消除了交易结算的需要。
- en: '[Monitoring of channels](toc.xhtml#s287a)'
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通道监控](toc.xhtml#s287a)'
- en: 'Lightning Network has one drawback: nodes need to be online all the time to
    monitor their channels; otherwise, a peer will have a window of opportunity to
    breach channel. This is because if a channel breach happens and the affected peer
    is offline, then it will not know that the breach has happened, and the attacker
    will successfully steal the funds. However, if the victim of channel breach was
    online, it would know that the breach has occurred, and it would have punished
    the attacker by publishing the required justice transaction.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络有一个缺点：节点需要始终在线监视它们的通道；否则，同行者将有机会突破通道。这是因为如果发生通道突破并且受影响的同行者不在线，那么它将不会知道发生了突破，而攻击者将成功窃取资金。然而，如果通道突破的受害者在线，它会知道突破已经发生，并且会通过发布所需的公正交易来惩罚攻击者。
- en: But in a real-world scenario, the nodes can go offline because of several reasons
    like hurricane, internet connection disruption, fire or electric short circuit,
    or simply because of switching off the power supply by mistake.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 但在实际情况下，节点可能会因为多种原因而下线，比如飓风、互联网连接中断、火灾或电路短路，或者只是因为错误地关闭电源。
- en: To avoid this, Lightning Nodes can pay nodes that can monitor its channels.
    These monitoring nodes are called **Watchtowers**.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这种情况，闪电节点可以支付可以监视其通道的节点。这些监控节点称为**守望者**。
- en: '[Watchtower](toc.xhtml#s288a)'
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[Watchtower](toc.xhtml#s288a)'
- en: Watchtower is a Lightning Network node that maintains state of channels for
    its client and can publish punishment or justice transaction against channel breaches
    if its client is offline.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Watchtower是一个闪电网络节点，为其客户维护通道状态，并且如果其客户离线，可以发布惩罚或公正交易以应对通道违约。
- en: Watchtower is supposed to always be online and monitor blockchain all the time.
    The client of watchtower needs to update the watchtower every time a new transaction
    is made by its client or revocation key is shared by its client.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Watchtower应该始终在线并始终监视区块链。Watchtower的客户端需要在其客户进行新交易或其客户共享撤销密钥时每次更新watchtower。
- en: 'The working of watchtower can be understood with the help of the following
    sequence diagram:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下序列图来理解看守者的工作：
- en: '![](images/Figure-13.20.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.20.jpg)'
- en: '**Figure 13.20:** Functioning of watchtower'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.20：** 看守者的功能'
- en: In the preceding sequence diagram, we can see that the client of watchtower
    keeps the watchtower server updated about the changes in state of all its channels.
    So, in the event of channel breach, the watchtower publishes the justice transaction,
    and the client can claim the punishment transaction.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述序列图中，我们可以看到看守者的客户端使看守者服务器始终了解其所有通道状态的变化。因此，在通道违约事件发生时，看守者将发布公正交易，客户端可以申请惩罚交易。
- en: '[Drawback of justice transaction](toc.xhtml#s289a)'
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[公正交易的缺点](toc.xhtml#s289a)'
- en: As you have learned, the Lightning Network provides a mechanism to punish a
    node that tries to breach a channel by publishing a non-recent transaction. This
    punishment mechanism is called ***LN-penalty*** and is done by publishing a justice
    transaction. This sounds like a great idea, but in reality, most nodes that get
    punished are not cheating. Most breaches happen because a node did not maintain
    the latest transaction.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所学到的，闪电网络提供了一种机制来惩罚试图通过发布非最近交易来违反通道的节点。这种惩罚机制称为***LN-penalty***，通过发布公正交易来实现。这听起来是一个很好的主意，但实际上，大多数受到惩罚的节点并没有作弊。大多数违约是因为节点没有保持最新交易。
- en: It is not right to punish a node for its mistake, so a different mechanism is
    being researched, called ***Eltoo.*** Eltoo might be a future enhancement in Lightning
    Network. It will depend on a new hash-type called `**SIGHASH_ANYPREVOUT**`. Until
    `**SIGHASH_ANYPREVOUT**` does not get added to Bitcoin script, Eltoo cannot be
    implemented. Bitcoin has very stringent enhancement mechanism where most stakeholders
    need to agree on a new enhancements and especially its large developer community
    which means if `**SIGHASH_ANYPREVOUT**` has unacceptable risks it may never get
    accepted. Or a different enhancement may solve this problem. Till that time, we
    need to live with the drawback and take enough precautions to not lose funds.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 惩罚一个节点因其错误是不正确的，因此正在研究一种不同的机制，称为***Eltoo***。Eltoo可能是闪电网络的未来增强。它将依赖于一种新的哈希类型，称为`**SIGHASH_ANYPREVOUT**`。在`**SIGHASH_ANYPREVOUT**`未被添加到比特币脚本之前，无法实现Eltoo。比特币具有非常严格的增强机制，其中大多数利益相关者需要就新的增强机制达成一致意见，特别是其庞大的开发者社区，这意味着如果`**SIGHASH_ANYPREVOUT**`存在不可接受的风险，它可能永远不会被接受。或者不同的增强可能会解决这个问题。在那之前，我们需要忍受这个缺点，并采取足够的预防措施以避免损失。
- en: '[Routing mechanism and considerations](toc.xhtml#s290a)'
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[路由机制和注意事项](toc.xhtml#s290a)'
- en: When Alice wants to pay Dave, she will need to find route to Dave in such a
    way that paying side of each channel in the route has enough funds so that the
    payment is successful. This is called ***source-routing***. As Alice’s node tries
    to find route to Dave, it looks for channel capacity, which is the combined value
    locked in the channel. Sometimes channel capacity is high enough, but the sending
    end of the channel does not have enough funds; this may lead to failure to process.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当爱丽丝想要支付戴夫时，她需要找到一条通往戴夫的路由，以确保路由中每个通道的支付端都有足够的资金，以便支付成功。这被称为***源路由***。当爱丽丝的节点尝试找到通往戴夫的路由时，它会查找通道容量，即通道中锁定的价值的总和。有时通道容量足够高，但发送端的资金不足；这可能导致无法处理。
- en: This information needs to be collected so that the channel can be avoided the
    next time a similar payment requirement arises. Additionally, nodes and channels
    can be rated based on past breaches.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息需要收集，以便在下次出现类似支付需求时可以避免使用该通道。此外，可以根据过去的违约情况对节点和通道进行评级。
- en: 'The following are the considerations that need to be made while finding the
    route to the target receiver:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找目标接收方路由时需要考虑以下因素：
- en: Channel capacity is high enough
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道容量足够高
- en: Past failures due to the lack of paying side funds
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于支付端资金不足而导致的过去失败
- en: Past channel breaches by nodes
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点过去的通道违约情况
- en: Fee charged by node to forward payment request
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点转发支付请求时收取的费用
- en: '[Trampoline nodes](toc.xhtml#s291a)'
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[蹦床节点](toc.xhtml#s291a)'
- en: One of the challenges nodes face is finding a route that is cheap and holds
    enough capacity at each channel. This requires constant update of network topology.
    This is fine till the network is not big, but as we are seeing a rapid rise in
    adoption, this is becoming a problem.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 节点面临的挑战之一是找到便宜且在每个通道上容量足够的路由。这需要不断更新网络拓扑。在网络规模不大的情况下，这是可以接受的，但随着我们看到的快速采用增长，这成为了一个问题。
- en: Trampoline nodes are special nodes in Lightning Networks that have the sole
    responsibility of maintaining the current network topology by updating it frequently.
    So, a node needs to maintain partial network topology only to connect to trampoline
    nodes or to all nearby nodes.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 弹跳节点是闪电网络中的特殊节点，其唯一责任是通过频繁更新来维护当前的网络拓扑结构。因此，一个节点只需维护部分网络拓扑结构，即连接到弹跳节点或所有附近节点。
- en: A trampoline node maintains information about all the nodes in Lightning Network
    and may depend on other Trampoline nodes to extend routing beyond its subnet.
    This way, no node needs to maintain information about the whole network.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 弹跳节点维护有关闪电网络中所有节点的信息，并可能依赖其他弹跳节点来扩展其子网之外的路由。这样，没有节点需要维护整个网络的信息。
- en: Trampoline nodes allow non-custodial mobile wallets to instantly send Lighting
    payments across the globe, without the need for large memory and processing.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 弹跳节点允许非托管的移动钱包在全球范围内即时发送闪电支付，无需大量的存储和处理。
- en: 'Payment routing using trampoline node is illustrated in the following diagram:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 使用弹跳节点进行支付路由的示例如下图所示：
- en: '![](images/Figure-13.21.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.21.jpg)'
- en: '**Figure 13.21:** Sending node taking help of trampoline node to find a route
    to receiving node'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.21:** 发送节点寻找到接收节点路由的弹跳节点的帮助'
- en: '[Channel management](toc.xhtml#s292a)'
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[通道管理](toc.xhtml#s292a)'
- en: A channel can be created only to serve requests between peers and is mostly
    hidden from the rest of the network. These are called **private channels**. On
    the other hand, a channel can also be public and can be used by other nodes to
    make routing connections with the rest of the network.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 通道只能用于为对等方之间的请求提供服务，并且大多数情况下对网络的其余部分隐藏。这些被称为**私有通道**。另一方面，通道也可以是公开的，并且其他节点可以使用它与网络的其余部分进行路由连接。
- en: For a public channel, it is important that funds at both ends are balanced so
    that routing does not fail because of a lack of funds at the paying side. This
    requires active channel management and collaboration with peers. There are multiple
    ways to achieve this.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 对于公共通道，重要的是两端的资金平衡，以防由于付款方缺乏资金而导致路由失败。这需要积极的通道管理和与同行的合作。有多种方法可以实现这一点。
- en: '[Circular rebalancing](toc.xhtml#s293a)'
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[循环再平衡](toc.xhtml#s293a)'
- en: One way to rebalance a channel is to pay to ourselves from one of our other
    channels.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 重新平衡通道的一种方法是从我们的其他通道中支付给自己。
- en: 'This can be understood with the help of the following illustration:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下插图来理解：
- en: '![](images/Figure-13.22.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.22.jpg)'
- en: '**Figure 13.22:** Circular rebalancing mechanism'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.22：** 循环再平衡机制'
- en: Circular rebalancing is cheap as only off-chain transactions happen, but it
    requires at least one channel to be loaded at the opposite side.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 循环再平衡很便宜，因为只涉及链下交易，但它需要至少一个通道在另一侧被加载。
- en: '[Splicing](toc.xhtml#s294a)'
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[拼接](toc.xhtml#s294a)'
- en: Circular rebalancing is the preferred rebalancing method, but it is not useful
    for merchants because merchants might be only receiving and not sending and so,
    may not have any channel to move funds to other channels.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 循环再平衡是首选的再平衡方法，但对于商家来说并不实用，因为商家可能只接收而不发送，因此可能没有任何通道可用于将资金移动到其他通道。
- en: Splicing allows change in channel capacity without the need to close or reopen
    a channel. Splicing requires modification of funding transaction while accepting
    all the incoming payment requests. This makes it quite complex to implement.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 拼接允许更改通道容量，而无需关闭或重新打开通道。拼接需要修改资金交易，同时接受所有传入的付款请求。这使得其实现相当复杂。
- en: 'Splice-in means increasing the capacity of a channel. The following is splice-in
    in a nutshell:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 内部拼接意味着增加通道的容量。以下是内部拼接的简要概述：
- en: '![](images/Figure-13.23.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.23.jpg)'
- en: '**Figure 13.23:** Splice-in in a nutshell'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.23：** 简述内部拼接'
- en: 'Splice-out means reducing the capacity of a channel. The following illustration
    is splice-out in a nutshell:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 外部拼接意味着减少通道的容量。以下图示是外部拼接的简要概述：
- en: '![](images/Figure-13.24.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.24.jpg)'
- en: '**Figure 13.24:** Splice-out in a nutshell'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.24：** 简述外部拼接'
- en: This is only simplified representation of splice-in and splice-out. In-reality,
    the implementation will be more complex.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是内部拼接和外部拼接的简化表示。实际上，实现将会更加复杂。
- en: '[Lightning Loop or submarine swaps](toc.xhtml#s295a)'
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[闪电环路或潜艇交换](toc.xhtml#s295a)'
- en: Submarine swap, also called Lightning Loop, is another way to manage channels
    by moving funds in and out of a channel. Lightning Loop is based on the principle
    that HTLC can work on both on-chain and off-chain, and so, a swap provider can
    help move funds between off-chain and on-chain in a trustless manner.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 潜艇交换，也称为闪电环路，是通过在通道内外移动资金来管理通道的另一种方法。闪电环路基于 HTLC 可以在链上和链下同时工作的原则，因此，交换提供者可以帮助在链下和链上之间以无信任方式移动资金。
- en: Lightning Loop is another way a merchant can move funds to the other side of
    a channel without the complexity of splicing.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电环路是商家可以将资金移动到通道另一侧而无需复杂操作的另一种方法。
- en: To move funds out of channel, a node sends funds through the channel through
    multiple hops to swap provider, which sends funds back to the node on chain, in
    effect, removing the funds from chain.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 要将资金从通道移出，一个节点通过多跳将资金发送到交换提供者，交换提供者将资金发送回链上的节点，从而将资金从链中移出。
- en: 'This can be understood with the help of the following illustration:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 下图能帮助理解：
- en: '![](images/Figure-13.25.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.25.jpg)'
- en: '**Figure 13.25:** Moving funds from channel to on-chain using Submarine Swap'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.25：** 使用潜艇交换将资金从通道转移到链上'
- en: The same method can be used to add funds from on chain using swap provider by
    carrying out the preceding process in the reverse direction.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的方法可以用来通过交换提供者从链上添加资金，方法是按照相反的方向执行上述过程。
- en: 'Here’s the illustration of using Lightning Loop to move funds to my side of
    the channel from on-chain:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用闪电环（Lightning Loop）将资金从链上转移到我的通道一侧的插图：
- en: '![](images/Figure-13.26.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.26.jpg)'
- en: '**Figure 13.26:** Moving funds from on-chain to channel using Submarine Swap'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.26：** 使用 Submarine Swap 将资金从链上转移到通道的移动'
- en: '[Multi-Part Payments or MPP](toc.xhtml#s296a)'
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[多部分支付或 MPP](toc.xhtml#s296a)'
- en: Lightning Network is not suitable for transferring large value over channel
    network. This because to transfer value over channel network, only the channels
    that have sufficient balance at the sender’s side can be selected, and channels
    with large capacity are rare. So, it is difficult to build a route between sender
    and receiver if large value needs to be transferred. To overcome this problem,
    Lightning Network software sometimes splits value over multiple channels and finds
    separate routes for each split value. This is called ***Multi-Part Payments***.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络不适合在通道网络上转移大额价值。这是因为在通道网络上转移价值时，只能选择在发送方一侧具有足够余额的通道，而具有大容量的通道很少。因此，如果需要转移大额价值，则在发送方和接收方之间建立路径就很困难。为了解决这个问题，闪电网络软件有时会将价值分割成多个通道，并为每个分割的价值找到单独的路径。这称为***多部分支付***。
- en: 'This can be understood with the help of the following illustration:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过以下插图来理解：
- en: '![](images/Figure-13.27.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.27.jpg)'
- en: '**Figure 13.27:** Multi-part payment'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.27：** 多部分支付'
- en: In the preceding diagram, Alice wants to send 100 m![](images/Bitcoin.jpg) to
    Bob, but there is no route to transfer it. To achieve this, Alice breaks the amount
    into 20 m![](images/Bitcoin.jpg), 30 m![](images/Bitcoin.jpg)`,` and 50 m![](images/Bitcoin.jpg)
    and then sends it through different routes. This way, Bob can receive 100 m![](images/Bitcoin.jpg)
    offline without the need to perform on-chain transactions.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，爱丽丝想要向鲍勃发送 100 m![](images/Bitcoin.jpg)，但没有可用的转账路径。为了实现这一目标，爱丽丝将金额分成了 20
    m![](images/Bitcoin.jpg)、30 m![](images/Bitcoin.jpg) 和 50 m![](images/Bitcoin.jpg)，然后通过不同的路径发送。这样，鲍勃可以离线接收到
    100 m![](images/Bitcoin.jpg) 而无需进行链上交易。
- en: '[End user experience](toc.xhtml#s297a)'
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[终端用户体验](toc.xhtml#s297a)'
- en: When we use Lightning Network to pay for a service, we need to create a channel
    to pay the peer as many times as we want till there is balance on the payee side
    of channel.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用闪电网络支付服务时，我们需要创建一个通道，以便向对等方支付多次，直到通道的支付方有余额。
- en: 'To make a payment or receive payments, we need to establish channel between
    our node and a few other nodes in the network. This requires channel management
    and may involve the following activities:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行支付或接收支付，我们需要在我们的节点和网络中的几个其他节点之间建立通道。这需要通道管理，并可能涉及以下活动：
- en: Create a channel with funds on our side, at the peer side, or at both ends.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的一侧、对等方的一侧或两端创建带有资金的通道。
- en: Create turbo channels or wait for 3-6 confirmations before accepting or sending
    payments.
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建涡轮通道或在接受或发送付款之前等待 3-6 次确认。
- en: Actively balance channels so that payments can be sent as well as received.
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 积极平衡通道，以便可以发送和接收付款。
- en: Keep network topology up-to-date or use trampoline nodes to find the best routes.
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持网络拓扑更新或使用跳板节点找到最佳路由。
- en: Use watchtower service to avoid being cheated by peers.
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**watchtower 服务**以避免被同行欺骗。
- en: Mutually or unilaterally close channels and monitor Bitcoin blockchain for a
    channel closure/breach event.
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相互或单方面关闭通道，并监视比特币区块链以进行通道关闭/违约事件。
- en: This might look scary, but many Lightning Network wallets take care of all these
    internally, and the user experience is seamless.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能看起来很可怕，但许多闪电网络钱包会在内部处理所有这些问题，并且用户体验无缝。
- en: '[Lightning wallets](toc.xhtml#s298a)'
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[闪电钱包](toc.xhtml#s298a)'
- en: Lightning wallets are Bitcoin wallets, which also open and manage channels.
    A wallet may give more control to the user by allowing them to allocate funds
    and manage channels, or it may hide all the complexities from the user, making
    the experience seamless. A wallet may be custodial, in which funds are controlled
    by the wallet and the user only logs in and approves a transaction. On the other
    hand, in a non-custodial wallet, seed and keys for creating the wallet are with
    the user.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电钱包是比特币钱包，也可以打开和管理通道。钱包可以通过允许用户分配资金和管理通道来为用户提供更多控制，或者它可以隐藏所有的复杂性，使体验无缝。钱包可以是托管的，在这种情况下，资金由钱包控制，用户只需登录并批准交易。另一方面，在非托管钱包中，用于创建钱包的种子和密钥由用户拥有。
- en: As Lightning wallets are creating and managing channels, they are also called
    **Lightning Nodes**.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 由于闪电钱包正在创建和管理通道，它们也被称为**闪电节点**。
- en: 'Here are some of the popular Lightning wallets:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些流行的闪电钱包：
- en: '*Zap wallet, Muun wallet, Bluewallet, Breez wallet, Wallet of Satoshi, Bitcoin
    Lightning Wallet (BLW), Éclair Mobile, etc.*'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '*Zap 钱包，Muun 钱包，Bluewallet，Breez 钱包，Satoshi 钱包，比特币闪电钱包（BLW），Éclair Mobile 等。*'
- en: '[Lightning invoice](toc.xhtml#s299a)'
  id: totrans-281
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[Lightning 发票](toc.xhtml#s299a)'
- en: You have learnt that when Alice purchases coffee from Bob, Bob generates secret
    hash so that Alice can make the payment. To achieve this, Bolt 11 explains the
    structure of the message that Bob needs to share with Alice, and it is called
    Lightning invoice.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经学到了当爱丽丝从鲍勃购买咖啡时，鲍勃会生成秘密哈希，以便爱丽丝可以付款。为了实现这一点，Bolt 11 解释了鲍勃需要与爱丽丝共享的消息结构，这被称为
    Lightning 发票。
- en: 'Here, we have generated a lightning invoice from a merchant application and
    used an open-source application to decode it. Here’s a screenshot of the application:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们从商家应用程序生成了一个 Lightning 发票，并使用了一个开源应用程序对其进行解码。以下是应用程序的截图：
- en: '![](images/Figure-13.28.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.28.jpg)'
- en: '**Figure 13.28:** Lightning invoice information'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.28：**闪电发票信息'
- en: We can see all the information it contains, and it will help Alice to create
    a transaction and send it to a channel through which the payment will get routed
    and reach Bob.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到它包含的所有信息，并且将帮助 Alice 创建交易并将其发送到一个通道，通过该通道将支付路由并到达 Bob。
- en: The requested string is just the QR code that Bob shares with Alice. So, Alice
    goes to Bob’s coffee shop. Bob requests payment by showing the QR code in his
    mobile phone wallet. Alice scans the QR code from her mobile wallet and makes
    the payment. This happens in a minute.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 请求的字符串只是 Bob 与 Alice 共享的 QR 码。因此，Alice 去了 Bob 的咖啡店。Bob 通过他的手机钱包显示 QR 码请求付款。Alice
    从她的手机钱包扫描 QR 码并进行付款。这在一分钟内完成。
- en: 'The following is the illustration of Lightning Network payment:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是闪电网络支付的说明：
- en: '![](images/Figure-13.29.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.29.jpg)'
- en: '**Figure 13.29:** Lightning network payment'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.29：** 闪电网络支付'
- en: '[LNURL](toc.xhtml#s300a)'
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[LNURL](toc.xhtml#s300a)'
- en: LNURL is a third layer over Lightning Network. It goes a step further and allows
    you to use Lightning Network to create a channel, make and receive payments, and
    even use it for authentication in a website.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: LNURL 是闪电网络的第三层。它更进一步，允许你使用闪电网络创建通道、进行付款和接收付款，甚至在网站中用于认证。
- en: LNURL pay links are reusable, so it does not require rescanning of invoice on
    every purchase. LNURL involves a server, and when the QR code is scanned, the
    scanning application contacts the LNURL server to perform the required service.
    This way, the sending of invoice happens without user interaction.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: LNURL 支付链接可重复使用，因此不需要在每次购买时重新扫描发票。LNURL 包括一个服务器，当扫描 QR 码时，扫描应用程序会联系 LNURL 服务器执行所需服务。这样，发票的发送就可以在没有用户交互的情况下完成。
- en: 'This allows to use Lightning Network for not just payments but also authentication.
    LNURL is used to implement a few other services, which are specified in the following
    URL:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅允许使用闪电网络进行支付，还可以进行认证。LNURL 用于实现其他一些服务，这些服务在以下 URL 中指定：
- en: '**[https://github.com/fiatjaf/lnurl-rfc](https://github.com/fiatjaf/lnurl-rfc)**'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '**[https://github.com/fiatjaf/lnurl-rfc](https://github.com/fiatjaf/lnurl-rfc)**'
- en: LNURL Auth is one such service enabled by LNURL that allows you to log in to
    a website using Lightning wallet.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: LNURL 认证是 LNURL 启用的一项服务，允许你使用闪电钱包登录网站。
- en: 'We will use the following website to demonstrate LNURL Auth:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下网站演示 LNURL 认证：
- en: '**[https://lightninglogin.live/login](https://lightninglogin.live/login)**'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '**[https://lightninglogin.live/login](https://lightninglogin.live/login)**'
- en: 'The following is the LNURL:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 LNURL：
- en: '![](images/Figure-13.30.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.30.jpg)'
- en: '**Figure 13.30:** LNURL Auth for login to website'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13.30：** 用于网站登录的 LNURL 认证'
- en: 'This decodes to the following:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 解码结果如下：
- en: lightNING:LNURL1DP68GURN8GHJ7MRFVA58GMNFDENKCMM8D9HZUMRFWEJJ7MR0VA5KU0MTXY7N2WTRX4JNYENXVVMXZVTZV43RWCN9XPSKVDECXY6NWEPHXG6KVCNYXEJRXWRPXVUNSVFK893K2CF5XENRXVNRVEJKVCFSVVURYDPCXCN8GCT884KX7EMFDCSMESJ7
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: lightNING:LNURL1DP68GURN8GHJ7MRFVA58GMNFDENKCMM8D9HZUMRFWEJJ7MR0VA5KU0MTXY7N2WTRX4JNYENXVVMXZVTZV43RWCN9XPSKVDECXY6NWEPHXG6KVCNYXEJRXWRPXVUNSVFK893K2CF5XENRXVNRVEJKVCFSVVURYDPCXCN8GCT884KX7EMFDCSMESJ7
- en: 'We used an online application to decode this, and obtained the following URL:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了一个在线应用程序来解码这个，并获得了以下网址：
- en: '**[https://lightninglogin.live/login?k1=59c5e2ffc6a1beb7be0af78157d725fbd6d38a398169cea46f32cfefa0c82486&tag=login](https://lightninglogin.live/login?k1=59c5e2ffc6a1beb7be0af78157d725fbd6d38a398169cea46f32cfefa0c82486&tag=login)**'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '**[https://lightninglogin.live/login?k1=59c5e2ffc6a1beb7be0af78157d725fbd6d38a398169cea46f32cfefa0c82486&tag=login](https://lightninglogin.live/login?k1=59c5e2ffc6a1beb7be0af78157d725fbd6d38a398169cea46f32cfefa0c82486&tag=login)**'
- en: A wallet that supports LNURL’s authentication service will be able to coordinate
    with the LNURL server to authenticate and log in to the server. A simple scanning
    of the QR code can allow a user to log in to a website, and they will not need
    any traditional methods of login.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 支持LNURL身份验证服务的钱包将能够与LNURL服务器协调，以进行身份验证并登录服务器。简单扫描QR码即可让用户登录网站，他们不需要任何传统的登录方法。
- en: '[Merchant integration](toc.xhtml#s301a)'
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[商家整合](toc.xhtml#s301a)'
- en: Lightning Network wallets allow any brick-and-mortar store to simply install
    a mobile wallet and accept payments. For online businesses, the BTCPay server
    provides easy integration of Lightning Wallet with online payment webpage. BTCPay
    is an open-source project. There are others, such as wooCommerce or CoinGate,
    that also provide Lightning Network integration.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络钱包允许任何实体店只需安装一个移动钱包就能接受付款。对于在线业务，BTCPay服务器提供了闪电钱包与在线支付网页的轻松整合。BTCPay是一个开源项目。还有其他一些，比如wooCommerce或CoinGate，也提供了闪电网络的整合。
- en: '[Social media integrations](toc.xhtml#s302a)'
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[社交媒体整合](toc.xhtml#s302a)'
- en: Twitter recently integrated with strike wallet. As of now, anyone with a strike
    wallet can receive bitcoins over Lightning Network channels, and anyone with a
    Lightning wallet can send bitcoins. This mean people can collaborate on a global
    scale and get paid for their services. Additionally, social service organizations
    can directly reach out to people working under tyrannical regimes and help them
    by paying bitcoins directly to them.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: Twitter最近与strike钱包整合。目前，任何拥有strike钱包的人都可以通过闪电网络通道接收比特币，任何拥有闪电钱包的人都可以发送比特币。这意味着人们可以在全球范围内合作，并为他们的服务获得报酬。此外，社会服务机构可以直接联系在专制政权下工作的人，并通过直接向他们支付比特币来帮助他们。
- en: Telegram also has Lightning Network bot called **LNTXBOT,** which can be used
    to pay or request payments.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 电报还有一个名为**LNTXBOT**的闪电网络机器人，可以用来支付或请求付款。
- en: '[Adoption by exchanges](toc.xhtml#s303a)'
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[交易所的采用](toc.xhtml#s303a)'
- en: Some exchanges were quick to adopt Lightning Network. Zebpay, an Indian exchange,
    is one of them. There are many exchanges globally that also support the exchange
    of bitcoins with other currencies or cryptocurrencies using Lightning Network.
    Some of the popular exchanges are Bitfinex, Strike, OKEx, CashApp, Paxful, and
    so on.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 一些交易所迅速采用了闪电网络。印度的Zebpay交易所就是其中之一。全球范围内还有许多交易所支持使用闪电网络进行比特币与其他货币或加密货币的交换。一些知名的交易所包括Bitfinex、Strike、OKEx、CashApp、Paxful等等。
- en: '[Other cryptocurrencies](toc.xhtml#s304a)'
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[其他加密货币](toc.xhtml#s304a)'
- en: Lightning Network requires certain enhancements such as segregated witness to
    overcome the risk of transaction malleability and so on. There are many cryptocurrencies
    that use almost the same codebase and scripting language as Bitcoin. The enhancements
    that enabled Lightning Network on Bitcoin network may also enable Lightning Network
    on many other cryptocurrencies.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络需要一些增强功能，如隔离见证，以克服交易篡改的风险等。有许多加密货币几乎使用与比特币相同的代码库和脚本语言。使比特币网络上的闪电网络成为可能的增强功能也可能使许多其他加密货币上的闪电网络成为可能。
- en: As of now, Litecoin is the only other cryptocurrency that has enabled Lightning
    Network on its network. A few other cryptocurrencies have shown interest, but
    none have added the required support for Lightning till date.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，莱特币是唯一一种在其网络上启用闪电网络的其他加密货币。少数其他加密货币表现出了兴趣，但直到目前为止，没有一种加密货币添加了对闪电网络所需的支持。
- en: '[Cross-chain atomic swap](toc.xhtml#s305a)'
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[跨链原子交换](toc.xhtml#s305a)'
- en: 'You learned how HTLC can be used to swap off-chain balance with on-chain balance
    using Submarine Swaps. Similarly, HTLC can be used to perform cross-chain swaps
    with another cryptocurrency. This has been demonstrated with Litecoin by the Litecoin
    founder Charlie Lee on 16 September, 2017\. A 2-minute demo is available on YouTube
    titled `**Lightning Cross-Blockchain Swap Between Bitcoin and Litecoin**`:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 您学会了如何使用 HTLC 通过 Submarine Swaps 交换链下余额和链上余额。类似地，HTLC 可以用于与另一种加密货币进行跨链交换。这已由莱特币创始人查理·李于2017年9月16日演示。YouTube
    上有一段为时2分钟的演示，标题为`**比特币和莱特币之间的闪电跨链交换**`：
- en: '**https://www.youtube.com/watch?v=cBVcgzEuJ7Q**'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**https://www.youtube.com/watch?v=cBVcgzEuJ7Q**'
- en: '[Network topology](toc.xhtml#s306a)'
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[网络拓扑](toc.xhtml#s306a)'
- en: Lightning Network is still evolving, and the structure of the network may change
    in the future. However, it seems that the overall network is trying to imitate
    postal network where individuals connect to a wallet provider, the wallet maintains
    channels with bigger hops, and bigger hops are connected to a few other similar
    hops to simplify forwarding.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 闪电网络仍在发展中，并且网络结构可能会在未来发生变化。然而，总体上看，该网络似乎试图模仿邮政网络，个体连接到钱包提供者，钱包与更大的跳跃维护通道，更大的跳跃连接到其他几个类似的跳跃，以简化转发。
- en: As an end user, we never need to close our channel with the wallet. If we send
    and receive funds, this channel can continue for extended period; thus, the overall
    fee paid is negligible.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最终用户，我们永远不需要关闭与钱包的通道。如果我们发送和接收资金，则此通道可以持续较长时间；因此，总费用几乎可以忽略不计。
- en: 'The following is the illustration of Lightning Network topology:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是闪电网络拓扑的图示：
- en: '![](images/Figure-13.31.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-13.31.jpg)'
- en: '**Figure 13.31:** Lightning network topology'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13.31：** 闪电网络拓扑'
- en: In the preceding figure, we can see that there are thousands of nodes connected
    with channels. These are public channels, so they can be found and used to update
    topology.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，我们可以看到有数千个节点通过通道连接。这些是公共通道，因此可以找到并用于更新拓扑。
- en: '[Conclusion](toc.xhtml#s307a)'
  id: totrans-327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[结论](toc.xhtml#s307a)'
- en: In this chapter, you learned about the Lightning Network protocol, a layer-two
    protocol of Bitcoin. You learned how Bitcoin’s primitive scripting language makes
    reliable instant transaction possible and understood that Lightning Network has
    its open specification and messaging system to allow different software implementations
    to talk to each other.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了比特币的第二层协议闪电网络协议。您了解到比特币原始脚本语言如何实现可靠的即时交易，并理解了闪电网络有其开放的规范和消息系统，以允许不同的软件实现彼此通信。
- en: You also learned about the nodes that help in routing payments or rebalancing
    of channels and about the ecosystem that is being built for and on Lightning Network.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 您还学习了帮助路由支付或重新平衡通道的节点，以及为闪电网络建立和开发的生态系统。
- en: This brings us to the end of the book. The intention of this book is to help
    build developer community for Bitcoin by making the reader aware of internal details
    of Bitcoin protocol, network, blockchain, transactions, enhancements etc. The
    more developer enters the Bitcoin development community the more secure and better
    Bitcoin will become which gives us hope for more decentralized future.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们到达了书的结尾。本书的目的是通过让读者了解比特币协议、网络、区块链、交易、增强等内部细节，帮助建立比特币开发者社区。开发者进入比特币开发社区越多，比特币就会变得更加安全和更好，这为我们带来了更加去中心化的未来的希望。
- en: '[Points to remember](toc.xhtml#s308a)'
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[需要记住的要点](toc.xhtml#s308a)'
- en: Lightning Network is layer-two protocol and uses Bitcoin transaction scripting.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电网络是第二层协议，使用比特币交易脚本。
- en: It allows instant offline payment of bitcoins.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许比特币的即时离线支付。
- en: To perform offline transactions using Lightning Network, a channel is created
    between the sender and the receiver.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用闪电网络执行离线交易，需要在发送方和接收方之间创建通道。
- en: Offline transactions can be performed if the required funds are available at
    the sender’s end of channel.
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发送方通道端有足够的资金，则可以执行离线交易。
- en: Channels can be unilaterally closed, or a mutual closure can happen.
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道可以单方面关闭，也可以进行双向关闭。
- en: A channel breach is when an attacker closes a channel by publishing an older
    transaction.
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道违规是指攻击者通过发布旧交易来关闭通道。
- en: Victim of a channel breach punishes attacker by publishing justice transaction,
    which contains revocation key provided by the attacker to pay itself the attacker’s
    funds.
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道违规的受害者通过发布正义交易来惩罚攻击者，该交易包含攻击者提供的吊销密钥，以支付攻击者的资金给自己。
- en: A unidirectional channel has funds only at the sender’s end when the channel
    is created.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单向通道在创建时只在发送方的一端有资金。
- en: A bidirectional channel has funds locked at both ends of a channel.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双向通道在通道的两端锁定了资金。
- en: A channel is created by locking funds in 2-of-2-multisig.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在2-of-2多重签名中锁定资金来创建通道。
- en: A payment can be made between two individuals who do not have direct channels
    by routing payments over multiple nodes passing through a sequence of channels.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个没有直接通道的个体之间可以进行支付，通过经过一系列通道的多个节点进行路由支付。
- en: Source routing is when the sender communicates with nodes to build network topology
    to find the best route to the destination.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源路由是指发送方与节点通信以构建网络拓扑，以找到最佳路由到目的地的路径。
- en: Trampoline nodes help the sender find the best route.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trampoline节点帮助发送者找到最佳路由。
- en: Trampoline nodes maintain updated network topology, and the sender only needs
    partial topology.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trampoline节点维护更新的网络拓扑，发送者只需要部分拓扑。
- en: Nodes need to remain online all the time; otherwise, a peer can publish an old
    transaction, and the offline node will lose funds.
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点需要始终保持在线；否则，对等方可能会发布旧交易，而离线节点将损失资金。
- en: Watchtower nodes can serve nodes by monitoring on-chain all the time and publish
    justice transaction if required.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Watchtower节点可以通过始终监视链上情况为节点提供服务，并在需要时发布公正交易。
- en: Nodes can connect to watchtower server and update it regularly about channel
    states and justice transaction.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点可以连接到watchtower服务器并定期更新其通道状态和公正交易。
- en: Circular rebalancing is a method in which a node can balance a channel by moving
    funds to its other channel, which is loaded at the peer side.
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环重新平衡是一种方法，其中节点可以通过将资金转移到其对等方加载的另一个通道来平衡通道。
- en: Submarine swaps or Lightning Loop node helps move on-chain funds to nodes at
    the end of channel or vice versa.
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 潜水交换或闪电环路节点帮助将链下资金移动到通道末端的节点，反之亦然。
- en: Splicing allows you to dynamically add or reduce capacity of a channel without
    bringing a channel offline.
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Splicing允许您在不使通道脱机的情况下动态增加或减少通道的容量。
- en: Adding capacity of channel is called splice-in, and reducing capacity is called
    splice-out.
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加通道容量称为splice-in，减少容量称为splice-out。
- en: Multi-part payment allows a sender to send large value transactions over Lightning
    Network by splitting the amount into smaller values and sending them over different
    channels and routes.
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多部分支付允许发送者通过将金额分割成较小值并通过不同通道和路由发送它们来在闪电网络上发送大额交易。
- en: Lightning Invoice is generated by merchant or receiver and can be in the form
    of QR code. It is used by a sender to make payment.
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪电发票由商家或接收方生成，可以采用QR码形式。发送方用于进行付款。
- en: LNURL is a layer-three protocol.
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LNURL是一个第三层协议。
- en: LNURL provides a way to repeatedly make payment using single QR code.
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LNURL提供了使用单个QR码重复进行支付的方法。
- en: With LNURL, one can perform various other tasks like authentication and creation
    of channels.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LNURL，可以执行各种其他任务，如认证和创建通道。
- en: '[Questions](toc.xhtml#s309a)'
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[问题](toc.xhtml#s309a)'
- en: Explain the difference between the exchange of messages between unidirectional
    and bidirectional channels.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释单向和双向通道之间消息交换的区别。
- en: Why is it important for public routing nodes to keep the channel balanced?
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公共路由节点保持通道平衡的重要性是什么？
- en: What are the benefits of using Trampoline nodes over source routing?
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用跳板节点比源路由有什么好处？
- en: Explain the benefits of using MPP.
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释使用 MPP 的好处。
- en: 'Fill in the blanks:'
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填空：
- en: Capacity of a channel can be increased by channel management technique called
    ___________ .
  id: totrans-364
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过称为 ___________ 的通道管理技术可以增加通道的容量。
- en: Lightning Network can be used for authenticating a site by using LNURL _______
    .
  id: totrans-365
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 闪电网络可以通过使用 LNURL _______ 对站点进行身份验证。
- en: Lightning Network has been demonstrated to perform _______ ______ of values
    between Bitcoin node and Litecoin node.
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 闪电网络已被证明可以在比特币节点和莱特币节点之间进行 _______ ______ 值的传输。
- en: 'True/False:'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真/假：
- en: LNURL is layer-three protocol because it has its own messaging protocol that
    helps establish and perform Lightning Network operations.
  id: totrans-368
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LNURL 是第三层协议，因为它具有自己的消息传递协议，可以帮助建立和执行闪电网络操作。
- en: Circular rebalancing is the best suited channel balancing method for merchants
    as they mostly always receive funds.
  id: totrans-369
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 圆形重新平衡是最适合商家的通道平衡方法，因为他们大多数时候都会收到资金。
- en: Turbo channels are without risks, so high-capacity channel can be opened.
  id: totrans-370
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Turbo 通道没有风险，因此可以打开高容量通道。
- en: Lightning Network usability depends on how well nodes are interconnected, which
    depends on its popularity.
  id: totrans-371
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 闪电网络的可用性取决于节点之间的连接情况，这取决于其流行程度。
- en: Create lists of custodial and non-custodial wallets.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建托管和非托管钱包的列表。
- en: Install Lightning Network wallet, make a payment, and try to guess the steps
    that have happened in the background.
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装闪电网络钱包，进行付款，并尝试猜测后台发生的步骤。
