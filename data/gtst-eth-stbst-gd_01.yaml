- en: © The Author(s), under exclusive license to APress Media, LLC, part of Springer
    Nature 2022D. P. BauerGetting Started with Ethereum [https://doi.org/10.1007/978-1-4842-8045-4_1](https://doi.org/10.1007/978-1-4842-8045-4_1)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家许可给APress Media，LLC，Springer Nature旗下的一部分 2022D. P. Bauer开始使用以太坊 [https://doi.org/10.1007/978-1-4842-8045-4_1](https://doi.org/10.1007/978-1-4842-8045-4_1)
- en: 1. Getting Started
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1. 入门
- en: Davi Pedro Bauer^([1](#Aff2)  )(1)Campo Bom, Rio Grande do Sul, Brazil
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大卫·佩德罗·鲍尔^([1](#Aff2)  )(1) 圣保罗，巴西南部，巴西
- en: In this chapter, I’ll explain what Ethereum is and take you through the installations
    you’ll need to perform before you can start using it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将解释以太坊是什么，并带领你完成必须执行的安装，然后才能开始使用它。
- en: What Is Ethereum?
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以太坊是什么？
- en: Ethereum solves problems that go beyond Bitcoin. When developing decentralized
    applications, we need a platform where we can code not only coins but a wide variety
    of solutions.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊解决了超越比特币的问题。在开发去中心化应用程序时，我们需要一个平台，我们不仅可以编码硬币，还可以编码各种各样的解决方案。
- en: Ethereum is a platform that allows you to code smart contracts in the Solidity
    language. Using it, you can compile your code into bytecode to be interpreted
    by the Ethereum Virtual Machine (EVM).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊是一个允许您使用Solidity语言编写智能合约的平台。使用它，您可以将代码编译成字节码，以供以太坊虚拟机（EVM）解释。
- en: This virtual machine will interpret the instructions contained in the bytecode
    of your smart contract and will create a new state based on the rules described
    in the contract. It’s like you have a state machine in your hand, where with every
    new state update, a new record is updated on the blockchain.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此虚拟机将解释智能合约字节码中包含的指令，并根据合同中描述的规则创建新状态。就像你手里有一个状态机，每次新状态更新时，区块链上的新记录都会更新。
- en: A virtual machine like EVM consumes resources, so you need a mechanism that
    generates incentives for more people to be nodes on the network while also preventing
    spam attacks. Because of this, an element called *gas* is required for the actions
    to be executed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 类似EVM的虚拟机会消耗资源，因此您需要一种机制来激励更多的人成为网络中的节点，同时防止垃圾邮件攻击。因此，执行操作需要一个称为*气体*的元素。
- en: To secure gas, you must first have *ether*, which is the currency of the Ethereum
    network. You use gas to pay for computing, so think of it as the cost of using
    the system. You will need gas to perform most of the activities described in this
    book.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保使用气体，你首先必须拥有*Ether*，这是以太坊网络的货币。你使用气体来支付计算费用，因此可以将其视为使用系统的成本。你将需要气体来执行本书中描述的大多数活动。
- en: The Ethereum platform allows you to build decentralized applications, which
    are applications where the source code is immutable and the data is impossible
    to change after writing. This opens up a range of new solutions, such as voting,
    supply chain, and decentralized finance, among others.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊平台允许您构建去中心化应用程序，这些应用程序的源代码是不可变的，数据在编写后无法更改。这开辟了一系列新的解决方案，如投票、供应链和去中心化金融等。
- en: The best way to learn is by coding, so let’s get started.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳学习方式是编码，所以让我们开始吧。
- en: Installing Visual Studio Code
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Visual Studio Code
- en: Before you can start using Ethereum, you’ll need to install some software. First
    is Visual Studio Code,^([1](#Fn1)) an open source code editor that includes features
    for debugging, task execution, and version management. It provides developers
    with only the tools they need for a fast code-build-debug cycle, leaving more
    complicated processes to full-featured IDEs like Visual Studio IDE.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用以太坊之前，您需要安装一些软件。首先是 Visual Studio Code，^([1](#Fn1)) 这是一个开源的代码编辑器，包含了调试、任务执行和版本管理等功能。它为开发人员提供了只需要的工具，以进行快速的代码构建和调试循环，将更复杂的过程留给像
    Visual Studio IDE 这样的完整功能的 IDE。
- en: You can download it for free for different platforms like Windows, Linux, and
    Mac. All exercises in the book were based on the use of this tool.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以免费下载它，适用于不同平台，如 Windows、Linux 和 Mac。本书中的所有练习都是基于使用这个工具的。
- en: Installing Docker
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Docker
- en: Docker^([2](#Fn2)) is a free and open platform for creating, delivering, and
    executing applications. Docker allows you to decouple your apps from your infrastructure,
    allowing you to deploy software more quickly. Docker allows you to manage your
    infrastructure in the same manner that you control your apps. By utilizing Docker’s
    techniques for fast shipping, testing, and deploying code, you may substantially
    shorten the time between developing code and executing it in production. You will
    need Docker to be started before compiling using Truffle.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Docker^([2](#Fn2)) 是一个免费且开放的平台，用于创建、交付和执行应用程序。Docker 允许您将应用程序与基础架构解耦，从而可以更快地部署软件。Docker
    允许您以与控制应用程序相同的方式来管理基础架构。通过利用 Docker 的快速交付、测试和部署代码的技术，您可以大大缩短开发代码和将其在生产中执行之间的时间。在使用
    Truffle 进行编译之前，您需要启动 Docker。
- en: Installing the Blockchain Dev Kit Extension on VS Code
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 VS Code 上安装区块链开发工具包扩展
- en: The Blockchain Developer Kit for Ethereum^([3](#Fn3)) was designed for both
    new users of Ethereum and those who are already familiar with the process. One
    of the primary goals is to assist users in creating a project structure for these
    smart contracts; it also helps users compile and build the assets, deploy the
    assets to blockchain endpoints, and perform contract debugging.^([4](#Fn4))
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊区块链开发工具包^([3](#Fn3)) 专为新手和已经熟悉流程的用户设计。其主要目标之一是帮助用户为这些智能合约创建项目结构；它还帮助用户编译和构建资产、将资产部署到区块链端点，并执行合约调试。^([4](#Fn4))
- en: Installing the Extension
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装扩展
- en: Go to Extensions and search for *Blockchain Development Kit for Ethereum*. Click
    the extension created by Microsoft; it will usually be the first one (Figure [1-1](#Fig1)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig1_HTML.jpg)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 前往扩展并搜索*以太坊区块链开发工具包*。点击由微软创建的扩展；通常会是第一个（图[1-1](#Fig1)）。![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig1_HTML.jpg)
- en: A screenshot of the Extensions window of the marketplace. The search bar displays
    Blockchain Development Kit for Ethereum. The blockchain development extension
    is the first one and is selected. The properties of this extension include development,
    deployment, debugging, and management.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 市场扩展窗口的截图。搜索栏显示以太坊区块链开发工具包。区块链开发扩展是第一个并且被选中的。此扩展的属性包括开发、部署、调试和管理。
- en: Figure 1-1
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-1
- en: Installing the Blockchain Development Kit for Ethereum
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 安装以太坊区块链开发工具包
- en: Click Install and wait for the installation to finish. That’s done!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 单击安装，等待安装完成。完成！
- en: Installing Truffle
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Truffle
- en: Truffle^([5](#Fn5)) is an Ethereum development environment, testing framework,
    and asset pipeline that aims to make life easier for Ethereum developers. We will
    use this tool throughout the book.^([6](#Fn6))
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle^([5](#Fn5)) 是一个以太坊开发环境、测试框架和资产管道，旨在为以太坊开发者提供更轻松的生活。我们将在本书中使用这个工具。^([6](#Fn6))
- en: Installing Truffle
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Truffle
- en: Go to the terminal window and install the Truffle package.$ npm install -g truffle
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 转到终端窗口并安装 Truffle 包。$ npm install -g truffle
- en: Checking Truffle Installation
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查 Truffle 安装
- en: Now you can check whether the installation completed successfully. If you see
    the result shown in Figure [1-2](#Fig2), the installation was successful.$ truffle![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig2_HTML.jpg)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以检查安装是否成功。如果您看到图 [1-2](#Fig2) 中显示的结果，那么安装成功了。$ truffle![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig2_HTML.jpg)
- en: A screenshot of the truffle command output has details of installation on top,
    followed by Truffle v 5 point 2 point 6, a development framework for Ethereum.
    Further below, the usage details are provided and there is a long list of commands
    and their functions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 命令输出的屏幕截图显示了顶部的安装详细信息，接着是 Truffle v 5.2.6，这是用于以太坊的开发框架。更下面提供了使用详情，并列出了一长串命令及其功能。
- en: Figure 1-2
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-2
- en: Truffle command output result
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 命令输出结果
- en: Installing the Ganache CLI
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Ganache 命令行界面
- en: Ganache^([7](#Fn7)) is a personal blockchain that allows for the rapid development
    of the Ethereum and Corda distributed applications. Ganache can be used throughout
    the development cycle, allowing you to develop, deploy, and test your DApps in
    a secure and deterministic environment.^([8](#Fn8))
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache^([7](#Fn7)) 是一个个人区块链，可快速开发以太坊和 Corda 分布式应用。Ganache 可在开发周期中使用，让您在安全且确定性的环境中开发、部署和测试您的
    DApps。^([8](#Fn8))
- en: Installing Ganache
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Ganache
- en: Go to the terminal window and install the Ganache command line.npm install -g
    ganache-cli
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 转到终端窗口并安装 Ganache 命令行界面。npm install -g ganache-cli
- en: Starting Ganache Locally
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在本地启动 Ganache
- en: Start the Ganache CLI on 127.0.0.1:8545 using the following command:ganache-cliUsing
    this command, in addition to starting Ganache locally, it will generate ten accounts
    with their respective public and private keys so that you can use them for test
    purposes (Figure [1-3](#Fig3)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig3_HTML.jpg)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令在 127.0.0.1:8545 上启动 Ganache CLI：ganache-cli。通过这个命令，除了在本地启动 Ganache 外，它还会生成十个带有各自公钥和私钥的账户，以便您用于测试目的（见图
    [1-3](#Fig3)）。
- en: 'A screenshot of the available accounts generated by Ganache. Details of installation
    are displayed on top, followed by Ganache C L 1 v 6\. point 12 point 2, ganache-core:
    2 point 13 point 2\. Further below, there is a list of available accounts, with
    long codes and 100 E T H within parentheses with each code.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '一个由 Ganache 生成的可用账户的截图。安装详情显示在顶部，后跟 Ganache C L 1 v 6\. 点 12 点 2，ganache-core:
    2 点 13 点 2。更下面，有一个可用账户列表，每个账户都有长代码和括号内的 100 E T H。'
- en: Figure 1-3
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-3
- en: Accounts generated by Ganache
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Ganache 生成的账户
- en: Installing and Setting Up MetaMask Wallet
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装并设置 MetaMask 钱包
- en: MetaMask^([9](#Fn9)) is a browser extension that allows you to access Ethereum-enabled
    distributed applications, or DApps. The add-on injects the Ethereum Web3 API^([10](#Fn10))
    into the JavaScript context of every website, allowing DApps to read from the
    blockchain.^([11](#Fn11))
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: MetaMask^([9](#Fn9)) 是一个浏览器扩展，允许您访问基于以太坊的分布式应用程序，或 DApps。此附加组件将以太坊 Web3 API^([10](#Fn10))
    注入到每个网站的 JavaScript 上下文中，使 DApps 能够从区块链中读取数据。^([11](#Fn11))
- en: When a DApp wants to make a transaction and publish it to the blockchain, MetaMask
    gives the user a secure interface to evaluate the transaction before approving
    or rejecting it through private keys, local client wallets, and hardware wallets
    like Trezor.^([12](#Fn12))
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个 DApp 想要执行交易并将其发布到区块链时，MetaMask 会为用户提供一个安全界面，以通过私钥、本地客户端钱包和像 Trezor 这样的硬件钱包评估交易并批准或拒绝它。^([12](#Fn12))
- en: Installing the Wallet
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装钱包
- en: Go to [https://metamask.io](https://metamask.io) and click Install MetaMask.
    Click Add to Brave or your browser name and then click “Add extension.” Finally,
    click “Get started.”
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 [https://metamask.io](https://metamask.io)，点击安装 MetaMask。点击添加到 Brave 或您的浏览器名称，然后点击“添加扩展”。最后，点击“开始”。
- en: Configuring the Wallet
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置钱包
- en: Click “Create a wallet” and then click “No thanks” (if you prefer, click “I
    agree” instead). Define the password that you will use to open your wallet and
    then confirm the password. Agree to the terms of use. Finally, click Create. Now
    you can back up your secret phrase (you can also do it later). For now, click
    “Remind me later.” Your wallet is done!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“创建钱包”，然后点击“不，谢谢”（如果您愿意，也可以点击“我同意”）。定义您将用于打开钱包的密码，然后确认密码。同意使用条款。最后，点击创建。现在您可以备份您的秘密短语（您也可以稍后进行）。暂时点击“稍后提醒我”。您的钱包已经完成了！
- en: Accessing Your Wallet
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问您的钱包
- en: Click Extensions and pin MetaMask to your bar. Now, click the MetaMask icon,
    and your wallet will be shown.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 点击扩展并将 MetaMask 固定到您的栏中。现在，点击 MetaMask 图标，您的钱包将显示。
- en: Discovering Your Wallet Address
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发现你的钱包地址
- en: Click the three dots on the upper-right side and then click “Account details.”
    Notice that you can see your wallet address in hash format and in QR code format.
    You can also copy your wallet address by clicking the account name. That’s it!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 点击右上角的三个点，然后点击“账户详细信息”。注意你可以以哈希格式和二维码格式查看你的钱包地址。你也可以通过点击账户名复制你的钱包地址。就是这样！
- en: Create an Account on Infura
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Infura 上创建账户
- en: Infura^([13](#Fn13)) delivers the tools and infrastructure that enable developers
    to rapidly transition their blockchain application from testing to scaled deployment,
    all while maintaining simple, dependable access to Ethereum and IPFS. A well-known
    use case that uses Infura as a data interface is Uniswap.^([14](#Fn14))^,^([15](#Fn15))
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Infura^([13](#Fn13)) 提供工具和基础设施，使开发人员能够快速将他们的区块链应用从测试转移到规模化部署，同时保持对以太坊和 IPFS
    的简单、可靠的访问。一个常见的使用 Infura 作为数据接口的用例是 Uniswap。^([14](#Fn14))^,^([15](#Fn15))
- en: Creating a New Account
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个新账户
- en: Go to [Infura](https://infura.io/)^([16](#Fn16)) and click “Get started for
    free.” Enter your email and password and then click “Sign up.” A verification
    email will be sent to your address (Figure [1-4](#Fig4)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig4_HTML.jpg)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 [Infura](https://infura.io/)^([16](#Fn16)) 并点击“免费入门”。输入你的电子邮件和密码，然后点击“注册”。一封验证电子邮件将发送到你的地址（图
    [1-4](#Fig4)）。![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig4_HTML.jpg)
- en: A screenshot of the Infura welcome page has Etherium and Filecoin on the left.
    The window reads, Let's get started. Our E t h 2 A P I is live. Request access
    to our private beta now. Building with Filecoin? Join the waitlist for the Infura
    Filecoin A P I. Get started and create your first project to access the Ethereum
    network exclamation mark.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Infura 欢迎页面的屏幕截图左侧有以太坊和 Filecoin。窗口显示，“让我们开始吧。我们的 E t h 2 A P I 已上线。立即申请我们的私人测试版。正在使用
    Filecoin 进行构建？加入 Infura Filecoin A P I 的等待列表。开始并创建你的第一个项目以访问以太坊网络！”
- en: Figure 1-4
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-4
- en: The Infura welcome page you will see after logging in
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后你将看到的 Infura 欢迎页面
- en: Check your email and confirm your account by clicking the verification link.
    After that, you will be redirected to your dashboard. Click the Ethereum tab in
    the left menu.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 检查你的电子邮件，并通过点击验证链接确认你的账户。之后，你将被重定向到你的仪表板。点击左侧菜单中的以太坊选项卡。
- en: Now that your account is created, you can start setting up a new project (Figure
    [1-5](#Fig5)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig5_HTML.jpg)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的账户已创建，你可以开始设置一个新项目（图 [1-5](#Fig5)）。![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig5_HTML.jpg)
- en: The project's homepage has Etherium and Filecoin on the left, where Ethereum
    is chosen. The window reads, Instant access over H T T P S and Web Sockets to
    the Ethereum network. Below the text, the Create a project button is shown.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的主页左侧有以太坊和 Filecoin，选择了以太坊。窗口显示，“通过 H T T P S 和 Web Sockets 即时访问以太坊网络。文本下方显示“创建项目”按钮。
- en: Figure 1-5
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-5
- en: Clicking Ethereum takes you to the project’s home page
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 点击以太坊将你带到项目的主页
- en: Setting Up Your Infura Project
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置您的 Infura 项目
- en: Access your dashboard and click Ethereum. Then click “Create a project” and
    define the project name. Notice that you can connect with different testnets and
    also to the mainnet. Save the changes.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 登录您的仪表板，点击以太坊。然后点击“创建项目”并定义项目名称。请注意，您可以连接不同的测试网络，也可以连接到主网。保存更改。
- en: After the project is created, information about the ID, secret, and endpoint
    for the connection is provided (Figure [1-6](#Fig6)).![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig6_HTML.jpg)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 创建项目后，提供有关连接的 ID、密钥和端点的信息（图 [1-6](#Fig6)）。![](../images/521550_1_En_1_Chapter/521550_1_En_1_Fig6_HTML.jpg)
- en: The Infura project page has project details on top and Keys below. There is
    a bar for name and a button labelled save changes under the bar. Under keys, the
    sections are Project I D with the displayed I D, Project Secret with a bar, and
    endpoints, where Mainnet is entered. There are two links below.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Infura 项目页面顶部显示项目详情，下面是 Keys。顶部有一个名称栏和一个标记为保存更改的按钮。在 keys 下面，部分是项目 I D，显示的 I
    D，项目密钥，带有一个栏，和端点，其中输入了 Mainnet。下面有两个链接。
- en: Figure 1-6
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-6
- en: Infura project details page
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Infura 项目详情页面
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, you learned what Ethereum is and how to install the necessary
    software to begin developing smart contracts.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了以太坊是什么，以及如何安装必要的软件开始开发智能合约。
- en: In the next chapter, you will explore Solidity and learn how to set up your
    first project in this language.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将探索 Solidity 并学习如何在此语言中设置您的第一个项目。
