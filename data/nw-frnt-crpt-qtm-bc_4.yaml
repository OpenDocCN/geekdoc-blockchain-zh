- en: © The Editor(s) (if applicable) and The Author(s), under exclusive license to
    Springer Nature Switzerland AG 2020K. S. MohamedNew Frontiers in Cryptography[https://doi.org/10.1007/978-3-030-58996-7_4](https://doi.org/10.1007/978-3-030-58996-7_4)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 编辑（如适用）和作者（如适用），独家许可给Springer Nature Switzerland AG 2020K. S. Mohamed密码学的新前沿[https://doi.org/10.1007/978-3-030-58996-7_4](https://doi.org/10.1007/978-3-030-58996-7_4)
- en: '4. New Trends in Cryptography: Quantum, Blockchain, Lightweight, Chaotic, and
    DNA Cryptography'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 密码学的新趋势：量子、区块链、轻量级、混沌和DNA密码学
- en: Khaled Salah Mohamed^([1](#Aff2) )(1)A Siemens Business, Fremont, CA, USAKeywordsQuantum
    cryptographyDNA cryptographyLightweight cryptographyBlockchain cryptographyChaotic
    cryptographyBitcoinHardwarePRESENTFactorizationSmart contractIn this chapter,
    various trends in cryptographic approaches are surveyed and analyzed. Moreover,
    pros and cons of each approach are highlighted.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Khaled Salah Mohamed^([1](#Aff2) )(1)A Siemens Business, Fremont, CA, USA关键词量子密码学DNA密码学轻量级密码学区块链密码学混沌密码学比特币硬件PRESENT分解智能合约在本章中，对密码学方法的各种趋势进行了调查和分析。此外，突出了每种方法的优缺点。
- en: 4.1 DNA Cryptography
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1 DNA密码学
- en: 'DNA cryptography is a promising and rapid emerging field in data security.
    DNA cryptography may bring forward a new hope for unbreakable algorithms. DNA
    cryptology combines cryptology and modern biotechnology. To encrypt using DNA,
    sender generates a DNA encoding table, and receiver generates another table through
    the same encoding technique and sends a clue to the sender to be able to generate
    it locally. The plaintext to be encoded is divided into two halves equally. If
    the plaintext is not even, we insert random padding. One half of the plaintext
    is converted into DNA sequence using sender-based table, and the other half of
    the plaintext is converted into DNA sequence using receiver-based table. DNA cryptography
    is a bio-inspired novel technique used for securing end to end communication,
    where DNA is used as an information carrier. DNA cryptography is assumed to be
    unbreakable algorithm [[23](#CR23)–[26](#CR26)]. The advantages of DNA computing
    over traditional computing are as follows [[27](#CR27)]:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: DNA密码学是数据安全领域中一种有前景且迅速崛起的领域。DNA密码学可能为不可破解算法带来新的希望。DNA密码学结合了密码学和现代生物技术。要使用DNA进行加密，发送方生成一个DNA编码表，接收方通过相同的编码技术生成另一个表，并向发送方发送线索，以便能够在本地生成它。要编码的明文被平均分成两半。如果明文不是偶数，我们插入随机填充。明文的一半使用基于发送方的表转换为DNA序列，另一半使用基于接收方的表转换为DNA序列。DNA密码学是一种受生物启发的新技术，用于保护端到端通信，在其中DNA被用作信息载体。DNA密码学被假定为不可破解的算法[[23](#CR23)–[26](#CR26)]。DNA计算与传统计算相比的优势如下[[27](#CR27)]：
- en: '*Speed:* Conventional computers  have been known to perform approximately 10⁸
    instructions per second (MIPS). Combining DNA strands has been predicted to make
    computations equivalent to 10⁹.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*速度：* 传统计算机已知每秒执行约10⁸条指令（MIPS）。预测DNA链的组合将使计算等效于10⁹。'
- en: '*Storage:* DNA stores memory at the rate of 1 bit/nm³, whereas conventional
    storage media can store 1 bit/10^(12) nm³.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*存储:* DNA以1比特/nm³的速率存储记忆，而传统存储介质可以存储1比特/10^(12) nm³。'
- en: '*Power Requirements:* DNA computing does not require power, while computation
    is taking place. The chemical reactions that create the building blocks of DNA
    take place without any external power source.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*功率需求:* DNA计算在进行计算时不需要电力。创建DNA构建块的化学反应在没有任何外部电源的情况下进行。'
- en: In a nutshell, DNA computing has the characteristics of high parallelism, large
    storage capacity, and low-energy consumption [[33](#CR33)–[35](#CR35)]. DNA cryptography
    has a wide range of applications and can be implemented in various fields like
    mobile networks, cloud computing, IoT devices, real-time applications, the Internet,
    and multicast applications to secure plaintext messages, images, videos, servers,
    etc. [[36](#CR36), [37](#CR37)].
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，DNA计算具有高并行性、大存储容量和低能耗的特性[[33](#CR33)–[35](#CR35)]。DNA密码学在移动网络、云计算、物联网设备、实时应用程序、互联网和多播应用等各个领域有广泛的应用，用于保护明文消息、图像、视频、服务器等[[36](#CR36),
    [37](#CR37)]。
- en: 4.1.1 Fundamentals of DNA Computing
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1.1 DNA计算基础
- en: DNA means deoxyribonucleic acid formed using four basic nucleic acids, namely,
    adenine (A), cytosine (C), guanine (G), and thymine (T) as depicted in Fig. [4.1](#Fig1).
    The pairs as (A, T) and (C, G) complement each other. These alphabets can be easily
    assigned to binary values *(A-00, C-01, G-10, T-11*). By these encoding rules,
    there are 4! = 24 possible encoding methods. However, only eight coding combinations
    are suitable for the principle of complementarity. Because the binary numbers
    “0” and “1” are complementary, “00” and “11” and “01” and “10” are also complementary
    [[23](#CR23), [24](#CR24)].![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig1_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig1_HTML.png)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DNA意味着由腺嘌呤（A）、胞嘧啶（C）、鸟嘌呤（G）和胸腺嘧啶（T）四种基本核酸形成的脱氧核糖核酸，如图[4.1](#Fig1)所示。成对的（A，T）和（C，G）互补。这些字母可以轻松地分配给二进制值*(A-00，C-01，G-10，T-11*)。按照这些编码规则，有4! = 24种可能的编码方法。然而，只有八种编码组合适用于互补原则。因为二进制数“0”和“1”是互补的，“00”和“11”以及“01”和“10”也是互补的[[23](#CR23),
    [24](#CR24)]。
- en: Fig. 4.1
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1
- en: Bases of DNA block
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: DNA区块的碱基
- en: 4.1.2 DNA Cryptography Algorithm
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1.2 DNA密码算法
- en: 'DNA encryption  can be performed through the following steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 可通过以下步骤进行DNA加密：
- en: Convert the plaintext message into an ASCII form and then convert it to 8 bits
    binary coded form (Fig. [4.2](#Fig2)).
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将明文消息转换为ASCII形式，然后将其转换为8位二进制编码形式（图[4.2](#Fig2)）。
- en: 'Represent the binary data in the DNA coded form (A-00, C-01, G-10, T-11): *convert
    encode binary information into DNA strands*.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以DNA编码形式表示二进制数据（A-00，C-01，G-10，T-11）：*将编码二进制信息转换为DNA链*。
- en: Apply complementary rule to the sequence (A → C, C → G, G → T, T → A).
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对序列应用互补规则（A → C，C → G，G → T，T → A）。
- en: Convert it back to binary.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其转换回二进制。
- en: Generate random key and convert it into DND strands then into binary format.
    The random key has to be a number between 1 and 256\. This random key determines
    the permutation of the four characters A, T, G, and C. For example, when the random
    key is 1, there is a table for the conversion of ASCII code to nucleotide sequences,
    and when it is 2, there is another table and so on.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成随机密钥并将其转换为DND链，然后转换为二进制格式。随机密钥必须是1到256之间的数字。这个随机密钥确定了字符A、T、G和C的排列。例如，当随机密钥为1时，存在一个将ASCII代码转换为核苷酸序列的表，当随机密钥为2时，存在另一个表，依此类推。
- en: XORing the key with the data.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用密钥与数据进行异或操作。
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig2_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig2_HTML.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig2_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig2_HTML.png)'
- en: Fig. 4.2
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2
- en: ASCII symbols and their corresponding DNA sequence
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ASCII符号及其对应的DNA序列
- en: DNA decryption  is the reverse operation of DNA encryption. The total key space
    results is approximating to *10*^(*23*). With such huge key space, the reliability
    and effectiveness of the algorithm are established as the *key* associated is
    quite unpredictable and resistant against brute force attacks. Figure [4.3](#Fig3)
    shows the results of encryption of an image using DNA cryptography.![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig3_HTML.jpg](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig3_HTML.jpg)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: DNA解密是DNA加密的逆操作。总密钥空间结果近似为*10*^(*23*)。由于密钥空间如此之大，算法的可靠性和有效性得到了确立，因为相关的*密钥*相当难以预测，且抵抗暴力破解攻击。图[4.3](#Fig3)显示了使用DNA密码学加密图像的结果。![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig3_HTML.jpg](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig3_HTML.jpg)
- en: Fig. 4.3
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3
- en: (**a**) unencrypted image, (**b**) DNA-based encrypted image
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: (**a**) 未加密的图像，(**b**) 基于DNA的加密图像
- en: 4.2 Quantum Cryptography
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2 量子密码学
- en: Quantum cryptography uses physics to develop a cryptosystem completely secure
    against being compromised without the knowledge of the sender or the receiver
    of the messages. The word *quantum*  itself refers to the most fundamental behavior
    of the smallest particles of matter and energy. In 1982, Richard Feynman came
    up with the idea of quantum computer, a computer that uses the effects of quantum
    mechanics to its advantage. In quantum cryptography, two remote parties can communicate
    securely by using the laws of quantum physics. Quantum cryptography is different
    from traditional cryptographic systems in that it relies more on physics, rather
    than mathematics, as a key aspectof its security model.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 量子密码学利用物理学来开发一个完全安全的密码系统，而无需发送方或接收方的知识即可避免被破解。*量子*一词本身指的是物质和能量的最基本行为。1982年，理查德·费曼提出了量子计算机的概念，这是一种利用量子力学效应来获益的计算机。在量子密码学中，两个远程方可以利用量子物理定律进行安全通信。量子密码学不同于传统的密码系统，它更多地依赖于物理学，而不是数学，作为其安全模型的关键方面之一。
- en: 4.2.1 Properties of Quantum Information
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.1 量子信息的特性
- en: 'Quantum cryptography rests on two pillars quantum mechanics [[28](#CR28)–[31](#CR31)]:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 量子密码学基于量子力学的两大支柱[[28](#CR28)–[31](#CR31)]：
- en: '*The Heisenberg uncertainty principle*: it is not possible to measure the quantum
    state  of any system without disturbing that system. Thus, the polarization of
    a photon or light particle can only be known at the point when it is measured.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*海森堡不确定性原理*：不可能在不干扰系统的情况下测量任何系统的量子状态。因此，光子或光粒子的极化只能在测量时知道。'
- en: '*The photon polarization principle:* how light photons  can be oriented or
    polarized in specific directions. Moreover, a photon filter with the correct polarization
    can only detect a polarized photon or else the photon will be destroyed.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*光子极化原理*：光子如何以特定方向定向或极化。此外，具有正确极化的光子滤波器只能检测到极化的光子，否则光子将被销毁。'
- en: Quantum computer exploits a kind of massive parallelism that cannot be approached
    by any classical computer. So, it is faster [[17](#CR17)]. Quantum technology
    is a promising solution to overcome information security risks. Key distribution
    is one of the most important challenges of cryptography. Quantum cryptography
    can help in solving this problem. In quantum cryptography information is transmitted
    by quantum bit, also called qubit, which is actually a single photon particle.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算机利用一种无法被任何经典计算机所逼近的大规模并行性。因此，它比任何经典计算机都更快[[17](#CR17)]。量子技术是克服信息安全风险的一种有希望的解决方案。密钥分发是密码学中最重要的挑战之一。量子密码学可以帮助解决这个问题。在量子密码学中，信息通过量子比特传输，也称为量子位，实际上是一个单一的光子粒子。
- en: The current methods for breaking RSA are not very effective. One method is to
    factor the N described by the public key. However, with the magnitude of the primes
    chosen, factoring takes near-infinite time with current methods and technologies
    (factoring time grows exponentially with input length in bits). In the present
    day, RSA cannot be broken. However, theoretically it is vulnerable, if a fast
    algorithm of semi-prime factoring was discovered. So, quantum computing is a threat
    for RSA encryption.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 目前破解RSA的方法并不十分有效。一种方法是分解由公钥描述的N。然而，随着选择的质数的数量级增加，使用当前的方法和技术进行因式分解需要近乎无限的时间（随着输入长度（以位为单位）的增加，因式分解时间呈指数级增长）。在当前，RSA是无法破解的。然而，从理论上讲，如果发现了一种快速的半素数因式分解算法，那么它就是脆弱的。因此，量子计算对RSA加密构成威胁。
- en: For years, quantum computers have just been research, theory, and proposals.
    D-Wave is one of the companies that are making quantum computers a reality.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，量子计算机一直只是研究、理论和提案。D-Wave是正在使量子计算机成为现实的公司之一。
- en: 'A regular bit is a transistor that registers either a high or low voltage,
    which corresponds to 1 or 0, respectively. A quantum bit is a 2-state quantum.
    Many things can be used as qubits, such as a photon’s horizontal and vertical
    polarization or the spin up or spin down of an electron. Qubits also have very
    important properties [[38](#CR38)]:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个普通的比特是一个可以记录高电压或低电压的晶体管，分别对应1或0。量子比特是一个具有2个状态的量子系统。许多物理量可以被用作量子比特，比如光子的水平和垂直极化，或者电子的自旋向上或向下。量子比特还具有非常重要的特性[[38](#CR38)]：
- en: '*Superposition*: this is where a qubit is, while left unobserved, all of its
    possible states. Once observed, it will collapse into one of the possible states.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*叠加态*：当一个量子位（qubit）未被观察时，它处于所有可能状态之中。一旦被观察，它将会坍缩为其中一种可能状态。'
- en: '*Entanglement*: This is where one qubit’s state is linked to another. When
    entangled with each other, a change in one of the entangled qubits will change
    the other instantly.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*纠缠*：这是一个量子位的状态与另一个相关联的情况。当彼此纠缠时，一个纠缠的量子位的改变会立即改变另一个量子位。'
- en: 4.2.2 Quantum Algorithms
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.2 量子算法
- en: The promise of quantum computing is that it will help us solve some of the world’s
    most complex challenges. Quantum systems will have capabilities that exceed our
    most powerful supercomputers. The two basic algorithms of quantum cryptography
    are Shor’s algorithm and the Grover’s algorithm.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算的承诺在于它将帮助我们解决一些世界上最复杂的挑战。量子系统将具有超越我们最强大的超级计算机的能力。量子密码学的两个基本算法是Shor算法和Grover算法。
- en: 4.2.2.1 Grover’s Algorithm
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.2.2.1 Grover算法
- en: Grover’s algorithm  is a quantum algorithm that finds with high probability
    the unique input to a black box function that produces a particular output value.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Grover算法 是一种量子算法，可以高概率地找到黑盒函数的唯一输入，产生特定输出值。
- en: 4.2.2.2 Shor’s Algorithm
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.2.2.2 Shor算法
- en: 'Shor’s algorithm  provides a dramatic improvement in the efficiency of factoring
    large numbers. Thus, Shor’s algorithm can be used to attack RSA encryption and
    related problems. It solves the following problem: Given an integer N, find its
    prime factors [[39](#CR39)].'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Shor算法 提供了对大数进行因式分解的效率显著提高。因此，Shor算法可用于攻击RSA加密和相关问题。它解决了以下问题：给定整数N，找到其质因数[[39](#CR39)]。
- en: '4.2.2.3 Quantum Cryptography Algorithm: The BB84 Protocol'
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.2.2.3 量子密码学算法：BB84协议
- en: The fundamental concept of quantum cryptography is sending secret key in the
    form of photons  through an insecure channel. Binary data (zero and one) is encoded
    to a quantum state based on physics theories. Quantum cryptography is also well-known
    as quantum key distribution (*QKD*)  . There are two channels in this system.
    The first channel is used to transmit the quantum secret key with a single photon.
    The second channel is a public channel like a telephone line or the Internet used
    to exchange cryptography protocols. The lasers, specifically diode lasers, in
    the area of QKD [[47](#CR47), [48](#CR48)].
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 量子密码学的基本概念是通过一个不安全的信道发送光子形式的秘钥。二进制数据（零和一）根据物理理论编码为量子状态。量子密码学也被称为量子密钥分发（*QKD*）。该系统有两个信道。第一个信道用于传输单个光子的量子秘钥。第二个信道是一个公共信道，如电话线或互联网，用于交换密码协议。在量子密钥分发领域中，特别是在
    QKD 领域中，使用激光，具体而言是二极管激光器。
- en: The BB84 protocol  is the historical first protocol for quantum key, whose security
    is based on the principles of quantum mechanics, making it absolutely safe if
    there is no noise in the quantum channel. The absence of noise in a given situation
    assumes that the quantum state of particles does not change along the quantum
    channel. The BB84 protocol is formulated in the language of individual photons,
    although it can be applied to other realizations of a qubit.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: BB84 协议是量子密钥的历史上第一个协议，其安全性基于量子力学原理，如果量子信道中没有噪声，那么它是绝对安全的。在特定情况下，无噪声假设假定粒子的量子态沿着量子信道不发生变化。BB84
    协议是以单个光子的语言来表述的，尽管它可以应用于量子比特的其他实现方式。
- en: The essence of the BB84 protocol  is that one of the users (Alice) randomly
    selects a series of bits and a series of bases and then sends a user (Bob) a string
    of photons each of which encodes one bit from the selected string in the base
    corresponding to the prime number of that bit. In obtaining a photon, Bob randomly
    selects the measurement base for each photon and, independently of Alice, analogously
    interprets the result of his measurement for each photon in two ways, as a zero
    or one. In accordance with the laws of quantum mechanics and following the measuring
    of the diagonal photon in a rectangular base, its polarization turns into the
    horizontal or vertical line and vice versa, with random results. In this way,
    Bob obtains the results coinciding with the state of the photons sent in about
    half the cases (50%), that is, when he correctly hits the base.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: BB84 协议的本质是，用户之一（Alice）随机选择一系列比特和一系列基，并向另一用户（Bob）发送一串光子，其中每个光子都以相应比特的质数对应的基来编码选定字符串中的一个比特。在获取光子时，Bob
    针对每个光子随机选择测量基，并且独立于 Alice，类似地解释每个光子的测量结果，将其解释为零或一。根据量子力学的规律，在矩形基中测量对角光子后，其偏振会转变为水平或垂直线，反之亦然，并产生随机结果。这样，Bob
    获得与约一半情况（50%）相符的结果，即在他正确命中基的情况下。
- en: The next stage of the protocol is realized via a public channel, through which
    Alice and Bob can openly convey classical information to each other. At this stage,
    we assume that Eva can listen to the announcements by both parties, but she cannot
    change them or send notifications instead of them. To begin with, Alice and Bob
    determine (via a public channel) which photons were successfully obtained by Bob
    and which of them were measured in the correct base. After that, Alice and Bob
    have the same bit values encoded in these photons, regardless of the fact that
    this information has never been established in the open communication channel.
    In other words, each of these photons carries a bit of random information, which
    is known only to Alice and Bob and no one else. Information about the photons
    measured in the wrong base is rejected, so Alice and Bob get the so-called sieved
    key, which, in the event that Eva did not intercept the information, should be
    the same for both parties. Suppose Eva is eavesdropping on a quantum channel.
    Due to the random selection of a rectangular or diagonal base, Eva influences
    the information in such a way that it changes the bits of the sieved key, which
    would have to be the same for Alice and Bob if there was no Eve [[49](#CR49)].
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 协议的下一个阶段是通过一个公共信道实现的，通过该信道，Alice 和 Bob 可以彼此公开传递经典信息。在这个阶段，我们假设 Eva 可以听取双方的公告，但她不能改变它们或者代替它们发送通知。首先，Alice
    和 Bob 通过一个公共信道确定 Bob 成功获取了哪些光子以及哪些光子是用正确的基进行测量的。之后，Alice 和 Bob 在这些光子中编码了相同的比特值，尽管这些信息从未在公开的通信信道中建立过。换句话说，这些光子中的每一个都携带着一些随机信息，只有
    Alice 和 Bob 知道，其他人都不知道。被测量在错误基上的光子的信息被拒绝，因此 Alice 和 Bob 获得了所谓的筛选密钥，如果 Eva 没有截取信息的话，这些密钥应该对双方来说是相同的。假设
    Eva 正在监听一个量子信道。由于对矩形或对角基的随机选择，Eva 影响信息，以使它更改筛选密钥的比特，如果没有 Eve 的话，这些比特本应该对 Alice
    和 Bob 相同 [[49](#CR49)]。
- en: 4.2.3 Quantum Cryptography Challenges
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.3 量子密码学挑战
- en: 'When we compare post-quantum cryptography with the currently used asymmetric
    algorithms, we find that post-quantum cryptography mostly have larger key and
    signature sizes and require more operations and memory. Still, they are very practical
    for everything except perhaps very constrained Internet of Things devices and
    radio. Some other challenges are summarized below:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将后量子密码学与当前使用的非对称算法进行比较时，我们发现后量子密码学大多具有更大的密钥和签名大小，并且需要更多的操作和内存。尽管如此，它们在除了可能是非常受限制的物联网设备和无线电之外的所有方面都非常实用。以下是一些其他挑战的总结：
- en: 'Expensive: need specialized hardware.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 昂贵：需要专门的硬件。
- en: Complex.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂。
- en: Difficult to implement over long distance.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难以实现长距离传输。
- en: Subjected to decoherence. Qubits can retain their quantum state for a short
    period of time.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经过失相。量子位能够在短时间内保持它们的量子状态。
- en: Quantum algorithms are mainly probabilistic. This means that in one operation,
    a quantum computer returns many solutions where only one is the correct.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 量子算法主要是概率性的。这意味着在一次操作中，量子计算机返回许多解决方案，其中只有一个是正确的。
- en: 4.3 Chaotic Cryptography
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3 混沌密码学
- en: Embedded systems are the driving force for most technological development in
    many domains such as automotive and healthcare. An example of embedded system
    architecture is shown in Fig. [4.4](#Fig4).![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig4_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig4_HTML.png)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统是许多领域的大多数技术发展的驱动力，如汽车和医疗保健。嵌入式系统架构示例如图[4.4](#Fig4)所示。![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig4_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig4_HTML.png)
- en: Fig. 4.4
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4
- en: Example of embedded system architecture
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统架构示例
- en: Almost 10% of all embedded system products are counterfeit which leads to huge
    revenue loss. Several attacks methods have been developed, which made it possible
    to learn the ROM-based keys. Protecting soft IPs is much more challenging because
    it can be easily copied and even be sold at lower levels of abstraction [[11](#CR11)].
    Types of attacks on the hardware/software level can be classified into virus/worms,
    reverse engineering, fault injection, memory modification (Trojan insertion, bus
    modification, side channel, and bus probing).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有嵌入式系统产品中约有10%是伪造的，这导致了巨大的收入损失。已经开发了多种攻击方法，使得学习基于ROM的密钥成为可能。保护软件IP要困难得多，因为它可以轻易复制甚至以较低的抽象层级出售[[11](#CR11)]。对硬件/软件级别的攻击类型可以分类为病毒/蠕虫、逆向工程、故障注入、内存修改（木马插入、总线修改、侧信道和总线探测）。
- en: Many strong ciphers  have been applied widely, such as DES, AES, and RSA. But
    most of them cannot be directly used to encrypt real-time embedded systems because
    their encryption speed is not fast enough and they are computationally intensive.
    So, in this work we present a fast chaotic-based encryption algorithm which is
    suitable for real-time embedded systems in terms of performance, area, and power
    efficiency.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 许多强加密方法已被广泛应用，如DES、AES和RSA。但大多数方法不能直接用于加密实时嵌入式系统，因为它们的加密速度不够快，而且计算密集。因此，在本文中，我们提出了一种快速的基于混沌的加密算法，这种算法在性能、面积和功耗效率方面适用于实时嵌入式系统。
- en: 4.3.1 Chaotic Theory
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3.1 混沌理论
- en: 'All systems can be basically divided into three types [[42](#CR42)]:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 所有系统基本上可以分为三种类型[[42](#CR42)]：
- en: '1.'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Deterministic systems: these are systems for which for a given set of conditions
    the result can be predicted and the output does not vary much with change in initial
    conditions. Examples are computers.'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定性系统：这些系统是指在一组给定条件下，结果可以预测且输出不随初始条件的变化而变化很大。例如计算机。
- en: '2.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'Stochastic/random systems: these systems, which are not as reliable as deterministic
    systems. Their output can be predicted only for a certain range of values. Examples
    are genetic algorithms.'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随机系统：这些系统不像确定性系统那样可靠。只有在一定范围内才能预测它们的输出值。例如遗传算法。
- en: '3.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Chaotic systems: these systems are the most unpredictable of the three systems.
    Moreover they are very sensitive to initial conditions, and a small change in
    initial conditions can bring about a great change in its output. Examples of chaotic
    systems are the solar system, population growth, stock market, and weather.'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 混沌系统：这些系统是三种系统中最不可预测的。此外，它们对初始条件非常敏感，初始条件的微小变化可能导致其输出的巨大变化。混沌系统的例子包括太阳系、人口增长、股票市场和天气。
- en: Chaos is derived from the Greek word “Xαos,” which is meaning a state without
    predictability or order. A chaotic system is a nonlinear, dynamical, and deterministic
    system which has high sensitive to initial conditions of the system. Chaos system
    is deterministic system with small change in input results in enormous change
    in the output, so the system looks as if it is random and prediction becomes impossible
    (it looks like a noise). It is like butterfly effect. Due to these properties,
    chaos theory has been used in cryptography/encryption. In this work, chaotic theory
    is used for providing security at HW level.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 混沌源自希腊词“Xαos”，意味着一个没有可预测性或秩序的状态。混沌系统是一个非线性、动力学和确定性系统，对系统的初始条件非常敏感。混沌系统是确定性系统，输入的微小变化导致输出的巨大变化，因此系统看起来像是随机的，预测变得不可能（看起来像是噪音）。这就像是蝴蝶效应。由于这些特性，混沌理论已被用于密码学/加密。在这项工作中，混沌理论被用于在硬件层面提供安全性。
- en: 4.3.2 Chaotic Encryption System
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3.2 混沌加密系统
- en: The proposed chaotic-based encryption is taken from chaotic interleaving in
    communication [[12](#CR12)–[14](#CR14)]. Here, we proposed to use the algorithm
    for IP protection in embedded systems. Chaotic encryption of an *N* × *N* square
    matrix of data can be summarized as follows
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的基于混沌的加密是从通信中的混沌交织中获得的[[12](#CR12)–[14](#CR14)]。在这里，我们建议在嵌入式系统中使用该算法进行IP保护。对数据的*N* × *N*方阵进行混沌加密可以总结如下：
- en: '1.'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: An *N* × *N* square matrix is divided into k vertical rectangles of height *N*
    and width *n*[*i*] such that *n*[1] + *n*[2] + … + *n*[*k*] = *N*.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个*N* × *N*的方阵被分成k个高度为*N*，宽度为*n*[*i*]的垂直矩形，使得*n*[1] + *n*[2] + … + *n*[*k*] = *N*。
- en: '2.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: These vertical rectangles are stretched in the horizontal direction and contracted
    vertically to obtain *n*[*i*] × *N* horizontal rectangle.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些垂直矩形在水平方向被拉伸，并在垂直方向收缩，以获得*n*[*i*] × *N*的水平矩形。
- en: '3.'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: These rectangles are stacked such as the left one is put at the bottom and the
    right one at the top.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些矩形被堆叠，左边的矩形放在底部，右边的放在顶部。
- en: '4.'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: Each vertical rectangle *n*[*i*] × *N* is divided into n[i] boxes of dimensions
    ![$$ \frac{N}{n_i}\times {n}_i $$](../images/501530_1_En_4_Chapter/501530_1_En_4_Chapter_TeX_IEq1.png)
    containing exactly *N* points.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个垂直矩形*n*[*i*] × *N*被分成n[i]个尺寸为 ![$$ \frac{N}{n_i}\times {n}_i $$](../images/501530_1_En_4_Chapter/501530_1_En_4_Chapter_TeX_IEq1.png)
    的方框，其中恰好包含*N*个点。
- en: '5.'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5.'
- en: Each of these boxes is mapped column by column into a row of data items. Inside
    each rectangle, the scan begins from the bottom left corner toward upper elements.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些方框中的每一个都按列映射到数据项的一行。在每个矩形内部，扫描从左下角向上元素开始。
- en: Figure [4.5](#Fig5) shows an example of chaotic encryption of an (8 × 8) square
    matrix. The secret key *S*[key](*n*[1], *n*[2], *n*[3]) = (2, 4, 2). The security
    abstraction levels are shown in Table [4.1](#Tab1). The proposed algorithm is
    working at the algorithm level.![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig5_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig5_HTML.png)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [4.5](#Fig5) 展示了一个 (8 × 8) 方阵的混沌加密示例。秘钥 *S*[key](*n*[1], *n*[2], *n*[3]) =
    (2, 4, 2)。安全抽象级别显示在表 [4.1](#Tab1) 中。所提出的算法正在算法级别工作。![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig5_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig5_HTML.png)
- en: Fig. 4.5
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 第 4.5 图
- en: An illustrating example of the proposed chaotic map. (**a**) Raw data 8 bits
    × 8bits, (**b**) the chaotic map creation 2 × 4 × 2, (**c**) the encrypted matrix
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 所提出的混沌映射的示例说明。(**a**) 原始数据 8 位 × 8 位，(**b**) 混沌映射创建 2 × 4 × 2，(**c**) 加密矩阵
- en: Table 4.1
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.1
- en: The security abstraction levels
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 安全抽象级别
- en: '| Security abstraction level | Security objective | Side channel attack |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 安全抽象级别 | 安全目标 | 侧信道攻击 |'
- en: '| --- | --- | --- |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Protocol | Authenticated communications | Main-in-the-middle, traffic analysis
    |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 协议 | 认证通信 | 中间人攻击、流量分析 |'
- en: '| Algorithm | Encryption/hashing | Known-plaintext, known-cryptext |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 算法 | 加密/散列 | 已知明文、已知密文 |'
- en: '| Architecture | Functional integration | Stack smashing |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 架构 | 功能集成 | 堆栈破坏 |'
- en: '| Micro-architecture | Architecture integration | Bus probing |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 微架构 | 架构集成 | 总线探测 |'
- en: '| Circuit | Implementation | Differential power analysis |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 电路 | 实现 | 差分功耗分析 |'
- en: To evaluate the resistance against security threats, security analysis of proposed
    encryption algorithm is done. The system proves to be efficient against different
    types of attacks. If the matrix size becomes 1024 × 8, then the total key space
    comes out to be sufficient to resist brute force attacks. Based on the proposed
    architecture, we can represent the key space as a series:![$$ {\mathrm{Key}}_{\mathrm{space}}=\left(n-1\right).\left(1+\sum
    \limits_{j=1}^{j=n-2}\sum \limits_{i=1}^{i={2}^{\left(n-j-1\right)}-1}\left({2}^{n-j}-2.j\right)\right)
    $$](../images/501530_1_En_4_Chapter/501530_1_En_4_Chapter_TeX_Equ1.png)(4.1)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为了评估对安全威胁的抵抗力，对所提出的加密算法进行了安全分析。该系统被证明对不同类型的攻击具有高效的防御能力。如果矩阵大小变为 1024 × 8，则总密钥空间足以抵御暴力破解攻击。基于所提出的架构，我们可以将密钥空间表示为一个系列：![$$
    {\mathrm{Key}}_{\mathrm{space}}=\left(n-1\right).\left(1+\sum \limits_{j=1}^{j=n-2}\sum
    \limits_{i=1}^{i={2}^{\left(n-j-1\right)}-1}\left({2}^{n-j}-2.j\right)\right)
    $$](../images/501530_1_En_4_Chapter/501530_1_En_4_Chapter_TeX_Equ1.png)(4.1)
- en: 'Assuming the key size = 1024 = 2^(10) (*n* = 10), so: key[space] ≅ 1.575 M.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 假设密钥大小 = 1024 = 2^(10) (*n* = 10)，因此：key[space] ≅ 1.575 M。
- en: 4.3.3 Hardware Implementation of Chaotic Algorithm
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3.3 混沌算法的硬件实现
- en: 'First, the proposed algorithm is implemented in MATLAB for performance evaluation
    against conventional encryption methods. Then it is implemented using Verilog.
    The key can be hardwired. Chaotic encryption  is a symmetric encryption scheme,
    since it uses same parameters/MAP for encryption and decryption process. Block
    diagram of the proposed encryption algorithm is shown in Fig. [4.6](#Fig6). The
    proposed encryption architecture consists of four sub-modules:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了对比常规加密方法的性能，将提出的算法在MATLAB中实现。然后，使用Verilog实现。密钥可以是硬连线的。混沌加密是对称加密方案，因为它在加密和解密过程中使用相同的参数/映射。提出的加密算法的框图如图[4.6](#Fig6)所示。提出的加密架构由四个子模块组成：
- en: 'FIFO: to store the incoming data.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIFO：用于存储传入的数据。
- en: 'Vector to matrix: as Verilog does not accept 2D matrix as an input or output
    port (Fig. [4.7](#Fig7)).'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量到矩阵：因为Verilog不接受2D矩阵作为输入或输出端口（图[4.7](#Fig7)）。
- en: 'Reshape: applying the chaotic map.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重塑：应用混沌映射。
- en: 'Matrix to vector: convert matrix to vector.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵转换为向量：将矩阵转换为向量。
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig6_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig6_HTML.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig6_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig6_HTML.png)'
- en: Fig. 4.6
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6
- en: Block diagram of the proposed encryption algorithm
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的加密算法的框图
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig7_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig7_HTML.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig7_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig7_HTML.png)'
- en: Fig. 4.7
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7
- en: Vector to matrix block diagram as Verilog does not accept 2D matrix as an input
    or output port
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 向量到矩阵的框图，因为Verilog不接受2D矩阵作为输入或输出端口
- en: The decryption process is the inverse operation. The architecture of the decryption
    process is shown in Fig. [4.8](#Fig8).![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig8_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig8_HTML.png)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 解密过程是逆操作。解密过程的架构如图[4.8](#Fig8)所示。
- en: Fig. 4.8
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8
- en: Block diagram of the proposed decryption algorithm
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的解密算法的框图
- en: 'It consists of the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 它包括以下内容：
- en: 'FIFO: to store the incoming data.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIFO：用于存储传入的数据。
- en: 'Vector to Matrix: as Verilog does not accept 2D matrix as an input or output
    port.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量到矩阵：因为Verilog不接受2D矩阵作为输入或输出端口。
- en: 'Reshape: applying the chaotic map.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重塑：应用混沌映射。
- en: 'Matrix to vector: convert matrix to vector.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵转换为向量：将矩阵转换为向量。
- en: 4.3.4 Evaluation of the Proposed Algorithm
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3.4 提出算法的评估
- en: We synthesized the design over a Xilinx Virtex-6 FPGA as depicted in Fig. [4.9](#Fig9).
    A direct implementation of the design gave a clock frequency of 400 MHz. The throughput
    is 3.2 Gbps. Compared to conventional encryption methods, the performance of our
    proposed method is better. A snapshot of the simulation results is shown in Fig.
    [4.10](#Fig10) where a back-to-back configuration of the encryption/decryption
    modules is used to ensure that the decrypted data is the same as the plain data.
    There is a trade-off between the area/latency/power overhead and the provided
    level of security. Our proposed algorithm provides a good level of security with
    low area/power/latency overhead. The area is about 5% of AES area. The power consumption
    is less than AES. The comparison between our proposed algorithm and AES in terms
    of decryption time for different file sizes is shown in Table [4.2](#Tab2), where
    our proposed algorithm shows better and fast performance. Moreover, area, delay,
    and power overhead for our proposed encryption method are shown in Tables [4.3](#Tab3)
    and [4.4](#Tab4). The resources used by the encryptor including the total number
    of lookup tables (LUTs), slice registers, and digital signal processing blocks
    (DSPs), as well as the throughput obtained, are shown in Table [4.5](#Tab5).![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig9_HTML.jpg](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig9_HTML.jpg)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在Xilinx Virtex-6 FPGA上合成了设计，如图[4.9](#Fig9)所示。设计的直接实现提供了400 MHz的时钟频率。吞吐量为3.2
    Gbps。与传统加密方法相比，我们提出的方法性能更好。模拟结果的快照显示在图[4.10](#Fig10)中，其中使用了加密/解密模块的背对背配置，以确保解密数据与明文数据相同。区域/延迟/功耗开销与提供的安全级别之间存在权衡。我们提出的算法提供了很好的安全级别，并具有较低的区域/功耗/延迟开销。该区域约为AES区域的5%。功耗小于AES。我们提出的算法与AES在不同文件大小的解密时间方面进行比较，结果显示我们提出的算法性能更佳。此外，我们提出的加密方法的区域、延迟和功耗开销显示在[4.3](#Tab3)和[4.4](#Tab4)中。包括查找表（LUTs）、片寄存器和数字信号处理块（DSPs）的总数以及获得的吞吐量在表[4.5](#Tab5)中显示。![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig9_HTML.jpg](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig9_HTML.jpg)
- en: Fig. 4.9
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9
- en: FPGA evaluation board used to perform the proposed algorithm implementation
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 用于执行所提出的算法实现的FPGA评估板
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig10_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig10_HTML.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig10_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig10_HTML.png)'
- en: Fig. 4.10
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10
- en: Simulation results for a back-to-back configuration of the encryption/decryption
    modules
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 加密/解密模块的背对背配置的仿真结果
- en: Table 4.2
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.2
- en: Comparison between our proposed algorithm and AES
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出的算法与AES的比较
- en: '| File (KB) | Decryption time (m Sec) |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 文件（KB） | 解密时间（m秒） |'
- en: '| --- | --- |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Our proposed chaotic encryption | AES |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: 我们提出的混沌加密 | AES |
- en: '| --- | --- |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1 | 1.5 | 3 |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 1.5 | 3 |'
- en: '| 2 | 2.8 | 6 |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 2.8 | 6 |'
- en: '| 3 | 4.7 | 9 |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 4.7 | 9 |'
- en: '| 4 | 6 | 12 |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 6 | 12 |'
- en: '| 5 | 7.7 | 15 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 7.7 | 15 |'
- en: '| 6 | 9.1 | 18 |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 9.1 | 18 |'
- en: Table 4.3
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.3
- en: Area, delay, and power overhead for our proposed encryption method
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出的加密方法的面积、延迟和功耗开销
- en: '| Our proposed chaotic encryption | AES |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 我们提出的混沌加密 | AES |'
- en: '| --- | --- |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Area | Delay (ns) | Power (nW) | Area | Delay (ns) | Power (nW) |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 面积 | 延迟（ns） | 功耗（nW） | 面积 | 延迟（ns） | 功耗（nW） |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 5% | 0.1 | 0.3 | 40% | 0.4 | 2.6 |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 5% | 0.1 | 0.3 | 40% | 0.4 | 2.6 |'
- en: Table 4.4
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.4
- en: Area, delay, and power overhead for our proposed encryption method
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出的加密方法的面积、延迟和功耗开销
- en: '| Platform | Virtex 7 |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 平台 | Virtex 7 |'
- en: '| --- | --- |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| LUTs | 600 |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| LUTs | 600 |'
- en: '| Registers | 54 |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 寄存器 | 54 |'
- en: '| Total DSPs | – |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 总 DSPs | – |'
- en: '| Freq (MHz) | 400 |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 频率（MHz） | 400 |'
- en: '| Throughput (Gbps) | 3.2 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 吞吐量（Gbps） | 3.2 |'
- en: '| Slices | 180 |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 片数 | 180 |'
- en: Table 4.5
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.5
- en: Comparison with related work
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 与相关工作的比较
- en: '| Metric | [1] | [2] | [3] | This work |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 指标 | [1] | [2] | [3] | 本工作 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| Latency (clock cycles) | 33 | 133 | 295 | 21 |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 延迟（时钟周期） | 33 | 133 | 295 | 21 |'
- en: '| Max Freq (MHz) | 306 | 375 | 236 | 400 |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| 最大频率（MHz） | 306 | 375 | 236 | 400 |'
- en: '| Throughput (Mbps) | 595 | 180 | 50 | 600 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 吞吐量（Mbps） | 595 | 180 | 50 | 600 |'
- en: '| FPGA slices (Vertex 7) | 112 | 124 | 62 | 40 |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| FPGA 片段（Vertex 7） | 112 | 124 | 62 | 40 |'
- en: '| Power (mW) | – | 245 | – | 210 |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 功耗（mW） | – | 245 | – | 210 |'
- en: 4.4 Lightweight Cryptography
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.4 轻量级密码学
- en: Lightweight cryptography works between the trade-offs of security, cost, and
    performance and is focused at devices and systems on edge. The increase in Internet-connected
    devices requires to build smarter systems that are secure using low-cost hardware
    solutions. The symmetric and asymmetric ciphers are essentially a major topic
    of study in hardware cryptography, each having a different set of applications.
    Hardware for asymmetric ciphers are more complex than symmetric ones and consume
    more area on chip and power. For example, in terms of computational complexity,
    symmetric cipher such as AES algorithm is about 1000 much faster than an optimized
    elliptic curve cryptography that is an asymmetric algorithm. The Internet of Things
    (IoT)  is one of the most promising research topics in the engineering field.
    IoT is believed to facilitate the way people live in the near future by distantly
    connecting objects with each other and establishing communication channels between
    them. According to Cisco’s Internet of Things Group (IoTG), the number of connected
    devices is expected to reach 50 billion by 2020\. IoT has much potential to revolutionize
    the industry and everyday life in the near future, but some challenges hinder
    its advancements such as power consumption and security issues. Without sufficient
    security and privacy, all the benefits of IoT could prove disadvantageous if misused.
    Different algorithms have been presented in the literature that meets security
    requirements. Most of the studies have focused on popular algorithms such as AES,
    Rijndael, DES, Twofish, RSA, and more. However, IoT low area and power requirements
    make these algorithms unsuitable [[22](#CR22)]. So, more IoT-oriented algorithms
    have been presented to provide better performance in terms of power and area;
    those are known as lightweight cryptographic algorithms such as PRESENT, RECTANGLE,
    SIT, HIGHT, CLEFIA, SPECK, SIMON, and KHUDRA algorithm [[1](#CR1)–[10](#CR10)].
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 轻量级密码学在安全性、成本和性能之间进行权衡，并且专注于边缘设备和系统。互联网连接设备的增加要求构建更智能的系统，这些系统使用低成本的硬件解决方案来保证安全。对称和非对称密码本质上是硬件密码学的主要研究课题，每种密码都有不同的应用领域。非对称密码的硬件更加复杂，占用芯片面积和功耗更多。例如，就计算复杂性而言，对称密码如
    AES 算法比优化的椭圆曲线密码学等非对称算法快了大约 1000 倍。物联网 (IoT) 是工程领域最有前景的研究课题之一。物联网被认为将在不久的将来通过远程连接物体并在它们之间建立通信渠道来改变人们的生活方式。根据思科的物联网组
    (IoTG) 预测，到 2020 年，连接设备的数量预计将达到 500 亿。物联网在不久的将来具有改革行业和改变日常生活的巨大潜力，但一些挑战阻碍了其发展，如功耗和安全问题。如果缺乏足够的安全性和隐私保护，物联网的所有优势如果被滥用可能会变得不利。文献中提出了许多满足安全要求的不同算法。大多数研究都集中在流行的算法上，如
    AES、Rijndael、DES、Twofish、RSA 等。然而，物联网的低面积和功耗要求使这些算法不太适用。因此，已经提出了更适合物联网的算法，以提供更好的功耗和面积性能；这些被称为轻量级密码算法，如
    PRESENT、RECTANGLE、SIT、HIGHT、CLEFIA、SPECK、SIMON 和 KHUDRA 算法。
- en: 4.4.1 PRESENT Algorithm
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.1 PRESENT 算法
- en: 'PRESENT  is an ultralow power encryption algorithm that is based on substitution
    permutation (SP) network. PRESENT has a 64 bit input plaintext and either 80 bit
    or 128 bit key. PRESENT was standardized by NIST in 2012, which provide the algorithm
    more credibility in its use [[46](#CR46)]. PRESENT is a 31-round operation in
    which an XOR operation is introduced with round Key Ki. It consists of linear
    transformation called permutation (Fig. [4.11](#Fig11)) and nonlinear transformation
    called substitution (Fig. [4.12](#Fig12)). The substitution and permutation are
    performed once every round. A new key is generated for each round. Decryption
    is the inverse of the encryption process [[18](#CR18)]. Pseudo-code for PRESENT
    algorithm is shown in Fig. [4.13](#Fig13). To test the proposed encryption/decryption
    algorithm, we connect them back to back (Fig. [4.14](#Fig14)). The power consumption
    is about 210 mW which is less power than the related work. Moreover, the overall
    area is less than the related work. For encryption (Fig. [4.15](#Fig15)), there
    are four main blocks for the PRESENT: AddRoundKey  , S-box, P-layer, and key schedule.
    They are working in the following manner [[51](#CR51), [52](#CR52)].'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: PRESENT 是一种基于替换置换（SP）网络的超低功耗加密算法。PRESENT 具有 64 位输入明文和 80 位或 128 位密钥。PRESENT
    在 2012 年由 NIST 标准化，这使得该算法在使用中更加可信[[46](#CR46)]。PRESENT 是一个 31 轮操作，其中引入了与轮密钥 Ki
    进行 XOR 运算。它由线性变换组成，称为置换（图 [4.11](#Fig11)）和非线性变换称为替换（图 [4.12](#Fig12)）。每轮执行一次替换和置换。每轮生成一个新的密钥。解密是加密过程的逆过程[[18](#CR18)]。PRESENT
    算法的伪代码如图 [4.13](#Fig13) 所示。为了测试所提出的加密/解密算法，我们将它们连接在一起（图 [4.14](#Fig14)）。功耗约为 210
    毫瓦，比相关工作更省电。此外，整体面积也比相关工作小。对于加密（图 [4.15](#Fig15)），PRESENT 有四个主要模块：AddRoundKey、S-盒、P-层和密钥调度。它们的工作方式如下[[51](#CR51),
    [52](#CR52)]。
- en: 'Step1: plaintext and the key are stored in a register.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一步：明文和密钥存储在寄存器中。
- en: 'Step2: the plaintext is XORed with the key.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二步：明文与密钥进行异或运算。
- en: 'Step3: a substitutional step is done to provide the confusion needed.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三步：进行替换步骤以提供所需的混淆。
- en: 'Step4: the data is permuted and stored in the register and the counter is increased
    by 1 and so on.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四步：数据被置换并存储在寄存器中，计数器增加 1 等等。
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig11_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig11_HTML.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig11_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig11_HTML.png)'
- en: Fig. 4.11
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11
- en: Permutation
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 置换
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig12_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig12_HTML.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig12_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig12_HTML.png)'
- en: Fig. 4.12
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12
- en: Substitution
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 替换
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig13_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig13_HTML.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig13_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig13_HTML.png)'
- en: Fig. 4.13
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13
- en: Pseudo-code for PRESENT algorithm
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: PRESENT 算法的伪代码
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig14_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig14_HTML.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig14_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig14_HTML.png)'
- en: Fig. 4.14
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14
- en: Back-to-back configuration
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 连续配置
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig15_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig15_HTML.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig15_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig15_HTML.png)'
- en: Fig. 4.15
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15
- en: PRESENT encryption core
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: PRESENT 加密核心
- en: For the decryption core (Fig. [4.16](#Fig16)), the overall steps are similar
    to the ones explained in the case of encryption  but with some key differences.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 对于解密核心（见图[4.16](#Fig16)），整体步骤与加密时解释的步骤相似，但有一些关键差异。
- en: The s-box, permutation, and key scheduling units are replaced with their inverse
    modules.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: S盒、排列和密钥调度单元被它们的逆模块所替换。
- en: The inverse permutation layer is carried out before the inverse s-box layer.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逆排列层在逆S盒层之前执行。
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig16_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig16_HTML.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig16_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig16_HTML.png)'
- en: Fig. 4.16
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16
- en: PRESENT decryption core
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: PRESENT 解密核心
- en: 4.4.2 SIT Algorithm
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.2 SIT 算法
- en: SIT  is a symmetric key block cipher that constitutes of 64 bit key and plaintext.
    In symmetric key algorithm, the encryption process consists of encryption rounds;
    each round is based on some mathematical functions to create confusion and diffusion.
    Increase in number of rounds ensures better security but eventually results in
    increase in the consumption of constrained energy [[21](#CR21)]. The cryptographic
    algorithms are usually designed to take on an average 10 to 20 rounds to keep
    the encryption process strong enough that suits the requirement of the system.
    However the proposed algorithm is restricted to just five rounds only; to further
    improve the energy efficiency, each encryption round includes mathematical operations
    that operate on 4 bits of data. To create sufficient confusion and diffusion of
    data in order to confront the attacks, the algorithm utilizes the Feistel network
    of substitution diffusion functions [[15](#CR15)].
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: SIT 是一个对称密钥分组密码，由64位密钥和明文组成。在对称密钥算法中，加密过程由加密轮组成；每一轮基于一些数学函数来创建混淆和扩散。增加轮数可以确保更好的安全性，但最终会导致受限能量的消耗增加[[21](#CR21)]。密码算法通常设计为平均进行10到20轮，以保持加密过程足够强大，以适应系统的要求。然而，所提出的算法仅限于仅有五轮；为了进一步提高能源效率，每个加密轮包括对4位数据进行的数学操作。为了创造足够的数据混淆和扩散以应对攻击，该算法利用了置换扩散函数的费斯特尔网络[[15](#CR15)]。
- en: 4.4.3 HIGHT Algorithm
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.3 HIGHT 算法
- en: High security lightweight (HIGHT) algorithm  is based on Feistel network structure
    instead of SPN. HIGHT operates on a 64 bit block size with 128 bit key size. The
    algorithm is comprised of 32 rounds, each is based on basic operations such as
    XOR and addition mod 28 [[19](#CR19)].
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 高安全轻量级（HIGHT）算法基于 Feistel 网络结构而不是 SPN。HIGHT 在 64 位块大小上运行，具有 128 位密钥大小。该算法由 32
    轮组成，每一轮基于基本操作，如 XOR 和模 28 加法 [[19](#CR19)]。
- en: 4.4.4 KHUDRA Algorithm
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.4 KHUDRA 算法
- en: KHUDRA  is an FPGA-oriented lightweight algorithm. It’s optimized for balancing
    LUTs and registers to minimize the FPGA slices. The algorithm is based on recursive
    Feistel [[20](#CR20)].
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: KHUDRA 是一种面向 FPGA 的轻量级算法。它经过优化，以平衡 LUT 和寄存器，以最小化 FPGA 切片。该算法基于递归 Feistel [[20](#CR20)]。
- en: 4.4.5 CAMELLIA Algorithm
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.5 CAMELLIA 算法
- en: It is somehow similar to the standard AES, as it’s a symmetric key block cipher
    with a fixed block size of 128 bits and three different key sizes of 128, 192,
    and 256 bits. Unlike other algorithms that focus on hardware implementation, CAMELLIA  was
    designed for both software and hardware. It can be used for both low-cost and
    high-speed applications [[40](#CR40)].
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 它与标准 AES 有些相似，因为它是一个对称密钥分组密码，固定的分组大小为 128 位，密钥大小为 128、192 和 256 位。与专注于硬件实现的其他算法不同，CAMELLIA
    既设计用于软件又设计用于硬件。它可用于低成本和高速应用 [[40](#CR40)]。
- en: 4.4.6 Attribute-Based Encryption (ABE)
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4.6 属性基础加密（ABE）
- en: ABE  is a type of encryption that provides the IoT network with privacy and
    security through a policy between the attributes of the users in the system. ABE
    consists of two types, key policy ABE (KP-ABE) and ciphertext policy ABE (CP-ABE).
    In CP-ABE, the sender’s data access policy is embedded in the ciphertext, and
    a recipient’s attributes are associated with its private keys. A sender can decrypt
    the ciphertext only if the attributes associated with its private key satisfy
    the access policy embedded in the encrypted data [[44](#CR44), [45](#CR45)].
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: ABE 是一种提供 IoT 网络隐私和安全性的加密类型，通过系统中用户属性之间的策略。ABE 包括两种类型，密钥策略 ABE（KP-ABE）和密文策略
    ABE（CP-ABE）。在 CP-ABE 中，发送方的数据访问策略嵌入在密文中，并且接收方的属性与其私钥相关联。只有发送方的私钥相关联的属性满足加密数据中嵌入的访问策略时，发送方才能解密密文
    [[44](#CR44), [45](#CR45)]。
- en: 4.5 Blockchain Cryptography
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.5 区块链密码学
- en: 'Blockchain is a distributed database that allows direct transactions between
    two parties without the need for an authoritative mediator. Blockchain is a way
    to encapsulate transactions in the form of blocks where blocks are linked through
    the cryptographic hash, hence forming a chain of blocks (Fig. [4.17](#Fig17)).
    Blockchain is used for integrity as depicted in Fig. [4.18](#Fig18). Blockchain
    relies on different constituents which serve different purposes. The blockchain
    consists of a sequence of blocks that are stored on and copied between publicly
    accessible servers. Each block consists of four fundamental elements: the hash
    of the preceding block; the data content of the block (i.e., the ledger entries);
    the nonce that is used to give a particular form to the hash; and the hash of
    the block. By including the hash of the preceding block, each successive block
    strengthens the authenticity claim for the preceding block. Blocks early in the
    chain cannot be modified without modifying all subsequent blocks, or the modification
    will appear as an inconsistency in the hashes. Similarly, adding the data to the
    hash makes the data unmodifiable without breaking the consistency of the block
    sequence. Adding a nonce that is used to impose a signature structure to the hash
    requires significant work to be performed to generate a new block [[41](#CR41)].
    Assume an attacker is able to change the data present in the block n. Correspondingly,
    the hash of the block also changes. But, block *n* + 1 still contains the old
    hash of the block *n*. This makes block *n* + 1 and all succeeding blocks invalid
    as they do not have correct hash the previous block. Blockchain technology has
    become so popular due to the following advantages [[43](#CR43)]:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种分布式数据库，允许两个方直接进行交易，无需权威中介。区块链是一种将交易封装成块的方式，在这些块之间通过加密哈希链接起来，从而形成了一个块链（见图[4.17](#Fig17)）。如图[4.18](#Fig18)所示，区块链用于完整性。区块链依赖于不同的组成部分，这些组成部分有不同的用途。区块链由一系列存储在和在公开可访问的服务器之间复制的块组成。每个块由四个基本元素组成：前一个块的哈希；块的数据内容（即分类账条目）；用于给哈希赋予特定形式的随机数；以及块的哈希。通过包含前一个块的哈希，每个连续的块都加强了前一个块的真实性声明。在链中的早期块不能修改而不修改所有后续块，否则修改将出现在哈希中的不一致性中。类似地，将数据添加到哈希中使数据无法修改而不破坏块序列的一致性。添加用于对哈希施加签名结构的随机数需要执行大量的工作来生成新块[[41](#CR41)]。假设攻击者能够更改块n中存在的数据。相应地，块的哈希也会更改。但是，块*n* + 1仍然包含块*n*的旧哈希。这使得块*n* + 1和所有后续块无效，因为它们没有正确的前一个块的哈希。由于以下优点，区块链技术变得如此流行[[43](#CR43)]：
- en: '*Resilience:* Blockchain is often replicated architecture. The chain is still
    operated by most nodes in the event of a massive attack against the system.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*弹性：* 区块链通常是复制的架构。在系统遭受大规模攻击的情况下，大多数节点仍在运行链。'
- en: '*Time reduction:* In the financial industry, blockchain can play a vital role
    by allowing the quicker settlement of trades as it does not need a lengthy process
    of verification, settlement, and clearance because a single version of agreed-upon
    data of the share ledger is available between all stack holders.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*时间缩短：* 在金融行业中，区块链可以发挥重要作用，因为它允许更快地结算交易，不需要冗长的验证、结算和清算过程，因为股份账簿的一致性数据版本在所有股东之间都是可用的。'
- en: '*Reliability:* Blockchain certifies and verifies the identities of the interested
    parties. This removes double records, reduces rates, and accelerates transactions.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可靠性：* 区块链认证和验证了感兴趣方的身份。这消除了重复记录，降低了费率，并加速了交易。'
- en: '*Unchangeable transactions:* By registering transactions in chronological order,
    blockchain certifies the unalterability of all operations which means when any
    new block has been added to the chain of ledgers, it cannot be removed or modified.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不可更改的交易：* 通过按照时间顺序注册交易，区块链证明了所有操作的不可更改性，这意味着当任何新区块添加到账簿链时，它就无法删除或修改。'
- en: '*Fraud prevention:* The concepts of shared information and consensus prevent
    possible losses due to fraud or embezzlement. In logistics-based industries, blockchain
    as a monitoring mechanism acts to reduce costs.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*防止欺诈：* 共享信息和共识的概念防止了由于欺诈或侵占而可能导致的损失。在基于物流的行业中，区块链作为监控机制有助于降低成本。'
- en: '*Security:* Attacking a traditional database is the bringing down of a specific
    target. With the help of distributed ledger technology, each party holds a copy
    of the original chain, so the system remains operative, even the large number
    of other nodes fall.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*安全性：* 攻击传统数据库等同于打击特定目标。借助分布式账本技术，每个参与方都持有原始链的副本，因此即使其他节点数量众多，系统仍保持运作。'
- en: '*Transparency:* Changes to public blockchain are publicly viewable to everyone.
    This offers greater transparency, and all transactions are immutable.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*透明度：* 对公共区块链的更改对所有人都是公开可见的。这提供了更大的透明度，所有交易都是不可变的。'
- en: '*Collaboration:* Allows parties to transact directly with each other without
    the need for mediating third parties.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*协作：* 允许各方直接进行交易，无需第三方中介。'
- en: '*Decentralized:* There are standard rules on how every node exchanges the blockchain
    information. This method ensures that all transactions are validated and all valid
    transactions are added one by one [[50](#CR50)].'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*去中心化：* 每个节点如何交换区块链信息都有标准规则。这种方法确保所有交易得到验证，并逐个添加所有有效交易[[50](#CR50)]。'
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig17_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig17_HTML.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig17_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig17_HTML.png)'
- en: Fig. 4.17
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17
- en: Basic blockchain structure. A block has a hash (fingerprint) which is unique
    to each block. It identifies a block and all of its contents, and it’s always
    unique. So once a block is created, any change inside the block will cause the
    hash to change
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的区块链结构。一个块具有一个哈希（指纹），对于每个块来说是唯一的。它标识了一个块及其所有内容，它总是唯一的。因此，一旦创建了一个块，块内的任何更改都将导致哈希更改
- en: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig18_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig18_HTML.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig18_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig18_HTML.png)'
- en: Fig. 4.18
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.18
- en: 'Blockchain: integrity'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链：完整性
- en: 4.5.1 Limitations of Blockchain Technology Can Be Summarized as Follows
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.5.1 区块链技术的局限性可以总结如下
- en: '*Higher costs:* Nodes seek higher rewards for completing transactions in a
    business which work on the principle of supply and demand.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*成本更高:* 节点在供求原则下寻求更高的奖励来完成交易。'
- en: '*Slower transactions:* Nodes prioritize transactions with higher rewards; backlogs
    of transactions build up.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交易速度较慢:* 节点优先处理奖励较高的交易；交易积压。'
- en: '*Smaller ledger:* It is not possible to a full copy of the blockchain, potentially
    which can affect immutability, consensus, etc.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*较小的分类账:* 不可能完整复制区块链，可能会影响不可变性、共识等。'
- en: '*Transaction costs and network speed:* The transactions cost of Bitcoin is
    quite high after being touted as “nearly free” for the first few years.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交易成本和网络速度:* 比特币的交易成本在头几年被吹捧为“几乎免费”之后变得非常高。'
- en: '*Risk of error:* There is always a risk of error, as long as the human factor
    is involved. In case a blockchain serves as a database, all the incoming data
    has to be of high quality. However, human involvement can quickly resolve the
    error.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*错误风险:* 只要涉及人为因素，就存在错误风险。如果区块链用作数据库，所有传入数据必须具有高质量。但是，人为干预可以迅速解决错误。'
- en: '*Wasteful:* Every node that runs the blockchain has to maintain consensus across
    the blockchain. This offers very low downtime and makes data stored on the blockchain
    forever unchangeable. However, all this is wasteful, because each node repeats
    a task to reach consensus.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*浪费:* 运行区块链的每个节点都必须在整个区块链上保持一致性。这提供了非常低的停机时间，并使存储在区块链上的数据永远不可更改。然而，所有这些都是浪费的，因为每个节点都要重复执行任务以达成共识。'
- en: 4.5.2 Prime Number Factorization
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.5.2 质数分解
- en: The mathematical principle behind prime number factorization  is that any number,
    no matter how large, can be produced by multiplying prime numbers. It’s relatively
    easy to produce any number using prime numbers. However, it’s vastly more difficult
    to reverse the process and work out which prime numbers were multiplied to produce
    a particular value once the numbers become large. This reversal is called prime
    number factorization (Fig. [4.19](#Fig19)). *Blockchain cryptography relies on
    prime number* factorization for linking the public and private key. The prime
    number factors of the public key are what form the private key [[16](#CR16)].![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig19_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig19_HTML.png)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 质数因子分解背后的数学原理是，任何数字，无论多大，都可以通过乘以质数来产生。使用质数相对容易产生任何数字。然而，一旦数字变得很大，要逆转这个过程并找出是哪些质数相乘产生了特定的值就变得非常困难。这种逆转被称为质数因子分解（图[4.19](#Fig19)）。*区块链加密依赖于质数*因子分解来链接公钥和私钥。公钥的质数因子形成了私钥[[16](#CR16)]。![../images/501530_1_En_4_Chapter/501530_1_En_4_Fig19_HTML.png](../images/501530_1_En_4_Chapter/501530_1_En_4_Fig19_HTML.png)
- en: Fig. 4.19
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19
- en: Prime number factors example
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 素数因子示例
- en: 4.5.3 Applications of Blockchain Cryptography
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.5.3 区块链加密的应用
- en: 4.5.3.1 Money Transfer
  id: totrans-231
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.5.3.1 货币转移
- en: Blockchain is a groundbreaking technology that optimizes the way money is transferred
    and transactions are processed. While it has been used in many fields since its
    introduction in 2009, blockchain technology is still most widely used in money
    transfers and transaction reconciliation.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一项开创性技术，优化了货币转移和交易处理的方式。自 2009 年推出以来，虽然它已被应用于许多领域，但区块链技术在货币转移和交易对账方面仍然被广泛使用。
- en: 4.5.3.2 Smart Contract
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.5.3.2 智能合约
- en: The new key concepts are smart contracts  , small computer programs that “live”
    in the blockchain. They are free computer programs that execute automatically
    and check conditions defined earlier like facilitation, verification, or enforcement.
    It is used as a replacement for traditional contracts.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 新的关键概念是智能合约，这是“生活”在区块链中的小型计算机程序。它们是自由的计算机程序，可以自动执行并检查之前定义的条件，如促进、验证或执行。它被用作传统合同的替代。
- en: 4.5.3.3 Safety of Food
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.5.3.3 食品安全
- en: Food companies implement traceability because they see that the consumers require
    transparency and credibility. Blockchain’s immutability helps them to prove that
    the information the different supply chain companies provide is uncorrupted.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 食品公司实施可追溯性是因为他们看到消费者需要透明度和可信度。区块链的不可变性帮助他们证明不同供应链公司提供的信息是未被篡改的。
- en: 4.5.3.4 Cryptocurrency
  id: totrans-237
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.5.3.4 加密货币
- en: Bitcoin  , the first decentralized cryptocurrency, has gained a large attention
    since its inception in 2009\. Built upon blockchain technology, it has established
    itself as the leader of cryptocurrencies and shows no signs of slowing down. Instead
    of being based on traditional trust, the currency is based on cryptographic proof
    which provides many advantages over traditional payment methods (such as Visa
    and Mastercard) including high liquidity and lower transaction costs [[32](#CR32)].
    The blockchain is the technology behind Bitcoin. Bitcoin  is the digital token,
    and blockchain is the ledger that keeps track of who owns the digital tokens.
    You can’t have Bitcoin without blockchain, but you can have blockchain without
    Bitcoin.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 自2009年诞生以来，比特币，第一个去中心化加密货币，引起了极大关注。建立在区块链技术之上，它已确立自己作为加密货币的领导者，并且显示出不减的势头。与基于传统信任的货币不同，比特币基于密码学证明，这在许多方面优于传统支付方法（如Visa和Mastercard），包括高流动性和较低的交易成本[[32](#CR32)]。区块链是比特币背后的技术。比特币是数字代币，区块链是记录谁拥有数字代币的账本。你不能没有比特币而拥有区块链，但你可以拥有区块链而没有比特币。
- en: 4.6 Conclusions
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.6 结论
- en: This chapter discusses the cutting-edge cryptographic techniques such as quantum
    cryptography, DNA cryptography, chaotic cryptography, lightweight cryptography,
    and blockchain cryptography. All these cryptography techniques are promising and
    rapid emerging fields in data security.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了前沿的密码学技术，如量子密码学、DNA密码学、混沌密码学、轻量级密码学和区块链密码学。所有这些密码学技术都是有前途且迅速发展的数据安全领域。
