- en: '[CHAPTER 11](toc.xhtml#c11)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[第11章](toc.xhtml#c11)'
- en: '[Smart Contract and Other Useful Transactions](toc.xhtml#c11)'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[智能合约与其他有用交易](toc.xhtml#c11)'
- en: In the previous chapter, you learnt to verify and create transactions. You also
    learnt how to check their inputs and outputs and correctness before publishing
    and understood the different ways to publish a transaction. In this chapter, you
    will learn scripting in more detail. You will learn how simple but interesting
    use cases can be implemented using scripting language and other properties of
    Bitcoin transactions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，你学习了如何验证和创建交易。你也学会了如何在发布之前检查它们的输入和输出以及正确性，并理解了发布交易的不同方法。在本章中，你将详细学习脚本编程。你将了解如何使用脚本语言实现简单但有趣的使用案例以及其他比特币交易的属性。
- en: When we think about smart contract, we think about Ethereum, Cardano, Binance
    Smart Chain, etc. We ignore the network that pioneered in smart contract, which
    is Bitcoin. Bitcoin is the most secure cryptocurrency network. As smart contract
    and digital properties might be very valuable, securing them on Bitcoin network
    could be the best option if it is technically feasible.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想到智能合约时，我们会想到以太坊、卡尔达诺、币安智能链等。我们忽略了在智能合约方面领先的网络，即比特币。比特币是最安全的加密货币网络。由于智能合约和数字财产可能非常有价值，如果在技术上可行，将它们保存在比特币网络上可能是最佳选择。
- en: In this chapter, we will go deeper into scripting and build use cases for a
    few useful smart contracts using Bitcoin scripting language. We will also implement
    some other use cases that are not contracts between parties but are useful in
    solving real requirements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入研究脚本编程，并使用比特币脚本语言构建一些有用智能合约的使用案例。我们还将实现一些其他用例，这些用例不是各方之间的合同，但在解决实际需求方面很有用。
- en: '[Structure](toc.xhtml#s231a)'
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[结构](toc.xhtml#s231a)'
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Script opcodes
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本操作码
- en: Digital property
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字财产
- en: Document timestamping
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档时间戳
- en: Time locked transactions
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间锁定交易
- en: Time locked payment
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间锁定支付
- en: Payment with relative locktime
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有相对锁定时间的支付
- en: Smart contract
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约
- en: Solution to trust issue in payments
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决支付中的信任问题
- en: Simple multi-signature payment
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单多签名支付
- en: Improved payment with relative locktime
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有相对锁定时间的改进支付
- en: Payments involving escrow
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 涉及托管的支付
- en: Payment involving secret identifier
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 涉及秘密标识符的支付
- en: Collaborative transactions
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协作交易
- en: Charity use case
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 慈善用例
- en: Subsidy use case
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 补贴用例
- en: Planned contribution within a group
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小组内计划的贡献
- en: '[Objectives](toc.xhtml#s232a)'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[目标](toc.xhtml#s232a)'
- en: The objective of this chapter is to help you understand the broader scope of
    Bitcoin scripting language. Additionally, it will help you learn to create transactions
    for different scenarios, including smart contract and other useful transactions
    that were not covered in the previous chapters.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是帮助你理解比特币脚本语言更广泛的应用范围。此外，它还将帮助你学习为不同场景创建交易，包括智能合约和其他在前面章节中未涵盖的有用交易。
- en: '[Script opcodes](toc.xhtml#s233a)'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[脚本操作码](toc.xhtml#s233a)'
- en: In the previous chapter, we used only a few opcodes that are used in standard
    P2PKH and m-of-n-multisig P2SH scripts. While these are sufficient for basic money
    transfers between individuals and groups, a more complex script might be needed.
    In this chapter, we will use a few more opcodes.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，我们只使用了在标准P2PKH和m-of-n-multisig P2SH脚本中使用的少数操作码。尽管这些足以处理个人和群体之间的基本货币转账，但可能需要更复杂的脚本。在本章中，我们将使用一些更多的操作码。
- en: '[Digital property](toc.xhtml#s234a)'
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[数字财产](toc.xhtml#s234a)'
- en: Digital asset or digital property is the digital representation of an asset.
    The property can be represented as QR code or identifier or hash of specification
    or value. The asset ownership can be changed by the owner of the asset. It can
    also be lent or rented online. Using Bitcoin transaction and scripting language,
    we can implement some of those features. Timestamping is one of the important
    properties of digital asset management, which we will cover in this subtopic.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 数字资产或数字财产是资产的数字表示。财产可以表示为二维码或标识符或规格的哈希或价值。资产所有权可以由资产的所有者改变。它还可以在线借出或出租。使用比特币交易和脚本语言，我们可以实现其中一些功能。时间戳是数字资产管理的重要属性之一，我们将在本子主题中介绍。
- en: '[Document timestamping](toc.xhtml#s235a)'
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[文档时间戳](toc.xhtml#s235a)'
- en: Timestamping a document is necessary for it to be legally binding and for it
    to be part of a contract. Transactions in a block can be associated with the timestamp
    of the block, and it is immutable. If a transaction holds hash of the content
    of a document, then we can consider the document as timestamped. However, for
    this to be legally binding, governments need to recognize Bitcoin blockchain as
    both immutable and having the correct timestamp.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使文档具有法律约束力，并且成为合同的一部分，对其进行时间戳处理是必要的。区块中的交易可以与块的时间戳相关联，并且是不可变的。如果一个交易持有文档内容的散列值，那么我们可以认为该文档已被时间戳。然而，为了具有法律约束力，政府需要承认比特币区块链既是不可变的，又具有正确的时间戳。
- en: 'The following is a short story written by my daughter, for which we are generating
    a hash and will add it to a transaction:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我女儿写的一篇短故事，我们将为它生成散列值并将其添加到交易中：
- en: 'Best Friend Lunch Party: One day two best friends, a monkey and a crocodile
    decided to have lunch together in a farm. The next day, they passed the river
    and reached the farm. After a heavy meal the monkey got up and started growling
    loudly. The frightened crocodile pleaded the monkey to stop. But the monkey said,
    ‘I have a habit of growling after every meal, I cannot help it’. The monkey was
    on the crocodile’s back while crossing the river back home. When they were halfway
    through the river, the crocodile took a dip in the water. When the monkey was
    frightened, the crocodile said, ‘I have a habit of taking a dip in the water after
    every meal, I cannot help it’. Monkey understood his mistake.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳朋友午餐派对：有一天，两只最好的朋友，一只猴子和一只鳄鱼决定在农场一起吃午饭。第二天，他们穿过河流到达农场。在丰盛的一餐后，猴子站起来大声咆哮。吓坏了的鳄鱼请求猴子停下来。但猴子说：“我每餐后都有咆哮的习惯，我忍不住”。猴子骑在鳄鱼背上穿越河流回家。当他们走到河中的一半时，鳄鱼在水里泡了一下。当猴子害怕时，鳄鱼说：“我每餐后都有泡水的习惯，我忍不住”。猴子明白了他的错误。
- en: 'SHA256 of this story:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事的SHA256散列值：
- en: '`3365b392ee14def189190638a532f6042446b74c98f186e9b595f77e47817e05`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`3365b392ee14def189190638a532f6042446b74c98f186e9b595f77e47817e05`'
- en: 'The following is the code to get the hash of the preceding story:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为前故事获取散列值的代码：
- en: '`def contentHash(story: str):`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`def contentHash(story: str):`'
- en: '`content_h = hashlib.sha256(story.encode(‘ascii’)).digest()`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_h = hashlib.sha256(story.encode(‘ascii’)).digest()`'
- en: '`return content_h`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`return content_h`'
- en: To add this to a transaction, we need to pay a small network fee, transfer bitcoins
    from one address to another, and use `**OP_RETURN**` to capture the above hash.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此添加到交易中，我们需要支付一点网络费用，将比特币从一个地址转移到另一个地址，并使用`**OP_RETURN**`捕获上面的散列值。
- en: 'We generate the first block and send the newly mined bitcoins to an address
    as shown in *[figure 11.1](#fig11_1)*:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成第一个区块，并将新挖掘的比特币发送到如图*[11.1](#fig11_1)*所示的地址：
- en: '![](images/Figure-11.1.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.1.jpg)'
- en: '**Figure 11.1:** Generated Block hash'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.1：生成的区块散列**'
- en: 'The following are the transactions included in the newly mined block:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新挖掘区块中包含的交易：
- en: '![](images/Figure-11.2.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.2.jpg)'
- en: '**Figure 11.2:** Transaction ID of coinbase transaction'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.2：币基交易的交易ID**'
- en: In *[Chapter 10, Create and Validate Transactions](c10.xhtml)* under the topic
    *Building P2PKH transaction*, we have created P2PKH transaction with two inputs
    and two outputs. We modify the code to also support `**OP_RETURN**` output.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在*[第10章，创建和验证交易](c10.xhtml)*中的*构建P2PKH交易*主题下，我们创建了一个具有两个输入和两个输出的P2PKH交易。我们修改代码以支持`**OP_RETURN**`输出。
- en: 'This is the code that provides transaction structure to the transaction builder
    program:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为交易构建程序提供交易结构的代码：
- en: '`def createTransactionStruct():`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2PKH’`'
- en: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
- en: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 4999900000`'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 4999900000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 0`'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 0`'
- en: '`output1[‘script_type’] = ‘OP_RETURN’`'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘OP_RETURN’`'
- en: '`output1[‘content_hash256’] = ‘3365b392ee14def189190638a532f6042446b74c98f186e9b595f77e47817e05’`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘content_hash256’] = ‘3365b392ee14def189190638a532f6042446b74c98f186e9b595f77e47817e05’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.1:** Transaction structure definition of document timestamping'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.1：** 文档时间戳交易结构定义'
- en: 'The following is the value of OP_RETURN opcode:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是OP_RETURN操作码的值：
- en: '`OP_RETURN = 0x6a`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_RETURN = 0x6a`'
- en: 'In *[Chapter 10, Create and Validate Transactions](c10.xhtml)* under topic
    ***Building transactions*** we have defined method `**createSignaturePreimage
    and createSignedTransaction**`. We add following lines to the method to handle
    OP_RETURN script type:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第10章，创建和验证交易](c10.xhtml)*中，在主题***构建交易***下，我们已经定义了方法`**createSignaturePreimage和createSignedTransaction**`。我们向方法中添加以下行以处理OP_RETURN脚本类型：
- en: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
- en: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
- en: '`scriptPubkey_b = bytes([OP_RETURN]) \`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = bytes([OP_RETURN]) \`'
- en: '`+ getWithPushdata(content_b)`'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`+ getWithPushdata(content_b)`'
- en: 'As we did in *[Chapter 10, Create and Validate Transactions](c10.xhtml)*, we
    execute this program and get raw transaction hex code, as shown in *[figure 11.3](#fig11_3)*:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如同我们在*第10章，创建和验证交易*中做的那样，我们执行这个程序并获得原始交易的十六进制代码，如*图11.3*所示：
- en: '![](images/Figure-11.3.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.3.jpg)'
- en: '**Figure 11.3:** Hex code of transaction created for document stamping'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.3：** 为文档打戳创建的交易十六进制代码'
- en: 'The following is the output of the newly created transaction:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新创建交易的输出：
- en: '![](images/Figure-11.4.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.4.jpg)'
- en: '**Figure 11.4:** Output of transaction created for document timestamping'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.4：** 为文档时间戳创建的交易输出'
- en: 'Now, we need to mine another 100 blocks so that the mined bitcoins we are using
    are ready for transfer:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要挖掘另外100个区块，以便我们使用的挖掘比特币准备好进行转账：
- en: '![](images/Figure-11.5.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.5.jpg)'
- en: '**Figure 11.5:** Next 100 blocks are mined'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.5：** 挖掘接下来的100个区块'
- en: 'Now, publish the newly created transaction:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，发布新创建的交易：
- en: '![](images/Figure-11.6.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.6.jpg)'
- en: '**Figure 11.6:** Publish transaction for document timestamping'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.6：** 为文档打戳发布交易'
- en: 'Now, we mine a single block again to add the transaction to the newly mined
    block:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们再次挖掘一个区块以将交易添加到新挖掘的区块中：
- en: '![](images/Figure-11.7.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.7.jpg)'
- en: '**Figure 11.7:** Mine the next block to include published transaction'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.7：** 挖掘下一个区块以包括发布的交易'
- en: 'The following in the newly mined block. We can see that the block contains
    the newly added transaction:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新挖掘区块中的内容。我们可以看到，该区块包含了新添加的交易：
- en: '![](images/Figure-11.8.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.8.jpg)'
- en: '**Figure 11.8:** Published transaction appears in the new block'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**图'
- en: '[Time locked transactions](toc.xhtml#s236a)'
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**时间锁定交易](toc.xhtml#s236a)'
- en: Bitcoin allows you to lock a transaction for certain time or block height. It
    allows transactions to be locked in a fixed time or time relative to the funding
    transaction.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Bitcoin允许您为交易锁定特定时间或区块高度。它允许交易被锁定在固定时间或相对于资助交易的时间。
- en: In the following subsections, we will cover a use case for both fixed and the
    relative timelock.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下小节中，我们将介绍固定和相对时间锁的使用案例。
- en: '[Time locked payment](toc.xhtml#s237a)'
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[时间锁定支付](toc.xhtml#s237a)'
- en: We can also create transactions that cannot be spent before given timestamp.
    This is done by setting the nLockTime field in a transaction. The nLockTime field
    can either be set to denote block height or to denote Unix epoch time. In the
    case of epoch time, it denotes mean time past instead of the block’s timestamp.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以创建在给定时间戳之前不能花费的交易。这通过设置交易中的nLockTime字段来实现。nLockTime字段可以设置为表示区块高度或表示Unix纪元时间。在纪元时间的情况下，它表示过去时间而不是区块的时间戳。
- en: 'The `**nLockTime**` field has the following rules:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**nLockTime**字段有以下规则：'
- en: '`**nLockTime**` < 500000000 denotes block-height'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**nLockTime**` < 500000000表示区块高度'
- en: Otherwise, it denotes median time past
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，它表示中位数过去时间
- en: It is recommended that `**nLockTime**` is not set to zero or past block height
    or past block-time.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 建议`**nLockTime**`不要设置为零或过去的区块高度或过去的区块时间。
- en: '*Median time past = Medium of (Tn-1, Tn-2, Tn-3, Tn-4, … Tn-10, Tn-11)*'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 中位数过去时间=（Tn-1，Tn-2，Tn-3，Tn-4，…Tn-10，Tn-11）的中值
- en: 'The following code provides transaction structure to the transaction builder
    program:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码为交易生成器程序提供了交易结构：
- en: '`def createTransactionStruct():`'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2PKH’`'
- en: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
- en: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 1`'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 1`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 4999900000`'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 4999900000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`txn[‘locktime’] = 1624196667`'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 1624196667`'
- en: '`return txn`'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.2:** Transaction structure definition of time locked payment'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.2：** 时间锁定支付的交易结构定义'
- en: 'We get the following signed transaction for the preceding transaction structure:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了前述交易结构的以下已签名交易：
- en: '![](images/Figure-11.9.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.9.jpg)'
- en: '**Figure 11.9:** Create transaction for time locked payment'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.9：** 为时间锁定支付创建交易'
- en: To be able to publish the preceding transaction, the bitcoin in the newly created
    block needs to be available for spend. For this, we create another 100 blocks.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够发布前述交易，新创建的区块中的比特币需要可供花费。为此，我们创建另外 100 个区块。
- en: 'We now try to publish the transaction, as shown in *[figure 11.10](#fig11_10)*:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在试图发布交易，如 *[图 11.10](#fig11_10)* 所示：
- en: '![](images/Figure-11.10.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.10.jpg)'
- en: '**Figure 11.10:** Publishing the time locked transaction fails'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.10：** 发布时间锁定交易失败'
- en: 'Publishing of the transaction fails as the block median timestamp is smaller
    than the locktime we have set:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块的中位时间戳小于我们设置的锁定时间，交易发布失败：
- en: '![](images/Figure-11.11.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.11.jpg)'
- en: '**Figure 11.11:** Current timestamp and last block timestamp'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.11：** 当前时间戳和上一个区块的时间戳'
- en: 'The median timestamp is calculated by taking the median of the timestamp in
    a block for the last 11 blocks. To get the median timestamp value as a value greater
    than the locktime set in the transaction, we wait for a few minutes and create
    another 11 blocks:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 中位时间戳是通过计算最后 11 个区块中时间戳的中位数来计算的。为了获得一个大于交易中设置的锁定时间的中位时间戳值，我们等待几分钟并创建另外 11 个区块：
- en: '![](images/Figure-11.12.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.12.jpg)'
- en: '**Figure 11.12:** Mine next eleven block to change median time past'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.12：** 挖掘下一个十一个区块以更改中位过去时间'
- en: 'Now, the median time of the last generated block is as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，上一个生成区块的中位时间如下：
- en: '![](images/Figure-11.13.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.13.jpg)'
- en: '**Figure 11.13:** Get median time past'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.13：** 获取过去的中位时间'
- en: 'This timestamp is greater than 1624196667:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 此时间戳大于 1624196667：
- en: '![](images/Figure-11.14.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.14.jpg)'
- en: '**Figure 11.14:** Median time past to date'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.14：** 中位时间过去到现在'
- en: 'We again try publishing the transaction:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次尝试发布交易：
- en: '![](images/Figure-11.15.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.15.jpg)'
- en: '**Figure 11.15:** Publishing the transaction is now successful'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.15：** 现在成功发布交易'
- en: We can see that the transaction was not valid until the median timestamp of
    the latest block was not less than or equal to lock-time.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，直到最新区块的中位时间戳不小于锁定时间，该交易才有效。
- en: '[Payment with relative locktime](toc.xhtml#s238a)'
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[相对锁定时间的支付](toc.xhtml#s238a)'
- en: The `**nLockTime**` field in a transaction is set for static block height or
    static epoch time. If the newly created transaction needs to wait for time or
    block count relative to block count or timestamp of depending block, then we use
    `**OP_CHECKSEQUENCEVERIFY**`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 交易中的 `**nLockTime**` 字段设置为静态区块高度或静态时期时间。如果新创建的交易需要等待相对于依赖区块的区块计数或时间戳的时间或区块计数，那么我们使用
    `**OP_CHECKSEQUENCEVERIFY**`。
- en: The relative lock-time contract is implemented using the `**OP_CHECKSEQUENCEVERIFY**`
    opcode as a script, so we use P2SH with redeem script. The opcode requires that
    the sequence is set for the corresponding transaction input.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `**OP_CHECKSEQUENCEVERIFY**` 操作码作为脚本实现相对锁定时间合约，因此我们使用具有赎回脚本的 P2SH。该操作码要求为相应的交易输入设置序列。
- en: The relative locktime was a softfork, which required version number of transactions
    to be set as 2\. It also led to changes in the way `**nSequence**` is evaluated.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 相对锁定时间是一个软分叉，需要将交易的版本号设置为 2。它还导致了对 `**nSequence**` 评估方式的更改。
- en: 'Prior to the softfork:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在软分叉之前：
- en: If nSequence is 0xFFFFFFFE, it denotes that nLockTime is set.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 nSequence 为 0xFFFFFFFE，则表示已设置 nLockTime。
- en: If nSequence is 0xFFFFFFFF, it denotes that nLockTime is not set.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 nSequence 为 0xFFFFFFFF，则表示未设置 nLockTime。
- en: 'The following illustration shows the way nSequence is evaluated post softfork:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下插图展示了软分叉后如何评估 nSequence：
- en: '![](images/Figure-11.16.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.16.jpg)'
- en: '**Figure 11.16:** Illustration of nSequence evaluation'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.16：** nSequence 评估示例'
- en: 'Listed here are the conditions based on which sequence value needs to be set:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 下面列出了根据条件设置序列值的情况：
- en: If nSequence > 0xEFFFFFFF, then it is not defined and so, the transaction can
    be included in any block.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 nSequence > 0xEFFFFFFF，则未定义，因此该交易可包含在任何区块中。
- en: If nSequence <= 0xEFFFFFFF, then bit-22 determines if 0-15 bits denote block
    height or timestamp.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 nSequence <= 0xEFFFFFFF，则第 22 位确定 0-15 位是表示区块高度还是时间戳。
- en: If bit-22 is set, then 0-15 bits denote block height.
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第 22 位设置，则 0-15 位表示区块高度。
- en: If bit-22 is not set, then 0-15 bits denotes medium time past.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第 22 位未设置，则 0-15 位表示过去的中位时间。
- en: 'This is implemented in the following code:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这在以下代码中实现：
- en: '`def getSequence(txn_struct: dict, i: int):`'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`def getSequence(txn_struct: dict, i: int):`'
- en: '`inp = txn_struct[‘inputs’][i]`'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp = txn_struct[‘inputs’][i]`'
- en: '`if ‘sequence_type’ in inp:`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`if ‘sequence_type’ in inp:`'
- en: '`if inp[‘sequence_type’] == ‘time’:`'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`if inp[‘sequence_type’] == ‘time’:`'
- en: '`sequence = inp[‘sequence’] | (1 << 22)`'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`sequence = inp[‘sequence’] | (1 << 22)`'
- en: '`else:`'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`sequence = inp[‘sequence’]`'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '`sequence = inp[‘sequence’]`'
- en: '`sequence_b = struct.pack(‘<L’, sequence)`'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`sequence_b = struct.pack(‘<L’, sequence)`'
- en: '`else:`'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`if txn_struct[‘locktime’] > 0:`'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`if txn_struct[‘locktime’] > 0:`'
- en: '`# sequence`'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`# sequence`'
- en: '`sequence_b = bytes([0xfe, 0xff, 0xff, 0xff])`'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`sequence_b = bytes([0xfe, 0xff, 0xff, 0xff])`'
- en: '`else:`'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`# sequence`'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`# sequence`'
- en: '`sequence_b = bytes([0xff, 0xff, 0xff, 0xff])`'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`sequence_b = bytes([0xff, 0xff, 0xff, 0xff])`'
- en: '`return sequence_b`'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`return sequence_b`'
- en: '**Program 11.3:** Method to calculate nSequence'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.3：** 计算 nSequence 的方法'
- en: To implement a simple use case with relative lock-time, in our use case, a newly
    created transaction can only be mined 105 blocks after the funding transaction
    are confirmed.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现一个相对锁定时间的简单用例，在我们的用例中，新创建的交易只能在资金交易确认后的 105 个区块之后才能被挖掘。
- en: 'Here’s the redeem script for the transaction:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是交易的赎回脚本：
- en: '`# 105 OP_CHECKSEQUENCEVERIFY OP_DROP`'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 OP_CHECKSEQUENCEVERIFY OP_DROP`'
- en: '`# <Alice pubkey> CHECKSIG`'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Alice 公钥> CHECKSIG`'
- en: 'These are the opcodes we require in this transaction:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们在这个交易中需要的操作码：
- en: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
- en: '`OP_DROP = 0x75`'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_DROP = 0x75`'
- en: '`OP_CHECKSIG = 0xac`'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSIG = 0xac`'
- en: 'The following code is used to generate redeem script hex code:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码用于生成赎回脚本十六进制代码：
- en: '`def createRedeemScript(pubkey_alice: str):`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createRedeemScript(pubkey_alice: str):`'
- en: '`redeem_script_b = bytes([0x01,`'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = bytes([0x01,`'
- en: '`105, # after 105 blocks`'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`105, # 在 105 个区块之后`'
- en: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
- en: '`pubkey_b = bytes.fromhex(pubkey_alice)`'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_b = bytes.fromhex(pubkey_alice)`'
- en: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
- en: '`redeem_script_b += bytes([OP_CHECKSIG])`'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_CHECKSIG])`'
- en: '`return redeem_script_b`'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`return redeem_script_b`'
- en: '**Program 11.4:** Method to create redeem script for relative lock-time'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.4：** 为相对锁定时间创建赎回脚本的方法'
- en: 'We call the preceding method as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按以下方式调用前面的方法：
- en: '`if __name__ == ‘__main__’:`'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`if __name__ == ‘__main__’:`'
- en: '`pubkey_alice = ‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’`'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_alice = ‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’`'
- en: '`redeem_script_b = createRedeemScript(pubkey_alice)`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = createRedeemScript(pubkey_alice)`'
- en: '`print(‘redeem script = %s’ % redeem_script_b.hex())`'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘赎回脚本 = %s’ % redeem_script_b.hex())`'
- en: '`sh = hash160(redeem_script_b)`'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`sh = hash160(redeem_script_b)`'
- en: '`address = sh2address(sh)`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`address = sh2address(sh)`'
- en: '`print(‘P2SH address = %s’ % address)`'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘P2SH 地址 = %s’ % address)`'
- en: 'We execute it and get following result:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行它并得到以下结果：
- en: '![](images/Figure-11.17.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.17.jpg)'
- en: '**Figure 11.17:** Generate Redeem script for relative timelock'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.17：** 为相对时间锁生成赎回脚本'
- en: 'We generate a block to pay to the contract indicated by the preceding redeem
    script and then get the transaction ID:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成一个区块，支付给前述赎回脚本指示的合约，然后获得交易 ID：
- en: '![](images/Figure-11.18.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.18.jpg)'
- en: '**Figure 11.18:** Transaction ID for relative timelock funding transaction'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.18：** 相对时间锁定资金交易的交易ID'
- en: 'We now create a new transaction using the following code:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用以下代码创建一个新的交易：
- en: '`def createTransactionStruct():`'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 2`'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 2`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = \`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = \`'
- en: '`‘e6a31b5c7e39a31bb12c68055c1dd6dcb6554d1546a8621e889f1026e10264c8’`'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`‘e6a31b5c7e39a31bb12c68055c1dd6dcb6554d1546a8621e889f1026e10264c8’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2SH_RelativeTimeLock’`'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2SH_RelativeTimeLock’`'
- en: '`input0[‘privkeys’] = \`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = \`'
- en: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
- en: '`input0[‘redeem_script’] = ‘0169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac’`'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘redeem_script’] = ‘0169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac’`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`input0[‘sequence’] = 105`'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘sequence’] = 105`'
- en: '`input0[‘sequence_type’] = ‘block’`'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘sequence_type’] = ‘block’`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 10*(10**8)`'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 10*(10**8)`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 399999*(10**4)`'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 399999*(10**4)`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.5:** Method to create transaction for relative lock-time'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.5：** 创建相对锁定时间交易的方法'
- en: 'To claim the locked funds in the previous transaction, we provide `**scriptSig**`,
    which consists of the required signature along with redeem script. Here’s the
    code for `**scriptSig**`:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 要索取上一笔交易中的锁定资金，我们提供了`**scriptSig**`，其中包含所需的签名和赎回脚本。下面是`**scriptSig**`的代码：
- en: '`def createScriptSigForRelTimeLock(signgrp: list, script_b: bytes):`'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createScriptSigForRelTimeLock(signgrp: list, script_b: bytes):`'
- en: '`scriptSig_b = getWithPushdata(signgrp[0])`'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = getWithPushdata(signgrp[0])`'
- en: '`scriptSig_b += getWithPushdata(script_b)`'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += getWithPushdata(script_b)`'
- en: '`return scriptSig_b`'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`return scriptSig_b`'
- en: '**Program 11.6:** Method to create scriptSig for relative lock-time'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.6：** 用于创建相对锁定时间的scriptSig方法'
- en: 'In *[Chapter 10, Create and Validate Transactions](c10.xhtml)* under topic
    ***Building transactions*** we have defined method `**createSignedInput**`. We
    add following lines to the method to handle *relative-timelock* script type:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在*[第10章，创建和验证交易](c10.xhtml)*的***构建交易***主题下，我们已经定义了`**createSignedInput**`方法。我们在方法中添加以下行以处理*相对时间锁定*的脚本类型：
- en: '`elif txn_input[‘script_type’] == ‘P2SH_RelativeTimeLock’:`'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_RelativeTimeLock’:`'
- en: '`scriptSig_b = createScriptSigForRelTimeLock(signgrp, script_b)`'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForRelTimeLock(signgrp, script_b)`'
- en: 'We execute the code and get the signed raw transaction:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行代码并得到签名的原始交易：
- en: '![](images/Figure-11.19.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.19.jpg)'
- en: '**Figure 11.19:** Create hex code for relative timelock transaction'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.19：** 为相对时钟事务创建十六进制代码'
- en: 'If we publish the preceding transaction before 105 blocks are mined, we get
    the following error:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在挖掘了 105 个区块之前发布前述交易，我们会收到以下错误：
- en: '![](images/Figure-11.20.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.20.jpg)'
- en: '**Figure 11.20:** Publishing relative timelock transaction before the required
    block height'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.20：** 在要求的区块高度之前发布相对时钟事务'
- en: 'Once we have mined 105 blocks after the input transaction, we can publish the
    preceding transaction:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在输入事务后挖掘了 105 个区块后，我们可以发布前述交易：
- en: '![](images/Figure-11.21.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.21.jpg)'
- en: '**Figure 11.21:** Publishing relative timelock transaction after the required
    block height'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.21：** 在要求的区块高度之后发布相对时钟事务'
- en: '[Smart contract](toc.xhtml#s239a)'
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[智能合约](toc.xhtml#s239a)'
- en: '*Smart Contract* is a contract between two or more parties that is written
    in the form of an executable computer program. It executes only when the contract
    allows its execution, and on execution, smart contract follows the conditions
    defined in the contract.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '*智能合约* 是两个或更多方之间以可执行计算机程序形式编写的合同。只有在合同允许执行时它才会执行，执行时智能合约遵循合同中定义的条件。'
- en: Bitcoin provides a primitive scripting language based on reverse polish notation.
    The script is not Turing complete, which means it cannot solve all computational
    problems. Since smart contracts are contracts modelled in a program, they can
    become more complex with loops and state variables that the Bitcoin script does
    not allow.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币提供了一种基于逆波兰表示法的原始脚本语言。该脚本不是图灵完备的，这意味着它不能解决所有计算问题。由于智能合约是程序化的合同模型，它们可以通过循环和状态变量变得比比特币脚本允许的更复杂。
- en: It has a large number of opcodes that can be used to create a variety of smart
    contracts. Even though there are large number of opcodes, not everything can be
    done by scripting.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 它拥有大量可以用来创建各种智能合约的操作码。尽管操作码很多，但并非一切都可通过脚本实现。
- en: Additionally, Bitcoin transaction itself imposes limitations on the scripts.
    And since Bitcoin transaction fee is calculated based on per vBytes and is reasonably
    high, a complicated and large redeem script can make a smart contract financially
    non-viable.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，比特币交易本身对脚本施加了限制。由于比特币交易费用是基于每v字节计算的，并且相当高，因此一个复杂且较大的赎回脚本可能会使智能合约在经济上不可行。
- en: 'Here are some of the limitations of smart contract on Bitcoin:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是智能合约在比特币上的一些限制：
- en: In a transaction, smart contract can only affect a single input.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在交易中，智能合约只能影响一个输入。
- en: A smart contract can only fund the transaction from a single UTXO that has a
    fixed value.
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约只能从具有固定价值的单个未花费交易输出（UTXO）中资助交易。
- en: Transaction outputs cannot be modified based on smart contract.
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据智能合约，交易输出不能被修改。
- en: Output scripts are standard and can only be one of the standard scripts such
    as P2SH, P2PKH, OP_RETURN, P2PK, or P2MS and standard segwit scripts, which we
    will cover in the next chapter.
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出脚本是标准的，只能是标准脚本中的一种，如P2SH、P2PKH、OP_RETURN、P2PK或P2MS和标准的segwit脚本，这些我们将在下一章中介绍。
- en: 'Bitcoin script is not a Turing complete language, and it does not have options
    to:'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币脚本不是图灵完备的语言，并且没有选项：
- en: Have nondeterministic operations such as loops
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有循环等非确定性操作。
- en: Work as a state machine and perform operations based on its state.
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为状态机工作并根据其状态执行操作。
- en: Bitcoin script is limited to the opcode it provides.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币脚本限于它提供的操作码。
- en: Scripting on Bitcoin is costly, and the complexity of a smart contract also
    depends on its financial viability.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在比特币上编写脚本成本很高，智能合约的复杂性也取决于其经济可行性。
- en: '[Solution to trust issue in payments](toc.xhtml#s240a)'
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[支付中信任问题的解决方案](toc.xhtml#s240a)'
- en: We know that the simple method of payment is to transfer bitcoins to the recipient’s
    address. It would be done in your mobile wallet by scanning the QR code. This
    is great for small payments, but as the transaction fee has increased with increase
    in bitcoin price, making payments for low-priced goods is not financially viable.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道简单的支付方法是将比特币转到收款人的地址。这可以在你的移动钱包中通过扫描二维码来完成。这对于小额支付来说很好，但随着比特币价格的上涨，交易费用也在增加，因此用低价格商品进行支付在经济上并不可行。
- en: For large value payments, we need to improve the security of payments. We will
    improve the security of payments in the following subtopics as we tackle one issue
    at a time.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大额支付，我们需要提高支付的安全性。我们将按照以下子主题逐一解决，以提高支付的安全性。
- en: '[Simple multi-signature payment](toc.xhtml#s241a)'
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[简单的多重签名支付](toc.xhtml#s241a)'
- en: A 2-of-2-multisig between the buyer and seller is a way to secure payments when
    the trusted party needs to depend on the services provided by the non-trusted
    entity. As an example, consider a reputed business that needs to get a service
    from an unregulated small vendor.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 买方和卖方之间的2-of-2多重签名是一种当信任方需要依赖非信任实体提供的服务时，确保支付安全的方法。例如，考虑一个知名企业需要从一家未受监管的小型供应商那里获得一项服务。
- en: In this case, the business locks funds in a 2-of-2-multisig address and only
    completes the payment once it has received the service from the small vendor.
    The locked funds act as the smart contract between the business and the vendor.
    This gives surety to the small vendor that they will get paid as there is no way
    the large business can take the money back.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，商家将资金锁定在2-of-2-multisig地址中，并在从小供应商那里收到服务后才完成支付。锁定的资金作为商家和小供应商之间的智能合约。这给小型供应商带来了保证，因为他们将得到支付，因为大型商家无法取回资金。
- en: '[Improved payment with relative locktime](toc.xhtml#s242a)'
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**带有相对锁定时间的改进支付**'
- en: The problem in the above payment use case is when the small vendor delays in
    providing the required service. They know that the funds are locked, so they can
    be bit careless about their job.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 上述支付用例中的问题是小型供应商在提供所需服务时延迟。他们知道资金被锁定了，所以在工作上面可能会有些疏忽。
- en: To solve this issue, there must be a way the business should be able to revoke.
    However, the business should not be able to revoke the payment at will. This can
    be achieved by relative lock-time so that both parties know that bitcoins are
    locked, but there is a time limit. If the vendor does not get service within time,
    it will get revoked.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，必须有一种方式使得商家能够撤销。然而，商家不应该能够随意撤销支付。这可以通过相对锁定时间实现，这样双方都知道比特币被锁定了，但有一定的时间限制。如果供应商在规定时间内没有提供服务，支付将会被撤销。
- en: 'The use case can be understood with the help of the following illustration.
    Here, Alice represents the trusted business, and Bob represents a small non-trusted
    vendor:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 以下插图可以帮助理解用例。在这里，Alice代表可信赖的商家，而Bob代表一个小型的不可信赖的供应商：
- en: '![](images/Figure-11.22.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.22.jpg)'
- en: '**Figure 11.22:** Improved payment with relative lock time'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.22:** 带有相对锁定时间的改进支付'
- en: 'To achieve this, we use the P2SH transaction with the following redeem script:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们使用以下赎回脚本的P2SH交易：
- en: '`#IF`'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`#IF`'
- en: '`# OP_2 <Alice’s pubkey> <Bob’s pubkey> OP_2 CHECKMULTISIG`'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`# OP_2 <Alice的公钥> <Bob的公钥> OP_2 CHECKMULTISIG`'
- en: '`#ELSE`'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ELSE`'
- en: '`# 105 CHECKSEQUENCEVERIFY DROP`'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 CHECKSEQUENCEVERIFY DROP`'
- en: '`# <Alice’s pubkey> CHECKSIG`'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Alice的公钥> CHECKSIG`'
- en: '`#ENDIF`'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ENDIF`'
- en: In a normal condition, i.e., when there is no dispute, both sides sign the transaction
    that pays Bob. If there is a dispute, Alice waits for the timeout and then creates
    a transaction signed by her own private key, which transfers the locked amount
    to her address.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常情况下，即没有争议时，双方签署支付Bob的交易。如果有争议，Alice等待超时，然后创建由她自己的私钥签署的交易，将锁定金额转至她的地址。
- en: One thing to remember is that a condition once valid is always valid. So, if
    Alice wants to give extra time to Bob, she can still do it.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的一点是，一旦有效，条件总是有效的。所以，如果Alice想给Bob更多的时间，她仍然可以做到。
- en: 'The following are the required opcodes to create redeem script:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要创建赎回脚本的必需操作码：
- en: '`OP_2 = 0x52`'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_2 = 0x52`'
- en: '`OP_IF = 0x63`'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_IF = 0x63`'
- en: '`OP_ELSE = 0x67`'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_ELSE = 0x67`'
- en: '`OP_ENDIF = 0x68`'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_ENDIF = 0x68`'
- en: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
- en: '`OP_DROP = 0x75`'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_DROP = 0x75`'
- en: '`OP_CHECKMULTISIG = 0xae`'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKMULTISIG = 0xae`'
- en: '`OP_CHECKSIG = 0xac`'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSIG = 0xac`'
- en: 'Redeem script is used to generate the contract address where contract amount
    is locked. The following code is used to generate redeem script:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 赎回脚本用于生成合同地址，在该地址中锁定合同金额。以下代码用于生成赎回脚本：
- en: '`def createRedeemScript2_2_seqcheck(pubkey_l: list):`'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createRedeemScript2_2_seqcheck(pubkey_l: list):`'
- en: '`redeem_script_b = bytes([OP_IF, OP_2])`'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = bytes([OP_IF, OP_2])`'
- en: '`for pubkey in pubkey_l: # Alice + Bob`'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '`for pubkey in pubkey_l: # Alice + Bob`'
- en: '`pubkey_b = bytes.fromhex(pubkey)`'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_b = bytes.fromhex(pubkey)`'
- en: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
- en: '`redeem_script_b += bytes([OP_2, OP_CHECKMULTISIG])`'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_2, OP_CHECKMULTISIG])`'
- en: '`redeem_script_b += bytes([OP_ELSE, 0x01,`'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_ELSE, 0x01,`'
- en: '`105, # after 105 blocks`'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`105, # after 105 blocks`'
- en: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
- en: '`pubkey_b = bytes.fromhex(pubkey_l[0]) # Alice pubkey`'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_b = bytes.fromhex(pubkey_l[0]) # Alice公钥`'
- en: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
- en: '`redeem_script_b += bytes([OP_CHECKSIG, OP_ENDIF])`'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_CHECKSIG, OP_ENDIF])`'
- en: '`return redeem_script_b`'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`return redeem_script_b`'
- en: '**Program 11.7:** Redeem script for payment with relative lock-time'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.7:** 带有相对锁定时间的支付赎回脚本'
- en: 'We call the method using the following script:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下脚本调用方法：
- en: '`if __name__ == ‘__main__’:`'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`if __name__ == ‘__main__’:`'
- en: '`pubkey_l = [‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’,
    ‘02fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0’]`'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_l = [‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’,
    ‘02fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0’]`'
- en: '`redeem_script_b = createRedeemScript2_2_seqcheck(pubkey_l)`'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = createRedeemScript2_2_seqcheck(pubkey_l)`'
- en: '`print(‘redeem script = %s’ % redeem_script_b.hex())`'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘赎回脚本 = %s’ % redeem_script_b.hex())`'
- en: '`sh = hash160(redeem_script_b)`'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`sh = hash160(redeem_script_b)`'
- en: '`address = sh2address(sh)`'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '`address = sh2address(sh)`'
- en: '`print(‘P2SH address = %s’ % address)`'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘P2SH 地址 = %s’ % address)`'
- en: 'On calling the method, we get the following redeem script and address:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 调用该方法后，我们得到以下赎回脚本和地址：
- en: '![](images/Figure-11.23.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.23.jpg)'
- en: '**Figure 11.23:** Generate redeem script for payment with relative locktime'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.23：** 生成相对锁定时间的支付赎回脚本'
- en: 'We generate a block to pay to this address:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成一个区块来支付到这个地址：
- en: '![](images/Figure-11.24.jpg)'
  id: totrans-346
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.24.jpg)'
- en: '**Figure 11.24:** Generate block that pays redeem script'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.24：** 生成支付赎回脚本的区块'
- en: 'We get transaction ID from block hash:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从区块哈希中获取交易 ID：
- en: '![](images/Figure-11.25.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.25.jpg)'
- en: '**Figure 11.25:** Get transaction-id from the generated block'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.25：** 从生成的区块获取交易 ID'
- en: We generate another 100 blocks so that this transaction is available for payment.
    As you have learnt, there are two possible outcomes of this contract.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成另外 100 个区块，以便此交易可供支付。正如你所学到的，此合约有两种可能的结果。
- en: 'Additionally, `**OP_CHECKSEQUENCEVERIFY**` was a soft-fork that needed the
    transaction version to be equal to or greater than 2\. So, in the following transaction
    structure, we will use the version as 2:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，`**OP_CHECKSEQUENCEVERIFY**` 是一个软分叉，需要交易版本等于或大于 2。因此，在以下交易结构中，我们将使用版本 2：
- en: '`def createTransactionStruct():`'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 2`'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 2`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = \`'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = \`'
- en: '`‘624d92839eb89104d0909df89f95785cb8bb77f0fec66c6c40cf3ad2804a3966’`'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '`‘624d92839eb89104d0909df89f95785cb8bb77f0fec66c6c40cf3ad2804a3966’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2SH_Condition’`'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2SH_Condition’`'
- en: '`input0[‘condition’] = True`'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘condition’] = True`'
- en: '`input0[‘privkeys’] = \`'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = \`'
- en: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’,`'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’,`'
- en: '`‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '`‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
- en: '`input0[‘redeem_script’] = ‘635221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f72102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d052ae670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘redeem_script’] = ‘635221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f72102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d052ae670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 10*(10**8)`'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 10*(10**8)`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 399999*(10**4)`'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 399999*(10**4)`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0 # block height`'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0 # 区块高度`'
- en: '`return txn`'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.8:** Method to create transaction for True condition'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.8：** 用于创建 True 条件的交易的方法'
- en: To the redeem script, we need to provide public keys of both Alice and Bob as
    in the normal multi-sig script. Here, we also need to provide `**OP_1**` or True
    to the script.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 对于赎回脚本，我们需要提供像普通多签脚本中一样的Alice和Bob的公钥。在这里，我们还需要提供`**OP_1**`或True到脚本。
- en: 'So, the `**scriptSig**` with included redeem script is as follows:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，包含赎回脚本的 `**scriptSig**` 如下所示：
- en: '`#OP_0`'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_0`'
- en: '`#<Alice’s Signature>`'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<Alice’s Signature>`'
- en: '`#<Bob’s Signature>`'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<Bob’s Signature>`'
- en: '`#OP_1 (True)`'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_1 (True)`'
- en: '`#IF`'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`#IF`'
- en: '`# OP_2 <Alice’s pubkey> <Bob’s pubkey> OP_2 CHECKMULTISIG`'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '`# OP_2 <Alice’s pubkey> <Bob’s pubkey> OP_2 CHECKMULTISIG`'
- en: '`#ELSE`'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ELSE`'
- en: '`# 105 CHECKSEQUENCEVERIFY DROP`'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 CHECKSEQUENCEVERIFY DROP`'
- en: '`# <Alice’s pubkey> CHECKSIG`'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Alice’s pubkey> CHECKSIG`'
- en: '`#ENDIF`'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ENDIF`'
- en: 'We further add the following condition in the method `**createSignedInput**`
    to handle `**script_type**` *P2SH_Condition* for the preceding conditional scripts:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在方法 `**createSignedInput**` 中进一步添加以下条件，以处理上述条件脚本的 *P2SH_Condition*：
- en: '`elif txn_input[‘script_type’] == ‘P2SH_Condition’:`'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_Condition’:`'
- en: '`scriptSig_b = createScriptSigForCond(signgrp,`'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForCond(signgrp,`'
- en: '`script_b,`'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b,`'
- en: '`txn_input[‘condition’])`'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input[‘condition’])`'
- en: 'We also create `**scriptSig**` for custom condition, as follows:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为自定义条件创建 `**scriptSig**`，如下所示：
- en: '`OP_FALSE = 0x00`'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_FALSE = 0x00`'
- en: '`OP_TRUE = 0x51`'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_TRUE = 0x51`'
- en: '`#########################`'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '`#########################`'
- en: '`#True Case`'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '`#True 情况`'
- en: '`#OP_0`'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_0`'
- en: '`#<Alice’s Signature>`'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<爱丽丝的签名>`'
- en: '`#<Bob’s Signature>`'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<鲍勃的签名>`'
- en: '`#OP_TRUE (True)`'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_TRUE（True）`'
- en: '`#########################`'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '`#########################`'
- en: '`#False Case`'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '`#False 情况`'
- en: '`#<Alice’s Signature>`'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<爱丽丝的签名>`'
- en: '`#OP_FALSE (False)`'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_FALSE（False）`'
- en: '`#########################`'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '`#########################`'
- en: '`#Needs to be customized based on use case`'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '`#需要根据用例自定义`'
- en: '`def `**createScriptSigForCond**`(signgrp: `**list**`,`'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '`def `**createScriptSigForCond**`(signgrp: `**list**`,`'
- en: '`script_b: bytes,`'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b: bytes,`'
- en: '`cond: bool):`'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '`cond: bool):`'
- en: '`if cond:`'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '`if cond:`'
- en: '`scriptSig_b = bytes([OP_0])`'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = bytes([OP_0])`'
- en: '`for sign_b in signgrp:`'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '`for sign_b in signgrp:`'
- en: '`scriptSig_b += getWithPushdata(sign_b)`'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += getWithPushdata(sign_b)`'
- en: '`scriptSig_b += bytes([OP_TRUE])`'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += bytes([OP_TRUE])`'
- en: '`scriptSig_b += getWithPushdata(script_b)`'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += getWithPushdata(script_b)`'
- en: '`else:`'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptSig_b = encodePushdata(len(signgrp[0])) + signgrp[0]`'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = encodePushdata(len(signgrp[0])) + signgrp[0]`'
- en: '`scriptSig_b += bytes([OP_FALSE])`'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += bytes([OP_FALSE])`'
- en: '`scriptSig_b += encodePushdata(len(script_b)) + script_b`'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += encodePushdata(len(script_b)) + script_b`'
- en: '`return scriptSig_b`'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '`return scriptSig_b`'
- en: '**Program 11.9:** ScriptSig for condition handling'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.9：**用于条件处理的 ScriptSig'
- en: 'On executing the code, we get the following signed raw transaction:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行代码时，我们得到以下已签名的原始交易：
- en: '![](images/Figure-11.26.jpg)'
  id: totrans-433
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.26.jpg)'
- en: '**Figure 11.26:** Create transaction hex code for payment with relative locktime'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.26：**用于相对锁定时间付款的交易十六进制代码'
- en: 'We decode the preceding script and get the following decoded script:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 我们解码前述脚本并得到以下解码脚本：
- en: '![](images/Figure-11.27.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.27.jpg)'
- en: '**Figure 11.27:** ScriptSig in the transaction for payment with relative lock'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.27：**相对锁定付款交易中的 ScriptSig'
- en: 'We publish the transaction we just created as follows:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发布刚刚创建的交易如下：
- en: '![](images/Figure-11.28.jpg)'
  id: totrans-439
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.28.jpg)'
- en: '**Figure 11.28:** Transaction for payment with relative lock is published'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.28：**带相对锁定的付款交易被发布'
- en: This shows how the script works in normal conditions. In the condition of dispute,
    the `**OP_ELSE**` condition gets executed, and we need to hold the transaction
    in the mempool till the `**OP_CHECKSEQUENCEVERIFY**` condition is met. If we publish
    the transaction before the due time, it gets rejected. For this, we need to additionally
    set sequence greater than 105.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 这展示了脚本在正常条件下的工作原理。在争议条件下，执行`**OP_ELSE**`条件，并且我们需要将交易保持在内存池中，直到满足`**OP_CHECKSEQUENCEVERIFY**`条件。如果我们在到期时间之前发布交易，它将被拒绝。为此，我们需要额外设置大于
    105 的序列。
- en: 'So, we modify the transaction structure as follows:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们修改交易结构如下：
- en: '`#2-of-2-multisig with condition`'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '`#2-of-2 多重签名与条件`'
- en: '`def createTransactionStruct():`'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 2`'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 2`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = \`'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = \`'
- en: '`‘624d92839eb89104d0909df89f95785cb8bb77f0fec66c6c40cf3ad2804a3966’`'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '`‘624d92839eb89104d0909df89f95785cb8bb77f0fec66c6c40cf3ad2804a3966’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2SH_Condition’`'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2SH_Condition’`'
- en: '`input0[‘condition’] = False`'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘condition’] = False`'
- en: '`input0[‘privkeys’] = \`'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = \`'
- en: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '`[‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
- en: '`input0[‘redeem_script’] = ‘635221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f72102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d052ae670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘redeem_script’] = ‘635221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f72102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d052ae670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`input0[‘sequence’] = 110`'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘sequence’] = 110`'
- en: '`input0[‘sequence_type’] = ‘block’`'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘sequence_type’] = ‘block’`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 10*(10**8)`'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 10*(10**8)`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 399999*(10**4)`'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 399999*(10**4)`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘地址’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0 # block height`'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0 # 区块高度`'
- en: '`return txn`'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.10:** Method to create transaction for False condition'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.10:** 方法——在假定条件下创建交易'
- en: 'On executing the modified code, we get the following signed transaction:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行修改后的代码后，我们得到以下签名交易：
- en: '![](images/Figure-11.29.jpg)'
  id: totrans-478
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.29.jpg)'
- en: '**Figure 11.29:** Transaction for payment with relative lock is published'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.29:** 带有相对锁定的支付交易发布'
- en: 'If we try to execute this script before 106 blocks are mined, we get the following
    error:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试在106个区块被挖出之前执行这个脚本，我们会得到以下错误：
- en: '![](images/Figure-11.30.jpg)'
  id: totrans-481
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.30.jpg)'
- en: '**Figure 11.30:** Payment with relative lock fails to publish before required
    block height'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.30:** 在所需区块高度之前未能发布的相对锁定支付'
- en: 'But once 110 blocks are mined, we can publish it, as shown in the following
    screenshot:'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当110个区块被挖出后，我们可以发布它，如下截图所示：
- en: '![](images/Figure-11.31.jpg)'
  id: totrans-484
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11'
- en: '**Figure 11.31:** Payment with relative lock published after the required block
    height'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.31:** 在所需区块高度之后发布的相对锁定支付'
- en: You learnt how you can have conditional payments in the contract. Conditionals
    are an important part of a contract, and by learning this, we can think about
    more complex smart contracts.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 你学会了如何在合约中有条件支付。条件是合同的一个重要部分，通过学习这个，我们可以考虑更复杂的智能合约。
- en: '[Payments involving escrow](toc.xhtml#s243a)'
  id: totrans-487
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[涉及托管方的支付](toc.xhtml#s243a)'
- en: If both parties are not trustworthy, we need a trusted third party to resolve
    the dispute. This is like decentralized exchanges in which the buyers and seller
    gets into a trade, and when the payment is received by the seller, it releases
    bitcoin.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 如果双方都不可信，我们需要一个可信的第三方来解决争议。这就像去中心化交易所一样，买家和卖家进入交易，当卖家收到付款时，释放比特币。
- en: 'The following flowchart shows the steps and conditions involved in the entire
    payment process:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 以下流程图展示了整个支付过程中涉及的步骤和条件：
- en: '![](images/Figure-11.32.jpg)'
  id: totrans-490
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.32.jpg)'
- en: '**Figure 11.32:** Flow chart for payment involving escrow'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.32:** 涉及托管方的支付流程图'
- en: For programming this, we only need to have 2-of-3-multisig instead of 2-of-2-multisig
    with relative timeout, which we discussed in the previous subtopic.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 对于编程这部分，我们只需要2-of-3多签名而不是之前的2-of-2多签名带相对超时，我们之前在小节中已经讨论过了。
- en: 'So, the new redeem script will be as follows:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，新的赎回脚本如下：
- en: '`#IF`'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '`#IF`'
- en: '`# OP_2 <Alice’s pubkey><Bob’s pubkey><escrow’s pubkey> OP_3 OP_CHECKMULTISIG`'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '`# OP_2 <Alice的公开密钥><Bob的公开密钥><托管方的公开密钥> OP_3 OP_CHECKMULTISIG`'
- en: '`#ELSE`'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ELSE`'
- en: '`# 105 CHECKSEQUENCEVERIFY DROP`'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 CHECKSEQUENCEVERIFY DROP`'
- en: '`# <Alice’s pubkey> CHECKSIG`'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Alice的公开密钥> CHECKSIG`'
- en: '`#ENDIF`'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ENDIF`'
- en: We will have this as an assignment for the readers.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个作为一个给读者的作业。
- en: '[Payment involving secret identifier](toc.xhtml#s244a)'
  id: totrans-501
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[涉及秘密标识符的支付](toc.xhtml#s244a)'
- en: Consider a case where a secret agent is on a mission in the enemy territory.
    Some items need to be transferred to them so that the mission can be carried out.
    If they receive that package, then the mission is carried out; otherwise, it is
    aborted. To carry out the mission, they need to be paid. So, they can only claim
    the payment when they have received the package.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个秘密特工在敌对领土执行任务的情况。一些物品需要转交给他们，以便完成任务。如果他们收到了那个包裹，那么任务就完成了；否则，任务就取消了。为了执行任务，他们需要得到付款。所以，他们只能在收到包裹后才能索赔付款。
- en: In this case, a contract needs to be created with a relative locktime and in
    successful condition, the agent needs to reveal the secret.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，需要创建一个带有相对锁定时间并处于成功条件的合约，代理需要在成功条件下揭示秘密。
- en: 'The following is the redeem script for the contract:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是合约的赎回脚本：
- en: '`#IF`'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '`#IF`'
- en: '`# OP_SHA256 <secret_hash> OP_EQUALVERIFY`'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '`# OP_SHA256 <秘密哈希> OP_EQUALVERIFY`'
- en: '`# <Agent’s pubkey> CHECKSIG`'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <代理方的公开密钥> CHECKSIG`'
- en: '`#ELSE`'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ELSE`'
- en: '`# 105 CHECKSEQUENCEVERIFY DROP`'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 CHECKSEQUENCEVERIFY DROP`'
- en: '`# <Agency’s pubkey> CHECKSIG`'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <机构方的公开密钥> CHECKSIG`'
- en: '`#ENDIF`'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ENDIF`'
- en: 'The following are the opcodes and their hex values:'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是的操作码及其十六进制值：
- en: '`OP_2 = 0x52`'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_2 = 0x52`'
- en: '`OP_IF = 0x63`'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_IF = 0x63`'
- en: '`OP_ELSE = 0x67`'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_ELSE = 0x67`'
- en: '`OP_ENDIF = 0x68`'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_ENDIF = 0x68`'
- en: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY = 0xb2`'
- en: '`OP_EQUALVERIFY = 0x88`'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_EQUALVERIFY = 0x88`'
- en: '`OP_DROP = 0x75`'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_DROP = 0x75`'
- en: '`OP_SHA256 = 0xa8`'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_SHA256 = 0xa8`'
- en: '`OP_CHECKSIG = 0xac`'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSIG = 0xac`'
- en: '**Program 11.11:** Opcodes used in redeem script for payment with secret'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.11：** 用于包含密钥进行付款的赎回脚本中使用的操作码'
- en: 'The following is the code to generate redeem-script:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是生成赎回脚本的代码：
- en: '`def createRedeemScriptWithSecretHash(pubkey_agency: str, pubkey_agent: str,
    secret_h: bytes):`'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createRedeemScriptWithSecretHash(pubkey_agency: str, pubkey_agent: str,
    secret_h: bytes):`'
- en: '`redeem_script_b = bytes([OP_IF, OP_SHA256])`'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = bytes([OP_IF, OP_SHA256])`'
- en: '`redeem_script_b += createVarInt(len(secret_h)) + secret_h`'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(secret_h)) + secret_h`'
- en: '`redeem_script_b += bytes([OP_EQUALVERIFY])`'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_EQUALVERIFY])`'
- en: '`pubkey_b = bytes.fromhex(pubkey_agent)`'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_b = bytes.fromhex(pubkey_agent)`'
- en: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
- en: '`redeem_script_b += bytes([OP_CHECKSIG])`'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_CHECKSIG])`'
- en: '`redeem_script_b += bytes([OP_ELSE, 0x01,`'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_ELSE, 0x01,`'
- en: '`105, # after 105 blocks`'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '`105, # 在 105 个块后`'
- en: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '`OP_CHECKSEQUENCEVERIFY, OP_DROP])`'
- en: '`pubkey_b = bytes.fromhex(pubkey_agency)`'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_b = bytes.fromhex(pubkey_agency)`'
- en: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += createVarInt(len(pubkey_b)) + pubkey_b`'
- en: '`redeem_script_b += bytes([OP_CHECKSIG, OP_ENDIF])`'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b += bytes([OP_CHECKSIG, OP_ENDIF])`'
- en: '`return redeem_script_b`'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '`return redeem_script_b`'
- en: '**Program 11.12:** Method to create redeem script for payment with secret'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.12：** 用于创建包含密钥进行付款的赎回脚本的方法'
- en: 'We call the method by passing public keys and secret, and generate address
    in the following code:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过传递公钥和密钥调用该方法，并在以下代码中生成地址：
- en: '`if __name__ == ‘__main__’:`'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '`if __name__ == ‘__main__’:`'
- en: '`pubkey_agency = ‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’`'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_agency = ‘037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7’`'
- en: '`pubkey_agent = ‘02fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0’`'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '`pubkey_agent = ‘02fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0’`'
- en: '`secret = ‘She sells seashells on the seashore’`'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '`secret = ‘She sells seashells on the seashore’`'
- en: '`secret_h = hashlib.sha256(secret.encode(‘utf-8’)).digest()`'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '`secret_h = hashlib.sha256(secret.encode(‘utf-8’)).digest()`'
- en: '`redeem_script_b = createRedeemScriptWithSecretHash(pubkey_agency, pubkey_agent,
    secret_h)`'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '`redeem_script_b = createRedeemScriptWithSecretHash(pubkey_agency, pubkey_agent,
    secret_h)`'
- en: '`print(‘redeem script = %s’ % redeem_script_b.hex())`'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘redeem script = %s’ % redeem_script_b.hex())`'
- en: '`sh = hash160(redeem_script_b)`'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '`sh = hash160(redeem_script_b)`'
- en: '`address = sh2address(sh)`'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '`address = sh2address(sh)`'
- en: '`print(‘P2SH address = %s’ % address)`'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(‘P2SH 地址 = %s’ % address)`'
- en: 'On calling the method and then generating address for the redeem script, we
    get the following:'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 调用该方法并为赎回脚本生成地址后，我们得到以下结果：
- en: '![](images/Figure-11.33.jpg)'
  id: totrans-551
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.33.jpg)'
- en: '**Figure 11.33:** Redeem script for payment involving secret code'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.33：** 涉及秘密代码支付的赎回脚本'
- en: 'In the following screenshot, we generate a block to pay to the P2SH address
    and then get the transaction-id for the created coinbase transaction:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们生成一个块来支付给 P2SH 地址，然后获取所创建的 Coinbase 交易的交易 ID：
- en: '![](images/Figure-11.34.jpg)'
  id: totrans-554
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.34.jpg)'
- en: '**Figure 11.34:** Coinbase transaction-id for funding payment involving secret
    code'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.34：** 用于涉及秘密代码的资金支付的 Coinbase 交易 ID'
- en: 'If the package reaches the agent, they can use the secret code to receive the
    payment. In that case, the True part of the condition in redeem script is executed.
    We create the transaction structure that provides secret as follows:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 如果包裹送达代理，他们可以使用秘密代码接收支付。在这种情况下，赎回脚本中条件的 True 部分将被执行。我们创建提供秘密的交易结构如下：
- en: '`def createTransactionStruct():`'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = \`'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = \`'
- en: '`‘5bdcb4a0ff46b4443cfa1ff8002a8ccff06e56a8100a259fbfbd4b0ab660d481’`'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: '`‘5bdcb4a0ff46b4443cfa1ff8002a8ccff06e56a8100a259fbfbd4b0ab660d481’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2SH_WithSecret’`'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2SH_WithSecret’`'
- en: '`input0[‘privkeys’] = \`'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = \`'
- en: '`[‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '`[‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
- en: '`input0[‘redeem_script’] = ‘63a82009b5eb7277b9d5062d91fe20f141ad4dd81970fd0baa72d31ee346a7c48d5b8c882102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0ac670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘redeem_script’] = ‘63a82009b5eb7277b9d5062d91fe20f141ad4dd81970fd0baa72d31ee346a7c48d5b8c882102fcb1c7507db15576ab35cd7c9b1ea570141a8b81c9938dae0320392b0f7034d0ac670169b27521037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ac68’`'
- en: '`input0[‘secret’] = ‘She sells seashells on the seashore’`'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘secret’] = ‘She sells seashells on the seashore’`'
- en: '`input0[‘condition’] = True`'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘condition’] = True`'
- en: '`input0[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 10*(10**8)`'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 10*(10**8)`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mxzmMmVycLDgAA48VtHDeh389eDAwiJqwQ’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 399999*(10**4)`'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 399999*(10**4)`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘miSFmBeKXf5Wp7Luj46XTu3Yh57nAwhZAo’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0 # block height`'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0 # 区块高度`'
- en: '`return txn`'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.13:** Method to create transaction for payment with secret'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.13：** 用秘密创建交易的方法'
- en: 'This is done by having the following `**scriptSig**`:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下`**scriptSig**`完成：
- en: '`#<Agent’s signature>`'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<Agent’s signature>`'
- en: '`#<secret>`'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '`#<secret>`'
- en: '`#OP_1`'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: '`#OP_1`'
- en: '`#IF`'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: '`#IF`'
- en: '`# OP_SHA256 <secret_hash> OP_EQUALVERIFY`'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: '`# OP_SHA256 <secret_hash> OP_EQUALVERIFY`'
- en: '`# <Agent’s pubkey> CHECKSIG`'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Agent’s pubkey> CHECKSIG`'
- en: '`#ELSE`'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ELSE`'
- en: '`# 105 CHECKSEQUENCEVERIFY DROP`'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 105 CHECKSEQUENCEVERIFY DROP`'
- en: '`# <Agency’s pubkey> CHECKSIG`'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '`# <Agency’s pubkey> CHECKSIG`'
- en: '`#ENDIF`'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '`#ENDIF`'
- en: 'This is done in the following code:'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中完成此操作：
- en: '`def createScriptSigWithSecret(signgrp: list, script_b: bytes, secret: str,
    cond: bool):`'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createScriptSigWithSecret(signgrp: list, script_b: bytes, secret: str,
    cond: bool):`'
- en: '`if cond:`'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '`if cond:`'
- en: '`scriptSig_b = getWithPushdata(signgrp[0])`'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = getWithPushdata(signgrp[0])`'
- en: '`secret_b = secret.encode(‘utf-8’)`'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '`secret_b = secret.encode(‘utf-8’)`'
- en: '`scriptSig_b += getWithPushdata(secret_b)`'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += getWithPushdata(secret_b)`'
- en: '`scriptSig_b += bytes([OP_TRUE])`'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += bytes([OP_TRUE])`'
- en: '`else:`'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptSig_b = getWithPushdata(signgrp[0])`'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = getWithPushdata(signgrp[0])`'
- en: '`scriptSig_b += bytes([OP_FALSE])`'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += bytes([OP_FALSE])`'
- en: '`scriptSig_b += getWithPushdata(script_b)`'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b += getWithPushdata(script_b)`'
- en: '`return scriptSig_b`'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: '`return scriptSig_b`'
- en: '**Program 11.14:** Method to prepare scriptSig for the secret identifier use
    case'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.14：** 准备用于秘密标识符用例的scriptSig方法'
- en: The scripts associated with each of the smart contracts discussed in this chapter
    may require separate handling of scriptSig. Each of these methods are added to
    `**createSignedInput**` method as a new condition.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论的每个智能合约相关的脚本可能需要单独处理scriptSig。将每种方法添加到`**createSignedInput**`方法中作为新条件。
- en: 'To handle condition with secret discussed in this subtopic we further add the
    following condition in the method `**createSignedInput**` to handle `**script_type**`
    *P2SH_WithSecret* for the preceding conditional scripts:'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 处理本子主题中讨论的带有秘密条件的情况，我们进一步在方法`**createSignedInput**`中添加以下条件来处理前述条件脚本的`**script_type**`
    *P2SH_WithSecret*：
- en: '`elif txn_input[‘script_type’] == ‘P2SH_WithSecret’:`'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_WithSecret’:`'
- en: '`if txn_input[‘condition’]:`'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '`if txn_input[‘condition’]:`'
- en: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, txn_input[**‘secret’**],
    **True**)`'
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, txn_input[**‘secret’**],
    **True**)`'
- en: '`else:`'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, **‘’**, **False**)`'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, **‘’**, **False**)`'
- en: 'We execute the code and get signed raw transaction:'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行代码并获取已签名的原始交易：
- en: '![](images/Figure-11.35.jpg)'
  id: totrans-621
  prefs: []
  type: TYPE_IMG
  zh: '![图11.35](images/Figure-11.35.jpg)'
- en: '**Figure 11.35:** Created transaction for payment involving secret code'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.35：** 涉及秘密代码的支付创建的交易'
- en: 'This gives us the following `**scriptSig**`:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们提供了以下 `**scriptSig**`：
- en: '![](images/Figure-11.36.jpg)'
  id: totrans-624
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.36.jpg)'
- en: '**Figure 11.36:** ScriptSig of transaction for funding payment involving secret
    code'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.36：** 涉及秘密代码的资金支付交易的 ScriptSig'
- en: 'We publish it as follows:'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将其发布如下：
- en: '![](images/Figure-11.37.jpg)'
  id: totrans-627
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.37.jpg)'
- en: '**Figure 11.37:** Transaction for payment involving secret code is published'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.37：** 发布涉及秘密代码的支付交易'
- en: '[Collaborative transactions](toc.xhtml#s245a)'
  id: totrans-629
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[合作交易](toc.xhtml#s245a)'
- en: In some cases, there are multiple contributors of a single transaction. The
    contributors may not be aware of other parts of the transaction. So, they can
    only sign a portion of the transaction. This is done through different SIGHASH
    types.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，单个交易可能有多个贡献者。 这些贡献者可能不知道交易的其他部分。 因此，他们只能签署交易的一部分。 这是通过不同的 SIGHASH 类型完成的。
- en: In *[Chapter 10, Create and Validate Transactions](c10.xhtml),* under the topic
    ***Signature*** *v****erification*****,** you learnt about different SIGHASH types
    and their uses.
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *[第 10 章，创建和验证交易](c10.xhtml)* 中的 ***签名验证*** 主题下，您学习了不同的 SIGHASH 类型及其用途。
- en: In a collaborative transaction, each party creates their transaction and sends
    it to a person or authority that has the responsibility to create and publish
    the final transaction.
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 在合作交易中，每个参与方都创建自己的交易并将其发送给负责创建和发布最终交易的人或机构。
- en: 'For individual transactions, the following code contains the changes required
    to generate signature preimage:'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单个交易，以下代码包含生成签名预像所需的更改：
- en: '`def createSignaturePreimage(txn_struct: dict,`'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createSignaturePreimage(txn_struct: dict,`'
- en: '`script_b: bytes,`'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b: bytes,`'
- en: '`inp_index: int):`'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp_index: int):`'
- en: '`preimage_b = b’’`'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b = b’’`'
- en: '`preimage_b += struct.pack(‘<L’, txn_struct[‘version’])`'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, txn_struct[‘version’])`'
- en: '`hashtype = txn_struct[‘inputs’][inp_index][‘hash_type’]`'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: '`hashtype = txn_struct[‘inputs’][inp_index][‘hash_type’]`'
- en: '`if hashtype & SIGHASH_ANYONECANPAY:`'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & SIGHASH_ANYONECANPAY:`'
- en: '`preimage_b += createVarInt(1)`'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(1)`'
- en: '`inputs = [inp_index] # only current input is processed`'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '`inputs = [inp_index] # 仅处理当前输入`'
- en: '`else:`'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += createVarInt(txn_struct[‘input_count’])`'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(txn_struct[‘input_count’])`'
- en: '`inputs = range(txn_struct[‘input_count’])`'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '`inputs = range(txn_struct[‘input_count’])`'
- en: '`for i in inputs:`'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '`for i in inputs:`'
- en: '`inp = txn_struct[‘inputs’][i]`'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp = txn_struct[‘inputs’][i]`'
- en: '`preimage_b += bytes.fromhex(inp[‘prevtxn’])[::-1]`'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += bytes.fromhex(inp[‘prevtxn’])[::-1]`'
- en: '`preimage_b += struct.pack(‘<L’, inp[‘prevtxnindex’])`'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, inp[‘prevtxnindex’])`'
- en: '`if i == inp_index:`'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '`if i == inp_index:`'
- en: '`preimage_b += createVarInt(len(script_b))`'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(len(script_b))`'
- en: '`preimage_b += script_b`'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += script_b`'
- en: '`else:`'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += b’\x00’`'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += b’\x00’`'
- en: '`preimage_b += getSequence(txn_struct, i)`'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += getSequence(txn_struct, i)`'
- en: '`# remove SIGHASH_ANYONECANPAY`'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 删除 SIGHASH_ANYONECANPAY`'
- en: '`if hashtype & 0x0F == SIGHASH_NONE:`'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & 0x0F == SIGHASH_NONE:`'
- en: '`preimage_b += createVarInt(0)`'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(0)`'
- en: '`else:`'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`# remove SIGHASH_ANYONECANPAY`'
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: '`# remove SIGHASH_ANYONECANPAY`'
- en: '`if hashtype & 0x0F == SIGHASH_SINGLE:`'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & 0x0F == SIGHASH_SINGLE:`'
- en: '`preimage_b += createVarInt(inp[‘input_index’] + 1)`'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(inp[‘input_index’] + 1)`'
- en: '`outputs = range(inp[‘input_index’] + 1)`'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: '`outputs = range(inp[‘input_index’] + 1)`'
- en: '`else:`'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += createVarInt(txn_struct[‘out_count’])`'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(txn_struct[‘out_count’])`'
- en: '`outputs = range(txn_struct[‘out_count’])`'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: '`outputs = range(txn_struct[‘out_count’])`'
- en: '`for out in outputs:`'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: '`for out in outputs:`'
- en: '`outp = txn_struct[‘outputs’][out]`'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '`outp = txn_struct[‘outputs’][out]`'
- en: '`preimage_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
- en: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
- en: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
- en: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
- en: '`else:`'
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptPubkey_b = \`'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = \`'
- en: '`getScriptPubkeyFromAddress(outp[‘address’])`'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: '`getScriptPubkeyFromAddress(outp[‘address’])`'
- en: '`preimage_b += createVarInt(len(scriptPubkey_b))`'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(len(scriptPubkey_b))`'
- en: '`preimage_b += scriptPubkey_b`'
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += scriptPubkey_b`'
- en: '`preimage_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
- en: '`preimage_b += struct.pack(‘<L’, hashtype)`'
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, hashtype)`'
- en: '`return preimage_b`'
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: '`return preimage_b`'
- en: '**Program 11.15:** Method to create signature preimage for all sighash types'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '**Program 11.15:** Method to create signature preimage for all sighash types'
- en: 'The following is the createSignedInput method updated after accumulating all
    the conditions we had used in the preceding use cases:'
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 'The following is the createSignedInput method updated after accumulating all
    the conditions we had used in the preceding use cases:'
- en: '`def createSignedInput(txn_input: dict, signgrp, script_b: bytes):`'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createSignedInput(txn_input: dict, signgrp, script_b: bytes):`'
- en: '`prevtxn = txn_input[‘prevtxn’]`'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevtxn = txn_input[‘prevtxn’]`'
- en: '`prevtx_rb = bytes.fromhex(prevtxn)[::-1]`'
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevtx_rb = bytes.fromhex(prevtxn)[::-1]`'
- en: '`prevtxnindex = txn_input[‘prevtxnindex’]`'
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevtxnindex = txn_input[‘prevtxnindex’]`'
- en: '`sgntxnin_b = prevtx_rb + struct.pack(‘<L’, prevtxnindex)`'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxnin_b = prevtx_rb + struct.pack(‘<L’, prevtxnindex)`'
- en: '`if ‘input_txn’ in txn_input: #added`'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: '`if ‘input_txn’ in txn_input: #added`'
- en: '`scriptSig = txn_input[‘scriptsig’]`'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig = txn_input[‘scriptsig’]`'
- en: '`scriptSig_b = bytes.fromhex(scriptSig)`'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = bytes.fromhex(scriptSig)`'
- en: '`elif txn_input[‘script_type’] == ‘P2SH_Multisig’:`'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_Multisig’:`'
- en: '`scriptSig_b = createScriptSigForMultiSig(signgrp, script_b)`'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForMultiSig(signgrp, script_b)`'
- en: '`elif txn_input[‘script_type’] == ‘P2SH_RelativeTimeLock’:`'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_RelativeTimeLock’:`'
- en: '`scriptSig_b = createScriptSigForRelTimeLock(signgrp, script_b)`'
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForRelTimeLock(signgrp, script_b)`'
- en: '`elif txn_input[‘script_type’] == ‘P2SH_Condition’:`'
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_Condition’:`'
- en: '`scriptSig_b = createScriptSigForCond(signgrp,`'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForCond(signgrp,`'
- en: '`script_b,`'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b,`'
- en: '`txn_input[‘condition’])`'
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input[‘condition’])`'
- en: '`elif txn_input[‘script_type’] == ‘P2SH_WithSecret’:`'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '`elif txn_input[‘script_type’] == ‘P2SH_WithSecret’:`'
- en: '`if txn_input[‘condition’]:`'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: '`if txn_input[‘condition’]:`'
- en: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, txn_input[**‘secret’**],
    **True**)`'
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, txn_input[**‘secret’**],
    **True**)`'
- en: '`else:`'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, **‘’**, **False**)`'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigWithSecret(signgrp, script_b, **‘’**, **False**)`'
- en: '`elif txn_input[‘script_type’] == ‘P2PKH’:`'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 或者如果`txn_input[‘script_type’] == ‘P2PKH’`：
- en: '`scriptSig_b = createScriptSigForP2PKH(txn_input, signgrp)`'
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptSig_b = createScriptSigForP2PKH(txn_input, signgrp)`'
- en: '`sgntxnin_b += createVarInt(len(scriptSig_b)) + scriptSig_b`'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxnin_b += createVarInt(len(scriptSig_b)) + scriptSig_b`'
- en: '`return sgntxnin_b`'
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`sgntxnin_b`
- en: '**Program 11.16:** Method to prepare inputs for signed transaction'
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.16：** 准备签名交易输入的方法'
- en: The transactions are generated by each individual and sent to someone to collate.
    Each transaction goes into a new field, `**input_txn**`, in the transaction structure.
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 交易由每个个人生成并发送给某人整理。每个交易都进入交易结构中的新字段`**input_txn**`。
- en: 'We need code to parse and populate transaction structure with previous the
    transaction-ID, the previous transaction output `**index**`, and `**scriptSig**`.
    The following method does this:'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要的代码来解析和填充交易结构的上一个交易ID，上一个交易输出`**index**`和`**scriptSig**`。以下方法可以做到这一点：
- en: '`def updateTxnStructInput(txn_struct: dict, index: int):`'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: '定义`updateTxnStructInput(txn_struct: dict, index: int):`'
- en: '`txn_s = txn_struct[‘inputs’][index][‘input_txn’]`'
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_s = txn_struct[‘inputs’][index][‘input_txn’]`'
- en: '`txn_b = bytes.fromhex(txn_s)`'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_b = bytes.fromhex(txn_s)`'
- en: '`with mmap.mmap(-1, len(txn_b)) as txn_m:`'
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: '`with mmap.mmap(-1, len(txn_b)) as txn_m:`'
- en: '`txn_m.write(txn_b)`'
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_m.write(txn_b)`'
- en: '`txn_m.seek(0)`'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_m.seek(0)`'
- en: '`inp = getTransactionInfo(txn_m)`'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp = getTransactionInfo(txn_m)`'
- en: '`txn_input = txn_struct[‘inputs’][index]`'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input = txn_struct[‘inputs’][index]`'
- en: '`txn_input[‘prevtxn’] = inp[‘inputs’][0][‘prev_tx_hash’]`'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input[‘prevtxn’] = inp[‘inputs’][0][‘prev_tx_hash’]`'
- en: '`txn_input[‘prevtxnindex’] = inp[‘inputs’][0][‘prev_tx_out_index’]`'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input[‘prevtxnindex’] = inp[‘inputs’][0][‘prev_tx_out_index’]`'
- en: '`txn_input[‘scriptsig’] = inp[‘inputs’][0][‘scriptsig’]`'
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input[‘scriptsig’] = inp[‘inputs’][0][‘scriptsig’]`'
- en: '`return txn_struct`'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`txn_struct`
- en: '**Program 11.17:** Update transaction structure from input transaction hex
    string'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.17：** 从输入交易十六进制字符串更新交易结构'
- en: '`The update structure is called within the following program:`'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 更新结构在以下程序中调用：
- en: '`def getSignaturesAndExecScripts(txn_struct: dict):`'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: '定义`getSignaturesAndExecScripts(txn_struct: dict):`'
- en: '`signgrp_l = []`'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp_l = []`'
- en: '`script_l = []`'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_l = []`'
- en: '`for inp_index in range(txn_struct[‘input_count’]):`'
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`inp_index`在范围内的`txn_struct[‘input_count’]`：
- en: '`inp = txn_struct[‘inputs’][inp_index]`'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp = txn_struct[‘inputs’][inp_index]`'
- en: '`if ‘input_txn’ in inp:`'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`inp`中包含‘input_txn’：
- en: '`txn_struct = updateTxnStructInput(txn_struct, inp_index)`'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`txn_struct`的结构输入`txn_index`。
- en: '`signgrp_l.append([])`'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp_l.append([])`'
- en: '`script_l.append(b’’)`'
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_l.append(b’’)`'
- en: '`else:`'
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: '`script_b = getExecutionScript(txn_struct, inp_index)`'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b = getExecutionScript(txn_struct, inp_index)`'
- en: '`preimage_b = createSignaturePreimage(txn_struct, script_b, inp_index)`'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b = createSignaturePreimage(txn_struct, script_b, inp_index)`'
- en: '`signgrp = []`'
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp = []`'
- en: '`for privkey in inp[‘privkeys’]:`'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`inp[‘privkeys’]`中的每个私钥：
- en: '`hashtype = inp[‘hash_type’]`'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '`hashtype = inp[‘hash_type’]`'
- en: '`sign_b = signMessage(preimage_b, privkey, hashtype)`'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '`sign_b = signMessage(preimage_b, privkey, hashtype)`'
- en: '`signgrp.append(sign_b)`'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp.append(sign_b)`'
- en: '`signgrp_l.append(signgrp)`'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp_l.append(signgrp)`'
- en: '`script_l.append(script_b)`'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_l.append(script_b)`'
- en: '`return txn_struct, signgrp_l, script_l`'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn_struct, signgrp_l, script_l`'
- en: '**Program 11.18:** Modified method on signatures and scripts to also include
    modified transaction structure'
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.18：** 修改的签名和脚本方法，还包括修改后的交易结构'
- en: The preceding method now returns the updated structure as well.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的方法现在还返回更新后的结构。
- en: There are different conditions in which collaborative transactions may be required.
    Some of these are discussed here.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 合作交易可能需要在不同条件下进行。 其中一些在这里讨论。
- en: '[Charity use case](toc.xhtml#s246a)'
  id: totrans-748
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[慈善用例](toc.xhtml#s246a)'
- en: In the case of charity, people donate money to the organization, and the organization
    then uses those funds and funds from its reserve to perform social service activities.
    Those funds are also used to pay salaries to the regular employees.
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: 在慈善情况下，人们向组织捐款，然后组织利用这些资金和其储备资金进行社会服务活动。 这些资金也用于支付常规员工的工资。
- en: In this case, we are using `**SIGHASH_NONE|SIGHASH_ANYONECANPAY**` as donors
    do not know where the funds will be used and so, they cannot sign the outputs.
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用`**SIGHASH_NONE|SIGHASH_ANYONECANPAY**`，因为捐助者不知道资金将被用于何处，因此他们无法签署输出。
- en: In this use case, the individuals donating will create a transaction without
    outputs and send it to the charitable trust. This transaction will include signature.
    Then, the charitable trust will add additional funds from its reserves and pay
    the vendor, which will provide food, clothing, etc. to the destitute children
    of the organization.
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 在此用例中，捐赠个人将创建一个没有输出的交易，并将其发送给慈善信托。 此交易将包括签名。 然后，慈善信托将从其储备中添加额外资金并支付供应商，供应商将为该组织的贫困儿童提供食品、服装等。
- en: 'The following is an illustration of charity:'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是慈善事业的说明：
- en: '![](images/Figure-11.38.jpg)'
  id: totrans-753
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.38.jpg)'
- en: '**Figure 11.38:** Charity use case'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.38：** 慈善用例'
- en: We write code in which Alice and Bob pay 50 ![](images/Bitcoin.jpg) each to
    the trust, and the trust pays 125 ![](images/Bitcoin.jpg) to the merchant after
    adding their 50![](images/Bitcoin.jpg) as additional contribution and pays back
    the rest to itself as change after deducting network fee.
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写的代码中，Alice 和 Bob 各支付 50 ![](images/Bitcoin.jpg)给信托，信托在添加了他们各自的 50 ![](images/Bitcoin.jpg)
    作为额外捐款后，支付 125 ![](images/Bitcoin.jpg)给商家，并在扣除网络费用后将剩余资金退还给自身。
- en: 'For Alice, we create code with the following transaction structure method:'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Alice，我们创建了以下交易结构方法的代码：
- en: '`def createTransactionStruct():`'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[''version''] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[''input_count''] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[''inputs''] = []`'
- en: '`input0 = {}`'
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[''prevtxn''] = ''5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f''`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[''prevtxnindex''] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[''script_type''] = ''P2PKH''`'
- en: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[''privkeys''] = [''KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53'']`'
- en: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 0`'
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 0`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.19:** Method to define transaction structure for Alice in charity
    use case'
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.19：** 在慈善用例中为 Alice 定义交易结构的方法'
- en: 'On executing the program, we get the following transaction:'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: 执行该程序，我们得到以下交易：
- en: '![](images/Figure-11.39.jpg)'
  id: totrans-775
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.39.jpg)'
- en: '**Figure 11.39:** Transaction hex code for Alice in charity use case'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.39：** 在慈善用例中为 Alice 的交易十六进制代码'
- en: 'Here’s the script in the transaction:'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 这是交易中的脚本：
- en: '![](images/Figure-11.40.jpg)'
  id: totrans-778
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.40.jpg)'
- en: '**Figure 11.40:** ScriptSig for transaction created for Alice in charity use
    case'
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.40：** 在慈善用例中为 Alice 创建交易的 ScriptSig'
- en: In the case of sighash-type `**ANYONECANPAY**`, the spender is not aware of
    how many other transactions are going to get merged. So, the input index is 0
    even though it may fall in a different index in the final transaction.
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 在 sighash 类型为 `**ANYONECANPAY**` 的情况下，支付者不知道将合并多少其他交易。因此，即使它可能在最终交易中落入不同的索引，输入索引也为
    0。
- en: 'Similarly, we create a transaction for Bob by having the following fields in
    the transaction structure:'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，我们通过在交易结构中添加以下字段为 Bob 创建交易：
- en: '`input0[‘prevtxn’]=’7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’]=’7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
- en: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
- en: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
- en: 'On executing, we get the following raw transaction:'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，我们得到以下原始交易：
- en: '![](images/Figure-11.41.jpg)'
  id: totrans-786
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.41.jpg)'
- en: '**Figure 11.41:** Create a transaction for Bob in the charity use case'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.41：** 在慈善用例中为 Bob 创建交易'
- en: Now, the charitable trust pays 125 ![](images/Bitcoin.jpg) to a merchant by
    contributing its own 25 ![](images/Bitcoin.jpg).
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，慈善信托通过贡献自己的 25 ![](images/Bitcoin.jpg) 向商家支付 125 ![](images/Bitcoin.jpg)。
- en: Till now, the `**createTransactionStruct**` method consisted of previous transaction-ID
    and output indices. Now, to fund the final transaction, we already have two signed
    transactions from Alice and Bob. Consequently, this requires some modification
    to the existing code.
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，`**createTransactionStruct**` 方法包括之前的交易 ID 和输出索引。现在，为了为最终交易提供资金，我们已经有了来自
    Alice 和 Bob 的两个签名交易。因此，这需要对现有代码进行一些修改。
- en: 'The charitable trust pays 125 ![](images/Bitcoin.jpg) to merchant with address:'
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: 慈善信托向商家支付 125 ![](images/Bitcoin.jpg)，地址为：
- en: '`mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK`'
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: '`mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK`'
- en: 'And the change is paid to the following address:'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: 改变支付到以下地址：
- en: '`mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ`'
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: '`mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ`'
- en: 'The following is the modified transaction structure:'
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 修改后的交易结构如下：
- en: '`def createTransactionStruct():`'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 3`'
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 3`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006a47304402200a4ae1b5ddc7c49859001b9e2ff86bd4be57f44ce49571d6dc68e9942a86c990022054fa2e3446219e8dd6a4ba434d69bde460c7374228e6c529aaa95bb460e3ad2082210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff0000000000’`'
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006a47304402200a4ae1b5ddc7c49859001b9e2ff86bd4be57f44ce49571d6dc68e9942a86c990022054fa2e3446219e8dd6a4ba434d69bde460c7374228e6c529aaa95bb460e3ad2082210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff0000000000’`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`input1 = {}`'
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1 = {}`'
- en: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a4730440220152ecb49937c026ba62afd18604e916a515cb7727780b2e6b981cb0cb717a9940220197a071705e4f929b53e6aadefd477336765cb323ef77b86a3b6882669775d858221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff0000000000’`'
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a4730440220152ecb49937c026ba62afd18604e916a515cb7727780b2e6b981cb0cb717a9940220197a071705e4f929b53e6aadefd477336765cb323ef77b86a3b6882669775d858221037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff0000000000’`'
- en: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_NONE`'
- en: '`txn[‘inputs’].append(input1)`'
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input1)`'
- en: '`input2 = {}`'
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2 = {}`'
- en: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
- en: '`input2[‘prevtxnindex’] = 0`'
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxnindex’] = 0`'
- en: '`input2[‘script_type’] = ‘P2PKH’`'
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_type’] = ‘P2PKH’`'
- en: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
- en: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
- en: '`input2[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input2)`'
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input2)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 12500000000`'
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 12500000000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 2499900000`'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 2499900000`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ’`'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘'
- en: '`return txn`'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.20:** Method to define combined transaction structure in charity
    use case'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.20：** 慈善用例中定义组合交易结构的方法'
- en: 'We execute the preceding program to obtain the final transaction. On decoding
    the final transaction, we get the following `**scriptSig**` for corresponding
    inputs:'
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行上述程序以获得最终交易。解码最终交易后，我们得到相应输入的以下`**scriptSig**`：
- en: '**Input 0:**'
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入 0：**'
- en: '![](images/Figure-11.42.jpg)'
  id: totrans-833
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.42.jpg)'
- en: '**Figure 11.42:** ScriptSig of first input for transaction in the charity use
    case'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.42：** 慈善用例中交易的第一个输入的 ScriptSig'
- en: '**Input 1:**'
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入 1：**'
- en: '![](images/Figure-11.43.jpg)'
  id: totrans-836
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.43.jpg)'
- en: '**Figure 11.43:** ScriptSig of second input for transaction in the charity
    use case'
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.43：** 慈善用例中交易的第二个输入的 ScriptSig'
- en: '**Input 2:**'
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入 2：**'
- en: '![](images/Figure-11.44.jpg)'
  id: totrans-839
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.44.jpg)'
- en: '**Figure 11.44:** ScriptSig of third input for transaction in the charity use
    case'
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.44：** 慈善用例中交易的第三个输入的 ScriptSig'
- en: 'The following screenshot shows the transaction published successfully to the
    network:'
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了交易成功发布到网络的情况：
- en: '![](images/Figure-11.45.jpg)'
  id: totrans-842
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.45.jpg)'
- en: '**Figure 11.45:** Transaction in charity use case is successfully published'
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.45：**慈善用例中的交易成功发布'
- en: '[Subsidy use case](toc.xhtml#s247a)'
  id: totrans-844
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[补贴用例](toc.xhtml#s247a)'
- en: This use case solves the requirement where a person or organization partially
    sponsors or subsidizes payment for another individual.
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 此用例解决了一个人或组织部分赞助或补贴另一个个人支付需求的要求。
- en: In this case, we use `**SIGHASH_SINGLE|SIGHASH_ANYONECANPAY**` as only one input
    and one output are known by an individual.
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，我们使用`**SIGHASH_SINGLE|SIGHASH_ANYONECANPAY**`，因为只有一个输入和一个输出是由一个人所知的。
- en: In this case, the individual receiving subsidy only pays discounted price for
    the service or product. However, the merchant or service provider receives full
    payment, as the rest of the amount is added by the sponsoring person or organization.
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，接受补贴的个人只为服务或产品支付折扣价格。然而，商家或服务提供商收到的是全额付款，因为其余的金额是由赞助人或组织添加的。
- en: 'This use case has limited benefit as it is not useful for the following conditions:'
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 此用例的好处有限，因为它不适用于以下条件：
- en: Individual needs funds from multiple addresses
  id: totrans-849
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人需要从多个地址获取资金
- en: Individual needs to pay from a single address to multiple payees
  id: totrans-850
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人需要从一个地址向多个收款人支付
- en: If more than one person is being subsidized, then everyone who is being subsidized
    also gets an index that relates to the index of the final transaction output where
    their transaction will be added.
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有超过一个人被补贴，那么每个人被补贴也都有一个与最终交易输出索引相关的索引，他们的交易将被添加到该索引。
- en: We consider an example use case in which two students are selected for an educational
    trip. The school is sponsoring 25% of the cost of their trip. Since there is more
    than one beneficiary of the subsidy and one final transaction is created, one
    student gets index value as 0, and the other gets index value as 1.
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 我们考虑一个例子用例，其中两个学生被选中参加一个教育旅行。学校正在赞助他们旅行费用的25%。由于补贴的受益者不止一个，并且创建了一个最终的交易，一个学生得到索引值0，另一个学生得到索引值1。
- en: 'The following is the illustration of the use case where one person’s purchase
    is subsidized by another person:'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例，说明一个人的购买是如何被另一个人补贴的用例：
- en: '![](images/Figure-11.46.jpg)'
  id: totrans-854
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.46.jpg)'
- en: '**Figure 11.46:** Subsidy use case'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.46：**补贴用例'
- en: 'In this case, Alice must prepare a transaction for index 0\. So, she does not
    need to make any changes to the code, except transaction structure. The following
    code is for transaction structure for Alice:'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，Alice必须为索引0准备一个交易。因此，她不需要对代码做任何更改，除了交易结构。以下是为Alice的交易结构：
- en: '`def createTransactionStruct():`'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2PKH’`'
- en: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
- en: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
- en: '`input0[‘input_index’] = 0`'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘input_index’] = 0`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 1`'
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 1`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 6667000000`'
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 6667000000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.21:** Method to define transaction structure for Alice in the
    subsidy use case'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.21：**在补贴用例中为Alice定义交易结构的的方法'
- en: 'We execute it to get Alice a signed transaction:'
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行它以获取Alice的签名交易：
- en: '![](images/Figure-11.47.jpg)'
  id: totrans-882
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.47.jpg)'
- en: '**Figure 11.47:** Created transaction for Alice in the subsidy use case'
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.47：**在补贴用例中为Alice创建的交易'
- en: In the case of Bob, since index is 1, Bob will need to have empty output at
    index 0\. This needs to be handled in the code.
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bob的情况下，由于索引是1，Bob将需要在索引0处有一个空输出。这需要在代码中处理。
- en: 'Here’s the code for the transaction structure:'
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是交易结构的代码：
- en: '`def createTransactionStruct():`'
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2PKH’`'
- en: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
- en: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
- en: '`input0[‘input_index’] = 1`'
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘input_index’] = 1`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 2`'
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 2`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘script_type’] = ‘’`'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 6667000000`'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 6667000000`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.22:** Method to define transaction structure for Bob in subsidy
    use case'
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.22：** 为补贴用例中的 Bob 定义交易结构的方法'
- en: As you can see, we have introduced new `**script_type**`. This needs to be handled
    when we create signature preimage and signed transaction.
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，我们引入了新的`**script_type**`。在创建签名预图和签名交易时需要处理此问题。
- en: 'The following code creates signature preimage:'
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码创建签名预图：
- en: '`def createSignaturePreimage(txn_struct: dict,`'
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createSignaturePreimage(txn_struct: dict,`'
- en: '`script_b: bytes,`'
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_b: bytes,`'
- en: '`inp_index: int):`'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp_index: int):`'
- en: '`preimage_b = b’’`'
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b = b’’`'
- en: '`preimage_b += struct.pack(‘<L’, txn_struct[‘version’])`'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, txn_struct[‘version’])`'
- en: '`hashtype = txn_struct[‘inputs’][inp_index][‘hash_type’]`'
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: '`hashtype = txn_struct[‘inputs’][inp_index][‘hash_type’]`'
- en: '`if hashtype & SIGHASH_ANYONECANPAY:`'
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & SIGHASH_ANYONECANPAY:`'
- en: '`preimage_b += createVarInt(1)`'
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(1)`'
- en: '`inputs = [inp_index] # only current input is processed`'
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: '`inputs = [inp_index] # 仅处理当前输入`'
- en: '`else:`'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += createVarInt(txn_struct[‘input_count’])`'
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(txn_struct[‘input_count’])`'
- en: '`inputs = range(txn_struct[‘input_count’])`'
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: '`inputs = range(txn_struct[‘input_count’])`'
- en: '`for i in inputs:`'
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: '`for i in inputs:`'
- en: '`inp = txn_struct[‘inputs’][i]`'
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: '`inp = txn_struct[‘inputs’][i]`'
- en: '`preimage_b += bytes.fromhex(inp[‘prevtxn’])[::-1]`'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += bytes.fromhex(inp[‘prevtxn’])[::-1]`'
- en: '`preimage_b += struct.pack(‘<L’, inp[‘prevtxnindex’])`'
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, inp[‘prevtxnindex’])`'
- en: '`if i == inp_index:`'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: '`if i == inp_index:`'
- en: '`preimage_b += createVarInt(len(script_b))`'
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(len(script_b))`'
- en: '`preimage_b += script_b`'
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += script_b`'
- en: '`else:`'
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += b’\x00’`'
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += b’\x00’`'
- en: '`preimage_b += getSequence(txn_struct, i)`'
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += getSequence(txn_struct, i)`'
- en: '`# remove SIGHASH_ANYONECANPAY`'
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 移除 SIGHASH_ANYONECANPAY`'
- en: '`if hashtype & 0x0F == SIGHASH_NONE:`'
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & 0x0F == SIGHASH_NONE:`'
- en: '`preimage_b += createVarInt(0)`'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(0)`'
- en: '`else:`'
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`# remove SIGHASH_ANYONECANPAY`'
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 移除 SIGHASH_ANYONECANPAY`'
- en: '`if hashtype & 0x0F == SIGHASH_SINGLE:`'
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hashtype & 0x0F == SIGHASH_SINGLE:`'
- en: '`preimage_b += createVarInt(inp[‘input_index’] + 1)`'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(inp[‘input_index’] + 1)`'
- en: '`outputs = range(inp[‘input_index’] + 1)`'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: '`outputs = range(inp[‘input_index’] + 1)`'
- en: '`else:`'
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += createVarInt(txn_struct[‘out_count’])`'
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(txn_struct[‘out_count’])`'
- en: '`outputs = range(txn_struct[‘out_count’])`'
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: '`outputs = range(txn_struct[‘out_count’])`'
- en: '`for out in outputs:`'
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: '`for out in outputs:`'
- en: '`outp = txn_struct[‘outputs’][out]`'
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: '`outp = txn_struct[‘outputs’][out]`'
- en: '`if outp[‘script_type’] == ‘’:`'
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘’:`'
- en: '`preimage_b += bytes([0xff])*8`'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += bytes([0xff])*8`'
- en: '`preimage_b += bytes([0x00])`'
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += bytes([0x00])`'
- en: '`else:`'
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`preimage_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
- en: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
- en: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
- en: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
- en: '`else:`'
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptPubkey_b = \ getScriptPubkeyFromAddress(outp[**‘address’**])`'
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = \ getScriptPubkeyFromAddress(outp[**‘address’**])`'
- en: '`preimage_b += createVarInt(len(scriptPubkey_b))`'
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += createVarInt(len(scriptPubkey_b))`'
- en: '`preimage_b += scriptPubkey_b`'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += scriptPubkey_b`'
- en: '`preimage_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
- en: '`preimage_b += struct.pack(‘<L’, hashtype)`'
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: '`preimage_b += struct.pack(‘<L’, hashtype)`'
- en: '`return preimage_b`'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: '`return preimage_b`'
- en: '**Program 11.23:** Method to create preimage with additional support for empty
    script type'
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.23：** 创建带有额外对空脚本类型支持的预映像的方法'
- en: 'Here’s the code for creating signed transaction:'
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 创建带有额外空脚本类型支持的预映像的方法的代码如下：
- en: '`def createSignedTransaction(txn_struct: dict,`'
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createSignedTransaction(txn_struct: dict,`'
- en: '`signgrp_l: list,`'
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: '`signgrp_l: list,`'
- en: '`script_l: list):`'
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
  zh: '`script_l: list):`'
- en: '`sgntxn_b = b’’`'
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b = b’’`'
- en: '`sgntxn_b += struct.pack(‘<L’, txn_struct[‘version’])`'
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += struct.pack(‘<L’, txn_struct[‘version’])`'
- en: '`sgntxn_b += createVarInt(txn_struct[‘input_count’])`'
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += createVarInt(txn_struct[‘input_count’])`'
- en: '`for i in range(txn_struct[‘input_count’]):`'
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: '`for i in range(txn_struct[‘input_count’]):`'
- en: '`txn_input = txn_struct[‘inputs’][i]`'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn_input = txn_struct[‘inputs’][i]`'
- en: '`sgntxn_b += createSignedInput(txn_input, signgrp_l[i], script_l[i])`'
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += createSignedInput(txn_input, signgrp_l[i], script_l[i])`'
- en: '`sgntxn_b += getSequence(txn_struct, i)`'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += getSequence(txn_struct, i)`'
- en: '`sgntxn_b += createVarInt(txn_struct[‘out_count’])`'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += createVarInt(txn_struct[‘out_count’])`'
- en: '`for out in range(txn_struct[‘out_count’]):`'
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: '`for out in range(txn_struct[‘out_count’]):`'
- en: '`outp = txn_struct[‘outputs’][out]`'
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: '`outp = txn_struct[‘outputs’][out]`'
- en: '`if outp[‘script_type’] == ‘’:`'
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘’:`'
- en: '`sgntxn_b += bytes([0xff])*8`'
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += bytes([0xff])*8`'
- en: '`sgntxn_b += bytes([0x00])`'
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += bytes([0x00])`'
- en: '`else:`'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`sgntxn_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += struct.pack(‘<Q’, outp[‘satoshis’])`'
- en: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: '`if outp[‘script_type’] == ‘OP_RETURN’:`'
- en: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_b = bytes.fromhex(outp[‘content_hash256’])`'
- en: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = bytes([OP_RETURN]) \ + getWithPushdata(content_b)`'
- en: '`else:`'
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: '`else:`'
- en: '`scriptPubkey_b = \ getScriptPubkeyFromAddress(outp[**‘address’**])`'
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: '`scriptPubkey_b = \ getScriptPubkeyFromAddress(outp[**‘address’**])`'
- en: '`sgntxn_b += createVarInt(len(scriptPubkey_b))`'
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += createVarInt(len(scriptPubkey_b))`'
- en: '`sgntxn_b += scriptPubkey_b`'
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += scriptPubkey_b`'
- en: '`sgntxn_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: '`sgntxn_b += struct.pack(‘<L’, txn_struct[‘locktime’])`'
- en: '`return sgntxn_b`'
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: '`return sgntxn_b`'
- en: '**Program 11.24:** Method to create signed transaction with additional support
    for empty script type'
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: '**Program 11.24:** Method to create signed transaction with additional support
    for empty script type'
- en: 'We get the following signed transaction for Bob:'
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了以下 Bob 的已签名交易：
- en: '![](images/Figure-11.48.jpg)'
  id: totrans-996
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.48.jpg)'
- en: '**Figure 11.48:** Created transaction for Bob in the subsidy use case'
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: '**Figure 11.48:** Created transaction for Bob in the subsidy use case'
- en: Alice and Bob give the transaction they created to the College. The College
    includes those transactions in the final transaction and publishes it.
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝和鲍勃将他们创建的交易交给了学院。 学院将这些交易包含在最终交易中并发布它。
- en: 'Here’s the transaction structure of the final transaction:'
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最终交易的交易结构：
- en: '`def createTransactionStruct():`'
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 3`'
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 3`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006b483045022100ff8125ed9e52def07818aa14607ab73ede3fdbc2c0aba0721b6645f9522bac050220419d776c4f291e255cc1dead6fd6543ddd39f2cb65274858c50564b92ae3449683210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff01c058628d010000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006b483045022100ff8125ed9e52def07818aa14607ab73ede3fdbc2c0aba0721b6645f9522bac050220419d776c4f291e255cc1dead6fd6543ddd39f2cb65274858c50564b92ae3449683210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff01c058628d010000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`input1 = {}`'
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1 = {}`'
- en: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a47304402205a2a89a88e5de4f7198369b0eb01a327a5a737f5d7b80167780c8d492c353e480220497f122aa2fb3fcab3f41a2dcaea67d6f2a68d1b690b121e68eb78b4c19bcbab8321037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff02ffffffffffffffff00c058628d010000001976a9144ec804774aba76cb4685b5152d6924d8ce5c87ae88ac00000000’`'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a47304402205a2a89a88e5de4f7198369b0eb01a327a5a737f5d7b80167780c8d492c353e480220497f122aa2fb3fcab3f41a2dcaea67d6f2a68d1b690b121e68eb78b4c19bcbab8321037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff02ffffffffffffffff00c058628d010000001976a9144ec804774aba76cb4685b5152d6924d8ce5c87ae88ac00000000’`'
- en: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_SINGLE`'
- en: '`txn[‘inputs’].append(input1)`'
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input1)`'
- en: '`input2 = {}`'
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2 = {}`'
- en: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
- en: '`input2[‘prevtxnindex’] = 0`'
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxnindex’] = 0`'
- en: '`input2[‘script_type’] = ‘P2PKH’`'
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_type’] = ‘P2PKH’`'
- en: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
- en: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
- en: '`input2[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input2)`'
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input2)`'
- en: '`txn[‘out_count’] = 3`'
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 3`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 6667000000`'
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 6667000000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`output1 = {}`'
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1 = {}`'
- en: '`output1[‘satoshis’] = 6667000000`'
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘satoshis’] = 6667000000`'
- en: '`output1[‘script_type’] = ‘P2PKH’`'
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘script_type’] = ‘P2PKH’`'
- en: '`output1[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: '`output1[‘address’] = ‘mnhWcUMqe9J1G4t3NMqNmLUqxfPTgwv7NK’`'
- en: '`txn[‘outputs’].append(output1)`'
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output1)`'
- en: '`output2 = {}`'
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: '`output2 = {}`'
- en: '`output2[‘satoshis’] = 1665990000`'
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: '`output2[‘satoshis’] = 1665990000`'
- en: '`output2[‘script_type’] = ‘P2PKH’`'
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: '`output2[‘script_type’] = ‘P2PKH’`'
- en: '`output2[‘address’] = ‘mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ’`'
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: '`output2[‘address’] = ‘mtRkMmpT6uhM9LXVPRk4ck9Gcaz9iuQgmZ’`'
- en: '`txn[‘outputs’].append(output2)`'
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output2)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.25:** Method to define combined transaction structure in the charity
    use case'
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: '**Program 11.25:** 在慈善使用情景中定义组合交易结构的方法'
- en: 'We execute the code to create the final transaction, as follows:'
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行代码以创建最终交易，步骤如下：
- en: '![](images/Figure-11.49.jpg)'
  id: totrans-1042
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.49.jpg)'
- en: '**Figure 11.49:** Created transaction in the subsidy use case'
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: '**Figure 11.49:** 在补贴使用情景中创建的交易'
- en: 'We publish this transaction using Bitcoin Core software, as follows:'
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用比特币核心软件发布此交易，步骤如下：
- en: '![](images/Figure-11.50.jpg)'
  id: totrans-1045
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.50.jpg)'
- en: '**Figure 11.50:** Subsidy use case transaction published successfully'
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: '**Figure 11.50:** 补贴使用情景交易成功发布'
- en: '[Planned contribution within a group](toc.xhtml#s248a)'
  id: totrans-1047
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[团队内计划贡献](toc.xhtml#s248a)'
- en: Unlike subsidy or charity, in this case, the involved participants are contributing
    for a known purpose, like buying a gift for a teacher. Everyone contributes their
    portion or fair share for buying the gift, and everyone knows how they are paying.
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: 与补贴或慈善不同，在这种情况下，参与的人员为一个已知目的而贡献，比如为老师买礼物。每个人都为购买礼物贡献自己的一部分或公平份额，并且每个人都知道自己如何支付。
- en: In this case, we are using `**SIGHASH_ALL|SIGHASH_ANYONECANPAY**` as donors
    know where the funds will be used and so, sign the outputs.
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用`**SIGHASH_ALL|SIGHASH_ANYONECANPAY**`，因为捐赠者知道资金将被用在哪里，所以签署输出。
- en: In this case, one person will create a raw transaction message containing all
    inputs and outputs that everyone signs, and the final signed transaction is then
    published.
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，一个人将创建一个包含所有输入和输出的原始交易消息，每个人都会签名，然后最终签名的交易被发布。
- en: 'This can be understood from the following illustration:'
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以从下图中理解：
- en: '![](images/Figure-11.51.jpg)'
  id: totrans-1052
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.51.jpg)'
- en: '**Figure 11.51:** Planned group transaction'
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: '**Figure 11.51:** 计划中的团体交易'
- en: 'In the preceding illustration, Alice, Bob, and Carol are buying a gift together
    for their teacher. Alice and Bob create a transaction of paying a merchant and
    give the transaction to Carol. Carol creates the final transaction using the transaction
    received from Alice and Bob and adds her contribution to the final transaction.
    Carol signs the final transaction before publishing it to the Bitcoin network.
    The following is the code for the transaction structure of Alice:'
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，Alice、Bob 和 Carol 共同为他们的老师买了一份礼物。Alice 和 Bob 创建了一个向商家支付的交易，并将交易交给了 Carol。Carol
    使用从 Alice 和 Bob 那里收到的交易创建最终交易，并将自己的贡献添加到最终交易中。Carol 在发布到比特币网络之前签署了最终交易。以下是 Alice
    交易结构的代码：
- en: '`def createTransactionStruct():`'
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 1`'
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 1`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘5efcf04e32f061b9c4894f5b3a59fb3d8c5c56a6e7340b89b3a1a9ebacca998f’`'
- en: '`input0[‘prevtxnindex’] = 0`'
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxnindex’] = 0`'
- en: '`input0[‘script_type’] = ‘P2PKH’`'
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_type’] = ‘P2PKH’`'
- en: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘KwfxnwxpPG1RmhU8jaU8Ron4m1KZGymLAFNaMnSTonoZ7AQfnV53’]`'
- en: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a91481d7033c19dcec645cb3f86ce41678756850ba4d88ac’`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`txn[‘out_count’] = 1`'
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 1`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 14999990000`'
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 14999990000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.26:** Method to define transaction structure for Alice in planned
    group transaction'
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.26：** 为计划中的组交易中的Alice定义交易结构的方法'
- en: 'Alice creates the following transaction:'
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: Alice创建以下交易：
- en: '![](images/Figure-11.52.jpg)'
  id: totrans-1079
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.52.jpg)'
- en: '**Figure 11.52:** Transaction hex code for Alice in planned group transaction'
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.52：** 计划组交易中Alice的交易十六进制代码'
- en: 'We modify the following fields in the code for the transaction structure to
    make it for Bob:'
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在交易结构的代码中修改以下字段，使其适用于Bob：
- en: '`input0[‘prevtxn’] = ‘7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘prevtxn’] = ‘7995c6e08aee1fb5ddb21c7b84ff949bdb2bd98183623606aa1732a61200c12f’`'
- en: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘privkeys’] = [‘L26JcHRhqEQv8V9DaAmE4bdszwqXS7tHznGYJPp7fxEoEQxxBPcQ’]`'
- en: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘script_pubkey’] = ‘76a914db610ec1429ecb422044ee4ea92f11bc080fdb3d88ac’`'
- en: '**Program 11.34:** Updated field for Bob in method to define transaction structure
    in planned group transaction'
  id: totrans-1085
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序 11.34：** 更新Bob的字段以定义计划中组交易中的交易结构的方法'
- en: 'Bob creates the following transaction:'
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: Bob创建以下交易：
- en: '![](images/Figure-11.53.jpg)'
  id: totrans-1087
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.53.jpg)'
- en: '**Figure 11.53:** Transaction hex code for Bob in planned group transaction'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11.53：** 计划组交易中Bob的交易十六进制代码'
- en: 'Carol adds her own input and combines Alice’s and Bob’s transaction in the
    following transaction structure:'
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: Carol在以下交易结构中添加了自己的输入，并合并了Alice和Bob的交易：
- en: '`def createTransactionStruct():`'
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: '`def createTransactionStruct():`'
- en: '`txn = {}`'
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn = {}`'
- en: '`txn[‘version’] = 1`'
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘version’] = 1`'
- en: '`txn[‘input_count’] = 3`'
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘input_count’] = 3`'
- en: '`txn[‘inputs’] = []`'
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’] = []`'
- en: '`input0 = {}`'
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0 = {}`'
- en: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006a473044022073ecf25c06ffe90cb03951db885defb1a12aaf50f7b068a94dc6fa3f8dd69cf9022070f3b386c9ec95a24f475bb6b5add578591985320b4ab6424886612cd830b9c581210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff01f0ae117e030000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘input_txn’] = ‘01000000018f99caaceba9a1b3890b34e7a6565c8c3dfb593a5b4f89c4b961f0324ef0fc5e000000006a473044022073ecf25c06ffe90cb03951db885defb1a12aaf50f7b068a94dc6fa3f8dd69cf9022070f3b386c9ec95a24f475bb6b5add578591985320b4ab6424886612cd830b9c581210281238fc6d981efce6aa1b3ccb8556a1b115a40f8ab3315c003f415ceedc3defeffffffff01f0ae117e030000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
- en: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: '`input0[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input0)`'
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input0)`'
- en: '`input1 = {}`'
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1 = {}`'
- en: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a473044022002388c5d0d89d73697abead51ae87cb6d9421662ecb513d620e76b90118307ff02206fe1b65fb514bb1e47c279047fe226b9aedd7ced45902cb377bbb70d60e49fb58121037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff01f0ae117e030000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘input_txn’] = ‘01000000012fc10012a63217aa0636628381d92bdb9b94ff847b1cb2ddb51fee8ae0c69579000000006a473044022002388c5d0d89d73697abead51ae87cb6d9421662ecb513d620e76b90118307ff02206fe1b65fb514bb1e47c279047fe226b9aedd7ced45902cb377bbb70d60e49fb58121037fadaea6edf196bf70af16cefb2bd3c830e54c0a6e9a00bf7806b241933547f7ffffffff01f0ae117e030000001976a9148343cfe3998d8a49bcfeea63dcbe12643a8e884788ac00000000’`'
- en: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: '`input1[‘hash_type’] = SIGHASH_ANYONECANPAY|SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input1)`'
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input1)`'
- en: '`input2 = {}`'
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2 = {}`'
- en: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxn’] = ‘c83e8dc76b2139f84235d38907291ebe2470786b2d5977302a63aff1c5d99649’`'
- en: '`input2[‘prevtxnindex’] = 0`'
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘prevtxnindex’] = 0`'
- en: '`input2[‘script_type’] = ‘P2PKH’`'
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_type’] = ‘P2PKH’`'
- en: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘privkeys’] = [‘KxR8HHyfAwFPidCw2vXThXqT4vSMNeufirHFapnfCfkzLaohtujG’]`'
- en: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘script_pubkey’] = ‘76a9142004e0ff6a6f08115d048fd9af177fae702f681a88ac’`'
- en: '`input2[‘hash_type’] = SIGHASH_ALL`'
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: '`input2[‘hash_type’] = SIGHASH_ALL`'
- en: '`txn[‘inputs’].append(input2)`'
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘inputs’].append(input2)`'
- en: '`txn[‘out_count’] = 1`'
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘out_count’] = 1`'
- en: '`txn[‘outputs’] = []`'
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’] = []`'
- en: '`output0 = {}`'
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0 = {}`'
- en: '`output0[‘satoshis’] = 14999990000`'
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘satoshis’] = 14999990000`'
- en: '`output0[‘script_type’] = ‘P2PKH’`'
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘script_type’] = ‘P2PKH’`'
- en: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: '`output0[‘address’] = ‘msV23rBcHAtQWSkWV9ph91DV65VduWi1Vt’`'
- en: '`txn[‘outputs’].append(output0)`'
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘outputs’].append(output0)`'
- en: '`txn[‘locktime’] = 0`'
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: '`txn[‘locktime’] = 0`'
- en: '`return txn`'
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
  zh: '`return txn`'
- en: '**Program 11.27:** Method to define combined transaction structure in planned
    group transaction'
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序11.27：**计划在团体交易中定义组合交易结构的方法'
- en: 'Carol creates the following transaction:'
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: 卡罗尔创建了以下交易：
- en: '![](images/Figure-11.54.jpg)'
  id: totrans-1122
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.54.jpg)'
- en: '**Figure 11.54:** Transaction hex code for Carol in planned group transaction'
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.54：**卡罗尔在计划团体交易中的交易十六进制代码'
- en: 'And then she publishes the transaction as follows:'
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: 然后她按照以下方式发布交易：
- en: '![](images/Figure-11.55.jpg)'
  id: totrans-1125
  prefs: []
  type: TYPE_IMG
  zh: '![](images/Figure-11.55.jpg)'
- en: '**Figure 11.55:** Planned group transaction is published successfully'
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11.55：**计划团体交易成功发布'
- en: With these collaborative transactions, you learnt how multiple individuals can
    collaborate to form a collated transaction.
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些协作交易，你学习了多个个体如何协作形成汇总交易。
- en: '[Conclusion](toc.xhtml#s249a)'
  id: totrans-1128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[结论](toc.xhtml#s249a)'
- en: In this chapter, you learnt about the different ways in which we can use transaction
    and scripting. You also learnt how to timestamp a digital property and how to
    lock a transaction until a block height or time is reached. Further on in the
    chapter, you learnt how to ensure the security of payment, which can lead to building
    peer-to-peer exchange. Additionally, you learnt how to contribute to a transaction
    and collate contributed transactions into a final transaction.
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了我们可以使用交易和脚本的不同方法。你也学习了如何对数字财产进行时间戳处理，以及如何锁定交易直到达到区块高度或时间。在后面的章节中，你学习了如何确保支付安全，这可以导致建立点对点交易所。此外，你还学习了如何贡献交易，并将贡献的交易汇总成最终交易。
- en: 'In the next chapter, you will learn about an important softfork: segregated
    witness.'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将了解到一个重要的软分叉：隔离见证。
- en: '[Points to remember](toc.xhtml#s250a)'
  id: totrans-1131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[需记住的要点](toc.xhtml#s250a)'
- en: Digital asset or digital property is the digital representation of a property.
  id: totrans-1132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字资产或数字财产是财产的数字表示。
- en: Digital property is unique and is linked to the owner’s Bitcoin address at any
    point.
  id: totrans-1133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字财产是独一无二的，并且在任何时刻都与所有者的比特币地址相关联。
- en: Digital property can have marketable value and can be sold, auctioned, or mortgaged.
  id: totrans-1134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字财产可以有市场价值，可以被出售、拍卖或抵押。
- en: The `**OP_RETURN**` opcode is used to store data in a transaction.
  id: totrans-1135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**OP_RETURN**`操作码用于在交易中存储数据。'
- en: The `**OP_RETURN**` opcode is non spendable and stays associated with the transaction
    only.
  id: totrans-1136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**OP_RETURN**`操作码是不可花费的，并且只与交易相关联。'
- en: A transaction can be locked till the medium time past is less than the locktime
    or till block height is reached.
  id: totrans-1137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易可以被锁定，直到中时间过去小于锁时间，或者直到区块高度达到。
- en: A transaction can also be locked based on relative locktime from funding transaction
    in terms of either block height or medium time past.
  id: totrans-1138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易也可以基于相对于资助交易的相对锁时间被锁定，无论是区块高度还是中时间过去。
- en: Relative locktime is a softfork and is used in a script.
  id: totrans-1139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相对锁时间是一个软分叉，在脚本中使用。
- en: Relative locktime modifies the method of evolution of the `**nSequence**` field.
  id: totrans-1140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相对锁时间修改了`**nSequence**`字段的发展方法。
- en: Smart contract is a contract between two or more parties written in the form
    of an executable program.
  id: totrans-1141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约是双方或多方之间以可执行程序形式订立的合同。
- en: Bitcoin smart contract has certain limitations and cannot do everything that
    a few other smart contract platforms can do.
  id: totrans-1142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币智能合约有一定的局限性，不能做其他一些智能合约平台能做的所有事情。
- en: Bitcoin smart contract provides enough flexibility to help overcome most of
    its limitations.
  id: totrans-1143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币智能合约提供了足够的灵活性，以帮助克服其大部分局限。
- en: '[Questions](toc.xhtml#s251a)'
  id: totrans-1144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[问题](toc.xhtml#s251a)'
- en: Write a program to implement a collaborative use case in which Alice and Bob
    bet on their respective teams winning in a football match. If team A wins, Alice
    pays Bob 45 ![](images/Bitcoin.jpg). If team B wins, Bob pays Alice 45 ![](images/Bitcoin.jpg).
    Both lock 50 ![](images/Bitcoin.jpg) in a contract. To settle the bet, Carol takes
    his fees, which is 4.9999 ![](images/Bitcoin.jpg). The remaining 0.0001 ![](images/Bitcoin.jpg)
    are paid as fees to the network. Carol will provide the required condition to
    contract for transferring 95 ![](images/Bitcoin.jpg) to the winner, which is 45
    ![](images/Bitcoin.jpg) as winning amount and 50 ![](images/Bitcoin.jpg) as own
    money.
  id: totrans-1145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，实现协作用例，其中爱丽丝和鲍勃赌他们各自队伍在足球比赛中获胜。如果队伍A获胜，爱丽丝支付鲍勃45 ![](images/Bitcoin.jpg)。如果队伍B获胜，鲍勃支付爱丽丝45
    ![](images/Bitcoin.jpg)。双方在合同中锁定50 ![](images/Bitcoin.jpg)。为了结算赌注，卡尔罗收取他的费用，即4.9999
    ![](images/Bitcoin.jpg)。剩余的0.0001 ![](images/Bitcoin.jpg)作为费用支付给网络。卡尔罗将为合同提供所需条件，以将95
    ![](images/Bitcoin.jpg)转让给获胜者，其中45 ![](images/Bitcoin.jpg)作为获胜金额，50 ![](images/Bitcoin.jpg)作为自有资金。
- en: Write a program to implement peer-to-peer exchange involving escrow. The program
    needs to have 2-of-3-multisig with `**nLockTime**`. In the program, you need to
    implement the flow chart illustrated in *[figure 11.32](#fig11_32)*.
  id: totrans-1146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个实现点对点交易所涉及的托管程序。该程序需要具有2-of-3多重签名`**nLockTime**`。在程序中，你需要实现如图*[11.32](#fig11_32)*所示的流程图。
- en: Write a program to sell digital asset from one person to another such that the
    transfer of asset only happens if the receiver reveals the secret shared by the
    seller on the Bitcoin network. The following illustration describes the scenario:![](images/Figure-11.56.jpg)
  id: totrans-1147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，实现数字资产从一个个人向另一个个人的出售，只有当接收者在大比特币网络上揭示卖家的共享密钥时，资产的转移才会发生。以下插图描述了该场景：![](images/Figure-11.56.jpg)
- en: '**Figure 11.56:** Scenario'
  id: totrans-1148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图11.56：** 场景'
- en: 'True/False:'
  id: totrans-1149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真/假：
- en: '`OP_RETURN` opcode does not need a nValue. So, it does not cost anything to
    add them in a transaction.'
  id: totrans-1150
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OP_RETURN`操作码不需要nValue。因此，在交易中添加它们不需要任何成本。'
- en: Digital property is an asset that is owned by only one person at a time and
    can be transferred from one wallet address to another.
  id: totrans-1151
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数字财产是一种在任何时间点只能由一个人拥有的资产，可以从一个钱包地址转移到另一个。
- en: A condition in a contract that, once valid, cannot become invalid in the future.
  id: totrans-1152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 合同中的一项条件，一旦有效，未来无法变得无效。
- en: 'Fill in the blanks:'
  id: totrans-1153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填空：
- en: Medium time past is calculated by taking the median of the timestamps of the
    previous ________ blocks.
  id: totrans-1154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过去的中等时间是通过取前________个块的时间戳的中位数来计算的。
- en: Sequence value must be ________ than or equal to `OP_CHECKSEQUENCEVERIFY` for
    a transaction to be valid.
  id: totrans-1155
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 序列值必须__________或等于`OP_CHECKSEQUENCEVERIFY`，以便交易有效。
- en: To collate multiple SIGHASH_SINGLE transactions into a single final transaction,
    each individual transaction needs to have outputs at the right ____________.
  id: totrans-1156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将多个SIGHASH_SINGLE交易组合成一个最终的交易，每个单独的交易都需要在正确的____________上有输出。
