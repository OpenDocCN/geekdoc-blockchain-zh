- en: Chapter 8
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章
- en: Blockchain and PUF-Based Secure Transaction Procedure for Bitcoin
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于区块链和 PUF 的比特币安全交易流程
- en: Sivasankari Narasimhan
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 西瓦珊卡里·纳拉辛汉
- en: Mepco Schlenk Engineering College, India
  id: totrans-3
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 印度梅普科·施伦克工程学院
- en: ABSTRACT
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: In the blockchain, the transaction hashes are implemented through public-key
    cryptography and hash functions. Hence, there is a possibility for the two users
    to choose the same private key knowingly or unknowingly. Even the intruders can
    follow the particular user’s bitcoin transaction, and they can masquerade as that
    user by generating the private and public key pairs of him. If it happens, the
    user may lose his transaction. Generally, bitcoin technology uses random numbers
    from 1 to 2256\. It is a wide range, but for a greater number of users, there
    should be one another solution. There is a possibility of digital prototyping
    which leads to the loss of more accounts. This chapter provides the device-specific
    fingerprint technology known as physical unclonable function (PUF) to be employed
    for authentication in a blockchain-based bitcoin environment. The random unique
    response from PUF ensures correct transaction. In this chapter, a new tetrahedral
    oscillator PUF has been introduced intrinsically. All the blockchain operations
    are carried out and verified with PUF response.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，交易哈希通过公钥加密和哈希函数实现。因此，两个用户有可能无意识或有意识地选择相同的私钥。甚至入侵者可以跟踪特定用户的比特币交易，并通过生成他的私钥和公钥对来冒充该用户。如果发生这种情况，用户可能会丢失他的交易。一般来说，比特币技术使用从
    1 到 2256 的随机数。这是一个很大的范围，但是对于更多的用户，应该有另一个解决方案。数字原型化可能会导致更多帐户的丢失。本章提供了一种称为物理不可克隆函数（PUF）的设备特定指纹技术，用于区块链型比特币环境中的身份验证。来自
    PUF 的随机唯一响应确保正确的交易。在本章中，一种新的四面体振荡器 PUF 已经被内在地介绍。所有区块链操作都是通过 PUF 响应进行的并得到验证。
- en: INTRODUCTION
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 引言
- en: Bitcoin technology appeared 11 years ago; the decentralized ledger used in Bitcoin
    is implemented through blockchain technology. The blockchain technique has been
    proposed in October 2008 by Satoshi Nakamoto (Nakamoto, 2008). Bitcoin technique
    requires, some cryptographical techniques to control the transactions of Bitcoin
    among the persons who are involved in it, some hardware instruments to run the
    software, and the miners who are involved in maintaining the transaction ledgers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币技术出现已有 11 年；比特币中使用的分布式账本是通过区块链技术实现的。区块链技术是由**中本聪**（Nakamoto，2008）于 2008 年
    10 月提出的。比特币技术需要一些密码学技术来控制参与其中的人之间的交易，一些硬件设备来运行软件，以及参与维护交易账本的矿工。
- en: Security issues have become the most challenging problem in Bitcoin, in the
    sender’s point of view. Bitcoin software issues some software challenges to the
    miners which should be solved within a particular time interval. This challenge
    makes the miners to find the Nonces for the specified block. The race to solve
    the challenge starts after the software releases the challenge. After a particular
    time, this will be closed. Within a stipulated time, who correctly solve the challenge
    will be rewarded. Other miners validate the answer. The transaction will be added
    to the blockchain. Most of the threats and blockchain concepts were discussed
    by Saraju et.al in reference (Mohanty et al., n.d.).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 安全问题已成为比特币在发送者方面面临的最具挑战性的问题。比特币软件向矿工发出一些软件挑战，这些挑战必须在特定的时间间隔内解决。这个挑战使矿工找到指定区块的
    Nonces。在软件发布挑战后，解决挑战的竞赛开始。一段时间后，这将关闭。在规定的时间内，正确解决挑战的人将获得奖励。其他矿工验证答案。交易将被添加到区块链中。大多数威胁和区块链概念都由
    Saraju 等人在参考文献中讨论过（Mohanty 等人，未知日期）。
- en: The design of security protocols is complicated due to the problem of creating
    software challenges and nonces creation. The security of Bitcoin lies in the software
    challenge; this must be resistant to power analysis attack physical and any side-channel
    attack. In addition to that, they must be unimaginable by anyone. Moreover, they
    must be computationally secured and reasonable to produce. The power and memory
    resources of the bitcoin chain should be less. In this chapter, PUF based blockchain
    architecture for bitcoin security is presented. Moreover, the enrolment and authentication
    protocols for the PUF assisted hardware in a blockchain network.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 设计安全协议是复杂的，因为要解决软件挑战和随机数创建的问题。比特币的安全性在于软件挑战；这必须对功率分析攻击和任何侧信道攻击具有抗性。除此之外，它们必须无法被任何人想象。此外，它们必须在计算上得到保护并且易于产生。比特币链的功率和内存资源应该更少。在本章中，提出了基于
    PUF 的比特币安全区块链架构。此外，在区块链网络中提供了基于 PUF 辅助硬件的注册和认证协议。
- en: 'Many types of PUFs have been proposed. It can be categorized mainly into two
    types: Extrinsic PUFs and Intrinsic PUFs. Both are having its advantages and disadvantages.
    Based on coating materials, metal components, and memristors, extrinsic PUFs are
    manufactured. Based on delay properties, in simple logic gates, Intrinsic PUFs
    are generated. One new category of PUF is introduced in this article to produce
    the identity of that person. A tetrahedral oscillator (Muthukumar et al., 2019)
    PUF is proposed in this paper which is used as intrinsic PUF that can be used
    for the implementation of PUF based blockchain. In some places, PUF is used in
    place of Hashing operations which avoid more software computation of cryptographic
    hashes. Elliptic Curve generating module is additionally added with PUF structure
    to generate public keys. In the case of Proof of PUF-enabled authentication (PoP),
    the PUF module is responsible for generating the device’s unique identification.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 已经提出了许多类型的PUF。主要可以分为两种类型：外部PUF和内部PUF。两者都各有优缺点。基于涂层材料、金属组件和忆阻器，制造了外部PUF。基于延迟特性，在简单逻辑门中生成内部PUF。本文介绍了一种新的PUF类别，用于生成个人身份。本文提出了一种四面体振荡器（Muthukumar等人，2019）PUF，用作内在PUF，可用于基于PUF的区块链实现。在一些地方，PUF被用来代替哈希操作，从而避免了更多的软件计算加密哈希。椭圆曲线生成模块还额外添加了PUF结构以生成公钥。在Proof
    of PUF-enabled authentication (PoP)的情况下，PUF模块负责生成设备的唯一标识。
- en: Since the response of the PUF element is only known by the device manufacturer
    and the PUF holder, the behaviors are known only by them. Hence the probability
    of response duplication and counterfeiting becomes very less. The way that how
    the intruder is cheating the verifying device lies in the uniqueness and reliability
    of the underlying device. But in the presence of a PUF device, they can't meet
    the required conditions expected by the transaction proof chain.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PUF元素的响应仅由设备制造商和PUF持有者知道，因此行为仅由他们知道。因此，响应重复和伪造的概率变得非常小。入侵者如何欺骗验证设备的方式在于底层设备的独特性和可靠性。但是在存在PUF设备的情况下，他们无法满足交易证明链所期望的条件。
- en: 2\. RELATED WORKS
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 相关工作
- en: A blockchain network hierarchy with Design Authority, contract manufacturer,
    Distributors, and end-users is described in reference by Cui et al. (Cui et al.,
    2019). Attack analysis at various levels is described. They suggest PUF as a solution
    to avoid FPGA cloning. For Decentralized authentication of IoT devices, PUF is
    used with blockchain. The Trust score has been calculated according to the device
    performance and the values are stored in the database. If the trust value is greater
    than or equal to the acceptable level, then the devices start to communicate without
    expecting the third-party to start. Sensor-based wearable PUFs with blockchain
    proposed by Rahim et al. (Rahim et al., 2018) are utilized for deciding to accept
    or reject the person to access a particular device, while the owner is not present
    in the home. For blockchain environments, PUF acts as a deciding authority. The
    challenge Response verification procedure has been implemented with hash and MAC
    algorithms. The design has been implemented in Blockpro by Javid et al. (Javaid
    et al., 2018). Here one PUF based authentication methodology is proposed along
    with biometrics. A high-level authentication is proposed for vehicle authentication.
    The derivation of PUF keys is called Keyless signature technology. The public
    key can be derived from any of the public key cryptosystems as described in the
    reference (Intrinsic ID, n.d.). In Key management for blockchain technology Blockchain
    wallet are discussed in reference Om Pal et al. (Pal et al., n.d.), PUF is used
    to identify the IoT device. PUF is a function that uses the physical property
    of the device for generating the desired output. Using generated desired output
    from the physical property of the IoT device, a unique private/public key pair
    is generated and the generated pair is used in Blockchain infrastructure. Therefore,
    IoT nodes are not fully dependent on the nonces. In reference (Patil, n.d.) the
    attack analysis of blockchain has been exposed and they explain blockchain with
    PUF and hash algorithm as a solution for some attacks Delgodo et al. (Prada-Delgado
    et al., 2020) used PUF as a key generator for cryptographic operations. The paper
    explained digital trust as a physical trust given by PUF.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Cui等人（Cui et al., 2019）描述了具有设计权威、合同制造商、分销商和最终用户的区块链网络层次结构。描述了不同级别的攻击分析。他们建议使用PUF来避免FPGA克隆。对于物联网设备的分散式身份验证，PUF与区块链一起使用。信任分数根据设备性能计算，并将数值存储在数据库中。如果信任值大于或等于可接受水平，则设备开始进行通信，而不需要期望第三方开始。Rahim等人（Rahim
    et al., 2018）提出了基于传感器的可穿戴式PUF与区块链，用于决定是否接受或拒绝访问特定设备的人，而所有者不在家。对于区块链环境，PUF充当决策机构。使用哈希和MAC算法实施了挑战-响应验证程序。该设计已由Javid等人（Javaid
    et al., 2018）在Blockpro中实施。这里提出了一种基于PUF的身份验证方法，同时还结合了生物特征识别。提出了用于车辆认证的高级身份验证。PUF密钥的导出被称为无密钥签名技术。公钥可以从任何公钥密码系统中派生，如参考文献所述（Intrinsic
    ID, n.d.）。在区块链技术的密钥管理中，Om Pal等人（Pal et al., n.d.）讨论了区块链钱包，使用PUF来识别物联网设备。PUF是一种利用设备的物理特性生成所需输出的功能。使用物联网设备的物理特性生成的所需输出，生成了独特的私钥/公钥对，并且生成的对在区块链基础设施中使用。因此，物联网节点并不完全依赖于一次性号码。在参考文献（Patil,
    n.d.）中，揭露了区块链的攻击分析，并且他们解释了将PUF和哈希算法与区块链作为一些攻击的解决方案。Delgodo等人（Prada-Delgado et
    al., 2020）使用PUF作为用于加密操作的密钥生成器。该论文解释了数字信任作为PUF给出的物理信任。
- en: The remaining section of this paper is organized as follows. In Section 3, PUF
    based wallets, Bitcoin addresses, and transaction methods are proposed. In Section
    4, intrinsic PUF architecture and design were described. The experimental results
    are presented in section 5, followed by some conclusions.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的其余部分组织如下。在第3节中，提出了基于 PUF 的钱包、比特币地址和交易方法。在第4节中，描述了内在 PUF 架构和设计。实验结果在第5节中呈现，随后是一些结论。
- en: 3\. BITCOIN CONCEPTS PROPOSED USING PUF
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 基于 PUF 的比特币概念
- en: 3.1\. Bitcoin Wallets With PUFs
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1\. 具有 PUF 的比特币钱包
- en: Generally, a Bitcoin wallet consists of secret keys owned by the user. Private
    keys are generated randomly. Now the secret keys can be generated with PUF response.
    PUF can be utilized for creating Master Key. By using simple logic circuits consisting
    of Linear Feedback Shift Registers and Galois field primitives, Child keys can
    be derived from the Master key. Grandchild keys can also be produced by using
    simple logic from Child keys. The hierarchy of keys generated from the seed value
    of PUF is shown in figure 1 (a). The child keys are generated from the Master
    key, Time Stamp, and Secret information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，比特币钱包包括用户拥有的秘密密钥。私钥是随机生成的。现在秘密密钥可以使用 PUF 响应生成。 PUF 可用于创建主密钥。通过使用由线性反馈移位寄存器和伽罗华场基元组成的简单逻辑电路，可以从主密钥派生子密钥。还可以通过使用来自子密钥的简单逻辑生成子孙密钥。从
    PUF 种子值生成的密钥层次结构如图1（a）所示。子密钥是从主密钥、时间戳和秘密信息生成的。
- en: '| Figure 1\. (a) Bitcoin Wallet Keys generated from PUF master key; (b) Key
    derivation from previous Master key |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 图1\. (a) 从 PUF 主密钥生成的比特币钱包密钥；(b) 从先前主密钥派生密钥 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f01](i/ch008.f01.png) |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f01](i/ch008.f01.png) |'
- en: The response for the master key which is kept as a secret is treated as a challenge
    and the response act as the private key (α). The public key is calculated from
    this private key, from the private key, the public key is calculated as β= αxG.
    In the subsequent levels, private and public key pairs are generated in the same
    way. There may be a problem of two responses from the normal private-public key
    generation may be the same, but in PUF responses there is no chance for the generation
    of two responses is the same. It seems to be higher like the number of sands in
    grain
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将作为秘密保留的主密钥的响应视为挑战，响应作为私钥（α）。从此私钥计算出公钥，从私钥，公钥被计算为β= αxG。在后续级别中，私钥和公钥对以相同的方式生成。在正常的私钥-公钥生成中，可能会出现两个响应相同的问题，但在
    PUF 响应中，没有两个响应相同的机会。这似乎更像是颗粒中的沙的数量。
- en: 3.2\. PUF Bitcoin Addresses
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2\. PUF 比特币地址
- en: PUF Bitcoin holder has to generate Bitcoin addresses to send money to everyone.
    Actually, PUF concept works in the truth of manufacturing variations in one device
    is not equal to the manufacturing variation in another device even though the
    same input is applied. This kind of integrated circuit manufacturing variations
    can’t be cloned. PUF-Hashing is a cryptographic algorithm, which produces an entirely
    different digest even for a single bit variation of input. Moreover, the Hash
    function is an irreversible one-way function and the process of getting the input
    from output is generally a tough task. Hence the device-specific PUF module and
    input specific hash function would make an avalanche effect to distinguish each
    PUF-Bitcoin chain. Since the hardware module of PUF reduces many complex software
    execution units, processing time, power consumption, and area are minimized. Collectively,
    when the same challenge is applied for two PUF devices, the responses from those
    devices are different. Hence the keys generated from the PUF also different.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: PUF 比特币持有者必须生成比特币地址以向每个人发送货币。实际上，PUF 概念在一个设备中的制造变化的真实性与在另一个设备中的制造变化不等价，即使应用相同的输入。这种集成电路制造变化无法克隆。PUF-哈希是一个密码算法，即使是输入的单个位变化也会产生完全不同的摘要。此外，哈希函数是一个不可逆的单向函数，从输出获取输入的过程通常是一个困难的任务。因此，设备特定的
    PUF 模块和输入特定的哈希函数将产生一个雪崩效应，以区分每个 PUF-比特币链。由于 PUF 的硬件模块减少了许多复杂的软件执行单元，处理时间、功耗和面积被最小化。总的来说，当对两个
    PUF 设备应用相同的挑战时，这些设备的响应是不同的。因此，从 PUF 生成的密钥也不同。
- en: '| Figure 2\. PUF Bitcoin Address Generation |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 图 2\. PUF 比特币地址生成 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f02](i/ch008.f02.png) |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| ![图978-1-7998-7589-5.ch008.f02](i/ch008.f02.png) |'
- en: Particular challenge (Challenge may be claimed identity of a person) is applied
    to the PUF circuit; the response generated from the PUF is termed as the private
    key of the user (K[Pr]). The elliptic curve scalar multiplication process is applied
    to private key K[Pr] to generate the public key (K[Pu]= K[Pr]xG). This public
    key generation process should exhibit one-way property; (i.e) calculation of K[Pu]
    from K[Pr] should be easy and reverse calculation of K[Pr] from K[Pu] is a tough
    task.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对 PUF 电路施加特定挑战（挑战可能是一个人的身份），从 PUF 生成的响应称为用户的私钥（K[Pr]）。椭圆曲线标量乘法过程应用于私钥 K[Pr]，以生成公钥（K[Pu]=
    K[Pr]xG）。这个公钥生成过程应该表现出单向性质；（即）从 K[Pr] 计算 K[Pu] 应该很容易，而从 K[Pu] 计算 K[Pr] 是一个困难的任务。
- en: 'Then Public key Bitcoin address is derived from the public key by the following
    rules:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥比特币地址由以下规则从公钥派生：
- en: 1\. First the public key is double hashed by the Extrinsic and Intrinsic PUF
    hashing algorithm.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 首先，公钥通过外部和内部 PUF 哈希算法进行双哈希。
- en: 2\. Then Base58Check encoding operation is done to produce the encoded Public
    key hash.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 然后执行Base58Check编码操作以生成编码后的公钥哈希。
- en: The same thing can be provided in QR code form also. Actually, three one-way
    properties are created at this point. (1) PUF challenge to response (Device Specific
    level) (2) Private Key to Public key (Public key cryptographical way) (3) Public
    key to public key address (Hashing level). Hence even a small change in the transaction
    will cause a complete change in the subsequent transaction hash. Each Transaction
    hash uniquely identifies the details. The overall process that every PUF should
    do for the PUF bitcoin address is shown in figure 2\. Instead of the software
    hash function, PUF itself acts as the one-way function. A shown in Figure 2, the
    challenges are used for the derivation of private keys. Then by using the multiplication
    algorithm, the public key has been calculated. Then External and Internal PUFs
    are used as hashing elements instead of a conventional hash.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的事情也可以用QR码形式提供。实际上，在这一点上创建了三个单向属性。(1) PUF挑战到响应（设备特定级别）(2) 私钥到公钥（公钥加密方式）(3)
    公钥到公钥地址（哈希级别）。因此，即使交易中出现微小变化，也会导致后续交易哈希的完全变化。每个交易哈希都唯一标识了详细信息。PUF比特币地址每个PUF都应该执行的整个过程如图
    2 所示。PUF本身充当单向函数，而不是软件哈希函数。如图 2 所示，挑战被用于派生私钥。然后，通过使用乘法算法，计算了公钥。然后，外部和内部PUF被用作哈希元素，而不是传统的哈希。
- en: '| Figure 3\. PUF Private key to Bitcoin Addresses |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 图 3\. PUF私钥到比特币地址 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f03](i/ch008.f03.png) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f03](i/ch008.f03.png) |'
- en: The one-way property of any user address is depicted in Figure 3.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 任何用户地址的单向属性如图 3 所示。
- en: 3.3\. Bitcoin Transactions
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 3.3\. 比特币交易
- en: External PUF is considered so strong when compared with Intrinsic PUFs. All
    the Bitcoin entries are logged into ledgers. Every transaction is used for the
    creation of the next transaction. The verification is done by all the nodes in
    the network. Hence the problem of cheating and double spending of Bitcoin money
    will be avoided. Like the bank transaction, the amount reductions and increments
    are stored in the form of hashes in Bitcoin ledgers implemented with blockchain.
    The successive transactions method is shown in Figure 4.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与内在PUF相比，外部PUF被认为更强大。所有比特币条目都记录在分类帐中。每个交易都用于创建下一个交易。所有网络中的节点都进行验证。因此，避免了比特币资金的欺骗和双重支付问题。与银行交易类似，金额的减少和增加以哈希形式存储在实施了区块链的比特币分类帐中。图
    4 展示了连续交易的方法。
- en: '| Figure 4\. Blockchain Transaction |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 图 4\. 区块链交易 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f04](i/ch008.f04.png) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f04](i/ch008.f04.png) |'
- en: 3.4\. Bitcoin Transaction Lock With PUF Digital Sign
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 3.4\. 使用PUF数字签名锁定比特币交易
- en: The transaction hash is generated mainly with four elements (1) The amount for
    the transaction (2) The recipient address as output (3) the Locking script included
    with recipient address (3) Timestamp. All the things are hashed together. This
    is locked by the Digital Signature of the sender’s private key. Now in the proposed
    PUF blockchain technology, the transaction lock is performed by PUF response.
    Signature is dependent on the transaction. In the Digital Signature creation process,
    the transaction type and PUF response private key are involved. In the Digital
    Signature verification process, everyone else in the mining process can participate.
    The intended receiver only can claim for the transaction. Since nobody can replicate
    the PUF response.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 交易哈希主要由四个元素生成：(1) 交易金额 (2) 收件人地址作为输出 (3) 包括收件人地址的锁定脚本 (4) 时间戳。所有这些元素都一起进行哈希处理。这个过程由发送者的私钥的数字签名锁定。现在在提议的
    PUF 区块链技术中，交易锁定由 PUF 响应执行。签名依赖于交易。在数字签名创建过程中，涉及到交易类型和 PUF 响应私钥。在数字签名验证过程中，参与挖矿过程的其他所有人都可以参与。只有预期的接收者才能声明交易。因为没有人能够复制
    PUF 响应。
- en: 3.5 Bitcoin Ledgers With PUF
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 带 PUF 的 3.5 比特币账本
- en: All these transactions are maintained in one Bitcoin ledger as a form of hash
    codes. If Alice gets money from Jack and Bob, they are indicated in different
    hashes. Each transaction is maintained in the Bitcoin ledger ((JACK to Alice →)1021ab3582939214221
    and (Bob to Alice→) ab3582939211231) as hash functions. The hash functions are
    unique, case sensitive and punctuations sensitive. For example, if Bob sent the
    amount 5 Bitcoins (BTC) to Alice then it is recorded in the form-encoded hash
    form like “1021ab3582939214221” in the Bitcoin ledger. As already mentioned, Bitcoin
    is a decentralized ledger, anybody can mine the transaction between the users.
    The mining process is happened by additional locking and unlocking procedure.
    In the locking procedure, with the recipient address, one mathematical puzzle
    is incorporated as LOCKING SCRIPT. This script is based on the Digital Signature
    Algorithm. The mathematical answer for the puzzle is UNLOCKING SCRIPT the puzzle.
    The miner who correctly solves the puzzle can claim for this transaction. The
    sender has to pay the incentive (0.00180736 BTC) to process this transaction.
    Miner’s task is to collect new transactions on the network and to assemble these
    transactions in a particular order into a transaction block. They have to mine
    for new blocks and update the blockchain.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些交易都以哈希码的形式维护在一个比特币分类帐中。如果爱丽丝从杰克和鲍勃那里得到钱，它们将以不同的哈希值表示。每个交易都以哈希函数的形式维护在比特币分类帐中（（JACK到爱丽丝→）1021ab3582939214221和（鲍勃到爱丽丝→）ab3582939211231）。哈希函数是唯一的，区分大小写和标点符号敏感的。例如，如果鲍勃向爱丽丝发送了5比特币（BTC），那么它将以表单编码的哈希形式记录在比特币分类帐中，如“1021ab3582939214221”。正如前面提到的，比特币是一个去中心化的分类帐，任何人都可以挖掘用户之间的交易。挖掘过程是通过附加的锁定和解锁过程进行的。在锁定过程中，将一个数学难题与接收者地址合并为锁定脚本。这个脚本是基于数字签名算法的。这个难题的数学答案是解锁脚本。正确解答难题的挖掘者可以要求这笔交易。发送者必须支付激励（0.00180736
    BTC）来处理此交易。挖掘者的任务是在网络上收集新的交易，并将这些交易按照特定顺序组装成一个交易块。他们必须挖掘新的区块并更新区块链。
- en: 4\. TETRA HEDRAL OSCILLATOR AS INTRINSIC PUF
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. **四面体振荡器作为内在PUF**
- en: Two kinds of PUF structures have been mentioned in this chapter for Bitcoin
    address creation. In this chapter, Intrinsic PUF structure only concentrated.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了比特币地址创建的两种PUF结构。在本章中，只集中讨论了内在PUF结构。
- en: 4.1\. Tetra Loop Architecture and Behavior
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 4.1\. 四面体环架构与行为
- en: 'The proposed Intrinsic PUF is named as tetrahedral oscillator PUF. The tetrahedral
    oscillator is used as the racing path of logic gates elements. The random and
    unique pattern creation for one person may utilize different frequencies for each
    person. The tetrahedral oscillator also utilizes the varying frequency as the
    person varying phenomenon. The same kind of PUF is used at two different situations
    of Bitcoin address generation but with different frequencies. The tetraloop is
    composed of three loops: all loops are made up of simple NOT gates. The first
    loop consists of four NOT gates and the remaining two loops contain two NOT gates.
    The oscillatory metastability of logic gates can be utilized for random number
    generation. In this article, the signal path propagation creates the metastability
    as well as the unique behavior. Figure 5 shows the loops of the tetrahedral oscillator
    structure with three loops made up of 8 inverters.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 所提出的内在 PUF 被命名为四面体振荡器 PUF。四面体振荡器被用作逻辑门元件的竞赛路径。一个人的随机和独特的模式创建可能会利用不同的频率。四面体振荡器还利用了频率变化作为人的变化现象。相同类型的
    PUF 用于比特币地址生成的两种不同情况，但使用不同的频率。四环由三个循环组成：所有循环都由简单的 NOT 门组成。第一个循环包含四个 NOT 门，其余两个循环包含两个
    NOT 门。逻辑门的振荡亚稳态可以用于随机数生成。在本文中，信号路径传播产生了亚稳态以及独特的行为。图 5 显示了由 8 个反相器组成的三个循环的四面体振荡器结构。
- en: '| Figure 5\. Tetra hedral oscillator PUF |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 图 5\. 四面体振荡器 PUF |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f05](i/ch008.f05.png) |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| ![图5. 四面体振荡器 PUF](i/ch008.f05.png) |'
- en: The metastability condition (three loops signal) causes transitory oscillations
    in the full circuit. This includes jitter conditions in the loop. The traditional
    ring oscillator loop contains several cascaded inverters. But in the tetrahedral
    oscillator structure proposed by D.Liu et.al (Liu et al., 2016) contains, nested
    NOT gate loops with each other, which makes the circuit full of wired-OR logic
    and signal competitions, resulting in a logic mess and bringing about metastability.
    Second, the perturbation of noise makes the oscillation to be aroused easier.
    Furthermore, due to the conflicts among diverse loops, large jitter can be achieved
    to enhance the randomness of output bits. As illustrated in Figure 5, the number
    of oscillations is not specific. Also, the final logic levels can differ, (‘0’
    or ‘1’), which introduces unpredictability.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 亚稳态条件（三个循环信号）导致整个电路中的瞬态振荡。这包括循环中的抖动条件。传统的环形振荡器环包含多个级联反相器。但在由 D.Liu 等人提出的四面体振荡器结构中，嵌套的
    NOT 门循环彼此之间，使电路充满了有线 OR 逻辑和信号竞争，导致逻辑混乱并产生亚稳态。其次，噪声的扰动使得振荡更容易被激发。此外，由于不同循环之间的冲突，可以实现大的抖动以增强输出位的随机性。正如图
    5 所示，振荡的次数不是特定的。而且，最终的逻辑电平可以不同（'0' 或 '1'），这引入了不可预测性。
- en: 4.2\. Tetrahedral Oscillator PUF
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 4.2\. 四面体振荡器 PUF
- en: The way, how this tetrahedral oscillator is modified to create the PUF structure
    is shown in Figure 6\. The switch with a particular frequency for a person is
    running to decide whether upper or lower oscillator binary bits have to be accumulated
    in the output of this module. Claimed identity from the user decides that, which
    oscillator has to give the output at the respective time. Switch with timer operates
    with 8 ms, to the flow of 8 bits at a time. This design depends on the user’s
    choice.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如何修改四面体振荡器以创建 PUF 结构的方式在图 6 中显示。以某个特定频率运行的开关决定了上下振荡器的二进制位在此模块输出中是否累积。用户声称的身份决定了在相应时间，哪个振荡器必须给出输出。定时器开关以
    8 毫秒的速度运行，每次流出 8 位。这个设计取决于用户的选择。
- en: '| Figure 6\. Tetrahedral oscillator PUF |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 图 6\. 四面体振荡器 PUF |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f06](i/ch008.f06.png) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| ![图978-1-7998-7589-5.ch008.f06](i/ch008.f06.png) |'
- en: 5\. RESULTS AND DISCUSSION
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 结果与讨论
- en: This chapter considers SRAM PUF as extrinsic PUF and tetrahedral oscillator
    PUF. The concepts are mainly focusing on the newly introduced tetrahedral oscillator
    PUF. On the implementation side, for Blockchain implementations, the concepts
    from the reference (Block Chain Demo, n.d.) have been taken as a model. Instead
    of Nonce, the PUF response has been taken. Both distributed and single blockchain-based
    models have been developed. SHA-256 hash function is used. Base56Encoding scheme
    is utilized in this work.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将 SRAM PUF 视为外部 PUF 和四面体振荡器 PUF。概念主要集中在新引入的四面体振荡器 PUF 上。在实施方面，对于区块链实现，从参考资料（区块链演示，无日期）中的概念被作为模型采用。取代
    Nonce，采用了 PUF 响应。已开发了分布式和单一基于区块链的模型。使用 SHA-256 哈希函数。Base56Encoding 方案在此工作中被利用。
- en: '| Figure 7\. Single blockchain address generation |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 图 7\. 单一区块链地址生成 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f07](i/ch008.f07.png) |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| ![图978-1-7998-7589-5.ch008.f07](i/ch008.f07.png) |'
- en: For this work, a simple PUF prototype has been generated with the external PUF
    and intrinsic PUF circuits. Combinedly the random numbers from the package have
    been taken and given in place of a random number generator to generate the bitcoin
    address. PUF modules are developed with 128 bits length.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这项工作，一个简单的 PUF 原型已经生成，其中包括外部 PUF 和内部 PUF 电路。从套件中取出的随机数已经取代随机数生成器放在了生成比特币地址的位置。PUF
    模块的长度为 128 位。
- en: Individually, tetrahedral oscillator PUF response is constructed from two tetrahedral
    oscillators. The individual oscillator output is shown in figure 8\. The upper
    and lower oscillators are just differing in some time duration. The random oscillated
    waveform is originally a sine wave. Sine waveform is converted to square waveform
    first, then it is encoded to a binary number. It can be extended, by increasing
    the binary accumulator size and encoding size. 64 bits challenge is given to get
    the response. After collecting a sufficient number of binary numbers, PUF performance
    metrics have been analyzed. The details about the PUF structure is given in Table
    1.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 个别地，四面体振荡器 PUF 响应是由两个四面体振荡器构成的。各个振荡器的输出如图 8 所示。上部和下部振荡器仅在一些时间持续上有所不同。随机振荡的波形最初是正弦波。正弦波形首先转换为方波形，然后编码为二进制数。可以通过增加二进制累加器大小和编码大小来扩展它。给出
    64 位挑战以获得响应。收集足够数量的二进制数后，对 PUF 性能指标进行了分析。有关 PUF 结构的详细信息请参见表 1。
- en: '| Figure 8\. Upper and Lower Oscillator outputs |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 图 8\. 上部和下部振荡器输出 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f08](i/ch008.f08.png) |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f08](i/ch008.f08.png) |'
- en: Table 1\. PUF performance details
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1\. PUF 性能细节
- en: '| PUF Metrics and Details | Calculated Values |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| PUF 度量和细节 | 计算值 |'
- en: '| PUF type | Intrinsic Tetrahedral Oscillator PUF |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| PUF 类型 | 内在四面体振荡器 PUF |'
- en: '| Number of oscillators | 2 with each 3 meshes |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 振荡器数量 | 每个 3 个网格的 2 个 |'
- en: '| No of Response bits generated | 128 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 生成的响应位数 | 128 |'
- en: '| No of Challenge bits | 64 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 挑战位数 | 64 |'
- en: '| Uniqueness | 51.07% |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 独特性 | 51.07% |'
- en: '| Reliability | 99% |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 可靠性 | 99% |'
- en: '| Randomness | 83% |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 随机性 | 83% |'
- en: Uniqueness is a measure that every PUF should possesses its characteristics
    which are explained by Maiti et al. (Maiti et al., 2010) . It is different from
    other board PUF responses.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 独特性是每个 PUF 都应具有的特性的一种度量，由 Maiti 等人解释（Maiti 等人，2010年）。它不同于其他板的 PUF 响应。
- en: '![Mathtype978-1-7998-7589-5.ch008.m01](i/ch008.m01.svg) (1)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![Mathtype978-1-7998-7589-5.ch008.m01](i/ch008.m01.svg) (1)'
- en: It is an estimate of the inter-chip variation in terms of the PUF responses.
    In this work 9 FPGA boards were taken, hence k=9 here.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在 PUF 响应方面芯片间变异的估计。在这项工作中，取了 9 块 FPGA 板，因此这里的 k=9。
- en: Reliability is a measure that how efficiently the chip is reproducing the same
    response under different environmental situations (Different temperatures, Different
    voltages, etc.). For doing this, the PUF response (Ri) under normal temperature
    is determined. At different temperatures, the same instance PUF response (Ri’)
    is calculated up to m times. Hamming distance between the responses is calculated
    using the formula
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性是一个衡量芯片在不同环境下（不同温度、不同电压等）如何有效地产生相同响应的指标。为了做到这一点，确定了在正常温度下的 PUF 响应 (Ri)。在不同温度下，计算相同实例的
    PUF 响应 (Ri')，共计 m 次。使用以下公式计算响应之间的汉明距离
- en: '![Mathtype978-1-7998-7589-5.ch008.m02](i/ch008.m02.svg) (2)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Mathtype978-1-7998-7589-5.ch008.m02](i/ch008.m02.svg) (2)'
- en: Then the reliability is calculated by
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后通过以下公式计算可靠性
- en: Reliability =100% - HD[INTRA] . (3)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性 = 100% - HD[INTRA] . (3)
- en: HD [INTRA] indicates the average number of unreliable/noisy PUF response bits.
    The value of HD[INTRA] should be low, and the value of reliability should be high
    for a particular instance of the chip. In addition to that, PUF responses should
    be easy to find, and difficult to predict the challenge and the way to prove the
    device. The probability of binary 1’s and 0’s should be equally distributed. The
    histogram metrics are found out by the methods given in (Hori et al., 2010) for
    this tetrahedral oscillator PUF is calculated and shown in figure 9,10,11.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: HD [INTRA] 表示不可靠/噪声 PUF 响应位的平均数量。HD[INTRA] 的值应该低，并且在特定芯片实例中可靠性的值应该高。除此之外，PUF
    响应应该容易找到，且难以预测挑战和证明设备的方法。二进制 1 和 0 的概率应该是均匀分布的。直角四面体振荡器 PUF 的直方图度量是通过 (Hori 等人，2010)
    中给出的方法计算并显示在图 9,10,11 中。
- en: '| Figure 9\. Randomness of the produced binary bits |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 图 9\. 生成的二进制位的随机性 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f09](i/ch008.f09.png) |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f09](i/ch008.f09.png) |'
- en: '| Figure 10\. Histogram of Probability of binary ones to the total bits |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 图 10\. 二进制位的二进制 1 的概率直方图 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f10](i/ch008.f10.png) |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f10](i/ch008.f10.png) |'
- en: '| Figure 11\. Histogram of Steadiness of the particular bit |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 图 11\. 特定位的稳定性直方图 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f11](i/ch008.f11.png) |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f11](i/ch008.f11.png) |'
- en: By introducing two Intrinsic PUF circuits and one external PUF circuit, the
    correct claimed identities and imposter identities are classified separately with
    a large distance. There is less chance for collision with True Positives. Figure
    12 shows the separation of genuine and imposter distributions.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 引入两个内在 PUF 电路和一个外部 PUF 电路，正确声明的身份和冒名顶替的身份被分开分类，并且彼此之间存在较大的距离。真正阳性的碰撞几率较低。图 12
    显示了真实和冒名顶替者分布的分离。
- en: '| Figure 12\. Genuine and imposter distribution graph |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 图 12\. 真实和冒名顶替分布图 |'
- en: '| ![Figure978-1-7998-7589-5.ch008.f12](i/ch008.f12.png) |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| ![Figure978-1-7998-7589-5.ch008.f12](i/ch008.f12.png) |'
- en: 6\. CONCLUSION
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 结论
- en: Blockchain becomes the most applicable area for decentralized ledger-based transactions.
    In IoT and sensitive money transactions conditions, Proof of Device authentication
    can be claimed by this kind of PUF based hash generating functionalities. This
    hardware-based Bitcoin address generation gives accurate device authentication
    and respective person authentication. Proof of Work for a particular person can
    also be done. PUF generated numbers were tough for machine learning attacks. Hence
    it is stronger against side-channel attacks. In the future, for practical applications,
    specific timing constraints have to be developed for particular applications.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链已成为去中心化账本交易最适用的领域。在物联网和敏感货币交易条件下，可以通过这种基于PUF的哈希生成功能声明设备身份验证。这种硬件基于比特币地址的生成可以实现准确的设备身份验证和相应的人员身份验证。也可以对特定人员进行工作证明。PUF生成的数字很难受到机器学习攻击。因此，它对抗侧信道攻击更为强大。未来，对于实际应用，必须为特定应用程序开发特定的时间约束。
- en: REFERENCES
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '15Block Chain Demo. (n.d.). Anders Brown. Retrieved from: https://andersbrownworth.com/blockchain/block'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 15区块链演示。 （无日期）。Anders Brown。检索自：https://andersbrownworth.com/blockchain/block
- en: '7Cui, P., Dixon, J., Guin, U., & Dimase, D. (2019). A Blockchain-Based Framework
    for Supply Chain Provenance. IEEE Access: Practical Innovations, Open Solutions
    , 7, 157113–157125\. doi:10.1109/ACCESS.2019.2949951'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 7崔P.，迪克森J.，吉恩U.，迪马斯D.（2019年）。供应链溯源的基于区块链的框架。IEEE Access：实用创新，开放解决方案，7，157113-157125。doi:10.1109/ACCESS.2019.2949951
- en: 6Hori, Y., Yoshida, T., Katashita, T., & Satoh, A. (2010). Quantitative and
    Statistical Performance Evaluation of Arbiter Physical Unclonable Functions on
    FPGAs . ReConFig , 2010, 298–303\. doi:10.1109/ReConFig.2010.24
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 6堀Y.，吉田T.，片下T.，SatohA.（2010年）。基于FPGA的仲裁器物理不可克隆功能的定量和统计性能评估。ReConFig，2010，298-303。doi:10.1109/ReConFig.2010.24
- en: 11Intrinsic ID. (n.d.). https://www.intrinsic-id.com/wp-content/uploads/2017/05/gt_KSI-PUF-web-1611.pdf
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 11Intrinsic ID。 （无日期）。https://www.intrinsic-id.com/wp-content/uploads/2017/05/gt_KSI-PUF-web-1611.pdf
- en: '10JavaidU.AmanM. N.SikdarB. (2018). Blockpro: Blockchain based data provenance
    and integrity for secure IOT environments. In Proceedings of the 1^(st) Workshop
    on Blockchain-enabled Networked Sensor Systems (pp. 13-18). 10.1145/3282278.3282281'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 10JavaidU.AmanM. N.SikdarB. (2018). Blockpro：基于区块链的数据溯源和完整性，用于安全的物联网环境。在第1届区块链启用的网络传感器系统研讨会论文集中（第13-18页）。10.1145/3282278.3282281
- en: 4Liu, D., Liu, Z., Li, L., & Zou, X. (2016). A Low-Cost Low-Power Ring Oscillator-Based
    Truly Random Number Generator for Hash on Smart Cards . IEEE Transactions on Circuits
    and Wystems. II, Express Briefs , 63(6), 608–612\. doi:10.1109/TCSII.2016.2530800
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 4刘D.，刘Z.，李L.，邹X.（2016年）。基于低功耗低成本环振荡器的智能卡上真随机数生成器。IEEE Transactions on Circuits
    and Wystems. II，Express Briefs，63（6），608-612。doi:10.1109/TCSII.2016.2530800
- en: 5Maiti, A., Casarona, J., McHale, L., & Schaumont, P. (2010). A large scale
    characterization of RO-PUF. Hardware-Oriented Security and Trust (HOST), IEEE
    International Symposium, 94–99.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 5迈蒂A.，卡萨罗纳J.，麦克黑尔L.，施奥蒙特P.（2010年）。RO-PUF的大规模特性化。硬件导向的安全与信任（HOST），IEEE国际研讨会，94-99。
- en: '3Mohanty, Yanambaka, Kougianos, & Puthal. (n.d.). PUFchain: Hardware-Assisted
    Blockchain for Sustainable Simultaneous Device and Data Security in the Internet
    of Everything (IoE). IEEE Consumer Electronics Magazine, 9(2), 8-16.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '3Mohanty, Yanambaka, Kougianos, & Puthal. (n.d.). **PUFchain: 硬件辅助区块链，用于互联万物（IoE）中的可持续同时设备和数据安全**.
    IEEE Consumer Electronics Magazine, 9(2), 8-16.'
- en: 2Muthukumar, Sivasankari, & Rampriya. (2019). Anti-aging controllable true random
    number generator for secured AES-based crypto system. International Journal of
    Systems, Control and Communications, 10(4), 338 – 355.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 2Muthukumar, Sivasankari, & Rampriya. (2019). **用于安全AES加密系统的抗衰老可控真随机数生成器**.
    International Journal of Systems, Control and Communications, 10(4), 338 – 355.
- en: '1Nakamoto, S. (2008). Bitcoin: A Peer-to-Peer Electronic Cash System. White
    paper.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 1Nakamoto, S. (2008). **比特币：点对点的电子现金系统**. White paper.
- en: 12Pal, Alam, Thakur, & Singh. (n.d.). Key management for blockchain technology.
    ICT Express.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 12Pal, Alam, Thakur, & Singh. (n.d.). **区块链技术的密钥管理**. ICT Express.
- en: 13Patil. (n.d.). Efficient privacy-preserving authentication protocol using
    PUFs with blockchain smart contracts. Academic Press.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 13Patil. (n.d.). **使用区块链智能合约和PUFs的高效隐私保护认证协议**. Academic Press.
- en: 14Prada-Delgado, M. Á., Baturone, I., Dittmann, G., Jelitto, J., & Kind, A.
    (2020). PUF-derived IoT identities in a zero-knowledge protocol for blockchain.
    Internet of Things, 9.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 14Prada-Delgado, M. Á., Baturone, I., Dittmann, G., Jelitto, J., & Kind, A.
    (2020). **PUF衍生的物联网身份在区块链的零知识协议中**. Internet of Things, 9.
- en: 9RahimK.TahirH.IkramN. (2018). Sensor based puf iot authentication model for
    a smart home with private blockchain. In 2018 International Conference on Applied
    and Engineering Mathematics (ICAEM) (pp. 102-108). IEEE. 10.1109/ICAEM.2018.8536295
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 9RahimK.TahirH.IkramN. (2018). **基于传感器的PUF物联网认证模型，用于带私有区块链的智能家居**. 在2018年国际应用与工程数学会议上
    (ICAEM) (pp. 102-108). IEEE. 10.1109/ICAEM.2018.8536295
- en: 8Venkatesan, Srivastava, & Shukla. (n.d.). Decentralized authentication of IoT
    devices using blockchain. Academic Press.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 8Venkatesan, Srivastava, & Shukla. (n.d.). **使用区块链的物联网设备的去中心化认证**. Academic
    Press.
