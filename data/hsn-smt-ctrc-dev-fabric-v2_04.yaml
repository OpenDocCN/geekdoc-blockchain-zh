- en: Chapter 2\. Overview of Hyperledger Projects and Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 章。 Hyperledger 项目和工具概述
- en: The previous chapter introduced you to the concept of blockchain, its main platforms,
    and terminology. We started with a discussion on the origin of blockchain, and
    then discussed several of its general components (including shared ledger, cryptography,
    consensus, and smart contract components), followed by its architecture and supporting
    technology. This chapter covers the Hyperledger projects and tools, and [Chapter 3](ch03.xhtml#hyperledger_fabric_architecture_and_com)
    covers the Hyperledger Fabric architecture and components. Collectively, [Chapter 1](ch01.xhtml#fundamental_concepts_of_blockchain)
    through [Chapter 3](ch03.xhtml#hyperledger_fabric_architecture_and_com) will provide
    you with the necessary knowledge for [Part III](part03.xhtml#developing_smart_contracts_with_hyperle),
    which delves into smart contract development with Hyperledger Fabric.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 前一章向您介绍了区块链的概念、其主要平台和术语。我们从讨论区块链的起源开始，然后讨论了其几个通用组件（包括共享账本、密码学、共识和智能合约组件），接着是其架构和支持技术。本章涵盖了
    Hyperledger 项目和工具，[第 3 章](ch03.xhtml#hyperledger_fabric_architecture_and_com)
    则介绍了 Hyperledger Fabric 的架构和组件。总体而言，[第 1 章](ch01.xhtml#fundamental_concepts_of_blockchain)
    至 [第 3 章](ch03.xhtml#hyperledger_fabric_architecture_and_com) 将为您提供 [第 III 部分](part03.xhtml#developing_smart_contracts_with_hyperle)
    所需的知识，该部分深入研究了使用 Hyperledger Fabric 进行智能合约开发。
- en: This chapter mainly targets those who are relatively new to Hyperledger. The
    primary goal is to explore projects and tools that are developed under Hyperledger
    and to equip you with the necessary knowledge and important technical designs
    of the Hyperledger ecosystem so we can then apply these technologies through real-world
    use cases. The materials included in this chapter will help you understand Hyperledger
    as a whole, and you can use this high-level overview as a guideline for making
    the best of each Hyperledger project.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要针对那些对 Hyperledger 相对新手的人。主要目标是探索在 Hyperledger 下开发的项目和工具，并为您提供 Hyperledger
    生态系统的必要知识和重要技术设计，以便我们可以通过真实用例应用这些技术。本章包含的材料将帮助您全面了解 Hyperledger，并且您可以将此高层概述用作利用每个
    Hyperledger 项目的最佳指南。
- en: As a reminder, to design and deploy Hyperledger Fabric blockchain applications,
    you need not thoroughly understand all tools and projects discussed here. Just
    use this chapter as your reference for better navigating through the Hyperledger
    projects. Except for Hyperledger Fabric and a few other projects that we cover
    in depth (Hyperledger Aries, Hyperledger Grid, Hyperledger Avalon, and Hyperledger
    Besu), this chapter should not be considered a definitive guide for all Hyperledger
    projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作为提醒，要设计和部署 Hyperledger Fabric 区块链应用程序，您无需彻底了解此处讨论的所有工具和项目。只需将本章用作您在 Hyperledger
    项目中更好导航的参考。除了我们深入介绍的 Hyperledger Fabric 和其他一些项目（Hyperledger Aries、Hyperledger
    Grid、Hyperledger Avalon 和 Hyperledger Besu）之外，本章不应被视为所有 Hyperledger 项目的权威指南。
- en: For those who already have a good knowledge of the Hyperledger ecosystem, this
    chapter would be a good “scratch the surface” review. Or, if you prefer, feel
    free to jump to the next chapter to explore the Hyperledger Fabric project.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些已经对超级账本生态系统有很好了解的人来说，本章将是一个很好的“刮一下表面”的复习。或者，如果你愿意，可以直接跳到下一章，探索超级账本 Fabric
    项目。
- en: Although we briefly reviewed the history behind blockchain technology in the
    preceding chapter, in this chapter we will slightly expand on the evolution and
    phases of blockchain before diving into the Hyperledger family architecture and
    ecosystem.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们在前一章简要回顾了区块链技术背后的历史，但在这一章中，我们将稍微扩展一下区块链的演进和阶段，然后深入研究超级账本家族的架构和生态系统。
- en: 'This chapter will help you understand the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助您了解以下内容：
- en: The four phases in the evolution of blockchain technology
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链技术演进的四个阶段
- en: The architecture and design philosophy behind the Hyperledger family
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超级账本家族背后的架构和设计哲学
- en: Hyperledger distributed ledger technologies like Indy and Sawtooth
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超级账本分布式分类帐技术，如 Indy 和 Sawtooth
- en: Available tools in the Hyperledger family
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超级账本家族中的可用工具
- en: Existing libraries in the Hyperledger family
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超级账本家族中的现有库
- en: Evolution and Phases of Blockchain Technology
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链技术的演进和阶段
- en: Since its inception, blockchain technology has incorporated ideas and components
    like cryptography that are gaining tremendous popularity among businesses. Also,
    the demand for secure, scalable, and reliable automation practices and solutions
    are among the major challenges that emerging technologies such as blockchain have
    to address. Indeed, the traditional business operations in the 21st century are
    entering into a new phase of automation at the enterprise level. Moreover, at
    the global level, emerging markets are keen on adopting technologies that have
    the potential for self-regulation. As a result, the advent of blockchain and its
    evolution play a prominent role in shaping the landscape of self-governed technologies
    and automation in the near future.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 自从诞生以来，区块链技术就吸收了诸如加密之类的在企业中日益流行的想法和组件。此外，对于安全、可扩展和可靠的自动化实践和解决方案的需求是新兴技术（如区块链）必须解决的主要挑战之一。事实上，21世纪传统的企业业务运营正在进入一个新的自动化阶段。此外，全球范围内，新兴市场渴望采用具有自我调节潜力的技术。因此，区块链的出现及其演进在未来自我治理技术和自动化格局的形成中发挥着重要作用。
- en: One way to view the advances of blockchain technology is to categorize its evolution
    into four generations. Let’s briefly survey blockchain generations from 1.0 to
    4.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查看区块链技术进步的一种方法是将其演进划分为四代。让我们简要地了解一下从 1.0 到 4.0 的区块链代的情况。
- en: Blockchain 1.0
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链 1.0
- en: The initial generation of blockchain came into existence with the advent of
    cryptocurrencies like Bitcoin. The role of blockchain technology was to improve
    the existing monetary system by allowing people to send transactions relying on
    cryptography instead of banks. During this generation of blockchain, the network
    was peer-to-peer, decentralized, anonymous, and at the same time transparent.
    However, as discussed in [Chapter 1](ch01.xhtml#fundamental_concepts_of_blockchain),
    its major drawback was its use of the proof-of-work algorithm, which required
    lots of mining.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的区块链一代诞生于像比特币这样的加密货币的出现。区块链技术的作用是通过允许人们依赖加密学而不是银行发送交易来改进现有的货币系统。在这一代区块链中，网络是点对点的、去中心化的、匿名的，同时又是透明的。然而，正如[第一章](ch01.xhtml#fundamental_concepts_of_blockchain)中所讨论的，它的主要缺点是其使用的工作证明算法，这需要大量的挖掘。
- en: Blockchain 2.0
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链 2.0
- en: 'Blockchain technology turned a corner around 2015 when tech innovators started
    exploring its trustless feature in addition to monetary transactions. This led
    to the creation of the Ethereum platform, which brought about two major innovations:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术在 2015 年左右发生了转折，当技术创新者开始探索其无信任特性时，除了货币交易。这导致了以太坊平台的创建，带来了两个主要的创新：
- en: The use of other digital assets, besides cryptocurrency, as a basis for other
    decentralized projects.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用其他数字资产作为其他去中心化项目的基础，除了加密货币。
- en: The advent of smart contracts (as discussed in [Chapter 1](ch01.xhtml#fundamental_concepts_of_blockchain))
    added security to transactions by automatically controlling the execution of all
    conditions by all actors while automating the transaction processing for all actors
    in a blockchain.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约的出现（如[第一章](ch01.xhtml#fundamental_concepts_of_blockchain)中所讨论的）通过自动控制所有参与者的所有条件的执行来增加交易的安全性，同时自动化区块链中所有参与者的交易处理。
- en: Blockchain 3.0
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链 3.0
- en: The third generation of blockchain focused on improving its flaws and deficiencies
    while expanding its use cases. For instance, proof-of-stake consensus replaced
    proof of work. Other features and functionalities were added to boost blockchain
    performance and make it adoptable by different industries. For example, blockchain
    architectures such as the consortium or cross-chain transaction processing were
    invented. Likewise, other changes regarding regulatory compliance and governance,
    privacy, and smart contracts were introduced.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第三代区块链致力于改进其缺陷和不足之处，同时扩展其用例。例如，权益证明共识取代了工作证明。其他功能和功能被添加以提高区块链性能，并使其可被不同行业采用。例如，发明了联盟或跨链交易处理等区块链架构。同样，还引入了其他关于监管合规性和治理、隐私和智能合约的变化。
- en: Blockchain 4.0
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区块链 4.0
- en: Currently, professionals don’t agree on the exact features or direction that
    fourth-generation blockchain technology will take. Some believe that it will merge
    with other disruptive technologies like the Internet of Things or AI. Others think
    it should follow the preceding generations by improving its features to make it
    more efficient, scalable, and accessible to the masses.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，专业人士对第四代区块链技术的确切特征或发展方向尚无一致看法。一些人认为它将与其他颠覆性技术如物联网或人工智能融合。而另一些人认为它应该沿袭前几代的做法，通过改进其特性使其更高效、可扩展并且更易于被广泛采用。
- en: Throughout its generations, blockchain has come a long way to establish itself
    as an emerging technology that transforms many traditional business operations.
    As such, a good understanding of previous generations or blockchain history will
    help us foresee its vision and future. Eventually, the technology will find its
    feet among enterprise application development projects in both the private and
    public sectors.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在发展过程中，区块链已经走过了一段很长的路程，成为了一种正在改变许多传统业务操作的新兴技术。因此，对先前几代的理解或区块链历史的了解将有助于我们预见其愿景和未来。最终，这项技术将在私营和公共领域的企业应用开发项目中找到自己的位置。
- en: 'The latest trends in blockchain are more often reflected in private blockchain
    projects, also known as distributed ledger technology. These DLT projects are
    usually based on three common use cases:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的最新趋势更多地体现在私人区块链项目中，也被称为分布式账本技术。这些DLT项目通常基于三种常见用例：
- en: Traceability of assets
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 资产的可追溯性
- en: These projects leave a notarized record within the DLT system that makes this
    information backed up and immutable, to ensure that data that will later be accessible.
    This data can be displayed publicly to ensure that certain sensitive data flows
    in; until now, little transparency existed. These projects also can serve to exploit
    data internally and improve internal processes in companies. In the end, what
    you want is to record a series of events that occurred in a physical or digital
    asset.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项目在分布式账本技术（DLT）系统内留下公证记录，使得这些信息备份且不可更改，以确保稍后可以访问的数据。这些数据可以公开展示，以确保某些敏感数据流入；直到现在，很少有透明度存在。这些项目还可以用于内部利用数据并改善公司内部流程。最终，你所希望的是记录下发生在实物或数字资产上的一系列事件。
- en: Digital identity
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 数字身份
- en: This use case is subject to the regulations of each country or region. Many
    companies and governments want to digitize user credentials to enhance user data
    security and privacy. This use case has many legal components, and there are different
    ways to approach it. However, digital identity solutions should be implemented
    on a private blockchain network using a DLT like Hyperledger Fabric. An increasing
    number of companies have implementations of self-sovereign digital identities
    seeking to be accepted by regulation, either by hybridizing existing solutions
    based on digital certificates or using already developed identity standards. This
    will be one of the main projects on blockchain.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个用例受每个国家或地区的法规约束。许多公司和政府希望数字化用户凭证，以增强用户数据安全性和隐私保护。这个用例涉及许多法律组成部分，并且有不同的方法来解决它。然而，数字身份解决方案应该在使用像超级账本（Hyperledger
    Fabric）这样的 DLT 的私有区块链网络上实现。越来越多的公司都在实施自主数字身份，希望通过混合基于数字证书的现有解决方案或使用已经开发的身份标准来获得法规的接受。这将是区块链上的主要项目之一。
- en: Digital currency
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 数字货币
- en: Digital currency has been one of the main use cases since Ethereum appeared.
    It is still a project that continues to undergo improvements and evolutions. Companies
    such as Facebook and Telegram have tried to build their own new payment systems
    based on digital currency. The end of this new type of currency has not been reached
    either; we will continue to see new implementations, since both banks and governments
    will surely end up using this technology for monetary purposes.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 自以太坊出现以来，数字货币一直是主要的用例之一。它仍然是一个不断改进和演变的项目。Facebook 和 Telegram 等公司尝试构建基于数字货币的全新支付系统。这种新型货币的终结还没有到来；我们将继续看到新的实施，因为银行和政府肯定会最终利用这项技术进行货币目的的使用。
- en: Hyperledger Family, Architecture, and Ecosystem
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超级账本家族、架构和生态系统
- en: As we covered in the previous chapter, the Hyperledger project was initiated
    by the nonprofit Linux Foundation as a collaborative (open source) platform for
    designing and building distributed ledger applications. The platform later gained
    momentum and popularity as large private companies such as IBM and Accenture endorsed
    and supported its mission.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中介绍的，超级账本项目是由非营利性的 Linux 基金会发起的，作为一个协作（开源）平台，用于设计和构建分布式账本应用程序。后来，该平台在大型私营公司（如
    IBM 和 Accenture）的支持和认可下逐渐赢得了动力和声誉。
- en: Hyperledger’s adoption and popularity among private businesses stems from several
    factors. The most notable are its well-designed architecture for private transactions
    and its multiledger structure for handling large-scale datasets. With Ethereum,
    for instance, each node on the network holds the same data, but under Hyperledger
    Fabric, nodes may carry different data, depending on the nature of the transaction
    and business requirements. Also, Hyperledger Fabric allows private data sharing
    among a subset of network members, which is well-suited for enterprise business
    applications. As of this writing, some Hyperledger tools and frameworks are at
    the incubation stage, whereas others are active.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 在私营企业中的采用和受欢迎程度源于几个因素。最显著的是其针对私有交易设计良好的架构以及处理大规模数据集的多账本结构。例如，在以太坊中，网络上的每个节点都持有相同的数据，但在
    Hyperledger Fabric 中，节点可能携带不同的数据，这取决于交易的性质和业务要求。此外，Hyperledger Fabric 允许网络成员子集之间共享私有数据，这非常适合企业业务应用。截至目前，一些
    Hyperledger 工具和框架处于孵化阶段，而另一些则已经处于活跃状态。
- en: 'Hyperledger comes with 16 projects classified into four categories: distributed
    ledger, tools, libraries, and domain-specific projects. We review these 16 projects
    in more detail later in this chapter. For a comprehensive review of individual
    projects and their latest updates or news, visit the Hyperledger project website
    at [www.hyperledger.org](http://www.hyperledger.org).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 包含 16 个项目，分为四个类别：分布式账本、工具、库和领域特定项目。我们稍后在本章中详细审查这 16 个项目。要全面了解各个项目及其最新更新或新闻，请访问
    Hyperledger 项目网站 [www.hyperledger.org](http://www.hyperledger.org)。
- en: The Hyperledger Design Philosophy
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hyperledger 的设计理念
- en: Before we discuss how the Hyperledger framework works, it would be good to have
    a basic understanding of the Hyperledger philosophy. Projects under the Hyperledger
    umbrella have incorporated several principles that are essential for meeting the
    multitude of business requirements.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论 Hyperledger 框架如何工作之前，了解 Hyperledger 的基本理念会很有帮助。Hyperledger 项目已经融合了几个原则，这些原则对满足多样化的业务需求至关重要。
- en: Modular architecture
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模块化架构
- en: Blockchain applications built with Hyperledger use multiple components such
    as policies, consensus, and chaincodes. This modular architecture allows these
    components to communicate with one another efficiently, while making it easy for
    the developer community to maintain each component independently.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Hyperledger 构建的区块链应用程序使用多个组件，如策略、共识和链码。这种模块化架构允许这些组件之间有效地通信，同时使开发者社区能够独立维护每个组件。
- en: Ultra secure
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 极其安全
- en: Since data stored on a blockchain application is immutable, it requires a higher
    level of security compared with other applications. Also, the enterprise nature
    of Hyperledger, where multiple ledgers can be stored in its blockchain nodes,
    requires an ultra level of security. Therefore, Hyperledger was designed and developed
    with such security considerations in place since its inception. Indeed, the expert
    team of Hyperledger security regularly reviews and audits security protocols and
    procedures to meet the ever-changing requirements of the cybersecurity landscape.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于存储在区块链应用程序上的数据是不可变的，因此与其他应用程序相比，它需要更高级别的安全性。此外，Hyperledger 的企业性质，其中可以在其区块链节点中存储多个分类帐，要求具有超高级别的安全性。因此，Hyperledger
    从一开始就考虑了这些安全性方面的问题进行设计和开发。事实上，Hyperledger 安全专家团队定期审核和审查安全协议和程序，以满足网络安全景观不断变化的要求。
- en: Interoperability
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 互操作性
- en: The interoperability feature of Hyperledger is a distinct feature that allows
    its applications to connect and interact with blockchain applications and networks
    built on other platforms like Ethereum. Indeed, even within Hyperledger projects,
    you can use this interoperability to connect one Hyperledger project to another.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 的互操作性功能是一个独特的功能，允许其应用程序连接并与建立在其他平台（如以太坊）上的区块链应用程序和网络进行交互。事实上，即使在
    Hyperledger 项目内部，您也可以使用此互操作性将一个 Hyperledger 项目连接到另一个项目。
- en: Noncryptocurrency architecture
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非加密货币架构
- en: The architecture of Hyperledger does not incorporate cryptocurrency tokens like
    Bitcoin. Since its inception, Hyperledger was designed to be used for enterprise
    application development rather than a place for holding and managing cryptocurrencies.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 的架构不包括像比特币那样的加密货币代币。自其创立以来，Hyperledger 的设计是用于企业应用程序开发，而不是用于持有和管理加密货币的地方。
- en: Application programming interfaces
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序编程接口
- en: With current fast-paced developments in the cloud and emerging technologies
    like artificial intelligence, it is imperative for enterprise blockchain applications
    to have rich APIs to communicate and exchange data with existing systems. In fact,
    an API as a bridge between on-chain and off-chain data is common in enterprise
    blockchain developments. To stay ahead of the game, each project under Hyperledger
    has embedded rich APIs into its architecture. The API feature alone is advancing
    the popularity and adoption of Hyperledger among the developer community.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 随着当前云端和新兴技术（如人工智能）的快速发展，企业区块链应用程序必须具备丰富的 API，以与现有系统进行通信和数据交换。事实上，在企业区块链开发中，作为链上和链下数据之间桥梁的
    API 是常见的。为了保持领先地位，Hyperledger 下的每个项目都将丰富的 API 嵌入其架构中。API 功能本身正在推动 Hyperledger
    在开发者社区中的流行度和采用率。
- en: Refer to the official Hyperledger website and publications for more detail about
    these features. Now let’s take a look at how the Hyperledger framework works.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些功能的更多详细信息，请参阅官方 Hyperledger 网站和出版物。现在让我们来看看 Hyperledger 框架的工作原理。
- en: Overview of Hyperledger
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hyperledger 概述
- en: Hyperledger comes with several essential components. Here we’ll briefly discuss
    the eight business blockchain components of Hyperledger.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 提供了几个重要的组件。在这里，我们将简要讨论 Hyperledger 的八个业务区块链组件。
- en: Consensus layer
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 共识层
- en: The consensus layer has undergone various modifications over time in Hyperledger
    Fabric. First, there was Solo mode, followed by Kafka mode along with Apache ZooKeeper
    to put Fabric networks into production, and now Raft has finally appeared to replace
    Kafka and ZooKeeper. This latest change has given greater power and simplicity
    to Fabric deployments and has brought blockchain technology within reach. It is
    a success for the Hyperledger team.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 中的共识层随时间进行了各种修改。首先是 Solo 模式，然后是 Kafka 模式以及 Apache ZooKeeper
    将 Fabric 网络投入生产，现在 Raft 最终出现以取代 Kafka 和 ZooKeeper。这一最新变化为 Fabric 部署带来了更大的权力和简单性，并使区块链技术变得更加可行。这对
    Hyperledger 团队来说是一个成功。
- en: Smart contract layer
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 智能合约层
- en: Smart contracts, as with consensus, have evolved within the Hyperledger road
    map. In the beginning, no clear definition existed of the supported languages
    within Fabric. The Fabric developer community, for example, removed Java and then
    included it again. Now developers have also included the TypeScript language.
    In previous versions of Fabric, the installation of chaincodes was quite centralized.
    Hyperledger Fabric v2 introduced new governance, allowing for a more decentralized
    way to perform Fabric installations. We discuss this topic in more detail in [Chapter 9](ch09.xhtml#hyperledger_fabric_vtwo_integration),
    where you’ll learn more about new features introduced in v2.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 智能合约，与共识一样，在 Hyperledger 的路线图中不断发展。起初，在 Fabric 中没有关于支持的语言的明确定义。例如，Fabric 开发者社区移除了
    Java，然后又重新包含了它。现在开发者还包含了 TypeScript 语言。在先前的 Fabric 版本中，链码的安装相当集中化。Hyperledger
    Fabric v2 引入了新的治理机制，允许以更分散的方式进行 Fabric 安装。我们在 [第9章](ch09.xhtml#hyperledger_fabric_vtwo_integration)
    中更详细地讨论了这个话题，在那里你将了解有关 v2 中引入的新功能的更多信息。
- en: Communication layer
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通信层
- en: Communication among peers is one of the most sensitive parts in all blockchains,
    especially to avoid attacks by middlemen. For this reason, it is recommended,
    in many cases, to use the Transport Layer Security (TLS) configuration that Fabric
    provides as one more security point in communications.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同行之间的通信是所有区块链中最敏感的部分之一，尤其是为了避免中间人的攻击。因此，在许多情况下建议使用 Fabric 提供的传输层安全性（TLS）配置，作为通信中的另一个安全点。
- en: Data store abstraction
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据存储抽象
- en: 'The way data is stored in Fabric is special. We can store data in either Apache
    CouchDB or by default in LevelDB (you can read more about this in [Chapter 9](ch09.xhtml#hyperledger_fabric_vtwo_integration)).
    CouchDB comes with many more features than LevelDB, and supports the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Fabric 中存储数据的方式很特别。我们可以将数据存储在 Apache CouchDB 中，或者默认情况下存储在 LevelDB 中（你可以在 [第9章](ch09.xhtml#hyperledger_fabric_vtwo_integration)
    中了解更多）。CouchDB 拥有比 LevelDB 更多的功能，并支持以下功能：
- en: More programming languages, including Ruby and PHP
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多的编程语言，包括 Ruby 和 PHP
- en: APIs and other access methods like RESTful HTTP/JSON API
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API 和其他访问方法，如 RESTful HTTP/JSON API
- en: Multisource replication and source-replica replication methods
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多源复制和源-复制复制方法
- en: Crypto abstraction
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密抽象
- en: The cryptography that Fabric uses within its operation is quite complex and
    works perfectly within the entire call flow among network components. Within these
    cryptographic algorithms, we can find ZKP, which, as discussed in [Chapter 1](ch01.xhtml#fundamental_concepts_of_blockchain),
    allows blockchain transactions within the Fabric network to be verified while
    maintaining user anonymity. Fabric uses another cryptographic protocol called
    *Identity Mixer* to protect users’ privacy when signing, authenticating, and transferring
    certified attributes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Fabric 在其运作中使用的加密非常复杂，并且在网络组件之间的整个调用流程中完美运作。在这些加密算法中，我们可以找到 ZKP，正如在[第一章](ch01.xhtml#fundamental_concepts_of_blockchain)中讨论的那样，它允许在
    Fabric 网络中验证区块链交易同时保持用户匿名性。Fabric 还使用另一种加密协议称为*身份混合器*来保护用户在签名、认证和转移认证属性时的隐私。
- en: Identity service
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 身份服务
- en: The identity services available with Fabric are based on fairly configurable
    certificate authority (CA) architectures. Normally, it is advisable to have a
    root CA, and then intermediate CAs that manage the certificates. And if that were
    not enough, Hyperledger also allows the management of all these certificates to
    be carried out with a hardware security module (HSM) connected to the CA.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Fabric 提供的身份服务基于相当可配置的证书颁发机构（CA）架构。通常，建议使用根 CA，然后管理证书的中间 CA。如果这还不够，Hyperledger
    还允许将所有这些证书的管理都通过连接到 CA 的硬件安全模块（HSM）进行。
- en: API
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: API
- en: In our opinion, the API is one of the fundamental pieces of Fabric because it
    is where the use of blockchain data opens up to the outside world. The intuitive
    and convenient Fabric SDKs are used to interconnect the blockchain with any external
    digitized system. Fabric has SDKs in both Node.js and Go as well as Java, and
    with fairly complete documentation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们看来，API 是 Fabric 的基本组成部分之一，因为它是区块链数据向外部世界开放的地方。直观和方便的 Fabric SDK 用于将区块链与任何外部数字化系统相互连接。Fabric
    在 Node.js、Go 和 Java 中都有 SDK，并且有相当完整的文档。
- en: Interoperation
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 互操作性
- en: Since Fabric is continually evolving, we need interoperability among the multiple
    versions of Fabric networks. This is a characteristic that Fabric’s developers
    have decided to maintain, and it provides greater continuity to the projects.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Fabric 不断发展，我们需要在多个版本的 Fabric 网络之间进行互操作。这是 Fabric 的开发人员决定保持的一个特性，它为项目提供了更大的连续性。
- en: Now let’s look at how we can utilize the Hyperledger ecosystem to solve real-world
    business problems. In the next two sections, we cover Hyperledger projects, tools,
    and libraries.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看我们如何利用 Hyperledger 生态系统来解决现实世界的业务问题。在接下来的两节中，我们将介绍 Hyperledger 项目、工具和库。
- en: Overview of Hyperledger Projects
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger 项目概览
- en: 'Since Hyperledger is gaining strong support from the open source community,
    new projects are regularly added to the ecosystem. At the time of this writing,
    six projects are active and ten others are in the incubation stage. Each project
    has unique advantages. The Hyperledger projects, as listed in [Table 2-1](#hyperledger_projects_and_typesbased_on),
    are categorized into four types: distributed ledger (or framework), libraries,
    tools, and domain-specific projects.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由于超级账本得到开源社区的强力支持，新项目定期加入生态系统。在撰写本文时，有六个项目处于活跃状态，另外十个项目处于孵化阶段。每个项目都有独特的优势。如
    [表 2-1](#超级账本项目与类型based_on) 所列，超级账本项目分为四种类型：分布式账本（或框架）、库、工具和领域特定项目。
- en: Table 2-1\. Hyperledger projects and types^([a](ch02.xhtml#ch01fn1))
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 2-1\. 超级账本项目与类型^([a](ch02.xhtml#ch01fn1))
- en: '|  |  | Project type |  |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 项目类型 |  |'
- en: '| --- | --- | --- | --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '|  | Project name | Distributed ledger | Libraries | Tools | Domain-specific
    | Status |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|  | 项目名称 | 分布式账本 | 库 | 工具 | 领域特定 | 状态 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| 1 | Hyperledger Indy | X |  |  |  | Active |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 超级账本Indy | X |  |  |  | 活跃 |'
- en: '| 2 | Hyperledger Fabric | X |  |  |  | Active |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 超级账本织物 | X |  |  |  | 活跃 |'
- en: '| 3 | Hyperledger Aries |  | X |  |  | Active |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 超级账本阿瑞斯 |  | X |  |  | 活跃 |'
- en: '| 4 | Hyperledger Iroha | X |  |  |  | Active |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 超级账本伊洛哈 | X |  |  |  | 活跃 |'
- en: '| 5 | Hyperledger Sawtooth | X |  |  |  | Active |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 超级账本锯齿 | X |  |  |  | 活跃 |'
- en: '| 6 | Hyperledger Besu | X |  |  |  | Active |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 超级账本贝苏 | X |  |  |  | 活跃 |'
- en: '| 7 | Hyperledger Quilt |  | X |  |  | Incubation |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 超级账本披风 |  | X |  |  | 孵化 |'
- en: '| 8 | Hyperledger Ursa |  | X |  |  | Incubation |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 超级账本Ursa |  | X |  |  | 孵化 |'
- en: '| 9 | Hyperledger Transact |  | X |  |  | Incubation |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 超级账本交易 |  | X |  |  | 孵化 |'
- en: '| 10 | Hyperledger Cactus | X |  |  |  | Incubation |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 超级账本仙人掌 | X |  |  |  | 孵化 |'
- en: '| 11 | Hyperledger Caliper |  |  | X |  | Incubation |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 超级账本测量器 |  |  | X |  | 孵化 |'
- en: '| 12 | Hyperledger Cello |  |  | X |  | Incubation |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 超级账本Cello |  |  | X |  | 孵化 |'
- en: '| 13 | Hyperledger Explorer |  |  | X |  | Incubation |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 13 | 超级账本Explorer |  |  | X |  | 孵化 |'
- en: '| 14 | Hyperledger Grid |  |  |  | X | Incubation |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 14 | 超级账本网格 |  |  |  | X | 孵化 |'
- en: '| 15 | Hyperledger Burrow | X |  |  |  | Incubation |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 超级账本埋葬 | X |  |  |  | 孵化 |'
- en: '| 16 | Hyperledger Avalon |  |  | X |  | Incubation |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 16 | 超级账本阿瓦隆 |  |  | X |  | 孵化 |'
- en: '| ^([a](ch02.xhtml#ch01fn1-marker)) Based on information available from the
    Hyperledger website as of August 2021. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| ^([a](ch02.xhtml#ch01fn1-marker)) 基于 2021 年 8 月超级账本网站上的信息。|'
- en: This section covers the seven Hyperledger projects that are in the distributed
    ledger category. Further, we briefly explain Hyperledger Grid, a domain-specific
    project for building blockchain supply chains. [“Overview of Hyperledger Tools
    and Libraries”](#overview_of_hyperledger_tools_and_libra) covers the remaining
    two Hyperledger project categories.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了分布式分类账类别中的七个 Hyperledger 项目。此外，我们简要解释了 Hyperledger Grid，这是一个用于构建区块链供应链的领域特定项目。[“Hyperledger
    工具和库概览”](#overview_of_hyperledger_tools_and_libra) 涵盖了剩余的两个 Hyperledger 项目类别。
- en: Distributed Ledger Frameworks
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分布式分类账框架
- en: Seven projects are frameworks for building blockchain distributed ledgers with
    Hyperledger. These framework projects aim to provide platforms for building a
    variety of distributed ledgers and their components. Each project under the Hyperledger
    umbrella has an implementation of its own, as briefly discussed in this section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 有七个项目是用 Hyperledger 构建区块链分布式分类账的框架。这些框架项目旨在提供用于构建各种分布式分类账及其组件的平台。Hyperledger
    旗下的每个项目都有自己的实现，如本节简要讨论的那样。
- en: Hyperledger Indy
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Indy
- en: A nonprofit group called the Sovrin Foundation originally developed *Hyperledger
    Indy* as a means for individuals to hold and share their identities with whom
    they want. With the increasing popularity of identity management, especially among
    blockchain use cases, Hyperledger Indy gained momentum to become a decentralized
    platform for managing identities. It comes with tools and features essential for
    digital wallet management on a blockchain network or other distributed ledger
    systems. Internet users, for example, can use one single persistent authentication
    (username and password) stored in Indy for accessing and using all sites on the
    internet.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为 Sovrin Foundation 的非营利组织最初开发 *Hyperledger Indy* 作为个人持有并与他们想要分享身份的手段。随着身份管理的日益普及，特别是在区块链用例中，Hyperledger
    Indy 势头增强，成为管理身份的分散式平台。它提供了在区块链网络或其他分布式分类账系统上进行数字钱包管理所需的工具和功能。例如，互联网用户可以使用存储在
    Indy 中的单一持久认证（用户名和密码）来访问和使用互联网上的所有站点。
- en: Hyperledger Fabric
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Fabric
- en: As covered intensively in this book, *Hyperledger Fabric* is currently the most
    popular and vastly adopted project under the Hyperledger umbrella. Fabric comes
    with modular components like peers, smart contracts, and channels that make it
    suitable for building and managing multiledger enterprise-grade blockchain applications.
    Its smart contract can be written (as covered in detail in [Chapter 4](ch04.xhtml#smart_contract_development))
    in multiple languages like Go, JavaScript, and Java.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如本书深入介绍的那样，*Hyperledger Fabric* 目前是 Hyperledger 旗下最受欢迎且被广泛采用的项目。Fabric 拥有像对等体、智能合约和通道这样的模块化组件，使其适用于构建和管理多帐本企业级区块链应用程序。其智能合约可以用多种语言编写（详见
    [第四章](ch04.xhtml#smart_contract_development)）, 如 Go、JavaScript 和 Java。
- en: The architecture of Hyperledger allows for multiple companies to join and conduct
    transactions as a single consortium. Likewise, as business requirements grow,
    companies can become members of multiple consortiums at once. Indeed, policies
    are one of the most powerful components of Fabric; the policies come with configurations
    that allow both simple (consisting of two members) and complex (consisting of
    multiple consortiums, each with multiple members) blockchain networks to operate.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 超级账本的架构允许多家公司加入并作为一个贡献系统进行交易。同样，随着业务需求的增长，公司可以成为多个贡献系统的成员。事实上，政策是 Fabric 中最强大的组件之一；这些政策具有配置，允许简单的（由两个成员组成）和复杂的（由多个贡献系统，每个系统具有多个成员）区块链网络运作。
- en: Note that since this book is about Hyperledger Fabric, we will cover its framework,
    architecture, and components in depth in the next chapter.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于本书是关于超级账本 Fabric，我们将在下一章深入介绍它的框架、架构和组件。
- en: Hyperledger Iroha
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 超级账本 Iroha
- en: '*Hyperledger Iroha* was originally built by a group of Japanese developers
    in C++ for a few mobile use cases. Similar to Indy, Iroha manages digital wallets
    consisting of identities and digital assets. In addition, it offers role-based
    authentication for accessing and controlling digital credentials.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*超级账本 Iroha* 最初由一群日本开发者用 C++ 构建，用于一些移动使用案例。与 Indy 类似，Iroha 管理由身份和数字资产组成的数字钱包。此外，它提供基于角色的身份验证，用于访问和控制数字凭证。'
- en: Hyperledger Sawtooth
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 超级账本 Sawtooth
- en: 'Originally developed by Intel, *Hyperledger Sawtooth* has the advanced proof-of-elapsed-time
    consensus algorithm that can target a large distributed validator population by
    using the minimum resources possible. Unlike Fabric, Sawtooth has a decentralized
    ordering service: whereas Fabric has only a centralized orderer node that is responsible
    for accepting all transactions and adding them to blocks, each node in the Sawtooth
    network can process and approve transactions and subsequently add them to the
    blockchain network. Furthermore, Sawtooth supports both private and permissionless
    networks. Through integration with Hyperledger Burrow, Sawtooth supports the Ethereum
    Virtual Machine.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 最初由英特尔开发，*超级账本 Sawtooth* 具有先进的基于经过时间的证明的共识算法，可以利用最少的资源来定位一个庞大的分布式验证者群体。不同于 Fabric，Sawtooth
    具有去中心化的排序服务：Fabric 只有一个负责接受所有交易并将它们添加到区块的中心化 orderer 节点，而 Sawtooth 网络中的每个节点都可以处理和批准交易，然后将其添加到区块链网络中。此外，Sawtooth
    支持私有网络和无权限网络。通过与超级账本 Burrow 的集成，Sawtooth 支持以太坊虚拟机。
- en: Hyperledger Besu
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 超级账本 Besu
- en: Written in Java, *Hyperledger Besu* runs on both Ethereum public networks and
    private blockchain networks. One of its main features is its support for multiple
    consensus algorithms such as proof of work, proof of authority, and Istanbul Byzantine
    fault tolerance. Its advance permissioning schemes are especially well suited
    for large-scale transition processing seen in enterprise consortium applications.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以Java编写的*Hyperledger Besu*可以在以太坊公共网络和私有区块链网络上运行。其主要特点之一是支持多种共识算法，如工作证明、权威证明和伊斯坦布尔拜占庭容错。其先进的权限方案特别适用于企业联盟应用中看到的大规模过渡处理。
- en: Besu follows the specifications and requirements of the Enterprise Ethereum
    Alliance (EEA). In a nutshell, EEA regulates the interactions among public and
    private applications within an Ethereum network. By following EEA guidelines and
    common interface protocols, Besu makes the communication between private and public
    blockchain applications within Hyperledger possible. We elaborate on Besu in detail
    in [Chapter 10](ch10.xhtml#overview_of_other_hyperledger_projects).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Besu遵循企业以太坊联盟（EEA）的规范和要求。简言之，EEA规范了以太坊网络内公共和私有应用程序之间的交互。通过遵循EEA指南和常见接口协议，Besu使得在Hyperledger内部私有和公共区块链应用程序之间的通信成为可能。我们在[第10章](ch10.xhtml#overview_of_other_hyperledger_projects)中详细阐述了Besu。
- en: Hyperledger Cactus
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Hyperledger Cactus](https://wiki.example.org/hyperledger_cactus)'
- en: Motivated by concerns in the business community concerning the life cycle of
    an existing blockchain platform and whether companies can perform in an ecosystem
    in which changing technological environments are inevitable, *Hyperledger Cactus*
    came into existence. Even though it is still at the incubation stage (as an Apache
    v2–licensed open source project), Cactus—previously known as the Blockchain Integration
    Framework—is capable of securely connecting blockchain networks in such a way
    that the execution of ledger operations is pluggable among multiple blockchain
    networks at once. Such pluggability, based on its SDK, provides an opportunity
    for developers from different networks to connect their DLTs to Cactus.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 受商业界对现有区块链平台生命周期以及企业能否在不可避免地变化的技术环境中运作的担忧所驱使，*Hyperledger Cactus*应运而生。尽管它仍处于孵化阶段（作为一个Apache
    v2许可的开源项目），但Cactus（前身为区块链集成框架）能够安全地连接区块链网络，使账本操作的执行在多个区块链网络之间是可插拔的。基于其SDK的这种可插拔性为来自不同网络的开发人员提供了将其DLT连接到Cactus的机会。
- en: Hyperledger Burrow
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Hyperledger Burrow](https://wiki.example.org/hyperledger_burrow)'
- en: Partially based on EVM specifications, *Hyperledger Burrow* was created to provide
    a permissioned smart contract interpreter to execute EVM and other (for example,
    WebAssembly) smart contracts on a private virtual machine. Using PoS as its consensus
    algorithm, Burrow is capable of transaction finality as well as high-transaction
    throughput. Its two other notable features are on-chain governance, wherein members
    can vote for self-governed upgrades of smart contracts; and setting code execution
    permissions at a low level (for example, per account).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Burrow* 部分基于 EVM 规范而创建，旨在提供一个有权限的智能合约解释器，用于在私有虚拟机上执行 EVM 和其他（例如，WebAssembly）智能合约。使用
    PoS 作为其共识算法，Burrow 能够实现交易最终性以及高交易吞吐量。它的另外两个值得注意的特点是链上治理，成员可以投票决定智能合约的自我治理升级；以及在低级别（例如，每个账户）设置代码执行权限。'
- en: Domain-Specific
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域特定
- en: Now that we reviewed all the framework projects of Hyperledger, we wrap up this
    section by briefly going over Hyperledger Grid, which is the only domain-specific
    project.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经审查了 Hyperledger 的所有框架项目，我们通过简要概述 Hyperledger Grid 来结束本节，这是唯一的领域特定项目。
- en: Hyperledger Grid
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Hyperledger Grid](https://wiki.example.org/hyperledger_grid)'
- en: As supply chain data is securing its place as a prominent use case of blockchain,
    it is attracting the attention of the Hyperledger community and blockchain developers
    to come up with a framework that addresses supply chain solutions. *Hyperledger
    Grid* brings together technologies, frameworks, and libraries to work in concert
    while allowing developers to decide which component best fits their industry and
    market requirements. Grid supports the WebAssembly smart contract engine, which
    provides internal and external Hyperledger integrations. With regard to supply
    chain transactions, Grid supports the transformation, exchange, and tracking of
    assets.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 随着供应链数据正在成为区块链的重要用例，它正在吸引 Hyperledger 社区和区块链开发人员的注意，以提出一个能够解决供应链解决方案的框架。*Hyperledger
    Grid* 将技术、框架和库集成在一起，同时允许开发人员决定哪个组件最适合其行业和市场需求。Grid 支持 WebAssembly 智能合约引擎，提供内部和外部
    Hyperledger 集成。关于供应链交易，Grid 支持资产的转换、交换和跟踪。
- en: Overview of Hyperledger Tools and Libraries
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger 工具和库概述
- en: 'In the previous section, we briefly reviewed the seven Hyperledger framework
    projects for building blockchain distributed ledgers. In this section, we continue
    exploring the remaining projects in two categories: tools and libraries.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们简要回顾了用于构建区块链分布式账本的七个 Hyperledger 框架项目。在本节中，我们继续探索两个类别中的剩余项目：工具和库。
- en: Tools
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具
- en: The tool projects provide a set of utilities to make working with blockchain
    networks easier. These tools handle tasks including performance measurement, on-demand
    deployment, and building a business network with existing business models. The
    following are the four key Hyperledger tool projects.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 工具项目提供了一套工具，使得与区块链网络的工作更加简单。这些工具处理的任务包括性能测量、按需部署以及使用现有商业模型构建商业网络。以下是四个关键的 Hyperledger
    工具项目。
- en: Hyperledger Caliper
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Caliper
- en: '*Hyperledger Caliper* is a benchmarking tool for measuring blockchain performance
    and is written in JavaScript. Caliper comes with multiple performance indices
    for measuring transaction throughput like total transactions per second or transaction
    latency. Using Caliper in conjunction with other Hyperledger distributed ledgers
    like Fabric is highly recommended, especially for enterprise projects, as it provides
    developers with objective metrics for system improvements.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Caliper* 是一个用于衡量区块链性能的基准测试工具，使用 JavaScript 编写。Caliper 提供了多个性能指标来衡量交易吞吐量，如每秒总交易数或交易延迟。建议与
    Fabric 等其他 Hyperledger 分布式账本一起使用 Caliper，特别是对于企业项目，因为它为开发人员提供了系统改进的客观指标。'
- en: Caliper is one of the most important tools to use in Hyperledger projects (even
    in Quorum or Ethereum projects, since it also supports those types of blockchains).
    It offers connectors to various blockchains, which gives it great power and usability.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Caliper 是在 Hyperledger 项目中（甚至在 Quorum 或以太坊项目中，因为它也支持这些类型的区块链）使用的最重要的工具之一。它提供了连接到各种区块链的连接器，这赋予了它巨大的力量和可用性。
- en: Hyperledger Cello
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Cello
- en: '*Hyperledger Cello* brings the on-demand deployment model to blockchains and
    is written in Go. Cello allows blockchain practitioners to manage their blockchains
    more efficiently. For instance, using Cello, the management of network life cycles
    can be automated. Likewise, using Cello, system administrators can manage custom
    configurations of their network. From an implementation perspective, developers
    can use Cello to easily build blockchain-service solutions. In short, it is a
    great resource for all Hyperledger system administrators.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Cello* 将按需部署模型带入区块链，使用 Go 语言编写。Cello 允许区块链从业者更有效地管理他们的区块链。例如，使用
    Cello，可以自动化网络生命周期的管理。同样，系统管理员可以使用 Cello 管理其网络的自定义配置。从实施的角度看，开发人员可以使用 Cello 轻松构建区块链服务解决方案。简而言之，它是所有
    Hyperledger 系统管理员的极佳资源。'
- en: Hyperledger Explorer
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Explorer
- en: Although being deprecated, *Hyperledger Explorer* was originally used as a web
    user interface (UI) dashboard for viewing and managing blockchain transactions
    as well as network information. Tasks such as querying the block, and invoking
    or deploying transactions into blocks, were possible. Explorer was popular among
    nondevelopers and folks who wanted to manage Hyperledger applications and networks
    without writing code or using a command-line interface.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然已被弃用，*Hyperledger Explorer* 最初被用作一个网络用户界面（UI）仪表板，用于查看和管理区块链交易以及网络信息。它支持诸如查询区块，以及在区块中调用或部署交易的任务。Explorer
    在非开发人员和那些希望在不编写代码或使用命令行界面的情况下管理 Hyperledger 应用程序和网络的人群中很受欢迎。
- en: Hyperledger Avalon
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Avalon
- en: Previously known as Trusted Compute Framework, *Hyperledger Avalon* addresses
    issues related to confidentiality and scalability by moving the on-chain processing
    tasks to off-chain systems whose computational power is enormous. While still
    at the incubation stage, if implemented in a blockchain, Avalon monitors and tracks
    off-chain transactions. This will result in better transaction policy enforcement
    and more transparent transaction audits. Once the power of off-chain computational
    power is combined with trust, developers can increase production and boost data
    privacy. One of Avalon’s interesting features is its ability to manage the work-order
    life cycle, from registering workers to submitting and finishing orders. We elaborate
    on Avalon in [Chapter 10](ch10.xhtml#overview_of_other_hyperledger_projects).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 之前被称为受信计算框架，*Hyperledger Avalon* 通过将链上处理任务移至计算能力庞大的离链系统来解决涉密和可扩展性问题。虽然仍处于孵化阶段，如果在区块链中实施，Avalon
    将监视和跟踪离链交易。这将导致更好的交易策略执行和更透明的交易审计。一旦离链计算能力与信任结合，开发者可以提高生产力并增强数据隐私。Avalon 的一个有趣特性是其能够管理工单生命周期，从注册工作者到提交和完成订单。我们在[第10章](ch10.xhtml#overview_of_other_hyperledger_projects)详细介绍了Avalon。
- en: Libraries
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Libraries
- en: The following are four key Hyperledger libraries.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是四个关键的Hyperledger库。
- en: Hyperledger Aries
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Aries
- en: '*Hyperledger Aries* is an application (not a blockchain) for managing digital
    wallets via verifiable credentials so that they can be shared and reused. Its
    peer-to-peer architecture enables blockchain-based data to be shared and communicated
    across multiple blockchain networks or distributed ledger technologies. In addition
    to managing secrets and exchanging verifiable data, Aries allows parties in a
    blockchain to securely exchange confidential information among themselves by using
    its peer-to-peer messaging system. [Chapter 10](ch10.xhtml#overview_of_other_hyperledger_projects)
    covers Aries in more detail.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Aries* 是一个应用程序（不是区块链），用于通过可验证的凭证管理数字钱包，以便可以共享和重用。其点对点架构使得基于区块链的数据能够在多个区块链网络或分布式分类账技术之间共享和通信。除了管理秘密和交换可验证数据外，Aries
    允许区块链中的各方通过其点对点消息系统安全地交换机密信息。[第10章](ch10.xhtml#overview_of_other_hyperledger_projects)更详细地介绍了Aries。'
- en: Hyperledger Quilt
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Quilt
- en: Although it’s at the incubation stage, *Hyperledger Quilt* can act as an intermediary
    between ledger systems to perform Interledger Protocol (ILP) transactions at the
    enterprise level. ILP regulates and manages payments across multiple payment networks
    by connecting distributed ledgers and allowing cross-ledger payment processing.
    The ILP idea was borrowed from the Internet Protocol, as each node or connector
    can route packets of money or an asset across independent networks.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然它目前处于孵化阶段，*Hyperledger Quilt* 可以充当账本系统之间的中介，执行企业级的跨账本协议（ILP）交易。ILP 通过连接分布式账本并允许跨账本支付处理，调节和管理跨多个支付网络的支付。ILP
    的理念借鉴自互联网协议，因为每个节点或连接器都可以在独立网络之间路由资金或资产的数据包。
- en: Hyperledger Ursa
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Ursa
- en: The main purpose of *Hyperledger Ursa* is to boost blockchain network security
    by acting as a shared library of cryptographic data, which prevents people from
    doing redundant cryptographic work. Ursa is currently at the incubation stage;
    however, it comes with two interesting features. First, Ursa is interoperable
    across multiple platforms because the cryptographic verification involves a similar
    protocol on each end of the platforms. Second, Ursa enables modularity through
    sharing common components across multiple networks, eventually leading to more
    modular DLT architectures and adoptions.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Ursa* 的主要目的是通过充当加密数据的共享库来提升区块链网络的安全性，从而防止人们做重复的加密工作。Ursa 目前处于孵化阶段；然而，它具有两个有趣的特点。首先，Ursa
    在多个平台之间是可互操作的，因为加密验证涉及到每个平台端的相似协议。其次，Ursa 通过在多个网络之间共享公共组件实现了模块化，最终导致了更加模块化的 DLT
    架构和采用情况。'
- en: Hyperledger Transact
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hyperledger Transact
- en: '*Hyperledger Transact* is an amazing library for executing transactions with
    smart contracts regardless of the platform for which that contract is written.
    If implemented properly, Transact would be able to integrate smart contract technologies
    like WebAssembly. Although it’s at the incubation stage, Transact will bring about
    a paradigm shift in smart contract development as developers will be able to build
    a smart contract in one language and deploy it simultaneously on multiple platforms.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*Hyperledger Transact* 是一个了不起的库，用于执行智能合约的交易，无论该合约是为哪个平台编写的。如果实施得当，Transact
    将能够集成像 WebAssembly 这样的智能合约技术。虽然它目前处于孵化阶段，但 Transact 将带来智能合约开发的范式转变，因为开发人员将能够使用一种语言构建智能合约，并同时部署到多个平台。'
- en: Specifically, the capability to execute a smart contract without any dependency
    on its platform creates lots of avenues for collaboration, ledger implementation,
    and source code reusability. Smart contracts, which are at the core of a blockchain
    platform, often consume lots of development time and effort. By using Transact
    as a unified interface for smart contract execution, companies and developers
    can reduce their development and product life cycles.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，能够在不依赖于平台的情况下执行智能合约的能力为协作、账本实现和源代码重用创造了许多机会。智能合约是区块链平台的核心，通常需要大量的开发时间和精力。通过使用Transact作为智能合约执行的统一接口，公司和开发人员可以缩短其开发和产品生命周期。
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter started by reviewing the evolution and phases of blockchain and
    then discussed design philosophy, core components, and the architecture of the
    Hyperledger ecosystem. You’ve learned how the various versions, or generations,
    of blockchain have brought about its adoption in both the private and public sectors.
    You also learned the eight key components (consensus layer, smart contract layer,
    communication layer, data store abstraction, crypto abstraction, identity service,
    API, interoperation) embedded in the Hyperledger architecture, making it the top
    choice for building enterprise permissioned blockchain applications.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本章首先回顾了区块链的演变和阶段，然后讨论了超级账本生态系统的设计哲学、核心组件和架构。您已经了解了各个版本或代的区块链是如何促进其在私营和公共部门的采用的。您还了解了嵌入在超级账本架构中的八个关键组件（共识层、智能合约层、通信层、数据存储抽象、加密抽象、身份服务、API、互操作性），使其成为构建企业许可区块链应用的首选。
- en: 'We also briefly reviewed all 16 projects (consisting of six active projects
    and ten others at the incubation stage) that are part of the Hyperledger ecosystem.
    Finally, we highlighted all 16 projects’ unique advantages and various functionalities
    by categorizing them into four types: distributed ledger, libraries, tools, and
    domain-specific projects.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还简要回顾了超级账本生态系统中的所有16个项目（包括六个活跃项目和十个处于孵化阶段的项目）。最后，我们通过将它们分类为分布式账本、库、工具和特定领域项目，突出了所有16个项目的独特优势和各种功能。
- en: The next chapter expands upon the Hyperledger Fabric architecture and components
    to prepare you for building Hyperledger Fabric applications in [Chapter 4](ch04.xhtml#smart_contract_development)
    and onward.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将扩展超级账本（Hyperledger Fabric）的架构和组件，为您在[第四章](ch04.xhtml#smart_contract_development)及以后构建超级账本应用做准备。
